{"version":3,"sources":["../node_modules/@babel/template/lib/index.js","../node_modules/@babel/plugin-transform-classes/lib/transformClass.js","../node_modules/@babel/plugin-transform-classes/lib/inline-createSuper-helpers.js","../node_modules/@babel/parser/lib/index.js","../node_modules/@babel/code-frame/lib/index.js","../node_modules/@babel/template/lib/options.js","../node_modules/@babel/template/lib/parse.js","../node_modules/@babel/highlight/node_modules/color-convert/conversions.js","../node_modules/@babel/template/lib/populate.js","../node_modules/@babel/plugin-transform-classes/lib/index.js","../node_modules/@babel/template/lib/formatters.js","../node_modules/@babel/template/lib/builder.js","../node_modules/@babel/template/lib/string.js","../node_modules/@babel/highlight/lib/index.js","../node_modules/@babel/highlight/node_modules/chalk/index.js","../node_modules/@babel/highlight/node_modules/ansi-styles/index.js","../node_modules/@babel/highlight/node_modules/color-convert/index.js","../node_modules/@babel/highlight/node_modules/color-name/index.js","../node_modules/@babel/highlight/node_modules/color-convert/route.js","../node_modules/@babel/highlight/node_modules/supports-color/browser.js","../node_modules/@babel/highlight/node_modules/chalk/templates.js","../node_modules/@babel/template/lib/literal.js"],"names":["Object","defineProperty","exports","value","default","program","expression","statements","statement","smart","obj","formatters","__esModule","cache","_getRequireWildcardCache","has","get","newObj","hasPropertyDescriptor","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","_interopRequireWildcard","require","_builder","WeakMap","_default","assign","bind","undefined","ast","path","file","builtinClasses","isLoose","assumptions","classState","parent","scope","node","classId","classRef","superFnId","superName","superReturns","isDerived","extendsNative","construct","constructorBody","userConstructor","userConstructorPath","hasConstructor","staticPropBody","body","superThises","pushedConstructor","pushedInherits","protoAlias","methods","instance","hasComputed","list","map","Map","static","setState","newState","findThisesVisitor","_core","traverse","visitors","merge","_helperReplaceSupers","environmentVisitor","ThisExpression","push","buildBody","paths","equals","params","constructor","template","types","blockStatement","unshiftContainer","classMethod","identifier","maybeCreateConstructor","classBodyPaths","isClassProperty","buildCodeFrameError","decorators","isClassMethod","isConstructor","kind","methodPath","objectRef","superRef","constantSuper","refToPreserve","replace","ReturnStatement","getFunctionParent","isArrowFunctionExpression","pushConstructor","pushMethod","pushBody","thisRef","ref","generateDeclaredUidIdentifier","cloneNode","thisPath","parentPath","isMemberExpression","object","replaceWith","callExpression","addHelper","bareSupers","Set","Super","isCallExpression","callee","add","wrapReturn","guaranteedSuperBeforeFinish","size","bareSuper","wrapSuperCall","find","isLoop","isConditional","returnArg","thisExpr","logicalExpression","concat","bodyPaths","length","pop","isReturnStatement","pushContainer","returnStatement","returnPath","argument","verifyConstructor","inherits","pushDescriptors","pushInheritsToBody","props","placement","objectExpression","objectProperty","properties","args","arrayExpression","nullLiteral","lastNonNullIndex","i","isNullLiteral","slice","expressionStatement","bareSuperNode","superIsCallableConstructor","arguments","unshift","thisExpression","isSpreadElement","isIdentifier","name","memberExpression","_helperOptimiseCallExpression","isExpressionStatement","container","assignmentExpression","setClassMethods","generateUidIdentifier","classProto","protoDeclaration","variableDeclaration","variableDeclarator","insertProtoAliasOnce","methodName","computed","isLiteral","func","functionExpression","generator","async","toComputedKey","isStringLiteral","_helperFunctionName","id","expr","inheritsComments","processMethod","descriptor","descKey","isNumericLiteral","isBigIntLiteral","stringLiteral","String","fn","toExpression","method","directives","hasInstanceDescriptors","hasStaticDescriptors","pushConstructorToBody","_inlineCreateSuperHelpers","superClass","hasBinding","buildConstructor","closureParams","closureArgs","arg","_helperAnnotateAsPure","param","generateUidIdentifierBasedOnNode","setupClosureParamsArgs","noClassCalls","isStrict","isInStrictMode","constructorOnly","directive","directiveLiteral","arrowFunctionExpression","classTransformer","functionDeclaration","helperIDs","clone","_unused","helper","CREATE_SUPER","GET_PROTOTYPE_OF","POSSIBLE_CONSTRUCTOR_RETURN","registerDeclaration","beforeExpr","startsExpr","prefix","TokenType","label","conf","this","keyword","rightAssociative","isAssign","postfix","binop","updateContext","keywords$1","createKeyword","options","token","createBinop","types$1","num","bigint","decimal","regexp","string","privateName","eof","bracketL","bracketHashL","bracketBarL","bracketR","bracketBarR","braceL","braceBarL","braceHashL","braceR","braceBarR","parenL","parenR","comma","semi","colon","doubleColon","dot","question","questionDot","arrow","ellipsis","backQuote","dollarBraceL","at","hash","interpreterDirective","eq","incDec","bang","tilde","pipeline","nullishCoalescing","logicalOR","logicalAND","bitwiseOR","bitwiseXOR","bitwiseAND","equality","relational","bitShift","plusMin","modulo","star","slash","exponent","_break","_case","_catch","_continue","_debugger","_do","_else","_finally","_for","_function","_if","_return","_switch","_throw","_try","_var","_const","_while","_with","_new","_this","_super","_class","_extends","_export","_import","_null","_true","_false","_in","_instanceof","_typeof","_void","_delete","lineBreak","lineBreakG","RegExp","source","isNewLine","code","skipWhiteSpace","isWhitespace","Position","line","col","column","SourceLocation","start","end","filename","identifierName","last","stack","CommentsParser","comment","loc","state","trailingComments","leadingComments","elements","takeAllComments","lastElement","j","commentPreviousNode","splice","newTrailingComments","leadingComment","type","firstChild","lastChild","commentStack","lastInStack","adjustCommentsAfterTrailingComma","innerComments","firstTrailingCommentIndex","findIndex","sawUnambiguousESM","ambiguousScriptDifferentAst","plugins","plugin","hasPlugin","ErrorCodes","freeze","SyntaxError","SourceTypeModuleError","ErrorMessages","makeErrorTemplates","AccessorIsGenerator","ArgumentsInClass","AsyncFunctionInSingleStatementContext","AwaitBindingIdentifier","AwaitBindingIdentifierInStaticBlock","AwaitExpressionFormalParameter","AwaitNotInAsyncContext","AwaitNotInAsyncFunction","BadGetterArity","BadSetterArity","BadSetterRestParameter","ConstructorClassField","ConstructorClassPrivateField","ConstructorIsAccessor","ConstructorIsAsync","ConstructorIsGenerator","DeclarationMissingInitializer","DecoratorBeforeExport","DecoratorConstructor","DecoratorExportClass","DecoratorSemicolon","DecoratorStaticBlock","DeletePrivateField","DestructureNamedImport","DuplicateConstructor","DuplicateDefaultExport","DuplicateExport","DuplicateProto","DuplicateRegExpFlags","ElementAfterRest","EscapedCharNotAnIdentifier","ExportBindingIsString","ExportDefaultFromAsIdentifier","ForInOfLoopInitializer","ForOfAsync","ForOfLet","GeneratorInSingleStatementContext","IllegalBreakContinue","IllegalLanguageModeDirective","IllegalReturn","ImportBindingIsString","ImportCallArgumentTrailingComma","ImportCallArity","ImportCallNotNewExpression","ImportCallSpreadArgument","InvalidBigIntLiteral","InvalidCodePoint","InvalidDecimal","InvalidDigit","InvalidEscapeSequence","InvalidEscapeSequenceTemplate","InvalidEscapedReservedWord","InvalidIdentifier","InvalidLhs","InvalidLhsBinding","InvalidNumber","InvalidOrMissingExponent","InvalidOrUnexpectedToken","InvalidParenthesizedAssignment","InvalidPrivateFieldResolution","InvalidPropertyBindingPattern","InvalidRecordProperty","InvalidRestAssignmentPattern","LabelRedeclaration","LetInLexicalBinding","LineTerminatorBeforeArrow","MalformedRegExpFlags","MissingClassName","MissingEqInAssignment","MissingSemicolon","MissingUnicodeEscape","MixingCoalesceWithLogical","ModuleAttributeDifferentFromType","ModuleAttributeInvalidValue","ModuleAttributesWithDuplicateKeys","ModuleExportNameHasLoneSurrogate","ModuleExportUndefined","MultipleDefaultsInSwitch","NewlineAfterThrow","NoCatchOrFinally","NumberIdentifier","NumericSeparatorInEscapeSequence","ObsoleteAwaitStar","OptionalChainingNoNew","OptionalChainingNoTemplate","OverrideOnConstructor","ParamDupe","PatternHasAccessor","PatternHasMethod","PipelineBodyNoArrow","PipelineBodySequenceExpression","PipelineHeadSequenceExpression","PipelineTopicUnused","PrimaryTopicNotAllowed","PrimaryTopicRequiresSmartPipeline","PrivateInExpectedIn","PrivateNameRedeclaration","RecordExpressionBarIncorrectEndSyntaxType","RecordExpressionBarIncorrectStartSyntaxType","RecordExpressionHashIncorrectStartSyntaxType","RecordNoProto","RestTrailingComma","SloppyFunction","StaticPrototype","StrictDelete","StrictEvalArguments","StrictEvalArgumentsBinding","StrictFunction","StrictNumericEscape","StrictOctalLiteral","StrictWith","SuperNotAllowed","SuperPrivateField","TrailingDecorator","TupleExpressionBarIncorrectEndSyntaxType","TupleExpressionBarIncorrectStartSyntaxType","TupleExpressionHashIncorrectStartSyntaxType","UnexpectedArgumentPlaceholder","UnexpectedAwaitAfterPipelineBody","UnexpectedDigitAfterHash","UnexpectedImportExport","UnexpectedKeyword","UnexpectedLeadingDecorator","UnexpectedLexicalDeclaration","UnexpectedNewTarget","UnexpectedNumericSeparator","UnexpectedPrivateField","UnexpectedReservedWord","UnexpectedSuper","UnexpectedToken","UnexpectedTokenUnaryExponentiation","UnsupportedBind","UnsupportedDecoratorExport","UnsupportedDefaultExport","UnsupportedImport","UnsupportedMetaProperty","UnsupportedParameterDecorator","UnsupportedPropertyDecorator","UnsupportedSuper","UnterminatedComment","UnterminatedRegExp","UnterminatedString","UnterminatedTemplate","VarRedeclaration","YieldBindingIdentifier","YieldInParameter","ZeroDigitNumericSeparator","SourceTypeModuleErrorMessages","ImportMetaOutsideModule","ImportOutsideModule","messages","templates","keys","forEach","reasonCode","ParserError","pos","startLoc","lastTokStart","lastTokStartLoc","endLoc","lastTokEnd","lastTokEndLoc","input","offset","match","lineStart","lastIndex","exec","index","getLineInfo","raiseWithData","getLocationForPosition","message","_","errorRecovery","errors","error","_raise","data","errorTemplate","errorContext","err","isLookahead","TokContext","isExpr","preserveSpace","override","braceStatement","braceExpression","recordExpression","templateQuasi","parenStatement","parenExpression","p","readTmplToken","functionStatement","context","out","curContext","exprAllowed","prevType","allowed","braceIsBlock","statementParens","hasPrecedingLineBreak","b_stat","nonASCIIidentifierStartChars","nonASCIIidentifierChars","nonASCIIidentifierStart","nonASCIIidentifier","astralIdentifierStartCodes","astralIdentifierCodes","isInAstralSet","isIdentifierStart","test","fromCharCode","isIdentifierChar","reservedWords","keywords","reservedWordsStrictSet","reservedWordsStrictBindSet","isReservedWord","word","inModule","isStrictReservedWord","isStrictBindOnlyReservedWord","isStrictBindReservedWord","isKeyword","keywordRelationalOperator","SCOPE_CLASS","SCOPE_TS_MODULE","BIND_FLAGS_CLASS","BIND_FLAGS_TS_ENUM","BIND_FLAGS_TS_CONST_ENUM","BIND_FLAGS_TS_EXPORT_ONLY","BIND_FLAGS_FLOW_DECLARE_FN","BIND_TS_AMBIENT","BIND_NONE","Scope","flags","var","lexical","functions","ScopeHandler","raise","scopeStack","undefinedExports","undefinedPrivateNames","currentVarScope","currentThisScope","treatFunctionsAsVarInScope","currentScope","createScope","bindingType","checkRedeclarationInScope","maybeExportDefined","SCOPE_PROGRAM","delete","isRedeclaredInScope","indexOf","FlowScope","declareFunctions","FlowScopeHandler","includes","reservedTypes","FlowErrors","AmbiguousConditionalArrow","AmbiguousDeclareModuleKind","AssignReservedType","DeclareClassElement","DeclareClassFieldInitializer","DuplicateDeclareModuleExports","EnumBooleanMemberNotInitialized","EnumDuplicateMemberName","EnumInconsistentMemberValues","EnumInvalidExplicitType","EnumInvalidExplicitTypeUnknownSupplied","EnumInvalidMemberInitializerPrimaryType","EnumInvalidMemberInitializerSymbolType","EnumInvalidMemberInitializerUnknownType","EnumInvalidMemberName","EnumNumberMemberNotInitialized","EnumStringMemberInconsistentlyInitailized","GetterMayNotHaveThisParam","ImportTypeShorthandOnlyInPureImport","InexactInsideExact","InexactInsideNonObject","InexactVariance","InvalidNonTypeImportInDeclareModule","MissingTypeParamDefault","NestedDeclareModule","NestedFlowComment","OptionalBindingPattern","SetterMayNotHaveThisParam","SpreadVariance","ThisParamAnnotationRequired","ThisParamBannedInConstructor","ThisParamMayNotBeOptional","ThisParamMustBeFirst","ThisParamNoDefault","TypeBeforeInitializer","TypeCastInPattern","UnexpectedExplicitInexactInObject","UnexpectedReservedType","UnexpectedReservedUnderscore","UnexpectedSpaceBetweenModuloChecks","UnexpectedSpreadType","UnexpectedSubtractionOperand","UnexpectedTokenAfterTypeParameter","UnexpectedTypeParameterBeforeAsyncArrowFunction","UnsupportedDeclareExportKind","UnsupportedStatementInDeclareModule","UnterminatedFlowComment","hasTypeImportKind","importKind","isMaybeDefaultImport","exportSuggestions","const","let","interface","FLOW_PRAGMA_REGEX","entities","quot","amp","apos","lt","gt","nbsp","iexcl","cent","pound","curren","yen","brvbar","sect","uml","copy","ordf","laquo","not","shy","reg","macr","deg","plusmn","sup2","sup3","acute","micro","para","middot","cedil","sup1","ordm","raquo","frac14","frac12","frac34","iquest","Agrave","Aacute","Acirc","Atilde","Auml","Aring","AElig","Ccedil","Egrave","Eacute","Ecirc","Euml","Igrave","Iacute","Icirc","Iuml","ETH","Ntilde","Ograve","Oacute","Ocirc","Otilde","Ouml","times","Oslash","Ugrave","Uacute","Ucirc","Uuml","Yacute","THORN","szlig","agrave","aacute","acirc","atilde","auml","aring","aelig","ccedil","egrave","eacute","ecirc","euml","igrave","iacute","icirc","iuml","eth","ntilde","ograve","oacute","ocirc","otilde","ouml","divide","oslash","ugrave","uacute","ucirc","uuml","yacute","thorn","yuml","OElig","oelig","Scaron","scaron","Yuml","fnof","circ","Alpha","Beta","Gamma","Delta","Epsilon","Zeta","Eta","Theta","Iota","Kappa","Lambda","Mu","Nu","Xi","Omicron","Pi","Rho","Sigma","Tau","Upsilon","Phi","Chi","Psi","Omega","alpha","beta","gamma","delta","epsilon","zeta","eta","theta","iota","kappa","lambda","mu","nu","xi","omicron","pi","rho","sigmaf","sigma","tau","upsilon","phi","chi","psi","omega","thetasym","upsih","piv","ensp","emsp","thinsp","zwnj","zwj","lrm","rlm","ndash","mdash","lsquo","rsquo","sbquo","ldquo","rdquo","bdquo","dagger","Dagger","bull","hellip","permil","prime","Prime","lsaquo","rsaquo","oline","frasl","euro","image","weierp","real","trade","alefsym","larr","uarr","rarr","darr","harr","crarr","lArr","uArr","rArr","dArr","hArr","forall","part","exist","empty","nabla","isin","notin","ni","prod","sum","minus","lowast","radic","prop","infin","ang","and","or","cap","cup","int","there4","sim","cong","asymp","ne","equiv","le","ge","sub","sup","nsub","sube","supe","oplus","otimes","perp","sdot","lceil","rceil","lfloor","rfloor","lang","rang","loz","spades","clubs","hearts","diams","HEX_NUMBER","DECIMAL_NUMBER","JsxErrors","AttributeIsEmpty","MissingClosingTagElement","MissingClosingTagFragment","UnexpectedSequenceExpression","UnsupportedJsxValue","UnterminatedJsxContent","UnwrappedAdjacentJSXElements","isFragment","getQualifiedJSXName","namespace","property","Error","j_oTag","j_cTag","j_expr","jsxName","jsxText","jsxTagStart","jsxTagEnd","TypeScriptScope","enums","constEnums","classes","exportOnlyBindings","TypeScriptScopeHandler","isConst","wasConst","ProductionParameterHandler","stacks","currentFlags","functionFlags","isAsync","isGenerator","nonNull","x","assert","TSErrors","AbstractMethodHasImplementation","AccesorCannotDeclareThisParameter","AccesorCannotHaveTypeParameters","ClassMethodHasDeclare","ClassMethodHasReadonly","ConstructorHasTypeParameters","DeclareAccessor","DeclareClassFieldHasInitializer","DeclareFunctionHasImplementation","DuplicateAccessibilityModifier","DuplicateModifier","EmptyHeritageClauseType","EmptyTypeArguments","EmptyTypeParameters","ExpectedAmbientAfterExportDeclare","ImportAliasHasImportType","IncompatibleModifiers","IndexSignatureHasAbstract","IndexSignatureHasAccessibility","IndexSignatureHasDeclare","IndexSignatureHasOverride","IndexSignatureHasStatic","InvalidModifierOnTypeMember","InvalidModifiersOrder","InvalidTupleMemberLabel","MixedLabeledAndUnlabeledElements","NonAbstractClassHasAbstractMethod","NonClassMethodPropertyHasAbstractModifer","OptionalTypeBeforeRequired","OverrideNotInSubClass","PatternIsOptional","PrivateElementHasAbstract","PrivateElementHasAccessibility","ReadonlyForMethodSignature","SetAccesorCannotHaveOptionalParameter","SetAccesorCannotHaveRestParameter","SetAccesorCannotHaveReturnType","StaticBlockCannotHaveModifier","TypeAnnotationAfterAssign","TypeImportCannotSpecifyDefaultAndNamed","UnexpectedParameterModifier","UnexpectedReadonly","UnexpectedTypeAnnotation","UnexpectedTypeCastInParameter","UnsupportedImportTypeArgument","UnsupportedParameterPropertyKind","UnsupportedSignatureParameterKind","tsIsAccessModifier","modifier","placeholder","PlaceHolderErrors","ClassNameIsRequired","some","Array","isArray","getPluginOption","option","PIPELINE_PROPOSALS","RECORD_AND_TUPLE_SYNTAX_TYPES","mixinPlugins","estree","pattern","regex","e","estreeParseLiteral","bigInt","BigInt","parseLiteral","stmt","startNodeAt","extra","expressionValue","raw","finishNodeAt","isObjectProperty","checkDeclaration","_stmt$expression$extr","parenthesized","addExtra","directiveStatements","d","directiveToStmt","classBody","allowsDirectSuper","parseMethod","typeParameters","refExpressionErrors","estreeParseRegExpLiteral","estreeParseBigIntLiteral","estreeParseDecimalLiteral","convertPrivateNameToPrivateIdentifier","startPos","allowExpression","isMethod","allowDirectSuper","inClassScope","funcNode","startNode","finishNode","propertyNode","isPattern","isAccessor","shorthand","isLHS","toAssignable","optional","_node$arguments$","attributes","exported","specifiers","base","noCalls","optionalChainMember","substring","stop","chain","startNodeAtNode","jsx","chunkStart","ch","charCodeAt","finishToken","jsxReadEntity","jsxReadNewLine","normalizeCRLF","curLine","quote","entity","str","count","substr","fromCodePoint","parseInt","unexpected","next","jsxParseIdentifier","eat","jsxParseNamespacedName","newNode","jsxParseExpressionContainer","parseExprAtom","parseExpression","expect","jsxParseEmptyExpression","parseMaybeAssignAllowIn","jsxParseAttributeValue","jsxParseElementName","jsxParseOpeningElementAfterName","jsxParseAttribute","selfClosing","children","openingElement","jsxParseOpeningElementAt","closingElement","contents","jsxParseClosingElementAt","jsxParseElementAt","jsxParseSpreadChild","openingFragment","closingFragment","isRelational","jsxParseElement","inPropertyName","jsxReadToken","jsxReadWord","jsxReadString","flow","flowPragma","val","matches","tok","oldInType","inType","flowParseType","moduloPos","expectContextual","predicate","flowParsePredicate","flowParseInterfaceish","parseIdentifier","typeNode","typeContainer","flowParseTypeParameterDeclaration","tmp","flowParseFunctionTypeParams","rest","flowParseTypeAndPredicateInitialiser","returnType","typeAnnotation","resetEndLocation","semicolon","declareName","insideModule","flowParseDeclareClass","flowParseDeclareFunction","flowParseDeclareVariable","eatContextual","flowParseDeclareModuleExports","flowParseDeclareModule","isContextual","flowParseDeclareTypeAlias","flowParseDeclareOpaqueType","flowParseDeclareInterface","flowParseDeclareExportDeclaration","flowParseTypeAnnotatableIdentifier","BIND_KIND_VALUE","enter","bodyNode","parseImport","flowParseDeclare","exit","hasModuleExport","bodyElement","declaration","isEsModuleType","isLet","suggestion","parseExport","exportKind","flowParseTypeAnnotation","flowParseTypeAlias","flowParseOpaqueType","isClass","flowParseRestrictedIdentifier","extends","implements","mixins","flowParseInterfaceExtends","flowParseObjectType","allowStatic","allowExact","allowSpread","allowProto","allowInexact","flowParseQualifiedTypeIdentifier","flowParseTypeParameterInstantiation","liberal","checkReservedType","right","flowParseTypeInitialiser","declare","supertype","impltype","requireDefault","nodeStart","variance","flowParseVariance","ident","bound","defaultRequired","typeParameter","flowParseTypeParameter","expectRelational","oldNoAnonFunctionType","noAnonFunctionType","flowParseTypeOrImplicitInstantiation","isStatic","lookahead","flowParseObjectPropertyKey","flowParseObjectTypeMethodish","flowParseFunctionTypeParam","valueNode","endDelim","exact","callProperties","indexers","internalSlots","inexact","protoStart","inexactStart","flowParseObjectTypeInternalSlot","flowParseObjectTypeIndexer","flowParseObjectTypeCallProperty","propOrInexact","flowParseObjectTypeProperty","flowObjectTypeSemicolon","proto","flowCheckGetterSetterParams","paramCount","node2","qualification","flowParsePrimaryType","first","lh","isThis","checkNotUnderscore","flowParseGenericType","isGroupedType","flowParseInterfaceType","flowIdentToTypeAnnotation","flowParseTupleType","reinterpretTypeAsFunctionTypeParam","flowParseTypeofType","seenOptionalIndexedAccess","canInsertSemicolon","elementType","objectType","indexType","flowParsePrefixType","flowParsePostfixType","flowParseAnonFunctionWithoutParens","flowParseIntersectionType","flowParseUnionType","allowPrimitiveOverride","allowExpressionBody","forwardNoArrowParamsConversionAt","topLevel","strict","flowParseInterface","shouldParseEnums","flowParseEnumDeclaration","isValidDirective","refNeedsArrowPos","result","tryParse","failState","originalNoArrowAt","noArrowAt","tryParseConditionalConsequent","consequent","failed","getArrowLikeExpressions","valid","invalid","alternate","parseMaybeAssign","noArrowParamsConversionAt","disallowInvalid","arrows","finishArrowValidation","list1","list2","partition","every","isAssignable","_node$extra","toAssignableList","trailingComma","SCOPE_FUNCTION","parse","typeCastNode","decl","declarationNode","parseExportSpecifiers","parseExportFrom","hasNamespace","isStatement","optionalId","member","parseClassMemberFromModifier","fullWord","isIterator","finishOp","current","isIteratorStart","readIterator","isBinding","element","operator","typeCastToParameter","exprList","trailingCommaPos","isParenthesizedExpr","_expr$extra","close","canBePattern","isTuple","maybeInArrowParameters","toReferencedList","isThisParam","superTypeParameters","implemented","getObjectOrClassMethodParams","isPrivateNameAllowed","left","specifier","contextDescription","local","checkLVal","firstIdentLoc","firstIdent","parseModuleExportName","specifierTypeKind","isLookaheadContextual","as_ident","imported","__clone","nodeIsTypeImport","specifierIsTypeImport","checkReservedWord","allowModifiers","afterLeftParse","_jsx","_jsx2","_jsx3","abort","_arrowExpression$extr","arrowExpression","resetStartLocationFromNode","maybeUnwrapTypeCastExpression","aborted","thrown","allowDuplicates","isArrowFunction","canBeArrow","parseCallExpressionArguments","parseAsyncArrowWithTypeParameters","subscriptState","isLookaheadToken_lt","typeArguments","finishCallExpression","shouldParseTypes","flowParseTypeParameterInstantiationCallOrNew","targs","parseFunctionParams","parseArrow","parseArrowExpression","hasFlowComment","nextToken","fileNode","skipFlowComment","hasFlowCommentCompletion","shiftToFirstNonWhiteSpace","ch2","ch3","enumName","memberName","toUpperCase","suppliedType","explicitType","endOfInit","literal","parseBooleanLiteral","init","flowEnumMemberInit","expectedType","flowEnumErrorInvalidMemberInitializer","seenNames","members","booleanMembers","numberMembers","stringMembers","defaultedMembers","hasUnknownMembers","memberNode","flowEnumMemberRaw","flowEnumErrorInvalidMemberName","flowEnumErrorDuplicateMemberName","flowEnumCheckExplicitTypeMismatch","flowEnumErrorBooleanMemberNotInitialized","flowEnumErrorNumberMemberNotInitialized","initializedMembers","flowEnumErrorStringMemberInconsistentlyInitailized","flowEnumErrorInvalidExplicitType","nameLoc","flowEnumParseExplicitType","flowEnumMembers","flowEnumStringMembers","boolsLen","numsLen","strsLen","defaultedLen","flowEnumErrorInconsistentMemberValues","flowEnumBody","nextTokenStart","afterNext","typescript","isLiteralPropertyName","tsTokenCanFollowModifier","allowedModifiers","tsTryParse","tsNextTokenCanFollowModifier","modified","disallowedModifiers","enforceOrder","before","after","incompatible","mod1","mod2","tsParseModifier","accessibility","parseElement","tsIsListTerminator","tsParseDelimitedListWorker","expectSuccess","bracket","skipFirstToken","tsParseDelimitedList","qualifier","tsParseEntityName","tsParseTypeArguments","allowReservedWords","typeName","lhs","parameterName","tsParseTypeAnnotation","asserts","exprName","tsParseImportType","parseIdentifierName","constraint","tsEatThenParseType","tsParseTypeParameters","tsParseBracketedList","tsParseTypeParameter","tsParseTypeReference","returnToken","signature","returnTokenRequired","tsTryParseTypeParameters","parameters","tsParseBindingListForSignature","tsParseTypeOrTypePredicateAnnotation","parseBindingList","isLineTerminator","tsFillSignature","tsParseTypeMemberSemicolon","tsLookAhead","tsIsUnambiguouslyIndexSignature","tsTryParseTypeAnnotation","readonly","nodeAny","firstParameter","tsParseSignatureMember","createIdentifier","tsParsePropertyOrMethodSignature","tsParseModifiers","idx","tsTryParseIndexSignature","parsePropertyName","tsParseObjectTypeMembers","tsParseList","tsParseTypeMember","tsIsIdentifier","tsExpectThenParseType","tsParseMappedTypeParameter","nameType","tsParseType","tsTryParseType","elementTypes","tsParseTupleElementType","seenOptionalElement","labeledElements","elementNode","_labeledElements","isLabeled","labeledNode","optionalTypeNode","restNode","abstract","parseTemplate","thisKeyword","tsParseThisTypeNode","tsParseThisTypePredicate","keywordTypeFromName","lookaheadCharCode","tsParseLiteralTypeNode","parseMaybeUnary","tsParseThisTypeOrThisTypePredicate","tsParseTypeQuery","tsIsStartOfMappedType","tsParseMappedType","tsParseTypeLiteral","tsParseTupleType","tsParseParenthesizedType","tsParseTemplateLiteralType","tsParseNonArrayType","tsParseTypeOperatorOrHigher","tsCheckTypeAnnotationForReadOnly","kw","tsParseTypeOperator","tsParseInferType","tsParseArrayTypeOrHigher","parseConstituentType","hasLeadingOperator","tsParseUnionOrIntersectionType","tsParseIntersectionTypeOrHigher","tsIsUnambiguouslyStartOfFunctionType","braceStackCounter","tsSkipParameterStart","tsInType","t","tsParseTypePredicateAsserts","thisTypePredicate","typePredicateVariable","tsParseTypePredicatePrefix","containsEsc","eatColon","tsParseNonConditionalType","checkType","extendsType","trueType","falseType","tsIsStartOfFunctionType","tsParseFunctionOrConstructorType","isAbstractConstructorSignature","tsParseUnionTypeOrHigher","tsTryNextParseConstantContext","tsNextThenParseType","originalStart","delimitedList","tsParseExpressionWithTypeArguments","tsParseHeritageClause","cb","oldContext","tsDoThenParseType","initializer","BIND_TS_ENUM","tsParseEnumMember","parseBlockOrModuleBlockBody","nested","inner","tsParseModuleOrNamespaceDeclaration","prodParam","tsParseModuleBlock","global","isExport","moduleReference","tsParseModuleReference","tsIsExternalModuleReference","tsParseExternalModuleReference","f","res","nany","starttype","tsInAmbientContext","parseFunctionStatement","parseClass","tsParseEnumDeclaration","parseVarStatement","tsParseAmbientExternalModuleDeclaration","tsParseDeclaration","tsTryParseDeclare","mod","tsCheckLineTerminator","tsParseAbstractDeclaration","tsParseInterfaceDeclaration","tsParseTypeAliasDeclaration","hasFollowingLineBreak","oldMaybeInArrowParameters","tsTryParseAndCatch","tsTryParseTypeOrTypePredicateAnnotation","tsInNoContext","tsIsDeclarationStart","parseAccessModifier","parseMaybeDefault","parseAssignableListItemTypes","elt","pp","parameter","bodilessType","isAmbientContext","items","isInParens","tsCheckForInvalidTypeCasts","nonNullExpression","atPossibleAsyncArrow","asyncArrowFn","tsTryParseGenericAsyncArrowFunction","parseTaggedTemplateExpression","leftStartPos","leftStartLoc","minPrec","reScan_lt_gt","parseExprOp","checkKeywords","ahead","tsParseImportEqualsDeclaration","importNode","isAbstractClass","cls","modifiers","invalidModifersForStaticBlocks","callParseClassMemberWithIsStatic","tsHasSomeModifiers","parseClassStaticBlock","parseClassMemberWithIsStatic","inAbstractClass","hadSuperClass","methodOrProp","tsParseExpressionStatement","isDeclare","shouldParseExportDeclaration","tsTryParseExportDeclaration","resetStartLocation","definite","parseClassPropertyAnnotation","_typeCast","_typeCast2","_jsx4","_typeCast3","typeCast","_typeParameters","tsParseTypeAssertion","toAssignableParenthesizedExpression","_expr$extra2","readToken_lt_gt","baseCount","firstParam","oldIsAmbientContext","oldInAbstractClass","hasBody","shouldParseAsAmbientContext","v8intrinsic","v8IntrinsicStart","parseV8Intrinsic","placeholders","expectedNode","assertNoSpace","finishPlaceholder","isFinished","parsePlaceholder","parseStatement","takeDecorators","oldStrict","parseClassId","parseClassSuper","parseClassBody","expectPlugin","isUnparsedContextual","startsWith","nextTokenStartSince","filter","hasStarImport","maybeParseStarImportSpecifier","parseNamedImportSpecifiers","parseImportSource","mixinPluginNames","defaultOptions","sourceType","sourceFilename","startLine","allowAwaitOutsideFunction","allowReturnOutsideFunction","allowImportExportEverywhere","allowSuperOutsideMethod","allowUndeclaredExports","strictMode","ranges","tokens","createParenthesizedExpressions","State","potentialArrowAt","inPipeline","topicContext","maxNumOfResolvableTopics","maxTopicIndex","soloAwait","inFSharpPipelineDirectBody","labels","decoratorStack","comments","strictErrors","exportedIdentifiers","tokensLength","curPosition","skipArrays","_isDigit","VALID_REGEX_FLAGS","forbiddenNumericSeparatorSiblings","decBinOct","hex","allowedNumericSeparatorSiblings","oct","bin","dec","Token","Tokenizer","checkKeywordEscapes","pushToken","old","curr","cp","trail","clear","skipSpace","getTokenFromCode","codePointAtPos","block","text","addComment","pushComment","startSkip","loop","skipBlockComment","skipLineComment","readToken_interpreter","nextPos","readWord1","readNumber","readRegexp","width","next2","readToken_dot","readToken_question","readRadixNumber","readString","readToken_slash","readToken_mult_modulo","readToken_pipe_amp","readToken_caret","readToken_plus_min","readToken_eq_excl","readToken_numberSign","readWord","escaped","inClass","charAt","content","mods","char","charCode","radix","len","forceLen","allowNumSeparator","forbiddenSiblings","allowedSiblings","total","Infinity","prev","Number","isNaN","isBigInt","readInt","startsWithDot","isFloat","isDecimal","hasExponent","isOctal","hasLeadingZero","integer","recordStrictModeErrors","underscorePos","parseFloat","throwOnInvalid","codePos","readHexChar","readEscapedChar","containsInvalid","inTemplate","readCodePoint","octalStr","octal","n","firstCode","escStart","identifierCheck","esc","update","ClassScope","privateNames","loneAccessors","ClassScopeHandler","oldClassScope","from","classScope","redefined","CLASS_ELEMENT_KIND_GETTER","accessor","ExpressionScope","ArrowHeadParsingScope","iterator","ExpressionScopeHandler","isCertainlyParameterDeclaration","canBeArrowParameterDeclaration","recordDeclarationError","iterateErrors","clearDeclarationError","newExpressionScope","UtilParser","op","nameStart","nameEnd","allowAsi","messageOrType","missingPlugin","names","join","oldState","abortSignal","andThrow","shorthandAssign","doubleProto","isPrivateName","oldLabels","oldExportedIdentifiers","oldInModule","oldScope","getScopeHandler","oldProdParam","oldExpressionScope","expressionScope","paramFlags","ExpressionErrors","Node","parser","range","unwrapParenthesizedExpression","loopLabel","switchLabel","loneSurrogate","Parser","opts","getOptions","initializeScopes","pluginMap","pluginsMap","enterInitialScopes","parseTopLevel","parseProgram","hashEndPos","hashEndLoc","babel7CompatTokens","interpreter","parseInterpreterDirective","parseBlockBody","isLetKeyword","nextCh","parseDecorators","parseStatementContent","parseBreakContinueStatement","parseDebuggerStatement","parseDoStatement","parseForStatement","parseIfStatement","parseReturnStatement","parseSwitchStatement","parseThrowStatement","parseTryStatement","parseWhileStatement","parseWithStatement","parseBlock","parseEmptyStatement","nextTokenCharCode","assertModuleNodeAllowed","isAsyncFunction","maybeName","parseLabeledStatement","parseExpressionStatement","allowExport","currentContextDecorators","decorator","parseDecorator","canHaveLeadingDecorator","expectOnePlugin","parseMaybeDecoratorArguments","parseExprSubscripts","isBreak","verifyBreakContinue","lab","withTopicForbiddingContext","parseHeaderExpression","awaitAt","isAwaitAllowed","parseFor","startsWithLet","parseVar","declarations","parseForIn","startsWithUnescapedName","isForOf","description","checkExpressionErrors","declarationPosition","parseFunction","hasReturn","discriminant","cur","sawDefault","cases","isCase","parseBindingAtom","simple","handler","clause","parseCatchClauseParam","finalizer","statementStart","allowDirectives","createNewLexicalScope","afterBlockParse","hasStrictModeDirective","parsedNonDirective","stmtToDirective","setStrict","isForIn","await","isFor","isTypescript","parseVarId","parseMaybeAssignDisallowIn","isHangingStatement","requireId","initFunction","parseFunctionId","parseFunctionBodyAndFinish","registerFunctionStatementId","treatFunctionsAsVar","hadConstructor","parseClassMember","pushClassMethod","parseClassProperty","publicMethod","privateMethod","publicProp","privateProp","publicMember","parseClassElementName","pushClassPrivateMethod","isNonstaticConstructor","isPrivate","isSimple","maybeQuestionTokenStart","parsePostMemberNameModifiers","pushClassPrivateProperty","pushClassProperty","checkGetterSetterParams","_member$decorators","parseClassPrivateProperty","declarePrivateName","getPrivateNameSV","CLASS_ELEMENT_KIND_SETTER","parseInitializer","hasDefault","maybeParseExportDefaultSpecifier","parseAfterDefault","hasStar","eatExportStar","maybeParseExportNamespaceSpecifier","parseAfterNamespace","isFromRequired","hasDeclaration","hasSpecifiers","maybeParseExportNamedSpecifiers","maybeParseExportDeclaration","checkExport","parseExportDefaultExpression","isExportDefaultSpecifier","parseExportDeclaration","FUNC_STATEMENT","l","hasFrom","nextAfterFrom","assertions","maybeParseImportAssertions","checkNames","isDefault","isFrom","checkDuplicateExports","_declaration$extra","exportedName","checkLocalExport","elem","nodes","surrogate","toString","parseNext","maybeParseDefaultImportSpecifier","maybeParseModuleAttributes","attrs","attrNames","keyName","parseAssertEntries","shouldParseDefaultImport","parseImportSpecifierLocal","parseImportSpecifier","isRecord","protoRef","isObjectMethod","used","disallowIn","disallowInAnd","parseExpressionBase","allowInAnd","expressions","ownExpressionErrors","hasYield","parseYield","parseMaybeConditional","parseExprOps","shouldExitDescending","parseConditional","prec","hasIn","checkPipelineAtInfixOperator","logical","coalesce","hasAwait","parseExprOpRightExpr","nextOp","withTopicPermittingContext","parseSmartPipelineBody","parseExprOpBaseRightExpr","withSoloAwaitPermittingContext","parseFSharpPipelineBody","sawUnary","isAwait","parseAwait","checkExponentialAfterUnary","parseModuleExpression","isDelete","hasPropertyAsPrivateName","parseUpdate","isAmbiguousAwait","raiseOverwrite","parseSubscripts","maybeAsyncArrow","parseSubscript","parseBind","parseCoverCallAndAsyncArrowHead","parseMember","parsePrivateName","usePrivateName","parseNoCallExpr","shouldParseAsyncArrow","validateAsPattern","parseAsyncArrowFromCallExpression","toReferencedArguments","toReferencedListDeep","tag","quasi","possibleAsyncArrow","dynamicImport","allowPlaceholder","nodeForExtra","elts","oldInFSharpPipelineDirectBody","parseExprListItem","_call$extra","parseSuper","parseImportMetaProperty","parseAsyncArrowUnaryFunction","parseDo","parseParenAndDistinguishExpression","parseArrayLike","parseObjectLike","parseFunctionOrFunctionSent","parseNewOrNewTarget","primaryTopicReferenceIsAllowedInCurrentTopicContext","registerTopicReference","lookaheadCh","codePointAt","allowSuper","meta","parseMetaProperty","propertyName","spreadStart","optionalCommaStart","innerStartPos","innerStartLoc","spreadNodeStartPos","spreadNodeStartLoc","parseParenItem","parseRestBinding","checkCommaAfterRest","innerEndPos","innerEndLoc","arrowNode","shouldParseArrow","metaProp","inNonArrowFunction","parseNew","isOptionalChain","parseNewArguments","parseExprList","isTagged","cooked","tail","curElt","parseTemplateElement","quasis","parseTemplateSubstitution","propHash","create","parsePropertyDefinition","checkProto","parseSpread","maybeAsyncOrAccessorProp","parseObjPropValue","_params","getGetterSetterExpectedParamCount","parseObjectMethod","parseObjectProperty","oldInPropertyName","parseMaybePrivateName","setArrowFunctionParameters","parseFunctionBody","isExpression","checkParams","nonSimple","isSimpleParamList","errorPos","strictModeChanged","checkClashes","allowEmpty","inStaticBlock","recordAsyncArrowParametersError","inFunction","recordParameterInitializerError","delegate","childExpression","checkSmartPipelineBodyEarlyErrors","parseSmartPipelineBodyInStyle","isSimpleReference","topicReferenceWasUsedInCurrentTopicContext","callback","outerContextTopicState","outerContextSoloAwaitState","ret","revertScopes","_node$extra3","recordParenthesizedIdentifierError","_node$extra2","isLast","toAssignableObjectExpressionProp","raiseRestNotLast","checkToRestConversion","raiseTrailingCommaAfterRest","closeCharCode","parseAssignableListItem","_startLoc","_startPos","_left","disallowLetBinding","processComment","locationNode","getParser","decoratorsBeforeExport","missingPlugins","validatePlugins","pluginsFromOptions","pluginList","parserClassCache","getParserClass","_options","moduleError","_unused2","getExpression","tokTypes","codeFrameColumns","rawLines","lineNumber","colNumber","deprecationWarningShown","process","emitWarning","deprecationError","console","warn","location","Math","max","_highlight","getDefs","chalk","gutter","grey","marker","red","bold","NEWLINE","getMarkerLines","linesAbove","linesBelow","startColumn","endLine","endColumn","min","lineDiff","markerLines","sourceLength","highlighted","highlightCode","forceColor","shouldHighlight","getChalk","defs","maybeHighlight","chalkFn","lines","split","hasColumns","numberMaxWidth","highlightedLines","frame","number","paddedNumber","hasMarker","lastMarkerLine","markerLine","markerSpacing","numberOfMarkers","repeat","reset","a","b","placeholderWhitelist","placeholderPattern","preserveComments","syntacticPlaceholders","validate","_ref","excluded","target","sourceKeys","_objectWithoutPropertiesLoose","normalizeReplacements","replacements","reduce","acc","replacement","formatter","parserOpts","_parser","_codeFrame","parseWithCodeFrame","removePropertiesDeep","syntactic","placeholderNames","legacy","isLegacyRef","placeholderVisitorHandler","PATTERN","ancestors","_state$placeholderWhi","isPlaceholder","isJSXIdentifier","isNewExpression","isFunction","resolve","resolveAncestors","isDuplicate","cssKeywords","reverseKeywords","convert","module","rgb","channels","hsl","hsv","hwb","cmyk","xyz","lch","ansi16","ansi256","hcg","apple","gray","model","h","r","g","rdif","gdif","bdif","s","v","diff","diffc","c","k","reversed","currentClosestKeyword","y","currentClosestDistance","distance","pow","z","t1","t2","t3","smin","lmin","hi","floor","q","sl","vmin","wh","bl","ratio","m","y2","x2","z2","atan2","PI","sqrt","hr","cos","sin","round","ansi","color","mult","rem","colorString","hue","chroma","mg","pure","w","metadata","placeholderName","reverse","emptyStatement","applyReplacement","_helperPluginUtils","_helperSplitExportDeclaration","_globals","_transformClass","getBuiltinClasses","category","api","_api$assumption","_api$assumption2","_api$assumption3","_api$assumption4","assertVersion","loose","assumption","VISITED","Symbol","visitor","ExportDefaultDeclaration","isClassDeclaration","ClassDeclaration","ClassExpression","inferred","arrowFunctionToExpression","makeStatementFormatter","unwrap","assertExpressionStatement","createTemplateBuilder","defaultOpts","templateFnCache","templateAstCache","cachedOpts","tpl","extendedTrace","_string","builder","_literal","NO_PLACEHOLDER","_interopRequireDefault","rootStack","_parse","_populate","highlightTokens","_helperValidatorIdentifier","jsTokens","Chalk","sometimesKeywords","cyan","capitalized","yellow","jsxIdentifier","punctuator","magenta","green","white","bgRed","tokenize","BRACKET","JSX_TAG","getTokenType","toLowerCase","colorize","supportsColor","enabled","level","matchToToken","escapeStringRegexp","ansiStyles","stdoutColor","stdout","isSimpleWindowsTerm","platform","TERM","levelMapping","skipModels","styles","applyOptions","scLevel","chalkTag","apply","setPrototypeOf","blue","open","closeRe","codes","build","_styles","_empty","visible","bgColor","bgModel","defineProperties","applyStyle","self","enumerable","hasGrey","__proto__","argsLen","originalDim","dim","strings","parts","colorConvert","wrapAnsi16","wrapAnsi256","wrapAnsi16m","italic","underline","inverse","hidden","strikethrough","black","redBright","greenBright","yellowBright","blueBright","magentaBright","cyanBright","whiteBright","bgBlack","bgGreen","bgYellow","bgBlue","bgMagenta","bgCyan","bgWhite","bgBlackBright","bgRedBright","bgGreenBright","bgYellowBright","bgBlueBright","bgMagentaBright","bgCyanBright","bgWhiteBright","groupName","group","styleName","style","ansi2ansi","rgb2rgb","ansi16m","suite","conversions","route","fromModel","routes","toModel","wrappedFn","conversion","wrapRounded","wrapRaw","deriveBFS","graph","models","buildGraph","queue","adjacents","adjacent","link","to","wrapConversion","stderr","TEMPLATE_REGEX","STYLE_REGEX","STRING_REGEX","ESCAPE_REGEX","ESCAPES","unescape","parseArguments","results","chunks","trim","chunk","escape","chr","parseStyle","buildStyle","layer","escapeChar","errMsg","nameSet","buildTemplateCode","buildLiteralData","defaultReplacements"],"mappings":"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","file":"static/js/vendors-runtime-template.2db2c8ad.chunk.js","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports.program = exports.expression = exports.statements = exports.statement = exports.smart = void 0;\n\nvar formatters = _interopRequireWildcard(require(\"./formatters\"));\n\nvar _builder = _interopRequireDefault(require(\"./builder\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nconst smart = (0, _builder.default)(formatters.smart);\nexports.smart = smart;\nconst statement = (0, _builder.default)(formatters.statement);\nexports.statement = statement;\nconst statements = (0, _builder.default)(formatters.statements);\nexports.statements = statements;\nconst expression = (0, _builder.default)(formatters.expression);\nexports.expression = expression;\nconst program = (0, _builder.default)(formatters.program);\nexports.program = program;\n\nvar _default = Object.assign(smart.bind(undefined), {\n  smart,\n  statement,\n  statements,\n  expression,\n  program,\n  ast: smart.ast\n});\n\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = transformClass;\n\nvar _helperFunctionName = require(\"@babel/helper-function-name\");\n\nvar _helperReplaceSupers = require(\"@babel/helper-replace-supers\");\n\nvar _helperOptimiseCallExpression = require(\"@babel/helper-optimise-call-expression\");\n\nvar _core = require(\"@babel/core\");\n\nvar _helperAnnotateAsPure = require(\"@babel/helper-annotate-as-pure\");\n\nvar _inlineCreateSuperHelpers = require(\"./inline-createSuper-helpers\");\n\nfunction buildConstructor(classRef, constructorBody, node) {\n  const func = _core.types.functionDeclaration(_core.types.cloneNode(classRef), [], constructorBody);\n\n  _core.types.inherits(func, node);\n\n  return func;\n}\n\nfunction transformClass(path, file, builtinClasses, isLoose, assumptions) {\n  const classState = {\n    parent: undefined,\n    scope: undefined,\n    node: undefined,\n    path: undefined,\n    file: undefined,\n    classId: undefined,\n    classRef: undefined,\n    superFnId: undefined,\n    superName: undefined,\n    superReturns: [],\n    isDerived: false,\n    extendsNative: false,\n    construct: undefined,\n    constructorBody: undefined,\n    userConstructor: undefined,\n    userConstructorPath: undefined,\n    hasConstructor: false,\n    staticPropBody: [],\n    body: [],\n    superThises: [],\n    pushedConstructor: false,\n    pushedInherits: false,\n    protoAlias: null,\n    isLoose: false,\n    methods: {\n      instance: {\n        hasComputed: false,\n        list: [],\n        map: new Map()\n      },\n      static: {\n        hasComputed: false,\n        list: [],\n        map: new Map()\n      }\n    }\n  };\n\n  const setState = newState => {\n    Object.assign(classState, newState);\n  };\n\n  const findThisesVisitor = _core.traverse.visitors.merge([_helperReplaceSupers.environmentVisitor, {\n    ThisExpression(path) {\n      classState.superThises.push(path);\n    }\n\n  }]);\n\n  function maybeCreateConstructor() {\n    let hasConstructor = false;\n    const paths = classState.path.get(\"body.body\");\n\n    for (const path of paths) {\n      hasConstructor = path.equals(\"kind\", \"constructor\");\n      if (hasConstructor) break;\n    }\n\n    if (hasConstructor) return;\n    let params, body;\n\n    if (classState.isDerived) {\n      const constructor = _core.template.expression.ast`\n        (function () {\n          super(...arguments);\n        })\n      `;\n      params = constructor.params;\n      body = constructor.body;\n    } else {\n      params = [];\n      body = _core.types.blockStatement([]);\n    }\n\n    classState.path.get(\"body\").unshiftContainer(\"body\", _core.types.classMethod(\"constructor\", _core.types.identifier(\"constructor\"), params, body));\n  }\n\n  function buildBody() {\n    maybeCreateConstructor();\n    pushBody();\n    verifyConstructor();\n\n    if (classState.userConstructor) {\n      const {\n        constructorBody,\n        userConstructor,\n        construct\n      } = classState;\n      constructorBody.body = constructorBody.body.concat(userConstructor.body.body);\n\n      _core.types.inherits(construct, userConstructor);\n\n      _core.types.inherits(constructorBody, userConstructor.body);\n    }\n\n    pushDescriptors();\n  }\n\n  function pushBody() {\n    const classBodyPaths = classState.path.get(\"body.body\");\n\n    for (const path of classBodyPaths) {\n      const node = path.node;\n\n      if (path.isClassProperty()) {\n        throw path.buildCodeFrameError(\"Missing class properties transform.\");\n      }\n\n      if (node.decorators) {\n        throw path.buildCodeFrameError(\"Method has decorators, put the decorator plugin before the classes one.\");\n      }\n\n      if (_core.types.isClassMethod(node)) {\n        const isConstructor = node.kind === \"constructor\";\n        const replaceSupers = new _helperReplaceSupers.default({\n          methodPath: path,\n          objectRef: classState.classRef,\n          superRef: classState.superName,\n          constantSuper: assumptions.constantSuper,\n          file: classState.file,\n          refToPreserve: classState.classRef\n        });\n        replaceSupers.replace();\n        const superReturns = [];\n        path.traverse(_core.traverse.visitors.merge([_helperReplaceSupers.environmentVisitor, {\n          ReturnStatement(path) {\n            if (!path.getFunctionParent().isArrowFunctionExpression()) {\n              superReturns.push(path);\n            }\n          }\n\n        }]));\n\n        if (isConstructor) {\n          pushConstructor(superReturns, node, path);\n        } else {\n          pushMethod(node, path);\n        }\n      }\n    }\n  }\n\n  function pushDescriptors() {\n    pushInheritsToBody();\n    const {\n      body\n    } = classState;\n    const props = {\n      instance: null,\n      static: null\n    };\n\n    for (const placement of [\"static\", \"instance\"]) {\n      if (classState.methods[placement].list.length) {\n        props[placement] = classState.methods[placement].list.map(desc => {\n          const obj = _core.types.objectExpression([_core.types.objectProperty(_core.types.identifier(\"key\"), desc.key)]);\n\n          for (const kind of [\"get\", \"set\", \"value\"]) {\n            if (desc[kind] != null) {\n              obj.properties.push(_core.types.objectProperty(_core.types.identifier(kind), desc[kind]));\n            }\n          }\n\n          return obj;\n        });\n      }\n    }\n\n    if (props.instance || props.static) {\n      let args = [_core.types.cloneNode(classState.classRef), props.instance ? _core.types.arrayExpression(props.instance) : _core.types.nullLiteral(), props.static ? _core.types.arrayExpression(props.static) : _core.types.nullLiteral()];\n      let lastNonNullIndex = 0;\n\n      for (let i = 0; i < args.length; i++) {\n        if (!_core.types.isNullLiteral(args[i])) lastNonNullIndex = i;\n      }\n\n      args = args.slice(0, lastNonNullIndex + 1);\n      body.push(_core.types.expressionStatement(_core.types.callExpression(classState.file.addHelper(\"createClass\"), args)));\n    }\n  }\n\n  function wrapSuperCall(bareSuper, superRef, thisRef, body) {\n    const bareSuperNode = bareSuper.node;\n    let call;\n\n    if (assumptions.superIsCallableConstructor) {\n      bareSuperNode.arguments.unshift(_core.types.thisExpression());\n\n      if (bareSuperNode.arguments.length === 2 && _core.types.isSpreadElement(bareSuperNode.arguments[1]) && _core.types.isIdentifier(bareSuperNode.arguments[1].argument, {\n        name: \"arguments\"\n      })) {\n        bareSuperNode.arguments[1] = bareSuperNode.arguments[1].argument;\n        bareSuperNode.callee = _core.types.memberExpression(_core.types.cloneNode(superRef), _core.types.identifier(\"apply\"));\n      } else {\n        bareSuperNode.callee = _core.types.memberExpression(_core.types.cloneNode(superRef), _core.types.identifier(\"call\"));\n      }\n\n      call = _core.types.logicalExpression(\"||\", bareSuperNode, _core.types.thisExpression());\n    } else {\n      call = (0, _helperOptimiseCallExpression.default)(_core.types.cloneNode(classState.superFnId), _core.types.thisExpression(), bareSuperNode.arguments);\n    }\n\n    if (bareSuper.parentPath.isExpressionStatement() && bareSuper.parentPath.container === body.node.body && body.node.body.length - 1 === bareSuper.parentPath.key) {\n      if (classState.superThises.length) {\n        call = _core.types.assignmentExpression(\"=\", thisRef(), call);\n      }\n\n      bareSuper.parentPath.replaceWith(_core.types.returnStatement(call));\n    } else {\n      bareSuper.replaceWith(_core.types.assignmentExpression(\"=\", thisRef(), call));\n    }\n  }\n\n  function verifyConstructor() {\n    if (!classState.isDerived) return;\n    const path = classState.userConstructorPath;\n    const body = path.get(\"body\");\n    path.traverse(findThisesVisitor);\n\n    let thisRef = function () {\n      const ref = path.scope.generateDeclaredUidIdentifier(\"this\");\n\n      thisRef = () => _core.types.cloneNode(ref);\n\n      return ref;\n    };\n\n    for (const thisPath of classState.superThises) {\n      const {\n        node,\n        parentPath\n      } = thisPath;\n\n      if (parentPath.isMemberExpression({\n        object: node\n      })) {\n        thisPath.replaceWith(thisRef());\n        continue;\n      }\n\n      thisPath.replaceWith(_core.types.callExpression(classState.file.addHelper(\"assertThisInitialized\"), [thisRef()]));\n    }\n\n    const bareSupers = new Set();\n    path.traverse(_core.traverse.visitors.merge([_helperReplaceSupers.environmentVisitor, {\n      Super(path) {\n        const {\n          node,\n          parentPath\n        } = path;\n\n        if (parentPath.isCallExpression({\n          callee: node\n        })) {\n          bareSupers.add(parentPath);\n        }\n      }\n\n    }]));\n    let guaranteedSuperBeforeFinish = !!bareSupers.size;\n\n    for (const bareSuper of bareSupers) {\n      wrapSuperCall(bareSuper, classState.superName, thisRef, body);\n\n      if (guaranteedSuperBeforeFinish) {\n        bareSuper.find(function (parentPath) {\n          if (parentPath === path) {\n            return true;\n          }\n\n          if (parentPath.isLoop() || parentPath.isConditional() || parentPath.isArrowFunctionExpression()) {\n            guaranteedSuperBeforeFinish = false;\n            return true;\n          }\n        });\n      }\n    }\n\n    let wrapReturn;\n\n    if (classState.isLoose) {\n      wrapReturn = returnArg => {\n        const thisExpr = _core.types.callExpression(classState.file.addHelper(\"assertThisInitialized\"), [thisRef()]);\n\n        return returnArg ? _core.types.logicalExpression(\"||\", returnArg, thisExpr) : thisExpr;\n      };\n    } else {\n      wrapReturn = returnArg => _core.types.callExpression(classState.file.addHelper(\"possibleConstructorReturn\"), [thisRef()].concat(returnArg || []));\n    }\n\n    const bodyPaths = body.get(\"body\");\n\n    if (!bodyPaths.length || !bodyPaths.pop().isReturnStatement()) {\n      body.pushContainer(\"body\", _core.types.returnStatement(guaranteedSuperBeforeFinish ? thisRef() : wrapReturn()));\n    }\n\n    for (const returnPath of classState.superReturns) {\n      returnPath.get(\"argument\").replaceWith(wrapReturn(returnPath.node.argument));\n    }\n  }\n\n  function pushMethod(node, path) {\n    const scope = path ? path.scope : classState.scope;\n\n    if (node.kind === \"method\") {\n      if (processMethod(node, scope)) return;\n    }\n\n    const placement = node.static ? \"static\" : \"instance\";\n    const methods = classState.methods[placement];\n    const descKey = node.kind === \"method\" ? \"value\" : node.kind;\n    const key = _core.types.isNumericLiteral(node.key) || _core.types.isBigIntLiteral(node.key) ? _core.types.stringLiteral(String(node.key.value)) : _core.types.toComputedKey(node);\n\n    let fn = _core.types.toExpression(node);\n\n    if (_core.types.isStringLiteral(key)) {\n      if (node.kind === \"method\") {\n        fn = (0, _helperFunctionName.default)({\n          id: key,\n          node: node,\n          scope\n        });\n      }\n    } else {\n      methods.hasComputed = true;\n    }\n\n    let descriptor;\n\n    if (!methods.hasComputed && methods.map.has(key.value)) {\n      descriptor = methods.map.get(key.value);\n      descriptor[descKey] = fn;\n\n      if (descKey === \"value\") {\n        descriptor.get = null;\n        descriptor.set = null;\n      } else {\n        descriptor.value = null;\n      }\n    } else {\n      descriptor = {\n        key: key,\n        [descKey]: fn\n      };\n      methods.list.push(descriptor);\n\n      if (!methods.hasComputed) {\n        methods.map.set(key.value, descriptor);\n      }\n    }\n  }\n\n  function processMethod(node, scope) {\n    if (assumptions.setClassMethods && !node.decorators) {\n      let {\n        classRef\n      } = classState;\n\n      if (!node.static) {\n        insertProtoAliasOnce();\n        classRef = classState.protoAlias;\n      }\n\n      const methodName = _core.types.memberExpression(_core.types.cloneNode(classRef), node.key, node.computed || _core.types.isLiteral(node.key));\n\n      let func = _core.types.functionExpression(null, node.params, node.body, node.generator, node.async);\n\n      _core.types.inherits(func, node);\n\n      const key = _core.types.toComputedKey(node, node.key);\n\n      if (_core.types.isStringLiteral(key)) {\n        func = (0, _helperFunctionName.default)({\n          node: func,\n          id: key,\n          scope\n        });\n      }\n\n      const expr = _core.types.expressionStatement(_core.types.assignmentExpression(\"=\", methodName, func));\n\n      _core.types.inheritsComments(expr, node);\n\n      classState.body.push(expr);\n      return true;\n    }\n\n    return false;\n  }\n\n  function insertProtoAliasOnce() {\n    if (classState.protoAlias === null) {\n      setState({\n        protoAlias: classState.scope.generateUidIdentifier(\"proto\")\n      });\n\n      const classProto = _core.types.memberExpression(classState.classRef, _core.types.identifier(\"prototype\"));\n\n      const protoDeclaration = _core.types.variableDeclaration(\"var\", [_core.types.variableDeclarator(classState.protoAlias, classProto)]);\n\n      classState.body.push(protoDeclaration);\n    }\n  }\n\n  function pushConstructor(superReturns, method, path) {\n    setState({\n      userConstructorPath: path,\n      userConstructor: method,\n      hasConstructor: true,\n      superReturns\n    });\n    const {\n      construct\n    } = classState;\n\n    _core.types.inheritsComments(construct, method);\n\n    construct.params = method.params;\n\n    _core.types.inherits(construct.body, method.body);\n\n    construct.body.directives = method.body.directives;\n    pushConstructorToBody();\n  }\n\n  function pushConstructorToBody() {\n    if (classState.pushedConstructor) return;\n    classState.pushedConstructor = true;\n\n    if (classState.hasInstanceDescriptors || classState.hasStaticDescriptors) {\n      pushDescriptors();\n    }\n\n    classState.body.push(classState.construct);\n    pushInheritsToBody();\n  }\n\n  function pushInheritsToBody() {\n    if (!classState.isDerived || classState.pushedInherits) return;\n    const superFnId = path.scope.generateUidIdentifier(\"super\");\n    setState({\n      pushedInherits: true,\n      superFnId\n    });\n\n    if (!assumptions.superIsCallableConstructor) {\n      classState.body.unshift(_core.types.variableDeclaration(\"var\", [_core.types.variableDeclarator(superFnId, _core.types.callExpression((0, _inlineCreateSuperHelpers.default)(classState.file), [_core.types.cloneNode(classState.classRef)]))]));\n    }\n\n    classState.body.unshift(_core.types.expressionStatement(_core.types.callExpression(classState.file.addHelper(classState.isLoose ? \"inheritsLoose\" : \"inherits\"), [_core.types.cloneNode(classState.classRef), _core.types.cloneNode(classState.superName)])));\n  }\n\n  function setupClosureParamsArgs() {\n    const {\n      superName\n    } = classState;\n    const closureParams = [];\n    const closureArgs = [];\n\n    if (classState.isDerived) {\n      let arg = _core.types.cloneNode(superName);\n\n      if (classState.extendsNative) {\n        arg = _core.types.callExpression(classState.file.addHelper(\"wrapNativeSuper\"), [arg]);\n        (0, _helperAnnotateAsPure.default)(arg);\n      }\n\n      const param = classState.scope.generateUidIdentifierBasedOnNode(superName);\n      closureParams.push(param);\n      closureArgs.push(arg);\n      setState({\n        superName: _core.types.cloneNode(param)\n      });\n    }\n\n    return {\n      closureParams,\n      closureArgs\n    };\n  }\n\n  function classTransformer(path, file, builtinClasses, isLoose) {\n    setState({\n      parent: path.parent,\n      scope: path.scope,\n      node: path.node,\n      path,\n      file,\n      isLoose\n    });\n    setState({\n      classId: classState.node.id,\n      classRef: classState.node.id ? _core.types.identifier(classState.node.id.name) : classState.scope.generateUidIdentifier(\"class\"),\n      superName: classState.node.superClass,\n      isDerived: !!classState.node.superClass,\n      constructorBody: _core.types.blockStatement([])\n    });\n    setState({\n      extendsNative: classState.isDerived && builtinClasses.has(classState.superName.name) && !classState.scope.hasBinding(classState.superName.name, true)\n    });\n    const {\n      classRef,\n      node,\n      constructorBody\n    } = classState;\n    setState({\n      construct: buildConstructor(classRef, constructorBody, node)\n    });\n    let {\n      body\n    } = classState;\n    const {\n      closureParams,\n      closureArgs\n    } = setupClosureParamsArgs();\n    buildBody();\n\n    if (!assumptions.noClassCalls) {\n      constructorBody.body.unshift(_core.types.expressionStatement(_core.types.callExpression(classState.file.addHelper(\"classCallCheck\"), [_core.types.thisExpression(), _core.types.cloneNode(classState.classRef)])));\n    }\n\n    body = body.concat(classState.staticPropBody.map(fn => fn(_core.types.cloneNode(classState.classRef))));\n    const isStrict = path.isInStrictMode();\n    let constructorOnly = classState.classId && body.length === 1;\n\n    if (constructorOnly && !isStrict) {\n      for (const param of classState.construct.params) {\n        if (!_core.types.isIdentifier(param)) {\n          constructorOnly = false;\n          break;\n        }\n      }\n    }\n\n    const directives = constructorOnly ? body[0].body.directives : [];\n\n    if (!isStrict) {\n      directives.push(_core.types.directive(_core.types.directiveLiteral(\"use strict\")));\n    }\n\n    if (constructorOnly) {\n      return _core.types.toExpression(body[0]);\n    }\n\n    body.push(_core.types.returnStatement(_core.types.cloneNode(classState.classRef)));\n\n    const container = _core.types.arrowFunctionExpression(closureParams, _core.types.blockStatement(body, directives));\n\n    return _core.types.callExpression(container, closureArgs);\n  }\n\n  return classTransformer(path, file, builtinClasses, isLoose);\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = addCreateSuperHelper;\n\nvar _core = require(\"@babel/core\");\n\nconst helperIDs = new WeakMap();\n\nfunction addCreateSuperHelper(file) {\n  if (helperIDs.has(file)) {\n    return (_core.types.cloneNode || _core.types.clone)(helperIDs.get(file));\n  }\n\n  try {\n    return file.addHelper(\"createSuper\");\n  } catch (_unused) {}\n\n  const id = file.scope.generateUidIdentifier(\"createSuper\");\n  helperIDs.set(file, id);\n  const fn = helper({\n    CREATE_SUPER: id,\n    GET_PROTOTYPE_OF: file.addHelper(\"getPrototypeOf\"),\n    POSSIBLE_CONSTRUCTOR_RETURN: file.addHelper(\"possibleConstructorReturn\")\n  });\n  file.path.unshiftContainer(\"body\", [fn]);\n  file.scope.registerDeclaration(file.path.get(\"body.0\"));\n  return _core.types.cloneNode(id);\n}\n\nconst helper = _core.template.statement`\n  function CREATE_SUPER(Derived) {\n    function isNativeReflectConstruct() {\n      if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n\n      // core-js@3\n      if (Reflect.construct.sham) return false;\n\n      // Proxy can't be polyfilled. Every browser implemented\n      // proxies before or at the same time as Reflect.construct,\n      // so if they support Proxy they also support Reflect.construct.\n      if (typeof Proxy === \"function\") return true;\n\n      // Since Reflect.construct can't be properly polyfilled, some\n      // implementations (e.g. core-js@2) don't set the correct internal slots.\n      // Those polyfills don't allow us to subclass built-ins, so we need to\n      // use our fallback implementation.\n      try {\n        // If the internal slots aren't set, this throws an error similar to\n        //   TypeError: this is not a Date object.\n        Date.prototype.toString.call(Reflect.construct(Date, [], function() {}));\n        return true;\n      } catch (e) {\n        return false;\n      }\n    }\n\n    return function () {\n      var Super = GET_PROTOTYPE_OF(Derived), result;\n      if (isNativeReflectConstruct()) {\n        // NOTE: This doesn't work if this.__proto__.constructor has been modified.\n        var NewTarget = GET_PROTOTYPE_OF(this).constructor;\n        result = Reflect.construct(Super, arguments, NewTarget);\n      } else {\n        result = Super.apply(this, arguments);\n      }\n      return POSSIBLE_CONSTRUCTOR_RETURN(this, result);\n    }\n  }\n`;","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nconst beforeExpr = true;\nconst startsExpr = true;\nconst isLoop = true;\nconst isAssign = true;\nconst prefix = true;\nconst postfix = true;\nclass TokenType {\n  constructor(label, conf = {}) {\n    this.label = void 0;\n    this.keyword = void 0;\n    this.beforeExpr = void 0;\n    this.startsExpr = void 0;\n    this.rightAssociative = void 0;\n    this.isLoop = void 0;\n    this.isAssign = void 0;\n    this.prefix = void 0;\n    this.postfix = void 0;\n    this.binop = void 0;\n    this.updateContext = void 0;\n    this.label = label;\n    this.keyword = conf.keyword;\n    this.beforeExpr = !!conf.beforeExpr;\n    this.startsExpr = !!conf.startsExpr;\n    this.rightAssociative = !!conf.rightAssociative;\n    this.isLoop = !!conf.isLoop;\n    this.isAssign = !!conf.isAssign;\n    this.prefix = !!conf.prefix;\n    this.postfix = !!conf.postfix;\n    this.binop = conf.binop != null ? conf.binop : null;\n    this.updateContext = null;\n  }\n\n}\nconst keywords$1 = new Map();\n\nfunction createKeyword(name, options = {}) {\n  options.keyword = name;\n  const token = new TokenType(name, options);\n  keywords$1.set(name, token);\n  return token;\n}\n\nfunction createBinop(name, binop) {\n  return new TokenType(name, {\n    beforeExpr,\n    binop\n  });\n}\n\nconst types$1 = {\n  num: new TokenType(\"num\", {\n    startsExpr\n  }),\n  bigint: new TokenType(\"bigint\", {\n    startsExpr\n  }),\n  decimal: new TokenType(\"decimal\", {\n    startsExpr\n  }),\n  regexp: new TokenType(\"regexp\", {\n    startsExpr\n  }),\n  string: new TokenType(\"string\", {\n    startsExpr\n  }),\n  name: new TokenType(\"name\", {\n    startsExpr\n  }),\n  privateName: new TokenType(\"#name\", {\n    startsExpr\n  }),\n  eof: new TokenType(\"eof\"),\n  bracketL: new TokenType(\"[\", {\n    beforeExpr,\n    startsExpr\n  }),\n  bracketHashL: new TokenType(\"#[\", {\n    beforeExpr,\n    startsExpr\n  }),\n  bracketBarL: new TokenType(\"[|\", {\n    beforeExpr,\n    startsExpr\n  }),\n  bracketR: new TokenType(\"]\"),\n  bracketBarR: new TokenType(\"|]\"),\n  braceL: new TokenType(\"{\", {\n    beforeExpr,\n    startsExpr\n  }),\n  braceBarL: new TokenType(\"{|\", {\n    beforeExpr,\n    startsExpr\n  }),\n  braceHashL: new TokenType(\"#{\", {\n    beforeExpr,\n    startsExpr\n  }),\n  braceR: new TokenType(\"}\"),\n  braceBarR: new TokenType(\"|}\"),\n  parenL: new TokenType(\"(\", {\n    beforeExpr,\n    startsExpr\n  }),\n  parenR: new TokenType(\")\"),\n  comma: new TokenType(\",\", {\n    beforeExpr\n  }),\n  semi: new TokenType(\";\", {\n    beforeExpr\n  }),\n  colon: new TokenType(\":\", {\n    beforeExpr\n  }),\n  doubleColon: new TokenType(\"::\", {\n    beforeExpr\n  }),\n  dot: new TokenType(\".\"),\n  question: new TokenType(\"?\", {\n    beforeExpr\n  }),\n  questionDot: new TokenType(\"?.\"),\n  arrow: new TokenType(\"=>\", {\n    beforeExpr\n  }),\n  template: new TokenType(\"template\"),\n  ellipsis: new TokenType(\"...\", {\n    beforeExpr\n  }),\n  backQuote: new TokenType(\"`\", {\n    startsExpr\n  }),\n  dollarBraceL: new TokenType(\"${\", {\n    beforeExpr,\n    startsExpr\n  }),\n  at: new TokenType(\"@\"),\n  hash: new TokenType(\"#\", {\n    startsExpr\n  }),\n  interpreterDirective: new TokenType(\"#!...\"),\n  eq: new TokenType(\"=\", {\n    beforeExpr,\n    isAssign\n  }),\n  assign: new TokenType(\"_=\", {\n    beforeExpr,\n    isAssign\n  }),\n  incDec: new TokenType(\"++/--\", {\n    prefix,\n    postfix,\n    startsExpr\n  }),\n  bang: new TokenType(\"!\", {\n    beforeExpr,\n    prefix,\n    startsExpr\n  }),\n  tilde: new TokenType(\"~\", {\n    beforeExpr,\n    prefix,\n    startsExpr\n  }),\n  pipeline: createBinop(\"|>\", 0),\n  nullishCoalescing: createBinop(\"??\", 1),\n  logicalOR: createBinop(\"||\", 1),\n  logicalAND: createBinop(\"&&\", 2),\n  bitwiseOR: createBinop(\"|\", 3),\n  bitwiseXOR: createBinop(\"^\", 4),\n  bitwiseAND: createBinop(\"&\", 5),\n  equality: createBinop(\"==/!=/===/!==\", 6),\n  relational: createBinop(\"</>/<=/>=\", 7),\n  bitShift: createBinop(\"<</>>/>>>\", 8),\n  plusMin: new TokenType(\"+/-\", {\n    beforeExpr,\n    binop: 9,\n    prefix,\n    startsExpr\n  }),\n  modulo: new TokenType(\"%\", {\n    beforeExpr,\n    binop: 10,\n    startsExpr\n  }),\n  star: new TokenType(\"*\", {\n    binop: 10\n  }),\n  slash: createBinop(\"/\", 10),\n  exponent: new TokenType(\"**\", {\n    beforeExpr,\n    binop: 11,\n    rightAssociative: true\n  }),\n  _break: createKeyword(\"break\"),\n  _case: createKeyword(\"case\", {\n    beforeExpr\n  }),\n  _catch: createKeyword(\"catch\"),\n  _continue: createKeyword(\"continue\"),\n  _debugger: createKeyword(\"debugger\"),\n  _default: createKeyword(\"default\", {\n    beforeExpr\n  }),\n  _do: createKeyword(\"do\", {\n    isLoop,\n    beforeExpr\n  }),\n  _else: createKeyword(\"else\", {\n    beforeExpr\n  }),\n  _finally: createKeyword(\"finally\"),\n  _for: createKeyword(\"for\", {\n    isLoop\n  }),\n  _function: createKeyword(\"function\", {\n    startsExpr\n  }),\n  _if: createKeyword(\"if\"),\n  _return: createKeyword(\"return\", {\n    beforeExpr\n  }),\n  _switch: createKeyword(\"switch\"),\n  _throw: createKeyword(\"throw\", {\n    beforeExpr,\n    prefix,\n    startsExpr\n  }),\n  _try: createKeyword(\"try\"),\n  _var: createKeyword(\"var\"),\n  _const: createKeyword(\"const\"),\n  _while: createKeyword(\"while\", {\n    isLoop\n  }),\n  _with: createKeyword(\"with\"),\n  _new: createKeyword(\"new\", {\n    beforeExpr,\n    startsExpr\n  }),\n  _this: createKeyword(\"this\", {\n    startsExpr\n  }),\n  _super: createKeyword(\"super\", {\n    startsExpr\n  }),\n  _class: createKeyword(\"class\", {\n    startsExpr\n  }),\n  _extends: createKeyword(\"extends\", {\n    beforeExpr\n  }),\n  _export: createKeyword(\"export\"),\n  _import: createKeyword(\"import\", {\n    startsExpr\n  }),\n  _null: createKeyword(\"null\", {\n    startsExpr\n  }),\n  _true: createKeyword(\"true\", {\n    startsExpr\n  }),\n  _false: createKeyword(\"false\", {\n    startsExpr\n  }),\n  _in: createKeyword(\"in\", {\n    beforeExpr,\n    binop: 7\n  }),\n  _instanceof: createKeyword(\"instanceof\", {\n    beforeExpr,\n    binop: 7\n  }),\n  _typeof: createKeyword(\"typeof\", {\n    beforeExpr,\n    prefix,\n    startsExpr\n  }),\n  _void: createKeyword(\"void\", {\n    beforeExpr,\n    prefix,\n    startsExpr\n  }),\n  _delete: createKeyword(\"delete\", {\n    beforeExpr,\n    prefix,\n    startsExpr\n  })\n};\n\nconst lineBreak = /\\r\\n?|[\\n\\u2028\\u2029]/;\nconst lineBreakG = new RegExp(lineBreak.source, \"g\");\nfunction isNewLine(code) {\n  switch (code) {\n    case 10:\n    case 13:\n    case 8232:\n    case 8233:\n      return true;\n\n    default:\n      return false;\n  }\n}\nconst skipWhiteSpace = /(?:\\s|\\/\\/.*|\\/\\*[^]*?\\*\\/)*/g;\nfunction isWhitespace(code) {\n  switch (code) {\n    case 0x0009:\n    case 0x000b:\n    case 0x000c:\n    case 32:\n    case 160:\n    case 5760:\n    case 0x2000:\n    case 0x2001:\n    case 0x2002:\n    case 0x2003:\n    case 0x2004:\n    case 0x2005:\n    case 0x2006:\n    case 0x2007:\n    case 0x2008:\n    case 0x2009:\n    case 0x200a:\n    case 0x202f:\n    case 0x205f:\n    case 0x3000:\n    case 0xfeff:\n      return true;\n\n    default:\n      return false;\n  }\n}\n\nclass Position {\n  constructor(line, col) {\n    this.line = void 0;\n    this.column = void 0;\n    this.line = line;\n    this.column = col;\n  }\n\n}\nclass SourceLocation {\n  constructor(start, end) {\n    this.start = void 0;\n    this.end = void 0;\n    this.filename = void 0;\n    this.identifierName = void 0;\n    this.start = start;\n    this.end = end;\n  }\n\n}\nfunction getLineInfo(input, offset) {\n  let line = 1;\n  let lineStart = 0;\n  let match;\n  lineBreakG.lastIndex = 0;\n\n  while ((match = lineBreakG.exec(input)) && match.index < offset) {\n    line++;\n    lineStart = lineBreakG.lastIndex;\n  }\n\n  return new Position(line, offset - lineStart);\n}\n\nclass BaseParser {\n  constructor() {\n    this.sawUnambiguousESM = false;\n    this.ambiguousScriptDifferentAst = false;\n  }\n\n  hasPlugin(name) {\n    return this.plugins.has(name);\n  }\n\n  getPluginOption(plugin, name) {\n    if (this.hasPlugin(plugin)) return this.plugins.get(plugin)[name];\n  }\n\n}\n\nfunction last(stack) {\n  return stack[stack.length - 1];\n}\n\nclass CommentsParser extends BaseParser {\n  addComment(comment) {\n    if (this.filename) comment.loc.filename = this.filename;\n    this.state.trailingComments.push(comment);\n    this.state.leadingComments.push(comment);\n  }\n\n  adjustCommentsAfterTrailingComma(node, elements, takeAllComments) {\n    if (this.state.leadingComments.length === 0) {\n      return;\n    }\n\n    let lastElement = null;\n    let i = elements.length;\n\n    while (lastElement === null && i > 0) {\n      lastElement = elements[--i];\n    }\n\n    if (lastElement === null) {\n      return;\n    }\n\n    for (let j = 0; j < this.state.leadingComments.length; j++) {\n      if (this.state.leadingComments[j].end < this.state.commentPreviousNode.end) {\n        this.state.leadingComments.splice(j, 1);\n        j--;\n      }\n    }\n\n    const newTrailingComments = [];\n\n    for (let i = 0; i < this.state.leadingComments.length; i++) {\n      const leadingComment = this.state.leadingComments[i];\n\n      if (leadingComment.end < node.end) {\n        newTrailingComments.push(leadingComment);\n\n        if (!takeAllComments) {\n          this.state.leadingComments.splice(i, 1);\n          i--;\n        }\n      } else {\n        if (node.trailingComments === undefined) {\n          node.trailingComments = [];\n        }\n\n        node.trailingComments.push(leadingComment);\n      }\n    }\n\n    if (takeAllComments) this.state.leadingComments = [];\n\n    if (newTrailingComments.length > 0) {\n      lastElement.trailingComments = newTrailingComments;\n    } else if (lastElement.trailingComments !== undefined) {\n      lastElement.trailingComments = [];\n    }\n  }\n\n  processComment(node) {\n    if (node.type === \"Program\" && node.body.length > 0) return;\n    const stack = this.state.commentStack;\n    let firstChild, lastChild, trailingComments, i, j;\n\n    if (this.state.trailingComments.length > 0) {\n      if (this.state.trailingComments[0].start >= node.end) {\n        trailingComments = this.state.trailingComments;\n        this.state.trailingComments = [];\n      } else {\n        this.state.trailingComments.length = 0;\n      }\n    } else if (stack.length > 0) {\n      const lastInStack = last(stack);\n\n      if (lastInStack.trailingComments && lastInStack.trailingComments[0].start >= node.end) {\n        trailingComments = lastInStack.trailingComments;\n        delete lastInStack.trailingComments;\n      }\n    }\n\n    if (stack.length > 0 && last(stack).start >= node.start) {\n      firstChild = stack.pop();\n    }\n\n    while (stack.length > 0 && last(stack).start >= node.start) {\n      lastChild = stack.pop();\n    }\n\n    if (!lastChild && firstChild) lastChild = firstChild;\n\n    if (firstChild) {\n      switch (node.type) {\n        case \"ObjectExpression\":\n          this.adjustCommentsAfterTrailingComma(node, node.properties);\n          break;\n\n        case \"ObjectPattern\":\n          this.adjustCommentsAfterTrailingComma(node, node.properties, true);\n          break;\n\n        case \"CallExpression\":\n          this.adjustCommentsAfterTrailingComma(node, node.arguments);\n          break;\n\n        case \"ArrayExpression\":\n          this.adjustCommentsAfterTrailingComma(node, node.elements);\n          break;\n\n        case \"ArrayPattern\":\n          this.adjustCommentsAfterTrailingComma(node, node.elements, true);\n          break;\n      }\n    } else if (this.state.commentPreviousNode && (this.state.commentPreviousNode.type === \"ImportSpecifier\" && node.type !== \"ImportSpecifier\" || this.state.commentPreviousNode.type === \"ExportSpecifier\" && node.type !== \"ExportSpecifier\")) {\n      this.adjustCommentsAfterTrailingComma(node, [this.state.commentPreviousNode]);\n    }\n\n    if (lastChild) {\n      if (lastChild.leadingComments) {\n        if (lastChild !== node && lastChild.leadingComments.length > 0 && last(lastChild.leadingComments).end <= node.start) {\n          node.leadingComments = lastChild.leadingComments;\n          delete lastChild.leadingComments;\n        } else {\n          for (i = lastChild.leadingComments.length - 2; i >= 0; --i) {\n            if (lastChild.leadingComments[i].end <= node.start) {\n              node.leadingComments = lastChild.leadingComments.splice(0, i + 1);\n              break;\n            }\n          }\n        }\n      }\n    } else if (this.state.leadingComments.length > 0) {\n      if (last(this.state.leadingComments).end <= node.start) {\n        if (this.state.commentPreviousNode) {\n          for (j = 0; j < this.state.leadingComments.length; j++) {\n            if (this.state.leadingComments[j].end < this.state.commentPreviousNode.end) {\n              this.state.leadingComments.splice(j, 1);\n              j--;\n            }\n          }\n        }\n\n        if (this.state.leadingComments.length > 0) {\n          node.leadingComments = this.state.leadingComments;\n          this.state.leadingComments = [];\n        }\n      } else {\n        for (i = 0; i < this.state.leadingComments.length; i++) {\n          if (this.state.leadingComments[i].end > node.start) {\n            break;\n          }\n        }\n\n        const leadingComments = this.state.leadingComments.slice(0, i);\n\n        if (leadingComments.length) {\n          node.leadingComments = leadingComments;\n        }\n\n        trailingComments = this.state.leadingComments.slice(i);\n\n        if (trailingComments.length === 0) {\n          trailingComments = null;\n        }\n      }\n    }\n\n    this.state.commentPreviousNode = node;\n\n    if (trailingComments) {\n      if (trailingComments.length && trailingComments[0].start >= node.start && last(trailingComments).end <= node.end) {\n        node.innerComments = trailingComments;\n      } else {\n        const firstTrailingCommentIndex = trailingComments.findIndex(comment => comment.end >= node.end);\n\n        if (firstTrailingCommentIndex > 0) {\n          node.innerComments = trailingComments.slice(0, firstTrailingCommentIndex);\n          node.trailingComments = trailingComments.slice(firstTrailingCommentIndex);\n        } else {\n          node.trailingComments = trailingComments;\n        }\n      }\n    }\n\n    stack.push(node);\n  }\n\n}\n\nconst ErrorCodes = Object.freeze({\n  SyntaxError: \"BABEL_PARSER_SYNTAX_ERROR\",\n  SourceTypeModuleError: \"BABEL_PARSER_SOURCETYPE_MODULE_REQUIRED\"\n});\n\nconst ErrorMessages = makeErrorTemplates({\n  AccessorIsGenerator: \"A %0ter cannot be a generator.\",\n  ArgumentsInClass: \"'arguments' is only allowed in functions and class methods.\",\n  AsyncFunctionInSingleStatementContext: \"Async functions can only be declared at the top level or inside a block.\",\n  AwaitBindingIdentifier: \"Can not use 'await' as identifier inside an async function.\",\n  AwaitBindingIdentifierInStaticBlock: \"Can not use 'await' as identifier inside a static block.\",\n  AwaitExpressionFormalParameter: \"'await' is not allowed in async function parameters.\",\n  AwaitNotInAsyncContext: \"'await' is only allowed within async functions and at the top levels of modules.\",\n  AwaitNotInAsyncFunction: \"'await' is only allowed within async functions.\",\n  BadGetterArity: \"A 'get' accesor must not have any formal parameters.\",\n  BadSetterArity: \"A 'set' accesor must have exactly one formal parameter.\",\n  BadSetterRestParameter: \"A 'set' accesor function argument must not be a rest parameter.\",\n  ConstructorClassField: \"Classes may not have a field named 'constructor'.\",\n  ConstructorClassPrivateField: \"Classes may not have a private field named '#constructor'.\",\n  ConstructorIsAccessor: \"Class constructor may not be an accessor.\",\n  ConstructorIsAsync: \"Constructor can't be an async function.\",\n  ConstructorIsGenerator: \"Constructor can't be a generator.\",\n  DeclarationMissingInitializer: \"'%0' require an initialization value.\",\n  DecoratorBeforeExport: \"Decorators must be placed *before* the 'export' keyword. You can set the 'decoratorsBeforeExport' option to false to use the 'export @decorator class {}' syntax.\",\n  DecoratorConstructor: \"Decorators can't be used with a constructor. Did you mean '@dec class { ... }'?\",\n  DecoratorExportClass: \"Using the export keyword between a decorator and a class is not allowed. Please use `export @dec class` instead.\",\n  DecoratorSemicolon: \"Decorators must not be followed by a semicolon.\",\n  DecoratorStaticBlock: \"Decorators can't be used with a static block.\",\n  DeletePrivateField: \"Deleting a private field is not allowed.\",\n  DestructureNamedImport: \"ES2015 named imports do not destructure. Use another statement for destructuring after the import.\",\n  DuplicateConstructor: \"Duplicate constructor in the same class.\",\n  DuplicateDefaultExport: \"Only one default export allowed per module.\",\n  DuplicateExport: \"`%0` has already been exported. Exported identifiers must be unique.\",\n  DuplicateProto: \"Redefinition of __proto__ property.\",\n  DuplicateRegExpFlags: \"Duplicate regular expression flag.\",\n  ElementAfterRest: \"Rest element must be last element.\",\n  EscapedCharNotAnIdentifier: \"Invalid Unicode escape.\",\n  ExportBindingIsString: \"A string literal cannot be used as an exported binding without `from`.\\n- Did you mean `export { '%0' as '%1' } from 'some-module'`?\",\n  ExportDefaultFromAsIdentifier: \"'from' is not allowed as an identifier after 'export default'.\",\n  ForInOfLoopInitializer: \"'%0' loop variable declaration may not have an initializer.\",\n  ForOfAsync: \"The left-hand side of a for-of loop may not be 'async'.\",\n  ForOfLet: \"The left-hand side of a for-of loop may not start with 'let'.\",\n  GeneratorInSingleStatementContext: \"Generators can only be declared at the top level or inside a block.\",\n  IllegalBreakContinue: \"Unsyntactic %0.\",\n  IllegalLanguageModeDirective: \"Illegal 'use strict' directive in function with non-simple parameter list.\",\n  IllegalReturn: \"'return' outside of function.\",\n  ImportBindingIsString: 'A string literal cannot be used as an imported binding.\\n- Did you mean `import { \"%0\" as foo }`?',\n  ImportCallArgumentTrailingComma: \"Trailing comma is disallowed inside import(...) arguments.\",\n  ImportCallArity: \"`import()` requires exactly %0.\",\n  ImportCallNotNewExpression: \"Cannot use new with import(...).\",\n  ImportCallSpreadArgument: \"`...` is not allowed in `import()`.\",\n  InvalidBigIntLiteral: \"Invalid BigIntLiteral.\",\n  InvalidCodePoint: \"Code point out of bounds.\",\n  InvalidDecimal: \"Invalid decimal.\",\n  InvalidDigit: \"Expected number in radix %0.\",\n  InvalidEscapeSequence: \"Bad character escape sequence.\",\n  InvalidEscapeSequenceTemplate: \"Invalid escape sequence in template.\",\n  InvalidEscapedReservedWord: \"Escape sequence in keyword %0.\",\n  InvalidIdentifier: \"Invalid identifier %0.\",\n  InvalidLhs: \"Invalid left-hand side in %0.\",\n  InvalidLhsBinding: \"Binding invalid left-hand side in %0.\",\n  InvalidNumber: \"Invalid number.\",\n  InvalidOrMissingExponent: \"Floating-point numbers require a valid exponent after the 'e'.\",\n  InvalidOrUnexpectedToken: \"Unexpected character '%0'.\",\n  InvalidParenthesizedAssignment: \"Invalid parenthesized assignment pattern.\",\n  InvalidPrivateFieldResolution: \"Private name #%0 is not defined.\",\n  InvalidPropertyBindingPattern: \"Binding member expression.\",\n  InvalidRecordProperty: \"Only properties and spread elements are allowed in record definitions.\",\n  InvalidRestAssignmentPattern: \"Invalid rest operator's argument.\",\n  LabelRedeclaration: \"Label '%0' is already declared.\",\n  LetInLexicalBinding: \"'let' is not allowed to be used as a name in 'let' or 'const' declarations.\",\n  LineTerminatorBeforeArrow: \"No line break is allowed before '=>'.\",\n  MalformedRegExpFlags: \"Invalid regular expression flag.\",\n  MissingClassName: \"A class name is required.\",\n  MissingEqInAssignment: \"Only '=' operator can be used for specifying default value.\",\n  MissingSemicolon: \"Missing semicolon.\",\n  MissingUnicodeEscape: \"Expecting Unicode escape sequence \\\\uXXXX.\",\n  MixingCoalesceWithLogical: \"Nullish coalescing operator(??) requires parens when mixing with logical operators.\",\n  ModuleAttributeDifferentFromType: \"The only accepted module attribute is `type`.\",\n  ModuleAttributeInvalidValue: \"Only string literals are allowed as module attribute values.\",\n  ModuleAttributesWithDuplicateKeys: 'Duplicate key \"%0\" is not allowed in module attributes.',\n  ModuleExportNameHasLoneSurrogate: \"An export name cannot include a lone surrogate, found '\\\\u%0'.\",\n  ModuleExportUndefined: \"Export '%0' is not defined.\",\n  MultipleDefaultsInSwitch: \"Multiple default clauses.\",\n  NewlineAfterThrow: \"Illegal newline after throw.\",\n  NoCatchOrFinally: \"Missing catch or finally clause.\",\n  NumberIdentifier: \"Identifier directly after number.\",\n  NumericSeparatorInEscapeSequence: \"Numeric separators are not allowed inside unicode escape sequences or hex escape sequences.\",\n  ObsoleteAwaitStar: \"'await*' has been removed from the async functions proposal. Use Promise.all() instead.\",\n  OptionalChainingNoNew: \"Constructors in/after an Optional Chain are not allowed.\",\n  OptionalChainingNoTemplate: \"Tagged Template Literals are not allowed in optionalChain.\",\n  OverrideOnConstructor: \"'override' modifier cannot appear on a constructor declaration.\",\n  ParamDupe: \"Argument name clash.\",\n  PatternHasAccessor: \"Object pattern can't contain getter or setter.\",\n  PatternHasMethod: \"Object pattern can't contain methods.\",\n  PipelineBodyNoArrow: 'Unexpected arrow \"=>\" after pipeline body; arrow function in pipeline body must be parenthesized.',\n  PipelineBodySequenceExpression: \"Pipeline body may not be a comma-separated sequence expression.\",\n  PipelineHeadSequenceExpression: \"Pipeline head should not be a comma-separated sequence expression.\",\n  PipelineTopicUnused: \"Pipeline is in topic style but does not use topic reference.\",\n  PrimaryTopicNotAllowed: \"Topic reference was used in a lexical context without topic binding.\",\n  PrimaryTopicRequiresSmartPipeline: \"Primary Topic Reference found but pipelineOperator not passed 'smart' for 'proposal' option.\",\n  PrivateInExpectedIn: \"Private names are only allowed in property accesses (`obj.#%0`) or in `in` expressions (`#%0 in obj`).\",\n  PrivateNameRedeclaration: \"Duplicate private name #%0.\",\n  RecordExpressionBarIncorrectEndSyntaxType: \"Record expressions ending with '|}' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'.\",\n  RecordExpressionBarIncorrectStartSyntaxType: \"Record expressions starting with '{|' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'.\",\n  RecordExpressionHashIncorrectStartSyntaxType: \"Record expressions starting with '#{' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'hash'.\",\n  RecordNoProto: \"'__proto__' is not allowed in Record expressions.\",\n  RestTrailingComma: \"Unexpected trailing comma after rest element.\",\n  SloppyFunction: \"In non-strict mode code, functions can only be declared at top level, inside a block, or as the body of an if statement.\",\n  StaticPrototype: \"Classes may not have static property named prototype.\",\n  StrictDelete: \"Deleting local variable in strict mode.\",\n  StrictEvalArguments: \"Assigning to '%0' in strict mode.\",\n  StrictEvalArgumentsBinding: \"Binding '%0' in strict mode.\",\n  StrictFunction: \"In strict mode code, functions can only be declared at top level or inside a block.\",\n  StrictNumericEscape: \"The only valid numeric escape in strict mode is '\\\\0'.\",\n  StrictOctalLiteral: \"Legacy octal literals are not allowed in strict mode.\",\n  StrictWith: \"'with' in strict mode.\",\n  SuperNotAllowed: \"`super()` is only valid inside a class constructor of a subclass. Maybe a typo in the method name ('constructor') or not extending another class?\",\n  SuperPrivateField: \"Private fields can't be accessed on super.\",\n  TrailingDecorator: \"Decorators must be attached to a class element.\",\n  TupleExpressionBarIncorrectEndSyntaxType: \"Tuple expressions ending with '|]' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'.\",\n  TupleExpressionBarIncorrectStartSyntaxType: \"Tuple expressions starting with '[|' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'.\",\n  TupleExpressionHashIncorrectStartSyntaxType: \"Tuple expressions starting with '#[' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'hash'.\",\n  UnexpectedArgumentPlaceholder: \"Unexpected argument placeholder.\",\n  UnexpectedAwaitAfterPipelineBody: 'Unexpected \"await\" after pipeline body; await must have parentheses in minimal proposal.',\n  UnexpectedDigitAfterHash: \"Unexpected digit after hash token.\",\n  UnexpectedImportExport: \"'import' and 'export' may only appear at the top level.\",\n  UnexpectedKeyword: \"Unexpected keyword '%0'.\",\n  UnexpectedLeadingDecorator: \"Leading decorators must be attached to a class declaration.\",\n  UnexpectedLexicalDeclaration: \"Lexical declaration cannot appear in a single-statement context.\",\n  UnexpectedNewTarget: \"`new.target` can only be used in functions or class properties.\",\n  UnexpectedNumericSeparator: \"A numeric separator is only allowed between two digits.\",\n  UnexpectedPrivateField: \"Private names can only be used as the name of a class element (i.e. class C { #p = 42; #m() {} } )\\n or a property of member expression (i.e. this.#p).\",\n  UnexpectedReservedWord: \"Unexpected reserved word '%0'.\",\n  UnexpectedSuper: \"'super' is only allowed in object methods and classes.\",\n  UnexpectedToken: \"Unexpected token '%0'.\",\n  UnexpectedTokenUnaryExponentiation: \"Illegal expression. Wrap left hand side or entire exponentiation in parentheses.\",\n  UnsupportedBind: \"Binding should be performed on object property.\",\n  UnsupportedDecoratorExport: \"A decorated export must export a class declaration.\",\n  UnsupportedDefaultExport: \"Only expressions, functions or classes are allowed as the `default` export.\",\n  UnsupportedImport: \"`import` can only be used in `import()` or `import.meta`.\",\n  UnsupportedMetaProperty: \"The only valid meta property for %0 is %0.%1.\",\n  UnsupportedParameterDecorator: \"Decorators cannot be used to decorate parameters.\",\n  UnsupportedPropertyDecorator: \"Decorators cannot be used to decorate object literal properties.\",\n  UnsupportedSuper: \"'super' can only be used with function calls (i.e. super()) or in property accesses (i.e. super.prop or super[prop]).\",\n  UnterminatedComment: \"Unterminated comment.\",\n  UnterminatedRegExp: \"Unterminated regular expression.\",\n  UnterminatedString: \"Unterminated string constant.\",\n  UnterminatedTemplate: \"Unterminated template.\",\n  VarRedeclaration: \"Identifier '%0' has already been declared.\",\n  YieldBindingIdentifier: \"Can not use 'yield' as identifier inside a generator.\",\n  YieldInParameter: \"Yield expression is not allowed in formal parameters.\",\n  ZeroDigitNumericSeparator: \"Numeric separator can not be used after leading 0.\"\n}, ErrorCodes.SyntaxError);\nconst SourceTypeModuleErrorMessages = makeErrorTemplates({\n  ImportMetaOutsideModule: `import.meta may appear only with 'sourceType: \"module\"'`,\n  ImportOutsideModule: `'import' and 'export' may appear only with 'sourceType: \"module\"'`\n}, ErrorCodes.SourceTypeModuleError);\n\nfunction makeErrorTemplates(messages, code) {\n  const templates = {};\n  Object.keys(messages).forEach(reasonCode => {\n    templates[reasonCode] = Object.freeze({\n      code,\n      reasonCode,\n      template: messages[reasonCode]\n    });\n  });\n  return Object.freeze(templates);\n}\nclass ParserError extends CommentsParser {\n  getLocationForPosition(pos) {\n    let loc;\n    if (pos === this.state.start) loc = this.state.startLoc;else if (pos === this.state.lastTokStart) loc = this.state.lastTokStartLoc;else if (pos === this.state.end) loc = this.state.endLoc;else if (pos === this.state.lastTokEnd) loc = this.state.lastTokEndLoc;else loc = getLineInfo(this.input, pos);\n    return loc;\n  }\n\n  raise(pos, {\n    code,\n    reasonCode,\n    template\n  }, ...params) {\n    return this.raiseWithData(pos, {\n      code,\n      reasonCode\n    }, template, ...params);\n  }\n\n  raiseOverwrite(pos, {\n    code,\n    template\n  }, ...params) {\n    const loc = this.getLocationForPosition(pos);\n    const message = template.replace(/%(\\d+)/g, (_, i) => params[i]) + ` (${loc.line}:${loc.column})`;\n\n    if (this.options.errorRecovery) {\n      const errors = this.state.errors;\n\n      for (let i = errors.length - 1; i >= 0; i--) {\n        const error = errors[i];\n\n        if (error.pos === pos) {\n          return Object.assign(error, {\n            message\n          });\n        } else if (error.pos < pos) {\n          break;\n        }\n      }\n    }\n\n    return this._raise({\n      code,\n      loc,\n      pos\n    }, message);\n  }\n\n  raiseWithData(pos, data, errorTemplate, ...params) {\n    const loc = this.getLocationForPosition(pos);\n    const message = errorTemplate.replace(/%(\\d+)/g, (_, i) => params[i]) + ` (${loc.line}:${loc.column})`;\n    return this._raise(Object.assign({\n      loc,\n      pos\n    }, data), message);\n  }\n\n  _raise(errorContext, message) {\n    const err = new SyntaxError(message);\n    Object.assign(err, errorContext);\n\n    if (this.options.errorRecovery) {\n      if (!this.isLookahead) this.state.errors.push(err);\n      return err;\n    } else {\n      throw err;\n    }\n  }\n\n}\n\nvar estree = (superClass => class extends superClass {\n  estreeParseRegExpLiteral({\n    pattern,\n    flags\n  }) {\n    let regex = null;\n\n    try {\n      regex = new RegExp(pattern, flags);\n    } catch (e) {}\n\n    const node = this.estreeParseLiteral(regex);\n    node.regex = {\n      pattern,\n      flags\n    };\n    return node;\n  }\n\n  estreeParseBigIntLiteral(value) {\n    let bigInt;\n\n    try {\n      bigInt = BigInt(value);\n    } catch (_unused) {\n      bigInt = null;\n    }\n\n    const node = this.estreeParseLiteral(bigInt);\n    node.bigint = String(node.value || value);\n    return node;\n  }\n\n  estreeParseDecimalLiteral(value) {\n    const decimal = null;\n    const node = this.estreeParseLiteral(decimal);\n    node.decimal = String(node.value || value);\n    return node;\n  }\n\n  estreeParseLiteral(value) {\n    return this.parseLiteral(value, \"Literal\");\n  }\n\n  directiveToStmt(directive) {\n    const directiveLiteral = directive.value;\n    const stmt = this.startNodeAt(directive.start, directive.loc.start);\n    const expression = this.startNodeAt(directiveLiteral.start, directiveLiteral.loc.start);\n    expression.value = directiveLiteral.extra.expressionValue;\n    expression.raw = directiveLiteral.extra.raw;\n    stmt.expression = this.finishNodeAt(expression, \"Literal\", directiveLiteral.end, directiveLiteral.loc.end);\n    stmt.directive = directiveLiteral.extra.raw.slice(1, -1);\n    return this.finishNodeAt(stmt, \"ExpressionStatement\", directive.end, directive.loc.end);\n  }\n\n  initFunction(node, isAsync) {\n    super.initFunction(node, isAsync);\n    node.expression = false;\n  }\n\n  checkDeclaration(node) {\n    if (node != null && this.isObjectProperty(node)) {\n      this.checkDeclaration(node.value);\n    } else {\n      super.checkDeclaration(node);\n    }\n  }\n\n  getObjectOrClassMethodParams(method) {\n    return method.value.params;\n  }\n\n  isValidDirective(stmt) {\n    var _stmt$expression$extr;\n\n    return stmt.type === \"ExpressionStatement\" && stmt.expression.type === \"Literal\" && typeof stmt.expression.value === \"string\" && !((_stmt$expression$extr = stmt.expression.extra) != null && _stmt$expression$extr.parenthesized);\n  }\n\n  stmtToDirective(stmt) {\n    const directive = super.stmtToDirective(stmt);\n    const value = stmt.expression.value;\n    this.addExtra(directive.value, \"expressionValue\", value);\n    return directive;\n  }\n\n  parseBlockBody(node, ...args) {\n    super.parseBlockBody(node, ...args);\n    const directiveStatements = node.directives.map(d => this.directiveToStmt(d));\n    node.body = directiveStatements.concat(node.body);\n    delete node.directives;\n  }\n\n  pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper) {\n    this.parseMethod(method, isGenerator, isAsync, isConstructor, allowsDirectSuper, \"ClassMethod\", true);\n\n    if (method.typeParameters) {\n      method.value.typeParameters = method.typeParameters;\n      delete method.typeParameters;\n    }\n\n    classBody.body.push(method);\n  }\n\n  parseExprAtom(refExpressionErrors) {\n    switch (this.state.type) {\n      case types$1.num:\n      case types$1.string:\n        return this.estreeParseLiteral(this.state.value);\n\n      case types$1.regexp:\n        return this.estreeParseRegExpLiteral(this.state.value);\n\n      case types$1.bigint:\n        return this.estreeParseBigIntLiteral(this.state.value);\n\n      case types$1.decimal:\n        return this.estreeParseDecimalLiteral(this.state.value);\n\n      case types$1._null:\n        return this.estreeParseLiteral(null);\n\n      case types$1._true:\n        return this.estreeParseLiteral(true);\n\n      case types$1._false:\n        return this.estreeParseLiteral(false);\n\n      default:\n        return super.parseExprAtom(refExpressionErrors);\n    }\n  }\n\n  parseMaybePrivateName(...args) {\n    const node = super.parseMaybePrivateName(...args);\n\n    if (node.type === \"PrivateName\" && this.getPluginOption(\"estree\", \"classFeatures\")) {\n      return this.convertPrivateNameToPrivateIdentifier(node);\n    }\n\n    return node;\n  }\n\n  convertPrivateNameToPrivateIdentifier(node) {\n    const name = super.getPrivateNameSV(node);\n    node = node;\n    delete node.id;\n    node.name = name;\n    node.type = \"PrivateIdentifier\";\n    return node;\n  }\n\n  isPrivateName(node) {\n    if (!this.getPluginOption(\"estree\", \"classFeatures\")) {\n      return super.isPrivateName(node);\n    }\n\n    return node.type === \"PrivateIdentifier\";\n  }\n\n  getPrivateNameSV(node) {\n    if (!this.getPluginOption(\"estree\", \"classFeatures\")) {\n      return super.getPrivateNameSV(node);\n    }\n\n    return node.name;\n  }\n\n  parseLiteral(value, type, startPos, startLoc) {\n    const node = super.parseLiteral(value, type, startPos, startLoc);\n    node.raw = node.extra.raw;\n    delete node.extra;\n    return node;\n  }\n\n  parseFunctionBody(node, allowExpression, isMethod = false) {\n    super.parseFunctionBody(node, allowExpression, isMethod);\n    node.expression = node.body.type !== \"BlockStatement\";\n  }\n\n  parseMethod(node, isGenerator, isAsync, isConstructor, allowDirectSuper, type, inClassScope = false) {\n    let funcNode = this.startNode();\n    funcNode.kind = node.kind;\n    funcNode = super.parseMethod(funcNode, isGenerator, isAsync, isConstructor, allowDirectSuper, type, inClassScope);\n    funcNode.type = \"FunctionExpression\";\n    delete funcNode.kind;\n    node.value = funcNode;\n\n    if (type === \"ClassPrivateMethod\") {\n      node.computed = false;\n    }\n\n    type = \"MethodDefinition\";\n    return this.finishNode(node, type);\n  }\n\n  parseClassProperty(...args) {\n    const propertyNode = super.parseClassProperty(...args);\n\n    if (this.getPluginOption(\"estree\", \"classFeatures\")) {\n      propertyNode.type = \"PropertyDefinition\";\n    }\n\n    return propertyNode;\n  }\n\n  parseClassPrivateProperty(...args) {\n    const propertyNode = super.parseClassPrivateProperty(...args);\n\n    if (this.getPluginOption(\"estree\", \"classFeatures\")) {\n      propertyNode.type = \"PropertyDefinition\";\n      propertyNode.computed = false;\n    }\n\n    return propertyNode;\n  }\n\n  parseObjectMethod(prop, isGenerator, isAsync, isPattern, isAccessor) {\n    const node = super.parseObjectMethod(prop, isGenerator, isAsync, isPattern, isAccessor);\n\n    if (node) {\n      node.type = \"Property\";\n      if (node.kind === \"method\") node.kind = \"init\";\n      node.shorthand = false;\n    }\n\n    return node;\n  }\n\n  parseObjectProperty(prop, startPos, startLoc, isPattern, refExpressionErrors) {\n    const node = super.parseObjectProperty(prop, startPos, startLoc, isPattern, refExpressionErrors);\n\n    if (node) {\n      node.kind = \"init\";\n      node.type = \"Property\";\n    }\n\n    return node;\n  }\n\n  toAssignable(node, isLHS = false) {\n    if (node != null && this.isObjectProperty(node)) {\n      this.toAssignable(node.value, isLHS);\n      return node;\n    }\n\n    return super.toAssignable(node, isLHS);\n  }\n\n  toAssignableObjectExpressionProp(prop, ...args) {\n    if (prop.kind === \"get\" || prop.kind === \"set\") {\n      this.raise(prop.key.start, ErrorMessages.PatternHasAccessor);\n    } else if (prop.method) {\n      this.raise(prop.key.start, ErrorMessages.PatternHasMethod);\n    } else {\n      super.toAssignableObjectExpressionProp(prop, ...args);\n    }\n  }\n\n  finishCallExpression(node, optional) {\n    super.finishCallExpression(node, optional);\n\n    if (node.callee.type === \"Import\") {\n      node.type = \"ImportExpression\";\n      node.source = node.arguments[0];\n\n      if (this.hasPlugin(\"importAssertions\")) {\n        var _node$arguments$;\n\n        node.attributes = (_node$arguments$ = node.arguments[1]) != null ? _node$arguments$ : null;\n      }\n\n      delete node.arguments;\n      delete node.callee;\n    }\n\n    return node;\n  }\n\n  toReferencedArguments(node) {\n    if (node.type === \"ImportExpression\") {\n      return;\n    }\n\n    super.toReferencedArguments(node);\n  }\n\n  parseExport(node) {\n    super.parseExport(node);\n\n    switch (node.type) {\n      case \"ExportAllDeclaration\":\n        node.exported = null;\n        break;\n\n      case \"ExportNamedDeclaration\":\n        if (node.specifiers.length === 1 && node.specifiers[0].type === \"ExportNamespaceSpecifier\") {\n          node.type = \"ExportAllDeclaration\";\n          node.exported = node.specifiers[0].exported;\n          delete node.specifiers;\n        }\n\n        break;\n    }\n\n    return node;\n  }\n\n  parseSubscript(base, startPos, startLoc, noCalls, state) {\n    const node = super.parseSubscript(base, startPos, startLoc, noCalls, state);\n\n    if (state.optionalChainMember) {\n      if (node.type === \"OptionalMemberExpression\" || node.type === \"OptionalCallExpression\") {\n        node.type = node.type.substring(8);\n      }\n\n      if (state.stop) {\n        const chain = this.startNodeAtNode(node);\n        chain.expression = node;\n        return this.finishNode(chain, \"ChainExpression\");\n      }\n    } else if (node.type === \"MemberExpression\" || node.type === \"CallExpression\") {\n      node.optional = false;\n    }\n\n    return node;\n  }\n\n  hasPropertyAsPrivateName(node) {\n    if (node.type === \"ChainExpression\") {\n      node = node.expression;\n    }\n\n    return super.hasPropertyAsPrivateName(node);\n  }\n\n  isOptionalChain(node) {\n    return node.type === \"ChainExpression\";\n  }\n\n  isObjectProperty(node) {\n    return node.type === \"Property\" && node.kind === \"init\" && !node.method;\n  }\n\n  isObjectMethod(node) {\n    return node.method || node.kind === \"get\" || node.kind === \"set\";\n  }\n\n});\n\nclass TokContext {\n  constructor(token, isExpr, preserveSpace, override) {\n    this.token = void 0;\n    this.isExpr = void 0;\n    this.preserveSpace = void 0;\n    this.override = void 0;\n    this.token = token;\n    this.isExpr = !!isExpr;\n    this.preserveSpace = !!preserveSpace;\n    this.override = override;\n  }\n\n}\nconst types = {\n  braceStatement: new TokContext(\"{\", false),\n  braceExpression: new TokContext(\"{\", true),\n  recordExpression: new TokContext(\"#{\", true),\n  templateQuasi: new TokContext(\"${\", false),\n  parenStatement: new TokContext(\"(\", false),\n  parenExpression: new TokContext(\"(\", true),\n  template: new TokContext(\"`\", true, true, p => p.readTmplToken()),\n  functionExpression: new TokContext(\"function\", true),\n  functionStatement: new TokContext(\"function\", false)\n};\n\ntypes$1.parenR.updateContext = types$1.braceR.updateContext = function () {\n  if (this.state.context.length === 1) {\n    this.state.exprAllowed = true;\n    return;\n  }\n\n  let out = this.state.context.pop();\n\n  if (out === types.braceStatement && this.curContext().token === \"function\") {\n    out = this.state.context.pop();\n  }\n\n  this.state.exprAllowed = !out.isExpr;\n};\n\ntypes$1.name.updateContext = function (prevType) {\n  let allowed = false;\n\n  if (prevType !== types$1.dot) {\n    if (this.state.value === \"of\" && !this.state.exprAllowed && prevType !== types$1._function && prevType !== types$1._class) {\n      allowed = true;\n    }\n  }\n\n  this.state.exprAllowed = allowed;\n};\n\ntypes$1.braceL.updateContext = function (prevType) {\n  this.state.context.push(this.braceIsBlock(prevType) ? types.braceStatement : types.braceExpression);\n  this.state.exprAllowed = true;\n};\n\ntypes$1.dollarBraceL.updateContext = function () {\n  this.state.context.push(types.templateQuasi);\n  this.state.exprAllowed = true;\n};\n\ntypes$1.parenL.updateContext = function (prevType) {\n  const statementParens = prevType === types$1._if || prevType === types$1._for || prevType === types$1._with || prevType === types$1._while;\n  this.state.context.push(statementParens ? types.parenStatement : types.parenExpression);\n  this.state.exprAllowed = true;\n};\n\ntypes$1.incDec.updateContext = function () {};\n\ntypes$1._function.updateContext = types$1._class.updateContext = function (prevType) {\n  if (prevType.beforeExpr && prevType !== types$1.semi && prevType !== types$1._else && !(prevType === types$1._return && this.hasPrecedingLineBreak()) && !((prevType === types$1.colon || prevType === types$1.braceL) && this.curContext() === types.b_stat)) {\n    this.state.context.push(types.functionExpression);\n  } else {\n    this.state.context.push(types.functionStatement);\n  }\n\n  this.state.exprAllowed = false;\n};\n\ntypes$1.backQuote.updateContext = function () {\n  if (this.curContext() === types.template) {\n    this.state.context.pop();\n  } else {\n    this.state.context.push(types.template);\n  }\n\n  this.state.exprAllowed = false;\n};\n\ntypes$1.braceHashL.updateContext = function () {\n  this.state.context.push(types.recordExpression);\n  this.state.exprAllowed = true;\n};\n\nlet nonASCIIidentifierStartChars = \"\\xaa\\xb5\\xba\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02c1\\u02c6-\\u02d1\\u02e0-\\u02e4\\u02ec\\u02ee\\u0370-\\u0374\\u0376\\u0377\\u037a-\\u037d\\u037f\\u0386\\u0388-\\u038a\\u038c\\u038e-\\u03a1\\u03a3-\\u03f5\\u03f7-\\u0481\\u048a-\\u052f\\u0531-\\u0556\\u0559\\u0560-\\u0588\\u05d0-\\u05ea\\u05ef-\\u05f2\\u0620-\\u064a\\u066e\\u066f\\u0671-\\u06d3\\u06d5\\u06e5\\u06e6\\u06ee\\u06ef\\u06fa-\\u06fc\\u06ff\\u0710\\u0712-\\u072f\\u074d-\\u07a5\\u07b1\\u07ca-\\u07ea\\u07f4\\u07f5\\u07fa\\u0800-\\u0815\\u081a\\u0824\\u0828\\u0840-\\u0858\\u0860-\\u086a\\u08a0-\\u08b4\\u08b6-\\u08c7\\u0904-\\u0939\\u093d\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098c\\u098f\\u0990\\u0993-\\u09a8\\u09aa-\\u09b0\\u09b2\\u09b6-\\u09b9\\u09bd\\u09ce\\u09dc\\u09dd\\u09df-\\u09e1\\u09f0\\u09f1\\u09fc\\u0a05-\\u0a0a\\u0a0f\\u0a10\\u0a13-\\u0a28\\u0a2a-\\u0a30\\u0a32\\u0a33\\u0a35\\u0a36\\u0a38\\u0a39\\u0a59-\\u0a5c\\u0a5e\\u0a72-\\u0a74\\u0a85-\\u0a8d\\u0a8f-\\u0a91\\u0a93-\\u0aa8\\u0aaa-\\u0ab0\\u0ab2\\u0ab3\\u0ab5-\\u0ab9\\u0abd\\u0ad0\\u0ae0\\u0ae1\\u0af9\\u0b05-\\u0b0c\\u0b0f\\u0b10\\u0b13-\\u0b28\\u0b2a-\\u0b30\\u0b32\\u0b33\\u0b35-\\u0b39\\u0b3d\\u0b5c\\u0b5d\\u0b5f-\\u0b61\\u0b71\\u0b83\\u0b85-\\u0b8a\\u0b8e-\\u0b90\\u0b92-\\u0b95\\u0b99\\u0b9a\\u0b9c\\u0b9e\\u0b9f\\u0ba3\\u0ba4\\u0ba8-\\u0baa\\u0bae-\\u0bb9\\u0bd0\\u0c05-\\u0c0c\\u0c0e-\\u0c10\\u0c12-\\u0c28\\u0c2a-\\u0c39\\u0c3d\\u0c58-\\u0c5a\\u0c60\\u0c61\\u0c80\\u0c85-\\u0c8c\\u0c8e-\\u0c90\\u0c92-\\u0ca8\\u0caa-\\u0cb3\\u0cb5-\\u0cb9\\u0cbd\\u0cde\\u0ce0\\u0ce1\\u0cf1\\u0cf2\\u0d04-\\u0d0c\\u0d0e-\\u0d10\\u0d12-\\u0d3a\\u0d3d\\u0d4e\\u0d54-\\u0d56\\u0d5f-\\u0d61\\u0d7a-\\u0d7f\\u0d85-\\u0d96\\u0d9a-\\u0db1\\u0db3-\\u0dbb\\u0dbd\\u0dc0-\\u0dc6\\u0e01-\\u0e30\\u0e32\\u0e33\\u0e40-\\u0e46\\u0e81\\u0e82\\u0e84\\u0e86-\\u0e8a\\u0e8c-\\u0ea3\\u0ea5\\u0ea7-\\u0eb0\\u0eb2\\u0eb3\\u0ebd\\u0ec0-\\u0ec4\\u0ec6\\u0edc-\\u0edf\\u0f00\\u0f40-\\u0f47\\u0f49-\\u0f6c\\u0f88-\\u0f8c\\u1000-\\u102a\\u103f\\u1050-\\u1055\\u105a-\\u105d\\u1061\\u1065\\u1066\\u106e-\\u1070\\u1075-\\u1081\\u108e\\u10a0-\\u10c5\\u10c7\\u10cd\\u10d0-\\u10fa\\u10fc-\\u1248\\u124a-\\u124d\\u1250-\\u1256\\u1258\\u125a-\\u125d\\u1260-\\u1288\\u128a-\\u128d\\u1290-\\u12b0\\u12b2-\\u12b5\\u12b8-\\u12be\\u12c0\\u12c2-\\u12c5\\u12c8-\\u12d6\\u12d8-\\u1310\\u1312-\\u1315\\u1318-\\u135a\\u1380-\\u138f\\u13a0-\\u13f5\\u13f8-\\u13fd\\u1401-\\u166c\\u166f-\\u167f\\u1681-\\u169a\\u16a0-\\u16ea\\u16ee-\\u16f8\\u1700-\\u170c\\u170e-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176c\\u176e-\\u1770\\u1780-\\u17b3\\u17d7\\u17dc\\u1820-\\u1878\\u1880-\\u18a8\\u18aa\\u18b0-\\u18f5\\u1900-\\u191e\\u1950-\\u196d\\u1970-\\u1974\\u1980-\\u19ab\\u19b0-\\u19c9\\u1a00-\\u1a16\\u1a20-\\u1a54\\u1aa7\\u1b05-\\u1b33\\u1b45-\\u1b4b\\u1b83-\\u1ba0\\u1bae\\u1baf\\u1bba-\\u1be5\\u1c00-\\u1c23\\u1c4d-\\u1c4f\\u1c5a-\\u1c7d\\u1c80-\\u1c88\\u1c90-\\u1cba\\u1cbd-\\u1cbf\\u1ce9-\\u1cec\\u1cee-\\u1cf3\\u1cf5\\u1cf6\\u1cfa\\u1d00-\\u1dbf\\u1e00-\\u1f15\\u1f18-\\u1f1d\\u1f20-\\u1f45\\u1f48-\\u1f4d\\u1f50-\\u1f57\\u1f59\\u1f5b\\u1f5d\\u1f5f-\\u1f7d\\u1f80-\\u1fb4\\u1fb6-\\u1fbc\\u1fbe\\u1fc2-\\u1fc4\\u1fc6-\\u1fcc\\u1fd0-\\u1fd3\\u1fd6-\\u1fdb\\u1fe0-\\u1fec\\u1ff2-\\u1ff4\\u1ff6-\\u1ffc\\u2071\\u207f\\u2090-\\u209c\\u2102\\u2107\\u210a-\\u2113\\u2115\\u2118-\\u211d\\u2124\\u2126\\u2128\\u212a-\\u2139\\u213c-\\u213f\\u2145-\\u2149\\u214e\\u2160-\\u2188\\u2c00-\\u2c2e\\u2c30-\\u2c5e\\u2c60-\\u2ce4\\u2ceb-\\u2cee\\u2cf2\\u2cf3\\u2d00-\\u2d25\\u2d27\\u2d2d\\u2d30-\\u2d67\\u2d6f\\u2d80-\\u2d96\\u2da0-\\u2da6\\u2da8-\\u2dae\\u2db0-\\u2db6\\u2db8-\\u2dbe\\u2dc0-\\u2dc6\\u2dc8-\\u2dce\\u2dd0-\\u2dd6\\u2dd8-\\u2dde\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303c\\u3041-\\u3096\\u309b-\\u309f\\u30a1-\\u30fa\\u30fc-\\u30ff\\u3105-\\u312f\\u3131-\\u318e\\u31a0-\\u31bf\\u31f0-\\u31ff\\u3400-\\u4dbf\\u4e00-\\u9ffc\\ua000-\\ua48c\\ua4d0-\\ua4fd\\ua500-\\ua60c\\ua610-\\ua61f\\ua62a\\ua62b\\ua640-\\ua66e\\ua67f-\\ua69d\\ua6a0-\\ua6ef\\ua717-\\ua71f\\ua722-\\ua788\\ua78b-\\ua7bf\\ua7c2-\\ua7ca\\ua7f5-\\ua801\\ua803-\\ua805\\ua807-\\ua80a\\ua80c-\\ua822\\ua840-\\ua873\\ua882-\\ua8b3\\ua8f2-\\ua8f7\\ua8fb\\ua8fd\\ua8fe\\ua90a-\\ua925\\ua930-\\ua946\\ua960-\\ua97c\\ua984-\\ua9b2\\ua9cf\\ua9e0-\\ua9e4\\ua9e6-\\ua9ef\\ua9fa-\\ua9fe\\uaa00-\\uaa28\\uaa40-\\uaa42\\uaa44-\\uaa4b\\uaa60-\\uaa76\\uaa7a\\uaa7e-\\uaaaf\\uaab1\\uaab5\\uaab6\\uaab9-\\uaabd\\uaac0\\uaac2\\uaadb-\\uaadd\\uaae0-\\uaaea\\uaaf2-\\uaaf4\\uab01-\\uab06\\uab09-\\uab0e\\uab11-\\uab16\\uab20-\\uab26\\uab28-\\uab2e\\uab30-\\uab5a\\uab5c-\\uab69\\uab70-\\uabe2\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\uf900-\\ufa6d\\ufa70-\\ufad9\\ufb00-\\ufb06\\ufb13-\\ufb17\\ufb1d\\ufb1f-\\ufb28\\ufb2a-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40\\ufb41\\ufb43\\ufb44\\ufb46-\\ufbb1\\ufbd3-\\ufd3d\\ufd50-\\ufd8f\\ufd92-\\ufdc7\\ufdf0-\\ufdfb\\ufe70-\\ufe74\\ufe76-\\ufefc\\uff21-\\uff3a\\uff41-\\uff5a\\uff66-\\uffbe\\uffc2-\\uffc7\\uffca-\\uffcf\\uffd2-\\uffd7\\uffda-\\uffdc\";\nlet nonASCIIidentifierChars = \"\\u200c\\u200d\\xb7\\u0300-\\u036f\\u0387\\u0483-\\u0487\\u0591-\\u05bd\\u05bf\\u05c1\\u05c2\\u05c4\\u05c5\\u05c7\\u0610-\\u061a\\u064b-\\u0669\\u0670\\u06d6-\\u06dc\\u06df-\\u06e4\\u06e7\\u06e8\\u06ea-\\u06ed\\u06f0-\\u06f9\\u0711\\u0730-\\u074a\\u07a6-\\u07b0\\u07c0-\\u07c9\\u07eb-\\u07f3\\u07fd\\u0816-\\u0819\\u081b-\\u0823\\u0825-\\u0827\\u0829-\\u082d\\u0859-\\u085b\\u08d3-\\u08e1\\u08e3-\\u0903\\u093a-\\u093c\\u093e-\\u094f\\u0951-\\u0957\\u0962\\u0963\\u0966-\\u096f\\u0981-\\u0983\\u09bc\\u09be-\\u09c4\\u09c7\\u09c8\\u09cb-\\u09cd\\u09d7\\u09e2\\u09e3\\u09e6-\\u09ef\\u09fe\\u0a01-\\u0a03\\u0a3c\\u0a3e-\\u0a42\\u0a47\\u0a48\\u0a4b-\\u0a4d\\u0a51\\u0a66-\\u0a71\\u0a75\\u0a81-\\u0a83\\u0abc\\u0abe-\\u0ac5\\u0ac7-\\u0ac9\\u0acb-\\u0acd\\u0ae2\\u0ae3\\u0ae6-\\u0aef\\u0afa-\\u0aff\\u0b01-\\u0b03\\u0b3c\\u0b3e-\\u0b44\\u0b47\\u0b48\\u0b4b-\\u0b4d\\u0b55-\\u0b57\\u0b62\\u0b63\\u0b66-\\u0b6f\\u0b82\\u0bbe-\\u0bc2\\u0bc6-\\u0bc8\\u0bca-\\u0bcd\\u0bd7\\u0be6-\\u0bef\\u0c00-\\u0c04\\u0c3e-\\u0c44\\u0c46-\\u0c48\\u0c4a-\\u0c4d\\u0c55\\u0c56\\u0c62\\u0c63\\u0c66-\\u0c6f\\u0c81-\\u0c83\\u0cbc\\u0cbe-\\u0cc4\\u0cc6-\\u0cc8\\u0cca-\\u0ccd\\u0cd5\\u0cd6\\u0ce2\\u0ce3\\u0ce6-\\u0cef\\u0d00-\\u0d03\\u0d3b\\u0d3c\\u0d3e-\\u0d44\\u0d46-\\u0d48\\u0d4a-\\u0d4d\\u0d57\\u0d62\\u0d63\\u0d66-\\u0d6f\\u0d81-\\u0d83\\u0dca\\u0dcf-\\u0dd4\\u0dd6\\u0dd8-\\u0ddf\\u0de6-\\u0def\\u0df2\\u0df3\\u0e31\\u0e34-\\u0e3a\\u0e47-\\u0e4e\\u0e50-\\u0e59\\u0eb1\\u0eb4-\\u0ebc\\u0ec8-\\u0ecd\\u0ed0-\\u0ed9\\u0f18\\u0f19\\u0f20-\\u0f29\\u0f35\\u0f37\\u0f39\\u0f3e\\u0f3f\\u0f71-\\u0f84\\u0f86\\u0f87\\u0f8d-\\u0f97\\u0f99-\\u0fbc\\u0fc6\\u102b-\\u103e\\u1040-\\u1049\\u1056-\\u1059\\u105e-\\u1060\\u1062-\\u1064\\u1067-\\u106d\\u1071-\\u1074\\u1082-\\u108d\\u108f-\\u109d\\u135d-\\u135f\\u1369-\\u1371\\u1712-\\u1714\\u1732-\\u1734\\u1752\\u1753\\u1772\\u1773\\u17b4-\\u17d3\\u17dd\\u17e0-\\u17e9\\u180b-\\u180d\\u1810-\\u1819\\u18a9\\u1920-\\u192b\\u1930-\\u193b\\u1946-\\u194f\\u19d0-\\u19da\\u1a17-\\u1a1b\\u1a55-\\u1a5e\\u1a60-\\u1a7c\\u1a7f-\\u1a89\\u1a90-\\u1a99\\u1ab0-\\u1abd\\u1abf\\u1ac0\\u1b00-\\u1b04\\u1b34-\\u1b44\\u1b50-\\u1b59\\u1b6b-\\u1b73\\u1b80-\\u1b82\\u1ba1-\\u1bad\\u1bb0-\\u1bb9\\u1be6-\\u1bf3\\u1c24-\\u1c37\\u1c40-\\u1c49\\u1c50-\\u1c59\\u1cd0-\\u1cd2\\u1cd4-\\u1ce8\\u1ced\\u1cf4\\u1cf7-\\u1cf9\\u1dc0-\\u1df9\\u1dfb-\\u1dff\\u203f\\u2040\\u2054\\u20d0-\\u20dc\\u20e1\\u20e5-\\u20f0\\u2cef-\\u2cf1\\u2d7f\\u2de0-\\u2dff\\u302a-\\u302f\\u3099\\u309a\\ua620-\\ua629\\ua66f\\ua674-\\ua67d\\ua69e\\ua69f\\ua6f0\\ua6f1\\ua802\\ua806\\ua80b\\ua823-\\ua827\\ua82c\\ua880\\ua881\\ua8b4-\\ua8c5\\ua8d0-\\ua8d9\\ua8e0-\\ua8f1\\ua8ff-\\ua909\\ua926-\\ua92d\\ua947-\\ua953\\ua980-\\ua983\\ua9b3-\\ua9c0\\ua9d0-\\ua9d9\\ua9e5\\ua9f0-\\ua9f9\\uaa29-\\uaa36\\uaa43\\uaa4c\\uaa4d\\uaa50-\\uaa59\\uaa7b-\\uaa7d\\uaab0\\uaab2-\\uaab4\\uaab7\\uaab8\\uaabe\\uaabf\\uaac1\\uaaeb-\\uaaef\\uaaf5\\uaaf6\\uabe3-\\uabea\\uabec\\uabed\\uabf0-\\uabf9\\ufb1e\\ufe00-\\ufe0f\\ufe20-\\ufe2f\\ufe33\\ufe34\\ufe4d-\\ufe4f\\uff10-\\uff19\\uff3f\";\nconst nonASCIIidentifierStart = new RegExp(\"[\" + nonASCIIidentifierStartChars + \"]\");\nconst nonASCIIidentifier = new RegExp(\"[\" + nonASCIIidentifierStartChars + nonASCIIidentifierChars + \"]\");\nnonASCIIidentifierStartChars = nonASCIIidentifierChars = null;\nconst astralIdentifierStartCodes = [0, 11, 2, 25, 2, 18, 2, 1, 2, 14, 3, 13, 35, 122, 70, 52, 268, 28, 4, 48, 48, 31, 14, 29, 6, 37, 11, 29, 3, 35, 5, 7, 2, 4, 43, 157, 19, 35, 5, 35, 5, 39, 9, 51, 157, 310, 10, 21, 11, 7, 153, 5, 3, 0, 2, 43, 2, 1, 4, 0, 3, 22, 11, 22, 10, 30, 66, 18, 2, 1, 11, 21, 11, 25, 71, 55, 7, 1, 65, 0, 16, 3, 2, 2, 2, 28, 43, 28, 4, 28, 36, 7, 2, 27, 28, 53, 11, 21, 11, 18, 14, 17, 111, 72, 56, 50, 14, 50, 14, 35, 349, 41, 7, 1, 79, 28, 11, 0, 9, 21, 107, 20, 28, 22, 13, 52, 76, 44, 33, 24, 27, 35, 30, 0, 3, 0, 9, 34, 4, 0, 13, 47, 15, 3, 22, 0, 2, 0, 36, 17, 2, 24, 85, 6, 2, 0, 2, 3, 2, 14, 2, 9, 8, 46, 39, 7, 3, 1, 3, 21, 2, 6, 2, 1, 2, 4, 4, 0, 19, 0, 13, 4, 159, 52, 19, 3, 21, 2, 31, 47, 21, 1, 2, 0, 185, 46, 42, 3, 37, 47, 21, 0, 60, 42, 14, 0, 72, 26, 230, 43, 117, 63, 32, 7, 3, 0, 3, 7, 2, 1, 2, 23, 16, 0, 2, 0, 95, 7, 3, 38, 17, 0, 2, 0, 29, 0, 11, 39, 8, 0, 22, 0, 12, 45, 20, 0, 35, 56, 264, 8, 2, 36, 18, 0, 50, 29, 113, 6, 2, 1, 2, 37, 22, 0, 26, 5, 2, 1, 2, 31, 15, 0, 328, 18, 190, 0, 80, 921, 103, 110, 18, 195, 2749, 1070, 4050, 582, 8634, 568, 8, 30, 114, 29, 19, 47, 17, 3, 32, 20, 6, 18, 689, 63, 129, 74, 6, 0, 67, 12, 65, 1, 2, 0, 29, 6135, 9, 1237, 43, 8, 8952, 286, 50, 2, 18, 3, 9, 395, 2309, 106, 6, 12, 4, 8, 8, 9, 5991, 84, 2, 70, 2, 1, 3, 0, 3, 1, 3, 3, 2, 11, 2, 0, 2, 6, 2, 64, 2, 3, 3, 7, 2, 6, 2, 27, 2, 3, 2, 4, 2, 0, 4, 6, 2, 339, 3, 24, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 7, 2357, 44, 11, 6, 17, 0, 370, 43, 1301, 196, 60, 67, 8, 0, 1205, 3, 2, 26, 2, 1, 2, 0, 3, 0, 2, 9, 2, 3, 2, 0, 2, 0, 7, 0, 5, 0, 2, 0, 2, 0, 2, 2, 2, 1, 2, 0, 3, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 1, 2, 0, 3, 3, 2, 6, 2, 3, 2, 3, 2, 0, 2, 9, 2, 16, 6, 2, 2, 4, 2, 16, 4421, 42717, 35, 4148, 12, 221, 3, 5761, 15, 7472, 3104, 541, 1507, 4938];\nconst astralIdentifierCodes = [509, 0, 227, 0, 150, 4, 294, 9, 1368, 2, 2, 1, 6, 3, 41, 2, 5, 0, 166, 1, 574, 3, 9, 9, 370, 1, 154, 10, 176, 2, 54, 14, 32, 9, 16, 3, 46, 10, 54, 9, 7, 2, 37, 13, 2, 9, 6, 1, 45, 0, 13, 2, 49, 13, 9, 3, 2, 11, 83, 11, 7, 0, 161, 11, 6, 9, 7, 3, 56, 1, 2, 6, 3, 1, 3, 2, 10, 0, 11, 1, 3, 6, 4, 4, 193, 17, 10, 9, 5, 0, 82, 19, 13, 9, 214, 6, 3, 8, 28, 1, 83, 16, 16, 9, 82, 12, 9, 9, 84, 14, 5, 9, 243, 14, 166, 9, 71, 5, 2, 1, 3, 3, 2, 0, 2, 1, 13, 9, 120, 6, 3, 6, 4, 0, 29, 9, 41, 6, 2, 3, 9, 0, 10, 10, 47, 15, 406, 7, 2, 7, 17, 9, 57, 21, 2, 13, 123, 5, 4, 0, 2, 1, 2, 6, 2, 0, 9, 9, 49, 4, 2, 1, 2, 4, 9, 9, 330, 3, 19306, 9, 135, 4, 60, 6, 26, 9, 1014, 0, 2, 54, 8, 3, 82, 0, 12, 1, 19628, 1, 5319, 4, 4, 5, 9, 7, 3, 6, 31, 3, 149, 2, 1418, 49, 513, 54, 5, 49, 9, 0, 15, 0, 23, 4, 2, 14, 1361, 6, 2, 16, 3, 6, 2, 1, 2, 4, 262, 6, 10, 9, 419, 13, 1495, 6, 110, 6, 6, 9, 4759, 9, 787719, 239];\n\nfunction isInAstralSet(code, set) {\n  let pos = 0x10000;\n\n  for (let i = 0, length = set.length; i < length; i += 2) {\n    pos += set[i];\n    if (pos > code) return false;\n    pos += set[i + 1];\n    if (pos >= code) return true;\n  }\n\n  return false;\n}\n\nfunction isIdentifierStart(code) {\n  if (code < 65) return code === 36;\n  if (code <= 90) return true;\n  if (code < 97) return code === 95;\n  if (code <= 122) return true;\n\n  if (code <= 0xffff) {\n    return code >= 0xaa && nonASCIIidentifierStart.test(String.fromCharCode(code));\n  }\n\n  return isInAstralSet(code, astralIdentifierStartCodes);\n}\nfunction isIdentifierChar(code) {\n  if (code < 48) return code === 36;\n  if (code < 58) return true;\n  if (code < 65) return false;\n  if (code <= 90) return true;\n  if (code < 97) return code === 95;\n  if (code <= 122) return true;\n\n  if (code <= 0xffff) {\n    return code >= 0xaa && nonASCIIidentifier.test(String.fromCharCode(code));\n  }\n\n  return isInAstralSet(code, astralIdentifierStartCodes) || isInAstralSet(code, astralIdentifierCodes);\n}\n\nconst reservedWords = {\n  keyword: [\"break\", \"case\", \"catch\", \"continue\", \"debugger\", \"default\", \"do\", \"else\", \"finally\", \"for\", \"function\", \"if\", \"return\", \"switch\", \"throw\", \"try\", \"var\", \"const\", \"while\", \"with\", \"new\", \"this\", \"super\", \"class\", \"extends\", \"export\", \"import\", \"null\", \"true\", \"false\", \"in\", \"instanceof\", \"typeof\", \"void\", \"delete\"],\n  strict: [\"implements\", \"interface\", \"let\", \"package\", \"private\", \"protected\", \"public\", \"static\", \"yield\"],\n  strictBind: [\"eval\", \"arguments\"]\n};\nconst keywords = new Set(reservedWords.keyword);\nconst reservedWordsStrictSet = new Set(reservedWords.strict);\nconst reservedWordsStrictBindSet = new Set(reservedWords.strictBind);\nfunction isReservedWord(word, inModule) {\n  return inModule && word === \"await\" || word === \"enum\";\n}\nfunction isStrictReservedWord(word, inModule) {\n  return isReservedWord(word, inModule) || reservedWordsStrictSet.has(word);\n}\nfunction isStrictBindOnlyReservedWord(word) {\n  return reservedWordsStrictBindSet.has(word);\n}\nfunction isStrictBindReservedWord(word, inModule) {\n  return isStrictReservedWord(word, inModule) || isStrictBindOnlyReservedWord(word);\n}\nfunction isKeyword(word) {\n  return keywords.has(word);\n}\n\nconst keywordRelationalOperator = /^in(stanceof)?$/;\nfunction isIteratorStart(current, next) {\n  return current === 64 && next === 64;\n}\n\nconst SCOPE_OTHER = 0b000000000,\n      SCOPE_PROGRAM = 0b000000001,\n      SCOPE_FUNCTION = 0b000000010,\n      SCOPE_ARROW = 0b000000100,\n      SCOPE_SIMPLE_CATCH = 0b000001000,\n      SCOPE_SUPER = 0b000010000,\n      SCOPE_DIRECT_SUPER = 0b000100000,\n      SCOPE_CLASS = 0b001000000,\n      SCOPE_STATIC_BLOCK = 0b010000000,\n      SCOPE_TS_MODULE = 0b100000000,\n      SCOPE_VAR = SCOPE_PROGRAM | SCOPE_FUNCTION | SCOPE_TS_MODULE;\nconst BIND_KIND_VALUE = 0b000000000001,\n      BIND_KIND_TYPE = 0b000000000010,\n      BIND_SCOPE_VAR = 0b000000000100,\n      BIND_SCOPE_LEXICAL = 0b000000001000,\n      BIND_SCOPE_FUNCTION = 0b000000010000,\n      BIND_FLAGS_NONE = 0b000001000000,\n      BIND_FLAGS_CLASS = 0b000010000000,\n      BIND_FLAGS_TS_ENUM = 0b000100000000,\n      BIND_FLAGS_TS_CONST_ENUM = 0b001000000000,\n      BIND_FLAGS_TS_EXPORT_ONLY = 0b010000000000,\n      BIND_FLAGS_FLOW_DECLARE_FN = 0b100000000000;\nconst BIND_CLASS = BIND_KIND_VALUE | BIND_KIND_TYPE | BIND_SCOPE_LEXICAL | BIND_FLAGS_CLASS,\n      BIND_LEXICAL = BIND_KIND_VALUE | 0 | BIND_SCOPE_LEXICAL | 0,\n      BIND_VAR = BIND_KIND_VALUE | 0 | BIND_SCOPE_VAR | 0,\n      BIND_FUNCTION = BIND_KIND_VALUE | 0 | BIND_SCOPE_FUNCTION | 0,\n      BIND_TS_INTERFACE = 0 | BIND_KIND_TYPE | 0 | BIND_FLAGS_CLASS,\n      BIND_TS_TYPE = 0 | BIND_KIND_TYPE | 0 | 0,\n      BIND_TS_ENUM = BIND_KIND_VALUE | BIND_KIND_TYPE | BIND_SCOPE_LEXICAL | BIND_FLAGS_TS_ENUM,\n      BIND_TS_AMBIENT = 0 | 0 | 0 | BIND_FLAGS_TS_EXPORT_ONLY,\n      BIND_NONE = 0 | 0 | 0 | BIND_FLAGS_NONE,\n      BIND_OUTSIDE = BIND_KIND_VALUE | 0 | 0 | BIND_FLAGS_NONE,\n      BIND_TS_CONST_ENUM = BIND_TS_ENUM | BIND_FLAGS_TS_CONST_ENUM,\n      BIND_TS_NAMESPACE = 0 | 0 | 0 | BIND_FLAGS_TS_EXPORT_ONLY,\n      BIND_FLOW_DECLARE_FN = BIND_FLAGS_FLOW_DECLARE_FN;\nconst CLASS_ELEMENT_FLAG_STATIC = 0b100,\n      CLASS_ELEMENT_KIND_GETTER = 0b010,\n      CLASS_ELEMENT_KIND_SETTER = 0b001,\n      CLASS_ELEMENT_KIND_ACCESSOR = CLASS_ELEMENT_KIND_GETTER | CLASS_ELEMENT_KIND_SETTER;\nconst CLASS_ELEMENT_STATIC_GETTER = CLASS_ELEMENT_KIND_GETTER | CLASS_ELEMENT_FLAG_STATIC,\n      CLASS_ELEMENT_STATIC_SETTER = CLASS_ELEMENT_KIND_SETTER | CLASS_ELEMENT_FLAG_STATIC,\n      CLASS_ELEMENT_INSTANCE_GETTER = CLASS_ELEMENT_KIND_GETTER,\n      CLASS_ELEMENT_INSTANCE_SETTER = CLASS_ELEMENT_KIND_SETTER,\n      CLASS_ELEMENT_OTHER = 0;\n\nclass Scope {\n  constructor(flags) {\n    this.flags = void 0;\n    this.var = [];\n    this.lexical = [];\n    this.functions = [];\n    this.flags = flags;\n  }\n\n}\nclass ScopeHandler {\n  constructor(raise, inModule) {\n    this.scopeStack = [];\n    this.undefinedExports = new Map();\n    this.undefinedPrivateNames = new Map();\n    this.raise = raise;\n    this.inModule = inModule;\n  }\n\n  get inFunction() {\n    return (this.currentVarScope().flags & SCOPE_FUNCTION) > 0;\n  }\n\n  get allowSuper() {\n    return (this.currentThisScope().flags & SCOPE_SUPER) > 0;\n  }\n\n  get allowDirectSuper() {\n    return (this.currentThisScope().flags & SCOPE_DIRECT_SUPER) > 0;\n  }\n\n  get inClass() {\n    return (this.currentThisScope().flags & SCOPE_CLASS) > 0;\n  }\n\n  get inStaticBlock() {\n    return (this.currentThisScope().flags & SCOPE_STATIC_BLOCK) > 0;\n  }\n\n  get inNonArrowFunction() {\n    return (this.currentThisScope().flags & SCOPE_FUNCTION) > 0;\n  }\n\n  get treatFunctionsAsVar() {\n    return this.treatFunctionsAsVarInScope(this.currentScope());\n  }\n\n  createScope(flags) {\n    return new Scope(flags);\n  }\n\n  enter(flags) {\n    this.scopeStack.push(this.createScope(flags));\n  }\n\n  exit() {\n    this.scopeStack.pop();\n  }\n\n  treatFunctionsAsVarInScope(scope) {\n    return !!(scope.flags & SCOPE_FUNCTION || !this.inModule && scope.flags & SCOPE_PROGRAM);\n  }\n\n  declareName(name, bindingType, pos) {\n    let scope = this.currentScope();\n\n    if (bindingType & BIND_SCOPE_LEXICAL || bindingType & BIND_SCOPE_FUNCTION) {\n      this.checkRedeclarationInScope(scope, name, bindingType, pos);\n\n      if (bindingType & BIND_SCOPE_FUNCTION) {\n        scope.functions.push(name);\n      } else {\n        scope.lexical.push(name);\n      }\n\n      if (bindingType & BIND_SCOPE_LEXICAL) {\n        this.maybeExportDefined(scope, name);\n      }\n    } else if (bindingType & BIND_SCOPE_VAR) {\n      for (let i = this.scopeStack.length - 1; i >= 0; --i) {\n        scope = this.scopeStack[i];\n        this.checkRedeclarationInScope(scope, name, bindingType, pos);\n        scope.var.push(name);\n        this.maybeExportDefined(scope, name);\n        if (scope.flags & SCOPE_VAR) break;\n      }\n    }\n\n    if (this.inModule && scope.flags & SCOPE_PROGRAM) {\n      this.undefinedExports.delete(name);\n    }\n  }\n\n  maybeExportDefined(scope, name) {\n    if (this.inModule && scope.flags & SCOPE_PROGRAM) {\n      this.undefinedExports.delete(name);\n    }\n  }\n\n  checkRedeclarationInScope(scope, name, bindingType, pos) {\n    if (this.isRedeclaredInScope(scope, name, bindingType)) {\n      this.raise(pos, ErrorMessages.VarRedeclaration, name);\n    }\n  }\n\n  isRedeclaredInScope(scope, name, bindingType) {\n    if (!(bindingType & BIND_KIND_VALUE)) return false;\n\n    if (bindingType & BIND_SCOPE_LEXICAL) {\n      return scope.lexical.indexOf(name) > -1 || scope.functions.indexOf(name) > -1 || scope.var.indexOf(name) > -1;\n    }\n\n    if (bindingType & BIND_SCOPE_FUNCTION) {\n      return scope.lexical.indexOf(name) > -1 || !this.treatFunctionsAsVarInScope(scope) && scope.var.indexOf(name) > -1;\n    }\n\n    return scope.lexical.indexOf(name) > -1 && !(scope.flags & SCOPE_SIMPLE_CATCH && scope.lexical[0] === name) || !this.treatFunctionsAsVarInScope(scope) && scope.functions.indexOf(name) > -1;\n  }\n\n  checkLocalExport(id) {\n    if (this.scopeStack[0].lexical.indexOf(id.name) === -1 && this.scopeStack[0].var.indexOf(id.name) === -1 && this.scopeStack[0].functions.indexOf(id.name) === -1) {\n      this.undefinedExports.set(id.name, id.start);\n    }\n  }\n\n  currentScope() {\n    return this.scopeStack[this.scopeStack.length - 1];\n  }\n\n  currentVarScope() {\n    for (let i = this.scopeStack.length - 1;; i--) {\n      const scope = this.scopeStack[i];\n\n      if (scope.flags & SCOPE_VAR) {\n        return scope;\n      }\n    }\n  }\n\n  currentThisScope() {\n    for (let i = this.scopeStack.length - 1;; i--) {\n      const scope = this.scopeStack[i];\n\n      if ((scope.flags & SCOPE_VAR || scope.flags & SCOPE_CLASS) && !(scope.flags & SCOPE_ARROW)) {\n        return scope;\n      }\n    }\n  }\n\n}\n\nclass FlowScope extends Scope {\n  constructor(...args) {\n    super(...args);\n    this.declareFunctions = [];\n  }\n\n}\n\nclass FlowScopeHandler extends ScopeHandler {\n  createScope(flags) {\n    return new FlowScope(flags);\n  }\n\n  declareName(name, bindingType, pos) {\n    const scope = this.currentScope();\n\n    if (bindingType & BIND_FLAGS_FLOW_DECLARE_FN) {\n      this.checkRedeclarationInScope(scope, name, bindingType, pos);\n      this.maybeExportDefined(scope, name);\n      scope.declareFunctions.push(name);\n      return;\n    }\n\n    super.declareName(...arguments);\n  }\n\n  isRedeclaredInScope(scope, name, bindingType) {\n    if (super.isRedeclaredInScope(...arguments)) return true;\n\n    if (bindingType & BIND_FLAGS_FLOW_DECLARE_FN) {\n      return !scope.declareFunctions.includes(name) && (scope.lexical.includes(name) || scope.functions.includes(name));\n    }\n\n    return false;\n  }\n\n  checkLocalExport(id) {\n    if (this.scopeStack[0].declareFunctions.indexOf(id.name) === -1) {\n      super.checkLocalExport(id);\n    }\n  }\n\n}\n\nconst reservedTypes = new Set([\"_\", \"any\", \"bool\", \"boolean\", \"empty\", \"extends\", \"false\", \"interface\", \"mixed\", \"null\", \"number\", \"static\", \"string\", \"true\", \"typeof\", \"void\"]);\nconst FlowErrors = makeErrorTemplates({\n  AmbiguousConditionalArrow: \"Ambiguous expression: wrap the arrow functions in parentheses to disambiguate.\",\n  AmbiguousDeclareModuleKind: \"Found both `declare module.exports` and `declare export` in the same module. Modules can only have 1 since they are either an ES module or they are a CommonJS module.\",\n  AssignReservedType: \"Cannot overwrite reserved type %0.\",\n  DeclareClassElement: \"The `declare` modifier can only appear on class fields.\",\n  DeclareClassFieldInitializer: \"Initializers are not allowed in fields with the `declare` modifier.\",\n  DuplicateDeclareModuleExports: \"Duplicate `declare module.exports` statement.\",\n  EnumBooleanMemberNotInitialized: \"Boolean enum members need to be initialized. Use either `%0 = true,` or `%0 = false,` in enum `%1`.\",\n  EnumDuplicateMemberName: \"Enum member names need to be unique, but the name `%0` has already been used before in enum `%1`.\",\n  EnumInconsistentMemberValues: \"Enum `%0` has inconsistent member initializers. Either use no initializers, or consistently use literals (either booleans, numbers, or strings) for all member initializers.\",\n  EnumInvalidExplicitType: \"Enum type `%1` is not valid. Use one of `boolean`, `number`, `string`, or `symbol` in enum `%0`.\",\n  EnumInvalidExplicitTypeUnknownSupplied: \"Supplied enum type is not valid. Use one of `boolean`, `number`, `string`, or `symbol` in enum `%0`.\",\n  EnumInvalidMemberInitializerPrimaryType: \"Enum `%0` has type `%2`, so the initializer of `%1` needs to be a %2 literal.\",\n  EnumInvalidMemberInitializerSymbolType: \"Symbol enum members cannot be initialized. Use `%1,` in enum `%0`.\",\n  EnumInvalidMemberInitializerUnknownType: \"The enum member initializer for `%1` needs to be a literal (either a boolean, number, or string) in enum `%0`.\",\n  EnumInvalidMemberName: \"Enum member names cannot start with lowercase 'a' through 'z'. Instead of using `%0`, consider using `%1`, in enum `%2`.\",\n  EnumNumberMemberNotInitialized: \"Number enum members need to be initialized, e.g. `%1 = 1` in enum `%0`.\",\n  EnumStringMemberInconsistentlyInitailized: \"String enum members need to consistently either all use initializers, or use no initializers, in enum `%0`.\",\n  GetterMayNotHaveThisParam: \"A getter cannot have a `this` parameter.\",\n  ImportTypeShorthandOnlyInPureImport: \"The `type` and `typeof` keywords on named imports can only be used on regular `import` statements. It cannot be used with `import type` or `import typeof` statements.\",\n  InexactInsideExact: \"Explicit inexact syntax cannot appear inside an explicit exact object type.\",\n  InexactInsideNonObject: \"Explicit inexact syntax cannot appear in class or interface definitions.\",\n  InexactVariance: \"Explicit inexact syntax cannot have variance.\",\n  InvalidNonTypeImportInDeclareModule: \"Imports within a `declare module` body must always be `import type` or `import typeof`.\",\n  MissingTypeParamDefault: \"Type parameter declaration needs a default, since a preceding type parameter declaration has a default.\",\n  NestedDeclareModule: \"`declare module` cannot be used inside another `declare module`.\",\n  NestedFlowComment: \"Cannot have a flow comment inside another flow comment.\",\n  OptionalBindingPattern: \"A binding pattern parameter cannot be optional in an implementation signature.\",\n  SetterMayNotHaveThisParam: \"A setter cannot have a `this` parameter.\",\n  SpreadVariance: \"Spread properties cannot have variance.\",\n  ThisParamAnnotationRequired: \"A type annotation is required for the `this` parameter.\",\n  ThisParamBannedInConstructor: \"Constructors cannot have a `this` parameter; constructors don't bind `this` like other functions.\",\n  ThisParamMayNotBeOptional: \"The `this` parameter cannot be optional.\",\n  ThisParamMustBeFirst: \"The `this` parameter must be the first function parameter.\",\n  ThisParamNoDefault: \"The `this` parameter may not have a default value.\",\n  TypeBeforeInitializer: \"Type annotations must come before default assignments, e.g. instead of `age = 25: number` use `age: number = 25`.\",\n  TypeCastInPattern: \"The type cast expression is expected to be wrapped with parenthesis.\",\n  UnexpectedExplicitInexactInObject: \"Explicit inexact syntax must appear at the end of an inexact object.\",\n  UnexpectedReservedType: \"Unexpected reserved type %0.\",\n  UnexpectedReservedUnderscore: \"`_` is only allowed as a type argument to call or new.\",\n  UnexpectedSpaceBetweenModuloChecks: \"Spaces between `%` and `checks` are not allowed here.\",\n  UnexpectedSpreadType: \"Spread operator cannot appear in class or interface definitions.\",\n  UnexpectedSubtractionOperand: 'Unexpected token, expected \"number\" or \"bigint\".',\n  UnexpectedTokenAfterTypeParameter: \"Expected an arrow function after this type parameter declaration.\",\n  UnexpectedTypeParameterBeforeAsyncArrowFunction: \"Type parameters must come after the async keyword, e.g. instead of `<T> async () => {}`, use `async <T>() => {}`.\",\n  UnsupportedDeclareExportKind: \"`declare export %0` is not supported. Use `%1` instead.\",\n  UnsupportedStatementInDeclareModule: \"Only declares and type imports are allowed inside declare module.\",\n  UnterminatedFlowComment: \"Unterminated flow-comment.\"\n}, ErrorCodes.SyntaxError);\n\nfunction isEsModuleType(bodyElement) {\n  return bodyElement.type === \"DeclareExportAllDeclaration\" || bodyElement.type === \"DeclareExportDeclaration\" && (!bodyElement.declaration || bodyElement.declaration.type !== \"TypeAlias\" && bodyElement.declaration.type !== \"InterfaceDeclaration\");\n}\n\nfunction hasTypeImportKind(node) {\n  return node.importKind === \"type\" || node.importKind === \"typeof\";\n}\n\nfunction isMaybeDefaultImport(state) {\n  return (state.type === types$1.name || !!state.type.keyword) && state.value !== \"from\";\n}\n\nconst exportSuggestions = {\n  const: \"declare export var\",\n  let: \"declare export var\",\n  type: \"export type\",\n  interface: \"export interface\"\n};\n\nfunction partition(list, test) {\n  const list1 = [];\n  const list2 = [];\n\n  for (let i = 0; i < list.length; i++) {\n    (test(list[i], i, list) ? list1 : list2).push(list[i]);\n  }\n\n  return [list1, list2];\n}\n\nconst FLOW_PRAGMA_REGEX = /\\*?\\s*@((?:no)?flow)\\b/;\nvar flow = (superClass => class extends superClass {\n  constructor(...args) {\n    super(...args);\n    this.flowPragma = undefined;\n  }\n\n  getScopeHandler() {\n    return FlowScopeHandler;\n  }\n\n  shouldParseTypes() {\n    return this.getPluginOption(\"flow\", \"all\") || this.flowPragma === \"flow\";\n  }\n\n  shouldParseEnums() {\n    return !!this.getPluginOption(\"flow\", \"enums\");\n  }\n\n  finishToken(type, val) {\n    if (type !== types$1.string && type !== types$1.semi && type !== types$1.interpreterDirective) {\n      if (this.flowPragma === undefined) {\n        this.flowPragma = null;\n      }\n    }\n\n    return super.finishToken(type, val);\n  }\n\n  addComment(comment) {\n    if (this.flowPragma === undefined) {\n      const matches = FLOW_PRAGMA_REGEX.exec(comment.value);\n\n      if (!matches) ; else if (matches[1] === \"flow\") {\n        this.flowPragma = \"flow\";\n      } else if (matches[1] === \"noflow\") {\n        this.flowPragma = \"noflow\";\n      } else {\n        throw new Error(\"Unexpected flow pragma\");\n      }\n    }\n\n    return super.addComment(comment);\n  }\n\n  flowParseTypeInitialiser(tok) {\n    const oldInType = this.state.inType;\n    this.state.inType = true;\n    this.expect(tok || types$1.colon);\n    const type = this.flowParseType();\n    this.state.inType = oldInType;\n    return type;\n  }\n\n  flowParsePredicate() {\n    const node = this.startNode();\n    const moduloPos = this.state.start;\n    this.next();\n    this.expectContextual(\"checks\");\n\n    if (this.state.lastTokStart > moduloPos + 1) {\n      this.raise(moduloPos, FlowErrors.UnexpectedSpaceBetweenModuloChecks);\n    }\n\n    if (this.eat(types$1.parenL)) {\n      node.value = this.parseExpression();\n      this.expect(types$1.parenR);\n      return this.finishNode(node, \"DeclaredPredicate\");\n    } else {\n      return this.finishNode(node, \"InferredPredicate\");\n    }\n  }\n\n  flowParseTypeAndPredicateInitialiser() {\n    const oldInType = this.state.inType;\n    this.state.inType = true;\n    this.expect(types$1.colon);\n    let type = null;\n    let predicate = null;\n\n    if (this.match(types$1.modulo)) {\n      this.state.inType = oldInType;\n      predicate = this.flowParsePredicate();\n    } else {\n      type = this.flowParseType();\n      this.state.inType = oldInType;\n\n      if (this.match(types$1.modulo)) {\n        predicate = this.flowParsePredicate();\n      }\n    }\n\n    return [type, predicate];\n  }\n\n  flowParseDeclareClass(node) {\n    this.next();\n    this.flowParseInterfaceish(node, true);\n    return this.finishNode(node, \"DeclareClass\");\n  }\n\n  flowParseDeclareFunction(node) {\n    this.next();\n    const id = node.id = this.parseIdentifier();\n    const typeNode = this.startNode();\n    const typeContainer = this.startNode();\n\n    if (this.isRelational(\"<\")) {\n      typeNode.typeParameters = this.flowParseTypeParameterDeclaration();\n    } else {\n      typeNode.typeParameters = null;\n    }\n\n    this.expect(types$1.parenL);\n    const tmp = this.flowParseFunctionTypeParams();\n    typeNode.params = tmp.params;\n    typeNode.rest = tmp.rest;\n    typeNode.this = tmp._this;\n    this.expect(types$1.parenR);\n    [typeNode.returnType, node.predicate] = this.flowParseTypeAndPredicateInitialiser();\n    typeContainer.typeAnnotation = this.finishNode(typeNode, \"FunctionTypeAnnotation\");\n    id.typeAnnotation = this.finishNode(typeContainer, \"TypeAnnotation\");\n    this.resetEndLocation(id);\n    this.semicolon();\n    this.scope.declareName(node.id.name, BIND_FLOW_DECLARE_FN, node.id.start);\n    return this.finishNode(node, \"DeclareFunction\");\n  }\n\n  flowParseDeclare(node, insideModule) {\n    if (this.match(types$1._class)) {\n      return this.flowParseDeclareClass(node);\n    } else if (this.match(types$1._function)) {\n      return this.flowParseDeclareFunction(node);\n    } else if (this.match(types$1._var)) {\n      return this.flowParseDeclareVariable(node);\n    } else if (this.eatContextual(\"module\")) {\n      if (this.match(types$1.dot)) {\n        return this.flowParseDeclareModuleExports(node);\n      } else {\n        if (insideModule) {\n          this.raise(this.state.lastTokStart, FlowErrors.NestedDeclareModule);\n        }\n\n        return this.flowParseDeclareModule(node);\n      }\n    } else if (this.isContextual(\"type\")) {\n      return this.flowParseDeclareTypeAlias(node);\n    } else if (this.isContextual(\"opaque\")) {\n      return this.flowParseDeclareOpaqueType(node);\n    } else if (this.isContextual(\"interface\")) {\n      return this.flowParseDeclareInterface(node);\n    } else if (this.match(types$1._export)) {\n      return this.flowParseDeclareExportDeclaration(node, insideModule);\n    } else {\n      throw this.unexpected();\n    }\n  }\n\n  flowParseDeclareVariable(node) {\n    this.next();\n    node.id = this.flowParseTypeAnnotatableIdentifier(true);\n    this.scope.declareName(node.id.name, BIND_VAR, node.id.start);\n    this.semicolon();\n    return this.finishNode(node, \"DeclareVariable\");\n  }\n\n  flowParseDeclareModule(node) {\n    this.scope.enter(SCOPE_OTHER);\n\n    if (this.match(types$1.string)) {\n      node.id = this.parseExprAtom();\n    } else {\n      node.id = this.parseIdentifier();\n    }\n\n    const bodyNode = node.body = this.startNode();\n    const body = bodyNode.body = [];\n    this.expect(types$1.braceL);\n\n    while (!this.match(types$1.braceR)) {\n      let bodyNode = this.startNode();\n\n      if (this.match(types$1._import)) {\n        this.next();\n\n        if (!this.isContextual(\"type\") && !this.match(types$1._typeof)) {\n          this.raise(this.state.lastTokStart, FlowErrors.InvalidNonTypeImportInDeclareModule);\n        }\n\n        this.parseImport(bodyNode);\n      } else {\n        this.expectContextual(\"declare\", FlowErrors.UnsupportedStatementInDeclareModule);\n        bodyNode = this.flowParseDeclare(bodyNode, true);\n      }\n\n      body.push(bodyNode);\n    }\n\n    this.scope.exit();\n    this.expect(types$1.braceR);\n    this.finishNode(bodyNode, \"BlockStatement\");\n    let kind = null;\n    let hasModuleExport = false;\n    body.forEach(bodyElement => {\n      if (isEsModuleType(bodyElement)) {\n        if (kind === \"CommonJS\") {\n          this.raise(bodyElement.start, FlowErrors.AmbiguousDeclareModuleKind);\n        }\n\n        kind = \"ES\";\n      } else if (bodyElement.type === \"DeclareModuleExports\") {\n        if (hasModuleExport) {\n          this.raise(bodyElement.start, FlowErrors.DuplicateDeclareModuleExports);\n        }\n\n        if (kind === \"ES\") {\n          this.raise(bodyElement.start, FlowErrors.AmbiguousDeclareModuleKind);\n        }\n\n        kind = \"CommonJS\";\n        hasModuleExport = true;\n      }\n    });\n    node.kind = kind || \"CommonJS\";\n    return this.finishNode(node, \"DeclareModule\");\n  }\n\n  flowParseDeclareExportDeclaration(node, insideModule) {\n    this.expect(types$1._export);\n\n    if (this.eat(types$1._default)) {\n      if (this.match(types$1._function) || this.match(types$1._class)) {\n        node.declaration = this.flowParseDeclare(this.startNode());\n      } else {\n        node.declaration = this.flowParseType();\n        this.semicolon();\n      }\n\n      node.default = true;\n      return this.finishNode(node, \"DeclareExportDeclaration\");\n    } else {\n      if (this.match(types$1._const) || this.isLet() || (this.isContextual(\"type\") || this.isContextual(\"interface\")) && !insideModule) {\n        const label = this.state.value;\n        const suggestion = exportSuggestions[label];\n        throw this.raise(this.state.start, FlowErrors.UnsupportedDeclareExportKind, label, suggestion);\n      }\n\n      if (this.match(types$1._var) || this.match(types$1._function) || this.match(types$1._class) || this.isContextual(\"opaque\")) {\n          node.declaration = this.flowParseDeclare(this.startNode());\n          node.default = false;\n          return this.finishNode(node, \"DeclareExportDeclaration\");\n        } else if (this.match(types$1.star) || this.match(types$1.braceL) || this.isContextual(\"interface\") || this.isContextual(\"type\") || this.isContextual(\"opaque\")) {\n          node = this.parseExport(node);\n\n          if (node.type === \"ExportNamedDeclaration\") {\n            node.type = \"ExportDeclaration\";\n            node.default = false;\n            delete node.exportKind;\n          }\n\n          node.type = \"Declare\" + node.type;\n          return node;\n        }\n    }\n\n    throw this.unexpected();\n  }\n\n  flowParseDeclareModuleExports(node) {\n    this.next();\n    this.expectContextual(\"exports\");\n    node.typeAnnotation = this.flowParseTypeAnnotation();\n    this.semicolon();\n    return this.finishNode(node, \"DeclareModuleExports\");\n  }\n\n  flowParseDeclareTypeAlias(node) {\n    this.next();\n    this.flowParseTypeAlias(node);\n    node.type = \"DeclareTypeAlias\";\n    return node;\n  }\n\n  flowParseDeclareOpaqueType(node) {\n    this.next();\n    this.flowParseOpaqueType(node, true);\n    node.type = \"DeclareOpaqueType\";\n    return node;\n  }\n\n  flowParseDeclareInterface(node) {\n    this.next();\n    this.flowParseInterfaceish(node);\n    return this.finishNode(node, \"DeclareInterface\");\n  }\n\n  flowParseInterfaceish(node, isClass = false) {\n    node.id = this.flowParseRestrictedIdentifier(!isClass, true);\n    this.scope.declareName(node.id.name, isClass ? BIND_FUNCTION : BIND_LEXICAL, node.id.start);\n\n    if (this.isRelational(\"<\")) {\n      node.typeParameters = this.flowParseTypeParameterDeclaration();\n    } else {\n      node.typeParameters = null;\n    }\n\n    node.extends = [];\n    node.implements = [];\n    node.mixins = [];\n\n    if (this.eat(types$1._extends)) {\n      do {\n        node.extends.push(this.flowParseInterfaceExtends());\n      } while (!isClass && this.eat(types$1.comma));\n    }\n\n    if (this.isContextual(\"mixins\")) {\n      this.next();\n\n      do {\n        node.mixins.push(this.flowParseInterfaceExtends());\n      } while (this.eat(types$1.comma));\n    }\n\n    if (this.isContextual(\"implements\")) {\n      this.next();\n\n      do {\n        node.implements.push(this.flowParseInterfaceExtends());\n      } while (this.eat(types$1.comma));\n    }\n\n    node.body = this.flowParseObjectType({\n      allowStatic: isClass,\n      allowExact: false,\n      allowSpread: false,\n      allowProto: isClass,\n      allowInexact: false\n    });\n  }\n\n  flowParseInterfaceExtends() {\n    const node = this.startNode();\n    node.id = this.flowParseQualifiedTypeIdentifier();\n\n    if (this.isRelational(\"<\")) {\n      node.typeParameters = this.flowParseTypeParameterInstantiation();\n    } else {\n      node.typeParameters = null;\n    }\n\n    return this.finishNode(node, \"InterfaceExtends\");\n  }\n\n  flowParseInterface(node) {\n    this.flowParseInterfaceish(node);\n    return this.finishNode(node, \"InterfaceDeclaration\");\n  }\n\n  checkNotUnderscore(word) {\n    if (word === \"_\") {\n      this.raise(this.state.start, FlowErrors.UnexpectedReservedUnderscore);\n    }\n  }\n\n  checkReservedType(word, startLoc, declaration) {\n    if (!reservedTypes.has(word)) return;\n    this.raise(startLoc, declaration ? FlowErrors.AssignReservedType : FlowErrors.UnexpectedReservedType, word);\n  }\n\n  flowParseRestrictedIdentifier(liberal, declaration) {\n    this.checkReservedType(this.state.value, this.state.start, declaration);\n    return this.parseIdentifier(liberal);\n  }\n\n  flowParseTypeAlias(node) {\n    node.id = this.flowParseRestrictedIdentifier(false, true);\n    this.scope.declareName(node.id.name, BIND_LEXICAL, node.id.start);\n\n    if (this.isRelational(\"<\")) {\n      node.typeParameters = this.flowParseTypeParameterDeclaration();\n    } else {\n      node.typeParameters = null;\n    }\n\n    node.right = this.flowParseTypeInitialiser(types$1.eq);\n    this.semicolon();\n    return this.finishNode(node, \"TypeAlias\");\n  }\n\n  flowParseOpaqueType(node, declare) {\n    this.expectContextual(\"type\");\n    node.id = this.flowParseRestrictedIdentifier(true, true);\n    this.scope.declareName(node.id.name, BIND_LEXICAL, node.id.start);\n\n    if (this.isRelational(\"<\")) {\n      node.typeParameters = this.flowParseTypeParameterDeclaration();\n    } else {\n      node.typeParameters = null;\n    }\n\n    node.supertype = null;\n\n    if (this.match(types$1.colon)) {\n      node.supertype = this.flowParseTypeInitialiser(types$1.colon);\n    }\n\n    node.impltype = null;\n\n    if (!declare) {\n      node.impltype = this.flowParseTypeInitialiser(types$1.eq);\n    }\n\n    this.semicolon();\n    return this.finishNode(node, \"OpaqueType\");\n  }\n\n  flowParseTypeParameter(requireDefault = false) {\n    const nodeStart = this.state.start;\n    const node = this.startNode();\n    const variance = this.flowParseVariance();\n    const ident = this.flowParseTypeAnnotatableIdentifier();\n    node.name = ident.name;\n    node.variance = variance;\n    node.bound = ident.typeAnnotation;\n\n    if (this.match(types$1.eq)) {\n      this.eat(types$1.eq);\n      node.default = this.flowParseType();\n    } else {\n      if (requireDefault) {\n        this.raise(nodeStart, FlowErrors.MissingTypeParamDefault);\n      }\n    }\n\n    return this.finishNode(node, \"TypeParameter\");\n  }\n\n  flowParseTypeParameterDeclaration() {\n    const oldInType = this.state.inType;\n    const node = this.startNode();\n    node.params = [];\n    this.state.inType = true;\n\n    if (this.isRelational(\"<\") || this.match(types$1.jsxTagStart)) {\n      this.next();\n    } else {\n      this.unexpected();\n    }\n\n    let defaultRequired = false;\n\n    do {\n      const typeParameter = this.flowParseTypeParameter(defaultRequired);\n      node.params.push(typeParameter);\n\n      if (typeParameter.default) {\n        defaultRequired = true;\n      }\n\n      if (!this.isRelational(\">\")) {\n        this.expect(types$1.comma);\n      }\n    } while (!this.isRelational(\">\"));\n\n    this.expectRelational(\">\");\n    this.state.inType = oldInType;\n    return this.finishNode(node, \"TypeParameterDeclaration\");\n  }\n\n  flowParseTypeParameterInstantiation() {\n    const node = this.startNode();\n    const oldInType = this.state.inType;\n    node.params = [];\n    this.state.inType = true;\n    this.expectRelational(\"<\");\n    const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n    this.state.noAnonFunctionType = false;\n\n    while (!this.isRelational(\">\")) {\n      node.params.push(this.flowParseType());\n\n      if (!this.isRelational(\">\")) {\n        this.expect(types$1.comma);\n      }\n    }\n\n    this.state.noAnonFunctionType = oldNoAnonFunctionType;\n    this.expectRelational(\">\");\n    this.state.inType = oldInType;\n    return this.finishNode(node, \"TypeParameterInstantiation\");\n  }\n\n  flowParseTypeParameterInstantiationCallOrNew() {\n    const node = this.startNode();\n    const oldInType = this.state.inType;\n    node.params = [];\n    this.state.inType = true;\n    this.expectRelational(\"<\");\n\n    while (!this.isRelational(\">\")) {\n      node.params.push(this.flowParseTypeOrImplicitInstantiation());\n\n      if (!this.isRelational(\">\")) {\n        this.expect(types$1.comma);\n      }\n    }\n\n    this.expectRelational(\">\");\n    this.state.inType = oldInType;\n    return this.finishNode(node, \"TypeParameterInstantiation\");\n  }\n\n  flowParseInterfaceType() {\n    const node = this.startNode();\n    this.expectContextual(\"interface\");\n    node.extends = [];\n\n    if (this.eat(types$1._extends)) {\n      do {\n        node.extends.push(this.flowParseInterfaceExtends());\n      } while (this.eat(types$1.comma));\n    }\n\n    node.body = this.flowParseObjectType({\n      allowStatic: false,\n      allowExact: false,\n      allowSpread: false,\n      allowProto: false,\n      allowInexact: false\n    });\n    return this.finishNode(node, \"InterfaceTypeAnnotation\");\n  }\n\n  flowParseObjectPropertyKey() {\n    return this.match(types$1.num) || this.match(types$1.string) ? this.parseExprAtom() : this.parseIdentifier(true);\n  }\n\n  flowParseObjectTypeIndexer(node, isStatic, variance) {\n    node.static = isStatic;\n\n    if (this.lookahead().type === types$1.colon) {\n      node.id = this.flowParseObjectPropertyKey();\n      node.key = this.flowParseTypeInitialiser();\n    } else {\n      node.id = null;\n      node.key = this.flowParseType();\n    }\n\n    this.expect(types$1.bracketR);\n    node.value = this.flowParseTypeInitialiser();\n    node.variance = variance;\n    return this.finishNode(node, \"ObjectTypeIndexer\");\n  }\n\n  flowParseObjectTypeInternalSlot(node, isStatic) {\n    node.static = isStatic;\n    node.id = this.flowParseObjectPropertyKey();\n    this.expect(types$1.bracketR);\n    this.expect(types$1.bracketR);\n\n    if (this.isRelational(\"<\") || this.match(types$1.parenL)) {\n      node.method = true;\n      node.optional = false;\n      node.value = this.flowParseObjectTypeMethodish(this.startNodeAt(node.start, node.loc.start));\n    } else {\n      node.method = false;\n\n      if (this.eat(types$1.question)) {\n        node.optional = true;\n      }\n\n      node.value = this.flowParseTypeInitialiser();\n    }\n\n    return this.finishNode(node, \"ObjectTypeInternalSlot\");\n  }\n\n  flowParseObjectTypeMethodish(node) {\n    node.params = [];\n    node.rest = null;\n    node.typeParameters = null;\n    node.this = null;\n\n    if (this.isRelational(\"<\")) {\n      node.typeParameters = this.flowParseTypeParameterDeclaration();\n    }\n\n    this.expect(types$1.parenL);\n\n    if (this.match(types$1._this)) {\n      node.this = this.flowParseFunctionTypeParam(true);\n      node.this.name = null;\n\n      if (!this.match(types$1.parenR)) {\n        this.expect(types$1.comma);\n      }\n    }\n\n    while (!this.match(types$1.parenR) && !this.match(types$1.ellipsis)) {\n      node.params.push(this.flowParseFunctionTypeParam(false));\n\n      if (!this.match(types$1.parenR)) {\n        this.expect(types$1.comma);\n      }\n    }\n\n    if (this.eat(types$1.ellipsis)) {\n      node.rest = this.flowParseFunctionTypeParam(false);\n    }\n\n    this.expect(types$1.parenR);\n    node.returnType = this.flowParseTypeInitialiser();\n    return this.finishNode(node, \"FunctionTypeAnnotation\");\n  }\n\n  flowParseObjectTypeCallProperty(node, isStatic) {\n    const valueNode = this.startNode();\n    node.static = isStatic;\n    node.value = this.flowParseObjectTypeMethodish(valueNode);\n    return this.finishNode(node, \"ObjectTypeCallProperty\");\n  }\n\n  flowParseObjectType({\n    allowStatic,\n    allowExact,\n    allowSpread,\n    allowProto,\n    allowInexact\n  }) {\n    const oldInType = this.state.inType;\n    this.state.inType = true;\n    const nodeStart = this.startNode();\n    nodeStart.callProperties = [];\n    nodeStart.properties = [];\n    nodeStart.indexers = [];\n    nodeStart.internalSlots = [];\n    let endDelim;\n    let exact;\n    let inexact = false;\n\n    if (allowExact && this.match(types$1.braceBarL)) {\n      this.expect(types$1.braceBarL);\n      endDelim = types$1.braceBarR;\n      exact = true;\n    } else {\n      this.expect(types$1.braceL);\n      endDelim = types$1.braceR;\n      exact = false;\n    }\n\n    nodeStart.exact = exact;\n\n    while (!this.match(endDelim)) {\n      let isStatic = false;\n      let protoStart = null;\n      let inexactStart = null;\n      const node = this.startNode();\n\n      if (allowProto && this.isContextual(\"proto\")) {\n        const lookahead = this.lookahead();\n\n        if (lookahead.type !== types$1.colon && lookahead.type !== types$1.question) {\n          this.next();\n          protoStart = this.state.start;\n          allowStatic = false;\n        }\n      }\n\n      if (allowStatic && this.isContextual(\"static\")) {\n        const lookahead = this.lookahead();\n\n        if (lookahead.type !== types$1.colon && lookahead.type !== types$1.question) {\n          this.next();\n          isStatic = true;\n        }\n      }\n\n      const variance = this.flowParseVariance();\n\n      if (this.eat(types$1.bracketL)) {\n        if (protoStart != null) {\n          this.unexpected(protoStart);\n        }\n\n        if (this.eat(types$1.bracketL)) {\n          if (variance) {\n            this.unexpected(variance.start);\n          }\n\n          nodeStart.internalSlots.push(this.flowParseObjectTypeInternalSlot(node, isStatic));\n        } else {\n          nodeStart.indexers.push(this.flowParseObjectTypeIndexer(node, isStatic, variance));\n        }\n      } else if (this.match(types$1.parenL) || this.isRelational(\"<\")) {\n        if (protoStart != null) {\n          this.unexpected(protoStart);\n        }\n\n        if (variance) {\n          this.unexpected(variance.start);\n        }\n\n        nodeStart.callProperties.push(this.flowParseObjectTypeCallProperty(node, isStatic));\n      } else {\n        let kind = \"init\";\n\n        if (this.isContextual(\"get\") || this.isContextual(\"set\")) {\n          const lookahead = this.lookahead();\n\n          if (lookahead.type === types$1.name || lookahead.type === types$1.string || lookahead.type === types$1.num) {\n            kind = this.state.value;\n            this.next();\n          }\n        }\n\n        const propOrInexact = this.flowParseObjectTypeProperty(node, isStatic, protoStart, variance, kind, allowSpread, allowInexact != null ? allowInexact : !exact);\n\n        if (propOrInexact === null) {\n          inexact = true;\n          inexactStart = this.state.lastTokStart;\n        } else {\n          nodeStart.properties.push(propOrInexact);\n        }\n      }\n\n      this.flowObjectTypeSemicolon();\n\n      if (inexactStart && !this.match(types$1.braceR) && !this.match(types$1.braceBarR)) {\n        this.raise(inexactStart, FlowErrors.UnexpectedExplicitInexactInObject);\n      }\n    }\n\n    this.expect(endDelim);\n\n    if (allowSpread) {\n      nodeStart.inexact = inexact;\n    }\n\n    const out = this.finishNode(nodeStart, \"ObjectTypeAnnotation\");\n    this.state.inType = oldInType;\n    return out;\n  }\n\n  flowParseObjectTypeProperty(node, isStatic, protoStart, variance, kind, allowSpread, allowInexact) {\n    if (this.eat(types$1.ellipsis)) {\n      const isInexactToken = this.match(types$1.comma) || this.match(types$1.semi) || this.match(types$1.braceR) || this.match(types$1.braceBarR);\n\n      if (isInexactToken) {\n        if (!allowSpread) {\n          this.raise(this.state.lastTokStart, FlowErrors.InexactInsideNonObject);\n        } else if (!allowInexact) {\n          this.raise(this.state.lastTokStart, FlowErrors.InexactInsideExact);\n        }\n\n        if (variance) {\n          this.raise(variance.start, FlowErrors.InexactVariance);\n        }\n\n        return null;\n      }\n\n      if (!allowSpread) {\n        this.raise(this.state.lastTokStart, FlowErrors.UnexpectedSpreadType);\n      }\n\n      if (protoStart != null) {\n        this.unexpected(protoStart);\n      }\n\n      if (variance) {\n        this.raise(variance.start, FlowErrors.SpreadVariance);\n      }\n\n      node.argument = this.flowParseType();\n      return this.finishNode(node, \"ObjectTypeSpreadProperty\");\n    } else {\n      node.key = this.flowParseObjectPropertyKey();\n      node.static = isStatic;\n      node.proto = protoStart != null;\n      node.kind = kind;\n      let optional = false;\n\n      if (this.isRelational(\"<\") || this.match(types$1.parenL)) {\n        node.method = true;\n\n        if (protoStart != null) {\n          this.unexpected(protoStart);\n        }\n\n        if (variance) {\n          this.unexpected(variance.start);\n        }\n\n        node.value = this.flowParseObjectTypeMethodish(this.startNodeAt(node.start, node.loc.start));\n\n        if (kind === \"get\" || kind === \"set\") {\n          this.flowCheckGetterSetterParams(node);\n        }\n\n        if (!allowSpread && node.key.name === \"constructor\" && node.value.this) {\n          this.raise(node.value.this.start, FlowErrors.ThisParamBannedInConstructor);\n        }\n      } else {\n        if (kind !== \"init\") this.unexpected();\n        node.method = false;\n\n        if (this.eat(types$1.question)) {\n          optional = true;\n        }\n\n        node.value = this.flowParseTypeInitialiser();\n        node.variance = variance;\n      }\n\n      node.optional = optional;\n      return this.finishNode(node, \"ObjectTypeProperty\");\n    }\n  }\n\n  flowCheckGetterSetterParams(property) {\n    const paramCount = property.kind === \"get\" ? 0 : 1;\n    const start = property.start;\n    const length = property.value.params.length + (property.value.rest ? 1 : 0);\n\n    if (property.value.this) {\n      this.raise(property.value.this.start, property.kind === \"get\" ? FlowErrors.GetterMayNotHaveThisParam : FlowErrors.SetterMayNotHaveThisParam);\n    }\n\n    if (length !== paramCount) {\n      if (property.kind === \"get\") {\n        this.raise(start, ErrorMessages.BadGetterArity);\n      } else {\n        this.raise(start, ErrorMessages.BadSetterArity);\n      }\n    }\n\n    if (property.kind === \"set\" && property.value.rest) {\n      this.raise(start, ErrorMessages.BadSetterRestParameter);\n    }\n  }\n\n  flowObjectTypeSemicolon() {\n    if (!this.eat(types$1.semi) && !this.eat(types$1.comma) && !this.match(types$1.braceR) && !this.match(types$1.braceBarR)) {\n      this.unexpected();\n    }\n  }\n\n  flowParseQualifiedTypeIdentifier(startPos, startLoc, id) {\n    startPos = startPos || this.state.start;\n    startLoc = startLoc || this.state.startLoc;\n    let node = id || this.flowParseRestrictedIdentifier(true);\n\n    while (this.eat(types$1.dot)) {\n      const node2 = this.startNodeAt(startPos, startLoc);\n      node2.qualification = node;\n      node2.id = this.flowParseRestrictedIdentifier(true);\n      node = this.finishNode(node2, \"QualifiedTypeIdentifier\");\n    }\n\n    return node;\n  }\n\n  flowParseGenericType(startPos, startLoc, id) {\n    const node = this.startNodeAt(startPos, startLoc);\n    node.typeParameters = null;\n    node.id = this.flowParseQualifiedTypeIdentifier(startPos, startLoc, id);\n\n    if (this.isRelational(\"<\")) {\n      node.typeParameters = this.flowParseTypeParameterInstantiation();\n    }\n\n    return this.finishNode(node, \"GenericTypeAnnotation\");\n  }\n\n  flowParseTypeofType() {\n    const node = this.startNode();\n    this.expect(types$1._typeof);\n    node.argument = this.flowParsePrimaryType();\n    return this.finishNode(node, \"TypeofTypeAnnotation\");\n  }\n\n  flowParseTupleType() {\n    const node = this.startNode();\n    node.types = [];\n    this.expect(types$1.bracketL);\n\n    while (this.state.pos < this.length && !this.match(types$1.bracketR)) {\n      node.types.push(this.flowParseType());\n      if (this.match(types$1.bracketR)) break;\n      this.expect(types$1.comma);\n    }\n\n    this.expect(types$1.bracketR);\n    return this.finishNode(node, \"TupleTypeAnnotation\");\n  }\n\n  flowParseFunctionTypeParam(first) {\n    let name = null;\n    let optional = false;\n    let typeAnnotation = null;\n    const node = this.startNode();\n    const lh = this.lookahead();\n    const isThis = this.state.type === types$1._this;\n\n    if (lh.type === types$1.colon || lh.type === types$1.question) {\n      if (isThis && !first) {\n        this.raise(node.start, FlowErrors.ThisParamMustBeFirst);\n      }\n\n      name = this.parseIdentifier(isThis);\n\n      if (this.eat(types$1.question)) {\n        optional = true;\n\n        if (isThis) {\n          this.raise(node.start, FlowErrors.ThisParamMayNotBeOptional);\n        }\n      }\n\n      typeAnnotation = this.flowParseTypeInitialiser();\n    } else {\n      typeAnnotation = this.flowParseType();\n    }\n\n    node.name = name;\n    node.optional = optional;\n    node.typeAnnotation = typeAnnotation;\n    return this.finishNode(node, \"FunctionTypeParam\");\n  }\n\n  reinterpretTypeAsFunctionTypeParam(type) {\n    const node = this.startNodeAt(type.start, type.loc.start);\n    node.name = null;\n    node.optional = false;\n    node.typeAnnotation = type;\n    return this.finishNode(node, \"FunctionTypeParam\");\n  }\n\n  flowParseFunctionTypeParams(params = []) {\n    let rest = null;\n    let _this = null;\n\n    if (this.match(types$1._this)) {\n      _this = this.flowParseFunctionTypeParam(true);\n      _this.name = null;\n\n      if (!this.match(types$1.parenR)) {\n        this.expect(types$1.comma);\n      }\n    }\n\n    while (!this.match(types$1.parenR) && !this.match(types$1.ellipsis)) {\n      params.push(this.flowParseFunctionTypeParam(false));\n\n      if (!this.match(types$1.parenR)) {\n        this.expect(types$1.comma);\n      }\n    }\n\n    if (this.eat(types$1.ellipsis)) {\n      rest = this.flowParseFunctionTypeParam(false);\n    }\n\n    return {\n      params,\n      rest,\n      _this\n    };\n  }\n\n  flowIdentToTypeAnnotation(startPos, startLoc, node, id) {\n    switch (id.name) {\n      case \"any\":\n        return this.finishNode(node, \"AnyTypeAnnotation\");\n\n      case \"bool\":\n      case \"boolean\":\n        return this.finishNode(node, \"BooleanTypeAnnotation\");\n\n      case \"mixed\":\n        return this.finishNode(node, \"MixedTypeAnnotation\");\n\n      case \"empty\":\n        return this.finishNode(node, \"EmptyTypeAnnotation\");\n\n      case \"number\":\n        return this.finishNode(node, \"NumberTypeAnnotation\");\n\n      case \"string\":\n        return this.finishNode(node, \"StringTypeAnnotation\");\n\n      case \"symbol\":\n        return this.finishNode(node, \"SymbolTypeAnnotation\");\n\n      default:\n        this.checkNotUnderscore(id.name);\n        return this.flowParseGenericType(startPos, startLoc, id);\n    }\n  }\n\n  flowParsePrimaryType() {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const node = this.startNode();\n    let tmp;\n    let type;\n    let isGroupedType = false;\n    const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n\n    switch (this.state.type) {\n      case types$1.name:\n        if (this.isContextual(\"interface\")) {\n          return this.flowParseInterfaceType();\n        }\n\n        return this.flowIdentToTypeAnnotation(startPos, startLoc, node, this.parseIdentifier());\n\n      case types$1.braceL:\n        return this.flowParseObjectType({\n          allowStatic: false,\n          allowExact: false,\n          allowSpread: true,\n          allowProto: false,\n          allowInexact: true\n        });\n\n      case types$1.braceBarL:\n        return this.flowParseObjectType({\n          allowStatic: false,\n          allowExact: true,\n          allowSpread: true,\n          allowProto: false,\n          allowInexact: false\n        });\n\n      case types$1.bracketL:\n        this.state.noAnonFunctionType = false;\n        type = this.flowParseTupleType();\n        this.state.noAnonFunctionType = oldNoAnonFunctionType;\n        return type;\n\n      case types$1.relational:\n        if (this.state.value === \"<\") {\n          node.typeParameters = this.flowParseTypeParameterDeclaration();\n          this.expect(types$1.parenL);\n          tmp = this.flowParseFunctionTypeParams();\n          node.params = tmp.params;\n          node.rest = tmp.rest;\n          node.this = tmp._this;\n          this.expect(types$1.parenR);\n          this.expect(types$1.arrow);\n          node.returnType = this.flowParseType();\n          return this.finishNode(node, \"FunctionTypeAnnotation\");\n        }\n\n        break;\n\n      case types$1.parenL:\n        this.next();\n\n        if (!this.match(types$1.parenR) && !this.match(types$1.ellipsis)) {\n          if (this.match(types$1.name) || this.match(types$1._this)) {\n            const token = this.lookahead().type;\n            isGroupedType = token !== types$1.question && token !== types$1.colon;\n          } else {\n            isGroupedType = true;\n          }\n        }\n\n        if (isGroupedType) {\n          this.state.noAnonFunctionType = false;\n          type = this.flowParseType();\n          this.state.noAnonFunctionType = oldNoAnonFunctionType;\n\n          if (this.state.noAnonFunctionType || !(this.match(types$1.comma) || this.match(types$1.parenR) && this.lookahead().type === types$1.arrow)) {\n            this.expect(types$1.parenR);\n            return type;\n          } else {\n            this.eat(types$1.comma);\n          }\n        }\n\n        if (type) {\n          tmp = this.flowParseFunctionTypeParams([this.reinterpretTypeAsFunctionTypeParam(type)]);\n        } else {\n          tmp = this.flowParseFunctionTypeParams();\n        }\n\n        node.params = tmp.params;\n        node.rest = tmp.rest;\n        node.this = tmp._this;\n        this.expect(types$1.parenR);\n        this.expect(types$1.arrow);\n        node.returnType = this.flowParseType();\n        node.typeParameters = null;\n        return this.finishNode(node, \"FunctionTypeAnnotation\");\n\n      case types$1.string:\n        return this.parseLiteral(this.state.value, \"StringLiteralTypeAnnotation\");\n\n      case types$1._true:\n      case types$1._false:\n        node.value = this.match(types$1._true);\n        this.next();\n        return this.finishNode(node, \"BooleanLiteralTypeAnnotation\");\n\n      case types$1.plusMin:\n        if (this.state.value === \"-\") {\n          this.next();\n\n          if (this.match(types$1.num)) {\n            return this.parseLiteral(-this.state.value, \"NumberLiteralTypeAnnotation\", node.start, node.loc.start);\n          }\n\n          if (this.match(types$1.bigint)) {\n            return this.parseLiteral(-this.state.value, \"BigIntLiteralTypeAnnotation\", node.start, node.loc.start);\n          }\n\n          throw this.raise(this.state.start, FlowErrors.UnexpectedSubtractionOperand);\n        }\n\n        throw this.unexpected();\n\n      case types$1.num:\n        return this.parseLiteral(this.state.value, \"NumberLiteralTypeAnnotation\");\n\n      case types$1.bigint:\n        return this.parseLiteral(this.state.value, \"BigIntLiteralTypeAnnotation\");\n\n      case types$1._void:\n        this.next();\n        return this.finishNode(node, \"VoidTypeAnnotation\");\n\n      case types$1._null:\n        this.next();\n        return this.finishNode(node, \"NullLiteralTypeAnnotation\");\n\n      case types$1._this:\n        this.next();\n        return this.finishNode(node, \"ThisTypeAnnotation\");\n\n      case types$1.star:\n        this.next();\n        return this.finishNode(node, \"ExistsTypeAnnotation\");\n\n      default:\n        if (this.state.type.keyword === \"typeof\") {\n          return this.flowParseTypeofType();\n        } else if (this.state.type.keyword) {\n          const label = this.state.type.label;\n          this.next();\n          return super.createIdentifier(node, label);\n        }\n\n    }\n\n    throw this.unexpected();\n  }\n\n  flowParsePostfixType() {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    let type = this.flowParsePrimaryType();\n    let seenOptionalIndexedAccess = false;\n\n    while ((this.match(types$1.bracketL) || this.match(types$1.questionDot)) && !this.canInsertSemicolon()) {\n      const node = this.startNodeAt(startPos, startLoc);\n      const optional = this.eat(types$1.questionDot);\n      seenOptionalIndexedAccess = seenOptionalIndexedAccess || optional;\n      this.expect(types$1.bracketL);\n\n      if (!optional && this.match(types$1.bracketR)) {\n        node.elementType = type;\n        this.next();\n        type = this.finishNode(node, \"ArrayTypeAnnotation\");\n      } else {\n        node.objectType = type;\n        node.indexType = this.flowParseType();\n        this.expect(types$1.bracketR);\n\n        if (seenOptionalIndexedAccess) {\n          node.optional = optional;\n          type = this.finishNode(node, \"OptionalIndexedAccessType\");\n        } else {\n          type = this.finishNode(node, \"IndexedAccessType\");\n        }\n      }\n    }\n\n    return type;\n  }\n\n  flowParsePrefixType() {\n    const node = this.startNode();\n\n    if (this.eat(types$1.question)) {\n      node.typeAnnotation = this.flowParsePrefixType();\n      return this.finishNode(node, \"NullableTypeAnnotation\");\n    } else {\n      return this.flowParsePostfixType();\n    }\n  }\n\n  flowParseAnonFunctionWithoutParens() {\n    const param = this.flowParsePrefixType();\n\n    if (!this.state.noAnonFunctionType && this.eat(types$1.arrow)) {\n      const node = this.startNodeAt(param.start, param.loc.start);\n      node.params = [this.reinterpretTypeAsFunctionTypeParam(param)];\n      node.rest = null;\n      node.this = null;\n      node.returnType = this.flowParseType();\n      node.typeParameters = null;\n      return this.finishNode(node, \"FunctionTypeAnnotation\");\n    }\n\n    return param;\n  }\n\n  flowParseIntersectionType() {\n    const node = this.startNode();\n    this.eat(types$1.bitwiseAND);\n    const type = this.flowParseAnonFunctionWithoutParens();\n    node.types = [type];\n\n    while (this.eat(types$1.bitwiseAND)) {\n      node.types.push(this.flowParseAnonFunctionWithoutParens());\n    }\n\n    return node.types.length === 1 ? type : this.finishNode(node, \"IntersectionTypeAnnotation\");\n  }\n\n  flowParseUnionType() {\n    const node = this.startNode();\n    this.eat(types$1.bitwiseOR);\n    const type = this.flowParseIntersectionType();\n    node.types = [type];\n\n    while (this.eat(types$1.bitwiseOR)) {\n      node.types.push(this.flowParseIntersectionType());\n    }\n\n    return node.types.length === 1 ? type : this.finishNode(node, \"UnionTypeAnnotation\");\n  }\n\n  flowParseType() {\n    const oldInType = this.state.inType;\n    this.state.inType = true;\n    const type = this.flowParseUnionType();\n    this.state.inType = oldInType;\n    this.state.exprAllowed = this.state.exprAllowed || this.state.noAnonFunctionType;\n    return type;\n  }\n\n  flowParseTypeOrImplicitInstantiation() {\n    if (this.state.type === types$1.name && this.state.value === \"_\") {\n      const startPos = this.state.start;\n      const startLoc = this.state.startLoc;\n      const node = this.parseIdentifier();\n      return this.flowParseGenericType(startPos, startLoc, node);\n    } else {\n      return this.flowParseType();\n    }\n  }\n\n  flowParseTypeAnnotation() {\n    const node = this.startNode();\n    node.typeAnnotation = this.flowParseTypeInitialiser();\n    return this.finishNode(node, \"TypeAnnotation\");\n  }\n\n  flowParseTypeAnnotatableIdentifier(allowPrimitiveOverride) {\n    const ident = allowPrimitiveOverride ? this.parseIdentifier() : this.flowParseRestrictedIdentifier();\n\n    if (this.match(types$1.colon)) {\n      ident.typeAnnotation = this.flowParseTypeAnnotation();\n      this.resetEndLocation(ident);\n    }\n\n    return ident;\n  }\n\n  typeCastToParameter(node) {\n    node.expression.typeAnnotation = node.typeAnnotation;\n    this.resetEndLocation(node.expression, node.typeAnnotation.end, node.typeAnnotation.loc.end);\n    return node.expression;\n  }\n\n  flowParseVariance() {\n    let variance = null;\n\n    if (this.match(types$1.plusMin)) {\n      variance = this.startNode();\n\n      if (this.state.value === \"+\") {\n        variance.kind = \"plus\";\n      } else {\n        variance.kind = \"minus\";\n      }\n\n      this.next();\n      this.finishNode(variance, \"Variance\");\n    }\n\n    return variance;\n  }\n\n  parseFunctionBody(node, allowExpressionBody, isMethod = false) {\n    if (allowExpressionBody) {\n      return this.forwardNoArrowParamsConversionAt(node, () => super.parseFunctionBody(node, true, isMethod));\n    }\n\n    return super.parseFunctionBody(node, false, isMethod);\n  }\n\n  parseFunctionBodyAndFinish(node, type, isMethod = false) {\n    if (this.match(types$1.colon)) {\n      const typeNode = this.startNode();\n      [typeNode.typeAnnotation, node.predicate] = this.flowParseTypeAndPredicateInitialiser();\n      node.returnType = typeNode.typeAnnotation ? this.finishNode(typeNode, \"TypeAnnotation\") : null;\n    }\n\n    super.parseFunctionBodyAndFinish(node, type, isMethod);\n  }\n\n  parseStatement(context, topLevel) {\n    if (this.state.strict && this.match(types$1.name) && this.state.value === \"interface\") {\n      const lookahead = this.lookahead();\n\n      if (lookahead.type === types$1.name || isKeyword(lookahead.value)) {\n        const node = this.startNode();\n        this.next();\n        return this.flowParseInterface(node);\n      }\n    } else if (this.shouldParseEnums() && this.isContextual(\"enum\")) {\n      const node = this.startNode();\n      this.next();\n      return this.flowParseEnumDeclaration(node);\n    }\n\n    const stmt = super.parseStatement(context, topLevel);\n\n    if (this.flowPragma === undefined && !this.isValidDirective(stmt)) {\n      this.flowPragma = null;\n    }\n\n    return stmt;\n  }\n\n  parseExpressionStatement(node, expr) {\n    if (expr.type === \"Identifier\") {\n      if (expr.name === \"declare\") {\n        if (this.match(types$1._class) || this.match(types$1.name) || this.match(types$1._function) || this.match(types$1._var) || this.match(types$1._export)) {\n          return this.flowParseDeclare(node);\n        }\n      } else if (this.match(types$1.name)) {\n        if (expr.name === \"interface\") {\n          return this.flowParseInterface(node);\n        } else if (expr.name === \"type\") {\n          return this.flowParseTypeAlias(node);\n        } else if (expr.name === \"opaque\") {\n          return this.flowParseOpaqueType(node, false);\n        }\n      }\n    }\n\n    return super.parseExpressionStatement(node, expr);\n  }\n\n  shouldParseExportDeclaration() {\n    return this.isContextual(\"type\") || this.isContextual(\"interface\") || this.isContextual(\"opaque\") || this.shouldParseEnums() && this.isContextual(\"enum\") || super.shouldParseExportDeclaration();\n  }\n\n  isExportDefaultSpecifier() {\n    if (this.match(types$1.name) && (this.state.value === \"type\" || this.state.value === \"interface\" || this.state.value === \"opaque\" || this.shouldParseEnums() && this.state.value === \"enum\")) {\n      return false;\n    }\n\n    return super.isExportDefaultSpecifier();\n  }\n\n  parseExportDefaultExpression() {\n    if (this.shouldParseEnums() && this.isContextual(\"enum\")) {\n      const node = this.startNode();\n      this.next();\n      return this.flowParseEnumDeclaration(node);\n    }\n\n    return super.parseExportDefaultExpression();\n  }\n\n  parseConditional(expr, startPos, startLoc, refNeedsArrowPos) {\n    if (!this.match(types$1.question)) return expr;\n\n    if (refNeedsArrowPos) {\n      const result = this.tryParse(() => super.parseConditional(expr, startPos, startLoc));\n\n      if (!result.node) {\n        refNeedsArrowPos.start = result.error.pos || this.state.start;\n        return expr;\n      }\n\n      if (result.error) this.state = result.failState;\n      return result.node;\n    }\n\n    this.expect(types$1.question);\n    const state = this.state.clone();\n    const originalNoArrowAt = this.state.noArrowAt;\n    const node = this.startNodeAt(startPos, startLoc);\n    let {\n      consequent,\n      failed\n    } = this.tryParseConditionalConsequent();\n    let [valid, invalid] = this.getArrowLikeExpressions(consequent);\n\n    if (failed || invalid.length > 0) {\n      const noArrowAt = [...originalNoArrowAt];\n\n      if (invalid.length > 0) {\n        this.state = state;\n        this.state.noArrowAt = noArrowAt;\n\n        for (let i = 0; i < invalid.length; i++) {\n          noArrowAt.push(invalid[i].start);\n        }\n\n        ({\n          consequent,\n          failed\n        } = this.tryParseConditionalConsequent());\n        [valid, invalid] = this.getArrowLikeExpressions(consequent);\n      }\n\n      if (failed && valid.length > 1) {\n        this.raise(state.start, FlowErrors.AmbiguousConditionalArrow);\n      }\n\n      if (failed && valid.length === 1) {\n        this.state = state;\n        this.state.noArrowAt = noArrowAt.concat(valid[0].start);\n        ({\n          consequent,\n          failed\n        } = this.tryParseConditionalConsequent());\n      }\n    }\n\n    this.getArrowLikeExpressions(consequent, true);\n    this.state.noArrowAt = originalNoArrowAt;\n    this.expect(types$1.colon);\n    node.test = expr;\n    node.consequent = consequent;\n    node.alternate = this.forwardNoArrowParamsConversionAt(node, () => this.parseMaybeAssign(undefined, undefined, undefined));\n    return this.finishNode(node, \"ConditionalExpression\");\n  }\n\n  tryParseConditionalConsequent() {\n    this.state.noArrowParamsConversionAt.push(this.state.start);\n    const consequent = this.parseMaybeAssignAllowIn();\n    const failed = !this.match(types$1.colon);\n    this.state.noArrowParamsConversionAt.pop();\n    return {\n      consequent,\n      failed\n    };\n  }\n\n  getArrowLikeExpressions(node, disallowInvalid) {\n    const stack = [node];\n    const arrows = [];\n\n    while (stack.length !== 0) {\n      const node = stack.pop();\n\n      if (node.type === \"ArrowFunctionExpression\") {\n        if (node.typeParameters || !node.returnType) {\n          this.finishArrowValidation(node);\n        } else {\n          arrows.push(node);\n        }\n\n        stack.push(node.body);\n      } else if (node.type === \"ConditionalExpression\") {\n        stack.push(node.consequent);\n        stack.push(node.alternate);\n      }\n    }\n\n    if (disallowInvalid) {\n      arrows.forEach(node => this.finishArrowValidation(node));\n      return [arrows, []];\n    }\n\n    return partition(arrows, node => node.params.every(param => this.isAssignable(param, true)));\n  }\n\n  finishArrowValidation(node) {\n    var _node$extra;\n\n    this.toAssignableList(node.params, (_node$extra = node.extra) == null ? void 0 : _node$extra.trailingComma, false);\n    this.scope.enter(SCOPE_FUNCTION | SCOPE_ARROW);\n    super.checkParams(node, false, true);\n    this.scope.exit();\n  }\n\n  forwardNoArrowParamsConversionAt(node, parse) {\n    let result;\n\n    if (this.state.noArrowParamsConversionAt.indexOf(node.start) !== -1) {\n      this.state.noArrowParamsConversionAt.push(this.state.start);\n      result = parse();\n      this.state.noArrowParamsConversionAt.pop();\n    } else {\n      result = parse();\n    }\n\n    return result;\n  }\n\n  parseParenItem(node, startPos, startLoc) {\n    node = super.parseParenItem(node, startPos, startLoc);\n\n    if (this.eat(types$1.question)) {\n      node.optional = true;\n      this.resetEndLocation(node);\n    }\n\n    if (this.match(types$1.colon)) {\n      const typeCastNode = this.startNodeAt(startPos, startLoc);\n      typeCastNode.expression = node;\n      typeCastNode.typeAnnotation = this.flowParseTypeAnnotation();\n      return this.finishNode(typeCastNode, \"TypeCastExpression\");\n    }\n\n    return node;\n  }\n\n  assertModuleNodeAllowed(node) {\n    if (node.type === \"ImportDeclaration\" && (node.importKind === \"type\" || node.importKind === \"typeof\") || node.type === \"ExportNamedDeclaration\" && node.exportKind === \"type\" || node.type === \"ExportAllDeclaration\" && node.exportKind === \"type\") {\n      return;\n    }\n\n    super.assertModuleNodeAllowed(node);\n  }\n\n  parseExport(node) {\n    const decl = super.parseExport(node);\n\n    if (decl.type === \"ExportNamedDeclaration\" || decl.type === \"ExportAllDeclaration\") {\n      decl.exportKind = decl.exportKind || \"value\";\n    }\n\n    return decl;\n  }\n\n  parseExportDeclaration(node) {\n    if (this.isContextual(\"type\")) {\n      node.exportKind = \"type\";\n      const declarationNode = this.startNode();\n      this.next();\n\n      if (this.match(types$1.braceL)) {\n        node.specifiers = this.parseExportSpecifiers();\n        this.parseExportFrom(node);\n        return null;\n      } else {\n        return this.flowParseTypeAlias(declarationNode);\n      }\n    } else if (this.isContextual(\"opaque\")) {\n      node.exportKind = \"type\";\n      const declarationNode = this.startNode();\n      this.next();\n      return this.flowParseOpaqueType(declarationNode, false);\n    } else if (this.isContextual(\"interface\")) {\n      node.exportKind = \"type\";\n      const declarationNode = this.startNode();\n      this.next();\n      return this.flowParseInterface(declarationNode);\n    } else if (this.shouldParseEnums() && this.isContextual(\"enum\")) {\n      node.exportKind = \"value\";\n      const declarationNode = this.startNode();\n      this.next();\n      return this.flowParseEnumDeclaration(declarationNode);\n    } else {\n      return super.parseExportDeclaration(node);\n    }\n  }\n\n  eatExportStar(node) {\n    if (super.eatExportStar(...arguments)) return true;\n\n    if (this.isContextual(\"type\") && this.lookahead().type === types$1.star) {\n      node.exportKind = \"type\";\n      this.next();\n      this.next();\n      return true;\n    }\n\n    return false;\n  }\n\n  maybeParseExportNamespaceSpecifier(node) {\n    const pos = this.state.start;\n    const hasNamespace = super.maybeParseExportNamespaceSpecifier(node);\n\n    if (hasNamespace && node.exportKind === \"type\") {\n      this.unexpected(pos);\n    }\n\n    return hasNamespace;\n  }\n\n  parseClassId(node, isStatement, optionalId) {\n    super.parseClassId(node, isStatement, optionalId);\n\n    if (this.isRelational(\"<\")) {\n      node.typeParameters = this.flowParseTypeParameterDeclaration();\n    }\n  }\n\n  parseClassMember(classBody, member, state) {\n    const pos = this.state.start;\n\n    if (this.isContextual(\"declare\")) {\n      if (this.parseClassMemberFromModifier(classBody, member)) {\n        return;\n      }\n\n      member.declare = true;\n    }\n\n    super.parseClassMember(classBody, member, state);\n\n    if (member.declare) {\n      if (member.type !== \"ClassProperty\" && member.type !== \"ClassPrivateProperty\" && member.type !== \"PropertyDefinition\") {\n          this.raise(pos, FlowErrors.DeclareClassElement);\n        } else if (member.value) {\n        this.raise(member.value.start, FlowErrors.DeclareClassFieldInitializer);\n      }\n    }\n  }\n\n  isIterator(word) {\n    return word === \"iterator\" || word === \"asyncIterator\";\n  }\n\n  readIterator() {\n    const word = super.readWord1();\n    const fullWord = \"@@\" + word;\n\n    if (!this.isIterator(word) || !this.state.inType) {\n      this.raise(this.state.pos, ErrorMessages.InvalidIdentifier, fullWord);\n    }\n\n    this.finishToken(types$1.name, fullWord);\n  }\n\n  getTokenFromCode(code) {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (code === 123 && next === 124) {\n      return this.finishOp(types$1.braceBarL, 2);\n    } else if (this.state.inType && (code === 62 || code === 60)) {\n      return this.finishOp(types$1.relational, 1);\n    } else if (this.state.inType && code === 63) {\n      if (next === 46) {\n        return this.finishOp(types$1.questionDot, 2);\n      }\n\n      return this.finishOp(types$1.question, 1);\n    } else if (isIteratorStart(code, next)) {\n      this.state.pos += 2;\n      return this.readIterator();\n    } else {\n      return super.getTokenFromCode(code);\n    }\n  }\n\n  isAssignable(node, isBinding) {\n    switch (node.type) {\n      case \"Identifier\":\n      case \"ObjectPattern\":\n      case \"ArrayPattern\":\n      case \"AssignmentPattern\":\n        return true;\n\n      case \"ObjectExpression\":\n        {\n          const last = node.properties.length - 1;\n          return node.properties.every((prop, i) => {\n            return prop.type !== \"ObjectMethod\" && (i === last || prop.type === \"SpreadElement\") && this.isAssignable(prop);\n          });\n        }\n\n      case \"ObjectProperty\":\n        return this.isAssignable(node.value);\n\n      case \"SpreadElement\":\n        return this.isAssignable(node.argument);\n\n      case \"ArrayExpression\":\n        return node.elements.every(element => this.isAssignable(element));\n\n      case \"AssignmentExpression\":\n        return node.operator === \"=\";\n\n      case \"ParenthesizedExpression\":\n      case \"TypeCastExpression\":\n        return this.isAssignable(node.expression);\n\n      case \"MemberExpression\":\n      case \"OptionalMemberExpression\":\n        return !isBinding;\n\n      default:\n        return false;\n    }\n  }\n\n  toAssignable(node, isLHS = false) {\n    if (node.type === \"TypeCastExpression\") {\n      return super.toAssignable(this.typeCastToParameter(node), isLHS);\n    } else {\n      return super.toAssignable(node, isLHS);\n    }\n  }\n\n  toAssignableList(exprList, trailingCommaPos, isLHS) {\n    for (let i = 0; i < exprList.length; i++) {\n      const expr = exprList[i];\n\n      if ((expr == null ? void 0 : expr.type) === \"TypeCastExpression\") {\n        exprList[i] = this.typeCastToParameter(expr);\n      }\n    }\n\n    return super.toAssignableList(exprList, trailingCommaPos, isLHS);\n  }\n\n  toReferencedList(exprList, isParenthesizedExpr) {\n    for (let i = 0; i < exprList.length; i++) {\n      var _expr$extra;\n\n      const expr = exprList[i];\n\n      if (expr && expr.type === \"TypeCastExpression\" && !((_expr$extra = expr.extra) != null && _expr$extra.parenthesized) && (exprList.length > 1 || !isParenthesizedExpr)) {\n        this.raise(expr.typeAnnotation.start, FlowErrors.TypeCastInPattern);\n      }\n    }\n\n    return exprList;\n  }\n\n  parseArrayLike(close, canBePattern, isTuple, refExpressionErrors) {\n    const node = super.parseArrayLike(close, canBePattern, isTuple, refExpressionErrors);\n\n    if (canBePattern && !this.state.maybeInArrowParameters) {\n      this.toReferencedList(node.elements);\n    }\n\n    return node;\n  }\n\n  checkLVal(expr, ...args) {\n    if (expr.type !== \"TypeCastExpression\") {\n      return super.checkLVal(expr, ...args);\n    }\n  }\n\n  parseClassProperty(node) {\n    if (this.match(types$1.colon)) {\n      node.typeAnnotation = this.flowParseTypeAnnotation();\n    }\n\n    return super.parseClassProperty(node);\n  }\n\n  parseClassPrivateProperty(node) {\n    if (this.match(types$1.colon)) {\n      node.typeAnnotation = this.flowParseTypeAnnotation();\n    }\n\n    return super.parseClassPrivateProperty(node);\n  }\n\n  isClassMethod() {\n    return this.isRelational(\"<\") || super.isClassMethod();\n  }\n\n  isClassProperty() {\n    return this.match(types$1.colon) || super.isClassProperty();\n  }\n\n  isNonstaticConstructor(method) {\n    return !this.match(types$1.colon) && super.isNonstaticConstructor(method);\n  }\n\n  pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper) {\n    if (method.variance) {\n      this.unexpected(method.variance.start);\n    }\n\n    delete method.variance;\n\n    if (this.isRelational(\"<\")) {\n      method.typeParameters = this.flowParseTypeParameterDeclaration();\n    }\n\n    super.pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper);\n\n    if (method.params && isConstructor) {\n      const params = method.params;\n\n      if (params.length > 0 && this.isThisParam(params[0])) {\n        this.raise(method.start, FlowErrors.ThisParamBannedInConstructor);\n      }\n    } else if (method.type === \"MethodDefinition\" && isConstructor && method.value.params) {\n      const params = method.value.params;\n\n      if (params.length > 0 && this.isThisParam(params[0])) {\n        this.raise(method.start, FlowErrors.ThisParamBannedInConstructor);\n      }\n    }\n  }\n\n  pushClassPrivateMethod(classBody, method, isGenerator, isAsync) {\n    if (method.variance) {\n      this.unexpected(method.variance.start);\n    }\n\n    delete method.variance;\n\n    if (this.isRelational(\"<\")) {\n      method.typeParameters = this.flowParseTypeParameterDeclaration();\n    }\n\n    super.pushClassPrivateMethod(classBody, method, isGenerator, isAsync);\n  }\n\n  parseClassSuper(node) {\n    super.parseClassSuper(node);\n\n    if (node.superClass && this.isRelational(\"<\")) {\n      node.superTypeParameters = this.flowParseTypeParameterInstantiation();\n    }\n\n    if (this.isContextual(\"implements\")) {\n      this.next();\n      const implemented = node.implements = [];\n\n      do {\n        const node = this.startNode();\n        node.id = this.flowParseRestrictedIdentifier(true);\n\n        if (this.isRelational(\"<\")) {\n          node.typeParameters = this.flowParseTypeParameterInstantiation();\n        } else {\n          node.typeParameters = null;\n        }\n\n        implemented.push(this.finishNode(node, \"ClassImplements\"));\n      } while (this.eat(types$1.comma));\n    }\n  }\n\n  checkGetterSetterParams(method) {\n    super.checkGetterSetterParams(method);\n    const params = this.getObjectOrClassMethodParams(method);\n\n    if (params.length > 0) {\n      const param = params[0];\n\n      if (this.isThisParam(param) && method.kind === \"get\") {\n        this.raise(param.start, FlowErrors.GetterMayNotHaveThisParam);\n      } else if (this.isThisParam(param)) {\n        this.raise(param.start, FlowErrors.SetterMayNotHaveThisParam);\n      }\n    }\n  }\n\n  parsePropertyName(node, isPrivateNameAllowed) {\n    const variance = this.flowParseVariance();\n    const key = super.parsePropertyName(node, isPrivateNameAllowed);\n    node.variance = variance;\n    return key;\n  }\n\n  parseObjPropValue(prop, startPos, startLoc, isGenerator, isAsync, isPattern, isAccessor, refExpressionErrors) {\n    if (prop.variance) {\n      this.unexpected(prop.variance.start);\n    }\n\n    delete prop.variance;\n    let typeParameters;\n\n    if (this.isRelational(\"<\") && !isAccessor) {\n      typeParameters = this.flowParseTypeParameterDeclaration();\n      if (!this.match(types$1.parenL)) this.unexpected();\n    }\n\n    super.parseObjPropValue(prop, startPos, startLoc, isGenerator, isAsync, isPattern, isAccessor, refExpressionErrors);\n\n    if (typeParameters) {\n      (prop.value || prop).typeParameters = typeParameters;\n    }\n  }\n\n  parseAssignableListItemTypes(param) {\n    if (this.eat(types$1.question)) {\n      if (param.type !== \"Identifier\") {\n        this.raise(param.start, FlowErrors.OptionalBindingPattern);\n      }\n\n      if (this.isThisParam(param)) {\n        this.raise(param.start, FlowErrors.ThisParamMayNotBeOptional);\n      }\n\n      param.optional = true;\n    }\n\n    if (this.match(types$1.colon)) {\n      param.typeAnnotation = this.flowParseTypeAnnotation();\n    } else if (this.isThisParam(param)) {\n      this.raise(param.start, FlowErrors.ThisParamAnnotationRequired);\n    }\n\n    if (this.match(types$1.eq) && this.isThisParam(param)) {\n      this.raise(param.start, FlowErrors.ThisParamNoDefault);\n    }\n\n    this.resetEndLocation(param);\n    return param;\n  }\n\n  parseMaybeDefault(startPos, startLoc, left) {\n    const node = super.parseMaybeDefault(startPos, startLoc, left);\n\n    if (node.type === \"AssignmentPattern\" && node.typeAnnotation && node.right.start < node.typeAnnotation.start) {\n      this.raise(node.typeAnnotation.start, FlowErrors.TypeBeforeInitializer);\n    }\n\n    return node;\n  }\n\n  shouldParseDefaultImport(node) {\n    if (!hasTypeImportKind(node)) {\n      return super.shouldParseDefaultImport(node);\n    }\n\n    return isMaybeDefaultImport(this.state);\n  }\n\n  parseImportSpecifierLocal(node, specifier, type, contextDescription) {\n    specifier.local = hasTypeImportKind(node) ? this.flowParseRestrictedIdentifier(true, true) : this.parseIdentifier();\n    this.checkLVal(specifier.local, contextDescription, BIND_LEXICAL);\n    node.specifiers.push(this.finishNode(specifier, type));\n  }\n\n  maybeParseDefaultImportSpecifier(node) {\n    node.importKind = \"value\";\n    let kind = null;\n\n    if (this.match(types$1._typeof)) {\n      kind = \"typeof\";\n    } else if (this.isContextual(\"type\")) {\n      kind = \"type\";\n    }\n\n    if (kind) {\n      const lh = this.lookahead();\n\n      if (kind === \"type\" && lh.type === types$1.star) {\n        this.unexpected(lh.start);\n      }\n\n      if (isMaybeDefaultImport(lh) || lh.type === types$1.braceL || lh.type === types$1.star) {\n        this.next();\n        node.importKind = kind;\n      }\n    }\n\n    return super.maybeParseDefaultImportSpecifier(node);\n  }\n\n  parseImportSpecifier(node) {\n    const specifier = this.startNode();\n    const firstIdentLoc = this.state.start;\n    const firstIdent = this.parseModuleExportName();\n    let specifierTypeKind = null;\n\n    if (firstIdent.type === \"Identifier\") {\n      if (firstIdent.name === \"type\") {\n        specifierTypeKind = \"type\";\n      } else if (firstIdent.name === \"typeof\") {\n        specifierTypeKind = \"typeof\";\n      }\n    }\n\n    let isBinding = false;\n\n    if (this.isContextual(\"as\") && !this.isLookaheadContextual(\"as\")) {\n      const as_ident = this.parseIdentifier(true);\n\n      if (specifierTypeKind !== null && !this.match(types$1.name) && !this.state.type.keyword) {\n        specifier.imported = as_ident;\n        specifier.importKind = specifierTypeKind;\n        specifier.local = as_ident.__clone();\n      } else {\n        specifier.imported = firstIdent;\n        specifier.importKind = null;\n        specifier.local = this.parseIdentifier();\n      }\n    } else if (specifierTypeKind !== null && (this.match(types$1.name) || this.state.type.keyword)) {\n      specifier.imported = this.parseIdentifier(true);\n      specifier.importKind = specifierTypeKind;\n\n      if (this.eatContextual(\"as\")) {\n        specifier.local = this.parseIdentifier();\n      } else {\n        isBinding = true;\n        specifier.local = specifier.imported.__clone();\n      }\n    } else {\n      if (firstIdent.type === \"StringLiteral\") {\n        throw this.raise(specifier.start, ErrorMessages.ImportBindingIsString, firstIdent.value);\n      }\n\n      isBinding = true;\n      specifier.imported = firstIdent;\n      specifier.importKind = null;\n      specifier.local = specifier.imported.__clone();\n    }\n\n    const nodeIsTypeImport = hasTypeImportKind(node);\n    const specifierIsTypeImport = hasTypeImportKind(specifier);\n\n    if (nodeIsTypeImport && specifierIsTypeImport) {\n      this.raise(firstIdentLoc, FlowErrors.ImportTypeShorthandOnlyInPureImport);\n    }\n\n    if (nodeIsTypeImport || specifierIsTypeImport) {\n      this.checkReservedType(specifier.local.name, specifier.local.start, true);\n    }\n\n    if (isBinding && !nodeIsTypeImport && !specifierIsTypeImport) {\n      this.checkReservedWord(specifier.local.name, specifier.start, true, true);\n    }\n\n    this.checkLVal(specifier.local, \"import specifier\", BIND_LEXICAL);\n    node.specifiers.push(this.finishNode(specifier, \"ImportSpecifier\"));\n  }\n\n  parseBindingAtom() {\n    switch (this.state.type) {\n      case types$1._this:\n        return this.parseIdentifier(true);\n\n      default:\n        return super.parseBindingAtom();\n    }\n  }\n\n  parseFunctionParams(node, allowModifiers) {\n    const kind = node.kind;\n\n    if (kind !== \"get\" && kind !== \"set\" && this.isRelational(\"<\")) {\n      node.typeParameters = this.flowParseTypeParameterDeclaration();\n    }\n\n    super.parseFunctionParams(node, allowModifiers);\n  }\n\n  parseVarId(decl, kind) {\n    super.parseVarId(decl, kind);\n\n    if (this.match(types$1.colon)) {\n      decl.id.typeAnnotation = this.flowParseTypeAnnotation();\n      this.resetEndLocation(decl.id);\n    }\n  }\n\n  parseAsyncArrowFromCallExpression(node, call) {\n    if (this.match(types$1.colon)) {\n      const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n      this.state.noAnonFunctionType = true;\n      node.returnType = this.flowParseTypeAnnotation();\n      this.state.noAnonFunctionType = oldNoAnonFunctionType;\n    }\n\n    return super.parseAsyncArrowFromCallExpression(node, call);\n  }\n\n  shouldParseAsyncArrow() {\n    return this.match(types$1.colon) || super.shouldParseAsyncArrow();\n  }\n\n  parseMaybeAssign(refExpressionErrors, afterLeftParse, refNeedsArrowPos) {\n    var _jsx;\n\n    let state = null;\n    let jsx;\n\n    if (this.hasPlugin(\"jsx\") && (this.match(types$1.jsxTagStart) || this.isRelational(\"<\"))) {\n      state = this.state.clone();\n      jsx = this.tryParse(() => super.parseMaybeAssign(refExpressionErrors, afterLeftParse, refNeedsArrowPos), state);\n      if (!jsx.error) return jsx.node;\n      const {\n        context\n      } = this.state;\n\n      if (context[context.length - 1] === types.j_oTag) {\n        context.length -= 2;\n      } else if (context[context.length - 1] === types.j_expr) {\n        context.length -= 1;\n      }\n    }\n\n    if ((_jsx = jsx) != null && _jsx.error || this.isRelational(\"<\")) {\n      var _jsx2, _jsx3;\n\n      state = state || this.state.clone();\n      let typeParameters;\n      const arrow = this.tryParse(abort => {\n        var _arrowExpression$extr;\n\n        typeParameters = this.flowParseTypeParameterDeclaration();\n        const arrowExpression = this.forwardNoArrowParamsConversionAt(typeParameters, () => {\n          const result = super.parseMaybeAssign(refExpressionErrors, afterLeftParse, refNeedsArrowPos);\n          this.resetStartLocationFromNode(result, typeParameters);\n          return result;\n        });\n\n        if (arrowExpression.type !== \"ArrowFunctionExpression\" && (_arrowExpression$extr = arrowExpression.extra) != null && _arrowExpression$extr.parenthesized) {\n          abort();\n        }\n\n        const expr = this.maybeUnwrapTypeCastExpression(arrowExpression);\n        expr.typeParameters = typeParameters;\n        this.resetStartLocationFromNode(expr, typeParameters);\n        return arrowExpression;\n      }, state);\n      let arrowExpression = null;\n\n      if (arrow.node && this.maybeUnwrapTypeCastExpression(arrow.node).type === \"ArrowFunctionExpression\") {\n        if (!arrow.error && !arrow.aborted) {\n          if (arrow.node.async) {\n            this.raise(typeParameters.start, FlowErrors.UnexpectedTypeParameterBeforeAsyncArrowFunction);\n          }\n\n          return arrow.node;\n        }\n\n        arrowExpression = arrow.node;\n      }\n\n      if ((_jsx2 = jsx) != null && _jsx2.node) {\n        this.state = jsx.failState;\n        return jsx.node;\n      }\n\n      if (arrowExpression) {\n        this.state = arrow.failState;\n        return arrowExpression;\n      }\n\n      if ((_jsx3 = jsx) != null && _jsx3.thrown) throw jsx.error;\n      if (arrow.thrown) throw arrow.error;\n      throw this.raise(typeParameters.start, FlowErrors.UnexpectedTokenAfterTypeParameter);\n    }\n\n    return super.parseMaybeAssign(refExpressionErrors, afterLeftParse, refNeedsArrowPos);\n  }\n\n  parseArrow(node) {\n    if (this.match(types$1.colon)) {\n      const result = this.tryParse(() => {\n        const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n        this.state.noAnonFunctionType = true;\n        const typeNode = this.startNode();\n        [typeNode.typeAnnotation, node.predicate] = this.flowParseTypeAndPredicateInitialiser();\n        this.state.noAnonFunctionType = oldNoAnonFunctionType;\n        if (this.canInsertSemicolon()) this.unexpected();\n        if (!this.match(types$1.arrow)) this.unexpected();\n        return typeNode;\n      });\n      if (result.thrown) return null;\n      if (result.error) this.state = result.failState;\n      node.returnType = result.node.typeAnnotation ? this.finishNode(result.node, \"TypeAnnotation\") : null;\n    }\n\n    return super.parseArrow(node);\n  }\n\n  shouldParseArrow() {\n    return this.match(types$1.colon) || super.shouldParseArrow();\n  }\n\n  setArrowFunctionParameters(node, params) {\n    if (this.state.noArrowParamsConversionAt.indexOf(node.start) !== -1) {\n      node.params = params;\n    } else {\n      super.setArrowFunctionParameters(node, params);\n    }\n  }\n\n  checkParams(node, allowDuplicates, isArrowFunction) {\n    if (isArrowFunction && this.state.noArrowParamsConversionAt.indexOf(node.start) !== -1) {\n      return;\n    }\n\n    for (let i = 0; i < node.params.length; i++) {\n      if (this.isThisParam(node.params[i]) && i > 0) {\n        this.raise(node.params[i].start, FlowErrors.ThisParamMustBeFirst);\n      }\n    }\n\n    return super.checkParams(...arguments);\n  }\n\n  parseParenAndDistinguishExpression(canBeArrow) {\n    return super.parseParenAndDistinguishExpression(canBeArrow && this.state.noArrowAt.indexOf(this.state.start) === -1);\n  }\n\n  parseSubscripts(base, startPos, startLoc, noCalls) {\n    if (base.type === \"Identifier\" && base.name === \"async\" && this.state.noArrowAt.indexOf(startPos) !== -1) {\n      this.next();\n      const node = this.startNodeAt(startPos, startLoc);\n      node.callee = base;\n      node.arguments = this.parseCallExpressionArguments(types$1.parenR, false);\n      base = this.finishNode(node, \"CallExpression\");\n    } else if (base.type === \"Identifier\" && base.name === \"async\" && this.isRelational(\"<\")) {\n      const state = this.state.clone();\n      const arrow = this.tryParse(abort => this.parseAsyncArrowWithTypeParameters(startPos, startLoc) || abort(), state);\n      if (!arrow.error && !arrow.aborted) return arrow.node;\n      const result = this.tryParse(() => super.parseSubscripts(base, startPos, startLoc, noCalls), state);\n      if (result.node && !result.error) return result.node;\n\n      if (arrow.node) {\n        this.state = arrow.failState;\n        return arrow.node;\n      }\n\n      if (result.node) {\n        this.state = result.failState;\n        return result.node;\n      }\n\n      throw arrow.error || result.error;\n    }\n\n    return super.parseSubscripts(base, startPos, startLoc, noCalls);\n  }\n\n  parseSubscript(base, startPos, startLoc, noCalls, subscriptState) {\n    if (this.match(types$1.questionDot) && this.isLookaheadToken_lt()) {\n      subscriptState.optionalChainMember = true;\n\n      if (noCalls) {\n        subscriptState.stop = true;\n        return base;\n      }\n\n      this.next();\n      const node = this.startNodeAt(startPos, startLoc);\n      node.callee = base;\n      node.typeArguments = this.flowParseTypeParameterInstantiation();\n      this.expect(types$1.parenL);\n      node.arguments = this.parseCallExpressionArguments(types$1.parenR, false);\n      node.optional = true;\n      return this.finishCallExpression(node, true);\n    } else if (!noCalls && this.shouldParseTypes() && this.isRelational(\"<\")) {\n      const node = this.startNodeAt(startPos, startLoc);\n      node.callee = base;\n      const result = this.tryParse(() => {\n        node.typeArguments = this.flowParseTypeParameterInstantiationCallOrNew();\n        this.expect(types$1.parenL);\n        node.arguments = this.parseCallExpressionArguments(types$1.parenR, false);\n        if (subscriptState.optionalChainMember) node.optional = false;\n        return this.finishCallExpression(node, subscriptState.optionalChainMember);\n      });\n\n      if (result.node) {\n        if (result.error) this.state = result.failState;\n        return result.node;\n      }\n    }\n\n    return super.parseSubscript(base, startPos, startLoc, noCalls, subscriptState);\n  }\n\n  parseNewArguments(node) {\n    let targs = null;\n\n    if (this.shouldParseTypes() && this.isRelational(\"<\")) {\n      targs = this.tryParse(() => this.flowParseTypeParameterInstantiationCallOrNew()).node;\n    }\n\n    node.typeArguments = targs;\n    super.parseNewArguments(node);\n  }\n\n  parseAsyncArrowWithTypeParameters(startPos, startLoc) {\n    const node = this.startNodeAt(startPos, startLoc);\n    this.parseFunctionParams(node);\n    if (!this.parseArrow(node)) return;\n    return this.parseArrowExpression(node, undefined, true);\n  }\n\n  readToken_mult_modulo(code) {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (code === 42 && next === 47 && this.state.hasFlowComment) {\n      this.state.hasFlowComment = false;\n      this.state.pos += 2;\n      this.nextToken();\n      return;\n    }\n\n    super.readToken_mult_modulo(code);\n  }\n\n  readToken_pipe_amp(code) {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (code === 124 && next === 125) {\n      this.finishOp(types$1.braceBarR, 2);\n      return;\n    }\n\n    super.readToken_pipe_amp(code);\n  }\n\n  parseTopLevel(file, program) {\n    const fileNode = super.parseTopLevel(file, program);\n\n    if (this.state.hasFlowComment) {\n      this.raise(this.state.pos, FlowErrors.UnterminatedFlowComment);\n    }\n\n    return fileNode;\n  }\n\n  skipBlockComment() {\n    if (this.hasPlugin(\"flowComments\") && this.skipFlowComment()) {\n      if (this.state.hasFlowComment) {\n        this.unexpected(null, FlowErrors.NestedFlowComment);\n      }\n\n      this.hasFlowCommentCompletion();\n      this.state.pos += this.skipFlowComment();\n      this.state.hasFlowComment = true;\n      return;\n    }\n\n    if (this.state.hasFlowComment) {\n      const end = this.input.indexOf(\"*-/\", this.state.pos += 2);\n\n      if (end === -1) {\n        throw this.raise(this.state.pos - 2, ErrorMessages.UnterminatedComment);\n      }\n\n      this.state.pos = end + 3;\n      return;\n    }\n\n    super.skipBlockComment();\n  }\n\n  skipFlowComment() {\n    const {\n      pos\n    } = this.state;\n    let shiftToFirstNonWhiteSpace = 2;\n\n    while ([32, 9].includes(this.input.charCodeAt(pos + shiftToFirstNonWhiteSpace))) {\n      shiftToFirstNonWhiteSpace++;\n    }\n\n    const ch2 = this.input.charCodeAt(shiftToFirstNonWhiteSpace + pos);\n    const ch3 = this.input.charCodeAt(shiftToFirstNonWhiteSpace + pos + 1);\n\n    if (ch2 === 58 && ch3 === 58) {\n      return shiftToFirstNonWhiteSpace + 2;\n    }\n\n    if (this.input.slice(shiftToFirstNonWhiteSpace + pos, shiftToFirstNonWhiteSpace + pos + 12) === \"flow-include\") {\n      return shiftToFirstNonWhiteSpace + 12;\n    }\n\n    if (ch2 === 58 && ch3 !== 58) {\n      return shiftToFirstNonWhiteSpace;\n    }\n\n    return false;\n  }\n\n  hasFlowCommentCompletion() {\n    const end = this.input.indexOf(\"*/\", this.state.pos);\n\n    if (end === -1) {\n      throw this.raise(this.state.pos, ErrorMessages.UnterminatedComment);\n    }\n  }\n\n  flowEnumErrorBooleanMemberNotInitialized(pos, {\n    enumName,\n    memberName\n  }) {\n    this.raise(pos, FlowErrors.EnumBooleanMemberNotInitialized, memberName, enumName);\n  }\n\n  flowEnumErrorInvalidMemberName(pos, {\n    enumName,\n    memberName\n  }) {\n    const suggestion = memberName[0].toUpperCase() + memberName.slice(1);\n    this.raise(pos, FlowErrors.EnumInvalidMemberName, memberName, suggestion, enumName);\n  }\n\n  flowEnumErrorDuplicateMemberName(pos, {\n    enumName,\n    memberName\n  }) {\n    this.raise(pos, FlowErrors.EnumDuplicateMemberName, memberName, enumName);\n  }\n\n  flowEnumErrorInconsistentMemberValues(pos, {\n    enumName\n  }) {\n    this.raise(pos, FlowErrors.EnumInconsistentMemberValues, enumName);\n  }\n\n  flowEnumErrorInvalidExplicitType(pos, {\n    enumName,\n    suppliedType\n  }) {\n    return this.raise(pos, suppliedType === null ? FlowErrors.EnumInvalidExplicitTypeUnknownSupplied : FlowErrors.EnumInvalidExplicitType, enumName, suppliedType);\n  }\n\n  flowEnumErrorInvalidMemberInitializer(pos, {\n    enumName,\n    explicitType,\n    memberName\n  }) {\n    let message = null;\n\n    switch (explicitType) {\n      case \"boolean\":\n      case \"number\":\n      case \"string\":\n        message = FlowErrors.EnumInvalidMemberInitializerPrimaryType;\n        break;\n\n      case \"symbol\":\n        message = FlowErrors.EnumInvalidMemberInitializerSymbolType;\n        break;\n\n      default:\n        message = FlowErrors.EnumInvalidMemberInitializerUnknownType;\n    }\n\n    return this.raise(pos, message, enumName, memberName, explicitType);\n  }\n\n  flowEnumErrorNumberMemberNotInitialized(pos, {\n    enumName,\n    memberName\n  }) {\n    this.raise(pos, FlowErrors.EnumNumberMemberNotInitialized, enumName, memberName);\n  }\n\n  flowEnumErrorStringMemberInconsistentlyInitailized(pos, {\n    enumName\n  }) {\n    this.raise(pos, FlowErrors.EnumStringMemberInconsistentlyInitailized, enumName);\n  }\n\n  flowEnumMemberInit() {\n    const startPos = this.state.start;\n\n    const endOfInit = () => this.match(types$1.comma) || this.match(types$1.braceR);\n\n    switch (this.state.type) {\n      case types$1.num:\n        {\n          const literal = this.parseLiteral(this.state.value, \"NumericLiteral\");\n\n          if (endOfInit()) {\n            return {\n              type: \"number\",\n              pos: literal.start,\n              value: literal\n            };\n          }\n\n          return {\n            type: \"invalid\",\n            pos: startPos\n          };\n        }\n\n      case types$1.string:\n        {\n          const literal = this.parseLiteral(this.state.value, \"StringLiteral\");\n\n          if (endOfInit()) {\n            return {\n              type: \"string\",\n              pos: literal.start,\n              value: literal\n            };\n          }\n\n          return {\n            type: \"invalid\",\n            pos: startPos\n          };\n        }\n\n      case types$1._true:\n      case types$1._false:\n        {\n          const literal = this.parseBooleanLiteral();\n\n          if (endOfInit()) {\n            return {\n              type: \"boolean\",\n              pos: literal.start,\n              value: literal\n            };\n          }\n\n          return {\n            type: \"invalid\",\n            pos: startPos\n          };\n        }\n\n      default:\n        return {\n          type: \"invalid\",\n          pos: startPos\n        };\n    }\n  }\n\n  flowEnumMemberRaw() {\n    const pos = this.state.start;\n    const id = this.parseIdentifier(true);\n    const init = this.eat(types$1.eq) ? this.flowEnumMemberInit() : {\n      type: \"none\",\n      pos\n    };\n    return {\n      id,\n      init\n    };\n  }\n\n  flowEnumCheckExplicitTypeMismatch(pos, context, expectedType) {\n    const {\n      explicitType\n    } = context;\n\n    if (explicitType === null) {\n      return;\n    }\n\n    if (explicitType !== expectedType) {\n      this.flowEnumErrorInvalidMemberInitializer(pos, context);\n    }\n  }\n\n  flowEnumMembers({\n    enumName,\n    explicitType\n  }) {\n    const seenNames = new Set();\n    const members = {\n      booleanMembers: [],\n      numberMembers: [],\n      stringMembers: [],\n      defaultedMembers: []\n    };\n    let hasUnknownMembers = false;\n\n    while (!this.match(types$1.braceR)) {\n      if (this.eat(types$1.ellipsis)) {\n        hasUnknownMembers = true;\n        break;\n      }\n\n      const memberNode = this.startNode();\n      const {\n        id,\n        init\n      } = this.flowEnumMemberRaw();\n      const memberName = id.name;\n\n      if (memberName === \"\") {\n        continue;\n      }\n\n      if (/^[a-z]/.test(memberName)) {\n        this.flowEnumErrorInvalidMemberName(id.start, {\n          enumName,\n          memberName\n        });\n      }\n\n      if (seenNames.has(memberName)) {\n        this.flowEnumErrorDuplicateMemberName(id.start, {\n          enumName,\n          memberName\n        });\n      }\n\n      seenNames.add(memberName);\n      const context = {\n        enumName,\n        explicitType,\n        memberName\n      };\n      memberNode.id = id;\n\n      switch (init.type) {\n        case \"boolean\":\n          {\n            this.flowEnumCheckExplicitTypeMismatch(init.pos, context, \"boolean\");\n            memberNode.init = init.value;\n            members.booleanMembers.push(this.finishNode(memberNode, \"EnumBooleanMember\"));\n            break;\n          }\n\n        case \"number\":\n          {\n            this.flowEnumCheckExplicitTypeMismatch(init.pos, context, \"number\");\n            memberNode.init = init.value;\n            members.numberMembers.push(this.finishNode(memberNode, \"EnumNumberMember\"));\n            break;\n          }\n\n        case \"string\":\n          {\n            this.flowEnumCheckExplicitTypeMismatch(init.pos, context, \"string\");\n            memberNode.init = init.value;\n            members.stringMembers.push(this.finishNode(memberNode, \"EnumStringMember\"));\n            break;\n          }\n\n        case \"invalid\":\n          {\n            throw this.flowEnumErrorInvalidMemberInitializer(init.pos, context);\n          }\n\n        case \"none\":\n          {\n            switch (explicitType) {\n              case \"boolean\":\n                this.flowEnumErrorBooleanMemberNotInitialized(init.pos, context);\n                break;\n\n              case \"number\":\n                this.flowEnumErrorNumberMemberNotInitialized(init.pos, context);\n                break;\n\n              default:\n                members.defaultedMembers.push(this.finishNode(memberNode, \"EnumDefaultedMember\"));\n            }\n          }\n      }\n\n      if (!this.match(types$1.braceR)) {\n        this.expect(types$1.comma);\n      }\n    }\n\n    return {\n      members,\n      hasUnknownMembers\n    };\n  }\n\n  flowEnumStringMembers(initializedMembers, defaultedMembers, {\n    enumName\n  }) {\n    if (initializedMembers.length === 0) {\n      return defaultedMembers;\n    } else if (defaultedMembers.length === 0) {\n      return initializedMembers;\n    } else if (defaultedMembers.length > initializedMembers.length) {\n      for (const member of initializedMembers) {\n        this.flowEnumErrorStringMemberInconsistentlyInitailized(member.start, {\n          enumName\n        });\n      }\n\n      return defaultedMembers;\n    } else {\n      for (const member of defaultedMembers) {\n        this.flowEnumErrorStringMemberInconsistentlyInitailized(member.start, {\n          enumName\n        });\n      }\n\n      return initializedMembers;\n    }\n  }\n\n  flowEnumParseExplicitType({\n    enumName\n  }) {\n    if (this.eatContextual(\"of\")) {\n      if (!this.match(types$1.name)) {\n        throw this.flowEnumErrorInvalidExplicitType(this.state.start, {\n          enumName,\n          suppliedType: null\n        });\n      }\n\n      const {\n        value\n      } = this.state;\n      this.next();\n\n      if (value !== \"boolean\" && value !== \"number\" && value !== \"string\" && value !== \"symbol\") {\n        this.flowEnumErrorInvalidExplicitType(this.state.start, {\n          enumName,\n          suppliedType: value\n        });\n      }\n\n      return value;\n    }\n\n    return null;\n  }\n\n  flowEnumBody(node, {\n    enumName,\n    nameLoc\n  }) {\n    const explicitType = this.flowEnumParseExplicitType({\n      enumName\n    });\n    this.expect(types$1.braceL);\n    const {\n      members,\n      hasUnknownMembers\n    } = this.flowEnumMembers({\n      enumName,\n      explicitType\n    });\n    node.hasUnknownMembers = hasUnknownMembers;\n\n    switch (explicitType) {\n      case \"boolean\":\n        node.explicitType = true;\n        node.members = members.booleanMembers;\n        this.expect(types$1.braceR);\n        return this.finishNode(node, \"EnumBooleanBody\");\n\n      case \"number\":\n        node.explicitType = true;\n        node.members = members.numberMembers;\n        this.expect(types$1.braceR);\n        return this.finishNode(node, \"EnumNumberBody\");\n\n      case \"string\":\n        node.explicitType = true;\n        node.members = this.flowEnumStringMembers(members.stringMembers, members.defaultedMembers, {\n          enumName\n        });\n        this.expect(types$1.braceR);\n        return this.finishNode(node, \"EnumStringBody\");\n\n      case \"symbol\":\n        node.members = members.defaultedMembers;\n        this.expect(types$1.braceR);\n        return this.finishNode(node, \"EnumSymbolBody\");\n\n      default:\n        {\n          const empty = () => {\n            node.members = [];\n            this.expect(types$1.braceR);\n            return this.finishNode(node, \"EnumStringBody\");\n          };\n\n          node.explicitType = false;\n          const boolsLen = members.booleanMembers.length;\n          const numsLen = members.numberMembers.length;\n          const strsLen = members.stringMembers.length;\n          const defaultedLen = members.defaultedMembers.length;\n\n          if (!boolsLen && !numsLen && !strsLen && !defaultedLen) {\n            return empty();\n          } else if (!boolsLen && !numsLen) {\n            node.members = this.flowEnumStringMembers(members.stringMembers, members.defaultedMembers, {\n              enumName\n            });\n            this.expect(types$1.braceR);\n            return this.finishNode(node, \"EnumStringBody\");\n          } else if (!numsLen && !strsLen && boolsLen >= defaultedLen) {\n            for (const member of members.defaultedMembers) {\n              this.flowEnumErrorBooleanMemberNotInitialized(member.start, {\n                enumName,\n                memberName: member.id.name\n              });\n            }\n\n            node.members = members.booleanMembers;\n            this.expect(types$1.braceR);\n            return this.finishNode(node, \"EnumBooleanBody\");\n          } else if (!boolsLen && !strsLen && numsLen >= defaultedLen) {\n            for (const member of members.defaultedMembers) {\n              this.flowEnumErrorNumberMemberNotInitialized(member.start, {\n                enumName,\n                memberName: member.id.name\n              });\n            }\n\n            node.members = members.numberMembers;\n            this.expect(types$1.braceR);\n            return this.finishNode(node, \"EnumNumberBody\");\n          } else {\n            this.flowEnumErrorInconsistentMemberValues(nameLoc, {\n              enumName\n            });\n            return empty();\n          }\n        }\n    }\n  }\n\n  flowParseEnumDeclaration(node) {\n    const id = this.parseIdentifier();\n    node.id = id;\n    node.body = this.flowEnumBody(this.startNode(), {\n      enumName: id.name,\n      nameLoc: id.start\n    });\n    return this.finishNode(node, \"EnumDeclaration\");\n  }\n\n  updateContext(prevType) {\n    if (this.match(types$1.name) && this.state.value === \"of\" && prevType === types$1.name && this.input.slice(this.state.lastTokStart, this.state.lastTokEnd) === \"interface\") {\n      this.state.exprAllowed = false;\n    } else {\n      super.updateContext(prevType);\n    }\n  }\n\n  isLookaheadToken_lt() {\n    const next = this.nextTokenStart();\n\n    if (this.input.charCodeAt(next) === 60) {\n      const afterNext = this.input.charCodeAt(next + 1);\n      return afterNext !== 60 && afterNext !== 61;\n    }\n\n    return false;\n  }\n\n  maybeUnwrapTypeCastExpression(node) {\n    return node.type === \"TypeCastExpression\" ? node.expression : node;\n  }\n\n});\n\nconst entities = {\n  quot: \"\\u0022\",\n  amp: \"&\",\n  apos: \"\\u0027\",\n  lt: \"<\",\n  gt: \">\",\n  nbsp: \"\\u00A0\",\n  iexcl: \"\\u00A1\",\n  cent: \"\\u00A2\",\n  pound: \"\\u00A3\",\n  curren: \"\\u00A4\",\n  yen: \"\\u00A5\",\n  brvbar: \"\\u00A6\",\n  sect: \"\\u00A7\",\n  uml: \"\\u00A8\",\n  copy: \"\\u00A9\",\n  ordf: \"\\u00AA\",\n  laquo: \"\\u00AB\",\n  not: \"\\u00AC\",\n  shy: \"\\u00AD\",\n  reg: \"\\u00AE\",\n  macr: \"\\u00AF\",\n  deg: \"\\u00B0\",\n  plusmn: \"\\u00B1\",\n  sup2: \"\\u00B2\",\n  sup3: \"\\u00B3\",\n  acute: \"\\u00B4\",\n  micro: \"\\u00B5\",\n  para: \"\\u00B6\",\n  middot: \"\\u00B7\",\n  cedil: \"\\u00B8\",\n  sup1: \"\\u00B9\",\n  ordm: \"\\u00BA\",\n  raquo: \"\\u00BB\",\n  frac14: \"\\u00BC\",\n  frac12: \"\\u00BD\",\n  frac34: \"\\u00BE\",\n  iquest: \"\\u00BF\",\n  Agrave: \"\\u00C0\",\n  Aacute: \"\\u00C1\",\n  Acirc: \"\\u00C2\",\n  Atilde: \"\\u00C3\",\n  Auml: \"\\u00C4\",\n  Aring: \"\\u00C5\",\n  AElig: \"\\u00C6\",\n  Ccedil: \"\\u00C7\",\n  Egrave: \"\\u00C8\",\n  Eacute: \"\\u00C9\",\n  Ecirc: \"\\u00CA\",\n  Euml: \"\\u00CB\",\n  Igrave: \"\\u00CC\",\n  Iacute: \"\\u00CD\",\n  Icirc: \"\\u00CE\",\n  Iuml: \"\\u00CF\",\n  ETH: \"\\u00D0\",\n  Ntilde: \"\\u00D1\",\n  Ograve: \"\\u00D2\",\n  Oacute: \"\\u00D3\",\n  Ocirc: \"\\u00D4\",\n  Otilde: \"\\u00D5\",\n  Ouml: \"\\u00D6\",\n  times: \"\\u00D7\",\n  Oslash: \"\\u00D8\",\n  Ugrave: \"\\u00D9\",\n  Uacute: \"\\u00DA\",\n  Ucirc: \"\\u00DB\",\n  Uuml: \"\\u00DC\",\n  Yacute: \"\\u00DD\",\n  THORN: \"\\u00DE\",\n  szlig: \"\\u00DF\",\n  agrave: \"\\u00E0\",\n  aacute: \"\\u00E1\",\n  acirc: \"\\u00E2\",\n  atilde: \"\\u00E3\",\n  auml: \"\\u00E4\",\n  aring: \"\\u00E5\",\n  aelig: \"\\u00E6\",\n  ccedil: \"\\u00E7\",\n  egrave: \"\\u00E8\",\n  eacute: \"\\u00E9\",\n  ecirc: \"\\u00EA\",\n  euml: \"\\u00EB\",\n  igrave: \"\\u00EC\",\n  iacute: \"\\u00ED\",\n  icirc: \"\\u00EE\",\n  iuml: \"\\u00EF\",\n  eth: \"\\u00F0\",\n  ntilde: \"\\u00F1\",\n  ograve: \"\\u00F2\",\n  oacute: \"\\u00F3\",\n  ocirc: \"\\u00F4\",\n  otilde: \"\\u00F5\",\n  ouml: \"\\u00F6\",\n  divide: \"\\u00F7\",\n  oslash: \"\\u00F8\",\n  ugrave: \"\\u00F9\",\n  uacute: \"\\u00FA\",\n  ucirc: \"\\u00FB\",\n  uuml: \"\\u00FC\",\n  yacute: \"\\u00FD\",\n  thorn: \"\\u00FE\",\n  yuml: \"\\u00FF\",\n  OElig: \"\\u0152\",\n  oelig: \"\\u0153\",\n  Scaron: \"\\u0160\",\n  scaron: \"\\u0161\",\n  Yuml: \"\\u0178\",\n  fnof: \"\\u0192\",\n  circ: \"\\u02C6\",\n  tilde: \"\\u02DC\",\n  Alpha: \"\\u0391\",\n  Beta: \"\\u0392\",\n  Gamma: \"\\u0393\",\n  Delta: \"\\u0394\",\n  Epsilon: \"\\u0395\",\n  Zeta: \"\\u0396\",\n  Eta: \"\\u0397\",\n  Theta: \"\\u0398\",\n  Iota: \"\\u0399\",\n  Kappa: \"\\u039A\",\n  Lambda: \"\\u039B\",\n  Mu: \"\\u039C\",\n  Nu: \"\\u039D\",\n  Xi: \"\\u039E\",\n  Omicron: \"\\u039F\",\n  Pi: \"\\u03A0\",\n  Rho: \"\\u03A1\",\n  Sigma: \"\\u03A3\",\n  Tau: \"\\u03A4\",\n  Upsilon: \"\\u03A5\",\n  Phi: \"\\u03A6\",\n  Chi: \"\\u03A7\",\n  Psi: \"\\u03A8\",\n  Omega: \"\\u03A9\",\n  alpha: \"\\u03B1\",\n  beta: \"\\u03B2\",\n  gamma: \"\\u03B3\",\n  delta: \"\\u03B4\",\n  epsilon: \"\\u03B5\",\n  zeta: \"\\u03B6\",\n  eta: \"\\u03B7\",\n  theta: \"\\u03B8\",\n  iota: \"\\u03B9\",\n  kappa: \"\\u03BA\",\n  lambda: \"\\u03BB\",\n  mu: \"\\u03BC\",\n  nu: \"\\u03BD\",\n  xi: \"\\u03BE\",\n  omicron: \"\\u03BF\",\n  pi: \"\\u03C0\",\n  rho: \"\\u03C1\",\n  sigmaf: \"\\u03C2\",\n  sigma: \"\\u03C3\",\n  tau: \"\\u03C4\",\n  upsilon: \"\\u03C5\",\n  phi: \"\\u03C6\",\n  chi: \"\\u03C7\",\n  psi: \"\\u03C8\",\n  omega: \"\\u03C9\",\n  thetasym: \"\\u03D1\",\n  upsih: \"\\u03D2\",\n  piv: \"\\u03D6\",\n  ensp: \"\\u2002\",\n  emsp: \"\\u2003\",\n  thinsp: \"\\u2009\",\n  zwnj: \"\\u200C\",\n  zwj: \"\\u200D\",\n  lrm: \"\\u200E\",\n  rlm: \"\\u200F\",\n  ndash: \"\\u2013\",\n  mdash: \"\\u2014\",\n  lsquo: \"\\u2018\",\n  rsquo: \"\\u2019\",\n  sbquo: \"\\u201A\",\n  ldquo: \"\\u201C\",\n  rdquo: \"\\u201D\",\n  bdquo: \"\\u201E\",\n  dagger: \"\\u2020\",\n  Dagger: \"\\u2021\",\n  bull: \"\\u2022\",\n  hellip: \"\\u2026\",\n  permil: \"\\u2030\",\n  prime: \"\\u2032\",\n  Prime: \"\\u2033\",\n  lsaquo: \"\\u2039\",\n  rsaquo: \"\\u203A\",\n  oline: \"\\u203E\",\n  frasl: \"\\u2044\",\n  euro: \"\\u20AC\",\n  image: \"\\u2111\",\n  weierp: \"\\u2118\",\n  real: \"\\u211C\",\n  trade: \"\\u2122\",\n  alefsym: \"\\u2135\",\n  larr: \"\\u2190\",\n  uarr: \"\\u2191\",\n  rarr: \"\\u2192\",\n  darr: \"\\u2193\",\n  harr: \"\\u2194\",\n  crarr: \"\\u21B5\",\n  lArr: \"\\u21D0\",\n  uArr: \"\\u21D1\",\n  rArr: \"\\u21D2\",\n  dArr: \"\\u21D3\",\n  hArr: \"\\u21D4\",\n  forall: \"\\u2200\",\n  part: \"\\u2202\",\n  exist: \"\\u2203\",\n  empty: \"\\u2205\",\n  nabla: \"\\u2207\",\n  isin: \"\\u2208\",\n  notin: \"\\u2209\",\n  ni: \"\\u220B\",\n  prod: \"\\u220F\",\n  sum: \"\\u2211\",\n  minus: \"\\u2212\",\n  lowast: \"\\u2217\",\n  radic: \"\\u221A\",\n  prop: \"\\u221D\",\n  infin: \"\\u221E\",\n  ang: \"\\u2220\",\n  and: \"\\u2227\",\n  or: \"\\u2228\",\n  cap: \"\\u2229\",\n  cup: \"\\u222A\",\n  int: \"\\u222B\",\n  there4: \"\\u2234\",\n  sim: \"\\u223C\",\n  cong: \"\\u2245\",\n  asymp: \"\\u2248\",\n  ne: \"\\u2260\",\n  equiv: \"\\u2261\",\n  le: \"\\u2264\",\n  ge: \"\\u2265\",\n  sub: \"\\u2282\",\n  sup: \"\\u2283\",\n  nsub: \"\\u2284\",\n  sube: \"\\u2286\",\n  supe: \"\\u2287\",\n  oplus: \"\\u2295\",\n  otimes: \"\\u2297\",\n  perp: \"\\u22A5\",\n  sdot: \"\\u22C5\",\n  lceil: \"\\u2308\",\n  rceil: \"\\u2309\",\n  lfloor: \"\\u230A\",\n  rfloor: \"\\u230B\",\n  lang: \"\\u2329\",\n  rang: \"\\u232A\",\n  loz: \"\\u25CA\",\n  spades: \"\\u2660\",\n  clubs: \"\\u2663\",\n  hearts: \"\\u2665\",\n  diams: \"\\u2666\"\n};\n\nconst HEX_NUMBER = /^[\\da-fA-F]+$/;\nconst DECIMAL_NUMBER = /^\\d+$/;\nconst JsxErrors = makeErrorTemplates({\n  AttributeIsEmpty: \"JSX attributes must only be assigned a non-empty expression.\",\n  MissingClosingTagElement: \"Expected corresponding JSX closing tag for <%0>.\",\n  MissingClosingTagFragment: \"Expected corresponding JSX closing tag for <>.\",\n  UnexpectedSequenceExpression: \"Sequence expressions cannot be directly nested inside JSX. Did you mean to wrap it in parentheses (...)?\",\n  UnsupportedJsxValue: \"JSX value should be either an expression or a quoted JSX text.\",\n  UnterminatedJsxContent: \"Unterminated JSX contents.\",\n  UnwrappedAdjacentJSXElements: \"Adjacent JSX elements must be wrapped in an enclosing tag. Did you want a JSX fragment <>...</>?\"\n}, ErrorCodes.SyntaxError);\ntypes.j_oTag = new TokContext(\"<tag\", false);\ntypes.j_cTag = new TokContext(\"</tag\", false);\ntypes.j_expr = new TokContext(\"<tag>...</tag>\", true, true);\ntypes$1.jsxName = new TokenType(\"jsxName\");\ntypes$1.jsxText = new TokenType(\"jsxText\", {\n  beforeExpr: true\n});\ntypes$1.jsxTagStart = new TokenType(\"jsxTagStart\", {\n  startsExpr: true\n});\ntypes$1.jsxTagEnd = new TokenType(\"jsxTagEnd\");\n\ntypes$1.jsxTagStart.updateContext = function () {\n  this.state.context.push(types.j_expr);\n  this.state.context.push(types.j_oTag);\n  this.state.exprAllowed = false;\n};\n\ntypes$1.jsxTagEnd.updateContext = function (prevType) {\n  const out = this.state.context.pop();\n\n  if (out === types.j_oTag && prevType === types$1.slash || out === types.j_cTag) {\n    this.state.context.pop();\n    this.state.exprAllowed = this.curContext() === types.j_expr;\n  } else {\n    this.state.exprAllowed = true;\n  }\n};\n\nfunction isFragment(object) {\n  return object ? object.type === \"JSXOpeningFragment\" || object.type === \"JSXClosingFragment\" : false;\n}\n\nfunction getQualifiedJSXName(object) {\n  if (object.type === \"JSXIdentifier\") {\n    return object.name;\n  }\n\n  if (object.type === \"JSXNamespacedName\") {\n    return object.namespace.name + \":\" + object.name.name;\n  }\n\n  if (object.type === \"JSXMemberExpression\") {\n    return getQualifiedJSXName(object.object) + \".\" + getQualifiedJSXName(object.property);\n  }\n\n  throw new Error(\"Node had unexpected type: \" + object.type);\n}\n\nvar jsx = (superClass => class extends superClass {\n  jsxReadToken() {\n    let out = \"\";\n    let chunkStart = this.state.pos;\n\n    for (;;) {\n      if (this.state.pos >= this.length) {\n        throw this.raise(this.state.start, JsxErrors.UnterminatedJsxContent);\n      }\n\n      const ch = this.input.charCodeAt(this.state.pos);\n\n      switch (ch) {\n        case 60:\n        case 123:\n          if (this.state.pos === this.state.start) {\n            if (ch === 60 && this.state.exprAllowed) {\n              ++this.state.pos;\n              return this.finishToken(types$1.jsxTagStart);\n            }\n\n            return super.getTokenFromCode(ch);\n          }\n\n          out += this.input.slice(chunkStart, this.state.pos);\n          return this.finishToken(types$1.jsxText, out);\n\n        case 38:\n          out += this.input.slice(chunkStart, this.state.pos);\n          out += this.jsxReadEntity();\n          chunkStart = this.state.pos;\n          break;\n\n        case 62:\n        case 125:\n\n        default:\n          if (isNewLine(ch)) {\n            out += this.input.slice(chunkStart, this.state.pos);\n            out += this.jsxReadNewLine(true);\n            chunkStart = this.state.pos;\n          } else {\n            ++this.state.pos;\n          }\n\n      }\n    }\n  }\n\n  jsxReadNewLine(normalizeCRLF) {\n    const ch = this.input.charCodeAt(this.state.pos);\n    let out;\n    ++this.state.pos;\n\n    if (ch === 13 && this.input.charCodeAt(this.state.pos) === 10) {\n      ++this.state.pos;\n      out = normalizeCRLF ? \"\\n\" : \"\\r\\n\";\n    } else {\n      out = String.fromCharCode(ch);\n    }\n\n    ++this.state.curLine;\n    this.state.lineStart = this.state.pos;\n    return out;\n  }\n\n  jsxReadString(quote) {\n    let out = \"\";\n    let chunkStart = ++this.state.pos;\n\n    for (;;) {\n      if (this.state.pos >= this.length) {\n        throw this.raise(this.state.start, ErrorMessages.UnterminatedString);\n      }\n\n      const ch = this.input.charCodeAt(this.state.pos);\n      if (ch === quote) break;\n\n      if (ch === 38) {\n        out += this.input.slice(chunkStart, this.state.pos);\n        out += this.jsxReadEntity();\n        chunkStart = this.state.pos;\n      } else if (isNewLine(ch)) {\n        out += this.input.slice(chunkStart, this.state.pos);\n        out += this.jsxReadNewLine(false);\n        chunkStart = this.state.pos;\n      } else {\n        ++this.state.pos;\n      }\n    }\n\n    out += this.input.slice(chunkStart, this.state.pos++);\n    return this.finishToken(types$1.string, out);\n  }\n\n  jsxReadEntity() {\n    let str = \"\";\n    let count = 0;\n    let entity;\n    let ch = this.input[this.state.pos];\n    const startPos = ++this.state.pos;\n\n    while (this.state.pos < this.length && count++ < 10) {\n      ch = this.input[this.state.pos++];\n\n      if (ch === \";\") {\n        if (str[0] === \"#\") {\n          if (str[1] === \"x\") {\n            str = str.substr(2);\n\n            if (HEX_NUMBER.test(str)) {\n              entity = String.fromCodePoint(parseInt(str, 16));\n            }\n          } else {\n            str = str.substr(1);\n\n            if (DECIMAL_NUMBER.test(str)) {\n              entity = String.fromCodePoint(parseInt(str, 10));\n            }\n          }\n        } else {\n          entity = entities[str];\n        }\n\n        break;\n      }\n\n      str += ch;\n    }\n\n    if (!entity) {\n      this.state.pos = startPos;\n      return \"&\";\n    }\n\n    return entity;\n  }\n\n  jsxReadWord() {\n    let ch;\n    const start = this.state.pos;\n\n    do {\n      ch = this.input.charCodeAt(++this.state.pos);\n    } while (isIdentifierChar(ch) || ch === 45);\n\n    return this.finishToken(types$1.jsxName, this.input.slice(start, this.state.pos));\n  }\n\n  jsxParseIdentifier() {\n    const node = this.startNode();\n\n    if (this.match(types$1.jsxName)) {\n      node.name = this.state.value;\n    } else if (this.state.type.keyword) {\n      node.name = this.state.type.keyword;\n    } else {\n      this.unexpected();\n    }\n\n    this.next();\n    return this.finishNode(node, \"JSXIdentifier\");\n  }\n\n  jsxParseNamespacedName() {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const name = this.jsxParseIdentifier();\n    if (!this.eat(types$1.colon)) return name;\n    const node = this.startNodeAt(startPos, startLoc);\n    node.namespace = name;\n    node.name = this.jsxParseIdentifier();\n    return this.finishNode(node, \"JSXNamespacedName\");\n  }\n\n  jsxParseElementName() {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    let node = this.jsxParseNamespacedName();\n\n    if (node.type === \"JSXNamespacedName\") {\n      return node;\n    }\n\n    while (this.eat(types$1.dot)) {\n      const newNode = this.startNodeAt(startPos, startLoc);\n      newNode.object = node;\n      newNode.property = this.jsxParseIdentifier();\n      node = this.finishNode(newNode, \"JSXMemberExpression\");\n    }\n\n    return node;\n  }\n\n  jsxParseAttributeValue() {\n    let node;\n\n    switch (this.state.type) {\n      case types$1.braceL:\n        node = this.startNode();\n        this.next();\n        node = this.jsxParseExpressionContainer(node);\n\n        if (node.expression.type === \"JSXEmptyExpression\") {\n          this.raise(node.start, JsxErrors.AttributeIsEmpty);\n        }\n\n        return node;\n\n      case types$1.jsxTagStart:\n      case types$1.string:\n        return this.parseExprAtom();\n\n      default:\n        throw this.raise(this.state.start, JsxErrors.UnsupportedJsxValue);\n    }\n  }\n\n  jsxParseEmptyExpression() {\n    const node = this.startNodeAt(this.state.lastTokEnd, this.state.lastTokEndLoc);\n    return this.finishNodeAt(node, \"JSXEmptyExpression\", this.state.start, this.state.startLoc);\n  }\n\n  jsxParseSpreadChild(node) {\n    this.next();\n    node.expression = this.parseExpression();\n    this.expect(types$1.braceR);\n    return this.finishNode(node, \"JSXSpreadChild\");\n  }\n\n  jsxParseExpressionContainer(node) {\n    if (this.match(types$1.braceR)) {\n      node.expression = this.jsxParseEmptyExpression();\n    } else {\n      const expression = this.parseExpression();\n      node.expression = expression;\n    }\n\n    this.expect(types$1.braceR);\n    return this.finishNode(node, \"JSXExpressionContainer\");\n  }\n\n  jsxParseAttribute() {\n    const node = this.startNode();\n\n    if (this.eat(types$1.braceL)) {\n      this.expect(types$1.ellipsis);\n      node.argument = this.parseMaybeAssignAllowIn();\n      this.expect(types$1.braceR);\n      return this.finishNode(node, \"JSXSpreadAttribute\");\n    }\n\n    node.name = this.jsxParseNamespacedName();\n    node.value = this.eat(types$1.eq) ? this.jsxParseAttributeValue() : null;\n    return this.finishNode(node, \"JSXAttribute\");\n  }\n\n  jsxParseOpeningElementAt(startPos, startLoc) {\n    const node = this.startNodeAt(startPos, startLoc);\n\n    if (this.match(types$1.jsxTagEnd)) {\n      this.expect(types$1.jsxTagEnd);\n      return this.finishNode(node, \"JSXOpeningFragment\");\n    }\n\n    node.name = this.jsxParseElementName();\n    return this.jsxParseOpeningElementAfterName(node);\n  }\n\n  jsxParseOpeningElementAfterName(node) {\n    const attributes = [];\n\n    while (!this.match(types$1.slash) && !this.match(types$1.jsxTagEnd)) {\n      attributes.push(this.jsxParseAttribute());\n    }\n\n    node.attributes = attributes;\n    node.selfClosing = this.eat(types$1.slash);\n    this.expect(types$1.jsxTagEnd);\n    return this.finishNode(node, \"JSXOpeningElement\");\n  }\n\n  jsxParseClosingElementAt(startPos, startLoc) {\n    const node = this.startNodeAt(startPos, startLoc);\n\n    if (this.match(types$1.jsxTagEnd)) {\n      this.expect(types$1.jsxTagEnd);\n      return this.finishNode(node, \"JSXClosingFragment\");\n    }\n\n    node.name = this.jsxParseElementName();\n    this.expect(types$1.jsxTagEnd);\n    return this.finishNode(node, \"JSXClosingElement\");\n  }\n\n  jsxParseElementAt(startPos, startLoc) {\n    const node = this.startNodeAt(startPos, startLoc);\n    const children = [];\n    const openingElement = this.jsxParseOpeningElementAt(startPos, startLoc);\n    let closingElement = null;\n\n    if (!openingElement.selfClosing) {\n      contents: for (;;) {\n        switch (this.state.type) {\n          case types$1.jsxTagStart:\n            startPos = this.state.start;\n            startLoc = this.state.startLoc;\n            this.next();\n\n            if (this.eat(types$1.slash)) {\n              closingElement = this.jsxParseClosingElementAt(startPos, startLoc);\n              break contents;\n            }\n\n            children.push(this.jsxParseElementAt(startPos, startLoc));\n            break;\n\n          case types$1.jsxText:\n            children.push(this.parseExprAtom());\n            break;\n\n          case types$1.braceL:\n            {\n              const node = this.startNode();\n              this.next();\n\n              if (this.match(types$1.ellipsis)) {\n                children.push(this.jsxParseSpreadChild(node));\n              } else {\n                children.push(this.jsxParseExpressionContainer(node));\n              }\n\n              break;\n            }\n\n          default:\n            throw this.unexpected();\n        }\n      }\n\n      if (isFragment(openingElement) && !isFragment(closingElement)) {\n        this.raise(closingElement.start, JsxErrors.MissingClosingTagFragment);\n      } else if (!isFragment(openingElement) && isFragment(closingElement)) {\n        this.raise(closingElement.start, JsxErrors.MissingClosingTagElement, getQualifiedJSXName(openingElement.name));\n      } else if (!isFragment(openingElement) && !isFragment(closingElement)) {\n        if (getQualifiedJSXName(closingElement.name) !== getQualifiedJSXName(openingElement.name)) {\n          this.raise(closingElement.start, JsxErrors.MissingClosingTagElement, getQualifiedJSXName(openingElement.name));\n        }\n      }\n    }\n\n    if (isFragment(openingElement)) {\n      node.openingFragment = openingElement;\n      node.closingFragment = closingElement;\n    } else {\n      node.openingElement = openingElement;\n      node.closingElement = closingElement;\n    }\n\n    node.children = children;\n\n    if (this.isRelational(\"<\")) {\n      throw this.raise(this.state.start, JsxErrors.UnwrappedAdjacentJSXElements);\n    }\n\n    return isFragment(openingElement) ? this.finishNode(node, \"JSXFragment\") : this.finishNode(node, \"JSXElement\");\n  }\n\n  jsxParseElement() {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    this.next();\n    return this.jsxParseElementAt(startPos, startLoc);\n  }\n\n  parseExprAtom(refExpressionErrors) {\n    if (this.match(types$1.jsxText)) {\n      return this.parseLiteral(this.state.value, \"JSXText\");\n    } else if (this.match(types$1.jsxTagStart)) {\n      return this.jsxParseElement();\n    } else if (this.isRelational(\"<\") && this.input.charCodeAt(this.state.pos) !== 33) {\n      this.finishToken(types$1.jsxTagStart);\n      return this.jsxParseElement();\n    } else {\n      return super.parseExprAtom(refExpressionErrors);\n    }\n  }\n\n  getTokenFromCode(code) {\n    if (this.state.inPropertyName) return super.getTokenFromCode(code);\n    const context = this.curContext();\n\n    if (context === types.j_expr) {\n      return this.jsxReadToken();\n    }\n\n    if (context === types.j_oTag || context === types.j_cTag) {\n      if (isIdentifierStart(code)) {\n        return this.jsxReadWord();\n      }\n\n      if (code === 62) {\n        ++this.state.pos;\n        return this.finishToken(types$1.jsxTagEnd);\n      }\n\n      if ((code === 34 || code === 39) && context === types.j_oTag) {\n        return this.jsxReadString(code);\n      }\n    }\n\n    if (code === 60 && this.state.exprAllowed && this.input.charCodeAt(this.state.pos + 1) !== 33) {\n      ++this.state.pos;\n      return this.finishToken(types$1.jsxTagStart);\n    }\n\n    return super.getTokenFromCode(code);\n  }\n\n  updateContext(prevType) {\n    if (this.match(types$1.braceL)) {\n      const curContext = this.curContext();\n\n      if (curContext === types.j_oTag) {\n        this.state.context.push(types.braceExpression);\n      } else if (curContext === types.j_expr) {\n        this.state.context.push(types.templateQuasi);\n      } else {\n        super.updateContext(prevType);\n      }\n\n      this.state.exprAllowed = true;\n    } else if (this.match(types$1.slash) && prevType === types$1.jsxTagStart) {\n      this.state.context.length -= 2;\n      this.state.context.push(types.j_cTag);\n      this.state.exprAllowed = false;\n    } else {\n      return super.updateContext(prevType);\n    }\n  }\n\n});\n\nclass TypeScriptScope extends Scope {\n  constructor(...args) {\n    super(...args);\n    this.types = [];\n    this.enums = [];\n    this.constEnums = [];\n    this.classes = [];\n    this.exportOnlyBindings = [];\n  }\n\n}\n\nclass TypeScriptScopeHandler extends ScopeHandler {\n  createScope(flags) {\n    return new TypeScriptScope(flags);\n  }\n\n  declareName(name, bindingType, pos) {\n    const scope = this.currentScope();\n\n    if (bindingType & BIND_FLAGS_TS_EXPORT_ONLY) {\n      this.maybeExportDefined(scope, name);\n      scope.exportOnlyBindings.push(name);\n      return;\n    }\n\n    super.declareName(...arguments);\n\n    if (bindingType & BIND_KIND_TYPE) {\n      if (!(bindingType & BIND_KIND_VALUE)) {\n        this.checkRedeclarationInScope(scope, name, bindingType, pos);\n        this.maybeExportDefined(scope, name);\n      }\n\n      scope.types.push(name);\n    }\n\n    if (bindingType & BIND_FLAGS_TS_ENUM) scope.enums.push(name);\n    if (bindingType & BIND_FLAGS_TS_CONST_ENUM) scope.constEnums.push(name);\n    if (bindingType & BIND_FLAGS_CLASS) scope.classes.push(name);\n  }\n\n  isRedeclaredInScope(scope, name, bindingType) {\n    if (scope.enums.indexOf(name) > -1) {\n      if (bindingType & BIND_FLAGS_TS_ENUM) {\n        const isConst = !!(bindingType & BIND_FLAGS_TS_CONST_ENUM);\n        const wasConst = scope.constEnums.indexOf(name) > -1;\n        return isConst !== wasConst;\n      }\n\n      return true;\n    }\n\n    if (bindingType & BIND_FLAGS_CLASS && scope.classes.indexOf(name) > -1) {\n      if (scope.lexical.indexOf(name) > -1) {\n        return !!(bindingType & BIND_KIND_VALUE);\n      } else {\n        return false;\n      }\n    }\n\n    if (bindingType & BIND_KIND_TYPE && scope.types.indexOf(name) > -1) {\n      return true;\n    }\n\n    return super.isRedeclaredInScope(...arguments);\n  }\n\n  checkLocalExport(id) {\n    if (this.scopeStack[0].types.indexOf(id.name) === -1 && this.scopeStack[0].exportOnlyBindings.indexOf(id.name) === -1) {\n      super.checkLocalExport(id);\n    }\n  }\n\n}\n\nconst PARAM = 0b0000,\n      PARAM_YIELD = 0b0001,\n      PARAM_AWAIT = 0b0010,\n      PARAM_RETURN = 0b0100,\n      PARAM_IN = 0b1000;\nclass ProductionParameterHandler {\n  constructor() {\n    this.stacks = [];\n  }\n\n  enter(flags) {\n    this.stacks.push(flags);\n  }\n\n  exit() {\n    this.stacks.pop();\n  }\n\n  currentFlags() {\n    return this.stacks[this.stacks.length - 1];\n  }\n\n  get hasAwait() {\n    return (this.currentFlags() & PARAM_AWAIT) > 0;\n  }\n\n  get hasYield() {\n    return (this.currentFlags() & PARAM_YIELD) > 0;\n  }\n\n  get hasReturn() {\n    return (this.currentFlags() & PARAM_RETURN) > 0;\n  }\n\n  get hasIn() {\n    return (this.currentFlags() & PARAM_IN) > 0;\n  }\n\n}\nfunction functionFlags(isAsync, isGenerator) {\n  return (isAsync ? PARAM_AWAIT : 0) | (isGenerator ? PARAM_YIELD : 0);\n}\n\nfunction nonNull(x) {\n  if (x == null) {\n    throw new Error(`Unexpected ${x} value.`);\n  }\n\n  return x;\n}\n\nfunction assert(x) {\n  if (!x) {\n    throw new Error(\"Assert fail\");\n  }\n}\n\nconst TSErrors = makeErrorTemplates({\n  AbstractMethodHasImplementation: \"Method '%0' cannot have an implementation because it is marked abstract.\",\n  AccesorCannotDeclareThisParameter: \"'get' and 'set' accessors cannot declare 'this' parameters.\",\n  AccesorCannotHaveTypeParameters: \"An accessor cannot have type parameters.\",\n  ClassMethodHasDeclare: \"Class methods cannot have the 'declare' modifier.\",\n  ClassMethodHasReadonly: \"Class methods cannot have the 'readonly' modifier.\",\n  ConstructorHasTypeParameters: \"Type parameters cannot appear on a constructor declaration.\",\n  DeclareAccessor: \"'declare' is not allowed in %0ters.\",\n  DeclareClassFieldHasInitializer: \"Initializers are not allowed in ambient contexts.\",\n  DeclareFunctionHasImplementation: \"An implementation cannot be declared in ambient contexts.\",\n  DuplicateAccessibilityModifier: \"Accessibility modifier already seen.\",\n  DuplicateModifier: \"Duplicate modifier: '%0'.\",\n  EmptyHeritageClauseType: \"'%0' list cannot be empty.\",\n  EmptyTypeArguments: \"Type argument list cannot be empty.\",\n  EmptyTypeParameters: \"Type parameter list cannot be empty.\",\n  ExpectedAmbientAfterExportDeclare: \"'export declare' must be followed by an ambient declaration.\",\n  ImportAliasHasImportType: \"An import alias can not use 'import type'.\",\n  IncompatibleModifiers: \"'%0' modifier cannot be used with '%1' modifier.\",\n  IndexSignatureHasAbstract: \"Index signatures cannot have the 'abstract' modifier.\",\n  IndexSignatureHasAccessibility: \"Index signatures cannot have an accessibility modifier ('%0').\",\n  IndexSignatureHasDeclare: \"Index signatures cannot have the 'declare' modifier.\",\n  IndexSignatureHasOverride: \"'override' modifier cannot appear on an index signature.\",\n  IndexSignatureHasStatic: \"Index signatures cannot have the 'static' modifier.\",\n  InvalidModifierOnTypeMember: \"'%0' modifier cannot appear on a type member.\",\n  InvalidModifiersOrder: \"'%0' modifier must precede '%1' modifier.\",\n  InvalidTupleMemberLabel: \"Tuple members must be labeled with a simple identifier.\",\n  MixedLabeledAndUnlabeledElements: \"Tuple members must all have names or all not have names.\",\n  NonAbstractClassHasAbstractMethod: \"Abstract methods can only appear within an abstract class.\",\n  NonClassMethodPropertyHasAbstractModifer: \"'abstract' modifier can only appear on a class, method, or property declaration.\",\n  OptionalTypeBeforeRequired: \"A required element cannot follow an optional element.\",\n  OverrideNotInSubClass: \"This member cannot have an 'override' modifier because its containing class does not extend another class.\",\n  PatternIsOptional: \"A binding pattern parameter cannot be optional in an implementation signature.\",\n  PrivateElementHasAbstract: \"Private elements cannot have the 'abstract' modifier.\",\n  PrivateElementHasAccessibility: \"Private elements cannot have an accessibility modifier ('%0').\",\n  ReadonlyForMethodSignature: \"'readonly' modifier can only appear on a property declaration or index signature.\",\n  SetAccesorCannotHaveOptionalParameter: \"A 'set' accessor cannot have an optional parameter.\",\n  SetAccesorCannotHaveRestParameter: \"A 'set' accessor cannot have rest parameter.\",\n  SetAccesorCannotHaveReturnType: \"A 'set' accessor cannot have a return type annotation.\",\n  StaticBlockCannotHaveModifier: \"Static class blocks cannot have any modifier.\",\n  TypeAnnotationAfterAssign: \"Type annotations must come before default assignments, e.g. instead of `age = 25: number` use `age: number = 25`.\",\n  TypeImportCannotSpecifyDefaultAndNamed: \"A type-only import can specify a default import or named bindings, but not both.\",\n  UnexpectedParameterModifier: \"A parameter property is only allowed in a constructor implementation.\",\n  UnexpectedReadonly: \"'readonly' type modifier is only permitted on array and tuple literal types.\",\n  UnexpectedTypeAnnotation: \"Did not expect a type annotation here.\",\n  UnexpectedTypeCastInParameter: \"Unexpected type cast in parameter position.\",\n  UnsupportedImportTypeArgument: \"Argument in a type import must be a string literal.\",\n  UnsupportedParameterPropertyKind: \"A parameter property may not be declared using a binding pattern.\",\n  UnsupportedSignatureParameterKind: \"Name in a signature must be an Identifier, ObjectPattern or ArrayPattern, instead got %0.\"\n}, ErrorCodes.SyntaxError);\n\nfunction keywordTypeFromName(value) {\n  switch (value) {\n    case \"any\":\n      return \"TSAnyKeyword\";\n\n    case \"boolean\":\n      return \"TSBooleanKeyword\";\n\n    case \"bigint\":\n      return \"TSBigIntKeyword\";\n\n    case \"never\":\n      return \"TSNeverKeyword\";\n\n    case \"number\":\n      return \"TSNumberKeyword\";\n\n    case \"object\":\n      return \"TSObjectKeyword\";\n\n    case \"string\":\n      return \"TSStringKeyword\";\n\n    case \"symbol\":\n      return \"TSSymbolKeyword\";\n\n    case \"undefined\":\n      return \"TSUndefinedKeyword\";\n\n    case \"unknown\":\n      return \"TSUnknownKeyword\";\n\n    default:\n      return undefined;\n  }\n}\n\nfunction tsIsAccessModifier(modifier) {\n  return modifier === \"private\" || modifier === \"public\" || modifier === \"protected\";\n}\n\nvar typescript = (superClass => class extends superClass {\n  getScopeHandler() {\n    return TypeScriptScopeHandler;\n  }\n\n  tsIsIdentifier() {\n    return this.match(types$1.name);\n  }\n\n  tsTokenCanFollowModifier() {\n    return (this.match(types$1.bracketL) || this.match(types$1.braceL) || this.match(types$1.star) || this.match(types$1.ellipsis) || this.match(types$1.privateName) || this.isLiteralPropertyName()) && !this.hasPrecedingLineBreak();\n  }\n\n  tsNextTokenCanFollowModifier() {\n    this.next();\n    return this.tsTokenCanFollowModifier();\n  }\n\n  tsParseModifier(allowedModifiers) {\n    if (!this.match(types$1.name)) {\n      return undefined;\n    }\n\n    const modifier = this.state.value;\n\n    if (allowedModifiers.indexOf(modifier) !== -1 && this.tsTryParse(this.tsNextTokenCanFollowModifier.bind(this))) {\n      return modifier;\n    }\n\n    return undefined;\n  }\n\n  tsParseModifiers(modified, allowedModifiers, disallowedModifiers, errorTemplate) {\n    const enforceOrder = (pos, modifier, before, after) => {\n      if (modifier === before && modified[after]) {\n        this.raise(pos, TSErrors.InvalidModifiersOrder, before, after);\n      }\n    };\n\n    const incompatible = (pos, modifier, mod1, mod2) => {\n      if (modified[mod1] && modifier === mod2 || modified[mod2] && modifier === mod1) {\n        this.raise(pos, TSErrors.IncompatibleModifiers, mod1, mod2);\n      }\n    };\n\n    for (;;) {\n      const startPos = this.state.start;\n      const modifier = this.tsParseModifier(allowedModifiers.concat(disallowedModifiers != null ? disallowedModifiers : []));\n      if (!modifier) break;\n\n      if (tsIsAccessModifier(modifier)) {\n        if (modified.accessibility) {\n          this.raise(startPos, TSErrors.DuplicateAccessibilityModifier);\n        } else {\n          enforceOrder(startPos, modifier, modifier, \"override\");\n          enforceOrder(startPos, modifier, modifier, \"static\");\n          modified.accessibility = modifier;\n        }\n      } else {\n        if (Object.hasOwnProperty.call(modified, modifier)) {\n          this.raise(startPos, TSErrors.DuplicateModifier, modifier);\n        } else {\n          enforceOrder(startPos, modifier, \"static\", \"readonly\");\n          enforceOrder(startPos, modifier, \"static\", \"override\");\n          enforceOrder(startPos, modifier, \"override\", \"readonly\");\n          enforceOrder(startPos, modifier, \"abstract\", \"override\");\n          incompatible(startPos, modifier, \"declare\", \"override\");\n          incompatible(startPos, modifier, \"static\", \"abstract\");\n        }\n\n        modified[modifier] = true;\n      }\n\n      if (disallowedModifiers != null && disallowedModifiers.includes(modifier)) {\n        this.raise(startPos, errorTemplate, modifier);\n      }\n    }\n  }\n\n  tsIsListTerminator(kind) {\n    switch (kind) {\n      case \"EnumMembers\":\n      case \"TypeMembers\":\n        return this.match(types$1.braceR);\n\n      case \"HeritageClauseElement\":\n        return this.match(types$1.braceL);\n\n      case \"TupleElementTypes\":\n        return this.match(types$1.bracketR);\n\n      case \"TypeParametersOrArguments\":\n        return this.isRelational(\">\");\n    }\n\n    throw new Error(\"Unreachable\");\n  }\n\n  tsParseList(kind, parseElement) {\n    const result = [];\n\n    while (!this.tsIsListTerminator(kind)) {\n      result.push(parseElement());\n    }\n\n    return result;\n  }\n\n  tsParseDelimitedList(kind, parseElement) {\n    return nonNull(this.tsParseDelimitedListWorker(kind, parseElement, true));\n  }\n\n  tsParseDelimitedListWorker(kind, parseElement, expectSuccess) {\n    const result = [];\n\n    for (;;) {\n      if (this.tsIsListTerminator(kind)) {\n        break;\n      }\n\n      const element = parseElement();\n\n      if (element == null) {\n        return undefined;\n      }\n\n      result.push(element);\n\n      if (this.eat(types$1.comma)) {\n        continue;\n      }\n\n      if (this.tsIsListTerminator(kind)) {\n        break;\n      }\n\n      if (expectSuccess) {\n        this.expect(types$1.comma);\n      }\n\n      return undefined;\n    }\n\n    return result;\n  }\n\n  tsParseBracketedList(kind, parseElement, bracket, skipFirstToken) {\n    if (!skipFirstToken) {\n      if (bracket) {\n        this.expect(types$1.bracketL);\n      } else {\n        this.expectRelational(\"<\");\n      }\n    }\n\n    const result = this.tsParseDelimitedList(kind, parseElement);\n\n    if (bracket) {\n      this.expect(types$1.bracketR);\n    } else {\n      this.expectRelational(\">\");\n    }\n\n    return result;\n  }\n\n  tsParseImportType() {\n    const node = this.startNode();\n    this.expect(types$1._import);\n    this.expect(types$1.parenL);\n\n    if (!this.match(types$1.string)) {\n      this.raise(this.state.start, TSErrors.UnsupportedImportTypeArgument);\n    }\n\n    node.argument = this.parseExprAtom();\n    this.expect(types$1.parenR);\n\n    if (this.eat(types$1.dot)) {\n      node.qualifier = this.tsParseEntityName(true);\n    }\n\n    if (this.isRelational(\"<\")) {\n      node.typeParameters = this.tsParseTypeArguments();\n    }\n\n    return this.finishNode(node, \"TSImportType\");\n  }\n\n  tsParseEntityName(allowReservedWords) {\n    let entity = this.parseIdentifier();\n\n    while (this.eat(types$1.dot)) {\n      const node = this.startNodeAtNode(entity);\n      node.left = entity;\n      node.right = this.parseIdentifier(allowReservedWords);\n      entity = this.finishNode(node, \"TSQualifiedName\");\n    }\n\n    return entity;\n  }\n\n  tsParseTypeReference() {\n    const node = this.startNode();\n    node.typeName = this.tsParseEntityName(false);\n\n    if (!this.hasPrecedingLineBreak() && this.isRelational(\"<\")) {\n      node.typeParameters = this.tsParseTypeArguments();\n    }\n\n    return this.finishNode(node, \"TSTypeReference\");\n  }\n\n  tsParseThisTypePredicate(lhs) {\n    this.next();\n    const node = this.startNodeAtNode(lhs);\n    node.parameterName = lhs;\n    node.typeAnnotation = this.tsParseTypeAnnotation(false);\n    node.asserts = false;\n    return this.finishNode(node, \"TSTypePredicate\");\n  }\n\n  tsParseThisTypeNode() {\n    const node = this.startNode();\n    this.next();\n    return this.finishNode(node, \"TSThisType\");\n  }\n\n  tsParseTypeQuery() {\n    const node = this.startNode();\n    this.expect(types$1._typeof);\n\n    if (this.match(types$1._import)) {\n      node.exprName = this.tsParseImportType();\n    } else {\n      node.exprName = this.tsParseEntityName(true);\n    }\n\n    return this.finishNode(node, \"TSTypeQuery\");\n  }\n\n  tsParseTypeParameter() {\n    const node = this.startNode();\n    node.name = this.parseIdentifierName(node.start);\n    node.constraint = this.tsEatThenParseType(types$1._extends);\n    node.default = this.tsEatThenParseType(types$1.eq);\n    return this.finishNode(node, \"TSTypeParameter\");\n  }\n\n  tsTryParseTypeParameters() {\n    if (this.isRelational(\"<\")) {\n      return this.tsParseTypeParameters();\n    }\n  }\n\n  tsParseTypeParameters() {\n    const node = this.startNode();\n\n    if (this.isRelational(\"<\") || this.match(types$1.jsxTagStart)) {\n      this.next();\n    } else {\n      this.unexpected();\n    }\n\n    node.params = this.tsParseBracketedList(\"TypeParametersOrArguments\", this.tsParseTypeParameter.bind(this), false, true);\n\n    if (node.params.length === 0) {\n      this.raise(node.start, TSErrors.EmptyTypeParameters);\n    }\n\n    return this.finishNode(node, \"TSTypeParameterDeclaration\");\n  }\n\n  tsTryNextParseConstantContext() {\n    if (this.lookahead().type === types$1._const) {\n      this.next();\n      return this.tsParseTypeReference();\n    }\n\n    return null;\n  }\n\n  tsFillSignature(returnToken, signature) {\n    const returnTokenRequired = returnToken === types$1.arrow;\n    signature.typeParameters = this.tsTryParseTypeParameters();\n    this.expect(types$1.parenL);\n    signature.parameters = this.tsParseBindingListForSignature();\n\n    if (returnTokenRequired) {\n      signature.typeAnnotation = this.tsParseTypeOrTypePredicateAnnotation(returnToken);\n    } else if (this.match(returnToken)) {\n      signature.typeAnnotation = this.tsParseTypeOrTypePredicateAnnotation(returnToken);\n    }\n  }\n\n  tsParseBindingListForSignature() {\n    return this.parseBindingList(types$1.parenR, 41).map(pattern => {\n      if (pattern.type !== \"Identifier\" && pattern.type !== \"RestElement\" && pattern.type !== \"ObjectPattern\" && pattern.type !== \"ArrayPattern\") {\n        this.raise(pattern.start, TSErrors.UnsupportedSignatureParameterKind, pattern.type);\n      }\n\n      return pattern;\n    });\n  }\n\n  tsParseTypeMemberSemicolon() {\n    if (!this.eat(types$1.comma) && !this.isLineTerminator()) {\n      this.expect(types$1.semi);\n    }\n  }\n\n  tsParseSignatureMember(kind, node) {\n    this.tsFillSignature(types$1.colon, node);\n    this.tsParseTypeMemberSemicolon();\n    return this.finishNode(node, kind);\n  }\n\n  tsIsUnambiguouslyIndexSignature() {\n    this.next();\n    return this.eat(types$1.name) && this.match(types$1.colon);\n  }\n\n  tsTryParseIndexSignature(node) {\n    if (!(this.match(types$1.bracketL) && this.tsLookAhead(this.tsIsUnambiguouslyIndexSignature.bind(this)))) {\n      return undefined;\n    }\n\n    this.expect(types$1.bracketL);\n    const id = this.parseIdentifier();\n    id.typeAnnotation = this.tsParseTypeAnnotation();\n    this.resetEndLocation(id);\n    this.expect(types$1.bracketR);\n    node.parameters = [id];\n    const type = this.tsTryParseTypeAnnotation();\n    if (type) node.typeAnnotation = type;\n    this.tsParseTypeMemberSemicolon();\n    return this.finishNode(node, \"TSIndexSignature\");\n  }\n\n  tsParsePropertyOrMethodSignature(node, readonly) {\n    if (this.eat(types$1.question)) node.optional = true;\n    const nodeAny = node;\n\n    if (this.match(types$1.parenL) || this.isRelational(\"<\")) {\n      if (readonly) {\n        this.raise(node.start, TSErrors.ReadonlyForMethodSignature);\n      }\n\n      const method = nodeAny;\n\n      if (method.kind && this.isRelational(\"<\")) {\n        this.raise(this.state.pos, TSErrors.AccesorCannotHaveTypeParameters);\n      }\n\n      this.tsFillSignature(types$1.colon, method);\n      this.tsParseTypeMemberSemicolon();\n\n      if (method.kind === \"get\") {\n        if (method.parameters.length > 0) {\n          this.raise(this.state.pos, ErrorMessages.BadGetterArity);\n\n          if (this.isThisParam(method.parameters[0])) {\n            this.raise(this.state.pos, TSErrors.AccesorCannotDeclareThisParameter);\n          }\n        }\n      } else if (method.kind === \"set\") {\n        if (method.parameters.length !== 1) {\n          this.raise(this.state.pos, ErrorMessages.BadSetterArity);\n        } else {\n          const firstParameter = method.parameters[0];\n\n          if (this.isThisParam(firstParameter)) {\n            this.raise(this.state.pos, TSErrors.AccesorCannotDeclareThisParameter);\n          }\n\n          if (firstParameter.type === \"Identifier\" && firstParameter.optional) {\n            this.raise(this.state.pos, TSErrors.SetAccesorCannotHaveOptionalParameter);\n          }\n\n          if (firstParameter.type === \"RestElement\") {\n            this.raise(this.state.pos, TSErrors.SetAccesorCannotHaveRestParameter);\n          }\n        }\n\n        if (method.typeAnnotation) {\n          this.raise(method.typeAnnotation.start, TSErrors.SetAccesorCannotHaveReturnType);\n        }\n      } else {\n        method.kind = \"method\";\n      }\n\n      return this.finishNode(method, \"TSMethodSignature\");\n    } else {\n      const property = nodeAny;\n      if (readonly) property.readonly = true;\n      const type = this.tsTryParseTypeAnnotation();\n      if (type) property.typeAnnotation = type;\n      this.tsParseTypeMemberSemicolon();\n      return this.finishNode(property, \"TSPropertySignature\");\n    }\n  }\n\n  tsParseTypeMember() {\n    const node = this.startNode();\n\n    if (this.match(types$1.parenL) || this.isRelational(\"<\")) {\n      return this.tsParseSignatureMember(\"TSCallSignatureDeclaration\", node);\n    }\n\n    if (this.match(types$1._new)) {\n      const id = this.startNode();\n      this.next();\n\n      if (this.match(types$1.parenL) || this.isRelational(\"<\")) {\n        return this.tsParseSignatureMember(\"TSConstructSignatureDeclaration\", node);\n      } else {\n        node.key = this.createIdentifier(id, \"new\");\n        return this.tsParsePropertyOrMethodSignature(node, false);\n      }\n    }\n\n    this.tsParseModifiers(node, [\"readonly\"], [\"declare\", \"abstract\", \"private\", \"protected\", \"public\", \"static\", \"override\"], TSErrors.InvalidModifierOnTypeMember);\n    const idx = this.tsTryParseIndexSignature(node);\n\n    if (idx) {\n      return idx;\n    }\n\n    this.parsePropertyName(node, false);\n\n    if (!node.computed && node.key.type === \"Identifier\" && (node.key.name === \"get\" || node.key.name === \"set\") && this.tsTokenCanFollowModifier()) {\n      node.kind = node.key.name;\n      this.parsePropertyName(node, false);\n    }\n\n    return this.tsParsePropertyOrMethodSignature(node, !!node.readonly);\n  }\n\n  tsParseTypeLiteral() {\n    const node = this.startNode();\n    node.members = this.tsParseObjectTypeMembers();\n    return this.finishNode(node, \"TSTypeLiteral\");\n  }\n\n  tsParseObjectTypeMembers() {\n    this.expect(types$1.braceL);\n    const members = this.tsParseList(\"TypeMembers\", this.tsParseTypeMember.bind(this));\n    this.expect(types$1.braceR);\n    return members;\n  }\n\n  tsIsStartOfMappedType() {\n    this.next();\n\n    if (this.eat(types$1.plusMin)) {\n      return this.isContextual(\"readonly\");\n    }\n\n    if (this.isContextual(\"readonly\")) {\n      this.next();\n    }\n\n    if (!this.match(types$1.bracketL)) {\n      return false;\n    }\n\n    this.next();\n\n    if (!this.tsIsIdentifier()) {\n      return false;\n    }\n\n    this.next();\n    return this.match(types$1._in);\n  }\n\n  tsParseMappedTypeParameter() {\n    const node = this.startNode();\n    node.name = this.parseIdentifierName(node.start);\n    node.constraint = this.tsExpectThenParseType(types$1._in);\n    return this.finishNode(node, \"TSTypeParameter\");\n  }\n\n  tsParseMappedType() {\n    const node = this.startNode();\n    this.expect(types$1.braceL);\n\n    if (this.match(types$1.plusMin)) {\n      node.readonly = this.state.value;\n      this.next();\n      this.expectContextual(\"readonly\");\n    } else if (this.eatContextual(\"readonly\")) {\n      node.readonly = true;\n    }\n\n    this.expect(types$1.bracketL);\n    node.typeParameter = this.tsParseMappedTypeParameter();\n    node.nameType = this.eatContextual(\"as\") ? this.tsParseType() : null;\n    this.expect(types$1.bracketR);\n\n    if (this.match(types$1.plusMin)) {\n      node.optional = this.state.value;\n      this.next();\n      this.expect(types$1.question);\n    } else if (this.eat(types$1.question)) {\n      node.optional = true;\n    }\n\n    node.typeAnnotation = this.tsTryParseType();\n    this.semicolon();\n    this.expect(types$1.braceR);\n    return this.finishNode(node, \"TSMappedType\");\n  }\n\n  tsParseTupleType() {\n    const node = this.startNode();\n    node.elementTypes = this.tsParseBracketedList(\"TupleElementTypes\", this.tsParseTupleElementType.bind(this), true, false);\n    let seenOptionalElement = false;\n    let labeledElements = null;\n    node.elementTypes.forEach(elementNode => {\n      var _labeledElements;\n\n      let {\n        type\n      } = elementNode;\n\n      if (seenOptionalElement && type !== \"TSRestType\" && type !== \"TSOptionalType\" && !(type === \"TSNamedTupleMember\" && elementNode.optional)) {\n        this.raise(elementNode.start, TSErrors.OptionalTypeBeforeRequired);\n      }\n\n      seenOptionalElement = seenOptionalElement || type === \"TSNamedTupleMember\" && elementNode.optional || type === \"TSOptionalType\";\n\n      if (type === \"TSRestType\") {\n        elementNode = elementNode.typeAnnotation;\n        type = elementNode.type;\n      }\n\n      const isLabeled = type === \"TSNamedTupleMember\";\n      labeledElements = (_labeledElements = labeledElements) != null ? _labeledElements : isLabeled;\n\n      if (labeledElements !== isLabeled) {\n        this.raise(elementNode.start, TSErrors.MixedLabeledAndUnlabeledElements);\n      }\n    });\n    return this.finishNode(node, \"TSTupleType\");\n  }\n\n  tsParseTupleElementType() {\n    const {\n      start: startPos,\n      startLoc\n    } = this.state;\n    const rest = this.eat(types$1.ellipsis);\n    let type = this.tsParseType();\n    const optional = this.eat(types$1.question);\n    const labeled = this.eat(types$1.colon);\n\n    if (labeled) {\n      const labeledNode = this.startNodeAtNode(type);\n      labeledNode.optional = optional;\n\n      if (type.type === \"TSTypeReference\" && !type.typeParameters && type.typeName.type === \"Identifier\") {\n        labeledNode.label = type.typeName;\n      } else {\n        this.raise(type.start, TSErrors.InvalidTupleMemberLabel);\n        labeledNode.label = type;\n      }\n\n      labeledNode.elementType = this.tsParseType();\n      type = this.finishNode(labeledNode, \"TSNamedTupleMember\");\n    } else if (optional) {\n      const optionalTypeNode = this.startNodeAtNode(type);\n      optionalTypeNode.typeAnnotation = type;\n      type = this.finishNode(optionalTypeNode, \"TSOptionalType\");\n    }\n\n    if (rest) {\n      const restNode = this.startNodeAt(startPos, startLoc);\n      restNode.typeAnnotation = type;\n      type = this.finishNode(restNode, \"TSRestType\");\n    }\n\n    return type;\n  }\n\n  tsParseParenthesizedType() {\n    const node = this.startNode();\n    this.expect(types$1.parenL);\n    node.typeAnnotation = this.tsParseType();\n    this.expect(types$1.parenR);\n    return this.finishNode(node, \"TSParenthesizedType\");\n  }\n\n  tsParseFunctionOrConstructorType(type, abstract) {\n    const node = this.startNode();\n\n    if (type === \"TSConstructorType\") {\n      node.abstract = !!abstract;\n      if (abstract) this.next();\n      this.next();\n    }\n\n    this.tsFillSignature(types$1.arrow, node);\n    return this.finishNode(node, type);\n  }\n\n  tsParseLiteralTypeNode() {\n    const node = this.startNode();\n\n    node.literal = (() => {\n      switch (this.state.type) {\n        case types$1.num:\n        case types$1.bigint:\n        case types$1.string:\n        case types$1._true:\n        case types$1._false:\n          return this.parseExprAtom();\n\n        default:\n          throw this.unexpected();\n      }\n    })();\n\n    return this.finishNode(node, \"TSLiteralType\");\n  }\n\n  tsParseTemplateLiteralType() {\n    const node = this.startNode();\n    node.literal = this.parseTemplate(false);\n    return this.finishNode(node, \"TSLiteralType\");\n  }\n\n  parseTemplateSubstitution() {\n    if (this.state.inType) return this.tsParseType();\n    return super.parseTemplateSubstitution();\n  }\n\n  tsParseThisTypeOrThisTypePredicate() {\n    const thisKeyword = this.tsParseThisTypeNode();\n\n    if (this.isContextual(\"is\") && !this.hasPrecedingLineBreak()) {\n      return this.tsParseThisTypePredicate(thisKeyword);\n    } else {\n      return thisKeyword;\n    }\n  }\n\n  tsParseNonArrayType() {\n    switch (this.state.type) {\n      case types$1.name:\n      case types$1._void:\n      case types$1._null:\n        {\n          const type = this.match(types$1._void) ? \"TSVoidKeyword\" : this.match(types$1._null) ? \"TSNullKeyword\" : keywordTypeFromName(this.state.value);\n\n          if (type !== undefined && this.lookaheadCharCode() !== 46) {\n            const node = this.startNode();\n            this.next();\n            return this.finishNode(node, type);\n          }\n\n          return this.tsParseTypeReference();\n        }\n\n      case types$1.string:\n      case types$1.num:\n      case types$1.bigint:\n      case types$1._true:\n      case types$1._false:\n        return this.tsParseLiteralTypeNode();\n\n      case types$1.plusMin:\n        if (this.state.value === \"-\") {\n          const node = this.startNode();\n          const nextToken = this.lookahead();\n\n          if (nextToken.type !== types$1.num && nextToken.type !== types$1.bigint) {\n            throw this.unexpected();\n          }\n\n          node.literal = this.parseMaybeUnary();\n          return this.finishNode(node, \"TSLiteralType\");\n        }\n\n        break;\n\n      case types$1._this:\n        return this.tsParseThisTypeOrThisTypePredicate();\n\n      case types$1._typeof:\n        return this.tsParseTypeQuery();\n\n      case types$1._import:\n        return this.tsParseImportType();\n\n      case types$1.braceL:\n        return this.tsLookAhead(this.tsIsStartOfMappedType.bind(this)) ? this.tsParseMappedType() : this.tsParseTypeLiteral();\n\n      case types$1.bracketL:\n        return this.tsParseTupleType();\n\n      case types$1.parenL:\n        return this.tsParseParenthesizedType();\n\n      case types$1.backQuote:\n        return this.tsParseTemplateLiteralType();\n    }\n\n    throw this.unexpected();\n  }\n\n  tsParseArrayTypeOrHigher() {\n    let type = this.tsParseNonArrayType();\n\n    while (!this.hasPrecedingLineBreak() && this.eat(types$1.bracketL)) {\n      if (this.match(types$1.bracketR)) {\n        const node = this.startNodeAtNode(type);\n        node.elementType = type;\n        this.expect(types$1.bracketR);\n        type = this.finishNode(node, \"TSArrayType\");\n      } else {\n        const node = this.startNodeAtNode(type);\n        node.objectType = type;\n        node.indexType = this.tsParseType();\n        this.expect(types$1.bracketR);\n        type = this.finishNode(node, \"TSIndexedAccessType\");\n      }\n    }\n\n    return type;\n  }\n\n  tsParseTypeOperator(operator) {\n    const node = this.startNode();\n    this.expectContextual(operator);\n    node.operator = operator;\n    node.typeAnnotation = this.tsParseTypeOperatorOrHigher();\n\n    if (operator === \"readonly\") {\n      this.tsCheckTypeAnnotationForReadOnly(node);\n    }\n\n    return this.finishNode(node, \"TSTypeOperator\");\n  }\n\n  tsCheckTypeAnnotationForReadOnly(node) {\n    switch (node.typeAnnotation.type) {\n      case \"TSTupleType\":\n      case \"TSArrayType\":\n        return;\n\n      default:\n        this.raise(node.start, TSErrors.UnexpectedReadonly);\n    }\n  }\n\n  tsParseInferType() {\n    const node = this.startNode();\n    this.expectContextual(\"infer\");\n    const typeParameter = this.startNode();\n    typeParameter.name = this.parseIdentifierName(typeParameter.start);\n    node.typeParameter = this.finishNode(typeParameter, \"TSTypeParameter\");\n    return this.finishNode(node, \"TSInferType\");\n  }\n\n  tsParseTypeOperatorOrHigher() {\n    const operator = [\"keyof\", \"unique\", \"readonly\"].find(kw => this.isContextual(kw));\n    return operator ? this.tsParseTypeOperator(operator) : this.isContextual(\"infer\") ? this.tsParseInferType() : this.tsParseArrayTypeOrHigher();\n  }\n\n  tsParseUnionOrIntersectionType(kind, parseConstituentType, operator) {\n    const node = this.startNode();\n    const hasLeadingOperator = this.eat(operator);\n    const types = [];\n\n    do {\n      types.push(parseConstituentType());\n    } while (this.eat(operator));\n\n    if (types.length === 1 && !hasLeadingOperator) {\n      return types[0];\n    }\n\n    node.types = types;\n    return this.finishNode(node, kind);\n  }\n\n  tsParseIntersectionTypeOrHigher() {\n    return this.tsParseUnionOrIntersectionType(\"TSIntersectionType\", this.tsParseTypeOperatorOrHigher.bind(this), types$1.bitwiseAND);\n  }\n\n  tsParseUnionTypeOrHigher() {\n    return this.tsParseUnionOrIntersectionType(\"TSUnionType\", this.tsParseIntersectionTypeOrHigher.bind(this), types$1.bitwiseOR);\n  }\n\n  tsIsStartOfFunctionType() {\n    if (this.isRelational(\"<\")) {\n      return true;\n    }\n\n    return this.match(types$1.parenL) && this.tsLookAhead(this.tsIsUnambiguouslyStartOfFunctionType.bind(this));\n  }\n\n  tsSkipParameterStart() {\n    if (this.match(types$1.name) || this.match(types$1._this)) {\n      this.next();\n      return true;\n    }\n\n    if (this.match(types$1.braceL)) {\n      let braceStackCounter = 1;\n      this.next();\n\n      while (braceStackCounter > 0) {\n        if (this.match(types$1.braceL)) {\n          ++braceStackCounter;\n        } else if (this.match(types$1.braceR)) {\n          --braceStackCounter;\n        }\n\n        this.next();\n      }\n\n      return true;\n    }\n\n    if (this.match(types$1.bracketL)) {\n      let braceStackCounter = 1;\n      this.next();\n\n      while (braceStackCounter > 0) {\n        if (this.match(types$1.bracketL)) {\n          ++braceStackCounter;\n        } else if (this.match(types$1.bracketR)) {\n          --braceStackCounter;\n        }\n\n        this.next();\n      }\n\n      return true;\n    }\n\n    return false;\n  }\n\n  tsIsUnambiguouslyStartOfFunctionType() {\n    this.next();\n\n    if (this.match(types$1.parenR) || this.match(types$1.ellipsis)) {\n      return true;\n    }\n\n    if (this.tsSkipParameterStart()) {\n      if (this.match(types$1.colon) || this.match(types$1.comma) || this.match(types$1.question) || this.match(types$1.eq)) {\n        return true;\n      }\n\n      if (this.match(types$1.parenR)) {\n        this.next();\n\n        if (this.match(types$1.arrow)) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  }\n\n  tsParseTypeOrTypePredicateAnnotation(returnToken) {\n    return this.tsInType(() => {\n      const t = this.startNode();\n      this.expect(returnToken);\n      const node = this.startNode();\n      const asserts = !!this.tsTryParse(this.tsParseTypePredicateAsserts.bind(this));\n\n      if (asserts && this.match(types$1._this)) {\n        let thisTypePredicate = this.tsParseThisTypeOrThisTypePredicate();\n\n        if (thisTypePredicate.type === \"TSThisType\") {\n          node.parameterName = thisTypePredicate;\n          node.asserts = true;\n          thisTypePredicate = this.finishNode(node, \"TSTypePredicate\");\n        } else {\n          this.resetStartLocationFromNode(thisTypePredicate, node);\n          thisTypePredicate.asserts = true;\n        }\n\n        t.typeAnnotation = thisTypePredicate;\n        return this.finishNode(t, \"TSTypeAnnotation\");\n      }\n\n      const typePredicateVariable = this.tsIsIdentifier() && this.tsTryParse(this.tsParseTypePredicatePrefix.bind(this));\n\n      if (!typePredicateVariable) {\n        if (!asserts) {\n          return this.tsParseTypeAnnotation(false, t);\n        }\n\n        node.parameterName = this.parseIdentifier();\n        node.asserts = asserts;\n        t.typeAnnotation = this.finishNode(node, \"TSTypePredicate\");\n        return this.finishNode(t, \"TSTypeAnnotation\");\n      }\n\n      const type = this.tsParseTypeAnnotation(false);\n      node.parameterName = typePredicateVariable;\n      node.typeAnnotation = type;\n      node.asserts = asserts;\n      t.typeAnnotation = this.finishNode(node, \"TSTypePredicate\");\n      return this.finishNode(t, \"TSTypeAnnotation\");\n    });\n  }\n\n  tsTryParseTypeOrTypePredicateAnnotation() {\n    return this.match(types$1.colon) ? this.tsParseTypeOrTypePredicateAnnotation(types$1.colon) : undefined;\n  }\n\n  tsTryParseTypeAnnotation() {\n    return this.match(types$1.colon) ? this.tsParseTypeAnnotation() : undefined;\n  }\n\n  tsTryParseType() {\n    return this.tsEatThenParseType(types$1.colon);\n  }\n\n  tsParseTypePredicatePrefix() {\n    const id = this.parseIdentifier();\n\n    if (this.isContextual(\"is\") && !this.hasPrecedingLineBreak()) {\n      this.next();\n      return id;\n    }\n  }\n\n  tsParseTypePredicateAsserts() {\n    if (!this.match(types$1.name) || this.state.value !== \"asserts\" || this.hasPrecedingLineBreak()) {\n      return false;\n    }\n\n    const containsEsc = this.state.containsEsc;\n    this.next();\n\n    if (!this.match(types$1.name) && !this.match(types$1._this)) {\n      return false;\n    }\n\n    if (containsEsc) {\n      this.raise(this.state.lastTokStart, ErrorMessages.InvalidEscapedReservedWord, \"asserts\");\n    }\n\n    return true;\n  }\n\n  tsParseTypeAnnotation(eatColon = true, t = this.startNode()) {\n    this.tsInType(() => {\n      if (eatColon) this.expect(types$1.colon);\n      t.typeAnnotation = this.tsParseType();\n    });\n    return this.finishNode(t, \"TSTypeAnnotation\");\n  }\n\n  tsParseType() {\n    assert(this.state.inType);\n    const type = this.tsParseNonConditionalType();\n\n    if (this.hasPrecedingLineBreak() || !this.eat(types$1._extends)) {\n      return type;\n    }\n\n    const node = this.startNodeAtNode(type);\n    node.checkType = type;\n    node.extendsType = this.tsParseNonConditionalType();\n    this.expect(types$1.question);\n    node.trueType = this.tsParseType();\n    this.expect(types$1.colon);\n    node.falseType = this.tsParseType();\n    return this.finishNode(node, \"TSConditionalType\");\n  }\n\n  isAbstractConstructorSignature() {\n    return this.isContextual(\"abstract\") && this.lookahead().type === types$1._new;\n  }\n\n  tsParseNonConditionalType() {\n    if (this.tsIsStartOfFunctionType()) {\n      return this.tsParseFunctionOrConstructorType(\"TSFunctionType\");\n    }\n\n    if (this.match(types$1._new)) {\n      return this.tsParseFunctionOrConstructorType(\"TSConstructorType\");\n    } else if (this.isAbstractConstructorSignature()) {\n      return this.tsParseFunctionOrConstructorType(\"TSConstructorType\", true);\n    }\n\n    return this.tsParseUnionTypeOrHigher();\n  }\n\n  tsParseTypeAssertion() {\n    const node = this.startNode();\n\n    const _const = this.tsTryNextParseConstantContext();\n\n    node.typeAnnotation = _const || this.tsNextThenParseType();\n    this.expectRelational(\">\");\n    node.expression = this.parseMaybeUnary();\n    return this.finishNode(node, \"TSTypeAssertion\");\n  }\n\n  tsParseHeritageClause(descriptor) {\n    const originalStart = this.state.start;\n    const delimitedList = this.tsParseDelimitedList(\"HeritageClauseElement\", this.tsParseExpressionWithTypeArguments.bind(this));\n\n    if (!delimitedList.length) {\n      this.raise(originalStart, TSErrors.EmptyHeritageClauseType, descriptor);\n    }\n\n    return delimitedList;\n  }\n\n  tsParseExpressionWithTypeArguments() {\n    const node = this.startNode();\n    node.expression = this.tsParseEntityName(false);\n\n    if (this.isRelational(\"<\")) {\n      node.typeParameters = this.tsParseTypeArguments();\n    }\n\n    return this.finishNode(node, \"TSExpressionWithTypeArguments\");\n  }\n\n  tsParseInterfaceDeclaration(node) {\n    node.id = this.parseIdentifier();\n    this.checkLVal(node.id, \"typescript interface declaration\", BIND_TS_INTERFACE);\n    node.typeParameters = this.tsTryParseTypeParameters();\n\n    if (this.eat(types$1._extends)) {\n      node.extends = this.tsParseHeritageClause(\"extends\");\n    }\n\n    const body = this.startNode();\n    body.body = this.tsInType(this.tsParseObjectTypeMembers.bind(this));\n    node.body = this.finishNode(body, \"TSInterfaceBody\");\n    return this.finishNode(node, \"TSInterfaceDeclaration\");\n  }\n\n  tsParseTypeAliasDeclaration(node) {\n    node.id = this.parseIdentifier();\n    this.checkLVal(node.id, \"typescript type alias\", BIND_TS_TYPE);\n    node.typeParameters = this.tsTryParseTypeParameters();\n    node.typeAnnotation = this.tsInType(() => {\n      this.expect(types$1.eq);\n\n      if (this.isContextual(\"intrinsic\") && this.lookahead().type !== types$1.dot) {\n        const node = this.startNode();\n        this.next();\n        return this.finishNode(node, \"TSIntrinsicKeyword\");\n      }\n\n      return this.tsParseType();\n    });\n    this.semicolon();\n    return this.finishNode(node, \"TSTypeAliasDeclaration\");\n  }\n\n  tsInNoContext(cb) {\n    const oldContext = this.state.context;\n    this.state.context = [oldContext[0]];\n\n    try {\n      return cb();\n    } finally {\n      this.state.context = oldContext;\n    }\n  }\n\n  tsInType(cb) {\n    const oldInType = this.state.inType;\n    this.state.inType = true;\n\n    try {\n      return cb();\n    } finally {\n      this.state.inType = oldInType;\n    }\n  }\n\n  tsEatThenParseType(token) {\n    return !this.match(token) ? undefined : this.tsNextThenParseType();\n  }\n\n  tsExpectThenParseType(token) {\n    return this.tsDoThenParseType(() => this.expect(token));\n  }\n\n  tsNextThenParseType() {\n    return this.tsDoThenParseType(() => this.next());\n  }\n\n  tsDoThenParseType(cb) {\n    return this.tsInType(() => {\n      cb();\n      return this.tsParseType();\n    });\n  }\n\n  tsParseEnumMember() {\n    const node = this.startNode();\n    node.id = this.match(types$1.string) ? this.parseExprAtom() : this.parseIdentifier(true);\n\n    if (this.eat(types$1.eq)) {\n      node.initializer = this.parseMaybeAssignAllowIn();\n    }\n\n    return this.finishNode(node, \"TSEnumMember\");\n  }\n\n  tsParseEnumDeclaration(node, isConst) {\n    if (isConst) node.const = true;\n    node.id = this.parseIdentifier();\n    this.checkLVal(node.id, \"typescript enum declaration\", isConst ? BIND_TS_CONST_ENUM : BIND_TS_ENUM);\n    this.expect(types$1.braceL);\n    node.members = this.tsParseDelimitedList(\"EnumMembers\", this.tsParseEnumMember.bind(this));\n    this.expect(types$1.braceR);\n    return this.finishNode(node, \"TSEnumDeclaration\");\n  }\n\n  tsParseModuleBlock() {\n    const node = this.startNode();\n    this.scope.enter(SCOPE_OTHER);\n    this.expect(types$1.braceL);\n    this.parseBlockOrModuleBlockBody(node.body = [], undefined, true, types$1.braceR);\n    this.scope.exit();\n    return this.finishNode(node, \"TSModuleBlock\");\n  }\n\n  tsParseModuleOrNamespaceDeclaration(node, nested = false) {\n    node.id = this.parseIdentifier();\n\n    if (!nested) {\n      this.checkLVal(node.id, \"module or namespace declaration\", BIND_TS_NAMESPACE);\n    }\n\n    if (this.eat(types$1.dot)) {\n      const inner = this.startNode();\n      this.tsParseModuleOrNamespaceDeclaration(inner, true);\n      node.body = inner;\n    } else {\n      this.scope.enter(SCOPE_TS_MODULE);\n      this.prodParam.enter(PARAM);\n      node.body = this.tsParseModuleBlock();\n      this.prodParam.exit();\n      this.scope.exit();\n    }\n\n    return this.finishNode(node, \"TSModuleDeclaration\");\n  }\n\n  tsParseAmbientExternalModuleDeclaration(node) {\n    if (this.isContextual(\"global\")) {\n      node.global = true;\n      node.id = this.parseIdentifier();\n    } else if (this.match(types$1.string)) {\n      node.id = this.parseExprAtom();\n    } else {\n      this.unexpected();\n    }\n\n    if (this.match(types$1.braceL)) {\n      this.scope.enter(SCOPE_TS_MODULE);\n      this.prodParam.enter(PARAM);\n      node.body = this.tsParseModuleBlock();\n      this.prodParam.exit();\n      this.scope.exit();\n    } else {\n      this.semicolon();\n    }\n\n    return this.finishNode(node, \"TSModuleDeclaration\");\n  }\n\n  tsParseImportEqualsDeclaration(node, isExport) {\n    node.isExport = isExport || false;\n    node.id = this.parseIdentifier();\n    this.checkLVal(node.id, \"import equals declaration\", BIND_LEXICAL);\n    this.expect(types$1.eq);\n    const moduleReference = this.tsParseModuleReference();\n\n    if (node.importKind === \"type\" && moduleReference.type !== \"TSExternalModuleReference\") {\n      this.raise(moduleReference.start, TSErrors.ImportAliasHasImportType);\n    }\n\n    node.moduleReference = moduleReference;\n    this.semicolon();\n    return this.finishNode(node, \"TSImportEqualsDeclaration\");\n  }\n\n  tsIsExternalModuleReference() {\n    return this.isContextual(\"require\") && this.lookaheadCharCode() === 40;\n  }\n\n  tsParseModuleReference() {\n    return this.tsIsExternalModuleReference() ? this.tsParseExternalModuleReference() : this.tsParseEntityName(false);\n  }\n\n  tsParseExternalModuleReference() {\n    const node = this.startNode();\n    this.expectContextual(\"require\");\n    this.expect(types$1.parenL);\n\n    if (!this.match(types$1.string)) {\n      throw this.unexpected();\n    }\n\n    node.expression = this.parseExprAtom();\n    this.expect(types$1.parenR);\n    return this.finishNode(node, \"TSExternalModuleReference\");\n  }\n\n  tsLookAhead(f) {\n    const state = this.state.clone();\n    const res = f();\n    this.state = state;\n    return res;\n  }\n\n  tsTryParseAndCatch(f) {\n    const result = this.tryParse(abort => f() || abort());\n    if (result.aborted || !result.node) return undefined;\n    if (result.error) this.state = result.failState;\n    return result.node;\n  }\n\n  tsTryParse(f) {\n    const state = this.state.clone();\n    const result = f();\n\n    if (result !== undefined && result !== false) {\n      return result;\n    } else {\n      this.state = state;\n      return undefined;\n    }\n  }\n\n  tsTryParseDeclare(nany) {\n    if (this.isLineTerminator()) {\n      return;\n    }\n\n    let starttype = this.state.type;\n    let kind;\n\n    if (this.isContextual(\"let\")) {\n      starttype = types$1._var;\n      kind = \"let\";\n    }\n\n    return this.tsInAmbientContext(() => {\n      switch (starttype) {\n        case types$1._function:\n          nany.declare = true;\n          return this.parseFunctionStatement(nany, false, true);\n\n        case types$1._class:\n          nany.declare = true;\n          return this.parseClass(nany, true, false);\n\n        case types$1._const:\n          if (this.match(types$1._const) && this.isLookaheadContextual(\"enum\")) {\n            this.expect(types$1._const);\n            this.expectContextual(\"enum\");\n            return this.tsParseEnumDeclaration(nany, true);\n          }\n\n        case types$1._var:\n          kind = kind || this.state.value;\n          return this.parseVarStatement(nany, kind);\n\n        case types$1.name:\n          {\n            const value = this.state.value;\n\n            if (value === \"global\") {\n              return this.tsParseAmbientExternalModuleDeclaration(nany);\n            } else {\n              return this.tsParseDeclaration(nany, value, true);\n            }\n          }\n      }\n    });\n  }\n\n  tsTryParseExportDeclaration() {\n    return this.tsParseDeclaration(this.startNode(), this.state.value, true);\n  }\n\n  tsParseExpressionStatement(node, expr) {\n    switch (expr.name) {\n      case \"declare\":\n        {\n          const declaration = this.tsTryParseDeclare(node);\n\n          if (declaration) {\n            declaration.declare = true;\n            return declaration;\n          }\n\n          break;\n        }\n\n      case \"global\":\n        if (this.match(types$1.braceL)) {\n          this.scope.enter(SCOPE_TS_MODULE);\n          this.prodParam.enter(PARAM);\n          const mod = node;\n          mod.global = true;\n          mod.id = expr;\n          mod.body = this.tsParseModuleBlock();\n          this.scope.exit();\n          this.prodParam.exit();\n          return this.finishNode(mod, \"TSModuleDeclaration\");\n        }\n\n        break;\n\n      default:\n        return this.tsParseDeclaration(node, expr.name, false);\n    }\n  }\n\n  tsParseDeclaration(node, value, next) {\n    switch (value) {\n      case \"abstract\":\n        if (this.tsCheckLineTerminator(next) && (this.match(types$1._class) || this.match(types$1.name))) {\n          return this.tsParseAbstractDeclaration(node);\n        }\n\n        break;\n\n      case \"enum\":\n        if (next || this.match(types$1.name)) {\n          if (next) this.next();\n          return this.tsParseEnumDeclaration(node, false);\n        }\n\n        break;\n\n      case \"interface\":\n        if (this.tsCheckLineTerminator(next) && this.match(types$1.name)) {\n          return this.tsParseInterfaceDeclaration(node);\n        }\n\n        break;\n\n      case \"module\":\n        if (this.tsCheckLineTerminator(next)) {\n          if (this.match(types$1.string)) {\n            return this.tsParseAmbientExternalModuleDeclaration(node);\n          } else if (this.match(types$1.name)) {\n            return this.tsParseModuleOrNamespaceDeclaration(node);\n          }\n        }\n\n        break;\n\n      case \"namespace\":\n        if (this.tsCheckLineTerminator(next) && this.match(types$1.name)) {\n          return this.tsParseModuleOrNamespaceDeclaration(node);\n        }\n\n        break;\n\n      case \"type\":\n        if (this.tsCheckLineTerminator(next) && this.match(types$1.name)) {\n          return this.tsParseTypeAliasDeclaration(node);\n        }\n\n        break;\n    }\n  }\n\n  tsCheckLineTerminator(next) {\n    if (next) {\n      if (this.hasFollowingLineBreak()) return false;\n      this.next();\n      return true;\n    }\n\n    return !this.isLineTerminator();\n  }\n\n  tsTryParseGenericAsyncArrowFunction(startPos, startLoc) {\n    if (!this.isRelational(\"<\")) {\n      return undefined;\n    }\n\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n    this.state.maybeInArrowParameters = true;\n    const res = this.tsTryParseAndCatch(() => {\n      const node = this.startNodeAt(startPos, startLoc);\n      node.typeParameters = this.tsParseTypeParameters();\n      super.parseFunctionParams(node);\n      node.returnType = this.tsTryParseTypeOrTypePredicateAnnotation();\n      this.expect(types$1.arrow);\n      return node;\n    });\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n\n    if (!res) {\n      return undefined;\n    }\n\n    return this.parseArrowExpression(res, null, true);\n  }\n\n  tsParseTypeArguments() {\n    const node = this.startNode();\n    node.params = this.tsInType(() => this.tsInNoContext(() => {\n      this.expectRelational(\"<\");\n      return this.tsParseDelimitedList(\"TypeParametersOrArguments\", this.tsParseType.bind(this));\n    }));\n\n    if (node.params.length === 0) {\n      this.raise(node.start, TSErrors.EmptyTypeArguments);\n    }\n\n    this.state.exprAllowed = false;\n    this.expectRelational(\">\");\n    return this.finishNode(node, \"TSTypeParameterInstantiation\");\n  }\n\n  tsIsDeclarationStart() {\n    if (this.match(types$1.name)) {\n      switch (this.state.value) {\n        case \"abstract\":\n        case \"declare\":\n        case \"enum\":\n        case \"interface\":\n        case \"module\":\n        case \"namespace\":\n        case \"type\":\n          return true;\n      }\n    }\n\n    return false;\n  }\n\n  isExportDefaultSpecifier() {\n    if (this.tsIsDeclarationStart()) return false;\n    return super.isExportDefaultSpecifier();\n  }\n\n  parseAssignableListItem(allowModifiers, decorators) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    let accessibility;\n    let readonly = false;\n\n    if (allowModifiers !== undefined) {\n      accessibility = this.parseAccessModifier();\n      readonly = !!this.tsParseModifier([\"readonly\"]);\n\n      if (allowModifiers === false && (accessibility || readonly)) {\n        this.raise(startPos, TSErrors.UnexpectedParameterModifier);\n      }\n    }\n\n    const left = this.parseMaybeDefault();\n    this.parseAssignableListItemTypes(left);\n    const elt = this.parseMaybeDefault(left.start, left.loc.start, left);\n\n    if (accessibility || readonly) {\n      const pp = this.startNodeAt(startPos, startLoc);\n\n      if (decorators.length) {\n        pp.decorators = decorators;\n      }\n\n      if (accessibility) pp.accessibility = accessibility;\n      if (readonly) pp.readonly = readonly;\n\n      if (elt.type !== \"Identifier\" && elt.type !== \"AssignmentPattern\") {\n        this.raise(pp.start, TSErrors.UnsupportedParameterPropertyKind);\n      }\n\n      pp.parameter = elt;\n      return this.finishNode(pp, \"TSParameterProperty\");\n    }\n\n    if (decorators.length) {\n      left.decorators = decorators;\n    }\n\n    return elt;\n  }\n\n  parseFunctionBodyAndFinish(node, type, isMethod = false) {\n    if (this.match(types$1.colon)) {\n      node.returnType = this.tsParseTypeOrTypePredicateAnnotation(types$1.colon);\n    }\n\n    const bodilessType = type === \"FunctionDeclaration\" ? \"TSDeclareFunction\" : type === \"ClassMethod\" ? \"TSDeclareMethod\" : undefined;\n\n    if (bodilessType && !this.match(types$1.braceL) && this.isLineTerminator()) {\n      this.finishNode(node, bodilessType);\n      return;\n    }\n\n    if (bodilessType === \"TSDeclareFunction\" && this.state.isAmbientContext) {\n      this.raise(node.start, TSErrors.DeclareFunctionHasImplementation);\n\n      if (node.declare) {\n        super.parseFunctionBodyAndFinish(node, bodilessType, isMethod);\n        return;\n      }\n    }\n\n    super.parseFunctionBodyAndFinish(node, type, isMethod);\n  }\n\n  registerFunctionStatementId(node) {\n    if (!node.body && node.id) {\n      this.checkLVal(node.id, \"function name\", BIND_TS_AMBIENT);\n    } else {\n      super.registerFunctionStatementId(...arguments);\n    }\n  }\n\n  tsCheckForInvalidTypeCasts(items) {\n    items.forEach(node => {\n      if ((node == null ? void 0 : node.type) === \"TSTypeCastExpression\") {\n        this.raise(node.typeAnnotation.start, TSErrors.UnexpectedTypeAnnotation);\n      }\n    });\n  }\n\n  toReferencedList(exprList, isInParens) {\n    this.tsCheckForInvalidTypeCasts(exprList);\n    return exprList;\n  }\n\n  parseArrayLike(...args) {\n    const node = super.parseArrayLike(...args);\n\n    if (node.type === \"ArrayExpression\") {\n      this.tsCheckForInvalidTypeCasts(node.elements);\n    }\n\n    return node;\n  }\n\n  parseSubscript(base, startPos, startLoc, noCalls, state) {\n    if (!this.hasPrecedingLineBreak() && this.match(types$1.bang)) {\n      this.state.exprAllowed = false;\n      this.next();\n      const nonNullExpression = this.startNodeAt(startPos, startLoc);\n      nonNullExpression.expression = base;\n      return this.finishNode(nonNullExpression, \"TSNonNullExpression\");\n    }\n\n    if (this.isRelational(\"<\")) {\n      const result = this.tsTryParseAndCatch(() => {\n        if (!noCalls && this.atPossibleAsyncArrow(base)) {\n          const asyncArrowFn = this.tsTryParseGenericAsyncArrowFunction(startPos, startLoc);\n\n          if (asyncArrowFn) {\n            return asyncArrowFn;\n          }\n        }\n\n        const node = this.startNodeAt(startPos, startLoc);\n        node.callee = base;\n        const typeArguments = this.tsParseTypeArguments();\n\n        if (typeArguments) {\n          if (!noCalls && this.eat(types$1.parenL)) {\n            node.arguments = this.parseCallExpressionArguments(types$1.parenR, false);\n            this.tsCheckForInvalidTypeCasts(node.arguments);\n            node.typeParameters = typeArguments;\n\n            if (state.optionalChainMember) {\n              node.optional = false;\n            }\n\n            return this.finishCallExpression(node, state.optionalChainMember);\n          } else if (this.match(types$1.backQuote)) {\n            const result = this.parseTaggedTemplateExpression(base, startPos, startLoc, state);\n            result.typeParameters = typeArguments;\n            return result;\n          }\n        }\n\n        this.unexpected();\n      });\n      if (result) return result;\n    }\n\n    return super.parseSubscript(base, startPos, startLoc, noCalls, state);\n  }\n\n  parseNewArguments(node) {\n    if (this.isRelational(\"<\")) {\n      const typeParameters = this.tsTryParseAndCatch(() => {\n        const args = this.tsParseTypeArguments();\n        if (!this.match(types$1.parenL)) this.unexpected();\n        return args;\n      });\n\n      if (typeParameters) {\n        node.typeParameters = typeParameters;\n      }\n    }\n\n    super.parseNewArguments(node);\n  }\n\n  parseExprOp(left, leftStartPos, leftStartLoc, minPrec) {\n    if (nonNull(types$1._in.binop) > minPrec && !this.hasPrecedingLineBreak() && this.isContextual(\"as\")) {\n      const node = this.startNodeAt(leftStartPos, leftStartLoc);\n      node.expression = left;\n\n      const _const = this.tsTryNextParseConstantContext();\n\n      if (_const) {\n        node.typeAnnotation = _const;\n      } else {\n        node.typeAnnotation = this.tsNextThenParseType();\n      }\n\n      this.finishNode(node, \"TSAsExpression\");\n      this.reScan_lt_gt();\n      return this.parseExprOp(node, leftStartPos, leftStartLoc, minPrec);\n    }\n\n    return super.parseExprOp(left, leftStartPos, leftStartLoc, minPrec);\n  }\n\n  checkReservedWord(word, startLoc, checkKeywords, isBinding) {}\n\n  checkDuplicateExports() {}\n\n  parseImport(node) {\n    node.importKind = \"value\";\n\n    if (this.match(types$1.name) || this.match(types$1.star) || this.match(types$1.braceL)) {\n      let ahead = this.lookahead();\n\n      if (this.isContextual(\"type\") && ahead.type !== types$1.comma && !(ahead.type === types$1.name && ahead.value === \"from\") && ahead.type !== types$1.eq) {\n        node.importKind = \"type\";\n        this.next();\n        ahead = this.lookahead();\n      }\n\n      if (this.match(types$1.name) && ahead.type === types$1.eq) {\n        return this.tsParseImportEqualsDeclaration(node);\n      }\n    }\n\n    const importNode = super.parseImport(node);\n\n    if (importNode.importKind === \"type\" && importNode.specifiers.length > 1 && importNode.specifiers[0].type === \"ImportDefaultSpecifier\") {\n      this.raise(importNode.start, TSErrors.TypeImportCannotSpecifyDefaultAndNamed);\n    }\n\n    return importNode;\n  }\n\n  parseExport(node) {\n    if (this.match(types$1._import)) {\n      this.next();\n\n      if (this.isContextual(\"type\") && this.lookaheadCharCode() !== 61) {\n        node.importKind = \"type\";\n        this.next();\n      } else {\n        node.importKind = \"value\";\n      }\n\n      return this.tsParseImportEqualsDeclaration(node, true);\n    } else if (this.eat(types$1.eq)) {\n      const assign = node;\n      assign.expression = this.parseExpression();\n      this.semicolon();\n      return this.finishNode(assign, \"TSExportAssignment\");\n    } else if (this.eatContextual(\"as\")) {\n      const decl = node;\n      this.expectContextual(\"namespace\");\n      decl.id = this.parseIdentifier();\n      this.semicolon();\n      return this.finishNode(decl, \"TSNamespaceExportDeclaration\");\n    } else {\n      if (this.isContextual(\"type\") && this.lookahead().type === types$1.braceL) {\n        this.next();\n        node.exportKind = \"type\";\n      } else {\n        node.exportKind = \"value\";\n      }\n\n      return super.parseExport(node);\n    }\n  }\n\n  isAbstractClass() {\n    return this.isContextual(\"abstract\") && this.lookahead().type === types$1._class;\n  }\n\n  parseExportDefaultExpression() {\n    if (this.isAbstractClass()) {\n      const cls = this.startNode();\n      this.next();\n      cls.abstract = true;\n      this.parseClass(cls, true, true);\n      return cls;\n    }\n\n    if (this.state.value === \"interface\") {\n      const result = this.tsParseDeclaration(this.startNode(), this.state.value, true);\n      if (result) return result;\n    }\n\n    return super.parseExportDefaultExpression();\n  }\n\n  parseStatementContent(context, topLevel) {\n    if (this.state.type === types$1._const) {\n      const ahead = this.lookahead();\n\n      if (ahead.type === types$1.name && ahead.value === \"enum\") {\n        const node = this.startNode();\n        this.expect(types$1._const);\n        this.expectContextual(\"enum\");\n        return this.tsParseEnumDeclaration(node, true);\n      }\n    }\n\n    return super.parseStatementContent(context, topLevel);\n  }\n\n  parseAccessModifier() {\n    return this.tsParseModifier([\"public\", \"protected\", \"private\"]);\n  }\n\n  tsHasSomeModifiers(member, modifiers) {\n    return modifiers.some(modifier => {\n      if (tsIsAccessModifier(modifier)) {\n        return member.accessibility === modifier;\n      }\n\n      return !!member[modifier];\n    });\n  }\n\n  parseClassMember(classBody, member, state) {\n    const invalidModifersForStaticBlocks = [\"declare\", \"private\", \"public\", \"protected\", \"override\", \"abstract\", \"readonly\"];\n    this.tsParseModifiers(member, invalidModifersForStaticBlocks.concat([\"static\"]));\n\n    const callParseClassMemberWithIsStatic = () => {\n      const isStatic = !!member.static;\n\n      if (isStatic && this.eat(types$1.braceL)) {\n        if (this.tsHasSomeModifiers(member, invalidModifersForStaticBlocks)) {\n          this.raise(this.state.pos, TSErrors.StaticBlockCannotHaveModifier);\n        }\n\n        this.parseClassStaticBlock(classBody, member);\n      } else {\n        this.parseClassMemberWithIsStatic(classBody, member, state, isStatic);\n      }\n    };\n\n    if (member.declare) {\n      this.tsInAmbientContext(callParseClassMemberWithIsStatic);\n    } else {\n      callParseClassMemberWithIsStatic();\n    }\n  }\n\n  parseClassMemberWithIsStatic(classBody, member, state, isStatic) {\n    const idx = this.tsTryParseIndexSignature(member);\n\n    if (idx) {\n      classBody.body.push(idx);\n\n      if (member.abstract) {\n        this.raise(member.start, TSErrors.IndexSignatureHasAbstract);\n      }\n\n      if (member.accessibility) {\n        this.raise(member.start, TSErrors.IndexSignatureHasAccessibility, member.accessibility);\n      }\n\n      if (member.declare) {\n        this.raise(member.start, TSErrors.IndexSignatureHasDeclare);\n      }\n\n      if (member.override) {\n        this.raise(member.start, TSErrors.IndexSignatureHasOverride);\n      }\n\n      return;\n    }\n\n    if (!this.state.inAbstractClass && member.abstract) {\n      this.raise(member.start, TSErrors.NonAbstractClassHasAbstractMethod);\n    }\n\n    if (member.override) {\n      if (!state.hadSuperClass) {\n        this.raise(member.start, TSErrors.OverrideNotInSubClass);\n      }\n    }\n\n    super.parseClassMemberWithIsStatic(classBody, member, state, isStatic);\n  }\n\n  parsePostMemberNameModifiers(methodOrProp) {\n    const optional = this.eat(types$1.question);\n    if (optional) methodOrProp.optional = true;\n\n    if (methodOrProp.readonly && this.match(types$1.parenL)) {\n      this.raise(methodOrProp.start, TSErrors.ClassMethodHasReadonly);\n    }\n\n    if (methodOrProp.declare && this.match(types$1.parenL)) {\n      this.raise(methodOrProp.start, TSErrors.ClassMethodHasDeclare);\n    }\n  }\n\n  parseExpressionStatement(node, expr) {\n    const decl = expr.type === \"Identifier\" ? this.tsParseExpressionStatement(node, expr) : undefined;\n    return decl || super.parseExpressionStatement(node, expr);\n  }\n\n  shouldParseExportDeclaration() {\n    if (this.tsIsDeclarationStart()) return true;\n    return super.shouldParseExportDeclaration();\n  }\n\n  parseConditional(expr, startPos, startLoc, refNeedsArrowPos) {\n    if (!refNeedsArrowPos || !this.match(types$1.question)) {\n      return super.parseConditional(expr, startPos, startLoc, refNeedsArrowPos);\n    }\n\n    const result = this.tryParse(() => super.parseConditional(expr, startPos, startLoc));\n\n    if (!result.node) {\n      refNeedsArrowPos.start = result.error.pos || this.state.start;\n      return expr;\n    }\n\n    if (result.error) this.state = result.failState;\n    return result.node;\n  }\n\n  parseParenItem(node, startPos, startLoc) {\n    node = super.parseParenItem(node, startPos, startLoc);\n\n    if (this.eat(types$1.question)) {\n      node.optional = true;\n      this.resetEndLocation(node);\n    }\n\n    if (this.match(types$1.colon)) {\n      const typeCastNode = this.startNodeAt(startPos, startLoc);\n      typeCastNode.expression = node;\n      typeCastNode.typeAnnotation = this.tsParseTypeAnnotation();\n      return this.finishNode(typeCastNode, \"TSTypeCastExpression\");\n    }\n\n    return node;\n  }\n\n  parseExportDeclaration(node) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const isDeclare = this.eatContextual(\"declare\");\n\n    if (isDeclare && (this.isContextual(\"declare\") || !this.shouldParseExportDeclaration())) {\n      throw this.raise(this.state.start, TSErrors.ExpectedAmbientAfterExportDeclare);\n    }\n\n    let declaration;\n\n    if (this.match(types$1.name)) {\n      declaration = this.tsTryParseExportDeclaration();\n    }\n\n    if (!declaration) {\n      declaration = super.parseExportDeclaration(node);\n    }\n\n    if (declaration && (declaration.type === \"TSInterfaceDeclaration\" || declaration.type === \"TSTypeAliasDeclaration\" || isDeclare)) {\n      node.exportKind = \"type\";\n    }\n\n    if (declaration && isDeclare) {\n      this.resetStartLocation(declaration, startPos, startLoc);\n      declaration.declare = true;\n    }\n\n    return declaration;\n  }\n\n  parseClassId(node, isStatement, optionalId) {\n    if ((!isStatement || optionalId) && this.isContextual(\"implements\")) {\n      return;\n    }\n\n    super.parseClassId(node, isStatement, optionalId, node.declare ? BIND_TS_AMBIENT : BIND_CLASS);\n    const typeParameters = this.tsTryParseTypeParameters();\n    if (typeParameters) node.typeParameters = typeParameters;\n  }\n\n  parseClassPropertyAnnotation(node) {\n    if (!node.optional && this.eat(types$1.bang)) {\n      node.definite = true;\n    }\n\n    const type = this.tsTryParseTypeAnnotation();\n    if (type) node.typeAnnotation = type;\n  }\n\n  parseClassProperty(node) {\n    this.parseClassPropertyAnnotation(node);\n\n    if (this.state.isAmbientContext && this.match(types$1.eq)) {\n      this.raise(this.state.start, TSErrors.DeclareClassFieldHasInitializer);\n    }\n\n    return super.parseClassProperty(node);\n  }\n\n  parseClassPrivateProperty(node) {\n    if (node.abstract) {\n      this.raise(node.start, TSErrors.PrivateElementHasAbstract);\n    }\n\n    if (node.accessibility) {\n      this.raise(node.start, TSErrors.PrivateElementHasAccessibility, node.accessibility);\n    }\n\n    this.parseClassPropertyAnnotation(node);\n    return super.parseClassPrivateProperty(node);\n  }\n\n  pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper) {\n    const typeParameters = this.tsTryParseTypeParameters();\n\n    if (typeParameters && isConstructor) {\n      this.raise(typeParameters.start, TSErrors.ConstructorHasTypeParameters);\n    }\n\n    if (method.declare && (method.kind === \"get\" || method.kind === \"set\")) {\n      this.raise(method.start, TSErrors.DeclareAccessor, method.kind);\n    }\n\n    if (typeParameters) method.typeParameters = typeParameters;\n    super.pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper);\n  }\n\n  pushClassPrivateMethod(classBody, method, isGenerator, isAsync) {\n    const typeParameters = this.tsTryParseTypeParameters();\n    if (typeParameters) method.typeParameters = typeParameters;\n    super.pushClassPrivateMethod(classBody, method, isGenerator, isAsync);\n  }\n\n  parseClassSuper(node) {\n    super.parseClassSuper(node);\n\n    if (node.superClass && this.isRelational(\"<\")) {\n      node.superTypeParameters = this.tsParseTypeArguments();\n    }\n\n    if (this.eatContextual(\"implements\")) {\n      node.implements = this.tsParseHeritageClause(\"implements\");\n    }\n  }\n\n  parseObjPropValue(prop, ...args) {\n    const typeParameters = this.tsTryParseTypeParameters();\n    if (typeParameters) prop.typeParameters = typeParameters;\n    super.parseObjPropValue(prop, ...args);\n  }\n\n  parseFunctionParams(node, allowModifiers) {\n    const typeParameters = this.tsTryParseTypeParameters();\n    if (typeParameters) node.typeParameters = typeParameters;\n    super.parseFunctionParams(node, allowModifiers);\n  }\n\n  parseVarId(decl, kind) {\n    super.parseVarId(decl, kind);\n\n    if (decl.id.type === \"Identifier\" && this.eat(types$1.bang)) {\n      decl.definite = true;\n    }\n\n    const type = this.tsTryParseTypeAnnotation();\n\n    if (type) {\n      decl.id.typeAnnotation = type;\n      this.resetEndLocation(decl.id);\n    }\n  }\n\n  parseAsyncArrowFromCallExpression(node, call) {\n    if (this.match(types$1.colon)) {\n      node.returnType = this.tsParseTypeAnnotation();\n    }\n\n    return super.parseAsyncArrowFromCallExpression(node, call);\n  }\n\n  parseMaybeAssign(...args) {\n    var _jsx, _jsx2, _typeCast, _jsx3, _typeCast2, _jsx4, _typeCast3;\n\n    let state;\n    let jsx;\n    let typeCast;\n\n    if (this.hasPlugin(\"jsx\") && (this.match(types$1.jsxTagStart) || this.isRelational(\"<\"))) {\n      state = this.state.clone();\n      jsx = this.tryParse(() => super.parseMaybeAssign(...args), state);\n      if (!jsx.error) return jsx.node;\n      const {\n        context\n      } = this.state;\n\n      if (context[context.length - 1] === types.j_oTag) {\n        context.length -= 2;\n      } else if (context[context.length - 1] === types.j_expr) {\n        context.length -= 1;\n      }\n    }\n\n    if (!((_jsx = jsx) != null && _jsx.error) && !this.isRelational(\"<\")) {\n      return super.parseMaybeAssign(...args);\n    }\n\n    let typeParameters;\n    state = state || this.state.clone();\n    const arrow = this.tryParse(abort => {\n      var _expr$extra, _typeParameters;\n\n      typeParameters = this.tsParseTypeParameters();\n      const expr = super.parseMaybeAssign(...args);\n\n      if (expr.type !== \"ArrowFunctionExpression\" || (_expr$extra = expr.extra) != null && _expr$extra.parenthesized) {\n        abort();\n      }\n\n      if (((_typeParameters = typeParameters) == null ? void 0 : _typeParameters.params.length) !== 0) {\n        this.resetStartLocationFromNode(expr, typeParameters);\n      }\n\n      expr.typeParameters = typeParameters;\n      return expr;\n    }, state);\n    if (!arrow.error && !arrow.aborted) return arrow.node;\n\n    if (!jsx) {\n      assert(!this.hasPlugin(\"jsx\"));\n      typeCast = this.tryParse(() => super.parseMaybeAssign(...args), state);\n      if (!typeCast.error) return typeCast.node;\n    }\n\n    if ((_jsx2 = jsx) != null && _jsx2.node) {\n      this.state = jsx.failState;\n      return jsx.node;\n    }\n\n    if (arrow.node) {\n      this.state = arrow.failState;\n      return arrow.node;\n    }\n\n    if ((_typeCast = typeCast) != null && _typeCast.node) {\n      this.state = typeCast.failState;\n      return typeCast.node;\n    }\n\n    if ((_jsx3 = jsx) != null && _jsx3.thrown) throw jsx.error;\n    if (arrow.thrown) throw arrow.error;\n    if ((_typeCast2 = typeCast) != null && _typeCast2.thrown) throw typeCast.error;\n    throw ((_jsx4 = jsx) == null ? void 0 : _jsx4.error) || arrow.error || ((_typeCast3 = typeCast) == null ? void 0 : _typeCast3.error);\n  }\n\n  parseMaybeUnary(refExpressionErrors) {\n    if (!this.hasPlugin(\"jsx\") && this.isRelational(\"<\")) {\n      return this.tsParseTypeAssertion();\n    } else {\n      return super.parseMaybeUnary(refExpressionErrors);\n    }\n  }\n\n  parseArrow(node) {\n    if (this.match(types$1.colon)) {\n      const result = this.tryParse(abort => {\n        const returnType = this.tsParseTypeOrTypePredicateAnnotation(types$1.colon);\n        if (this.canInsertSemicolon() || !this.match(types$1.arrow)) abort();\n        return returnType;\n      });\n      if (result.aborted) return;\n\n      if (!result.thrown) {\n        if (result.error) this.state = result.failState;\n        node.returnType = result.node;\n      }\n    }\n\n    return super.parseArrow(node);\n  }\n\n  parseAssignableListItemTypes(param) {\n    if (this.eat(types$1.question)) {\n      if (param.type !== \"Identifier\" && !this.state.isAmbientContext && !this.state.inType) {\n        this.raise(param.start, TSErrors.PatternIsOptional);\n      }\n\n      param.optional = true;\n    }\n\n    const type = this.tsTryParseTypeAnnotation();\n    if (type) param.typeAnnotation = type;\n    this.resetEndLocation(param);\n    return param;\n  }\n\n  toAssignable(node, isLHS = false) {\n    switch (node.type) {\n      case \"TSTypeCastExpression\":\n        return super.toAssignable(this.typeCastToParameter(node), isLHS);\n\n      case \"TSParameterProperty\":\n        return super.toAssignable(node, isLHS);\n\n      case \"ParenthesizedExpression\":\n        return this.toAssignableParenthesizedExpression(node, isLHS);\n\n      case \"TSAsExpression\":\n      case \"TSNonNullExpression\":\n      case \"TSTypeAssertion\":\n        node.expression = this.toAssignable(node.expression, isLHS);\n        return node;\n\n      default:\n        return super.toAssignable(node, isLHS);\n    }\n  }\n\n  toAssignableParenthesizedExpression(node, isLHS) {\n    switch (node.expression.type) {\n      case \"TSAsExpression\":\n      case \"TSNonNullExpression\":\n      case \"TSTypeAssertion\":\n      case \"ParenthesizedExpression\":\n        node.expression = this.toAssignable(node.expression, isLHS);\n        return node;\n\n      default:\n        return super.toAssignable(node, isLHS);\n    }\n  }\n\n  checkLVal(expr, contextDescription, ...args) {\n    var _expr$extra2;\n\n    switch (expr.type) {\n      case \"TSTypeCastExpression\":\n        return;\n\n      case \"TSParameterProperty\":\n        this.checkLVal(expr.parameter, \"parameter property\", ...args);\n        return;\n\n      case \"TSAsExpression\":\n      case \"TSTypeAssertion\":\n        if (!args[0] && contextDescription !== \"parenthesized expression\" && !((_expr$extra2 = expr.extra) != null && _expr$extra2.parenthesized)) {\n          this.raise(expr.start, ErrorMessages.InvalidLhs, contextDescription);\n          break;\n        }\n\n        this.checkLVal(expr.expression, \"parenthesized expression\", ...args);\n        return;\n\n      case \"TSNonNullExpression\":\n        this.checkLVal(expr.expression, contextDescription, ...args);\n        return;\n\n      default:\n        super.checkLVal(expr, contextDescription, ...args);\n        return;\n    }\n  }\n\n  parseBindingAtom() {\n    switch (this.state.type) {\n      case types$1._this:\n        return this.parseIdentifier(true);\n\n      default:\n        return super.parseBindingAtom();\n    }\n  }\n\n  parseMaybeDecoratorArguments(expr) {\n    if (this.isRelational(\"<\")) {\n      const typeArguments = this.tsParseTypeArguments();\n\n      if (this.match(types$1.parenL)) {\n        const call = super.parseMaybeDecoratorArguments(expr);\n        call.typeParameters = typeArguments;\n        return call;\n      }\n\n      this.unexpected(this.state.start, types$1.parenL);\n    }\n\n    return super.parseMaybeDecoratorArguments(expr);\n  }\n\n  checkCommaAfterRest(close) {\n    if (this.state.isAmbientContext && this.match(types$1.comma) && this.lookaheadCharCode() === close) {\n      this.next();\n    } else {\n      super.checkCommaAfterRest(close);\n    }\n  }\n\n  isClassMethod() {\n    return this.isRelational(\"<\") || super.isClassMethod();\n  }\n\n  isClassProperty() {\n    return this.match(types$1.bang) || this.match(types$1.colon) || super.isClassProperty();\n  }\n\n  parseMaybeDefault(...args) {\n    const node = super.parseMaybeDefault(...args);\n\n    if (node.type === \"AssignmentPattern\" && node.typeAnnotation && node.right.start < node.typeAnnotation.start) {\n      this.raise(node.typeAnnotation.start, TSErrors.TypeAnnotationAfterAssign);\n    }\n\n    return node;\n  }\n\n  getTokenFromCode(code) {\n    if (this.state.inType && (code === 62 || code === 60)) {\n      return this.finishOp(types$1.relational, 1);\n    } else {\n      return super.getTokenFromCode(code);\n    }\n  }\n\n  reScan_lt_gt() {\n    if (this.match(types$1.relational)) {\n      const code = this.input.charCodeAt(this.state.start);\n\n      if (code === 60 || code === 62) {\n        this.state.pos -= 1;\n        this.readToken_lt_gt(code);\n      }\n    }\n  }\n\n  toAssignableList(exprList) {\n    for (let i = 0; i < exprList.length; i++) {\n      const expr = exprList[i];\n      if (!expr) continue;\n\n      switch (expr.type) {\n        case \"TSTypeCastExpression\":\n          exprList[i] = this.typeCastToParameter(expr);\n          break;\n\n        case \"TSAsExpression\":\n        case \"TSTypeAssertion\":\n          if (!this.state.maybeInArrowParameters) {\n            exprList[i] = this.typeCastToParameter(expr);\n          } else {\n            this.raise(expr.start, TSErrors.UnexpectedTypeCastInParameter);\n          }\n\n          break;\n      }\n    }\n\n    return super.toAssignableList(...arguments);\n  }\n\n  typeCastToParameter(node) {\n    node.expression.typeAnnotation = node.typeAnnotation;\n    this.resetEndLocation(node.expression, node.typeAnnotation.end, node.typeAnnotation.loc.end);\n    return node.expression;\n  }\n\n  shouldParseArrow() {\n    return this.match(types$1.colon) || super.shouldParseArrow();\n  }\n\n  shouldParseAsyncArrow() {\n    return this.match(types$1.colon) || super.shouldParseAsyncArrow();\n  }\n\n  canHaveLeadingDecorator() {\n    return super.canHaveLeadingDecorator() || this.isAbstractClass();\n  }\n\n  jsxParseOpeningElementAfterName(node) {\n    if (this.isRelational(\"<\")) {\n      const typeArguments = this.tsTryParseAndCatch(() => this.tsParseTypeArguments());\n      if (typeArguments) node.typeParameters = typeArguments;\n    }\n\n    return super.jsxParseOpeningElementAfterName(node);\n  }\n\n  getGetterSetterExpectedParamCount(method) {\n    const baseCount = super.getGetterSetterExpectedParamCount(method);\n    const params = this.getObjectOrClassMethodParams(method);\n    const firstParam = params[0];\n    const hasContextParam = firstParam && this.isThisParam(firstParam);\n    return hasContextParam ? baseCount + 1 : baseCount;\n  }\n\n  parseCatchClauseParam() {\n    const param = super.parseCatchClauseParam();\n    const type = this.tsTryParseTypeAnnotation();\n\n    if (type) {\n      param.typeAnnotation = type;\n      this.resetEndLocation(param);\n    }\n\n    return param;\n  }\n\n  tsInAmbientContext(cb) {\n    const oldIsAmbientContext = this.state.isAmbientContext;\n    this.state.isAmbientContext = true;\n\n    try {\n      return cb();\n    } finally {\n      this.state.isAmbientContext = oldIsAmbientContext;\n    }\n  }\n\n  parseClass(node, ...args) {\n    const oldInAbstractClass = this.state.inAbstractClass;\n    this.state.inAbstractClass = !!node.abstract;\n\n    try {\n      return super.parseClass(node, ...args);\n    } finally {\n      this.state.inAbstractClass = oldInAbstractClass;\n    }\n  }\n\n  tsParseAbstractDeclaration(node) {\n    if (this.match(types$1._class)) {\n      node.abstract = true;\n      return this.parseClass(node, true, false);\n    } else if (this.isContextual(\"interface\")) {\n      if (!this.hasFollowingLineBreak()) {\n        node.abstract = true;\n        this.raise(node.start, TSErrors.NonClassMethodPropertyHasAbstractModifer);\n        this.next();\n        return this.tsParseInterfaceDeclaration(node);\n      }\n    } else {\n      this.unexpected(null, types$1._class);\n    }\n  }\n\n  parseMethod(...args) {\n    const method = super.parseMethod(...args);\n\n    if (method.abstract) {\n      const hasBody = this.hasPlugin(\"estree\") ? !!method.value.body : !!method.body;\n\n      if (hasBody) {\n        const {\n          key\n        } = method;\n        this.raise(method.start, TSErrors.AbstractMethodHasImplementation, key.type === \"Identifier\" ? key.name : `[${this.input.slice(key.start, key.end)}]`);\n      }\n    }\n\n    return method;\n  }\n\n  shouldParseAsAmbientContext() {\n    return !!this.getPluginOption(\"typescript\", \"dts\");\n  }\n\n  parse() {\n    if (this.shouldParseAsAmbientContext()) {\n      this.state.isAmbientContext = true;\n    }\n\n    return super.parse();\n  }\n\n  getExpression() {\n    if (this.shouldParseAsAmbientContext()) {\n      this.state.isAmbientContext = true;\n    }\n\n    return super.getExpression();\n  }\n\n});\n\ntypes$1.placeholder = new TokenType(\"%%\", {\n  startsExpr: true\n});\nconst PlaceHolderErrors = makeErrorTemplates({\n  ClassNameIsRequired: \"A class name is required.\"\n}, ErrorCodes.SyntaxError);\nvar placeholders = (superClass => class extends superClass {\n  parsePlaceholder(expectedNode) {\n    if (this.match(types$1.placeholder)) {\n      const node = this.startNode();\n      this.next();\n      this.assertNoSpace(\"Unexpected space in placeholder.\");\n      node.name = super.parseIdentifier(true);\n      this.assertNoSpace(\"Unexpected space in placeholder.\");\n      this.expect(types$1.placeholder);\n      return this.finishPlaceholder(node, expectedNode);\n    }\n  }\n\n  finishPlaceholder(node, expectedNode) {\n    const isFinished = !!(node.expectedNode && node.type === \"Placeholder\");\n    node.expectedNode = expectedNode;\n    return isFinished ? node : this.finishNode(node, \"Placeholder\");\n  }\n\n  getTokenFromCode(code) {\n    if (code === 37 && this.input.charCodeAt(this.state.pos + 1) === 37) {\n      return this.finishOp(types$1.placeholder, 2);\n    }\n\n    return super.getTokenFromCode(...arguments);\n  }\n\n  parseExprAtom() {\n    return this.parsePlaceholder(\"Expression\") || super.parseExprAtom(...arguments);\n  }\n\n  parseIdentifier() {\n    return this.parsePlaceholder(\"Identifier\") || super.parseIdentifier(...arguments);\n  }\n\n  checkReservedWord(word) {\n    if (word !== undefined) super.checkReservedWord(...arguments);\n  }\n\n  parseBindingAtom() {\n    return this.parsePlaceholder(\"Pattern\") || super.parseBindingAtom(...arguments);\n  }\n\n  checkLVal(expr) {\n    if (expr.type !== \"Placeholder\") super.checkLVal(...arguments);\n  }\n\n  toAssignable(node) {\n    if (node && node.type === \"Placeholder\" && node.expectedNode === \"Expression\") {\n      node.expectedNode = \"Pattern\";\n      return node;\n    }\n\n    return super.toAssignable(...arguments);\n  }\n\n  isLet(context) {\n    if (super.isLet(context)) {\n      return true;\n    }\n\n    if (!this.isContextual(\"let\")) {\n      return false;\n    }\n\n    if (context) return false;\n    const nextToken = this.lookahead();\n\n    if (nextToken.type === types$1.placeholder) {\n      return true;\n    }\n\n    return false;\n  }\n\n  verifyBreakContinue(node) {\n    if (node.label && node.label.type === \"Placeholder\") return;\n    super.verifyBreakContinue(...arguments);\n  }\n\n  parseExpressionStatement(node, expr) {\n    if (expr.type !== \"Placeholder\" || expr.extra && expr.extra.parenthesized) {\n      return super.parseExpressionStatement(...arguments);\n    }\n\n    if (this.match(types$1.colon)) {\n      const stmt = node;\n      stmt.label = this.finishPlaceholder(expr, \"Identifier\");\n      this.next();\n      stmt.body = this.parseStatement(\"label\");\n      return this.finishNode(stmt, \"LabeledStatement\");\n    }\n\n    this.semicolon();\n    node.name = expr.name;\n    return this.finishPlaceholder(node, \"Statement\");\n  }\n\n  parseBlock() {\n    return this.parsePlaceholder(\"BlockStatement\") || super.parseBlock(...arguments);\n  }\n\n  parseFunctionId() {\n    return this.parsePlaceholder(\"Identifier\") || super.parseFunctionId(...arguments);\n  }\n\n  parseClass(node, isStatement, optionalId) {\n    const type = isStatement ? \"ClassDeclaration\" : \"ClassExpression\";\n    this.next();\n    this.takeDecorators(node);\n    const oldStrict = this.state.strict;\n    const placeholder = this.parsePlaceholder(\"Identifier\");\n\n    if (placeholder) {\n      if (this.match(types$1._extends) || this.match(types$1.placeholder) || this.match(types$1.braceL)) {\n        node.id = placeholder;\n      } else if (optionalId || !isStatement) {\n        node.id = null;\n        node.body = this.finishPlaceholder(placeholder, \"ClassBody\");\n        return this.finishNode(node, type);\n      } else {\n        this.unexpected(null, PlaceHolderErrors.ClassNameIsRequired);\n      }\n    } else {\n      this.parseClassId(node, isStatement, optionalId);\n    }\n\n    this.parseClassSuper(node);\n    node.body = this.parsePlaceholder(\"ClassBody\") || this.parseClassBody(!!node.superClass, oldStrict);\n    return this.finishNode(node, type);\n  }\n\n  parseExport(node) {\n    const placeholder = this.parsePlaceholder(\"Identifier\");\n    if (!placeholder) return super.parseExport(...arguments);\n\n    if (!this.isContextual(\"from\") && !this.match(types$1.comma)) {\n      node.specifiers = [];\n      node.source = null;\n      node.declaration = this.finishPlaceholder(placeholder, \"Declaration\");\n      return this.finishNode(node, \"ExportNamedDeclaration\");\n    }\n\n    this.expectPlugin(\"exportDefaultFrom\");\n    const specifier = this.startNode();\n    specifier.exported = placeholder;\n    node.specifiers = [this.finishNode(specifier, \"ExportDefaultSpecifier\")];\n    return super.parseExport(node);\n  }\n\n  isExportDefaultSpecifier() {\n    if (this.match(types$1._default)) {\n      const next = this.nextTokenStart();\n\n      if (this.isUnparsedContextual(next, \"from\")) {\n        if (this.input.startsWith(types$1.placeholder.label, this.nextTokenStartSince(next + 4))) {\n          return true;\n        }\n      }\n    }\n\n    return super.isExportDefaultSpecifier();\n  }\n\n  maybeParseExportDefaultSpecifier(node) {\n    if (node.specifiers && node.specifiers.length > 0) {\n      return true;\n    }\n\n    return super.maybeParseExportDefaultSpecifier(...arguments);\n  }\n\n  checkExport(node) {\n    const {\n      specifiers\n    } = node;\n\n    if (specifiers != null && specifiers.length) {\n      node.specifiers = specifiers.filter(node => node.exported.type === \"Placeholder\");\n    }\n\n    super.checkExport(node);\n    node.specifiers = specifiers;\n  }\n\n  parseImport(node) {\n    const placeholder = this.parsePlaceholder(\"Identifier\");\n    if (!placeholder) return super.parseImport(...arguments);\n    node.specifiers = [];\n\n    if (!this.isContextual(\"from\") && !this.match(types$1.comma)) {\n      node.source = this.finishPlaceholder(placeholder, \"StringLiteral\");\n      this.semicolon();\n      return this.finishNode(node, \"ImportDeclaration\");\n    }\n\n    const specifier = this.startNodeAtNode(placeholder);\n    specifier.local = placeholder;\n    this.finishNode(specifier, \"ImportDefaultSpecifier\");\n    node.specifiers.push(specifier);\n\n    if (this.eat(types$1.comma)) {\n      const hasStarImport = this.maybeParseStarImportSpecifier(node);\n      if (!hasStarImport) this.parseNamedImportSpecifiers(node);\n    }\n\n    this.expectContextual(\"from\");\n    node.source = this.parseImportSource();\n    this.semicolon();\n    return this.finishNode(node, \"ImportDeclaration\");\n  }\n\n  parseImportSource() {\n    return this.parsePlaceholder(\"StringLiteral\") || super.parseImportSource(...arguments);\n  }\n\n});\n\nvar v8intrinsic = (superClass => class extends superClass {\n  parseV8Intrinsic() {\n    if (this.match(types$1.modulo)) {\n      const v8IntrinsicStart = this.state.start;\n      const node = this.startNode();\n      this.eat(types$1.modulo);\n\n      if (this.match(types$1.name)) {\n        const name = this.parseIdentifierName(this.state.start);\n        const identifier = this.createIdentifier(node, name);\n        identifier.type = \"V8IntrinsicIdentifier\";\n\n        if (this.match(types$1.parenL)) {\n          return identifier;\n        }\n      }\n\n      this.unexpected(v8IntrinsicStart);\n    }\n  }\n\n  parseExprAtom() {\n    return this.parseV8Intrinsic() || super.parseExprAtom(...arguments);\n  }\n\n});\n\nfunction hasPlugin(plugins, name) {\n  return plugins.some(plugin => {\n    if (Array.isArray(plugin)) {\n      return plugin[0] === name;\n    } else {\n      return plugin === name;\n    }\n  });\n}\nfunction getPluginOption(plugins, name, option) {\n  const plugin = plugins.find(plugin => {\n    if (Array.isArray(plugin)) {\n      return plugin[0] === name;\n    } else {\n      return plugin === name;\n    }\n  });\n\n  if (plugin && Array.isArray(plugin)) {\n    return plugin[1][option];\n  }\n\n  return null;\n}\nconst PIPELINE_PROPOSALS = [\"minimal\", \"smart\", \"fsharp\"];\nconst RECORD_AND_TUPLE_SYNTAX_TYPES = [\"hash\", \"bar\"];\nfunction validatePlugins(plugins) {\n  if (hasPlugin(plugins, \"decorators\")) {\n    if (hasPlugin(plugins, \"decorators-legacy\")) {\n      throw new Error(\"Cannot use the decorators and decorators-legacy plugin together\");\n    }\n\n    const decoratorsBeforeExport = getPluginOption(plugins, \"decorators\", \"decoratorsBeforeExport\");\n\n    if (decoratorsBeforeExport == null) {\n      throw new Error(\"The 'decorators' plugin requires a 'decoratorsBeforeExport' option,\" + \" whose value must be a boolean. If you are migrating from\" + \" Babylon/Babel 6 or want to use the old decorators proposal, you\" + \" should use the 'decorators-legacy' plugin instead of 'decorators'.\");\n    } else if (typeof decoratorsBeforeExport !== \"boolean\") {\n      throw new Error(\"'decoratorsBeforeExport' must be a boolean.\");\n    }\n  }\n\n  if (hasPlugin(plugins, \"flow\") && hasPlugin(plugins, \"typescript\")) {\n    throw new Error(\"Cannot combine flow and typescript plugins.\");\n  }\n\n  if (hasPlugin(plugins, \"placeholders\") && hasPlugin(plugins, \"v8intrinsic\")) {\n    throw new Error(\"Cannot combine placeholders and v8intrinsic plugins.\");\n  }\n\n  if (hasPlugin(plugins, \"pipelineOperator\") && !PIPELINE_PROPOSALS.includes(getPluginOption(plugins, \"pipelineOperator\", \"proposal\"))) {\n    throw new Error(\"'pipelineOperator' requires 'proposal' option whose value should be one of: \" + PIPELINE_PROPOSALS.map(p => `'${p}'`).join(\", \"));\n  }\n\n  if (hasPlugin(plugins, \"moduleAttributes\")) {\n    if (hasPlugin(plugins, \"importAssertions\")) {\n      throw new Error(\"Cannot combine importAssertions and moduleAttributes plugins.\");\n    }\n\n    const moduleAttributesVerionPluginOption = getPluginOption(plugins, \"moduleAttributes\", \"version\");\n\n    if (moduleAttributesVerionPluginOption !== \"may-2020\") {\n      throw new Error(\"The 'moduleAttributes' plugin requires a 'version' option,\" + \" representing the last proposal update. Currently, the\" + \" only supported value is 'may-2020'.\");\n    }\n  }\n\n  if (hasPlugin(plugins, \"recordAndTuple\") && !RECORD_AND_TUPLE_SYNTAX_TYPES.includes(getPluginOption(plugins, \"recordAndTuple\", \"syntaxType\"))) {\n    throw new Error(\"'recordAndTuple' requires 'syntaxType' option whose value should be one of: \" + RECORD_AND_TUPLE_SYNTAX_TYPES.map(p => `'${p}'`).join(\", \"));\n  }\n\n  if (hasPlugin(plugins, \"asyncDoExpressions\") && !hasPlugin(plugins, \"doExpressions\")) {\n    const error = new Error(\"'asyncDoExpressions' requires 'doExpressions', please add 'doExpressions' to parser plugins.\");\n    error.missingPlugins = \"doExpressions\";\n    throw error;\n  }\n}\nconst mixinPlugins = {\n  estree,\n  jsx,\n  flow,\n  typescript,\n  v8intrinsic,\n  placeholders\n};\nconst mixinPluginNames = Object.keys(mixinPlugins);\n\nconst defaultOptions = {\n  sourceType: \"script\",\n  sourceFilename: undefined,\n  startLine: 1,\n  allowAwaitOutsideFunction: false,\n  allowReturnOutsideFunction: false,\n  allowImportExportEverywhere: false,\n  allowSuperOutsideMethod: false,\n  allowUndeclaredExports: false,\n  plugins: [],\n  strictMode: null,\n  ranges: false,\n  tokens: false,\n  createParenthesizedExpressions: false,\n  errorRecovery: false\n};\nfunction getOptions(opts) {\n  const options = {};\n\n  for (const key of Object.keys(defaultOptions)) {\n    options[key] = opts && opts[key] != null ? opts[key] : defaultOptions[key];\n  }\n\n  return options;\n}\n\nclass State {\n  constructor() {\n    this.strict = void 0;\n    this.curLine = void 0;\n    this.startLoc = void 0;\n    this.endLoc = void 0;\n    this.errors = [];\n    this.potentialArrowAt = -1;\n    this.noArrowAt = [];\n    this.noArrowParamsConversionAt = [];\n    this.maybeInArrowParameters = false;\n    this.inPipeline = false;\n    this.inType = false;\n    this.noAnonFunctionType = false;\n    this.inPropertyName = false;\n    this.hasFlowComment = false;\n    this.isAmbientContext = false;\n    this.inAbstractClass = false;\n    this.topicContext = {\n      maxNumOfResolvableTopics: 0,\n      maxTopicIndex: null\n    };\n    this.soloAwait = false;\n    this.inFSharpPipelineDirectBody = false;\n    this.labels = [];\n    this.decoratorStack = [[]];\n    this.comments = [];\n    this.trailingComments = [];\n    this.leadingComments = [];\n    this.commentStack = [];\n    this.commentPreviousNode = null;\n    this.pos = 0;\n    this.lineStart = 0;\n    this.type = types$1.eof;\n    this.value = null;\n    this.start = 0;\n    this.end = 0;\n    this.lastTokEndLoc = null;\n    this.lastTokStartLoc = null;\n    this.lastTokStart = 0;\n    this.lastTokEnd = 0;\n    this.context = [types.braceStatement];\n    this.exprAllowed = true;\n    this.containsEsc = false;\n    this.strictErrors = new Map();\n    this.exportedIdentifiers = [];\n    this.tokensLength = 0;\n  }\n\n  init(options) {\n    this.strict = options.strictMode === false ? false : options.sourceType === \"module\";\n    this.curLine = options.startLine;\n    this.startLoc = this.endLoc = this.curPosition();\n  }\n\n  curPosition() {\n    return new Position(this.curLine, this.pos - this.lineStart);\n  }\n\n  clone(skipArrays) {\n    const state = new State();\n    const keys = Object.keys(this);\n\n    for (let i = 0, length = keys.length; i < length; i++) {\n      const key = keys[i];\n      let val = this[key];\n\n      if (!skipArrays && Array.isArray(val)) {\n        val = val.slice();\n      }\n\n      state[key] = val;\n    }\n\n    return state;\n  }\n\n}\n\nvar _isDigit = function isDigit(code) {\n  return code >= 48 && code <= 57;\n};\nconst VALID_REGEX_FLAGS = new Set([\"g\", \"m\", \"s\", \"i\", \"y\", \"u\"]);\nconst forbiddenNumericSeparatorSiblings = {\n  decBinOct: [46, 66, 69, 79, 95, 98, 101, 111],\n  hex: [46, 88, 95, 120]\n};\nconst allowedNumericSeparatorSiblings = {};\nallowedNumericSeparatorSiblings.bin = [48, 49];\nallowedNumericSeparatorSiblings.oct = [...allowedNumericSeparatorSiblings.bin, 50, 51, 52, 53, 54, 55];\nallowedNumericSeparatorSiblings.dec = [...allowedNumericSeparatorSiblings.oct, 56, 57];\nallowedNumericSeparatorSiblings.hex = [...allowedNumericSeparatorSiblings.dec, 65, 66, 67, 68, 69, 70, 97, 98, 99, 100, 101, 102];\nclass Token {\n  constructor(state) {\n    this.type = state.type;\n    this.value = state.value;\n    this.start = state.start;\n    this.end = state.end;\n    this.loc = new SourceLocation(state.startLoc, state.endLoc);\n  }\n\n}\nclass Tokenizer extends ParserError {\n  constructor(options, input) {\n    super();\n    this.isLookahead = void 0;\n    this.tokens = [];\n    this.state = new State();\n    this.state.init(options);\n    this.input = input;\n    this.length = input.length;\n    this.isLookahead = false;\n  }\n\n  pushToken(token) {\n    this.tokens.length = this.state.tokensLength;\n    this.tokens.push(token);\n    ++this.state.tokensLength;\n  }\n\n  next() {\n    if (!this.isLookahead) {\n      this.checkKeywordEscapes();\n\n      if (this.options.tokens) {\n        this.pushToken(new Token(this.state));\n      }\n    }\n\n    this.state.lastTokEnd = this.state.end;\n    this.state.lastTokStart = this.state.start;\n    this.state.lastTokEndLoc = this.state.endLoc;\n    this.state.lastTokStartLoc = this.state.startLoc;\n    this.nextToken();\n  }\n\n  eat(type) {\n    if (this.match(type)) {\n      this.next();\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  match(type) {\n    return this.state.type === type;\n  }\n\n  lookahead() {\n    const old = this.state;\n    this.state = old.clone(true);\n    this.isLookahead = true;\n    this.next();\n    this.isLookahead = false;\n    const curr = this.state;\n    this.state = old;\n    return curr;\n  }\n\n  nextTokenStart() {\n    return this.nextTokenStartSince(this.state.pos);\n  }\n\n  nextTokenStartSince(pos) {\n    skipWhiteSpace.lastIndex = pos;\n    const skip = skipWhiteSpace.exec(this.input);\n    return pos + skip[0].length;\n  }\n\n  lookaheadCharCode() {\n    return this.input.charCodeAt(this.nextTokenStart());\n  }\n\n  codePointAtPos(pos) {\n    let cp = this.input.charCodeAt(pos);\n\n    if ((cp & 0xfc00) === 0xd800 && ++pos < this.input.length) {\n      const trail = this.input.charCodeAt(pos);\n\n      if ((trail & 0xfc00) === 0xdc00) {\n        cp = 0x10000 + ((cp & 0x3ff) << 10) + (trail & 0x3ff);\n      }\n    }\n\n    return cp;\n  }\n\n  setStrict(strict) {\n    this.state.strict = strict;\n\n    if (strict) {\n      this.state.strictErrors.forEach((message, pos) => this.raise(pos, message));\n      this.state.strictErrors.clear();\n    }\n  }\n\n  curContext() {\n    return this.state.context[this.state.context.length - 1];\n  }\n\n  nextToken() {\n    const curContext = this.curContext();\n    if (!(curContext != null && curContext.preserveSpace)) this.skipSpace();\n    this.state.start = this.state.pos;\n    this.state.startLoc = this.state.curPosition();\n\n    if (this.state.pos >= this.length) {\n      this.finishToken(types$1.eof);\n      return;\n    }\n\n    const override = curContext == null ? void 0 : curContext.override;\n\n    if (override) {\n      override(this);\n    } else {\n      this.getTokenFromCode(this.codePointAtPos(this.state.pos));\n    }\n  }\n\n  pushComment(block, text, start, end, startLoc, endLoc) {\n    const comment = {\n      type: block ? \"CommentBlock\" : \"CommentLine\",\n      value: text,\n      start: start,\n      end: end,\n      loc: new SourceLocation(startLoc, endLoc)\n    };\n    if (this.options.tokens) this.pushToken(comment);\n    this.state.comments.push(comment);\n    this.addComment(comment);\n  }\n\n  skipBlockComment() {\n    const startLoc = this.state.curPosition();\n    const start = this.state.pos;\n    const end = this.input.indexOf(\"*/\", this.state.pos + 2);\n    if (end === -1) throw this.raise(start, ErrorMessages.UnterminatedComment);\n    this.state.pos = end + 2;\n    lineBreakG.lastIndex = start;\n    let match;\n\n    while ((match = lineBreakG.exec(this.input)) && match.index < this.state.pos) {\n      ++this.state.curLine;\n      this.state.lineStart = match.index + match[0].length;\n    }\n\n    if (this.isLookahead) return;\n    this.pushComment(true, this.input.slice(start + 2, end), start, this.state.pos, startLoc, this.state.curPosition());\n  }\n\n  skipLineComment(startSkip) {\n    const start = this.state.pos;\n    const startLoc = this.state.curPosition();\n    let ch = this.input.charCodeAt(this.state.pos += startSkip);\n\n    if (this.state.pos < this.length) {\n      while (!isNewLine(ch) && ++this.state.pos < this.length) {\n        ch = this.input.charCodeAt(this.state.pos);\n      }\n    }\n\n    if (this.isLookahead) return;\n    this.pushComment(false, this.input.slice(start + startSkip, this.state.pos), start, this.state.pos, startLoc, this.state.curPosition());\n  }\n\n  skipSpace() {\n    loop: while (this.state.pos < this.length) {\n      const ch = this.input.charCodeAt(this.state.pos);\n\n      switch (ch) {\n        case 32:\n        case 160:\n        case 9:\n          ++this.state.pos;\n          break;\n\n        case 13:\n          if (this.input.charCodeAt(this.state.pos + 1) === 10) {\n            ++this.state.pos;\n          }\n\n        case 10:\n        case 8232:\n        case 8233:\n          ++this.state.pos;\n          ++this.state.curLine;\n          this.state.lineStart = this.state.pos;\n          break;\n\n        case 47:\n          switch (this.input.charCodeAt(this.state.pos + 1)) {\n            case 42:\n              this.skipBlockComment();\n              break;\n\n            case 47:\n              this.skipLineComment(2);\n              break;\n\n            default:\n              break loop;\n          }\n\n          break;\n\n        default:\n          if (isWhitespace(ch)) {\n            ++this.state.pos;\n          } else {\n            break loop;\n          }\n\n      }\n    }\n  }\n\n  finishToken(type, val) {\n    this.state.end = this.state.pos;\n    this.state.endLoc = this.state.curPosition();\n    const prevType = this.state.type;\n    this.state.type = type;\n    this.state.value = val;\n    if (!this.isLookahead) this.updateContext(prevType);\n  }\n\n  readToken_numberSign() {\n    if (this.state.pos === 0 && this.readToken_interpreter()) {\n      return;\n    }\n\n    const nextPos = this.state.pos + 1;\n    const next = this.codePointAtPos(nextPos);\n\n    if (next >= 48 && next <= 57) {\n      throw this.raise(this.state.pos, ErrorMessages.UnexpectedDigitAfterHash);\n    }\n\n    if (next === 123 || next === 91 && this.hasPlugin(\"recordAndTuple\")) {\n      this.expectPlugin(\"recordAndTuple\");\n\n      if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"hash\") {\n        throw this.raise(this.state.pos, next === 123 ? ErrorMessages.RecordExpressionHashIncorrectStartSyntaxType : ErrorMessages.TupleExpressionHashIncorrectStartSyntaxType);\n      }\n\n      if (next === 123) {\n        this.finishToken(types$1.braceHashL);\n      } else {\n        this.finishToken(types$1.bracketHashL);\n      }\n\n      this.state.pos += 2;\n    } else if (isIdentifierStart(next)) {\n      ++this.state.pos;\n      this.finishToken(types$1.privateName, this.readWord1(next));\n    } else if (next === 92) {\n      ++this.state.pos;\n      this.finishToken(types$1.privateName, this.readWord1());\n    } else {\n      this.finishOp(types$1.hash, 1);\n    }\n  }\n\n  readToken_dot() {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next >= 48 && next <= 57) {\n      this.readNumber(true);\n      return;\n    }\n\n    if (next === 46 && this.input.charCodeAt(this.state.pos + 2) === 46) {\n      this.state.pos += 3;\n      this.finishToken(types$1.ellipsis);\n    } else {\n      ++this.state.pos;\n      this.finishToken(types$1.dot);\n    }\n  }\n\n  readToken_slash() {\n    if (this.state.exprAllowed && !this.state.inType) {\n      ++this.state.pos;\n      this.readRegexp();\n      return;\n    }\n\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next === 61) {\n      this.finishOp(types$1.assign, 2);\n    } else {\n      this.finishOp(types$1.slash, 1);\n    }\n  }\n\n  readToken_interpreter() {\n    if (this.state.pos !== 0 || this.length < 2) return false;\n    let ch = this.input.charCodeAt(this.state.pos + 1);\n    if (ch !== 33) return false;\n    const start = this.state.pos;\n    this.state.pos += 1;\n\n    while (!isNewLine(ch) && ++this.state.pos < this.length) {\n      ch = this.input.charCodeAt(this.state.pos);\n    }\n\n    const value = this.input.slice(start + 2, this.state.pos);\n    this.finishToken(types$1.interpreterDirective, value);\n    return true;\n  }\n\n  readToken_mult_modulo(code) {\n    let type = code === 42 ? types$1.star : types$1.modulo;\n    let width = 1;\n    let next = this.input.charCodeAt(this.state.pos + 1);\n    const exprAllowed = this.state.exprAllowed;\n\n    if (code === 42 && next === 42) {\n      width++;\n      next = this.input.charCodeAt(this.state.pos + 2);\n      type = types$1.exponent;\n    }\n\n    if (next === 61 && !exprAllowed) {\n      width++;\n      type = types$1.assign;\n    }\n\n    this.finishOp(type, width);\n  }\n\n  readToken_pipe_amp(code) {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next === code) {\n      if (this.input.charCodeAt(this.state.pos + 2) === 61) {\n        this.finishOp(types$1.assign, 3);\n      } else {\n        this.finishOp(code === 124 ? types$1.logicalOR : types$1.logicalAND, 2);\n      }\n\n      return;\n    }\n\n    if (code === 124) {\n      if (next === 62) {\n        this.finishOp(types$1.pipeline, 2);\n        return;\n      }\n\n      if (this.hasPlugin(\"recordAndTuple\") && next === 125) {\n        if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n          throw this.raise(this.state.pos, ErrorMessages.RecordExpressionBarIncorrectEndSyntaxType);\n        }\n\n        this.finishOp(types$1.braceBarR, 2);\n        return;\n      }\n\n      if (this.hasPlugin(\"recordAndTuple\") && next === 93) {\n        if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n          throw this.raise(this.state.pos, ErrorMessages.TupleExpressionBarIncorrectEndSyntaxType);\n        }\n\n        this.finishOp(types$1.bracketBarR, 2);\n        return;\n      }\n    }\n\n    if (next === 61) {\n      this.finishOp(types$1.assign, 2);\n      return;\n    }\n\n    this.finishOp(code === 124 ? types$1.bitwiseOR : types$1.bitwiseAND, 1);\n  }\n\n  readToken_caret() {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next === 61) {\n      this.finishOp(types$1.assign, 2);\n    } else {\n      this.finishOp(types$1.bitwiseXOR, 1);\n    }\n  }\n\n  readToken_plus_min(code) {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next === code) {\n      if (next === 45 && !this.inModule && this.input.charCodeAt(this.state.pos + 2) === 62 && (this.state.lastTokEnd === 0 || this.hasPrecedingLineBreak())) {\n        this.skipLineComment(3);\n        this.skipSpace();\n        this.nextToken();\n        return;\n      }\n\n      this.finishOp(types$1.incDec, 2);\n      return;\n    }\n\n    if (next === 61) {\n      this.finishOp(types$1.assign, 2);\n    } else {\n      this.finishOp(types$1.plusMin, 1);\n    }\n  }\n\n  readToken_lt_gt(code) {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n    let size = 1;\n\n    if (next === code) {\n      size = code === 62 && this.input.charCodeAt(this.state.pos + 2) === 62 ? 3 : 2;\n\n      if (this.input.charCodeAt(this.state.pos + size) === 61) {\n        this.finishOp(types$1.assign, size + 1);\n        return;\n      }\n\n      this.finishOp(types$1.bitShift, size);\n      return;\n    }\n\n    if (next === 33 && code === 60 && !this.inModule && this.input.charCodeAt(this.state.pos + 2) === 45 && this.input.charCodeAt(this.state.pos + 3) === 45) {\n      this.skipLineComment(4);\n      this.skipSpace();\n      this.nextToken();\n      return;\n    }\n\n    if (next === 61) {\n      size = 2;\n    }\n\n    this.finishOp(types$1.relational, size);\n  }\n\n  readToken_eq_excl(code) {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next === 61) {\n      this.finishOp(types$1.equality, this.input.charCodeAt(this.state.pos + 2) === 61 ? 3 : 2);\n      return;\n    }\n\n    if (code === 61 && next === 62) {\n      this.state.pos += 2;\n      this.finishToken(types$1.arrow);\n      return;\n    }\n\n    this.finishOp(code === 61 ? types$1.eq : types$1.bang, 1);\n  }\n\n  readToken_question() {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n    const next2 = this.input.charCodeAt(this.state.pos + 2);\n\n    if (next === 63) {\n      if (next2 === 61) {\n        this.finishOp(types$1.assign, 3);\n      } else {\n        this.finishOp(types$1.nullishCoalescing, 2);\n      }\n    } else if (next === 46 && !(next2 >= 48 && next2 <= 57)) {\n      this.state.pos += 2;\n      this.finishToken(types$1.questionDot);\n    } else {\n      ++this.state.pos;\n      this.finishToken(types$1.question);\n    }\n  }\n\n  getTokenFromCode(code) {\n    switch (code) {\n      case 46:\n        this.readToken_dot();\n        return;\n\n      case 40:\n        ++this.state.pos;\n        this.finishToken(types$1.parenL);\n        return;\n\n      case 41:\n        ++this.state.pos;\n        this.finishToken(types$1.parenR);\n        return;\n\n      case 59:\n        ++this.state.pos;\n        this.finishToken(types$1.semi);\n        return;\n\n      case 44:\n        ++this.state.pos;\n        this.finishToken(types$1.comma);\n        return;\n\n      case 91:\n        if (this.hasPlugin(\"recordAndTuple\") && this.input.charCodeAt(this.state.pos + 1) === 124) {\n          if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n            throw this.raise(this.state.pos, ErrorMessages.TupleExpressionBarIncorrectStartSyntaxType);\n          }\n\n          this.finishToken(types$1.bracketBarL);\n          this.state.pos += 2;\n        } else {\n          ++this.state.pos;\n          this.finishToken(types$1.bracketL);\n        }\n\n        return;\n\n      case 93:\n        ++this.state.pos;\n        this.finishToken(types$1.bracketR);\n        return;\n\n      case 123:\n        if (this.hasPlugin(\"recordAndTuple\") && this.input.charCodeAt(this.state.pos + 1) === 124) {\n          if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n            throw this.raise(this.state.pos, ErrorMessages.RecordExpressionBarIncorrectStartSyntaxType);\n          }\n\n          this.finishToken(types$1.braceBarL);\n          this.state.pos += 2;\n        } else {\n          ++this.state.pos;\n          this.finishToken(types$1.braceL);\n        }\n\n        return;\n\n      case 125:\n        ++this.state.pos;\n        this.finishToken(types$1.braceR);\n        return;\n\n      case 58:\n        if (this.hasPlugin(\"functionBind\") && this.input.charCodeAt(this.state.pos + 1) === 58) {\n          this.finishOp(types$1.doubleColon, 2);\n        } else {\n          ++this.state.pos;\n          this.finishToken(types$1.colon);\n        }\n\n        return;\n\n      case 63:\n        this.readToken_question();\n        return;\n\n      case 96:\n        ++this.state.pos;\n        this.finishToken(types$1.backQuote);\n        return;\n\n      case 48:\n        {\n          const next = this.input.charCodeAt(this.state.pos + 1);\n\n          if (next === 120 || next === 88) {\n            this.readRadixNumber(16);\n            return;\n          }\n\n          if (next === 111 || next === 79) {\n            this.readRadixNumber(8);\n            return;\n          }\n\n          if (next === 98 || next === 66) {\n            this.readRadixNumber(2);\n            return;\n          }\n        }\n\n      case 49:\n      case 50:\n      case 51:\n      case 52:\n      case 53:\n      case 54:\n      case 55:\n      case 56:\n      case 57:\n        this.readNumber(false);\n        return;\n\n      case 34:\n      case 39:\n        this.readString(code);\n        return;\n\n      case 47:\n        this.readToken_slash();\n        return;\n\n      case 37:\n      case 42:\n        this.readToken_mult_modulo(code);\n        return;\n\n      case 124:\n      case 38:\n        this.readToken_pipe_amp(code);\n        return;\n\n      case 94:\n        this.readToken_caret();\n        return;\n\n      case 43:\n      case 45:\n        this.readToken_plus_min(code);\n        return;\n\n      case 60:\n      case 62:\n        this.readToken_lt_gt(code);\n        return;\n\n      case 61:\n      case 33:\n        this.readToken_eq_excl(code);\n        return;\n\n      case 126:\n        this.finishOp(types$1.tilde, 1);\n        return;\n\n      case 64:\n        ++this.state.pos;\n        this.finishToken(types$1.at);\n        return;\n\n      case 35:\n        this.readToken_numberSign();\n        return;\n\n      case 92:\n        this.readWord();\n        return;\n\n      default:\n        if (isIdentifierStart(code)) {\n          this.readWord(code);\n          return;\n        }\n\n    }\n\n    throw this.raise(this.state.pos, ErrorMessages.InvalidOrUnexpectedToken, String.fromCodePoint(code));\n  }\n\n  finishOp(type, size) {\n    const str = this.input.slice(this.state.pos, this.state.pos + size);\n    this.state.pos += size;\n    this.finishToken(type, str);\n  }\n\n  readRegexp() {\n    const start = this.state.pos;\n    let escaped, inClass;\n\n    for (;;) {\n      if (this.state.pos >= this.length) {\n        throw this.raise(start, ErrorMessages.UnterminatedRegExp);\n      }\n\n      const ch = this.input.charAt(this.state.pos);\n\n      if (lineBreak.test(ch)) {\n        throw this.raise(start, ErrorMessages.UnterminatedRegExp);\n      }\n\n      if (escaped) {\n        escaped = false;\n      } else {\n        if (ch === \"[\") {\n          inClass = true;\n        } else if (ch === \"]\" && inClass) {\n          inClass = false;\n        } else if (ch === \"/\" && !inClass) {\n          break;\n        }\n\n        escaped = ch === \"\\\\\";\n      }\n\n      ++this.state.pos;\n    }\n\n    const content = this.input.slice(start, this.state.pos);\n    ++this.state.pos;\n    let mods = \"\";\n\n    while (this.state.pos < this.length) {\n      const char = this.input[this.state.pos];\n      const charCode = this.codePointAtPos(this.state.pos);\n\n      if (VALID_REGEX_FLAGS.has(char)) {\n        if (mods.indexOf(char) > -1) {\n          this.raise(this.state.pos + 1, ErrorMessages.DuplicateRegExpFlags);\n        }\n      } else if (isIdentifierChar(charCode) || charCode === 92) {\n        this.raise(this.state.pos + 1, ErrorMessages.MalformedRegExpFlags);\n      } else {\n        break;\n      }\n\n      ++this.state.pos;\n      mods += char;\n    }\n\n    this.finishToken(types$1.regexp, {\n      pattern: content,\n      flags: mods\n    });\n  }\n\n  readInt(radix, len, forceLen, allowNumSeparator = true) {\n    const start = this.state.pos;\n    const forbiddenSiblings = radix === 16 ? forbiddenNumericSeparatorSiblings.hex : forbiddenNumericSeparatorSiblings.decBinOct;\n    const allowedSiblings = radix === 16 ? allowedNumericSeparatorSiblings.hex : radix === 10 ? allowedNumericSeparatorSiblings.dec : radix === 8 ? allowedNumericSeparatorSiblings.oct : allowedNumericSeparatorSiblings.bin;\n    let invalid = false;\n    let total = 0;\n\n    for (let i = 0, e = len == null ? Infinity : len; i < e; ++i) {\n      const code = this.input.charCodeAt(this.state.pos);\n      let val;\n\n      if (code === 95) {\n        const prev = this.input.charCodeAt(this.state.pos - 1);\n        const next = this.input.charCodeAt(this.state.pos + 1);\n\n        if (allowedSiblings.indexOf(next) === -1) {\n          this.raise(this.state.pos, ErrorMessages.UnexpectedNumericSeparator);\n        } else if (forbiddenSiblings.indexOf(prev) > -1 || forbiddenSiblings.indexOf(next) > -1 || Number.isNaN(next)) {\n          this.raise(this.state.pos, ErrorMessages.UnexpectedNumericSeparator);\n        }\n\n        if (!allowNumSeparator) {\n          this.raise(this.state.pos, ErrorMessages.NumericSeparatorInEscapeSequence);\n        }\n\n        ++this.state.pos;\n        continue;\n      }\n\n      if (code >= 97) {\n        val = code - 97 + 10;\n      } else if (code >= 65) {\n        val = code - 65 + 10;\n      } else if (_isDigit(code)) {\n        val = code - 48;\n      } else {\n        val = Infinity;\n      }\n\n      if (val >= radix) {\n        if (this.options.errorRecovery && val <= 9) {\n          val = 0;\n          this.raise(this.state.start + i + 2, ErrorMessages.InvalidDigit, radix);\n        } else if (forceLen) {\n          val = 0;\n          invalid = true;\n        } else {\n          break;\n        }\n      }\n\n      ++this.state.pos;\n      total = total * radix + val;\n    }\n\n    if (this.state.pos === start || len != null && this.state.pos - start !== len || invalid) {\n      return null;\n    }\n\n    return total;\n  }\n\n  readRadixNumber(radix) {\n    const start = this.state.pos;\n    let isBigInt = false;\n    this.state.pos += 2;\n    const val = this.readInt(radix);\n\n    if (val == null) {\n      this.raise(this.state.start + 2, ErrorMessages.InvalidDigit, radix);\n    }\n\n    const next = this.input.charCodeAt(this.state.pos);\n\n    if (next === 110) {\n      ++this.state.pos;\n      isBigInt = true;\n    } else if (next === 109) {\n      throw this.raise(start, ErrorMessages.InvalidDecimal);\n    }\n\n    if (isIdentifierStart(this.codePointAtPos(this.state.pos))) {\n      throw this.raise(this.state.pos, ErrorMessages.NumberIdentifier);\n    }\n\n    if (isBigInt) {\n      const str = this.input.slice(start, this.state.pos).replace(/[_n]/g, \"\");\n      this.finishToken(types$1.bigint, str);\n      return;\n    }\n\n    this.finishToken(types$1.num, val);\n  }\n\n  readNumber(startsWithDot) {\n    const start = this.state.pos;\n    let isFloat = false;\n    let isBigInt = false;\n    let isDecimal = false;\n    let hasExponent = false;\n    let isOctal = false;\n\n    if (!startsWithDot && this.readInt(10) === null) {\n      this.raise(start, ErrorMessages.InvalidNumber);\n    }\n\n    const hasLeadingZero = this.state.pos - start >= 2 && this.input.charCodeAt(start) === 48;\n\n    if (hasLeadingZero) {\n      const integer = this.input.slice(start, this.state.pos);\n      this.recordStrictModeErrors(start, ErrorMessages.StrictOctalLiteral);\n\n      if (!this.state.strict) {\n        const underscorePos = integer.indexOf(\"_\");\n\n        if (underscorePos > 0) {\n          this.raise(underscorePos + start, ErrorMessages.ZeroDigitNumericSeparator);\n        }\n      }\n\n      isOctal = hasLeadingZero && !/[89]/.test(integer);\n    }\n\n    let next = this.input.charCodeAt(this.state.pos);\n\n    if (next === 46 && !isOctal) {\n      ++this.state.pos;\n      this.readInt(10);\n      isFloat = true;\n      next = this.input.charCodeAt(this.state.pos);\n    }\n\n    if ((next === 69 || next === 101) && !isOctal) {\n      next = this.input.charCodeAt(++this.state.pos);\n\n      if (next === 43 || next === 45) {\n        ++this.state.pos;\n      }\n\n      if (this.readInt(10) === null) {\n        this.raise(start, ErrorMessages.InvalidOrMissingExponent);\n      }\n\n      isFloat = true;\n      hasExponent = true;\n      next = this.input.charCodeAt(this.state.pos);\n    }\n\n    if (next === 110) {\n      if (isFloat || hasLeadingZero) {\n        this.raise(start, ErrorMessages.InvalidBigIntLiteral);\n      }\n\n      ++this.state.pos;\n      isBigInt = true;\n    }\n\n    if (next === 109) {\n      this.expectPlugin(\"decimal\", this.state.pos);\n\n      if (hasExponent || hasLeadingZero) {\n        this.raise(start, ErrorMessages.InvalidDecimal);\n      }\n\n      ++this.state.pos;\n      isDecimal = true;\n    }\n\n    if (isIdentifierStart(this.codePointAtPos(this.state.pos))) {\n      throw this.raise(this.state.pos, ErrorMessages.NumberIdentifier);\n    }\n\n    const str = this.input.slice(start, this.state.pos).replace(/[_mn]/g, \"\");\n\n    if (isBigInt) {\n      this.finishToken(types$1.bigint, str);\n      return;\n    }\n\n    if (isDecimal) {\n      this.finishToken(types$1.decimal, str);\n      return;\n    }\n\n    const val = isOctal ? parseInt(str, 8) : parseFloat(str);\n    this.finishToken(types$1.num, val);\n  }\n\n  readCodePoint(throwOnInvalid) {\n    const ch = this.input.charCodeAt(this.state.pos);\n    let code;\n\n    if (ch === 123) {\n      const codePos = ++this.state.pos;\n      code = this.readHexChar(this.input.indexOf(\"}\", this.state.pos) - this.state.pos, true, throwOnInvalid);\n      ++this.state.pos;\n\n      if (code !== null && code > 0x10ffff) {\n        if (throwOnInvalid) {\n          this.raise(codePos, ErrorMessages.InvalidCodePoint);\n        } else {\n          return null;\n        }\n      }\n    } else {\n      code = this.readHexChar(4, false, throwOnInvalid);\n    }\n\n    return code;\n  }\n\n  readString(quote) {\n    let out = \"\",\n        chunkStart = ++this.state.pos;\n\n    for (;;) {\n      if (this.state.pos >= this.length) {\n        throw this.raise(this.state.start, ErrorMessages.UnterminatedString);\n      }\n\n      const ch = this.input.charCodeAt(this.state.pos);\n      if (ch === quote) break;\n\n      if (ch === 92) {\n        out += this.input.slice(chunkStart, this.state.pos);\n        out += this.readEscapedChar(false);\n        chunkStart = this.state.pos;\n      } else if (ch === 8232 || ch === 8233) {\n        ++this.state.pos;\n        ++this.state.curLine;\n        this.state.lineStart = this.state.pos;\n      } else if (isNewLine(ch)) {\n        throw this.raise(this.state.start, ErrorMessages.UnterminatedString);\n      } else {\n        ++this.state.pos;\n      }\n    }\n\n    out += this.input.slice(chunkStart, this.state.pos++);\n    this.finishToken(types$1.string, out);\n  }\n\n  readTmplToken() {\n    let out = \"\",\n        chunkStart = this.state.pos,\n        containsInvalid = false;\n\n    for (;;) {\n      if (this.state.pos >= this.length) {\n        throw this.raise(this.state.start, ErrorMessages.UnterminatedTemplate);\n      }\n\n      const ch = this.input.charCodeAt(this.state.pos);\n\n      if (ch === 96 || ch === 36 && this.input.charCodeAt(this.state.pos + 1) === 123) {\n        if (this.state.pos === this.state.start && this.match(types$1.template)) {\n          if (ch === 36) {\n            this.state.pos += 2;\n            this.finishToken(types$1.dollarBraceL);\n            return;\n          } else {\n            ++this.state.pos;\n            this.finishToken(types$1.backQuote);\n            return;\n          }\n        }\n\n        out += this.input.slice(chunkStart, this.state.pos);\n        this.finishToken(types$1.template, containsInvalid ? null : out);\n        return;\n      }\n\n      if (ch === 92) {\n        out += this.input.slice(chunkStart, this.state.pos);\n        const escaped = this.readEscapedChar(true);\n\n        if (escaped === null) {\n          containsInvalid = true;\n        } else {\n          out += escaped;\n        }\n\n        chunkStart = this.state.pos;\n      } else if (isNewLine(ch)) {\n        out += this.input.slice(chunkStart, this.state.pos);\n        ++this.state.pos;\n\n        switch (ch) {\n          case 13:\n            if (this.input.charCodeAt(this.state.pos) === 10) {\n              ++this.state.pos;\n            }\n\n          case 10:\n            out += \"\\n\";\n            break;\n\n          default:\n            out += String.fromCharCode(ch);\n            break;\n        }\n\n        ++this.state.curLine;\n        this.state.lineStart = this.state.pos;\n        chunkStart = this.state.pos;\n      } else {\n        ++this.state.pos;\n      }\n    }\n  }\n\n  recordStrictModeErrors(pos, message) {\n    if (this.state.strict && !this.state.strictErrors.has(pos)) {\n      this.raise(pos, message);\n    } else {\n      this.state.strictErrors.set(pos, message);\n    }\n  }\n\n  readEscapedChar(inTemplate) {\n    const throwOnInvalid = !inTemplate;\n    const ch = this.input.charCodeAt(++this.state.pos);\n    ++this.state.pos;\n\n    switch (ch) {\n      case 110:\n        return \"\\n\";\n\n      case 114:\n        return \"\\r\";\n\n      case 120:\n        {\n          const code = this.readHexChar(2, false, throwOnInvalid);\n          return code === null ? null : String.fromCharCode(code);\n        }\n\n      case 117:\n        {\n          const code = this.readCodePoint(throwOnInvalid);\n          return code === null ? null : String.fromCodePoint(code);\n        }\n\n      case 116:\n        return \"\\t\";\n\n      case 98:\n        return \"\\b\";\n\n      case 118:\n        return \"\\u000b\";\n\n      case 102:\n        return \"\\f\";\n\n      case 13:\n        if (this.input.charCodeAt(this.state.pos) === 10) {\n          ++this.state.pos;\n        }\n\n      case 10:\n        this.state.lineStart = this.state.pos;\n        ++this.state.curLine;\n\n      case 8232:\n      case 8233:\n        return \"\";\n\n      case 56:\n      case 57:\n        if (inTemplate) {\n          return null;\n        } else {\n          this.recordStrictModeErrors(this.state.pos - 1, ErrorMessages.StrictNumericEscape);\n        }\n\n      default:\n        if (ch >= 48 && ch <= 55) {\n          const codePos = this.state.pos - 1;\n          const match = this.input.substr(this.state.pos - 1, 3).match(/^[0-7]+/);\n          let octalStr = match[0];\n          let octal = parseInt(octalStr, 8);\n\n          if (octal > 255) {\n            octalStr = octalStr.slice(0, -1);\n            octal = parseInt(octalStr, 8);\n          }\n\n          this.state.pos += octalStr.length - 1;\n          const next = this.input.charCodeAt(this.state.pos);\n\n          if (octalStr !== \"0\" || next === 56 || next === 57) {\n            if (inTemplate) {\n              return null;\n            } else {\n              this.recordStrictModeErrors(codePos, ErrorMessages.StrictNumericEscape);\n            }\n          }\n\n          return String.fromCharCode(octal);\n        }\n\n        return String.fromCharCode(ch);\n    }\n  }\n\n  readHexChar(len, forceLen, throwOnInvalid) {\n    const codePos = this.state.pos;\n    const n = this.readInt(16, len, forceLen, false);\n\n    if (n === null) {\n      if (throwOnInvalid) {\n        this.raise(codePos, ErrorMessages.InvalidEscapeSequence);\n      } else {\n        this.state.pos = codePos - 1;\n      }\n    }\n\n    return n;\n  }\n\n  readWord1(firstCode) {\n    this.state.containsEsc = false;\n    let word = \"\";\n    const start = this.state.pos;\n    let chunkStart = this.state.pos;\n\n    if (firstCode !== undefined) {\n      this.state.pos += firstCode <= 0xffff ? 1 : 2;\n    }\n\n    while (this.state.pos < this.length) {\n      const ch = this.codePointAtPos(this.state.pos);\n\n      if (isIdentifierChar(ch)) {\n        this.state.pos += ch <= 0xffff ? 1 : 2;\n      } else if (ch === 92) {\n        this.state.containsEsc = true;\n        word += this.input.slice(chunkStart, this.state.pos);\n        const escStart = this.state.pos;\n        const identifierCheck = this.state.pos === start ? isIdentifierStart : isIdentifierChar;\n\n        if (this.input.charCodeAt(++this.state.pos) !== 117) {\n          this.raise(this.state.pos, ErrorMessages.MissingUnicodeEscape);\n          chunkStart = this.state.pos - 1;\n          continue;\n        }\n\n        ++this.state.pos;\n        const esc = this.readCodePoint(true);\n\n        if (esc !== null) {\n          if (!identifierCheck(esc)) {\n            this.raise(escStart, ErrorMessages.EscapedCharNotAnIdentifier);\n          }\n\n          word += String.fromCodePoint(esc);\n        }\n\n        chunkStart = this.state.pos;\n      } else {\n        break;\n      }\n    }\n\n    return word + this.input.slice(chunkStart, this.state.pos);\n  }\n\n  readWord(firstCode) {\n    const word = this.readWord1(firstCode);\n    const type = keywords$1.get(word) || types$1.name;\n    this.finishToken(type, word);\n  }\n\n  checkKeywordEscapes() {\n    const kw = this.state.type.keyword;\n\n    if (kw && this.state.containsEsc) {\n      this.raise(this.state.start, ErrorMessages.InvalidEscapedReservedWord, kw);\n    }\n  }\n\n  braceIsBlock(prevType) {\n    const parent = this.curContext();\n\n    if (parent === types.functionExpression || parent === types.functionStatement) {\n      return true;\n    }\n\n    if (prevType === types$1.colon && (parent === types.braceStatement || parent === types.braceExpression)) {\n      return !parent.isExpr;\n    }\n\n    if (prevType === types$1._return || prevType === types$1.name && this.state.exprAllowed) {\n      return this.hasPrecedingLineBreak();\n    }\n\n    if (prevType === types$1._else || prevType === types$1.semi || prevType === types$1.eof || prevType === types$1.parenR || prevType === types$1.arrow) {\n      return true;\n    }\n\n    if (prevType === types$1.braceL) {\n      return parent === types.braceStatement;\n    }\n\n    if (prevType === types$1._var || prevType === types$1._const || prevType === types$1.name) {\n      return false;\n    }\n\n    if (prevType === types$1.relational) {\n      return true;\n    }\n\n    return !this.state.exprAllowed;\n  }\n\n  updateContext(prevType) {\n    const type = this.state.type;\n    let update;\n\n    if (type.keyword && (prevType === types$1.dot || prevType === types$1.questionDot)) {\n      this.state.exprAllowed = false;\n    } else if (update = type.updateContext) {\n      update.call(this, prevType);\n    } else {\n      this.state.exprAllowed = type.beforeExpr;\n    }\n  }\n\n}\n\nclass ClassScope {\n  constructor() {\n    this.privateNames = new Set();\n    this.loneAccessors = new Map();\n    this.undefinedPrivateNames = new Map();\n  }\n\n}\nclass ClassScopeHandler {\n  constructor(raise) {\n    this.stack = [];\n    this.undefinedPrivateNames = new Map();\n    this.raise = raise;\n  }\n\n  current() {\n    return this.stack[this.stack.length - 1];\n  }\n\n  enter() {\n    this.stack.push(new ClassScope());\n  }\n\n  exit() {\n    const oldClassScope = this.stack.pop();\n    const current = this.current();\n\n    for (const [name, pos] of Array.from(oldClassScope.undefinedPrivateNames)) {\n      if (current) {\n        if (!current.undefinedPrivateNames.has(name)) {\n          current.undefinedPrivateNames.set(name, pos);\n        }\n      } else {\n        this.raise(pos, ErrorMessages.InvalidPrivateFieldResolution, name);\n      }\n    }\n  }\n\n  declarePrivateName(name, elementType, pos) {\n    const classScope = this.current();\n    let redefined = classScope.privateNames.has(name);\n\n    if (elementType & CLASS_ELEMENT_KIND_ACCESSOR) {\n      const accessor = redefined && classScope.loneAccessors.get(name);\n\n      if (accessor) {\n        const oldStatic = accessor & CLASS_ELEMENT_FLAG_STATIC;\n        const newStatic = elementType & CLASS_ELEMENT_FLAG_STATIC;\n        const oldKind = accessor & CLASS_ELEMENT_KIND_ACCESSOR;\n        const newKind = elementType & CLASS_ELEMENT_KIND_ACCESSOR;\n        redefined = oldKind === newKind || oldStatic !== newStatic;\n        if (!redefined) classScope.loneAccessors.delete(name);\n      } else if (!redefined) {\n        classScope.loneAccessors.set(name, elementType);\n      }\n    }\n\n    if (redefined) {\n      this.raise(pos, ErrorMessages.PrivateNameRedeclaration, name);\n    }\n\n    classScope.privateNames.add(name);\n    classScope.undefinedPrivateNames.delete(name);\n  }\n\n  usePrivateName(name, pos) {\n    let classScope;\n\n    for (classScope of this.stack) {\n      if (classScope.privateNames.has(name)) return;\n    }\n\n    if (classScope) {\n      classScope.undefinedPrivateNames.set(name, pos);\n    } else {\n      this.raise(pos, ErrorMessages.InvalidPrivateFieldResolution, name);\n    }\n  }\n\n}\n\nconst kExpression = 0,\n      kMaybeArrowParameterDeclaration = 1,\n      kMaybeAsyncArrowParameterDeclaration = 2,\n      kParameterDeclaration = 3;\n\nclass ExpressionScope {\n  constructor(type = kExpression) {\n    this.type = void 0;\n    this.type = type;\n  }\n\n  canBeArrowParameterDeclaration() {\n    return this.type === kMaybeAsyncArrowParameterDeclaration || this.type === kMaybeArrowParameterDeclaration;\n  }\n\n  isCertainlyParameterDeclaration() {\n    return this.type === kParameterDeclaration;\n  }\n\n}\n\nclass ArrowHeadParsingScope extends ExpressionScope {\n  constructor(type) {\n    super(type);\n    this.errors = new Map();\n  }\n\n  recordDeclarationError(pos, template) {\n    this.errors.set(pos, template);\n  }\n\n  clearDeclarationError(pos) {\n    this.errors.delete(pos);\n  }\n\n  iterateErrors(iterator) {\n    this.errors.forEach(iterator);\n  }\n\n}\n\nclass ExpressionScopeHandler {\n  constructor(raise) {\n    this.stack = [new ExpressionScope()];\n    this.raise = raise;\n  }\n\n  enter(scope) {\n    this.stack.push(scope);\n  }\n\n  exit() {\n    this.stack.pop();\n  }\n\n  recordParameterInitializerError(pos, template) {\n    const {\n      stack\n    } = this;\n    let i = stack.length - 1;\n    let scope = stack[i];\n\n    while (!scope.isCertainlyParameterDeclaration()) {\n      if (scope.canBeArrowParameterDeclaration()) {\n        scope.recordDeclarationError(pos, template);\n      } else {\n        return;\n      }\n\n      scope = stack[--i];\n    }\n\n    this.raise(pos, template);\n  }\n\n  recordParenthesizedIdentifierError(pos, template) {\n    const {\n      stack\n    } = this;\n    const scope = stack[stack.length - 1];\n\n    if (scope.isCertainlyParameterDeclaration()) {\n      this.raise(pos, template);\n    } else if (scope.canBeArrowParameterDeclaration()) {\n      scope.recordDeclarationError(pos, template);\n    } else {\n      return;\n    }\n  }\n\n  recordAsyncArrowParametersError(pos, template) {\n    const {\n      stack\n    } = this;\n    let i = stack.length - 1;\n    let scope = stack[i];\n\n    while (scope.canBeArrowParameterDeclaration()) {\n      if (scope.type === kMaybeAsyncArrowParameterDeclaration) {\n        scope.recordDeclarationError(pos, template);\n      }\n\n      scope = stack[--i];\n    }\n  }\n\n  validateAsPattern() {\n    const {\n      stack\n    } = this;\n    const currentScope = stack[stack.length - 1];\n    if (!currentScope.canBeArrowParameterDeclaration()) return;\n    currentScope.iterateErrors((template, pos) => {\n      this.raise(pos, template);\n      let i = stack.length - 2;\n      let scope = stack[i];\n\n      while (scope.canBeArrowParameterDeclaration()) {\n        scope.clearDeclarationError(pos);\n        scope = stack[--i];\n      }\n    });\n  }\n\n}\nfunction newParameterDeclarationScope() {\n  return new ExpressionScope(kParameterDeclaration);\n}\nfunction newArrowHeadScope() {\n  return new ArrowHeadParsingScope(kMaybeArrowParameterDeclaration);\n}\nfunction newAsyncArrowScope() {\n  return new ArrowHeadParsingScope(kMaybeAsyncArrowParameterDeclaration);\n}\nfunction newExpressionScope() {\n  return new ExpressionScope();\n}\n\nclass UtilParser extends Tokenizer {\n  addExtra(node, key, val) {\n    if (!node) return;\n    const extra = node.extra = node.extra || {};\n    extra[key] = val;\n  }\n\n  isRelational(op) {\n    return this.match(types$1.relational) && this.state.value === op;\n  }\n\n  expectRelational(op) {\n    if (this.isRelational(op)) {\n      this.next();\n    } else {\n      this.unexpected(null, types$1.relational);\n    }\n  }\n\n  isContextual(name) {\n    return this.match(types$1.name) && this.state.value === name && !this.state.containsEsc;\n  }\n\n  isUnparsedContextual(nameStart, name) {\n    const nameEnd = nameStart + name.length;\n    return this.input.slice(nameStart, nameEnd) === name && (nameEnd === this.input.length || !isIdentifierChar(this.input.charCodeAt(nameEnd)));\n  }\n\n  isLookaheadContextual(name) {\n    const next = this.nextTokenStart();\n    return this.isUnparsedContextual(next, name);\n  }\n\n  eatContextual(name) {\n    return this.isContextual(name) && this.eat(types$1.name);\n  }\n\n  expectContextual(name, template) {\n    if (!this.eatContextual(name)) this.unexpected(null, template);\n  }\n\n  canInsertSemicolon() {\n    return this.match(types$1.eof) || this.match(types$1.braceR) || this.hasPrecedingLineBreak();\n  }\n\n  hasPrecedingLineBreak() {\n    return lineBreak.test(this.input.slice(this.state.lastTokEnd, this.state.start));\n  }\n\n  hasFollowingLineBreak() {\n    return lineBreak.test(this.input.slice(this.state.end, this.nextTokenStart()));\n  }\n\n  isLineTerminator() {\n    return this.eat(types$1.semi) || this.canInsertSemicolon();\n  }\n\n  semicolon(allowAsi = true) {\n    if (allowAsi ? this.isLineTerminator() : this.eat(types$1.semi)) return;\n    this.raise(this.state.lastTokEnd, ErrorMessages.MissingSemicolon);\n  }\n\n  expect(type, pos) {\n    this.eat(type) || this.unexpected(pos, type);\n  }\n\n  assertNoSpace(message = \"Unexpected space.\") {\n    if (this.state.start > this.state.lastTokEnd) {\n      this.raise(this.state.lastTokEnd, {\n        code: ErrorCodes.SyntaxError,\n        reasonCode: \"UnexpectedSpace\",\n        template: message\n      });\n    }\n  }\n\n  unexpected(pos, messageOrType = {\n    code: ErrorCodes.SyntaxError,\n    reasonCode: \"UnexpectedToken\",\n    template: \"Unexpected token\"\n  }) {\n    if (messageOrType instanceof TokenType) {\n      messageOrType = {\n        code: ErrorCodes.SyntaxError,\n        reasonCode: \"UnexpectedToken\",\n        template: `Unexpected token, expected \"${messageOrType.label}\"`\n      };\n    }\n\n    throw this.raise(pos != null ? pos : this.state.start, messageOrType);\n  }\n\n  expectPlugin(name, pos) {\n    if (!this.hasPlugin(name)) {\n      throw this.raiseWithData(pos != null ? pos : this.state.start, {\n        missingPlugin: [name]\n      }, `This experimental syntax requires enabling the parser plugin: '${name}'`);\n    }\n\n    return true;\n  }\n\n  expectOnePlugin(names, pos) {\n    if (!names.some(n => this.hasPlugin(n))) {\n      throw this.raiseWithData(pos != null ? pos : this.state.start, {\n        missingPlugin: names\n      }, `This experimental syntax requires enabling one of the following parser plugin(s): '${names.join(\", \")}'`);\n    }\n  }\n\n  tryParse(fn, oldState = this.state.clone()) {\n    const abortSignal = {\n      node: null\n    };\n\n    try {\n      const node = fn((node = null) => {\n        abortSignal.node = node;\n        throw abortSignal;\n      });\n\n      if (this.state.errors.length > oldState.errors.length) {\n        const failState = this.state;\n        this.state = oldState;\n        return {\n          node,\n          error: failState.errors[oldState.errors.length],\n          thrown: false,\n          aborted: false,\n          failState\n        };\n      }\n\n      return {\n        node,\n        error: null,\n        thrown: false,\n        aborted: false,\n        failState: null\n      };\n    } catch (error) {\n      const failState = this.state;\n      this.state = oldState;\n\n      if (error instanceof SyntaxError) {\n        return {\n          node: null,\n          error,\n          thrown: true,\n          aborted: false,\n          failState\n        };\n      }\n\n      if (error === abortSignal) {\n        return {\n          node: abortSignal.node,\n          error: null,\n          thrown: false,\n          aborted: true,\n          failState\n        };\n      }\n\n      throw error;\n    }\n  }\n\n  checkExpressionErrors(refExpressionErrors, andThrow) {\n    if (!refExpressionErrors) return false;\n    const {\n      shorthandAssign,\n      doubleProto\n    } = refExpressionErrors;\n    if (!andThrow) return shorthandAssign >= 0 || doubleProto >= 0;\n\n    if (shorthandAssign >= 0) {\n      this.unexpected(shorthandAssign);\n    }\n\n    if (doubleProto >= 0) {\n      this.raise(doubleProto, ErrorMessages.DuplicateProto);\n    }\n  }\n\n  isLiteralPropertyName() {\n    return this.match(types$1.name) || !!this.state.type.keyword || this.match(types$1.string) || this.match(types$1.num) || this.match(types$1.bigint) || this.match(types$1.decimal);\n  }\n\n  isPrivateName(node) {\n    return node.type === \"PrivateName\";\n  }\n\n  getPrivateNameSV(node) {\n    return node.id.name;\n  }\n\n  hasPropertyAsPrivateName(node) {\n    return (node.type === \"MemberExpression\" || node.type === \"OptionalMemberExpression\") && this.isPrivateName(node.property);\n  }\n\n  isOptionalChain(node) {\n    return node.type === \"OptionalMemberExpression\" || node.type === \"OptionalCallExpression\";\n  }\n\n  isObjectProperty(node) {\n    return node.type === \"ObjectProperty\";\n  }\n\n  isObjectMethod(node) {\n    return node.type === \"ObjectMethod\";\n  }\n\n  initializeScopes(inModule = this.options.sourceType === \"module\") {\n    const oldLabels = this.state.labels;\n    this.state.labels = [];\n    const oldExportedIdentifiers = this.state.exportedIdentifiers;\n    this.state.exportedIdentifiers = [];\n    const oldInModule = this.inModule;\n    this.inModule = inModule;\n    const oldScope = this.scope;\n    const ScopeHandler = this.getScopeHandler();\n    this.scope = new ScopeHandler(this.raise.bind(this), this.inModule);\n    const oldProdParam = this.prodParam;\n    this.prodParam = new ProductionParameterHandler();\n    const oldClassScope = this.classScope;\n    this.classScope = new ClassScopeHandler(this.raise.bind(this));\n    const oldExpressionScope = this.expressionScope;\n    this.expressionScope = new ExpressionScopeHandler(this.raise.bind(this));\n    return () => {\n      this.state.labels = oldLabels;\n      this.state.exportedIdentifiers = oldExportedIdentifiers;\n      this.inModule = oldInModule;\n      this.scope = oldScope;\n      this.prodParam = oldProdParam;\n      this.classScope = oldClassScope;\n      this.expressionScope = oldExpressionScope;\n    };\n  }\n\n  enterInitialScopes() {\n    let paramFlags = PARAM;\n\n    if (this.hasPlugin(\"topLevelAwait\") && this.inModule) {\n      paramFlags |= PARAM_AWAIT;\n    }\n\n    this.scope.enter(SCOPE_PROGRAM);\n    this.prodParam.enter(paramFlags);\n  }\n\n}\nclass ExpressionErrors {\n  constructor() {\n    this.shorthandAssign = -1;\n    this.doubleProto = -1;\n  }\n\n}\n\nclass Node {\n  constructor(parser, pos, loc) {\n    this.type = void 0;\n    this.start = void 0;\n    this.end = void 0;\n    this.loc = void 0;\n    this.range = void 0;\n    this.leadingComments = void 0;\n    this.trailingComments = void 0;\n    this.innerComments = void 0;\n    this.extra = void 0;\n    this.type = \"\";\n    this.start = pos;\n    this.end = 0;\n    this.loc = new SourceLocation(loc);\n    if (parser != null && parser.options.ranges) this.range = [pos, 0];\n    if (parser != null && parser.filename) this.loc.filename = parser.filename;\n  }\n\n  __clone() {\n    const newNode = new Node();\n    const keys = Object.keys(this);\n\n    for (let i = 0, length = keys.length; i < length; i++) {\n      const key = keys[i];\n\n      if (key !== \"leadingComments\" && key !== \"trailingComments\" && key !== \"innerComments\") {\n        newNode[key] = this[key];\n      }\n    }\n\n    return newNode;\n  }\n\n}\n\nclass NodeUtils extends UtilParser {\n  startNode() {\n    return new Node(this, this.state.start, this.state.startLoc);\n  }\n\n  startNodeAt(pos, loc) {\n    return new Node(this, pos, loc);\n  }\n\n  startNodeAtNode(type) {\n    return this.startNodeAt(type.start, type.loc.start);\n  }\n\n  finishNode(node, type) {\n    return this.finishNodeAt(node, type, this.state.lastTokEnd, this.state.lastTokEndLoc);\n  }\n\n  finishNodeAt(node, type, pos, loc) {\n\n    node.type = type;\n    node.end = pos;\n    node.loc.end = loc;\n    if (this.options.ranges) node.range[1] = pos;\n    this.processComment(node);\n    return node;\n  }\n\n  resetStartLocation(node, start, startLoc) {\n    node.start = start;\n    node.loc.start = startLoc;\n    if (this.options.ranges) node.range[0] = start;\n  }\n\n  resetEndLocation(node, end = this.state.lastTokEnd, endLoc = this.state.lastTokEndLoc) {\n    node.end = end;\n    node.loc.end = endLoc;\n    if (this.options.ranges) node.range[1] = end;\n  }\n\n  resetStartLocationFromNode(node, locationNode) {\n    this.resetStartLocation(node, locationNode.start, locationNode.loc.start);\n  }\n\n}\n\nconst unwrapParenthesizedExpression = node => {\n  return node.type === \"ParenthesizedExpression\" ? unwrapParenthesizedExpression(node.expression) : node;\n};\n\nclass LValParser extends NodeUtils {\n  toAssignable(node, isLHS = false) {\n    var _node$extra, _node$extra3;\n\n    let parenthesized = undefined;\n\n    if (node.type === \"ParenthesizedExpression\" || (_node$extra = node.extra) != null && _node$extra.parenthesized) {\n      parenthesized = unwrapParenthesizedExpression(node);\n\n      if (isLHS) {\n        if (parenthesized.type === \"Identifier\") {\n          this.expressionScope.recordParenthesizedIdentifierError(node.start, ErrorMessages.InvalidParenthesizedAssignment);\n        } else if (parenthesized.type !== \"MemberExpression\") {\n          this.raise(node.start, ErrorMessages.InvalidParenthesizedAssignment);\n        }\n      } else {\n        this.raise(node.start, ErrorMessages.InvalidParenthesizedAssignment);\n      }\n    }\n\n    switch (node.type) {\n      case \"Identifier\":\n      case \"ObjectPattern\":\n      case \"ArrayPattern\":\n      case \"AssignmentPattern\":\n        break;\n\n      case \"ObjectExpression\":\n        node.type = \"ObjectPattern\";\n\n        for (let i = 0, length = node.properties.length, last = length - 1; i < length; i++) {\n          var _node$extra2;\n\n          const prop = node.properties[i];\n          const isLast = i === last;\n          this.toAssignableObjectExpressionProp(prop, isLast, isLHS);\n\n          if (isLast && prop.type === \"RestElement\" && (_node$extra2 = node.extra) != null && _node$extra2.trailingComma) {\n            this.raiseRestNotLast(node.extra.trailingComma);\n          }\n        }\n\n        break;\n\n      case \"ObjectProperty\":\n        this.toAssignable(node.value, isLHS);\n        break;\n\n      case \"SpreadElement\":\n        {\n          this.checkToRestConversion(node);\n          node.type = \"RestElement\";\n          const arg = node.argument;\n          this.toAssignable(arg, isLHS);\n          break;\n        }\n\n      case \"ArrayExpression\":\n        node.type = \"ArrayPattern\";\n        this.toAssignableList(node.elements, (_node$extra3 = node.extra) == null ? void 0 : _node$extra3.trailingComma, isLHS);\n        break;\n\n      case \"AssignmentExpression\":\n        if (node.operator !== \"=\") {\n          this.raise(node.left.end, ErrorMessages.MissingEqInAssignment);\n        }\n\n        node.type = \"AssignmentPattern\";\n        delete node.operator;\n        this.toAssignable(node.left, isLHS);\n        break;\n\n      case \"ParenthesizedExpression\":\n        this.toAssignable(parenthesized, isLHS);\n        break;\n    }\n\n    return node;\n  }\n\n  toAssignableObjectExpressionProp(prop, isLast, isLHS) {\n    if (prop.type === \"ObjectMethod\") {\n      const error = prop.kind === \"get\" || prop.kind === \"set\" ? ErrorMessages.PatternHasAccessor : ErrorMessages.PatternHasMethod;\n      this.raise(prop.key.start, error);\n    } else if (prop.type === \"SpreadElement\" && !isLast) {\n      this.raiseRestNotLast(prop.start);\n    } else {\n      this.toAssignable(prop, isLHS);\n    }\n  }\n\n  toAssignableList(exprList, trailingCommaPos, isLHS) {\n    let end = exprList.length;\n\n    if (end) {\n      const last = exprList[end - 1];\n\n      if ((last == null ? void 0 : last.type) === \"RestElement\") {\n        --end;\n      } else if ((last == null ? void 0 : last.type) === \"SpreadElement\") {\n        last.type = \"RestElement\";\n        let arg = last.argument;\n        this.toAssignable(arg, isLHS);\n        arg = unwrapParenthesizedExpression(arg);\n\n        if (arg.type !== \"Identifier\" && arg.type !== \"MemberExpression\" && arg.type !== \"ArrayPattern\" && arg.type !== \"ObjectPattern\") {\n          this.unexpected(arg.start);\n        }\n\n        if (trailingCommaPos) {\n          this.raiseTrailingCommaAfterRest(trailingCommaPos);\n        }\n\n        --end;\n      }\n    }\n\n    for (let i = 0; i < end; i++) {\n      const elt = exprList[i];\n\n      if (elt) {\n        this.toAssignable(elt, isLHS);\n\n        if (elt.type === \"RestElement\") {\n          this.raiseRestNotLast(elt.start);\n        }\n      }\n    }\n\n    return exprList;\n  }\n\n  toReferencedList(exprList, isParenthesizedExpr) {\n    return exprList;\n  }\n\n  toReferencedListDeep(exprList, isParenthesizedExpr) {\n    this.toReferencedList(exprList, isParenthesizedExpr);\n\n    for (const expr of exprList) {\n      if ((expr == null ? void 0 : expr.type) === \"ArrayExpression\") {\n        this.toReferencedListDeep(expr.elements);\n      }\n    }\n  }\n\n  parseSpread(refExpressionErrors, refNeedsArrowPos) {\n    const node = this.startNode();\n    this.next();\n    node.argument = this.parseMaybeAssignAllowIn(refExpressionErrors, undefined, refNeedsArrowPos);\n    return this.finishNode(node, \"SpreadElement\");\n  }\n\n  parseRestBinding() {\n    const node = this.startNode();\n    this.next();\n    node.argument = this.parseBindingAtom();\n    return this.finishNode(node, \"RestElement\");\n  }\n\n  parseBindingAtom() {\n    switch (this.state.type) {\n      case types$1.bracketL:\n        {\n          const node = this.startNode();\n          this.next();\n          node.elements = this.parseBindingList(types$1.bracketR, 93, true);\n          return this.finishNode(node, \"ArrayPattern\");\n        }\n\n      case types$1.braceL:\n        return this.parseObjectLike(types$1.braceR, true);\n    }\n\n    return this.parseIdentifier();\n  }\n\n  parseBindingList(close, closeCharCode, allowEmpty, allowModifiers) {\n    const elts = [];\n    let first = true;\n\n    while (!this.eat(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(types$1.comma);\n      }\n\n      if (allowEmpty && this.match(types$1.comma)) {\n        elts.push(null);\n      } else if (this.eat(close)) {\n        break;\n      } else if (this.match(types$1.ellipsis)) {\n        elts.push(this.parseAssignableListItemTypes(this.parseRestBinding()));\n        this.checkCommaAfterRest(closeCharCode);\n        this.expect(close);\n        break;\n      } else {\n        const decorators = [];\n\n        if (this.match(types$1.at) && this.hasPlugin(\"decorators\")) {\n          this.raise(this.state.start, ErrorMessages.UnsupportedParameterDecorator);\n        }\n\n        while (this.match(types$1.at)) {\n          decorators.push(this.parseDecorator());\n        }\n\n        elts.push(this.parseAssignableListItem(allowModifiers, decorators));\n      }\n    }\n\n    return elts;\n  }\n\n  parseAssignableListItem(allowModifiers, decorators) {\n    const left = this.parseMaybeDefault();\n    this.parseAssignableListItemTypes(left);\n    const elt = this.parseMaybeDefault(left.start, left.loc.start, left);\n\n    if (decorators.length) {\n      left.decorators = decorators;\n    }\n\n    return elt;\n  }\n\n  parseAssignableListItemTypes(param) {\n    return param;\n  }\n\n  parseMaybeDefault(startPos, startLoc, left) {\n    var _startLoc, _startPos, _left;\n\n    startLoc = (_startLoc = startLoc) != null ? _startLoc : this.state.startLoc;\n    startPos = (_startPos = startPos) != null ? _startPos : this.state.start;\n    left = (_left = left) != null ? _left : this.parseBindingAtom();\n    if (!this.eat(types$1.eq)) return left;\n    const node = this.startNodeAt(startPos, startLoc);\n    node.left = left;\n    node.right = this.parseMaybeAssignAllowIn();\n    return this.finishNode(node, \"AssignmentPattern\");\n  }\n\n  checkLVal(expr, contextDescription, bindingType = BIND_NONE, checkClashes, disallowLetBinding, strictModeChanged = false) {\n    switch (expr.type) {\n      case \"Identifier\":\n        {\n          const {\n            name\n          } = expr;\n\n          if (this.state.strict && (strictModeChanged ? isStrictBindReservedWord(name, this.inModule) : isStrictBindOnlyReservedWord(name))) {\n            this.raise(expr.start, bindingType === BIND_NONE ? ErrorMessages.StrictEvalArguments : ErrorMessages.StrictEvalArgumentsBinding, name);\n          }\n\n          if (checkClashes) {\n            if (checkClashes.has(name)) {\n              this.raise(expr.start, ErrorMessages.ParamDupe);\n            } else {\n              checkClashes.add(name);\n            }\n          }\n\n          if (disallowLetBinding && name === \"let\") {\n            this.raise(expr.start, ErrorMessages.LetInLexicalBinding);\n          }\n\n          if (!(bindingType & BIND_NONE)) {\n            this.scope.declareName(name, bindingType, expr.start);\n          }\n\n          break;\n        }\n\n      case \"MemberExpression\":\n        if (bindingType !== BIND_NONE) {\n          this.raise(expr.start, ErrorMessages.InvalidPropertyBindingPattern);\n        }\n\n        break;\n\n      case \"ObjectPattern\":\n        for (let prop of expr.properties) {\n          if (this.isObjectProperty(prop)) prop = prop.value;else if (this.isObjectMethod(prop)) continue;\n          this.checkLVal(prop, \"object destructuring pattern\", bindingType, checkClashes, disallowLetBinding);\n        }\n\n        break;\n\n      case \"ArrayPattern\":\n        for (const elem of expr.elements) {\n          if (elem) {\n            this.checkLVal(elem, \"array destructuring pattern\", bindingType, checkClashes, disallowLetBinding);\n          }\n        }\n\n        break;\n\n      case \"AssignmentPattern\":\n        this.checkLVal(expr.left, \"assignment pattern\", bindingType, checkClashes);\n        break;\n\n      case \"RestElement\":\n        this.checkLVal(expr.argument, \"rest element\", bindingType, checkClashes);\n        break;\n\n      case \"ParenthesizedExpression\":\n        this.checkLVal(expr.expression, \"parenthesized expression\", bindingType, checkClashes);\n        break;\n\n      default:\n        {\n          this.raise(expr.start, bindingType === BIND_NONE ? ErrorMessages.InvalidLhs : ErrorMessages.InvalidLhsBinding, contextDescription);\n        }\n    }\n  }\n\n  checkToRestConversion(node) {\n    if (node.argument.type !== \"Identifier\" && node.argument.type !== \"MemberExpression\") {\n      this.raise(node.argument.start, ErrorMessages.InvalidRestAssignmentPattern);\n    }\n  }\n\n  checkCommaAfterRest(close) {\n    if (this.match(types$1.comma)) {\n      if (this.lookaheadCharCode() === close) {\n        this.raiseTrailingCommaAfterRest(this.state.start);\n      } else {\n        this.raiseRestNotLast(this.state.start);\n      }\n    }\n  }\n\n  raiseRestNotLast(pos) {\n    throw this.raise(pos, ErrorMessages.ElementAfterRest);\n  }\n\n  raiseTrailingCommaAfterRest(pos) {\n    this.raise(pos, ErrorMessages.RestTrailingComma);\n  }\n\n}\n\nclass ExpressionParser extends LValParser {\n  checkProto(prop, isRecord, protoRef, refExpressionErrors) {\n    if (prop.type === \"SpreadElement\" || this.isObjectMethod(prop) || prop.computed || prop.shorthand) {\n      return;\n    }\n\n    const key = prop.key;\n    const name = key.type === \"Identifier\" ? key.name : key.value;\n\n    if (name === \"__proto__\") {\n      if (isRecord) {\n        this.raise(key.start, ErrorMessages.RecordNoProto);\n        return;\n      }\n\n      if (protoRef.used) {\n        if (refExpressionErrors) {\n          if (refExpressionErrors.doubleProto === -1) {\n            refExpressionErrors.doubleProto = key.start;\n          }\n        } else {\n          this.raise(key.start, ErrorMessages.DuplicateProto);\n        }\n      }\n\n      protoRef.used = true;\n    }\n  }\n\n  shouldExitDescending(expr, potentialArrowAt) {\n    return expr.type === \"ArrowFunctionExpression\" && expr.start === potentialArrowAt;\n  }\n\n  getExpression() {\n    let paramFlags = PARAM;\n\n    if (this.hasPlugin(\"topLevelAwait\") && this.inModule) {\n      paramFlags |= PARAM_AWAIT;\n    }\n\n    this.scope.enter(SCOPE_PROGRAM);\n    this.prodParam.enter(paramFlags);\n    this.nextToken();\n    const expr = this.parseExpression();\n\n    if (!this.match(types$1.eof)) {\n      this.unexpected();\n    }\n\n    expr.comments = this.state.comments;\n    expr.errors = this.state.errors;\n\n    if (this.options.tokens) {\n      expr.tokens = this.tokens;\n    }\n\n    return expr;\n  }\n\n  parseExpression(disallowIn, refExpressionErrors) {\n    if (disallowIn) {\n      return this.disallowInAnd(() => this.parseExpressionBase(refExpressionErrors));\n    }\n\n    return this.allowInAnd(() => this.parseExpressionBase(refExpressionErrors));\n  }\n\n  parseExpressionBase(refExpressionErrors) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const expr = this.parseMaybeAssign(refExpressionErrors);\n\n    if (this.match(types$1.comma)) {\n      const node = this.startNodeAt(startPos, startLoc);\n      node.expressions = [expr];\n\n      while (this.eat(types$1.comma)) {\n        node.expressions.push(this.parseMaybeAssign(refExpressionErrors));\n      }\n\n      this.toReferencedList(node.expressions);\n      return this.finishNode(node, \"SequenceExpression\");\n    }\n\n    return expr;\n  }\n\n  parseMaybeAssignDisallowIn(refExpressionErrors, afterLeftParse, refNeedsArrowPos) {\n    return this.disallowInAnd(() => this.parseMaybeAssign(refExpressionErrors, afterLeftParse, refNeedsArrowPos));\n  }\n\n  parseMaybeAssignAllowIn(refExpressionErrors, afterLeftParse, refNeedsArrowPos) {\n    return this.allowInAnd(() => this.parseMaybeAssign(refExpressionErrors, afterLeftParse, refNeedsArrowPos));\n  }\n\n  parseMaybeAssign(refExpressionErrors, afterLeftParse, refNeedsArrowPos) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n\n    if (this.isContextual(\"yield\")) {\n      if (this.prodParam.hasYield) {\n        this.state.exprAllowed = true;\n        let left = this.parseYield();\n\n        if (afterLeftParse) {\n          left = afterLeftParse.call(this, left, startPos, startLoc);\n        }\n\n        return left;\n      }\n    }\n\n    let ownExpressionErrors;\n\n    if (refExpressionErrors) {\n      ownExpressionErrors = false;\n    } else {\n      refExpressionErrors = new ExpressionErrors();\n      ownExpressionErrors = true;\n    }\n\n    if (this.match(types$1.parenL) || this.match(types$1.name)) {\n      this.state.potentialArrowAt = this.state.start;\n    }\n\n    let left = this.parseMaybeConditional(refExpressionErrors, refNeedsArrowPos);\n\n    if (afterLeftParse) {\n      left = afterLeftParse.call(this, left, startPos, startLoc);\n    }\n\n    if (this.state.type.isAssign) {\n      const node = this.startNodeAt(startPos, startLoc);\n      const operator = this.state.value;\n      node.operator = operator;\n\n      if (this.match(types$1.eq)) {\n        node.left = this.toAssignable(left, true);\n        refExpressionErrors.doubleProto = -1;\n      } else {\n        node.left = left;\n      }\n\n      if (refExpressionErrors.shorthandAssign >= node.left.start) {\n        refExpressionErrors.shorthandAssign = -1;\n      }\n\n      this.checkLVal(left, \"assignment expression\");\n      this.next();\n      node.right = this.parseMaybeAssign();\n      return this.finishNode(node, \"AssignmentExpression\");\n    } else if (ownExpressionErrors) {\n      this.checkExpressionErrors(refExpressionErrors, true);\n    }\n\n    return left;\n  }\n\n  parseMaybeConditional(refExpressionErrors, refNeedsArrowPos) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const potentialArrowAt = this.state.potentialArrowAt;\n    const expr = this.parseExprOps(refExpressionErrors);\n\n    if (this.shouldExitDescending(expr, potentialArrowAt)) {\n      return expr;\n    }\n\n    return this.parseConditional(expr, startPos, startLoc, refNeedsArrowPos);\n  }\n\n  parseConditional(expr, startPos, startLoc, refNeedsArrowPos) {\n    if (this.eat(types$1.question)) {\n      const node = this.startNodeAt(startPos, startLoc);\n      node.test = expr;\n      node.consequent = this.parseMaybeAssignAllowIn();\n      this.expect(types$1.colon);\n      node.alternate = this.parseMaybeAssign();\n      return this.finishNode(node, \"ConditionalExpression\");\n    }\n\n    return expr;\n  }\n\n  parseExprOps(refExpressionErrors) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const potentialArrowAt = this.state.potentialArrowAt;\n    const expr = this.parseMaybeUnary(refExpressionErrors);\n\n    if (this.shouldExitDescending(expr, potentialArrowAt)) {\n      return expr;\n    }\n\n    return this.parseExprOp(expr, startPos, startLoc, -1);\n  }\n\n  parseExprOp(left, leftStartPos, leftStartLoc, minPrec) {\n    let prec = this.state.type.binop;\n\n    if (prec != null && (this.prodParam.hasIn || !this.match(types$1._in))) {\n      if (prec > minPrec) {\n        const op = this.state.type;\n\n        if (op === types$1.pipeline) {\n          this.expectPlugin(\"pipelineOperator\");\n\n          if (this.state.inFSharpPipelineDirectBody) {\n            return left;\n          }\n\n          this.state.inPipeline = true;\n          this.checkPipelineAtInfixOperator(left, leftStartPos);\n        }\n\n        const node = this.startNodeAt(leftStartPos, leftStartLoc);\n        node.left = left;\n        node.operator = this.state.value;\n        const logical = op === types$1.logicalOR || op === types$1.logicalAND;\n        const coalesce = op === types$1.nullishCoalescing;\n\n        if (coalesce) {\n          prec = types$1.logicalAND.binop;\n        }\n\n        this.next();\n\n        if (op === types$1.pipeline && this.getPluginOption(\"pipelineOperator\", \"proposal\") === \"minimal\") {\n          if (this.match(types$1.name) && this.state.value === \"await\" && this.prodParam.hasAwait) {\n            throw this.raise(this.state.start, ErrorMessages.UnexpectedAwaitAfterPipelineBody);\n          }\n        }\n\n        node.right = this.parseExprOpRightExpr(op, prec);\n        this.finishNode(node, logical || coalesce ? \"LogicalExpression\" : \"BinaryExpression\");\n        const nextOp = this.state.type;\n\n        if (coalesce && (nextOp === types$1.logicalOR || nextOp === types$1.logicalAND) || logical && nextOp === types$1.nullishCoalescing) {\n          throw this.raise(this.state.start, ErrorMessages.MixingCoalesceWithLogical);\n        }\n\n        return this.parseExprOp(node, leftStartPos, leftStartLoc, minPrec);\n      }\n    }\n\n    return left;\n  }\n\n  parseExprOpRightExpr(op, prec) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n\n    switch (op) {\n      case types$1.pipeline:\n        switch (this.getPluginOption(\"pipelineOperator\", \"proposal\")) {\n          case \"smart\":\n            return this.withTopicPermittingContext(() => {\n              return this.parseSmartPipelineBody(this.parseExprOpBaseRightExpr(op, prec), startPos, startLoc);\n            });\n\n          case \"fsharp\":\n            return this.withSoloAwaitPermittingContext(() => {\n              return this.parseFSharpPipelineBody(prec);\n            });\n        }\n\n      default:\n        return this.parseExprOpBaseRightExpr(op, prec);\n    }\n  }\n\n  parseExprOpBaseRightExpr(op, prec) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    return this.parseExprOp(this.parseMaybeUnary(), startPos, startLoc, op.rightAssociative ? prec - 1 : prec);\n  }\n\n  checkExponentialAfterUnary(node) {\n    if (this.match(types$1.exponent)) {\n      this.raise(node.argument.start, ErrorMessages.UnexpectedTokenUnaryExponentiation);\n    }\n  }\n\n  parseMaybeUnary(refExpressionErrors, sawUnary) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const isAwait = this.isContextual(\"await\");\n\n    if (isAwait && this.isAwaitAllowed()) {\n      this.next();\n      const expr = this.parseAwait(startPos, startLoc);\n      if (!sawUnary) this.checkExponentialAfterUnary(expr);\n      return expr;\n    }\n\n    if (this.isContextual(\"module\") && this.lookaheadCharCode() === 123 && !this.hasFollowingLineBreak()) {\n      return this.parseModuleExpression();\n    }\n\n    const update = this.match(types$1.incDec);\n    const node = this.startNode();\n\n    if (this.state.type.prefix) {\n      node.operator = this.state.value;\n      node.prefix = true;\n\n      if (this.match(types$1._throw)) {\n        this.expectPlugin(\"throwExpressions\");\n      }\n\n      const isDelete = this.match(types$1._delete);\n      this.next();\n      node.argument = this.parseMaybeUnary(null, true);\n      this.checkExpressionErrors(refExpressionErrors, true);\n\n      if (this.state.strict && isDelete) {\n        const arg = node.argument;\n\n        if (arg.type === \"Identifier\") {\n          this.raise(node.start, ErrorMessages.StrictDelete);\n        } else if (this.hasPropertyAsPrivateName(arg)) {\n          this.raise(node.start, ErrorMessages.DeletePrivateField);\n        }\n      }\n\n      if (!update) {\n        if (!sawUnary) this.checkExponentialAfterUnary(node);\n        return this.finishNode(node, \"UnaryExpression\");\n      }\n    }\n\n    const expr = this.parseUpdate(node, update, refExpressionErrors);\n\n    if (isAwait) {\n      const startsExpr = this.hasPlugin(\"v8intrinsic\") ? this.state.type.startsExpr : this.state.type.startsExpr && !this.match(types$1.modulo);\n\n      if (startsExpr && !this.isAmbiguousAwait()) {\n        this.raiseOverwrite(startPos, this.hasPlugin(\"topLevelAwait\") ? ErrorMessages.AwaitNotInAsyncContext : ErrorMessages.AwaitNotInAsyncFunction);\n        return this.parseAwait(startPos, startLoc);\n      }\n    }\n\n    return expr;\n  }\n\n  parseUpdate(node, update, refExpressionErrors) {\n    if (update) {\n      this.checkLVal(node.argument, \"prefix operation\");\n      return this.finishNode(node, \"UpdateExpression\");\n    }\n\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    let expr = this.parseExprSubscripts(refExpressionErrors);\n    if (this.checkExpressionErrors(refExpressionErrors, false)) return expr;\n\n    while (this.state.type.postfix && !this.canInsertSemicolon()) {\n      const node = this.startNodeAt(startPos, startLoc);\n      node.operator = this.state.value;\n      node.prefix = false;\n      node.argument = expr;\n      this.checkLVal(expr, \"postfix operation\");\n      this.next();\n      expr = this.finishNode(node, \"UpdateExpression\");\n    }\n\n    return expr;\n  }\n\n  parseExprSubscripts(refExpressionErrors) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const potentialArrowAt = this.state.potentialArrowAt;\n    const expr = this.parseExprAtom(refExpressionErrors);\n\n    if (this.shouldExitDescending(expr, potentialArrowAt)) {\n      return expr;\n    }\n\n    return this.parseSubscripts(expr, startPos, startLoc);\n  }\n\n  parseSubscripts(base, startPos, startLoc, noCalls) {\n    const state = {\n      optionalChainMember: false,\n      maybeAsyncArrow: this.atPossibleAsyncArrow(base),\n      stop: false\n    };\n\n    do {\n      base = this.parseSubscript(base, startPos, startLoc, noCalls, state);\n      state.maybeAsyncArrow = false;\n    } while (!state.stop);\n\n    return base;\n  }\n\n  parseSubscript(base, startPos, startLoc, noCalls, state) {\n    if (!noCalls && this.eat(types$1.doubleColon)) {\n      return this.parseBind(base, startPos, startLoc, noCalls, state);\n    } else if (this.match(types$1.backQuote)) {\n      return this.parseTaggedTemplateExpression(base, startPos, startLoc, state);\n    }\n\n    let optional = false;\n\n    if (this.match(types$1.questionDot)) {\n      if (noCalls && this.lookaheadCharCode() === 40) {\n        state.stop = true;\n        return base;\n      }\n\n      state.optionalChainMember = optional = true;\n      this.next();\n    }\n\n    if (!noCalls && this.match(types$1.parenL)) {\n      return this.parseCoverCallAndAsyncArrowHead(base, startPos, startLoc, state, optional);\n    } else if (optional || this.match(types$1.bracketL) || this.eat(types$1.dot)) {\n      return this.parseMember(base, startPos, startLoc, state, optional);\n    } else {\n      state.stop = true;\n      return base;\n    }\n  }\n\n  parseMember(base, startPos, startLoc, state, optional) {\n    const node = this.startNodeAt(startPos, startLoc);\n    const computed = this.eat(types$1.bracketL);\n    node.object = base;\n    node.computed = computed;\n    const privateName = !computed && this.match(types$1.privateName) && this.state.value;\n    const property = computed ? this.parseExpression() : privateName ? this.parsePrivateName() : this.parseIdentifier(true);\n\n    if (privateName !== false) {\n      if (node.object.type === \"Super\") {\n        this.raise(startPos, ErrorMessages.SuperPrivateField);\n      }\n\n      this.classScope.usePrivateName(privateName, property.start);\n    }\n\n    node.property = property;\n\n    if (computed) {\n      this.expect(types$1.bracketR);\n    }\n\n    if (state.optionalChainMember) {\n      node.optional = optional;\n      return this.finishNode(node, \"OptionalMemberExpression\");\n    } else {\n      return this.finishNode(node, \"MemberExpression\");\n    }\n  }\n\n  parseBind(base, startPos, startLoc, noCalls, state) {\n    const node = this.startNodeAt(startPos, startLoc);\n    node.object = base;\n    node.callee = this.parseNoCallExpr();\n    state.stop = true;\n    return this.parseSubscripts(this.finishNode(node, \"BindExpression\"), startPos, startLoc, noCalls);\n  }\n\n  parseCoverCallAndAsyncArrowHead(base, startPos, startLoc, state, optional) {\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n    this.state.maybeInArrowParameters = true;\n    this.next();\n    let node = this.startNodeAt(startPos, startLoc);\n    node.callee = base;\n\n    if (state.maybeAsyncArrow) {\n      this.expressionScope.enter(newAsyncArrowScope());\n    }\n\n    if (state.optionalChainMember) {\n      node.optional = optional;\n    }\n\n    if (optional) {\n      node.arguments = this.parseCallExpressionArguments(types$1.parenR, false);\n    } else {\n      node.arguments = this.parseCallExpressionArguments(types$1.parenR, state.maybeAsyncArrow, base.type === \"Import\", base.type !== \"Super\", node);\n    }\n\n    this.finishCallExpression(node, state.optionalChainMember);\n\n    if (state.maybeAsyncArrow && this.shouldParseAsyncArrow() && !optional) {\n      state.stop = true;\n      this.expressionScope.validateAsPattern();\n      this.expressionScope.exit();\n      node = this.parseAsyncArrowFromCallExpression(this.startNodeAt(startPos, startLoc), node);\n    } else {\n      if (state.maybeAsyncArrow) {\n        this.expressionScope.exit();\n      }\n\n      this.toReferencedArguments(node);\n    }\n\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n    return node;\n  }\n\n  toReferencedArguments(node, isParenthesizedExpr) {\n    this.toReferencedListDeep(node.arguments, isParenthesizedExpr);\n  }\n\n  parseTaggedTemplateExpression(base, startPos, startLoc, state) {\n    const node = this.startNodeAt(startPos, startLoc);\n    node.tag = base;\n    node.quasi = this.parseTemplate(true);\n\n    if (state.optionalChainMember) {\n      this.raise(startPos, ErrorMessages.OptionalChainingNoTemplate);\n    }\n\n    return this.finishNode(node, \"TaggedTemplateExpression\");\n  }\n\n  atPossibleAsyncArrow(base) {\n    return base.type === \"Identifier\" && base.name === \"async\" && this.state.lastTokEnd === base.end && !this.canInsertSemicolon() && base.end - base.start === 5 && base.start === this.state.potentialArrowAt;\n  }\n\n  finishCallExpression(node, optional) {\n    if (node.callee.type === \"Import\") {\n      if (node.arguments.length === 2) {\n        if (!this.hasPlugin(\"moduleAttributes\")) {\n          this.expectPlugin(\"importAssertions\");\n        }\n      }\n\n      if (node.arguments.length === 0 || node.arguments.length > 2) {\n        this.raise(node.start, ErrorMessages.ImportCallArity, this.hasPlugin(\"importAssertions\") || this.hasPlugin(\"moduleAttributes\") ? \"one or two arguments\" : \"one argument\");\n      } else {\n        for (const arg of node.arguments) {\n          if (arg.type === \"SpreadElement\") {\n            this.raise(arg.start, ErrorMessages.ImportCallSpreadArgument);\n          }\n        }\n      }\n    }\n\n    return this.finishNode(node, optional ? \"OptionalCallExpression\" : \"CallExpression\");\n  }\n\n  parseCallExpressionArguments(close, possibleAsyncArrow, dynamicImport, allowPlaceholder, nodeForExtra) {\n    const elts = [];\n    let first = true;\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = false;\n\n    while (!this.eat(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(types$1.comma);\n\n        if (this.match(close)) {\n          if (dynamicImport && !this.hasPlugin(\"importAssertions\") && !this.hasPlugin(\"moduleAttributes\")) {\n            this.raise(this.state.lastTokStart, ErrorMessages.ImportCallArgumentTrailingComma);\n          }\n\n          if (nodeForExtra) {\n            this.addExtra(nodeForExtra, \"trailingComma\", this.state.lastTokStart);\n          }\n\n          this.next();\n          break;\n        }\n      }\n\n      elts.push(this.parseExprListItem(false, possibleAsyncArrow ? new ExpressionErrors() : undefined, possibleAsyncArrow ? {\n        start: 0\n      } : undefined, allowPlaceholder));\n    }\n\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n    return elts;\n  }\n\n  shouldParseAsyncArrow() {\n    return this.match(types$1.arrow) && !this.canInsertSemicolon();\n  }\n\n  parseAsyncArrowFromCallExpression(node, call) {\n    var _call$extra;\n\n    this.expect(types$1.arrow);\n    this.parseArrowExpression(node, call.arguments, true, (_call$extra = call.extra) == null ? void 0 : _call$extra.trailingComma);\n    return node;\n  }\n\n  parseNoCallExpr() {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    return this.parseSubscripts(this.parseExprAtom(), startPos, startLoc, true);\n  }\n\n  parseExprAtom(refExpressionErrors) {\n    if (this.state.type === types$1.slash) this.readRegexp();\n    const canBeArrow = this.state.potentialArrowAt === this.state.start;\n    let node;\n\n    switch (this.state.type) {\n      case types$1._super:\n        return this.parseSuper();\n\n      case types$1._import:\n        node = this.startNode();\n        this.next();\n\n        if (this.match(types$1.dot)) {\n          return this.parseImportMetaProperty(node);\n        }\n\n        if (!this.match(types$1.parenL)) {\n          this.raise(this.state.lastTokStart, ErrorMessages.UnsupportedImport);\n        }\n\n        return this.finishNode(node, \"Import\");\n\n      case types$1._this:\n        node = this.startNode();\n        this.next();\n        return this.finishNode(node, \"ThisExpression\");\n\n      case types$1.name:\n        {\n          const containsEsc = this.state.containsEsc;\n          const id = this.parseIdentifier();\n\n          if (!containsEsc && id.name === \"async\" && !this.canInsertSemicolon()) {\n            if (this.match(types$1._function)) {\n              const last = this.state.context.length - 1;\n\n              if (this.state.context[last] !== types.functionStatement) {\n                throw new Error(\"Internal error\");\n              }\n\n              this.state.context[last] = types.functionExpression;\n              this.next();\n              return this.parseFunction(this.startNodeAtNode(id), undefined, true);\n            } else if (this.match(types$1.name)) {\n              if (this.lookaheadCharCode() === 61) {\n                return this.parseAsyncArrowUnaryFunction(id);\n              } else {\n                return id;\n              }\n            } else if (this.match(types$1._do)) {\n              return this.parseDo(true);\n            }\n          }\n\n          if (canBeArrow && this.match(types$1.arrow) && !this.canInsertSemicolon()) {\n            this.next();\n            return this.parseArrowExpression(this.startNodeAtNode(id), [id], false);\n          }\n\n          return id;\n        }\n\n      case types$1._do:\n        {\n          return this.parseDo(false);\n        }\n\n      case types$1.regexp:\n        {\n          const value = this.state.value;\n          node = this.parseLiteral(value.value, \"RegExpLiteral\");\n          node.pattern = value.pattern;\n          node.flags = value.flags;\n          return node;\n        }\n\n      case types$1.num:\n        return this.parseLiteral(this.state.value, \"NumericLiteral\");\n\n      case types$1.bigint:\n        return this.parseLiteral(this.state.value, \"BigIntLiteral\");\n\n      case types$1.decimal:\n        return this.parseLiteral(this.state.value, \"DecimalLiteral\");\n\n      case types$1.string:\n        return this.parseLiteral(this.state.value, \"StringLiteral\");\n\n      case types$1._null:\n        node = this.startNode();\n        this.next();\n        return this.finishNode(node, \"NullLiteral\");\n\n      case types$1._true:\n      case types$1._false:\n        return this.parseBooleanLiteral();\n\n      case types$1.parenL:\n        return this.parseParenAndDistinguishExpression(canBeArrow);\n\n      case types$1.bracketBarL:\n      case types$1.bracketHashL:\n        {\n          return this.parseArrayLike(this.state.type === types$1.bracketBarL ? types$1.bracketBarR : types$1.bracketR, false, true, refExpressionErrors);\n        }\n\n      case types$1.bracketL:\n        {\n          return this.parseArrayLike(types$1.bracketR, true, false, refExpressionErrors);\n        }\n\n      case types$1.braceBarL:\n      case types$1.braceHashL:\n        {\n          return this.parseObjectLike(this.state.type === types$1.braceBarL ? types$1.braceBarR : types$1.braceR, false, true, refExpressionErrors);\n        }\n\n      case types$1.braceL:\n        {\n          return this.parseObjectLike(types$1.braceR, false, false, refExpressionErrors);\n        }\n\n      case types$1._function:\n        return this.parseFunctionOrFunctionSent();\n\n      case types$1.at:\n        this.parseDecorators();\n\n      case types$1._class:\n        node = this.startNode();\n        this.takeDecorators(node);\n        return this.parseClass(node, false);\n\n      case types$1._new:\n        return this.parseNewOrNewTarget();\n\n      case types$1.backQuote:\n        return this.parseTemplate(false);\n\n      case types$1.doubleColon:\n        {\n          node = this.startNode();\n          this.next();\n          node.object = null;\n          const callee = node.callee = this.parseNoCallExpr();\n\n          if (callee.type === \"MemberExpression\") {\n            return this.finishNode(node, \"BindExpression\");\n          } else {\n            throw this.raise(callee.start, ErrorMessages.UnsupportedBind);\n          }\n        }\n\n      case types$1.privateName:\n        {\n          const start = this.state.start;\n          const value = this.state.value;\n          node = this.parsePrivateName();\n\n          if (this.match(types$1._in)) {\n            this.expectPlugin(\"privateIn\");\n            this.classScope.usePrivateName(value, node.start);\n          } else if (this.hasPlugin(\"privateIn\")) {\n            this.raise(this.state.start, ErrorMessages.PrivateInExpectedIn, value);\n          } else {\n            throw this.unexpected(start);\n          }\n\n          return node;\n        }\n\n      case types$1.hash:\n        {\n          if (this.state.inPipeline) {\n            node = this.startNode();\n\n            if (this.getPluginOption(\"pipelineOperator\", \"proposal\") !== \"smart\") {\n              this.raise(node.start, ErrorMessages.PrimaryTopicRequiresSmartPipeline);\n            }\n\n            this.next();\n\n            if (!this.primaryTopicReferenceIsAllowedInCurrentTopicContext()) {\n              this.raise(node.start, ErrorMessages.PrimaryTopicNotAllowed);\n            }\n\n            this.registerTopicReference();\n            return this.finishNode(node, \"PipelinePrimaryTopicReference\");\n          }\n        }\n\n      case types$1.relational:\n        {\n          if (this.state.value === \"<\") {\n            const lookaheadCh = this.input.codePointAt(this.nextTokenStart());\n\n            if (isIdentifierStart(lookaheadCh) || lookaheadCh === 62) {\n                this.expectOnePlugin([\"jsx\", \"flow\", \"typescript\"]);\n              }\n          }\n        }\n\n      default:\n        throw this.unexpected();\n    }\n  }\n\n  parseAsyncArrowUnaryFunction(id) {\n    const node = this.startNodeAtNode(id);\n    this.prodParam.enter(functionFlags(true, this.prodParam.hasYield));\n    const params = [this.parseIdentifier()];\n    this.prodParam.exit();\n\n    if (this.hasPrecedingLineBreak()) {\n      this.raise(this.state.pos, ErrorMessages.LineTerminatorBeforeArrow);\n    }\n\n    this.expect(types$1.arrow);\n    this.parseArrowExpression(node, params, true);\n    return node;\n  }\n\n  parseDo(isAsync) {\n    this.expectPlugin(\"doExpressions\");\n\n    if (isAsync) {\n      this.expectPlugin(\"asyncDoExpressions\");\n    }\n\n    const node = this.startNode();\n    node.async = isAsync;\n    this.next();\n    const oldLabels = this.state.labels;\n    this.state.labels = [];\n\n    if (isAsync) {\n      this.prodParam.enter(PARAM_AWAIT);\n      node.body = this.parseBlock();\n      this.prodParam.exit();\n    } else {\n      node.body = this.parseBlock();\n    }\n\n    this.state.labels = oldLabels;\n    return this.finishNode(node, \"DoExpression\");\n  }\n\n  parseSuper() {\n    const node = this.startNode();\n    this.next();\n\n    if (this.match(types$1.parenL) && !this.scope.allowDirectSuper && !this.options.allowSuperOutsideMethod) {\n      this.raise(node.start, ErrorMessages.SuperNotAllowed);\n    } else if (!this.scope.allowSuper && !this.options.allowSuperOutsideMethod) {\n      this.raise(node.start, ErrorMessages.UnexpectedSuper);\n    }\n\n    if (!this.match(types$1.parenL) && !this.match(types$1.bracketL) && !this.match(types$1.dot)) {\n      this.raise(node.start, ErrorMessages.UnsupportedSuper);\n    }\n\n    return this.finishNode(node, \"Super\");\n  }\n\n  parseBooleanLiteral() {\n    const node = this.startNode();\n    node.value = this.match(types$1._true);\n    this.next();\n    return this.finishNode(node, \"BooleanLiteral\");\n  }\n\n  parseMaybePrivateName(isPrivateNameAllowed) {\n    const isPrivate = this.match(types$1.privateName);\n\n    if (isPrivate) {\n      if (!isPrivateNameAllowed) {\n        this.raise(this.state.start + 1, ErrorMessages.UnexpectedPrivateField);\n      }\n\n      return this.parsePrivateName();\n    } else {\n      return this.parseIdentifier(true);\n    }\n  }\n\n  parsePrivateName() {\n    const node = this.startNode();\n    const id = this.startNodeAt(this.state.start + 1, new Position(this.state.curLine, this.state.start + 1 - this.state.lineStart));\n    const name = this.state.value;\n    this.next();\n    node.id = this.createIdentifier(id, name);\n    return this.finishNode(node, \"PrivateName\");\n  }\n\n  parseFunctionOrFunctionSent() {\n    const node = this.startNode();\n    this.next();\n\n    if (this.prodParam.hasYield && this.match(types$1.dot)) {\n      const meta = this.createIdentifier(this.startNodeAtNode(node), \"function\");\n      this.next();\n      return this.parseMetaProperty(node, meta, \"sent\");\n    }\n\n    return this.parseFunction(node);\n  }\n\n  parseMetaProperty(node, meta, propertyName) {\n    node.meta = meta;\n\n    if (meta.name === \"function\" && propertyName === \"sent\") {\n      if (this.isContextual(propertyName)) {\n        this.expectPlugin(\"functionSent\");\n      } else if (!this.hasPlugin(\"functionSent\")) {\n        this.unexpected();\n      }\n    }\n\n    const containsEsc = this.state.containsEsc;\n    node.property = this.parseIdentifier(true);\n\n    if (node.property.name !== propertyName || containsEsc) {\n      this.raise(node.property.start, ErrorMessages.UnsupportedMetaProperty, meta.name, propertyName);\n    }\n\n    return this.finishNode(node, \"MetaProperty\");\n  }\n\n  parseImportMetaProperty(node) {\n    const id = this.createIdentifier(this.startNodeAtNode(node), \"import\");\n    this.next();\n\n    if (this.isContextual(\"meta\")) {\n      if (!this.inModule) {\n        this.raise(id.start, SourceTypeModuleErrorMessages.ImportMetaOutsideModule);\n      }\n\n      this.sawUnambiguousESM = true;\n    }\n\n    return this.parseMetaProperty(node, id, \"meta\");\n  }\n\n  parseLiteral(value, type, startPos, startLoc) {\n    startPos = startPos || this.state.start;\n    startLoc = startLoc || this.state.startLoc;\n    const node = this.startNodeAt(startPos, startLoc);\n    this.addExtra(node, \"rawValue\", value);\n    this.addExtra(node, \"raw\", this.input.slice(startPos, this.state.end));\n    node.value = value;\n    this.next();\n    return this.finishNode(node, type);\n  }\n\n  parseParenAndDistinguishExpression(canBeArrow) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    let val;\n    this.next();\n    this.expressionScope.enter(newArrowHeadScope());\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.maybeInArrowParameters = true;\n    this.state.inFSharpPipelineDirectBody = false;\n    const innerStartPos = this.state.start;\n    const innerStartLoc = this.state.startLoc;\n    const exprList = [];\n    const refExpressionErrors = new ExpressionErrors();\n    const refNeedsArrowPos = {\n      start: 0\n    };\n    let first = true;\n    let spreadStart;\n    let optionalCommaStart;\n\n    while (!this.match(types$1.parenR)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(types$1.comma, refNeedsArrowPos.start || null);\n\n        if (this.match(types$1.parenR)) {\n          optionalCommaStart = this.state.start;\n          break;\n        }\n      }\n\n      if (this.match(types$1.ellipsis)) {\n        const spreadNodeStartPos = this.state.start;\n        const spreadNodeStartLoc = this.state.startLoc;\n        spreadStart = this.state.start;\n        exprList.push(this.parseParenItem(this.parseRestBinding(), spreadNodeStartPos, spreadNodeStartLoc));\n        this.checkCommaAfterRest(41);\n        break;\n      } else {\n        exprList.push(this.parseMaybeAssignAllowIn(refExpressionErrors, this.parseParenItem, refNeedsArrowPos));\n      }\n    }\n\n    const innerEndPos = this.state.lastTokEnd;\n    const innerEndLoc = this.state.lastTokEndLoc;\n    this.expect(types$1.parenR);\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n    let arrowNode = this.startNodeAt(startPos, startLoc);\n\n    if (canBeArrow && this.shouldParseArrow() && (arrowNode = this.parseArrow(arrowNode))) {\n      this.expressionScope.validateAsPattern();\n      this.expressionScope.exit();\n      this.parseArrowExpression(arrowNode, exprList, false);\n      return arrowNode;\n    }\n\n    this.expressionScope.exit();\n\n    if (!exprList.length) {\n      this.unexpected(this.state.lastTokStart);\n    }\n\n    if (optionalCommaStart) this.unexpected(optionalCommaStart);\n    if (spreadStart) this.unexpected(spreadStart);\n    this.checkExpressionErrors(refExpressionErrors, true);\n    if (refNeedsArrowPos.start) this.unexpected(refNeedsArrowPos.start);\n    this.toReferencedListDeep(exprList, true);\n\n    if (exprList.length > 1) {\n      val = this.startNodeAt(innerStartPos, innerStartLoc);\n      val.expressions = exprList;\n      this.finishNodeAt(val, \"SequenceExpression\", innerEndPos, innerEndLoc);\n    } else {\n      val = exprList[0];\n    }\n\n    if (!this.options.createParenthesizedExpressions) {\n      this.addExtra(val, \"parenthesized\", true);\n      this.addExtra(val, \"parenStart\", startPos);\n      return val;\n    }\n\n    const parenExpression = this.startNodeAt(startPos, startLoc);\n    parenExpression.expression = val;\n    this.finishNode(parenExpression, \"ParenthesizedExpression\");\n    return parenExpression;\n  }\n\n  shouldParseArrow() {\n    return !this.canInsertSemicolon();\n  }\n\n  parseArrow(node) {\n    if (this.eat(types$1.arrow)) {\n      return node;\n    }\n  }\n\n  parseParenItem(node, startPos, startLoc) {\n    return node;\n  }\n\n  parseNewOrNewTarget() {\n    const node = this.startNode();\n    this.next();\n\n    if (this.match(types$1.dot)) {\n      const meta = this.createIdentifier(this.startNodeAtNode(node), \"new\");\n      this.next();\n      const metaProp = this.parseMetaProperty(node, meta, \"target\");\n\n      if (!this.scope.inNonArrowFunction && !this.scope.inClass) {\n        this.raise(metaProp.start, ErrorMessages.UnexpectedNewTarget);\n      }\n\n      return metaProp;\n    }\n\n    return this.parseNew(node);\n  }\n\n  parseNew(node) {\n    node.callee = this.parseNoCallExpr();\n\n    if (node.callee.type === \"Import\") {\n      this.raise(node.callee.start, ErrorMessages.ImportCallNotNewExpression);\n    } else if (this.isOptionalChain(node.callee)) {\n      this.raise(this.state.lastTokEnd, ErrorMessages.OptionalChainingNoNew);\n    } else if (this.eat(types$1.questionDot)) {\n      this.raise(this.state.start, ErrorMessages.OptionalChainingNoNew);\n    }\n\n    this.parseNewArguments(node);\n    return this.finishNode(node, \"NewExpression\");\n  }\n\n  parseNewArguments(node) {\n    if (this.eat(types$1.parenL)) {\n      const args = this.parseExprList(types$1.parenR);\n      this.toReferencedList(args);\n      node.arguments = args;\n    } else {\n      node.arguments = [];\n    }\n  }\n\n  parseTemplateElement(isTagged) {\n    const elem = this.startNode();\n\n    if (this.state.value === null) {\n      if (!isTagged) {\n        this.raise(this.state.start + 1, ErrorMessages.InvalidEscapeSequenceTemplate);\n      }\n    }\n\n    elem.value = {\n      raw: this.input.slice(this.state.start, this.state.end).replace(/\\r\\n?/g, \"\\n\"),\n      cooked: this.state.value\n    };\n    this.next();\n    elem.tail = this.match(types$1.backQuote);\n    return this.finishNode(elem, \"TemplateElement\");\n  }\n\n  parseTemplate(isTagged) {\n    const node = this.startNode();\n    this.next();\n    node.expressions = [];\n    let curElt = this.parseTemplateElement(isTagged);\n    node.quasis = [curElt];\n\n    while (!curElt.tail) {\n      this.expect(types$1.dollarBraceL);\n      node.expressions.push(this.parseTemplateSubstitution());\n      this.expect(types$1.braceR);\n      node.quasis.push(curElt = this.parseTemplateElement(isTagged));\n    }\n\n    this.next();\n    return this.finishNode(node, \"TemplateLiteral\");\n  }\n\n  parseTemplateSubstitution() {\n    return this.parseExpression();\n  }\n\n  parseObjectLike(close, isPattern, isRecord, refExpressionErrors) {\n    if (isRecord) {\n      this.expectPlugin(\"recordAndTuple\");\n    }\n\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = false;\n    const propHash = Object.create(null);\n    let first = true;\n    const node = this.startNode();\n    node.properties = [];\n    this.next();\n\n    while (!this.match(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(types$1.comma);\n\n        if (this.match(close)) {\n          this.addExtra(node, \"trailingComma\", this.state.lastTokStart);\n          break;\n        }\n      }\n\n      const prop = this.parsePropertyDefinition(isPattern, refExpressionErrors);\n\n      if (!isPattern) {\n        this.checkProto(prop, isRecord, propHash, refExpressionErrors);\n      }\n\n      if (isRecord && !this.isObjectProperty(prop) && prop.type !== \"SpreadElement\") {\n        this.raise(prop.start, ErrorMessages.InvalidRecordProperty);\n      }\n\n      if (prop.shorthand) {\n        this.addExtra(prop, \"shorthand\", true);\n      }\n\n      node.properties.push(prop);\n    }\n\n    this.state.exprAllowed = false;\n    this.next();\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n    let type = \"ObjectExpression\";\n\n    if (isPattern) {\n      type = \"ObjectPattern\";\n    } else if (isRecord) {\n      type = \"RecordExpression\";\n    }\n\n    return this.finishNode(node, type);\n  }\n\n  maybeAsyncOrAccessorProp(prop) {\n    return !prop.computed && prop.key.type === \"Identifier\" && (this.isLiteralPropertyName() || this.match(types$1.bracketL) || this.match(types$1.star));\n  }\n\n  parsePropertyDefinition(isPattern, refExpressionErrors) {\n    let decorators = [];\n\n    if (this.match(types$1.at)) {\n      if (this.hasPlugin(\"decorators\")) {\n        this.raise(this.state.start, ErrorMessages.UnsupportedPropertyDecorator);\n      }\n\n      while (this.match(types$1.at)) {\n        decorators.push(this.parseDecorator());\n      }\n    }\n\n    const prop = this.startNode();\n    let isGenerator = false;\n    let isAsync = false;\n    let isAccessor = false;\n    let startPos;\n    let startLoc;\n\n    if (this.match(types$1.ellipsis)) {\n      if (decorators.length) this.unexpected();\n\n      if (isPattern) {\n        this.next();\n        prop.argument = this.parseIdentifier();\n        this.checkCommaAfterRest(125);\n        return this.finishNode(prop, \"RestElement\");\n      }\n\n      return this.parseSpread();\n    }\n\n    if (decorators.length) {\n      prop.decorators = decorators;\n      decorators = [];\n    }\n\n    prop.method = false;\n\n    if (isPattern || refExpressionErrors) {\n      startPos = this.state.start;\n      startLoc = this.state.startLoc;\n    }\n\n    if (!isPattern) {\n      isGenerator = this.eat(types$1.star);\n    }\n\n    const containsEsc = this.state.containsEsc;\n    const key = this.parsePropertyName(prop, false);\n\n    if (!isPattern && !isGenerator && !containsEsc && this.maybeAsyncOrAccessorProp(prop)) {\n      const keyName = key.name;\n\n      if (keyName === \"async\" && !this.hasPrecedingLineBreak()) {\n        isAsync = true;\n        isGenerator = this.eat(types$1.star);\n        this.parsePropertyName(prop, false);\n      }\n\n      if (keyName === \"get\" || keyName === \"set\") {\n        isAccessor = true;\n        prop.kind = keyName;\n\n        if (this.match(types$1.star)) {\n          isGenerator = true;\n          this.raise(this.state.pos, ErrorMessages.AccessorIsGenerator, keyName);\n          this.next();\n        }\n\n        this.parsePropertyName(prop, false);\n      }\n    }\n\n    this.parseObjPropValue(prop, startPos, startLoc, isGenerator, isAsync, isPattern, isAccessor, refExpressionErrors);\n    return prop;\n  }\n\n  getGetterSetterExpectedParamCount(method) {\n    return method.kind === \"get\" ? 0 : 1;\n  }\n\n  getObjectOrClassMethodParams(method) {\n    return method.params;\n  }\n\n  checkGetterSetterParams(method) {\n    var _params;\n\n    const paramCount = this.getGetterSetterExpectedParamCount(method);\n    const params = this.getObjectOrClassMethodParams(method);\n    const start = method.start;\n\n    if (params.length !== paramCount) {\n      if (method.kind === \"get\") {\n        this.raise(start, ErrorMessages.BadGetterArity);\n      } else {\n        this.raise(start, ErrorMessages.BadSetterArity);\n      }\n    }\n\n    if (method.kind === \"set\" && ((_params = params[params.length - 1]) == null ? void 0 : _params.type) === \"RestElement\") {\n      this.raise(start, ErrorMessages.BadSetterRestParameter);\n    }\n  }\n\n  parseObjectMethod(prop, isGenerator, isAsync, isPattern, isAccessor) {\n    if (isAccessor) {\n      this.parseMethod(prop, isGenerator, false, false, false, \"ObjectMethod\");\n      this.checkGetterSetterParams(prop);\n      return prop;\n    }\n\n    if (isAsync || isGenerator || this.match(types$1.parenL)) {\n      if (isPattern) this.unexpected();\n      prop.kind = \"method\";\n      prop.method = true;\n      return this.parseMethod(prop, isGenerator, isAsync, false, false, \"ObjectMethod\");\n    }\n  }\n\n  parseObjectProperty(prop, startPos, startLoc, isPattern, refExpressionErrors) {\n    prop.shorthand = false;\n\n    if (this.eat(types$1.colon)) {\n      prop.value = isPattern ? this.parseMaybeDefault(this.state.start, this.state.startLoc) : this.parseMaybeAssignAllowIn(refExpressionErrors);\n      return this.finishNode(prop, \"ObjectProperty\");\n    }\n\n    if (!prop.computed && prop.key.type === \"Identifier\") {\n      this.checkReservedWord(prop.key.name, prop.key.start, true, false);\n\n      if (isPattern) {\n        prop.value = this.parseMaybeDefault(startPos, startLoc, prop.key.__clone());\n      } else if (this.match(types$1.eq) && refExpressionErrors) {\n        if (refExpressionErrors.shorthandAssign === -1) {\n          refExpressionErrors.shorthandAssign = this.state.start;\n        }\n\n        prop.value = this.parseMaybeDefault(startPos, startLoc, prop.key.__clone());\n      } else {\n        prop.value = prop.key.__clone();\n      }\n\n      prop.shorthand = true;\n      return this.finishNode(prop, \"ObjectProperty\");\n    }\n  }\n\n  parseObjPropValue(prop, startPos, startLoc, isGenerator, isAsync, isPattern, isAccessor, refExpressionErrors) {\n    const node = this.parseObjectMethod(prop, isGenerator, isAsync, isPattern, isAccessor) || this.parseObjectProperty(prop, startPos, startLoc, isPattern, refExpressionErrors);\n    if (!node) this.unexpected();\n    return node;\n  }\n\n  parsePropertyName(prop, isPrivateNameAllowed) {\n    if (this.eat(types$1.bracketL)) {\n      prop.computed = true;\n      prop.key = this.parseMaybeAssignAllowIn();\n      this.expect(types$1.bracketR);\n    } else {\n      const oldInPropertyName = this.state.inPropertyName;\n      this.state.inPropertyName = true;\n      const type = this.state.type;\n      prop.key = type === types$1.num || type === types$1.string || type === types$1.bigint || type === types$1.decimal ? this.parseExprAtom() : this.parseMaybePrivateName(isPrivateNameAllowed);\n\n      if (type !== types$1.privateName) {\n        prop.computed = false;\n      }\n\n      this.state.inPropertyName = oldInPropertyName;\n    }\n\n    return prop.key;\n  }\n\n  initFunction(node, isAsync) {\n    node.id = null;\n    node.generator = false;\n    node.async = !!isAsync;\n  }\n\n  parseMethod(node, isGenerator, isAsync, isConstructor, allowDirectSuper, type, inClassScope = false) {\n    this.initFunction(node, isAsync);\n    node.generator = !!isGenerator;\n    const allowModifiers = isConstructor;\n    this.scope.enter(SCOPE_FUNCTION | SCOPE_SUPER | (inClassScope ? SCOPE_CLASS : 0) | (allowDirectSuper ? SCOPE_DIRECT_SUPER : 0));\n    this.prodParam.enter(functionFlags(isAsync, node.generator));\n    this.parseFunctionParams(node, allowModifiers);\n    this.parseFunctionBodyAndFinish(node, type, true);\n    this.prodParam.exit();\n    this.scope.exit();\n    return node;\n  }\n\n  parseArrayLike(close, canBePattern, isTuple, refExpressionErrors) {\n    if (isTuple) {\n      this.expectPlugin(\"recordAndTuple\");\n    }\n\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = false;\n    const node = this.startNode();\n    this.next();\n    node.elements = this.parseExprList(close, !isTuple, refExpressionErrors, node);\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n    return this.finishNode(node, isTuple ? \"TupleExpression\" : \"ArrayExpression\");\n  }\n\n  parseArrowExpression(node, params, isAsync, trailingCommaPos) {\n    this.scope.enter(SCOPE_FUNCTION | SCOPE_ARROW);\n    let flags = functionFlags(isAsync, false);\n\n    if (!this.match(types$1.bracketL) && this.prodParam.hasIn) {\n      flags |= PARAM_IN;\n    }\n\n    this.prodParam.enter(flags);\n    this.initFunction(node, isAsync);\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n\n    if (params) {\n      this.state.maybeInArrowParameters = true;\n      this.setArrowFunctionParameters(node, params, trailingCommaPos);\n    }\n\n    this.state.maybeInArrowParameters = false;\n    this.parseFunctionBody(node, true);\n    this.prodParam.exit();\n    this.scope.exit();\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n    return this.finishNode(node, \"ArrowFunctionExpression\");\n  }\n\n  setArrowFunctionParameters(node, params, trailingCommaPos) {\n    node.params = this.toAssignableList(params, trailingCommaPos, false);\n  }\n\n  parseFunctionBodyAndFinish(node, type, isMethod = false) {\n    this.parseFunctionBody(node, false, isMethod);\n    this.finishNode(node, type);\n  }\n\n  parseFunctionBody(node, allowExpression, isMethod = false) {\n    const isExpression = allowExpression && !this.match(types$1.braceL);\n    this.expressionScope.enter(newExpressionScope());\n\n    if (isExpression) {\n      node.body = this.parseMaybeAssign();\n      this.checkParams(node, false, allowExpression, false);\n    } else {\n      const oldStrict = this.state.strict;\n      const oldLabels = this.state.labels;\n      this.state.labels = [];\n      this.prodParam.enter(this.prodParam.currentFlags() | PARAM_RETURN);\n      node.body = this.parseBlock(true, false, hasStrictModeDirective => {\n        const nonSimple = !this.isSimpleParamList(node.params);\n\n        if (hasStrictModeDirective && nonSimple) {\n          const errorPos = (node.kind === \"method\" || node.kind === \"constructor\") && !!node.key ? node.key.end : node.start;\n          this.raise(errorPos, ErrorMessages.IllegalLanguageModeDirective);\n        }\n\n        const strictModeChanged = !oldStrict && this.state.strict;\n        this.checkParams(node, !this.state.strict && !allowExpression && !isMethod && !nonSimple, allowExpression, strictModeChanged);\n\n        if (this.state.strict && node.id) {\n          this.checkLVal(node.id, \"function name\", BIND_OUTSIDE, undefined, undefined, strictModeChanged);\n        }\n      });\n      this.prodParam.exit();\n      this.expressionScope.exit();\n      this.state.labels = oldLabels;\n    }\n  }\n\n  isSimpleParamList(params) {\n    for (let i = 0, len = params.length; i < len; i++) {\n      if (params[i].type !== \"Identifier\") return false;\n    }\n\n    return true;\n  }\n\n  checkParams(node, allowDuplicates, isArrowFunction, strictModeChanged = true) {\n    const checkClashes = new Set();\n\n    for (const param of node.params) {\n      this.checkLVal(param, \"function parameter list\", BIND_VAR, allowDuplicates ? null : checkClashes, undefined, strictModeChanged);\n    }\n  }\n\n  parseExprList(close, allowEmpty, refExpressionErrors, nodeForExtra) {\n    const elts = [];\n    let first = true;\n\n    while (!this.eat(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(types$1.comma);\n\n        if (this.match(close)) {\n          if (nodeForExtra) {\n            this.addExtra(nodeForExtra, \"trailingComma\", this.state.lastTokStart);\n          }\n\n          this.next();\n          break;\n        }\n      }\n\n      elts.push(this.parseExprListItem(allowEmpty, refExpressionErrors));\n    }\n\n    return elts;\n  }\n\n  parseExprListItem(allowEmpty, refExpressionErrors, refNeedsArrowPos, allowPlaceholder) {\n    let elt;\n\n    if (this.match(types$1.comma)) {\n      if (!allowEmpty) {\n        this.raise(this.state.pos, ErrorMessages.UnexpectedToken, \",\");\n      }\n\n      elt = null;\n    } else if (this.match(types$1.ellipsis)) {\n      const spreadNodeStartPos = this.state.start;\n      const spreadNodeStartLoc = this.state.startLoc;\n      elt = this.parseParenItem(this.parseSpread(refExpressionErrors, refNeedsArrowPos), spreadNodeStartPos, spreadNodeStartLoc);\n    } else if (this.match(types$1.question)) {\n      this.expectPlugin(\"partialApplication\");\n\n      if (!allowPlaceholder) {\n        this.raise(this.state.start, ErrorMessages.UnexpectedArgumentPlaceholder);\n      }\n\n      const node = this.startNode();\n      this.next();\n      elt = this.finishNode(node, \"ArgumentPlaceholder\");\n    } else {\n      elt = this.parseMaybeAssignAllowIn(refExpressionErrors, this.parseParenItem, refNeedsArrowPos);\n    }\n\n    return elt;\n  }\n\n  parseIdentifier(liberal) {\n    const node = this.startNode();\n    const name = this.parseIdentifierName(node.start, liberal);\n    return this.createIdentifier(node, name);\n  }\n\n  createIdentifier(node, name) {\n    node.name = name;\n    node.loc.identifierName = name;\n    return this.finishNode(node, \"Identifier\");\n  }\n\n  parseIdentifierName(pos, liberal) {\n    let name;\n    const {\n      start,\n      type\n    } = this.state;\n\n    if (type === types$1.name) {\n      name = this.state.value;\n    } else if (type.keyword) {\n      name = type.keyword;\n      const curContext = this.curContext();\n\n      if ((type === types$1._class || type === types$1._function) && (curContext === types.functionStatement || curContext === types.functionExpression)) {\n        this.state.context.pop();\n      }\n    } else {\n      throw this.unexpected();\n    }\n\n    if (liberal) {\n      this.state.type = types$1.name;\n    } else {\n      this.checkReservedWord(name, start, !!type.keyword, false);\n    }\n\n    this.next();\n    return name;\n  }\n\n  checkReservedWord(word, startLoc, checkKeywords, isBinding) {\n    if (this.prodParam.hasYield && word === \"yield\") {\n      this.raise(startLoc, ErrorMessages.YieldBindingIdentifier);\n      return;\n    }\n\n    if (word === \"await\") {\n      if (this.prodParam.hasAwait) {\n        this.raise(startLoc, ErrorMessages.AwaitBindingIdentifier);\n        return;\n      } else if (this.scope.inStaticBlock && !this.scope.inNonArrowFunction) {\n        this.raise(startLoc, ErrorMessages.AwaitBindingIdentifierInStaticBlock);\n        return;\n      } else {\n        this.expressionScope.recordAsyncArrowParametersError(startLoc, ErrorMessages.AwaitBindingIdentifier);\n      }\n    }\n\n    if (this.scope.inClass && !this.scope.inNonArrowFunction && word === \"arguments\") {\n      this.raise(startLoc, ErrorMessages.ArgumentsInClass);\n      return;\n    }\n\n    if (checkKeywords && isKeyword(word)) {\n      this.raise(startLoc, ErrorMessages.UnexpectedKeyword, word);\n      return;\n    }\n\n    const reservedTest = !this.state.strict ? isReservedWord : isBinding ? isStrictBindReservedWord : isStrictReservedWord;\n\n    if (reservedTest(word, this.inModule)) {\n      this.raise(startLoc, ErrorMessages.UnexpectedReservedWord, word);\n    }\n  }\n\n  isAwaitAllowed() {\n    if (this.prodParam.hasAwait) return true;\n\n    if (this.options.allowAwaitOutsideFunction && !this.scope.inFunction) {\n      return true;\n    }\n\n    return false;\n  }\n\n  parseAwait(startPos, startLoc) {\n    const node = this.startNodeAt(startPos, startLoc);\n    this.expressionScope.recordParameterInitializerError(node.start, ErrorMessages.AwaitExpressionFormalParameter);\n\n    if (this.eat(types$1.star)) {\n      this.raise(node.start, ErrorMessages.ObsoleteAwaitStar);\n    }\n\n    if (!this.scope.inFunction && !this.options.allowAwaitOutsideFunction) {\n      if (this.isAmbiguousAwait()) {\n        this.ambiguousScriptDifferentAst = true;\n      } else {\n        this.sawUnambiguousESM = true;\n      }\n    }\n\n    if (!this.state.soloAwait) {\n      node.argument = this.parseMaybeUnary(null, true);\n    }\n\n    return this.finishNode(node, \"AwaitExpression\");\n  }\n\n  isAmbiguousAwait() {\n    return this.hasPrecedingLineBreak() || this.match(types$1.plusMin) || this.match(types$1.parenL) || this.match(types$1.bracketL) || this.match(types$1.backQuote) || this.match(types$1.regexp) || this.match(types$1.slash) || this.hasPlugin(\"v8intrinsic\") && this.match(types$1.modulo);\n  }\n\n  parseYield() {\n    const node = this.startNode();\n    this.expressionScope.recordParameterInitializerError(node.start, ErrorMessages.YieldInParameter);\n    this.next();\n\n    if (this.match(types$1.semi) || !this.match(types$1.star) && !this.state.type.startsExpr || this.hasPrecedingLineBreak()) {\n      node.delegate = false;\n      node.argument = null;\n    } else {\n      node.delegate = this.eat(types$1.star);\n      node.argument = this.parseMaybeAssign();\n    }\n\n    return this.finishNode(node, \"YieldExpression\");\n  }\n\n  checkPipelineAtInfixOperator(left, leftStartPos) {\n    if (this.getPluginOption(\"pipelineOperator\", \"proposal\") === \"smart\") {\n      if (left.type === \"SequenceExpression\") {\n        this.raise(leftStartPos, ErrorMessages.PipelineHeadSequenceExpression);\n      }\n    }\n  }\n\n  parseSmartPipelineBody(childExpression, startPos, startLoc) {\n    this.checkSmartPipelineBodyEarlyErrors(childExpression, startPos);\n    return this.parseSmartPipelineBodyInStyle(childExpression, startPos, startLoc);\n  }\n\n  checkSmartPipelineBodyEarlyErrors(childExpression, startPos) {\n    if (this.match(types$1.arrow)) {\n      throw this.raise(this.state.start, ErrorMessages.PipelineBodyNoArrow);\n    } else if (childExpression.type === \"SequenceExpression\") {\n      this.raise(startPos, ErrorMessages.PipelineBodySequenceExpression);\n    }\n  }\n\n  parseSmartPipelineBodyInStyle(childExpression, startPos, startLoc) {\n    const bodyNode = this.startNodeAt(startPos, startLoc);\n    const isSimpleReference = this.isSimpleReference(childExpression);\n\n    if (isSimpleReference) {\n      bodyNode.callee = childExpression;\n    } else {\n      if (!this.topicReferenceWasUsedInCurrentTopicContext()) {\n        this.raise(startPos, ErrorMessages.PipelineTopicUnused);\n      }\n\n      bodyNode.expression = childExpression;\n    }\n\n    return this.finishNode(bodyNode, isSimpleReference ? \"PipelineBareFunction\" : \"PipelineTopicExpression\");\n  }\n\n  isSimpleReference(expression) {\n    switch (expression.type) {\n      case \"MemberExpression\":\n        return !expression.computed && this.isSimpleReference(expression.object);\n\n      case \"Identifier\":\n        return true;\n\n      default:\n        return false;\n    }\n  }\n\n  withTopicPermittingContext(callback) {\n    const outerContextTopicState = this.state.topicContext;\n    this.state.topicContext = {\n      maxNumOfResolvableTopics: 1,\n      maxTopicIndex: null\n    };\n\n    try {\n      return callback();\n    } finally {\n      this.state.topicContext = outerContextTopicState;\n    }\n  }\n\n  withTopicForbiddingContext(callback) {\n    const outerContextTopicState = this.state.topicContext;\n    this.state.topicContext = {\n      maxNumOfResolvableTopics: 0,\n      maxTopicIndex: null\n    };\n\n    try {\n      return callback();\n    } finally {\n      this.state.topicContext = outerContextTopicState;\n    }\n  }\n\n  withSoloAwaitPermittingContext(callback) {\n    const outerContextSoloAwaitState = this.state.soloAwait;\n    this.state.soloAwait = true;\n\n    try {\n      return callback();\n    } finally {\n      this.state.soloAwait = outerContextSoloAwaitState;\n    }\n  }\n\n  allowInAnd(callback) {\n    const flags = this.prodParam.currentFlags();\n    const prodParamToSet = PARAM_IN & ~flags;\n\n    if (prodParamToSet) {\n      this.prodParam.enter(flags | PARAM_IN);\n\n      try {\n        return callback();\n      } finally {\n        this.prodParam.exit();\n      }\n    }\n\n    return callback();\n  }\n\n  disallowInAnd(callback) {\n    const flags = this.prodParam.currentFlags();\n    const prodParamToClear = PARAM_IN & flags;\n\n    if (prodParamToClear) {\n      this.prodParam.enter(flags & ~PARAM_IN);\n\n      try {\n        return callback();\n      } finally {\n        this.prodParam.exit();\n      }\n    }\n\n    return callback();\n  }\n\n  registerTopicReference() {\n    this.state.topicContext.maxTopicIndex = 0;\n  }\n\n  primaryTopicReferenceIsAllowedInCurrentTopicContext() {\n    return this.state.topicContext.maxNumOfResolvableTopics >= 1;\n  }\n\n  topicReferenceWasUsedInCurrentTopicContext() {\n    return this.state.topicContext.maxTopicIndex != null && this.state.topicContext.maxTopicIndex >= 0;\n  }\n\n  parseFSharpPipelineBody(prec) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    this.state.potentialArrowAt = this.state.start;\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = true;\n    const ret = this.parseExprOp(this.parseMaybeUnary(), startPos, startLoc, prec);\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n    return ret;\n  }\n\n  parseModuleExpression() {\n    this.expectPlugin(\"moduleBlocks\");\n    const node = this.startNode();\n    this.next();\n    this.eat(types$1.braceL);\n    const revertScopes = this.initializeScopes(true);\n    this.enterInitialScopes();\n    const program = this.startNode();\n\n    try {\n      node.body = this.parseProgram(program, types$1.braceR, \"module\");\n    } finally {\n      revertScopes();\n    }\n\n    this.eat(types$1.braceR);\n    return this.finishNode(node, \"ModuleExpression\");\n  }\n\n}\n\nconst loopLabel = {\n  kind: \"loop\"\n},\n      switchLabel = {\n  kind: \"switch\"\n};\nconst FUNC_NO_FLAGS = 0b000,\n      FUNC_STATEMENT = 0b001,\n      FUNC_HANGING_STATEMENT = 0b010,\n      FUNC_NULLABLE_ID = 0b100;\nconst loneSurrogate = /[\\uD800-\\uDFFF]/u;\n\nfunction babel7CompatTokens(tokens) {\n  {\n    for (let i = 0; i < tokens.length; i++) {\n      const token = tokens[i];\n\n      if (token.type === types$1.privateName) {\n        const {\n          loc,\n          start,\n          value,\n          end\n        } = token;\n        const hashEndPos = start + 1;\n        const hashEndLoc = new Position(loc.start.line, loc.start.column + 1);\n        tokens.splice(i, 1, new Token({\n          type: types$1.hash,\n          value: \"#\",\n          start: start,\n          end: hashEndPos,\n          startLoc: loc.start,\n          endLoc: hashEndLoc\n        }), new Token({\n          type: types$1.name,\n          value: value,\n          start: hashEndPos,\n          end: end,\n          startLoc: hashEndLoc,\n          endLoc: loc.end\n        }));\n      }\n    }\n  }\n  return tokens;\n}\n\nclass StatementParser extends ExpressionParser {\n  parseTopLevel(file, program) {\n    file.program = this.parseProgram(program);\n    file.comments = this.state.comments;\n    if (this.options.tokens) file.tokens = babel7CompatTokens(this.tokens);\n    return this.finishNode(file, \"File\");\n  }\n\n  parseProgram(program, end = types$1.eof, sourceType = this.options.sourceType) {\n    program.sourceType = sourceType;\n    program.interpreter = this.parseInterpreterDirective();\n    this.parseBlockBody(program, true, true, end);\n\n    if (this.inModule && !this.options.allowUndeclaredExports && this.scope.undefinedExports.size > 0) {\n      for (const [name] of Array.from(this.scope.undefinedExports)) {\n        const pos = this.scope.undefinedExports.get(name);\n        this.raise(pos, ErrorMessages.ModuleExportUndefined, name);\n      }\n    }\n\n    return this.finishNode(program, \"Program\");\n  }\n\n  stmtToDirective(stmt) {\n    const expr = stmt.expression;\n    const directiveLiteral = this.startNodeAt(expr.start, expr.loc.start);\n    const directive = this.startNodeAt(stmt.start, stmt.loc.start);\n    const raw = this.input.slice(expr.start, expr.end);\n    const val = directiveLiteral.value = raw.slice(1, -1);\n    this.addExtra(directiveLiteral, \"raw\", raw);\n    this.addExtra(directiveLiteral, \"rawValue\", val);\n    directive.value = this.finishNodeAt(directiveLiteral, \"DirectiveLiteral\", expr.end, expr.loc.end);\n    return this.finishNodeAt(directive, \"Directive\", stmt.end, stmt.loc.end);\n  }\n\n  parseInterpreterDirective() {\n    if (!this.match(types$1.interpreterDirective)) {\n      return null;\n    }\n\n    const node = this.startNode();\n    node.value = this.state.value;\n    this.next();\n    return this.finishNode(node, \"InterpreterDirective\");\n  }\n\n  isLet(context) {\n    if (!this.isContextual(\"let\")) {\n      return false;\n    }\n\n    return this.isLetKeyword(context);\n  }\n\n  isLetKeyword(context) {\n    const next = this.nextTokenStart();\n    const nextCh = this.input.charCodeAt(next);\n    if (nextCh === 91) return true;\n    if (context) return false;\n    if (nextCh === 123) return true;\n\n    if (isIdentifierStart(nextCh)) {\n      let pos = next + 1;\n\n      while (isIdentifierChar(this.input.charCodeAt(pos))) {\n        ++pos;\n      }\n\n      const ident = this.input.slice(next, pos);\n      if (!keywordRelationalOperator.test(ident)) return true;\n    }\n\n    return false;\n  }\n\n  parseStatement(context, topLevel) {\n    if (this.match(types$1.at)) {\n      this.parseDecorators(true);\n    }\n\n    return this.parseStatementContent(context, topLevel);\n  }\n\n  parseStatementContent(context, topLevel) {\n    let starttype = this.state.type;\n    const node = this.startNode();\n    let kind;\n\n    if (this.isLet(context)) {\n      starttype = types$1._var;\n      kind = \"let\";\n    }\n\n    switch (starttype) {\n      case types$1._break:\n      case types$1._continue:\n        return this.parseBreakContinueStatement(node, starttype.keyword);\n\n      case types$1._debugger:\n        return this.parseDebuggerStatement(node);\n\n      case types$1._do:\n        return this.parseDoStatement(node);\n\n      case types$1._for:\n        return this.parseForStatement(node);\n\n      case types$1._function:\n        if (this.lookaheadCharCode() === 46) break;\n\n        if (context) {\n          if (this.state.strict) {\n            this.raise(this.state.start, ErrorMessages.StrictFunction);\n          } else if (context !== \"if\" && context !== \"label\") {\n            this.raise(this.state.start, ErrorMessages.SloppyFunction);\n          }\n        }\n\n        return this.parseFunctionStatement(node, false, !context);\n\n      case types$1._class:\n        if (context) this.unexpected();\n        return this.parseClass(node, true);\n\n      case types$1._if:\n        return this.parseIfStatement(node);\n\n      case types$1._return:\n        return this.parseReturnStatement(node);\n\n      case types$1._switch:\n        return this.parseSwitchStatement(node);\n\n      case types$1._throw:\n        return this.parseThrowStatement(node);\n\n      case types$1._try:\n        return this.parseTryStatement(node);\n\n      case types$1._const:\n      case types$1._var:\n        kind = kind || this.state.value;\n\n        if (context && kind !== \"var\") {\n          this.raise(this.state.start, ErrorMessages.UnexpectedLexicalDeclaration);\n        }\n\n        return this.parseVarStatement(node, kind);\n\n      case types$1._while:\n        return this.parseWhileStatement(node);\n\n      case types$1._with:\n        return this.parseWithStatement(node);\n\n      case types$1.braceL:\n        return this.parseBlock();\n\n      case types$1.semi:\n        return this.parseEmptyStatement(node);\n\n      case types$1._import:\n        {\n          const nextTokenCharCode = this.lookaheadCharCode();\n\n          if (nextTokenCharCode === 40 || nextTokenCharCode === 46) {\n              break;\n            }\n        }\n\n      case types$1._export:\n        {\n          if (!this.options.allowImportExportEverywhere && !topLevel) {\n            this.raise(this.state.start, ErrorMessages.UnexpectedImportExport);\n          }\n\n          this.next();\n          let result;\n\n          if (starttype === types$1._import) {\n            result = this.parseImport(node);\n\n            if (result.type === \"ImportDeclaration\" && (!result.importKind || result.importKind === \"value\")) {\n              this.sawUnambiguousESM = true;\n            }\n          } else {\n            result = this.parseExport(node);\n\n            if (result.type === \"ExportNamedDeclaration\" && (!result.exportKind || result.exportKind === \"value\") || result.type === \"ExportAllDeclaration\" && (!result.exportKind || result.exportKind === \"value\") || result.type === \"ExportDefaultDeclaration\") {\n              this.sawUnambiguousESM = true;\n            }\n          }\n\n          this.assertModuleNodeAllowed(node);\n          return result;\n        }\n\n      default:\n        {\n          if (this.isAsyncFunction()) {\n            if (context) {\n              this.raise(this.state.start, ErrorMessages.AsyncFunctionInSingleStatementContext);\n            }\n\n            this.next();\n            return this.parseFunctionStatement(node, true, !context);\n          }\n        }\n    }\n\n    const maybeName = this.state.value;\n    const expr = this.parseExpression();\n\n    if (starttype === types$1.name && expr.type === \"Identifier\" && this.eat(types$1.colon)) {\n      return this.parseLabeledStatement(node, maybeName, expr, context);\n    } else {\n      return this.parseExpressionStatement(node, expr);\n    }\n  }\n\n  assertModuleNodeAllowed(node) {\n    if (!this.options.allowImportExportEverywhere && !this.inModule) {\n      this.raise(node.start, SourceTypeModuleErrorMessages.ImportOutsideModule);\n    }\n  }\n\n  takeDecorators(node) {\n    const decorators = this.state.decoratorStack[this.state.decoratorStack.length - 1];\n\n    if (decorators.length) {\n      node.decorators = decorators;\n      this.resetStartLocationFromNode(node, decorators[0]);\n      this.state.decoratorStack[this.state.decoratorStack.length - 1] = [];\n    }\n  }\n\n  canHaveLeadingDecorator() {\n    return this.match(types$1._class);\n  }\n\n  parseDecorators(allowExport) {\n    const currentContextDecorators = this.state.decoratorStack[this.state.decoratorStack.length - 1];\n\n    while (this.match(types$1.at)) {\n      const decorator = this.parseDecorator();\n      currentContextDecorators.push(decorator);\n    }\n\n    if (this.match(types$1._export)) {\n      if (!allowExport) {\n        this.unexpected();\n      }\n\n      if (this.hasPlugin(\"decorators\") && !this.getPluginOption(\"decorators\", \"decoratorsBeforeExport\")) {\n        this.raise(this.state.start, ErrorMessages.DecoratorExportClass);\n      }\n    } else if (!this.canHaveLeadingDecorator()) {\n      throw this.raise(this.state.start, ErrorMessages.UnexpectedLeadingDecorator);\n    }\n  }\n\n  parseDecorator() {\n    this.expectOnePlugin([\"decorators-legacy\", \"decorators\"]);\n    const node = this.startNode();\n    this.next();\n\n    if (this.hasPlugin(\"decorators\")) {\n      this.state.decoratorStack.push([]);\n      const startPos = this.state.start;\n      const startLoc = this.state.startLoc;\n      let expr;\n\n      if (this.eat(types$1.parenL)) {\n        expr = this.parseExpression();\n        this.expect(types$1.parenR);\n      } else {\n        expr = this.parseIdentifier(false);\n\n        while (this.eat(types$1.dot)) {\n          const node = this.startNodeAt(startPos, startLoc);\n          node.object = expr;\n          node.property = this.parseIdentifier(true);\n          node.computed = false;\n          expr = this.finishNode(node, \"MemberExpression\");\n        }\n      }\n\n      node.expression = this.parseMaybeDecoratorArguments(expr);\n      this.state.decoratorStack.pop();\n    } else {\n      node.expression = this.parseExprSubscripts();\n    }\n\n    return this.finishNode(node, \"Decorator\");\n  }\n\n  parseMaybeDecoratorArguments(expr) {\n    if (this.eat(types$1.parenL)) {\n      const node = this.startNodeAtNode(expr);\n      node.callee = expr;\n      node.arguments = this.parseCallExpressionArguments(types$1.parenR, false);\n      this.toReferencedList(node.arguments);\n      return this.finishNode(node, \"CallExpression\");\n    }\n\n    return expr;\n  }\n\n  parseBreakContinueStatement(node, keyword) {\n    const isBreak = keyword === \"break\";\n    this.next();\n\n    if (this.isLineTerminator()) {\n      node.label = null;\n    } else {\n      node.label = this.parseIdentifier();\n      this.semicolon();\n    }\n\n    this.verifyBreakContinue(node, keyword);\n    return this.finishNode(node, isBreak ? \"BreakStatement\" : \"ContinueStatement\");\n  }\n\n  verifyBreakContinue(node, keyword) {\n    const isBreak = keyword === \"break\";\n    let i;\n\n    for (i = 0; i < this.state.labels.length; ++i) {\n      const lab = this.state.labels[i];\n\n      if (node.label == null || lab.name === node.label.name) {\n        if (lab.kind != null && (isBreak || lab.kind === \"loop\")) break;\n        if (node.label && isBreak) break;\n      }\n    }\n\n    if (i === this.state.labels.length) {\n      this.raise(node.start, ErrorMessages.IllegalBreakContinue, keyword);\n    }\n  }\n\n  parseDebuggerStatement(node) {\n    this.next();\n    this.semicolon();\n    return this.finishNode(node, \"DebuggerStatement\");\n  }\n\n  parseHeaderExpression() {\n    this.expect(types$1.parenL);\n    const val = this.parseExpression();\n    this.expect(types$1.parenR);\n    return val;\n  }\n\n  parseDoStatement(node) {\n    this.next();\n    this.state.labels.push(loopLabel);\n    node.body = this.withTopicForbiddingContext(() => this.parseStatement(\"do\"));\n    this.state.labels.pop();\n    this.expect(types$1._while);\n    node.test = this.parseHeaderExpression();\n    this.eat(types$1.semi);\n    return this.finishNode(node, \"DoWhileStatement\");\n  }\n\n  parseForStatement(node) {\n    this.next();\n    this.state.labels.push(loopLabel);\n    let awaitAt = -1;\n\n    if (this.isAwaitAllowed() && this.eatContextual(\"await\")) {\n      awaitAt = this.state.lastTokStart;\n    }\n\n    this.scope.enter(SCOPE_OTHER);\n    this.expect(types$1.parenL);\n\n    if (this.match(types$1.semi)) {\n      if (awaitAt > -1) {\n        this.unexpected(awaitAt);\n      }\n\n      return this.parseFor(node, null);\n    }\n\n    const startsWithLet = this.isContextual(\"let\");\n    const isLet = startsWithLet && this.isLetKeyword();\n\n    if (this.match(types$1._var) || this.match(types$1._const) || isLet) {\n      const init = this.startNode();\n      const kind = isLet ? \"let\" : this.state.value;\n      this.next();\n      this.parseVar(init, true, kind);\n      this.finishNode(init, \"VariableDeclaration\");\n\n      if ((this.match(types$1._in) || this.isContextual(\"of\")) && init.declarations.length === 1) {\n        return this.parseForIn(node, init, awaitAt);\n      }\n\n      if (awaitAt > -1) {\n        this.unexpected(awaitAt);\n      }\n\n      return this.parseFor(node, init);\n    }\n\n    const startsWithUnescapedName = this.match(types$1.name) && !this.state.containsEsc;\n    const refExpressionErrors = new ExpressionErrors();\n    const init = this.parseExpression(true, refExpressionErrors);\n    const isForOf = this.isContextual(\"of\");\n\n    if (isForOf) {\n      if (startsWithLet) {\n        this.raise(init.start, ErrorMessages.ForOfLet);\n      } else if (awaitAt === -1 && startsWithUnescapedName && init.type === \"Identifier\" && init.name === \"async\") {\n        this.raise(init.start, ErrorMessages.ForOfAsync);\n      }\n    }\n\n    if (isForOf || this.match(types$1._in)) {\n      this.toAssignable(init, true);\n      const description = isForOf ? \"for-of statement\" : \"for-in statement\";\n      this.checkLVal(init, description);\n      return this.parseForIn(node, init, awaitAt);\n    } else {\n      this.checkExpressionErrors(refExpressionErrors, true);\n    }\n\n    if (awaitAt > -1) {\n      this.unexpected(awaitAt);\n    }\n\n    return this.parseFor(node, init);\n  }\n\n  parseFunctionStatement(node, isAsync, declarationPosition) {\n    this.next();\n    return this.parseFunction(node, FUNC_STATEMENT | (declarationPosition ? 0 : FUNC_HANGING_STATEMENT), isAsync);\n  }\n\n  parseIfStatement(node) {\n    this.next();\n    node.test = this.parseHeaderExpression();\n    node.consequent = this.parseStatement(\"if\");\n    node.alternate = this.eat(types$1._else) ? this.parseStatement(\"if\") : null;\n    return this.finishNode(node, \"IfStatement\");\n  }\n\n  parseReturnStatement(node) {\n    if (!this.prodParam.hasReturn && !this.options.allowReturnOutsideFunction) {\n      this.raise(this.state.start, ErrorMessages.IllegalReturn);\n    }\n\n    this.next();\n\n    if (this.isLineTerminator()) {\n      node.argument = null;\n    } else {\n      node.argument = this.parseExpression();\n      this.semicolon();\n    }\n\n    return this.finishNode(node, \"ReturnStatement\");\n  }\n\n  parseSwitchStatement(node) {\n    this.next();\n    node.discriminant = this.parseHeaderExpression();\n    const cases = node.cases = [];\n    this.expect(types$1.braceL);\n    this.state.labels.push(switchLabel);\n    this.scope.enter(SCOPE_OTHER);\n    let cur;\n\n    for (let sawDefault; !this.match(types$1.braceR);) {\n      if (this.match(types$1._case) || this.match(types$1._default)) {\n        const isCase = this.match(types$1._case);\n        if (cur) this.finishNode(cur, \"SwitchCase\");\n        cases.push(cur = this.startNode());\n        cur.consequent = [];\n        this.next();\n\n        if (isCase) {\n          cur.test = this.parseExpression();\n        } else {\n          if (sawDefault) {\n            this.raise(this.state.lastTokStart, ErrorMessages.MultipleDefaultsInSwitch);\n          }\n\n          sawDefault = true;\n          cur.test = null;\n        }\n\n        this.expect(types$1.colon);\n      } else {\n        if (cur) {\n          cur.consequent.push(this.parseStatement(null));\n        } else {\n          this.unexpected();\n        }\n      }\n    }\n\n    this.scope.exit();\n    if (cur) this.finishNode(cur, \"SwitchCase\");\n    this.next();\n    this.state.labels.pop();\n    return this.finishNode(node, \"SwitchStatement\");\n  }\n\n  parseThrowStatement(node) {\n    this.next();\n\n    if (this.hasPrecedingLineBreak()) {\n      this.raise(this.state.lastTokEnd, ErrorMessages.NewlineAfterThrow);\n    }\n\n    node.argument = this.parseExpression();\n    this.semicolon();\n    return this.finishNode(node, \"ThrowStatement\");\n  }\n\n  parseCatchClauseParam() {\n    const param = this.parseBindingAtom();\n    const simple = param.type === \"Identifier\";\n    this.scope.enter(simple ? SCOPE_SIMPLE_CATCH : 0);\n    this.checkLVal(param, \"catch clause\", BIND_LEXICAL);\n    return param;\n  }\n\n  parseTryStatement(node) {\n    this.next();\n    node.block = this.parseBlock();\n    node.handler = null;\n\n    if (this.match(types$1._catch)) {\n      const clause = this.startNode();\n      this.next();\n\n      if (this.match(types$1.parenL)) {\n        this.expect(types$1.parenL);\n        clause.param = this.parseCatchClauseParam();\n        this.expect(types$1.parenR);\n      } else {\n        clause.param = null;\n        this.scope.enter(SCOPE_OTHER);\n      }\n\n      clause.body = this.withTopicForbiddingContext(() => this.parseBlock(false, false));\n      this.scope.exit();\n      node.handler = this.finishNode(clause, \"CatchClause\");\n    }\n\n    node.finalizer = this.eat(types$1._finally) ? this.parseBlock() : null;\n\n    if (!node.handler && !node.finalizer) {\n      this.raise(node.start, ErrorMessages.NoCatchOrFinally);\n    }\n\n    return this.finishNode(node, \"TryStatement\");\n  }\n\n  parseVarStatement(node, kind) {\n    this.next();\n    this.parseVar(node, false, kind);\n    this.semicolon();\n    return this.finishNode(node, \"VariableDeclaration\");\n  }\n\n  parseWhileStatement(node) {\n    this.next();\n    node.test = this.parseHeaderExpression();\n    this.state.labels.push(loopLabel);\n    node.body = this.withTopicForbiddingContext(() => this.parseStatement(\"while\"));\n    this.state.labels.pop();\n    return this.finishNode(node, \"WhileStatement\");\n  }\n\n  parseWithStatement(node) {\n    if (this.state.strict) {\n      this.raise(this.state.start, ErrorMessages.StrictWith);\n    }\n\n    this.next();\n    node.object = this.parseHeaderExpression();\n    node.body = this.withTopicForbiddingContext(() => this.parseStatement(\"with\"));\n    return this.finishNode(node, \"WithStatement\");\n  }\n\n  parseEmptyStatement(node) {\n    this.next();\n    return this.finishNode(node, \"EmptyStatement\");\n  }\n\n  parseLabeledStatement(node, maybeName, expr, context) {\n    for (const label of this.state.labels) {\n      if (label.name === maybeName) {\n        this.raise(expr.start, ErrorMessages.LabelRedeclaration, maybeName);\n      }\n    }\n\n    const kind = this.state.type.isLoop ? \"loop\" : this.match(types$1._switch) ? \"switch\" : null;\n\n    for (let i = this.state.labels.length - 1; i >= 0; i--) {\n      const label = this.state.labels[i];\n\n      if (label.statementStart === node.start) {\n        label.statementStart = this.state.start;\n        label.kind = kind;\n      } else {\n        break;\n      }\n    }\n\n    this.state.labels.push({\n      name: maybeName,\n      kind: kind,\n      statementStart: this.state.start\n    });\n    node.body = this.parseStatement(context ? context.indexOf(\"label\") === -1 ? context + \"label\" : context : \"label\");\n    this.state.labels.pop();\n    node.label = expr;\n    return this.finishNode(node, \"LabeledStatement\");\n  }\n\n  parseExpressionStatement(node, expr) {\n    node.expression = expr;\n    this.semicolon();\n    return this.finishNode(node, \"ExpressionStatement\");\n  }\n\n  parseBlock(allowDirectives = false, createNewLexicalScope = true, afterBlockParse) {\n    const node = this.startNode();\n\n    if (allowDirectives) {\n      this.state.strictErrors.clear();\n    }\n\n    this.expect(types$1.braceL);\n\n    if (createNewLexicalScope) {\n      this.scope.enter(SCOPE_OTHER);\n    }\n\n    this.parseBlockBody(node, allowDirectives, false, types$1.braceR, afterBlockParse);\n\n    if (createNewLexicalScope) {\n      this.scope.exit();\n    }\n\n    return this.finishNode(node, \"BlockStatement\");\n  }\n\n  isValidDirective(stmt) {\n    return stmt.type === \"ExpressionStatement\" && stmt.expression.type === \"StringLiteral\" && !stmt.expression.extra.parenthesized;\n  }\n\n  parseBlockBody(node, allowDirectives, topLevel, end, afterBlockParse) {\n    const body = node.body = [];\n    const directives = node.directives = [];\n    this.parseBlockOrModuleBlockBody(body, allowDirectives ? directives : undefined, topLevel, end, afterBlockParse);\n  }\n\n  parseBlockOrModuleBlockBody(body, directives, topLevel, end, afterBlockParse) {\n    const oldStrict = this.state.strict;\n    let hasStrictModeDirective = false;\n    let parsedNonDirective = false;\n\n    while (!this.match(end)) {\n      const stmt = this.parseStatement(null, topLevel);\n\n      if (directives && !parsedNonDirective) {\n        if (this.isValidDirective(stmt)) {\n          const directive = this.stmtToDirective(stmt);\n          directives.push(directive);\n\n          if (!hasStrictModeDirective && directive.value.value === \"use strict\") {\n            hasStrictModeDirective = true;\n            this.setStrict(true);\n          }\n\n          continue;\n        }\n\n        parsedNonDirective = true;\n        this.state.strictErrors.clear();\n      }\n\n      body.push(stmt);\n    }\n\n    if (afterBlockParse) {\n      afterBlockParse.call(this, hasStrictModeDirective);\n    }\n\n    if (!oldStrict) {\n      this.setStrict(false);\n    }\n\n    this.next();\n  }\n\n  parseFor(node, init) {\n    node.init = init;\n    this.semicolon(false);\n    node.test = this.match(types$1.semi) ? null : this.parseExpression();\n    this.semicolon(false);\n    node.update = this.match(types$1.parenR) ? null : this.parseExpression();\n    this.expect(types$1.parenR);\n    node.body = this.withTopicForbiddingContext(() => this.parseStatement(\"for\"));\n    this.scope.exit();\n    this.state.labels.pop();\n    return this.finishNode(node, \"ForStatement\");\n  }\n\n  parseForIn(node, init, awaitAt) {\n    const isForIn = this.match(types$1._in);\n    this.next();\n\n    if (isForIn) {\n      if (awaitAt > -1) this.unexpected(awaitAt);\n    } else {\n      node.await = awaitAt > -1;\n    }\n\n    if (init.type === \"VariableDeclaration\" && init.declarations[0].init != null && (!isForIn || this.state.strict || init.kind !== \"var\" || init.declarations[0].id.type !== \"Identifier\")) {\n      this.raise(init.start, ErrorMessages.ForInOfLoopInitializer, isForIn ? \"for-in\" : \"for-of\");\n    } else if (init.type === \"AssignmentPattern\") {\n      this.raise(init.start, ErrorMessages.InvalidLhs, \"for-loop\");\n    }\n\n    node.left = init;\n    node.right = isForIn ? this.parseExpression() : this.parseMaybeAssignAllowIn();\n    this.expect(types$1.parenR);\n    node.body = this.withTopicForbiddingContext(() => this.parseStatement(\"for\"));\n    this.scope.exit();\n    this.state.labels.pop();\n    return this.finishNode(node, isForIn ? \"ForInStatement\" : \"ForOfStatement\");\n  }\n\n  parseVar(node, isFor, kind) {\n    const declarations = node.declarations = [];\n    const isTypescript = this.hasPlugin(\"typescript\");\n    node.kind = kind;\n\n    for (;;) {\n      const decl = this.startNode();\n      this.parseVarId(decl, kind);\n\n      if (this.eat(types$1.eq)) {\n        decl.init = isFor ? this.parseMaybeAssignDisallowIn() : this.parseMaybeAssignAllowIn();\n      } else {\n        if (kind === \"const\" && !(this.match(types$1._in) || this.isContextual(\"of\"))) {\n          if (!isTypescript) {\n            this.raise(this.state.lastTokEnd, ErrorMessages.DeclarationMissingInitializer, \"Const declarations\");\n          }\n        } else if (decl.id.type !== \"Identifier\" && !(isFor && (this.match(types$1._in) || this.isContextual(\"of\")))) {\n          this.raise(this.state.lastTokEnd, ErrorMessages.DeclarationMissingInitializer, \"Complex binding patterns\");\n        }\n\n        decl.init = null;\n      }\n\n      declarations.push(this.finishNode(decl, \"VariableDeclarator\"));\n      if (!this.eat(types$1.comma)) break;\n    }\n\n    return node;\n  }\n\n  parseVarId(decl, kind) {\n    decl.id = this.parseBindingAtom();\n    this.checkLVal(decl.id, \"variable declaration\", kind === \"var\" ? BIND_VAR : BIND_LEXICAL, undefined, kind !== \"var\");\n  }\n\n  parseFunction(node, statement = FUNC_NO_FLAGS, isAsync = false) {\n    const isStatement = statement & FUNC_STATEMENT;\n    const isHangingStatement = statement & FUNC_HANGING_STATEMENT;\n    const requireId = !!isStatement && !(statement & FUNC_NULLABLE_ID);\n    this.initFunction(node, isAsync);\n\n    if (this.match(types$1.star) && isHangingStatement) {\n      this.raise(this.state.start, ErrorMessages.GeneratorInSingleStatementContext);\n    }\n\n    node.generator = this.eat(types$1.star);\n\n    if (isStatement) {\n      node.id = this.parseFunctionId(requireId);\n    }\n\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n    this.state.maybeInArrowParameters = false;\n    this.scope.enter(SCOPE_FUNCTION);\n    this.prodParam.enter(functionFlags(isAsync, node.generator));\n\n    if (!isStatement) {\n      node.id = this.parseFunctionId();\n    }\n\n    this.parseFunctionParams(node, false);\n    this.withTopicForbiddingContext(() => {\n      this.parseFunctionBodyAndFinish(node, isStatement ? \"FunctionDeclaration\" : \"FunctionExpression\");\n    });\n    this.prodParam.exit();\n    this.scope.exit();\n\n    if (isStatement && !isHangingStatement) {\n      this.registerFunctionStatementId(node);\n    }\n\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n    return node;\n  }\n\n  parseFunctionId(requireId) {\n    return requireId || this.match(types$1.name) ? this.parseIdentifier() : null;\n  }\n\n  parseFunctionParams(node, allowModifiers) {\n    this.expect(types$1.parenL);\n    this.expressionScope.enter(newParameterDeclarationScope());\n    node.params = this.parseBindingList(types$1.parenR, 41, false, allowModifiers);\n    this.expressionScope.exit();\n  }\n\n  registerFunctionStatementId(node) {\n    if (!node.id) return;\n    this.scope.declareName(node.id.name, this.state.strict || node.generator || node.async ? this.scope.treatFunctionsAsVar ? BIND_VAR : BIND_LEXICAL : BIND_FUNCTION, node.id.start);\n  }\n\n  parseClass(node, isStatement, optionalId) {\n    this.next();\n    this.takeDecorators(node);\n    const oldStrict = this.state.strict;\n    this.state.strict = true;\n    this.parseClassId(node, isStatement, optionalId);\n    this.parseClassSuper(node);\n    node.body = this.parseClassBody(!!node.superClass, oldStrict);\n    return this.finishNode(node, isStatement ? \"ClassDeclaration\" : \"ClassExpression\");\n  }\n\n  isClassProperty() {\n    return this.match(types$1.eq) || this.match(types$1.semi) || this.match(types$1.braceR);\n  }\n\n  isClassMethod() {\n    return this.match(types$1.parenL);\n  }\n\n  isNonstaticConstructor(method) {\n    return !method.computed && !method.static && (method.key.name === \"constructor\" || method.key.value === \"constructor\");\n  }\n\n  parseClassBody(hadSuperClass, oldStrict) {\n    this.classScope.enter();\n    const state = {\n      hadConstructor: false,\n      hadSuperClass\n    };\n    let decorators = [];\n    const classBody = this.startNode();\n    classBody.body = [];\n    this.expect(types$1.braceL);\n    this.withTopicForbiddingContext(() => {\n      while (!this.match(types$1.braceR)) {\n        if (this.eat(types$1.semi)) {\n          if (decorators.length > 0) {\n            throw this.raise(this.state.lastTokEnd, ErrorMessages.DecoratorSemicolon);\n          }\n\n          continue;\n        }\n\n        if (this.match(types$1.at)) {\n          decorators.push(this.parseDecorator());\n          continue;\n        }\n\n        const member = this.startNode();\n\n        if (decorators.length) {\n          member.decorators = decorators;\n          this.resetStartLocationFromNode(member, decorators[0]);\n          decorators = [];\n        }\n\n        this.parseClassMember(classBody, member, state);\n\n        if (member.kind === \"constructor\" && member.decorators && member.decorators.length > 0) {\n          this.raise(member.start, ErrorMessages.DecoratorConstructor);\n        }\n      }\n    });\n    this.state.strict = oldStrict;\n    this.next();\n\n    if (decorators.length) {\n      throw this.raise(this.state.start, ErrorMessages.TrailingDecorator);\n    }\n\n    this.classScope.exit();\n    return this.finishNode(classBody, \"ClassBody\");\n  }\n\n  parseClassMemberFromModifier(classBody, member) {\n    const key = this.parseIdentifier(true);\n\n    if (this.isClassMethod()) {\n      const method = member;\n      method.kind = \"method\";\n      method.computed = false;\n      method.key = key;\n      method.static = false;\n      this.pushClassMethod(classBody, method, false, false, false, false);\n      return true;\n    } else if (this.isClassProperty()) {\n      const prop = member;\n      prop.computed = false;\n      prop.key = key;\n      prop.static = false;\n      classBody.body.push(this.parseClassProperty(prop));\n      return true;\n    }\n\n    return false;\n  }\n\n  parseClassMember(classBody, member, state) {\n    const isStatic = this.isContextual(\"static\");\n\n    if (isStatic) {\n      if (this.parseClassMemberFromModifier(classBody, member)) {\n        return;\n      }\n\n      if (this.eat(types$1.braceL)) {\n        this.parseClassStaticBlock(classBody, member);\n        return;\n      }\n    }\n\n    this.parseClassMemberWithIsStatic(classBody, member, state, isStatic);\n  }\n\n  parseClassMemberWithIsStatic(classBody, member, state, isStatic) {\n    const publicMethod = member;\n    const privateMethod = member;\n    const publicProp = member;\n    const privateProp = member;\n    const method = publicMethod;\n    const publicMember = publicMethod;\n    member.static = isStatic;\n\n    if (this.eat(types$1.star)) {\n      method.kind = \"method\";\n      const isPrivateName = this.match(types$1.privateName);\n      this.parseClassElementName(method);\n\n      if (isPrivateName) {\n        this.pushClassPrivateMethod(classBody, privateMethod, true, false);\n        return;\n      }\n\n      if (this.isNonstaticConstructor(publicMethod)) {\n        this.raise(publicMethod.key.start, ErrorMessages.ConstructorIsGenerator);\n      }\n\n      this.pushClassMethod(classBody, publicMethod, true, false, false, false);\n      return;\n    }\n\n    const containsEsc = this.state.containsEsc;\n    const isPrivate = this.match(types$1.privateName);\n    const key = this.parseClassElementName(member);\n    const isSimple = key.type === \"Identifier\";\n    const maybeQuestionTokenStart = this.state.start;\n    this.parsePostMemberNameModifiers(publicMember);\n\n    if (this.isClassMethod()) {\n      method.kind = \"method\";\n\n      if (isPrivate) {\n        this.pushClassPrivateMethod(classBody, privateMethod, false, false);\n        return;\n      }\n\n      const isConstructor = this.isNonstaticConstructor(publicMethod);\n      let allowsDirectSuper = false;\n\n      if (isConstructor) {\n        publicMethod.kind = \"constructor\";\n\n        if (state.hadConstructor && !this.hasPlugin(\"typescript\")) {\n          this.raise(key.start, ErrorMessages.DuplicateConstructor);\n        }\n\n        if (isConstructor && this.hasPlugin(\"typescript\") && member.override) {\n          this.raise(key.start, ErrorMessages.OverrideOnConstructor);\n        }\n\n        state.hadConstructor = true;\n        allowsDirectSuper = state.hadSuperClass;\n      }\n\n      this.pushClassMethod(classBody, publicMethod, false, false, isConstructor, allowsDirectSuper);\n    } else if (this.isClassProperty()) {\n      if (isPrivate) {\n        this.pushClassPrivateProperty(classBody, privateProp);\n      } else {\n        this.pushClassProperty(classBody, publicProp);\n      }\n    } else if (isSimple && key.name === \"async\" && !containsEsc && !this.isLineTerminator()) {\n      const isGenerator = this.eat(types$1.star);\n\n      if (publicMember.optional) {\n        this.unexpected(maybeQuestionTokenStart);\n      }\n\n      method.kind = \"method\";\n      const isPrivate = this.match(types$1.privateName);\n      this.parseClassElementName(method);\n      this.parsePostMemberNameModifiers(publicMember);\n\n      if (isPrivate) {\n        this.pushClassPrivateMethod(classBody, privateMethod, isGenerator, true);\n      } else {\n        if (this.isNonstaticConstructor(publicMethod)) {\n          this.raise(publicMethod.key.start, ErrorMessages.ConstructorIsAsync);\n        }\n\n        this.pushClassMethod(classBody, publicMethod, isGenerator, true, false, false);\n      }\n    } else if (isSimple && (key.name === \"get\" || key.name === \"set\") && !containsEsc && !(this.match(types$1.star) && this.isLineTerminator())) {\n      method.kind = key.name;\n      const isPrivate = this.match(types$1.privateName);\n      this.parseClassElementName(publicMethod);\n\n      if (isPrivate) {\n        this.pushClassPrivateMethod(classBody, privateMethod, false, false);\n      } else {\n        if (this.isNonstaticConstructor(publicMethod)) {\n          this.raise(publicMethod.key.start, ErrorMessages.ConstructorIsAccessor);\n        }\n\n        this.pushClassMethod(classBody, publicMethod, false, false, false, false);\n      }\n\n      this.checkGetterSetterParams(publicMethod);\n    } else if (this.isLineTerminator()) {\n      if (isPrivate) {\n        this.pushClassPrivateProperty(classBody, privateProp);\n      } else {\n        this.pushClassProperty(classBody, publicProp);\n      }\n    } else {\n      this.unexpected();\n    }\n  }\n\n  parseClassElementName(member) {\n    const {\n      type,\n      value,\n      start\n    } = this.state;\n\n    if ((type === types$1.name || type === types$1.string) && member.static && value === \"prototype\") {\n      this.raise(start, ErrorMessages.StaticPrototype);\n    }\n\n    if (type === types$1.privateName && value === \"constructor\") {\n      this.raise(start, ErrorMessages.ConstructorClassPrivateField);\n    }\n\n    return this.parsePropertyName(member, true);\n  }\n\n  parseClassStaticBlock(classBody, member) {\n    var _member$decorators;\n\n    this.expectPlugin(\"classStaticBlock\", member.start);\n    this.scope.enter(SCOPE_CLASS | SCOPE_STATIC_BLOCK | SCOPE_SUPER);\n    const oldLabels = this.state.labels;\n    this.state.labels = [];\n    this.prodParam.enter(PARAM);\n    const body = member.body = [];\n    this.parseBlockOrModuleBlockBody(body, undefined, false, types$1.braceR);\n    this.prodParam.exit();\n    this.scope.exit();\n    this.state.labels = oldLabels;\n    classBody.body.push(this.finishNode(member, \"StaticBlock\"));\n\n    if ((_member$decorators = member.decorators) != null && _member$decorators.length) {\n      this.raise(member.start, ErrorMessages.DecoratorStaticBlock);\n    }\n  }\n\n  pushClassProperty(classBody, prop) {\n    if (!prop.computed && (prop.key.name === \"constructor\" || prop.key.value === \"constructor\")) {\n      this.raise(prop.key.start, ErrorMessages.ConstructorClassField);\n    }\n\n    classBody.body.push(this.parseClassProperty(prop));\n  }\n\n  pushClassPrivateProperty(classBody, prop) {\n    const node = this.parseClassPrivateProperty(prop);\n    classBody.body.push(node);\n    this.classScope.declarePrivateName(this.getPrivateNameSV(node.key), CLASS_ELEMENT_OTHER, node.key.start);\n  }\n\n  pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper) {\n    classBody.body.push(this.parseMethod(method, isGenerator, isAsync, isConstructor, allowsDirectSuper, \"ClassMethod\", true));\n  }\n\n  pushClassPrivateMethod(classBody, method, isGenerator, isAsync) {\n    const node = this.parseMethod(method, isGenerator, isAsync, false, false, \"ClassPrivateMethod\", true);\n    classBody.body.push(node);\n    const kind = node.kind === \"get\" ? node.static ? CLASS_ELEMENT_STATIC_GETTER : CLASS_ELEMENT_INSTANCE_GETTER : node.kind === \"set\" ? node.static ? CLASS_ELEMENT_STATIC_SETTER : CLASS_ELEMENT_INSTANCE_SETTER : CLASS_ELEMENT_OTHER;\n    this.classScope.declarePrivateName(this.getPrivateNameSV(node.key), kind, node.key.start);\n  }\n\n  parsePostMemberNameModifiers(methodOrProp) {}\n\n  parseClassPrivateProperty(node) {\n    this.parseInitializer(node);\n    this.semicolon();\n    return this.finishNode(node, \"ClassPrivateProperty\");\n  }\n\n  parseClassProperty(node) {\n    this.parseInitializer(node);\n    this.semicolon();\n    return this.finishNode(node, \"ClassProperty\");\n  }\n\n  parseInitializer(node) {\n    this.scope.enter(SCOPE_CLASS | SCOPE_SUPER);\n    this.expressionScope.enter(newExpressionScope());\n    this.prodParam.enter(PARAM);\n    node.value = this.eat(types$1.eq) ? this.parseMaybeAssignAllowIn() : null;\n    this.expressionScope.exit();\n    this.prodParam.exit();\n    this.scope.exit();\n  }\n\n  parseClassId(node, isStatement, optionalId, bindingType = BIND_CLASS) {\n    if (this.match(types$1.name)) {\n      node.id = this.parseIdentifier();\n\n      if (isStatement) {\n        this.checkLVal(node.id, \"class name\", bindingType);\n      }\n    } else {\n      if (optionalId || !isStatement) {\n        node.id = null;\n      } else {\n        this.unexpected(null, ErrorMessages.MissingClassName);\n      }\n    }\n  }\n\n  parseClassSuper(node) {\n    node.superClass = this.eat(types$1._extends) ? this.parseExprSubscripts() : null;\n  }\n\n  parseExport(node) {\n    const hasDefault = this.maybeParseExportDefaultSpecifier(node);\n    const parseAfterDefault = !hasDefault || this.eat(types$1.comma);\n    const hasStar = parseAfterDefault && this.eatExportStar(node);\n    const hasNamespace = hasStar && this.maybeParseExportNamespaceSpecifier(node);\n    const parseAfterNamespace = parseAfterDefault && (!hasNamespace || this.eat(types$1.comma));\n    const isFromRequired = hasDefault || hasStar;\n\n    if (hasStar && !hasNamespace) {\n      if (hasDefault) this.unexpected();\n      this.parseExportFrom(node, true);\n      return this.finishNode(node, \"ExportAllDeclaration\");\n    }\n\n    const hasSpecifiers = this.maybeParseExportNamedSpecifiers(node);\n\n    if (hasDefault && parseAfterDefault && !hasStar && !hasSpecifiers || hasNamespace && parseAfterNamespace && !hasSpecifiers) {\n      throw this.unexpected(null, types$1.braceL);\n    }\n\n    let hasDeclaration;\n\n    if (isFromRequired || hasSpecifiers) {\n      hasDeclaration = false;\n      this.parseExportFrom(node, isFromRequired);\n    } else {\n      hasDeclaration = this.maybeParseExportDeclaration(node);\n    }\n\n    if (isFromRequired || hasSpecifiers || hasDeclaration) {\n      this.checkExport(node, true, false, !!node.source);\n      return this.finishNode(node, \"ExportNamedDeclaration\");\n    }\n\n    if (this.eat(types$1._default)) {\n      node.declaration = this.parseExportDefaultExpression();\n      this.checkExport(node, true, true);\n      return this.finishNode(node, \"ExportDefaultDeclaration\");\n    }\n\n    throw this.unexpected(null, types$1.braceL);\n  }\n\n  eatExportStar(node) {\n    return this.eat(types$1.star);\n  }\n\n  maybeParseExportDefaultSpecifier(node) {\n    if (this.isExportDefaultSpecifier()) {\n      this.expectPlugin(\"exportDefaultFrom\");\n      const specifier = this.startNode();\n      specifier.exported = this.parseIdentifier(true);\n      node.specifiers = [this.finishNode(specifier, \"ExportDefaultSpecifier\")];\n      return true;\n    }\n\n    return false;\n  }\n\n  maybeParseExportNamespaceSpecifier(node) {\n    if (this.isContextual(\"as\")) {\n      if (!node.specifiers) node.specifiers = [];\n      const specifier = this.startNodeAt(this.state.lastTokStart, this.state.lastTokStartLoc);\n      this.next();\n      specifier.exported = this.parseModuleExportName();\n      node.specifiers.push(this.finishNode(specifier, \"ExportNamespaceSpecifier\"));\n      return true;\n    }\n\n    return false;\n  }\n\n  maybeParseExportNamedSpecifiers(node) {\n    if (this.match(types$1.braceL)) {\n      if (!node.specifiers) node.specifiers = [];\n      node.specifiers.push(...this.parseExportSpecifiers());\n      node.source = null;\n      node.declaration = null;\n      return true;\n    }\n\n    return false;\n  }\n\n  maybeParseExportDeclaration(node) {\n    if (this.shouldParseExportDeclaration()) {\n      node.specifiers = [];\n      node.source = null;\n      node.declaration = this.parseExportDeclaration(node);\n      return true;\n    }\n\n    return false;\n  }\n\n  isAsyncFunction() {\n    if (!this.isContextual(\"async\")) return false;\n    const next = this.nextTokenStart();\n    return !lineBreak.test(this.input.slice(this.state.pos, next)) && this.isUnparsedContextual(next, \"function\");\n  }\n\n  parseExportDefaultExpression() {\n    const expr = this.startNode();\n    const isAsync = this.isAsyncFunction();\n\n    if (this.match(types$1._function) || isAsync) {\n      this.next();\n\n      if (isAsync) {\n        this.next();\n      }\n\n      return this.parseFunction(expr, FUNC_STATEMENT | FUNC_NULLABLE_ID, isAsync);\n    } else if (this.match(types$1._class)) {\n      return this.parseClass(expr, true, true);\n    } else if (this.match(types$1.at)) {\n      if (this.hasPlugin(\"decorators\") && this.getPluginOption(\"decorators\", \"decoratorsBeforeExport\")) {\n        this.raise(this.state.start, ErrorMessages.DecoratorBeforeExport);\n      }\n\n      this.parseDecorators(false);\n      return this.parseClass(expr, true, true);\n    } else if (this.match(types$1._const) || this.match(types$1._var) || this.isLet()) {\n      throw this.raise(this.state.start, ErrorMessages.UnsupportedDefaultExport);\n    } else {\n      const res = this.parseMaybeAssignAllowIn();\n      this.semicolon();\n      return res;\n    }\n  }\n\n  parseExportDeclaration(node) {\n    return this.parseStatement(null);\n  }\n\n  isExportDefaultSpecifier() {\n    if (this.match(types$1.name)) {\n      const value = this.state.value;\n\n      if (value === \"async\" && !this.state.containsEsc || value === \"let\") {\n        return false;\n      }\n\n      if ((value === \"type\" || value === \"interface\") && !this.state.containsEsc) {\n        const l = this.lookahead();\n\n        if (l.type === types$1.name && l.value !== \"from\" || l.type === types$1.braceL) {\n          this.expectOnePlugin([\"flow\", \"typescript\"]);\n          return false;\n        }\n      }\n    } else if (!this.match(types$1._default)) {\n      return false;\n    }\n\n    const next = this.nextTokenStart();\n    const hasFrom = this.isUnparsedContextual(next, \"from\");\n\n    if (this.input.charCodeAt(next) === 44 || this.match(types$1.name) && hasFrom) {\n      return true;\n    }\n\n    if (this.match(types$1._default) && hasFrom) {\n      const nextAfterFrom = this.input.charCodeAt(this.nextTokenStartSince(next + 4));\n      return nextAfterFrom === 34 || nextAfterFrom === 39;\n    }\n\n    return false;\n  }\n\n  parseExportFrom(node, expect) {\n    if (this.eatContextual(\"from\")) {\n      node.source = this.parseImportSource();\n      this.checkExport(node);\n      const assertions = this.maybeParseImportAssertions();\n\n      if (assertions) {\n        node.assertions = assertions;\n      }\n    } else {\n      if (expect) {\n        this.unexpected();\n      } else {\n        node.source = null;\n      }\n    }\n\n    this.semicolon();\n  }\n\n  shouldParseExportDeclaration() {\n    if (this.match(types$1.at)) {\n      this.expectOnePlugin([\"decorators\", \"decorators-legacy\"]);\n\n      if (this.hasPlugin(\"decorators\")) {\n        if (this.getPluginOption(\"decorators\", \"decoratorsBeforeExport\")) {\n          this.unexpected(this.state.start, ErrorMessages.DecoratorBeforeExport);\n        } else {\n          return true;\n        }\n      }\n    }\n\n    return this.state.type.keyword === \"var\" || this.state.type.keyword === \"const\" || this.state.type.keyword === \"function\" || this.state.type.keyword === \"class\" || this.isLet() || this.isAsyncFunction();\n  }\n\n  checkExport(node, checkNames, isDefault, isFrom) {\n    if (checkNames) {\n      if (isDefault) {\n        this.checkDuplicateExports(node, \"default\");\n\n        if (this.hasPlugin(\"exportDefaultFrom\")) {\n          var _declaration$extra;\n\n          const declaration = node.declaration;\n\n          if (declaration.type === \"Identifier\" && declaration.name === \"from\" && declaration.end - declaration.start === 4 && !((_declaration$extra = declaration.extra) != null && _declaration$extra.parenthesized)) {\n            this.raise(declaration.start, ErrorMessages.ExportDefaultFromAsIdentifier);\n          }\n        }\n      } else if (node.specifiers && node.specifiers.length) {\n        for (const specifier of node.specifiers) {\n          const {\n            exported\n          } = specifier;\n          const exportedName = exported.type === \"Identifier\" ? exported.name : exported.value;\n          this.checkDuplicateExports(specifier, exportedName);\n\n          if (!isFrom && specifier.local) {\n            const {\n              local\n            } = specifier;\n\n            if (local.type === \"StringLiteral\") {\n              this.raise(specifier.start, ErrorMessages.ExportBindingIsString, local.value, exportedName);\n            } else {\n              this.checkReservedWord(local.name, local.start, true, false);\n              this.scope.checkLocalExport(local);\n            }\n          }\n        }\n      } else if (node.declaration) {\n        if (node.declaration.type === \"FunctionDeclaration\" || node.declaration.type === \"ClassDeclaration\") {\n          const id = node.declaration.id;\n          if (!id) throw new Error(\"Assertion failure\");\n          this.checkDuplicateExports(node, id.name);\n        } else if (node.declaration.type === \"VariableDeclaration\") {\n          for (const declaration of node.declaration.declarations) {\n            this.checkDeclaration(declaration.id);\n          }\n        }\n      }\n    }\n\n    const currentContextDecorators = this.state.decoratorStack[this.state.decoratorStack.length - 1];\n\n    if (currentContextDecorators.length) {\n      throw this.raise(node.start, ErrorMessages.UnsupportedDecoratorExport);\n    }\n  }\n\n  checkDeclaration(node) {\n    if (node.type === \"Identifier\") {\n      this.checkDuplicateExports(node, node.name);\n    } else if (node.type === \"ObjectPattern\") {\n      for (const prop of node.properties) {\n        this.checkDeclaration(prop);\n      }\n    } else if (node.type === \"ArrayPattern\") {\n      for (const elem of node.elements) {\n        if (elem) {\n          this.checkDeclaration(elem);\n        }\n      }\n    } else if (node.type === \"ObjectProperty\") {\n      this.checkDeclaration(node.value);\n    } else if (node.type === \"RestElement\") {\n      this.checkDeclaration(node.argument);\n    } else if (node.type === \"AssignmentPattern\") {\n      this.checkDeclaration(node.left);\n    }\n  }\n\n  checkDuplicateExports(node, name) {\n    if (this.state.exportedIdentifiers.indexOf(name) > -1) {\n      this.raise(node.start, name === \"default\" ? ErrorMessages.DuplicateDefaultExport : ErrorMessages.DuplicateExport, name);\n    }\n\n    this.state.exportedIdentifiers.push(name);\n  }\n\n  parseExportSpecifiers() {\n    const nodes = [];\n    let first = true;\n    this.expect(types$1.braceL);\n\n    while (!this.eat(types$1.braceR)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(types$1.comma);\n        if (this.eat(types$1.braceR)) break;\n      }\n\n      const node = this.startNode();\n      node.local = this.parseModuleExportName();\n      node.exported = this.eatContextual(\"as\") ? this.parseModuleExportName() : node.local.__clone();\n      nodes.push(this.finishNode(node, \"ExportSpecifier\"));\n    }\n\n    return nodes;\n  }\n\n  parseModuleExportName() {\n    if (this.match(types$1.string)) {\n      const result = this.parseLiteral(this.state.value, \"StringLiteral\");\n      const surrogate = result.value.match(loneSurrogate);\n\n      if (surrogate) {\n        this.raise(result.start, ErrorMessages.ModuleExportNameHasLoneSurrogate, surrogate[0].charCodeAt(0).toString(16));\n      }\n\n      return result;\n    }\n\n    return this.parseIdentifier(true);\n  }\n\n  parseImport(node) {\n    node.specifiers = [];\n\n    if (!this.match(types$1.string)) {\n      const hasDefault = this.maybeParseDefaultImportSpecifier(node);\n      const parseNext = !hasDefault || this.eat(types$1.comma);\n      const hasStar = parseNext && this.maybeParseStarImportSpecifier(node);\n      if (parseNext && !hasStar) this.parseNamedImportSpecifiers(node);\n      this.expectContextual(\"from\");\n    }\n\n    node.source = this.parseImportSource();\n    const assertions = this.maybeParseImportAssertions();\n\n    if (assertions) {\n      node.assertions = assertions;\n    } else {\n        const attributes = this.maybeParseModuleAttributes();\n\n        if (attributes) {\n          node.attributes = attributes;\n        }\n      }\n\n    this.semicolon();\n    return this.finishNode(node, \"ImportDeclaration\");\n  }\n\n  parseImportSource() {\n    if (!this.match(types$1.string)) this.unexpected();\n    return this.parseExprAtom();\n  }\n\n  shouldParseDefaultImport(node) {\n    return this.match(types$1.name);\n  }\n\n  parseImportSpecifierLocal(node, specifier, type, contextDescription) {\n    specifier.local = this.parseIdentifier();\n    this.checkLVal(specifier.local, contextDescription, BIND_LEXICAL);\n    node.specifiers.push(this.finishNode(specifier, type));\n  }\n\n  parseAssertEntries() {\n    const attrs = [];\n    const attrNames = new Set();\n\n    do {\n      if (this.match(types$1.braceR)) {\n        break;\n      }\n\n      const node = this.startNode();\n      const keyName = this.state.value;\n\n      if (this.match(types$1.string)) {\n        node.key = this.parseLiteral(keyName, \"StringLiteral\");\n      } else {\n        node.key = this.parseIdentifier(true);\n      }\n\n      this.expect(types$1.colon);\n\n      if (keyName !== \"type\") {\n        this.raise(node.key.start, ErrorMessages.ModuleAttributeDifferentFromType, keyName);\n      }\n\n      if (attrNames.has(keyName)) {\n        this.raise(node.key.start, ErrorMessages.ModuleAttributesWithDuplicateKeys, keyName);\n      }\n\n      attrNames.add(keyName);\n\n      if (!this.match(types$1.string)) {\n        throw this.unexpected(this.state.start, ErrorMessages.ModuleAttributeInvalidValue);\n      }\n\n      node.value = this.parseLiteral(this.state.value, \"StringLiteral\");\n      this.finishNode(node, \"ImportAttribute\");\n      attrs.push(node);\n    } while (this.eat(types$1.comma));\n\n    return attrs;\n  }\n\n  maybeParseModuleAttributes() {\n    if (this.match(types$1._with) && !this.hasPrecedingLineBreak()) {\n      this.expectPlugin(\"moduleAttributes\");\n      this.next();\n    } else {\n      if (this.hasPlugin(\"moduleAttributes\")) return [];\n      return null;\n    }\n\n    const attrs = [];\n    const attributes = new Set();\n\n    do {\n      const node = this.startNode();\n      node.key = this.parseIdentifier(true);\n\n      if (node.key.name !== \"type\") {\n        this.raise(node.key.start, ErrorMessages.ModuleAttributeDifferentFromType, node.key.name);\n      }\n\n      if (attributes.has(node.key.name)) {\n        this.raise(node.key.start, ErrorMessages.ModuleAttributesWithDuplicateKeys, node.key.name);\n      }\n\n      attributes.add(node.key.name);\n      this.expect(types$1.colon);\n\n      if (!this.match(types$1.string)) {\n        throw this.unexpected(this.state.start, ErrorMessages.ModuleAttributeInvalidValue);\n      }\n\n      node.value = this.parseLiteral(this.state.value, \"StringLiteral\");\n      this.finishNode(node, \"ImportAttribute\");\n      attrs.push(node);\n    } while (this.eat(types$1.comma));\n\n    return attrs;\n  }\n\n  maybeParseImportAssertions() {\n    if (this.isContextual(\"assert\") && !this.hasPrecedingLineBreak()) {\n      this.expectPlugin(\"importAssertions\");\n      this.next();\n    } else {\n      if (this.hasPlugin(\"importAssertions\")) return [];\n      return null;\n    }\n\n    this.eat(types$1.braceL);\n    const attrs = this.parseAssertEntries();\n    this.eat(types$1.braceR);\n    return attrs;\n  }\n\n  maybeParseDefaultImportSpecifier(node) {\n    if (this.shouldParseDefaultImport(node)) {\n      this.parseImportSpecifierLocal(node, this.startNode(), \"ImportDefaultSpecifier\", \"default import specifier\");\n      return true;\n    }\n\n    return false;\n  }\n\n  maybeParseStarImportSpecifier(node) {\n    if (this.match(types$1.star)) {\n      const specifier = this.startNode();\n      this.next();\n      this.expectContextual(\"as\");\n      this.parseImportSpecifierLocal(node, specifier, \"ImportNamespaceSpecifier\", \"import namespace specifier\");\n      return true;\n    }\n\n    return false;\n  }\n\n  parseNamedImportSpecifiers(node) {\n    let first = true;\n    this.expect(types$1.braceL);\n\n    while (!this.eat(types$1.braceR)) {\n      if (first) {\n        first = false;\n      } else {\n        if (this.eat(types$1.colon)) {\n          throw this.raise(this.state.start, ErrorMessages.DestructureNamedImport);\n        }\n\n        this.expect(types$1.comma);\n        if (this.eat(types$1.braceR)) break;\n      }\n\n      this.parseImportSpecifier(node);\n    }\n  }\n\n  parseImportSpecifier(node) {\n    const specifier = this.startNode();\n    specifier.imported = this.parseModuleExportName();\n\n    if (this.eatContextual(\"as\")) {\n      specifier.local = this.parseIdentifier();\n    } else {\n      const {\n        imported\n      } = specifier;\n\n      if (imported.type === \"StringLiteral\") {\n        throw this.raise(specifier.start, ErrorMessages.ImportBindingIsString, imported.value);\n      }\n\n      this.checkReservedWord(imported.name, specifier.start, true, true);\n      specifier.local = imported.__clone();\n    }\n\n    this.checkLVal(specifier.local, \"import specifier\", BIND_LEXICAL);\n    node.specifiers.push(this.finishNode(specifier, \"ImportSpecifier\"));\n  }\n\n  isThisParam(param) {\n    return param.type === \"Identifier\" && param.name === \"this\";\n  }\n\n}\n\nclass Parser extends StatementParser {\n  constructor(options, input) {\n    options = getOptions(options);\n    super(options, input);\n    this.options = options;\n    this.initializeScopes();\n    this.plugins = pluginsMap(this.options.plugins);\n    this.filename = options.sourceFilename;\n  }\n\n  getScopeHandler() {\n    return ScopeHandler;\n  }\n\n  parse() {\n    this.enterInitialScopes();\n    const file = this.startNode();\n    const program = this.startNode();\n    this.nextToken();\n    file.errors = null;\n    this.parseTopLevel(file, program);\n    file.errors = this.state.errors;\n    return file;\n  }\n\n}\n\nfunction pluginsMap(plugins) {\n  const pluginMap = new Map();\n\n  for (const plugin of plugins) {\n    const [name, options] = Array.isArray(plugin) ? plugin : [plugin, {}];\n    if (!pluginMap.has(name)) pluginMap.set(name, options || {});\n  }\n\n  return pluginMap;\n}\n\nfunction parse(input, options) {\n  var _options;\n\n  if (((_options = options) == null ? void 0 : _options.sourceType) === \"unambiguous\") {\n    options = Object.assign({}, options);\n\n    try {\n      options.sourceType = \"module\";\n      const parser = getParser(options, input);\n      const ast = parser.parse();\n\n      if (parser.sawUnambiguousESM) {\n        return ast;\n      }\n\n      if (parser.ambiguousScriptDifferentAst) {\n        try {\n          options.sourceType = \"script\";\n          return getParser(options, input).parse();\n        } catch (_unused) {}\n      } else {\n        ast.program.sourceType = \"script\";\n      }\n\n      return ast;\n    } catch (moduleError) {\n      try {\n        options.sourceType = \"script\";\n        return getParser(options, input).parse();\n      } catch (_unused2) {}\n\n      throw moduleError;\n    }\n  } else {\n    return getParser(options, input).parse();\n  }\n}\nfunction parseExpression(input, options) {\n  const parser = getParser(options, input);\n\n  if (parser.options.strictMode) {\n    parser.state.strict = true;\n  }\n\n  return parser.getExpression();\n}\n\nfunction getParser(options, input) {\n  let cls = Parser;\n\n  if (options != null && options.plugins) {\n    validatePlugins(options.plugins);\n    cls = getParserClass(options.plugins);\n  }\n\n  return new cls(options, input);\n}\n\nconst parserClassCache = {};\n\nfunction getParserClass(pluginsFromOptions) {\n  const pluginList = mixinPluginNames.filter(name => hasPlugin(pluginsFromOptions, name));\n  const key = pluginList.join(\"/\");\n  let cls = parserClassCache[key];\n\n  if (!cls) {\n    cls = Parser;\n\n    for (const plugin of pluginList) {\n      cls = mixinPlugins[plugin](cls);\n    }\n\n    parserClassCache[key] = cls;\n  }\n\n  return cls;\n}\n\nexports.parse = parse;\nexports.parseExpression = parseExpression;\nexports.tokTypes = types$1;\n//# sourceMappingURL=index.js.map\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.codeFrameColumns = codeFrameColumns;\nexports.default = _default;\n\nvar _highlight = _interopRequireWildcard(require(\"@babel/highlight\"));\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nlet deprecationWarningShown = false;\n\nfunction getDefs(chalk) {\n  return {\n    gutter: chalk.grey,\n    marker: chalk.red.bold,\n    message: chalk.red.bold\n  };\n}\n\nconst NEWLINE = /\\r\\n|[\\n\\r\\u2028\\u2029]/;\n\nfunction getMarkerLines(loc, source, opts) {\n  const startLoc = Object.assign({\n    column: 0,\n    line: -1\n  }, loc.start);\n  const endLoc = Object.assign({}, startLoc, loc.end);\n  const {\n    linesAbove = 2,\n    linesBelow = 3\n  } = opts || {};\n  const startLine = startLoc.line;\n  const startColumn = startLoc.column;\n  const endLine = endLoc.line;\n  const endColumn = endLoc.column;\n  let start = Math.max(startLine - (linesAbove + 1), 0);\n  let end = Math.min(source.length, endLine + linesBelow);\n\n  if (startLine === -1) {\n    start = 0;\n  }\n\n  if (endLine === -1) {\n    end = source.length;\n  }\n\n  const lineDiff = endLine - startLine;\n  const markerLines = {};\n\n  if (lineDiff) {\n    for (let i = 0; i <= lineDiff; i++) {\n      const lineNumber = i + startLine;\n\n      if (!startColumn) {\n        markerLines[lineNumber] = true;\n      } else if (i === 0) {\n        const sourceLength = source[lineNumber - 1].length;\n        markerLines[lineNumber] = [startColumn, sourceLength - startColumn + 1];\n      } else if (i === lineDiff) {\n        markerLines[lineNumber] = [0, endColumn];\n      } else {\n        const sourceLength = source[lineNumber - i].length;\n        markerLines[lineNumber] = [0, sourceLength];\n      }\n    }\n  } else {\n    if (startColumn === endColumn) {\n      if (startColumn) {\n        markerLines[startLine] = [startColumn, 0];\n      } else {\n        markerLines[startLine] = true;\n      }\n    } else {\n      markerLines[startLine] = [startColumn, endColumn - startColumn];\n    }\n  }\n\n  return {\n    start,\n    end,\n    markerLines\n  };\n}\n\nfunction codeFrameColumns(rawLines, loc, opts = {}) {\n  const highlighted = (opts.highlightCode || opts.forceColor) && (0, _highlight.shouldHighlight)(opts);\n  const chalk = (0, _highlight.getChalk)(opts);\n  const defs = getDefs(chalk);\n\n  const maybeHighlight = (chalkFn, string) => {\n    return highlighted ? chalkFn(string) : string;\n  };\n\n  const lines = rawLines.split(NEWLINE);\n  const {\n    start,\n    end,\n    markerLines\n  } = getMarkerLines(loc, lines, opts);\n  const hasColumns = loc.start && typeof loc.start.column === \"number\";\n  const numberMaxWidth = String(end).length;\n  const highlightedLines = highlighted ? (0, _highlight.default)(rawLines, opts) : rawLines;\n  let frame = highlightedLines.split(NEWLINE).slice(start, end).map((line, index) => {\n    const number = start + 1 + index;\n    const paddedNumber = ` ${number}`.slice(-numberMaxWidth);\n    const gutter = ` ${paddedNumber} |`;\n    const hasMarker = markerLines[number];\n    const lastMarkerLine = !markerLines[number + 1];\n\n    if (hasMarker) {\n      let markerLine = \"\";\n\n      if (Array.isArray(hasMarker)) {\n        const markerSpacing = line.slice(0, Math.max(hasMarker[0] - 1, 0)).replace(/[^\\t]/g, \" \");\n        const numberOfMarkers = hasMarker[1] || 1;\n        markerLine = [\"\\n \", maybeHighlight(defs.gutter, gutter.replace(/\\d/g, \" \")), \" \", markerSpacing, maybeHighlight(defs.marker, \"^\").repeat(numberOfMarkers)].join(\"\");\n\n        if (lastMarkerLine && opts.message) {\n          markerLine += \" \" + maybeHighlight(defs.message, opts.message);\n        }\n      }\n\n      return [maybeHighlight(defs.marker, \">\"), maybeHighlight(defs.gutter, gutter), line.length > 0 ? ` ${line}` : \"\", markerLine].join(\"\");\n    } else {\n      return ` ${maybeHighlight(defs.gutter, gutter)}${line.length > 0 ? ` ${line}` : \"\"}`;\n    }\n  }).join(\"\\n\");\n\n  if (opts.message && !hasColumns) {\n    frame = `${\" \".repeat(numberMaxWidth + 1)}${opts.message}\\n${frame}`;\n  }\n\n  if (highlighted) {\n    return chalk.reset(frame);\n  } else {\n    return frame;\n  }\n}\n\nfunction _default(rawLines, lineNumber, colNumber, opts = {}) {\n  if (!deprecationWarningShown) {\n    deprecationWarningShown = true;\n    const message = \"Passing lineNumber and colNumber is deprecated to @babel/code-frame. Please use `codeFrameColumns`.\";\n\n    if (process.emitWarning) {\n      process.emitWarning(message, \"DeprecationWarning\");\n    } else {\n      const deprecationError = new Error(message);\n      deprecationError.name = \"DeprecationWarning\";\n      console.warn(new Error(message));\n    }\n  }\n\n  colNumber = Math.max(colNumber, 0);\n  const location = {\n    start: {\n      column: colNumber,\n      line: lineNumber\n    }\n  };\n  return codeFrameColumns(rawLines, location, opts);\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.merge = merge;\nexports.validate = validate;\nexports.normalizeReplacements = normalizeReplacements;\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction merge(a, b) {\n  const {\n    placeholderWhitelist = a.placeholderWhitelist,\n    placeholderPattern = a.placeholderPattern,\n    preserveComments = a.preserveComments,\n    syntacticPlaceholders = a.syntacticPlaceholders\n  } = b;\n  return {\n    parser: Object.assign({}, a.parser, b.parser),\n    placeholderWhitelist,\n    placeholderPattern,\n    preserveComments,\n    syntacticPlaceholders\n  };\n}\n\nfunction validate(opts) {\n  if (opts != null && typeof opts !== \"object\") {\n    throw new Error(\"Unknown template options.\");\n  }\n\n  const _ref = opts || {},\n        {\n    placeholderWhitelist,\n    placeholderPattern,\n    preserveComments,\n    syntacticPlaceholders\n  } = _ref,\n        parser = _objectWithoutPropertiesLoose(_ref, [\"placeholderWhitelist\", \"placeholderPattern\", \"preserveComments\", \"syntacticPlaceholders\"]);\n\n  if (placeholderWhitelist != null && !(placeholderWhitelist instanceof Set)) {\n    throw new Error(\"'.placeholderWhitelist' must be a Set, null, or undefined\");\n  }\n\n  if (placeholderPattern != null && !(placeholderPattern instanceof RegExp) && placeholderPattern !== false) {\n    throw new Error(\"'.placeholderPattern' must be a RegExp, false, null, or undefined\");\n  }\n\n  if (preserveComments != null && typeof preserveComments !== \"boolean\") {\n    throw new Error(\"'.preserveComments' must be a boolean, null, or undefined\");\n  }\n\n  if (syntacticPlaceholders != null && typeof syntacticPlaceholders !== \"boolean\") {\n    throw new Error(\"'.syntacticPlaceholders' must be a boolean, null, or undefined\");\n  }\n\n  if (syntacticPlaceholders === true && (placeholderWhitelist != null || placeholderPattern != null)) {\n    throw new Error(\"'.placeholderWhitelist' and '.placeholderPattern' aren't compatible\" + \" with '.syntacticPlaceholders: true'\");\n  }\n\n  return {\n    parser,\n    placeholderWhitelist: placeholderWhitelist || undefined,\n    placeholderPattern: placeholderPattern == null ? undefined : placeholderPattern,\n    preserveComments: preserveComments == null ? undefined : preserveComments,\n    syntacticPlaceholders: syntacticPlaceholders == null ? undefined : syntacticPlaceholders\n  };\n}\n\nfunction normalizeReplacements(replacements) {\n  if (Array.isArray(replacements)) {\n    return replacements.reduce((acc, replacement, i) => {\n      acc[\"$\" + i] = replacement;\n      return acc;\n    }, {});\n  } else if (typeof replacements === \"object\" || replacements == null) {\n    return replacements || undefined;\n  }\n\n  throw new Error(\"Template replacements must be an array, object, null, or undefined\");\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = parseAndBuildMetadata;\n\nvar t = _interopRequireWildcard(require(\"@babel/types\"));\n\nvar _parser = require(\"@babel/parser\");\n\nvar _codeFrame = require(\"@babel/code-frame\");\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nconst PATTERN = /^[_$A-Z0-9]+$/;\n\nfunction parseAndBuildMetadata(formatter, code, opts) {\n  const {\n    placeholderWhitelist,\n    placeholderPattern,\n    preserveComments,\n    syntacticPlaceholders\n  } = opts;\n  const ast = parseWithCodeFrame(code, opts.parser, syntacticPlaceholders);\n  t.removePropertiesDeep(ast, {\n    preserveComments\n  });\n  formatter.validate(ast);\n  const syntactic = {\n    placeholders: [],\n    placeholderNames: new Set()\n  };\n  const legacy = {\n    placeholders: [],\n    placeholderNames: new Set()\n  };\n  const isLegacyRef = {\n    value: undefined\n  };\n  t.traverse(ast, placeholderVisitorHandler, {\n    syntactic,\n    legacy,\n    isLegacyRef,\n    placeholderWhitelist,\n    placeholderPattern,\n    syntacticPlaceholders\n  });\n  return Object.assign({\n    ast\n  }, isLegacyRef.value ? legacy : syntactic);\n}\n\nfunction placeholderVisitorHandler(node, ancestors, state) {\n  var _state$placeholderWhi;\n\n  let name;\n\n  if (t.isPlaceholder(node)) {\n    if (state.syntacticPlaceholders === false) {\n      throw new Error(\"%%foo%%-style placeholders can't be used when \" + \"'.syntacticPlaceholders' is false.\");\n    } else {\n      name = node.name.name;\n      state.isLegacyRef.value = false;\n    }\n  } else if (state.isLegacyRef.value === false || state.syntacticPlaceholders) {\n    return;\n  } else if (t.isIdentifier(node) || t.isJSXIdentifier(node)) {\n    name = node.name;\n    state.isLegacyRef.value = true;\n  } else if (t.isStringLiteral(node)) {\n    name = node.value;\n    state.isLegacyRef.value = true;\n  } else {\n    return;\n  }\n\n  if (!state.isLegacyRef.value && (state.placeholderPattern != null || state.placeholderWhitelist != null)) {\n    throw new Error(\"'.placeholderWhitelist' and '.placeholderPattern' aren't compatible\" + \" with '.syntacticPlaceholders: true'\");\n  }\n\n  if (state.isLegacyRef.value && (state.placeholderPattern === false || !(state.placeholderPattern || PATTERN).test(name)) && !((_state$placeholderWhi = state.placeholderWhitelist) == null ? void 0 : _state$placeholderWhi.has(name))) {\n    return;\n  }\n\n  ancestors = ancestors.slice();\n  const {\n    node: parent,\n    key\n  } = ancestors[ancestors.length - 1];\n  let type;\n\n  if (t.isStringLiteral(node) || t.isPlaceholder(node, {\n    expectedNode: \"StringLiteral\"\n  })) {\n    type = \"string\";\n  } else if (t.isNewExpression(parent) && key === \"arguments\" || t.isCallExpression(parent) && key === \"arguments\" || t.isFunction(parent) && key === \"params\") {\n    type = \"param\";\n  } else if (t.isExpressionStatement(parent) && !t.isPlaceholder(node)) {\n    type = \"statement\";\n    ancestors = ancestors.slice(0, -1);\n  } else if (t.isStatement(node) && t.isPlaceholder(node)) {\n    type = \"statement\";\n  } else {\n    type = \"other\";\n  }\n\n  const {\n    placeholders,\n    placeholderNames\n  } = state.isLegacyRef.value ? state.legacy : state.syntactic;\n  placeholders.push({\n    name,\n    type,\n    resolve: ast => resolveAncestors(ast, ancestors),\n    isDuplicate: placeholderNames.has(name)\n  });\n  placeholderNames.add(name);\n}\n\nfunction resolveAncestors(ast, ancestors) {\n  let parent = ast;\n\n  for (let i = 0; i < ancestors.length - 1; i++) {\n    const {\n      key,\n      index\n    } = ancestors[i];\n\n    if (index === undefined) {\n      parent = parent[key];\n    } else {\n      parent = parent[key][index];\n    }\n  }\n\n  const {\n    key,\n    index\n  } = ancestors[ancestors.length - 1];\n  return {\n    parent,\n    key,\n    index\n  };\n}\n\nfunction parseWithCodeFrame(code, parserOpts, syntacticPlaceholders) {\n  const plugins = (parserOpts.plugins || []).slice();\n\n  if (syntacticPlaceholders !== false) {\n    plugins.push(\"placeholders\");\n  }\n\n  parserOpts = Object.assign({\n    allowReturnOutsideFunction: true,\n    allowSuperOutsideMethod: true,\n    sourceType: \"module\"\n  }, parserOpts, {\n    plugins\n  });\n\n  try {\n    return (0, _parser.parse)(code, parserOpts);\n  } catch (err) {\n    const loc = err.loc;\n\n    if (loc) {\n      err.message += \"\\n\" + (0, _codeFrame.codeFrameColumns)(code, {\n        start: loc\n      });\n      err.code = \"BABEL_TEMPLATE_PARSE_ERROR\";\n    }\n\n    throw err;\n  }\n}","/* MIT license */\nvar cssKeywords = require('color-name');\n\n// NOTE: conversions should only return primitive values (i.e. arrays, or\n//       values that give correct `typeof` results).\n//       do not use box values types (i.e. Number(), String(), etc.)\n\nvar reverseKeywords = {};\nfor (var key in cssKeywords) {\n\tif (cssKeywords.hasOwnProperty(key)) {\n\t\treverseKeywords[cssKeywords[key]] = key;\n\t}\n}\n\nvar convert = module.exports = {\n\trgb: {channels: 3, labels: 'rgb'},\n\thsl: {channels: 3, labels: 'hsl'},\n\thsv: {channels: 3, labels: 'hsv'},\n\thwb: {channels: 3, labels: 'hwb'},\n\tcmyk: {channels: 4, labels: 'cmyk'},\n\txyz: {channels: 3, labels: 'xyz'},\n\tlab: {channels: 3, labels: 'lab'},\n\tlch: {channels: 3, labels: 'lch'},\n\thex: {channels: 1, labels: ['hex']},\n\tkeyword: {channels: 1, labels: ['keyword']},\n\tansi16: {channels: 1, labels: ['ansi16']},\n\tansi256: {channels: 1, labels: ['ansi256']},\n\thcg: {channels: 3, labels: ['h', 'c', 'g']},\n\tapple: {channels: 3, labels: ['r16', 'g16', 'b16']},\n\tgray: {channels: 1, labels: ['gray']}\n};\n\n// hide .channels and .labels properties\nfor (var model in convert) {\n\tif (convert.hasOwnProperty(model)) {\n\t\tif (!('channels' in convert[model])) {\n\t\t\tthrow new Error('missing channels property: ' + model);\n\t\t}\n\n\t\tif (!('labels' in convert[model])) {\n\t\t\tthrow new Error('missing channel labels property: ' + model);\n\t\t}\n\n\t\tif (convert[model].labels.length !== convert[model].channels) {\n\t\t\tthrow new Error('channel and label counts mismatch: ' + model);\n\t\t}\n\n\t\tvar channels = convert[model].channels;\n\t\tvar labels = convert[model].labels;\n\t\tdelete convert[model].channels;\n\t\tdelete convert[model].labels;\n\t\tObject.defineProperty(convert[model], 'channels', {value: channels});\n\t\tObject.defineProperty(convert[model], 'labels', {value: labels});\n\t}\n}\n\nconvert.rgb.hsl = function (rgb) {\n\tvar r = rgb[0] / 255;\n\tvar g = rgb[1] / 255;\n\tvar b = rgb[2] / 255;\n\tvar min = Math.min(r, g, b);\n\tvar max = Math.max(r, g, b);\n\tvar delta = max - min;\n\tvar h;\n\tvar s;\n\tvar l;\n\n\tif (max === min) {\n\t\th = 0;\n\t} else if (r === max) {\n\t\th = (g - b) / delta;\n\t} else if (g === max) {\n\t\th = 2 + (b - r) / delta;\n\t} else if (b === max) {\n\t\th = 4 + (r - g) / delta;\n\t}\n\n\th = Math.min(h * 60, 360);\n\n\tif (h < 0) {\n\t\th += 360;\n\t}\n\n\tl = (min + max) / 2;\n\n\tif (max === min) {\n\t\ts = 0;\n\t} else if (l <= 0.5) {\n\t\ts = delta / (max + min);\n\t} else {\n\t\ts = delta / (2 - max - min);\n\t}\n\n\treturn [h, s * 100, l * 100];\n};\n\nconvert.rgb.hsv = function (rgb) {\n\tvar rdif;\n\tvar gdif;\n\tvar bdif;\n\tvar h;\n\tvar s;\n\n\tvar r = rgb[0] / 255;\n\tvar g = rgb[1] / 255;\n\tvar b = rgb[2] / 255;\n\tvar v = Math.max(r, g, b);\n\tvar diff = v - Math.min(r, g, b);\n\tvar diffc = function (c) {\n\t\treturn (v - c) / 6 / diff + 1 / 2;\n\t};\n\n\tif (diff === 0) {\n\t\th = s = 0;\n\t} else {\n\t\ts = diff / v;\n\t\trdif = diffc(r);\n\t\tgdif = diffc(g);\n\t\tbdif = diffc(b);\n\n\t\tif (r === v) {\n\t\t\th = bdif - gdif;\n\t\t} else if (g === v) {\n\t\t\th = (1 / 3) + rdif - bdif;\n\t\t} else if (b === v) {\n\t\t\th = (2 / 3) + gdif - rdif;\n\t\t}\n\t\tif (h < 0) {\n\t\t\th += 1;\n\t\t} else if (h > 1) {\n\t\t\th -= 1;\n\t\t}\n\t}\n\n\treturn [\n\t\th * 360,\n\t\ts * 100,\n\t\tv * 100\n\t];\n};\n\nconvert.rgb.hwb = function (rgb) {\n\tvar r = rgb[0];\n\tvar g = rgb[1];\n\tvar b = rgb[2];\n\tvar h = convert.rgb.hsl(rgb)[0];\n\tvar w = 1 / 255 * Math.min(r, Math.min(g, b));\n\n\tb = 1 - 1 / 255 * Math.max(r, Math.max(g, b));\n\n\treturn [h, w * 100, b * 100];\n};\n\nconvert.rgb.cmyk = function (rgb) {\n\tvar r = rgb[0] / 255;\n\tvar g = rgb[1] / 255;\n\tvar b = rgb[2] / 255;\n\tvar c;\n\tvar m;\n\tvar y;\n\tvar k;\n\n\tk = Math.min(1 - r, 1 - g, 1 - b);\n\tc = (1 - r - k) / (1 - k) || 0;\n\tm = (1 - g - k) / (1 - k) || 0;\n\ty = (1 - b - k) / (1 - k) || 0;\n\n\treturn [c * 100, m * 100, y * 100, k * 100];\n};\n\n/**\n * See https://en.m.wikipedia.org/wiki/Euclidean_distance#Squared_Euclidean_distance\n * */\nfunction comparativeDistance(x, y) {\n\treturn (\n\t\tMath.pow(x[0] - y[0], 2) +\n\t\tMath.pow(x[1] - y[1], 2) +\n\t\tMath.pow(x[2] - y[2], 2)\n\t);\n}\n\nconvert.rgb.keyword = function (rgb) {\n\tvar reversed = reverseKeywords[rgb];\n\tif (reversed) {\n\t\treturn reversed;\n\t}\n\n\tvar currentClosestDistance = Infinity;\n\tvar currentClosestKeyword;\n\n\tfor (var keyword in cssKeywords) {\n\t\tif (cssKeywords.hasOwnProperty(keyword)) {\n\t\t\tvar value = cssKeywords[keyword];\n\n\t\t\t// Compute comparative distance\n\t\t\tvar distance = comparativeDistance(rgb, value);\n\n\t\t\t// Check if its less, if so set as closest\n\t\t\tif (distance < currentClosestDistance) {\n\t\t\t\tcurrentClosestDistance = distance;\n\t\t\t\tcurrentClosestKeyword = keyword;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn currentClosestKeyword;\n};\n\nconvert.keyword.rgb = function (keyword) {\n\treturn cssKeywords[keyword];\n};\n\nconvert.rgb.xyz = function (rgb) {\n\tvar r = rgb[0] / 255;\n\tvar g = rgb[1] / 255;\n\tvar b = rgb[2] / 255;\n\n\t// assume sRGB\n\tr = r > 0.04045 ? Math.pow(((r + 0.055) / 1.055), 2.4) : (r / 12.92);\n\tg = g > 0.04045 ? Math.pow(((g + 0.055) / 1.055), 2.4) : (g / 12.92);\n\tb = b > 0.04045 ? Math.pow(((b + 0.055) / 1.055), 2.4) : (b / 12.92);\n\n\tvar x = (r * 0.4124) + (g * 0.3576) + (b * 0.1805);\n\tvar y = (r * 0.2126) + (g * 0.7152) + (b * 0.0722);\n\tvar z = (r * 0.0193) + (g * 0.1192) + (b * 0.9505);\n\n\treturn [x * 100, y * 100, z * 100];\n};\n\nconvert.rgb.lab = function (rgb) {\n\tvar xyz = convert.rgb.xyz(rgb);\n\tvar x = xyz[0];\n\tvar y = xyz[1];\n\tvar z = xyz[2];\n\tvar l;\n\tvar a;\n\tvar b;\n\n\tx /= 95.047;\n\ty /= 100;\n\tz /= 108.883;\n\n\tx = x > 0.008856 ? Math.pow(x, 1 / 3) : (7.787 * x) + (16 / 116);\n\ty = y > 0.008856 ? Math.pow(y, 1 / 3) : (7.787 * y) + (16 / 116);\n\tz = z > 0.008856 ? Math.pow(z, 1 / 3) : (7.787 * z) + (16 / 116);\n\n\tl = (116 * y) - 16;\n\ta = 500 * (x - y);\n\tb = 200 * (y - z);\n\n\treturn [l, a, b];\n};\n\nconvert.hsl.rgb = function (hsl) {\n\tvar h = hsl[0] / 360;\n\tvar s = hsl[1] / 100;\n\tvar l = hsl[2] / 100;\n\tvar t1;\n\tvar t2;\n\tvar t3;\n\tvar rgb;\n\tvar val;\n\n\tif (s === 0) {\n\t\tval = l * 255;\n\t\treturn [val, val, val];\n\t}\n\n\tif (l < 0.5) {\n\t\tt2 = l * (1 + s);\n\t} else {\n\t\tt2 = l + s - l * s;\n\t}\n\n\tt1 = 2 * l - t2;\n\n\trgb = [0, 0, 0];\n\tfor (var i = 0; i < 3; i++) {\n\t\tt3 = h + 1 / 3 * -(i - 1);\n\t\tif (t3 < 0) {\n\t\t\tt3++;\n\t\t}\n\t\tif (t3 > 1) {\n\t\t\tt3--;\n\t\t}\n\n\t\tif (6 * t3 < 1) {\n\t\t\tval = t1 + (t2 - t1) * 6 * t3;\n\t\t} else if (2 * t3 < 1) {\n\t\t\tval = t2;\n\t\t} else if (3 * t3 < 2) {\n\t\t\tval = t1 + (t2 - t1) * (2 / 3 - t3) * 6;\n\t\t} else {\n\t\t\tval = t1;\n\t\t}\n\n\t\trgb[i] = val * 255;\n\t}\n\n\treturn rgb;\n};\n\nconvert.hsl.hsv = function (hsl) {\n\tvar h = hsl[0];\n\tvar s = hsl[1] / 100;\n\tvar l = hsl[2] / 100;\n\tvar smin = s;\n\tvar lmin = Math.max(l, 0.01);\n\tvar sv;\n\tvar v;\n\n\tl *= 2;\n\ts *= (l <= 1) ? l : 2 - l;\n\tsmin *= lmin <= 1 ? lmin : 2 - lmin;\n\tv = (l + s) / 2;\n\tsv = l === 0 ? (2 * smin) / (lmin + smin) : (2 * s) / (l + s);\n\n\treturn [h, sv * 100, v * 100];\n};\n\nconvert.hsv.rgb = function (hsv) {\n\tvar h = hsv[0] / 60;\n\tvar s = hsv[1] / 100;\n\tvar v = hsv[2] / 100;\n\tvar hi = Math.floor(h) % 6;\n\n\tvar f = h - Math.floor(h);\n\tvar p = 255 * v * (1 - s);\n\tvar q = 255 * v * (1 - (s * f));\n\tvar t = 255 * v * (1 - (s * (1 - f)));\n\tv *= 255;\n\n\tswitch (hi) {\n\t\tcase 0:\n\t\t\treturn [v, t, p];\n\t\tcase 1:\n\t\t\treturn [q, v, p];\n\t\tcase 2:\n\t\t\treturn [p, v, t];\n\t\tcase 3:\n\t\t\treturn [p, q, v];\n\t\tcase 4:\n\t\t\treturn [t, p, v];\n\t\tcase 5:\n\t\t\treturn [v, p, q];\n\t}\n};\n\nconvert.hsv.hsl = function (hsv) {\n\tvar h = hsv[0];\n\tvar s = hsv[1] / 100;\n\tvar v = hsv[2] / 100;\n\tvar vmin = Math.max(v, 0.01);\n\tvar lmin;\n\tvar sl;\n\tvar l;\n\n\tl = (2 - s) * v;\n\tlmin = (2 - s) * vmin;\n\tsl = s * vmin;\n\tsl /= (lmin <= 1) ? lmin : 2 - lmin;\n\tsl = sl || 0;\n\tl /= 2;\n\n\treturn [h, sl * 100, l * 100];\n};\n\n// http://dev.w3.org/csswg/css-color/#hwb-to-rgb\nconvert.hwb.rgb = function (hwb) {\n\tvar h = hwb[0] / 360;\n\tvar wh = hwb[1] / 100;\n\tvar bl = hwb[2] / 100;\n\tvar ratio = wh + bl;\n\tvar i;\n\tvar v;\n\tvar f;\n\tvar n;\n\n\t// wh + bl cant be > 1\n\tif (ratio > 1) {\n\t\twh /= ratio;\n\t\tbl /= ratio;\n\t}\n\n\ti = Math.floor(6 * h);\n\tv = 1 - bl;\n\tf = 6 * h - i;\n\n\tif ((i & 0x01) !== 0) {\n\t\tf = 1 - f;\n\t}\n\n\tn = wh + f * (v - wh); // linear interpolation\n\n\tvar r;\n\tvar g;\n\tvar b;\n\tswitch (i) {\n\t\tdefault:\n\t\tcase 6:\n\t\tcase 0: r = v; g = n; b = wh; break;\n\t\tcase 1: r = n; g = v; b = wh; break;\n\t\tcase 2: r = wh; g = v; b = n; break;\n\t\tcase 3: r = wh; g = n; b = v; break;\n\t\tcase 4: r = n; g = wh; b = v; break;\n\t\tcase 5: r = v; g = wh; b = n; break;\n\t}\n\n\treturn [r * 255, g * 255, b * 255];\n};\n\nconvert.cmyk.rgb = function (cmyk) {\n\tvar c = cmyk[0] / 100;\n\tvar m = cmyk[1] / 100;\n\tvar y = cmyk[2] / 100;\n\tvar k = cmyk[3] / 100;\n\tvar r;\n\tvar g;\n\tvar b;\n\n\tr = 1 - Math.min(1, c * (1 - k) + k);\n\tg = 1 - Math.min(1, m * (1 - k) + k);\n\tb = 1 - Math.min(1, y * (1 - k) + k);\n\n\treturn [r * 255, g * 255, b * 255];\n};\n\nconvert.xyz.rgb = function (xyz) {\n\tvar x = xyz[0] / 100;\n\tvar y = xyz[1] / 100;\n\tvar z = xyz[2] / 100;\n\tvar r;\n\tvar g;\n\tvar b;\n\n\tr = (x * 3.2406) + (y * -1.5372) + (z * -0.4986);\n\tg = (x * -0.9689) + (y * 1.8758) + (z * 0.0415);\n\tb = (x * 0.0557) + (y * -0.2040) + (z * 1.0570);\n\n\t// assume sRGB\n\tr = r > 0.0031308\n\t\t? ((1.055 * Math.pow(r, 1.0 / 2.4)) - 0.055)\n\t\t: r * 12.92;\n\n\tg = g > 0.0031308\n\t\t? ((1.055 * Math.pow(g, 1.0 / 2.4)) - 0.055)\n\t\t: g * 12.92;\n\n\tb = b > 0.0031308\n\t\t? ((1.055 * Math.pow(b, 1.0 / 2.4)) - 0.055)\n\t\t: b * 12.92;\n\n\tr = Math.min(Math.max(0, r), 1);\n\tg = Math.min(Math.max(0, g), 1);\n\tb = Math.min(Math.max(0, b), 1);\n\n\treturn [r * 255, g * 255, b * 255];\n};\n\nconvert.xyz.lab = function (xyz) {\n\tvar x = xyz[0];\n\tvar y = xyz[1];\n\tvar z = xyz[2];\n\tvar l;\n\tvar a;\n\tvar b;\n\n\tx /= 95.047;\n\ty /= 100;\n\tz /= 108.883;\n\n\tx = x > 0.008856 ? Math.pow(x, 1 / 3) : (7.787 * x) + (16 / 116);\n\ty = y > 0.008856 ? Math.pow(y, 1 / 3) : (7.787 * y) + (16 / 116);\n\tz = z > 0.008856 ? Math.pow(z, 1 / 3) : (7.787 * z) + (16 / 116);\n\n\tl = (116 * y) - 16;\n\ta = 500 * (x - y);\n\tb = 200 * (y - z);\n\n\treturn [l, a, b];\n};\n\nconvert.lab.xyz = function (lab) {\n\tvar l = lab[0];\n\tvar a = lab[1];\n\tvar b = lab[2];\n\tvar x;\n\tvar y;\n\tvar z;\n\n\ty = (l + 16) / 116;\n\tx = a / 500 + y;\n\tz = y - b / 200;\n\n\tvar y2 = Math.pow(y, 3);\n\tvar x2 = Math.pow(x, 3);\n\tvar z2 = Math.pow(z, 3);\n\ty = y2 > 0.008856 ? y2 : (y - 16 / 116) / 7.787;\n\tx = x2 > 0.008856 ? x2 : (x - 16 / 116) / 7.787;\n\tz = z2 > 0.008856 ? z2 : (z - 16 / 116) / 7.787;\n\n\tx *= 95.047;\n\ty *= 100;\n\tz *= 108.883;\n\n\treturn [x, y, z];\n};\n\nconvert.lab.lch = function (lab) {\n\tvar l = lab[0];\n\tvar a = lab[1];\n\tvar b = lab[2];\n\tvar hr;\n\tvar h;\n\tvar c;\n\n\thr = Math.atan2(b, a);\n\th = hr * 360 / 2 / Math.PI;\n\n\tif (h < 0) {\n\t\th += 360;\n\t}\n\n\tc = Math.sqrt(a * a + b * b);\n\n\treturn [l, c, h];\n};\n\nconvert.lch.lab = function (lch) {\n\tvar l = lch[0];\n\tvar c = lch[1];\n\tvar h = lch[2];\n\tvar a;\n\tvar b;\n\tvar hr;\n\n\thr = h / 360 * 2 * Math.PI;\n\ta = c * Math.cos(hr);\n\tb = c * Math.sin(hr);\n\n\treturn [l, a, b];\n};\n\nconvert.rgb.ansi16 = function (args) {\n\tvar r = args[0];\n\tvar g = args[1];\n\tvar b = args[2];\n\tvar value = 1 in arguments ? arguments[1] : convert.rgb.hsv(args)[2]; // hsv -> ansi16 optimization\n\n\tvalue = Math.round(value / 50);\n\n\tif (value === 0) {\n\t\treturn 30;\n\t}\n\n\tvar ansi = 30\n\t\t+ ((Math.round(b / 255) << 2)\n\t\t| (Math.round(g / 255) << 1)\n\t\t| Math.round(r / 255));\n\n\tif (value === 2) {\n\t\tansi += 60;\n\t}\n\n\treturn ansi;\n};\n\nconvert.hsv.ansi16 = function (args) {\n\t// optimization here; we already know the value and don't need to get\n\t// it converted for us.\n\treturn convert.rgb.ansi16(convert.hsv.rgb(args), args[2]);\n};\n\nconvert.rgb.ansi256 = function (args) {\n\tvar r = args[0];\n\tvar g = args[1];\n\tvar b = args[2];\n\n\t// we use the extended greyscale palette here, with the exception of\n\t// black and white. normal palette only has 4 greyscale shades.\n\tif (r === g && g === b) {\n\t\tif (r < 8) {\n\t\t\treturn 16;\n\t\t}\n\n\t\tif (r > 248) {\n\t\t\treturn 231;\n\t\t}\n\n\t\treturn Math.round(((r - 8) / 247) * 24) + 232;\n\t}\n\n\tvar ansi = 16\n\t\t+ (36 * Math.round(r / 255 * 5))\n\t\t+ (6 * Math.round(g / 255 * 5))\n\t\t+ Math.round(b / 255 * 5);\n\n\treturn ansi;\n};\n\nconvert.ansi16.rgb = function (args) {\n\tvar color = args % 10;\n\n\t// handle greyscale\n\tif (color === 0 || color === 7) {\n\t\tif (args > 50) {\n\t\t\tcolor += 3.5;\n\t\t}\n\n\t\tcolor = color / 10.5 * 255;\n\n\t\treturn [color, color, color];\n\t}\n\n\tvar mult = (~~(args > 50) + 1) * 0.5;\n\tvar r = ((color & 1) * mult) * 255;\n\tvar g = (((color >> 1) & 1) * mult) * 255;\n\tvar b = (((color >> 2) & 1) * mult) * 255;\n\n\treturn [r, g, b];\n};\n\nconvert.ansi256.rgb = function (args) {\n\t// handle greyscale\n\tif (args >= 232) {\n\t\tvar c = (args - 232) * 10 + 8;\n\t\treturn [c, c, c];\n\t}\n\n\targs -= 16;\n\n\tvar rem;\n\tvar r = Math.floor(args / 36) / 5 * 255;\n\tvar g = Math.floor((rem = args % 36) / 6) / 5 * 255;\n\tvar b = (rem % 6) / 5 * 255;\n\n\treturn [r, g, b];\n};\n\nconvert.rgb.hex = function (args) {\n\tvar integer = ((Math.round(args[0]) & 0xFF) << 16)\n\t\t+ ((Math.round(args[1]) & 0xFF) << 8)\n\t\t+ (Math.round(args[2]) & 0xFF);\n\n\tvar string = integer.toString(16).toUpperCase();\n\treturn '000000'.substring(string.length) + string;\n};\n\nconvert.hex.rgb = function (args) {\n\tvar match = args.toString(16).match(/[a-f0-9]{6}|[a-f0-9]{3}/i);\n\tif (!match) {\n\t\treturn [0, 0, 0];\n\t}\n\n\tvar colorString = match[0];\n\n\tif (match[0].length === 3) {\n\t\tcolorString = colorString.split('').map(function (char) {\n\t\t\treturn char + char;\n\t\t}).join('');\n\t}\n\n\tvar integer = parseInt(colorString, 16);\n\tvar r = (integer >> 16) & 0xFF;\n\tvar g = (integer >> 8) & 0xFF;\n\tvar b = integer & 0xFF;\n\n\treturn [r, g, b];\n};\n\nconvert.rgb.hcg = function (rgb) {\n\tvar r = rgb[0] / 255;\n\tvar g = rgb[1] / 255;\n\tvar b = rgb[2] / 255;\n\tvar max = Math.max(Math.max(r, g), b);\n\tvar min = Math.min(Math.min(r, g), b);\n\tvar chroma = (max - min);\n\tvar grayscale;\n\tvar hue;\n\n\tif (chroma < 1) {\n\t\tgrayscale = min / (1 - chroma);\n\t} else {\n\t\tgrayscale = 0;\n\t}\n\n\tif (chroma <= 0) {\n\t\thue = 0;\n\t} else\n\tif (max === r) {\n\t\thue = ((g - b) / chroma) % 6;\n\t} else\n\tif (max === g) {\n\t\thue = 2 + (b - r) / chroma;\n\t} else {\n\t\thue = 4 + (r - g) / chroma + 4;\n\t}\n\n\thue /= 6;\n\thue %= 1;\n\n\treturn [hue * 360, chroma * 100, grayscale * 100];\n};\n\nconvert.hsl.hcg = function (hsl) {\n\tvar s = hsl[1] / 100;\n\tvar l = hsl[2] / 100;\n\tvar c = 1;\n\tvar f = 0;\n\n\tif (l < 0.5) {\n\t\tc = 2.0 * s * l;\n\t} else {\n\t\tc = 2.0 * s * (1.0 - l);\n\t}\n\n\tif (c < 1.0) {\n\t\tf = (l - 0.5 * c) / (1.0 - c);\n\t}\n\n\treturn [hsl[0], c * 100, f * 100];\n};\n\nconvert.hsv.hcg = function (hsv) {\n\tvar s = hsv[1] / 100;\n\tvar v = hsv[2] / 100;\n\n\tvar c = s * v;\n\tvar f = 0;\n\n\tif (c < 1.0) {\n\t\tf = (v - c) / (1 - c);\n\t}\n\n\treturn [hsv[0], c * 100, f * 100];\n};\n\nconvert.hcg.rgb = function (hcg) {\n\tvar h = hcg[0] / 360;\n\tvar c = hcg[1] / 100;\n\tvar g = hcg[2] / 100;\n\n\tif (c === 0.0) {\n\t\treturn [g * 255, g * 255, g * 255];\n\t}\n\n\tvar pure = [0, 0, 0];\n\tvar hi = (h % 1) * 6;\n\tvar v = hi % 1;\n\tvar w = 1 - v;\n\tvar mg = 0;\n\n\tswitch (Math.floor(hi)) {\n\t\tcase 0:\n\t\t\tpure[0] = 1; pure[1] = v; pure[2] = 0; break;\n\t\tcase 1:\n\t\t\tpure[0] = w; pure[1] = 1; pure[2] = 0; break;\n\t\tcase 2:\n\t\t\tpure[0] = 0; pure[1] = 1; pure[2] = v; break;\n\t\tcase 3:\n\t\t\tpure[0] = 0; pure[1] = w; pure[2] = 1; break;\n\t\tcase 4:\n\t\t\tpure[0] = v; pure[1] = 0; pure[2] = 1; break;\n\t\tdefault:\n\t\t\tpure[0] = 1; pure[1] = 0; pure[2] = w;\n\t}\n\n\tmg = (1.0 - c) * g;\n\n\treturn [\n\t\t(c * pure[0] + mg) * 255,\n\t\t(c * pure[1] + mg) * 255,\n\t\t(c * pure[2] + mg) * 255\n\t];\n};\n\nconvert.hcg.hsv = function (hcg) {\n\tvar c = hcg[1] / 100;\n\tvar g = hcg[2] / 100;\n\n\tvar v = c + g * (1.0 - c);\n\tvar f = 0;\n\n\tif (v > 0.0) {\n\t\tf = c / v;\n\t}\n\n\treturn [hcg[0], f * 100, v * 100];\n};\n\nconvert.hcg.hsl = function (hcg) {\n\tvar c = hcg[1] / 100;\n\tvar g = hcg[2] / 100;\n\n\tvar l = g * (1.0 - c) + 0.5 * c;\n\tvar s = 0;\n\n\tif (l > 0.0 && l < 0.5) {\n\t\ts = c / (2 * l);\n\t} else\n\tif (l >= 0.5 && l < 1.0) {\n\t\ts = c / (2 * (1 - l));\n\t}\n\n\treturn [hcg[0], s * 100, l * 100];\n};\n\nconvert.hcg.hwb = function (hcg) {\n\tvar c = hcg[1] / 100;\n\tvar g = hcg[2] / 100;\n\tvar v = c + g * (1.0 - c);\n\treturn [hcg[0], (v - c) * 100, (1 - v) * 100];\n};\n\nconvert.hwb.hcg = function (hwb) {\n\tvar w = hwb[1] / 100;\n\tvar b = hwb[2] / 100;\n\tvar v = 1 - b;\n\tvar c = v - w;\n\tvar g = 0;\n\n\tif (c < 1) {\n\t\tg = (v - c) / (1 - c);\n\t}\n\n\treturn [hwb[0], c * 100, g * 100];\n};\n\nconvert.apple.rgb = function (apple) {\n\treturn [(apple[0] / 65535) * 255, (apple[1] / 65535) * 255, (apple[2] / 65535) * 255];\n};\n\nconvert.rgb.apple = function (rgb) {\n\treturn [(rgb[0] / 255) * 65535, (rgb[1] / 255) * 65535, (rgb[2] / 255) * 65535];\n};\n\nconvert.gray.rgb = function (args) {\n\treturn [args[0] / 100 * 255, args[0] / 100 * 255, args[0] / 100 * 255];\n};\n\nconvert.gray.hsl = convert.gray.hsv = function (args) {\n\treturn [0, 0, args[0]];\n};\n\nconvert.gray.hwb = function (gray) {\n\treturn [0, 100, gray[0]];\n};\n\nconvert.gray.cmyk = function (gray) {\n\treturn [0, 0, 0, gray[0]];\n};\n\nconvert.gray.lab = function (gray) {\n\treturn [gray[0], 0, 0];\n};\n\nconvert.gray.hex = function (gray) {\n\tvar val = Math.round(gray[0] / 100 * 255) & 0xFF;\n\tvar integer = (val << 16) + (val << 8) + val;\n\n\tvar string = integer.toString(16).toUpperCase();\n\treturn '000000'.substring(string.length) + string;\n};\n\nconvert.rgb.gray = function (rgb) {\n\tvar val = (rgb[0] + rgb[1] + rgb[2]) / 3;\n\treturn [val / 255 * 100];\n};\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = populatePlaceholders;\n\nvar t = _interopRequireWildcard(require(\"@babel/types\"));\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction populatePlaceholders(metadata, replacements) {\n  const ast = t.cloneNode(metadata.ast);\n\n  if (replacements) {\n    metadata.placeholders.forEach(placeholder => {\n      if (!Object.prototype.hasOwnProperty.call(replacements, placeholder.name)) {\n        const placeholderName = placeholder.name;\n        throw new Error(`Error: No substitution given for \"${placeholderName}\". If this is not meant to be a\n            placeholder you may want to consider passing one of the following options to @babel/template:\n            - { placeholderPattern: false, placeholderWhitelist: new Set(['${placeholderName}'])}\n            - { placeholderPattern: /^${placeholderName}$/ }`);\n      }\n    });\n    Object.keys(replacements).forEach(key => {\n      if (!metadata.placeholderNames.has(key)) {\n        throw new Error(`Unknown substitution \"${key}\" given`);\n      }\n    });\n  }\n\n  metadata.placeholders.slice().reverse().forEach(placeholder => {\n    try {\n      applyReplacement(placeholder, ast, replacements && replacements[placeholder.name] || null);\n    } catch (e) {\n      e.message = `@babel/template placeholder \"${placeholder.name}\": ${e.message}`;\n      throw e;\n    }\n  });\n  return ast;\n}\n\nfunction applyReplacement(placeholder, ast, replacement) {\n  if (placeholder.isDuplicate) {\n    if (Array.isArray(replacement)) {\n      replacement = replacement.map(node => t.cloneNode(node));\n    } else if (typeof replacement === \"object\") {\n      replacement = t.cloneNode(replacement);\n    }\n  }\n\n  const {\n    parent,\n    key,\n    index\n  } = placeholder.resolve(ast);\n\n  if (placeholder.type === \"string\") {\n    if (typeof replacement === \"string\") {\n      replacement = t.stringLiteral(replacement);\n    }\n\n    if (!replacement || !t.isStringLiteral(replacement)) {\n      throw new Error(\"Expected string substitution\");\n    }\n  } else if (placeholder.type === \"statement\") {\n    if (index === undefined) {\n      if (!replacement) {\n        replacement = t.emptyStatement();\n      } else if (Array.isArray(replacement)) {\n        replacement = t.blockStatement(replacement);\n      } else if (typeof replacement === \"string\") {\n        replacement = t.expressionStatement(t.identifier(replacement));\n      } else if (!t.isStatement(replacement)) {\n        replacement = t.expressionStatement(replacement);\n      }\n    } else {\n      if (replacement && !Array.isArray(replacement)) {\n        if (typeof replacement === \"string\") {\n          replacement = t.identifier(replacement);\n        }\n\n        if (!t.isStatement(replacement)) {\n          replacement = t.expressionStatement(replacement);\n        }\n      }\n    }\n  } else if (placeholder.type === \"param\") {\n    if (typeof replacement === \"string\") {\n      replacement = t.identifier(replacement);\n    }\n\n    if (index === undefined) throw new Error(\"Assertion failure.\");\n  } else {\n    if (typeof replacement === \"string\") {\n      replacement = t.identifier(replacement);\n    }\n\n    if (Array.isArray(replacement)) {\n      throw new Error(\"Cannot replace single expression with an array.\");\n    }\n  }\n\n  if (index === undefined) {\n    t.validate(parent, key, replacement);\n    parent[key] = replacement;\n  } else {\n    const items = parent[key].slice();\n\n    if (placeholder.type === \"statement\" || placeholder.type === \"param\") {\n      if (replacement == null) {\n        items.splice(index, 1);\n      } else if (Array.isArray(replacement)) {\n        items.splice(index, 1, ...replacement);\n      } else {\n        items[index] = replacement;\n      }\n    } else {\n      items[index] = replacement;\n    }\n\n    t.validate(parent, key, items);\n    parent[key] = items;\n  }\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _helperPluginUtils = require(\"@babel/helper-plugin-utils\");\n\nvar _helperAnnotateAsPure = require(\"@babel/helper-annotate-as-pure\");\n\nvar _helperFunctionName = require(\"@babel/helper-function-name\");\n\nvar _helperSplitExportDeclaration = require(\"@babel/helper-split-export-declaration\");\n\nvar _core = require(\"@babel/core\");\n\nvar _globals = require(\"globals\");\n\nvar _transformClass = require(\"./transformClass\");\n\nconst getBuiltinClasses = category => Object.keys(_globals[category]).filter(name => /^[A-Z]/.test(name));\n\nconst builtinClasses = new Set([...getBuiltinClasses(\"builtin\"), ...getBuiltinClasses(\"browser\")]);\n\nvar _default = (0, _helperPluginUtils.declare)((api, options) => {\n  var _api$assumption, _api$assumption2, _api$assumption3, _api$assumption4;\n\n  api.assertVersion(7);\n  const {\n    loose\n  } = options;\n  const setClassMethods = (_api$assumption = api.assumption(\"setClassMethods\")) != null ? _api$assumption : options.loose;\n  const constantSuper = (_api$assumption2 = api.assumption(\"constantSuper\")) != null ? _api$assumption2 : options.loose;\n  const superIsCallableConstructor = (_api$assumption3 = api.assumption(\"superIsCallableConstructor\")) != null ? _api$assumption3 : options.loose;\n  const noClassCalls = (_api$assumption4 = api.assumption(\"noClassCalls\")) != null ? _api$assumption4 : options.loose;\n  const VISITED = Symbol();\n  return {\n    name: \"transform-classes\",\n    visitor: {\n      ExportDefaultDeclaration(path) {\n        if (!path.get(\"declaration\").isClassDeclaration()) return;\n        (0, _helperSplitExportDeclaration.default)(path);\n      },\n\n      ClassDeclaration(path) {\n        const {\n          node\n        } = path;\n        const ref = node.id || path.scope.generateUidIdentifier(\"class\");\n        path.replaceWith(_core.types.variableDeclaration(\"let\", [_core.types.variableDeclarator(ref, _core.types.toExpression(node))]));\n      },\n\n      ClassExpression(path, state) {\n        const {\n          node\n        } = path;\n        if (node[VISITED]) return;\n        const inferred = (0, _helperFunctionName.default)(path);\n\n        if (inferred && inferred !== node) {\n          path.replaceWith(inferred);\n          return;\n        }\n\n        node[VISITED] = true;\n        path.replaceWith((0, _transformClass.default)(path, state.file, builtinClasses, loose, {\n          setClassMethods,\n          constantSuper,\n          superIsCallableConstructor,\n          noClassCalls\n        }));\n\n        if (path.isCallExpression()) {\n          (0, _helperAnnotateAsPure.default)(path);\n\n          if (path.get(\"callee\").isArrowFunctionExpression()) {\n            path.get(\"callee\").arrowFunctionToExpression();\n          }\n        }\n      }\n\n    }\n  };\n});\n\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.program = exports.expression = exports.statement = exports.statements = exports.smart = void 0;\n\nvar t = _interopRequireWildcard(require(\"@babel/types\"));\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction makeStatementFormatter(fn) {\n  return {\n    code: str => `/* @babel/template */;\\n${str}`,\n    validate: () => {},\n    unwrap: ast => {\n      return fn(ast.program.body.slice(1));\n    }\n  };\n}\n\nconst smart = makeStatementFormatter(body => {\n  if (body.length > 1) {\n    return body;\n  } else {\n    return body[0];\n  }\n});\nexports.smart = smart;\nconst statements = makeStatementFormatter(body => body);\nexports.statements = statements;\nconst statement = makeStatementFormatter(body => {\n  if (body.length === 0) {\n    throw new Error(\"Found nothing to return.\");\n  }\n\n  if (body.length > 1) {\n    throw new Error(\"Found multiple statements but wanted one\");\n  }\n\n  return body[0];\n});\nexports.statement = statement;\nconst expression = {\n  code: str => `(\\n${str}\\n)`,\n  validate: ast => {\n    if (ast.program.body.length > 1) {\n      throw new Error(\"Found multiple statements but wanted one\");\n    }\n\n    if (expression.unwrap(ast).start === 0) {\n      throw new Error(\"Parse result included parens.\");\n    }\n  },\n  unwrap: ({\n    program\n  }) => {\n    const [stmt] = program.body;\n    t.assertExpressionStatement(stmt);\n    return stmt.expression;\n  }\n};\nexports.expression = expression;\nconst program = {\n  code: str => str,\n  validate: () => {},\n  unwrap: ast => ast.program\n};\nexports.program = program;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = createTemplateBuilder;\n\nvar _options = require(\"./options\");\n\nvar _string = _interopRequireDefault(require(\"./string\"));\n\nvar _literal = _interopRequireDefault(require(\"./literal\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst NO_PLACEHOLDER = (0, _options.validate)({\n  placeholderPattern: false\n});\n\nfunction createTemplateBuilder(formatter, defaultOpts) {\n  const templateFnCache = new WeakMap();\n  const templateAstCache = new WeakMap();\n  const cachedOpts = defaultOpts || (0, _options.validate)(null);\n  return Object.assign((tpl, ...args) => {\n    if (typeof tpl === \"string\") {\n      if (args.length > 1) throw new Error(\"Unexpected extra params.\");\n      return extendedTrace((0, _string.default)(formatter, tpl, (0, _options.merge)(cachedOpts, (0, _options.validate)(args[0]))));\n    } else if (Array.isArray(tpl)) {\n      let builder = templateFnCache.get(tpl);\n\n      if (!builder) {\n        builder = (0, _literal.default)(formatter, tpl, cachedOpts);\n        templateFnCache.set(tpl, builder);\n      }\n\n      return extendedTrace(builder(args));\n    } else if (typeof tpl === \"object\" && tpl) {\n      if (args.length > 0) throw new Error(\"Unexpected extra params.\");\n      return createTemplateBuilder(formatter, (0, _options.merge)(cachedOpts, (0, _options.validate)(tpl)));\n    }\n\n    throw new Error(`Unexpected template param ${typeof tpl}`);\n  }, {\n    ast: (tpl, ...args) => {\n      if (typeof tpl === \"string\") {\n        if (args.length > 1) throw new Error(\"Unexpected extra params.\");\n        return (0, _string.default)(formatter, tpl, (0, _options.merge)((0, _options.merge)(cachedOpts, (0, _options.validate)(args[0])), NO_PLACEHOLDER))();\n      } else if (Array.isArray(tpl)) {\n        let builder = templateAstCache.get(tpl);\n\n        if (!builder) {\n          builder = (0, _literal.default)(formatter, tpl, (0, _options.merge)(cachedOpts, NO_PLACEHOLDER));\n          templateAstCache.set(tpl, builder);\n        }\n\n        return builder(args)();\n      }\n\n      throw new Error(`Unexpected template param ${typeof tpl}`);\n    }\n  });\n}\n\nfunction extendedTrace(fn) {\n  let rootStack = \"\";\n\n  try {\n    throw new Error();\n  } catch (error) {\n    if (error.stack) {\n      rootStack = error.stack.split(\"\\n\").slice(3).join(\"\\n\");\n    }\n  }\n\n  return arg => {\n    try {\n      return fn(arg);\n    } catch (err) {\n      err.stack += `\\n    =============\\n${rootStack}`;\n      throw err;\n    }\n  };\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = stringTemplate;\n\nvar _options = require(\"./options\");\n\nvar _parse = _interopRequireDefault(require(\"./parse\"));\n\nvar _populate = _interopRequireDefault(require(\"./populate\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction stringTemplate(formatter, code, opts) {\n  code = formatter.code(code);\n  let metadata;\n  return arg => {\n    const replacements = (0, _options.normalizeReplacements)(arg);\n    if (!metadata) metadata = (0, _parse.default)(formatter, code, opts);\n    return formatter.unwrap((0, _populate.default)(metadata, replacements));\n  };\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.shouldHighlight = shouldHighlight;\nexports.getChalk = getChalk;\nexports.default = highlight;\n\nvar _helperValidatorIdentifier = require(\"@babel/helper-validator-identifier\");\n\nconst jsTokens = require(\"js-tokens\");\n\nconst Chalk = require(\"chalk\");\n\nconst sometimesKeywords = new Set([\"as\", \"async\", \"from\", \"get\", \"of\", \"set\"]);\n\nfunction getDefs(chalk) {\n  return {\n    keyword: chalk.cyan,\n    capitalized: chalk.yellow,\n    jsxIdentifier: chalk.yellow,\n    punctuator: chalk.yellow,\n    number: chalk.magenta,\n    string: chalk.green,\n    regex: chalk.magenta,\n    comment: chalk.grey,\n    invalid: chalk.white.bgRed.bold\n  };\n}\n\nconst NEWLINE = /\\r\\n|[\\n\\r\\u2028\\u2029]/;\nconst BRACKET = /^[()[\\]{}]$/;\nlet tokenize;\n{\n  const JSX_TAG = /^[a-z][\\w-]*$/i;\n\n  const getTokenType = function (token, offset, text) {\n    if (token.type === \"name\") {\n      if ((0, _helperValidatorIdentifier.isKeyword)(token.value) || (0, _helperValidatorIdentifier.isStrictReservedWord)(token.value, true) || sometimesKeywords.has(token.value)) {\n        return \"keyword\";\n      }\n\n      if (JSX_TAG.test(token.value) && (text[offset - 1] === \"<\" || text.substr(offset - 2, 2) == \"</\")) {\n        return \"jsxIdentifier\";\n      }\n\n      if (token.value[0] !== token.value[0].toLowerCase()) {\n        return \"capitalized\";\n      }\n    }\n\n    if (token.type === \"punctuator\" && BRACKET.test(token.value)) {\n      return \"bracket\";\n    }\n\n    if (token.type === \"invalid\" && (token.value === \"@\" || token.value === \"#\")) {\n      return \"punctuator\";\n    }\n\n    return token.type;\n  };\n\n  tokenize = function* (text) {\n    let match;\n\n    while (match = jsTokens.default.exec(text)) {\n      const token = jsTokens.matchToToken(match);\n      yield {\n        type: getTokenType(token, match.index, text),\n        value: token.value\n      };\n    }\n  };\n}\n\nfunction highlightTokens(defs, text) {\n  let highlighted = \"\";\n\n  for (const {\n    type,\n    value\n  } of tokenize(text)) {\n    const colorize = defs[type];\n\n    if (colorize) {\n      highlighted += value.split(NEWLINE).map(str => colorize(str)).join(\"\\n\");\n    } else {\n      highlighted += value;\n    }\n  }\n\n  return highlighted;\n}\n\nfunction shouldHighlight(options) {\n  return !!Chalk.supportsColor || options.forceColor;\n}\n\nfunction getChalk(options) {\n  return options.forceColor ? new Chalk.constructor({\n    enabled: true,\n    level: 1\n  }) : Chalk;\n}\n\nfunction highlight(code, options = {}) {\n  if (shouldHighlight(options)) {\n    const chalk = getChalk(options);\n    const defs = getDefs(chalk);\n    return highlightTokens(defs, code);\n  } else {\n    return code;\n  }\n}","'use strict';\nconst escapeStringRegexp = require('escape-string-regexp');\nconst ansiStyles = require('ansi-styles');\nconst stdoutColor = require('supports-color').stdout;\n\nconst template = require('./templates.js');\n\nconst isSimpleWindowsTerm = process.platform === 'win32' && !(process.env.TERM || '').toLowerCase().startsWith('xterm');\n\n// `supportsColor.level` → `ansiStyles.color[name]` mapping\nconst levelMapping = ['ansi', 'ansi', 'ansi256', 'ansi16m'];\n\n// `color-convert` models to exclude from the Chalk API due to conflicts and such\nconst skipModels = new Set(['gray']);\n\nconst styles = Object.create(null);\n\nfunction applyOptions(obj, options) {\n\toptions = options || {};\n\n\t// Detect level if not set manually\n\tconst scLevel = stdoutColor ? stdoutColor.level : 0;\n\tobj.level = options.level === undefined ? scLevel : options.level;\n\tobj.enabled = 'enabled' in options ? options.enabled : obj.level > 0;\n}\n\nfunction Chalk(options) {\n\t// We check for this.template here since calling `chalk.constructor()`\n\t// by itself will have a `this` of a previously constructed chalk object\n\tif (!this || !(this instanceof Chalk) || this.template) {\n\t\tconst chalk = {};\n\t\tapplyOptions(chalk, options);\n\n\t\tchalk.template = function () {\n\t\t\tconst args = [].slice.call(arguments);\n\t\t\treturn chalkTag.apply(null, [chalk.template].concat(args));\n\t\t};\n\n\t\tObject.setPrototypeOf(chalk, Chalk.prototype);\n\t\tObject.setPrototypeOf(chalk.template, chalk);\n\n\t\tchalk.template.constructor = Chalk;\n\n\t\treturn chalk.template;\n\t}\n\n\tapplyOptions(this, options);\n}\n\n// Use bright blue on Windows as the normal blue color is illegible\nif (isSimpleWindowsTerm) {\n\tansiStyles.blue.open = '\\u001B[94m';\n}\n\nfor (const key of Object.keys(ansiStyles)) {\n\tansiStyles[key].closeRe = new RegExp(escapeStringRegexp(ansiStyles[key].close), 'g');\n\n\tstyles[key] = {\n\t\tget() {\n\t\t\tconst codes = ansiStyles[key];\n\t\t\treturn build.call(this, this._styles ? this._styles.concat(codes) : [codes], this._empty, key);\n\t\t}\n\t};\n}\n\nstyles.visible = {\n\tget() {\n\t\treturn build.call(this, this._styles || [], true, 'visible');\n\t}\n};\n\nansiStyles.color.closeRe = new RegExp(escapeStringRegexp(ansiStyles.color.close), 'g');\nfor (const model of Object.keys(ansiStyles.color.ansi)) {\n\tif (skipModels.has(model)) {\n\t\tcontinue;\n\t}\n\n\tstyles[model] = {\n\t\tget() {\n\t\t\tconst level = this.level;\n\t\t\treturn function () {\n\t\t\t\tconst open = ansiStyles.color[levelMapping[level]][model].apply(null, arguments);\n\t\t\t\tconst codes = {\n\t\t\t\t\topen,\n\t\t\t\t\tclose: ansiStyles.color.close,\n\t\t\t\t\tcloseRe: ansiStyles.color.closeRe\n\t\t\t\t};\n\t\t\t\treturn build.call(this, this._styles ? this._styles.concat(codes) : [codes], this._empty, model);\n\t\t\t};\n\t\t}\n\t};\n}\n\nansiStyles.bgColor.closeRe = new RegExp(escapeStringRegexp(ansiStyles.bgColor.close), 'g');\nfor (const model of Object.keys(ansiStyles.bgColor.ansi)) {\n\tif (skipModels.has(model)) {\n\t\tcontinue;\n\t}\n\n\tconst bgModel = 'bg' + model[0].toUpperCase() + model.slice(1);\n\tstyles[bgModel] = {\n\t\tget() {\n\t\t\tconst level = this.level;\n\t\t\treturn function () {\n\t\t\t\tconst open = ansiStyles.bgColor[levelMapping[level]][model].apply(null, arguments);\n\t\t\t\tconst codes = {\n\t\t\t\t\topen,\n\t\t\t\t\tclose: ansiStyles.bgColor.close,\n\t\t\t\t\tcloseRe: ansiStyles.bgColor.closeRe\n\t\t\t\t};\n\t\t\t\treturn build.call(this, this._styles ? this._styles.concat(codes) : [codes], this._empty, model);\n\t\t\t};\n\t\t}\n\t};\n}\n\nconst proto = Object.defineProperties(() => {}, styles);\n\nfunction build(_styles, _empty, key) {\n\tconst builder = function () {\n\t\treturn applyStyle.apply(builder, arguments);\n\t};\n\n\tbuilder._styles = _styles;\n\tbuilder._empty = _empty;\n\n\tconst self = this;\n\n\tObject.defineProperty(builder, 'level', {\n\t\tenumerable: true,\n\t\tget() {\n\t\t\treturn self.level;\n\t\t},\n\t\tset(level) {\n\t\t\tself.level = level;\n\t\t}\n\t});\n\n\tObject.defineProperty(builder, 'enabled', {\n\t\tenumerable: true,\n\t\tget() {\n\t\t\treturn self.enabled;\n\t\t},\n\t\tset(enabled) {\n\t\t\tself.enabled = enabled;\n\t\t}\n\t});\n\n\t// See below for fix regarding invisible grey/dim combination on Windows\n\tbuilder.hasGrey = this.hasGrey || key === 'gray' || key === 'grey';\n\n\t// `__proto__` is used because we must return a function, but there is\n\t// no way to create a function with a different prototype\n\tbuilder.__proto__ = proto; // eslint-disable-line no-proto\n\n\treturn builder;\n}\n\nfunction applyStyle() {\n\t// Support varags, but simply cast to string in case there's only one arg\n\tconst args = arguments;\n\tconst argsLen = args.length;\n\tlet str = String(arguments[0]);\n\n\tif (argsLen === 0) {\n\t\treturn '';\n\t}\n\n\tif (argsLen > 1) {\n\t\t// Don't slice `arguments`, it prevents V8 optimizations\n\t\tfor (let a = 1; a < argsLen; a++) {\n\t\t\tstr += ' ' + args[a];\n\t\t}\n\t}\n\n\tif (!this.enabled || this.level <= 0 || !str) {\n\t\treturn this._empty ? '' : str;\n\t}\n\n\t// Turns out that on Windows dimmed gray text becomes invisible in cmd.exe,\n\t// see https://github.com/chalk/chalk/issues/58\n\t// If we're on Windows and we're dealing with a gray color, temporarily make 'dim' a noop.\n\tconst originalDim = ansiStyles.dim.open;\n\tif (isSimpleWindowsTerm && this.hasGrey) {\n\t\tansiStyles.dim.open = '';\n\t}\n\n\tfor (const code of this._styles.slice().reverse()) {\n\t\t// Replace any instances already present with a re-opening code\n\t\t// otherwise only the part of the string until said closing code\n\t\t// will be colored, and the rest will simply be 'plain'.\n\t\tstr = code.open + str.replace(code.closeRe, code.open) + code.close;\n\n\t\t// Close the styling before a linebreak and reopen\n\t\t// after next line to fix a bleed issue on macOS\n\t\t// https://github.com/chalk/chalk/pull/92\n\t\tstr = str.replace(/\\r?\\n/g, `${code.close}$&${code.open}`);\n\t}\n\n\t// Reset the original `dim` if we changed it to work around the Windows dimmed gray issue\n\tansiStyles.dim.open = originalDim;\n\n\treturn str;\n}\n\nfunction chalkTag(chalk, strings) {\n\tif (!Array.isArray(strings)) {\n\t\t// If chalk() was called by itself or with a string,\n\t\t// return the string itself as a string.\n\t\treturn [].slice.call(arguments, 1).join(' ');\n\t}\n\n\tconst args = [].slice.call(arguments, 2);\n\tconst parts = [strings.raw[0]];\n\n\tfor (let i = 1; i < strings.length; i++) {\n\t\tparts.push(String(args[i - 1]).replace(/[{}\\\\]/g, '\\\\$&'));\n\t\tparts.push(String(strings.raw[i]));\n\t}\n\n\treturn template(chalk, parts.join(''));\n}\n\nObject.defineProperties(Chalk.prototype, styles);\n\nmodule.exports = Chalk(); // eslint-disable-line new-cap\nmodule.exports.supportsColor = stdoutColor;\nmodule.exports.default = module.exports; // For TypeScript\n","'use strict';\nconst colorConvert = require('color-convert');\n\nconst wrapAnsi16 = (fn, offset) => function () {\n\tconst code = fn.apply(colorConvert, arguments);\n\treturn `\\u001B[${code + offset}m`;\n};\n\nconst wrapAnsi256 = (fn, offset) => function () {\n\tconst code = fn.apply(colorConvert, arguments);\n\treturn `\\u001B[${38 + offset};5;${code}m`;\n};\n\nconst wrapAnsi16m = (fn, offset) => function () {\n\tconst rgb = fn.apply(colorConvert, arguments);\n\treturn `\\u001B[${38 + offset};2;${rgb[0]};${rgb[1]};${rgb[2]}m`;\n};\n\nfunction assembleStyles() {\n\tconst codes = new Map();\n\tconst styles = {\n\t\tmodifier: {\n\t\t\treset: [0, 0],\n\t\t\t// 21 isn't widely supported and 22 does the same thing\n\t\t\tbold: [1, 22],\n\t\t\tdim: [2, 22],\n\t\t\titalic: [3, 23],\n\t\t\tunderline: [4, 24],\n\t\t\tinverse: [7, 27],\n\t\t\thidden: [8, 28],\n\t\t\tstrikethrough: [9, 29]\n\t\t},\n\t\tcolor: {\n\t\t\tblack: [30, 39],\n\t\t\tred: [31, 39],\n\t\t\tgreen: [32, 39],\n\t\t\tyellow: [33, 39],\n\t\t\tblue: [34, 39],\n\t\t\tmagenta: [35, 39],\n\t\t\tcyan: [36, 39],\n\t\t\twhite: [37, 39],\n\t\t\tgray: [90, 39],\n\n\t\t\t// Bright color\n\t\t\tredBright: [91, 39],\n\t\t\tgreenBright: [92, 39],\n\t\t\tyellowBright: [93, 39],\n\t\t\tblueBright: [94, 39],\n\t\t\tmagentaBright: [95, 39],\n\t\t\tcyanBright: [96, 39],\n\t\t\twhiteBright: [97, 39]\n\t\t},\n\t\tbgColor: {\n\t\t\tbgBlack: [40, 49],\n\t\t\tbgRed: [41, 49],\n\t\t\tbgGreen: [42, 49],\n\t\t\tbgYellow: [43, 49],\n\t\t\tbgBlue: [44, 49],\n\t\t\tbgMagenta: [45, 49],\n\t\t\tbgCyan: [46, 49],\n\t\t\tbgWhite: [47, 49],\n\n\t\t\t// Bright color\n\t\t\tbgBlackBright: [100, 49],\n\t\t\tbgRedBright: [101, 49],\n\t\t\tbgGreenBright: [102, 49],\n\t\t\tbgYellowBright: [103, 49],\n\t\t\tbgBlueBright: [104, 49],\n\t\t\tbgMagentaBright: [105, 49],\n\t\t\tbgCyanBright: [106, 49],\n\t\t\tbgWhiteBright: [107, 49]\n\t\t}\n\t};\n\n\t// Fix humans\n\tstyles.color.grey = styles.color.gray;\n\n\tfor (const groupName of Object.keys(styles)) {\n\t\tconst group = styles[groupName];\n\n\t\tfor (const styleName of Object.keys(group)) {\n\t\t\tconst style = group[styleName];\n\n\t\t\tstyles[styleName] = {\n\t\t\t\topen: `\\u001B[${style[0]}m`,\n\t\t\t\tclose: `\\u001B[${style[1]}m`\n\t\t\t};\n\n\t\t\tgroup[styleName] = styles[styleName];\n\n\t\t\tcodes.set(style[0], style[1]);\n\t\t}\n\n\t\tObject.defineProperty(styles, groupName, {\n\t\t\tvalue: group,\n\t\t\tenumerable: false\n\t\t});\n\n\t\tObject.defineProperty(styles, 'codes', {\n\t\t\tvalue: codes,\n\t\t\tenumerable: false\n\t\t});\n\t}\n\n\tconst ansi2ansi = n => n;\n\tconst rgb2rgb = (r, g, b) => [r, g, b];\n\n\tstyles.color.close = '\\u001B[39m';\n\tstyles.bgColor.close = '\\u001B[49m';\n\n\tstyles.color.ansi = {\n\t\tansi: wrapAnsi16(ansi2ansi, 0)\n\t};\n\tstyles.color.ansi256 = {\n\t\tansi256: wrapAnsi256(ansi2ansi, 0)\n\t};\n\tstyles.color.ansi16m = {\n\t\trgb: wrapAnsi16m(rgb2rgb, 0)\n\t};\n\n\tstyles.bgColor.ansi = {\n\t\tansi: wrapAnsi16(ansi2ansi, 10)\n\t};\n\tstyles.bgColor.ansi256 = {\n\t\tansi256: wrapAnsi256(ansi2ansi, 10)\n\t};\n\tstyles.bgColor.ansi16m = {\n\t\trgb: wrapAnsi16m(rgb2rgb, 10)\n\t};\n\n\tfor (let key of Object.keys(colorConvert)) {\n\t\tif (typeof colorConvert[key] !== 'object') {\n\t\t\tcontinue;\n\t\t}\n\n\t\tconst suite = colorConvert[key];\n\n\t\tif (key === 'ansi16') {\n\t\t\tkey = 'ansi';\n\t\t}\n\n\t\tif ('ansi16' in suite) {\n\t\t\tstyles.color.ansi[key] = wrapAnsi16(suite.ansi16, 0);\n\t\t\tstyles.bgColor.ansi[key] = wrapAnsi16(suite.ansi16, 10);\n\t\t}\n\n\t\tif ('ansi256' in suite) {\n\t\t\tstyles.color.ansi256[key] = wrapAnsi256(suite.ansi256, 0);\n\t\t\tstyles.bgColor.ansi256[key] = wrapAnsi256(suite.ansi256, 10);\n\t\t}\n\n\t\tif ('rgb' in suite) {\n\t\t\tstyles.color.ansi16m[key] = wrapAnsi16m(suite.rgb, 0);\n\t\t\tstyles.bgColor.ansi16m[key] = wrapAnsi16m(suite.rgb, 10);\n\t\t}\n\t}\n\n\treturn styles;\n}\n\n// Make the export immutable\nObject.defineProperty(module, 'exports', {\n\tenumerable: true,\n\tget: assembleStyles\n});\n","var conversions = require('./conversions');\nvar route = require('./route');\n\nvar convert = {};\n\nvar models = Object.keys(conversions);\n\nfunction wrapRaw(fn) {\n\tvar wrappedFn = function (args) {\n\t\tif (args === undefined || args === null) {\n\t\t\treturn args;\n\t\t}\n\n\t\tif (arguments.length > 1) {\n\t\t\targs = Array.prototype.slice.call(arguments);\n\t\t}\n\n\t\treturn fn(args);\n\t};\n\n\t// preserve .conversion property if there is one\n\tif ('conversion' in fn) {\n\t\twrappedFn.conversion = fn.conversion;\n\t}\n\n\treturn wrappedFn;\n}\n\nfunction wrapRounded(fn) {\n\tvar wrappedFn = function (args) {\n\t\tif (args === undefined || args === null) {\n\t\t\treturn args;\n\t\t}\n\n\t\tif (arguments.length > 1) {\n\t\t\targs = Array.prototype.slice.call(arguments);\n\t\t}\n\n\t\tvar result = fn(args);\n\n\t\t// we're assuming the result is an array here.\n\t\t// see notice in conversions.js; don't use box types\n\t\t// in conversion functions.\n\t\tif (typeof result === 'object') {\n\t\t\tfor (var len = result.length, i = 0; i < len; i++) {\n\t\t\t\tresult[i] = Math.round(result[i]);\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t};\n\n\t// preserve .conversion property if there is one\n\tif ('conversion' in fn) {\n\t\twrappedFn.conversion = fn.conversion;\n\t}\n\n\treturn wrappedFn;\n}\n\nmodels.forEach(function (fromModel) {\n\tconvert[fromModel] = {};\n\n\tObject.defineProperty(convert[fromModel], 'channels', {value: conversions[fromModel].channels});\n\tObject.defineProperty(convert[fromModel], 'labels', {value: conversions[fromModel].labels});\n\n\tvar routes = route(fromModel);\n\tvar routeModels = Object.keys(routes);\n\n\trouteModels.forEach(function (toModel) {\n\t\tvar fn = routes[toModel];\n\n\t\tconvert[fromModel][toModel] = wrapRounded(fn);\n\t\tconvert[fromModel][toModel].raw = wrapRaw(fn);\n\t});\n});\n\nmodule.exports = convert;\n","'use strict'\r\n\r\nmodule.exports = {\r\n\t\"aliceblue\": [240, 248, 255],\r\n\t\"antiquewhite\": [250, 235, 215],\r\n\t\"aqua\": [0, 255, 255],\r\n\t\"aquamarine\": [127, 255, 212],\r\n\t\"azure\": [240, 255, 255],\r\n\t\"beige\": [245, 245, 220],\r\n\t\"bisque\": [255, 228, 196],\r\n\t\"black\": [0, 0, 0],\r\n\t\"blanchedalmond\": [255, 235, 205],\r\n\t\"blue\": [0, 0, 255],\r\n\t\"blueviolet\": [138, 43, 226],\r\n\t\"brown\": [165, 42, 42],\r\n\t\"burlywood\": [222, 184, 135],\r\n\t\"cadetblue\": [95, 158, 160],\r\n\t\"chartreuse\": [127, 255, 0],\r\n\t\"chocolate\": [210, 105, 30],\r\n\t\"coral\": [255, 127, 80],\r\n\t\"cornflowerblue\": [100, 149, 237],\r\n\t\"cornsilk\": [255, 248, 220],\r\n\t\"crimson\": [220, 20, 60],\r\n\t\"cyan\": [0, 255, 255],\r\n\t\"darkblue\": [0, 0, 139],\r\n\t\"darkcyan\": [0, 139, 139],\r\n\t\"darkgoldenrod\": [184, 134, 11],\r\n\t\"darkgray\": [169, 169, 169],\r\n\t\"darkgreen\": [0, 100, 0],\r\n\t\"darkgrey\": [169, 169, 169],\r\n\t\"darkkhaki\": [189, 183, 107],\r\n\t\"darkmagenta\": [139, 0, 139],\r\n\t\"darkolivegreen\": [85, 107, 47],\r\n\t\"darkorange\": [255, 140, 0],\r\n\t\"darkorchid\": [153, 50, 204],\r\n\t\"darkred\": [139, 0, 0],\r\n\t\"darksalmon\": [233, 150, 122],\r\n\t\"darkseagreen\": [143, 188, 143],\r\n\t\"darkslateblue\": [72, 61, 139],\r\n\t\"darkslategray\": [47, 79, 79],\r\n\t\"darkslategrey\": [47, 79, 79],\r\n\t\"darkturquoise\": [0, 206, 209],\r\n\t\"darkviolet\": [148, 0, 211],\r\n\t\"deeppink\": [255, 20, 147],\r\n\t\"deepskyblue\": [0, 191, 255],\r\n\t\"dimgray\": [105, 105, 105],\r\n\t\"dimgrey\": [105, 105, 105],\r\n\t\"dodgerblue\": [30, 144, 255],\r\n\t\"firebrick\": [178, 34, 34],\r\n\t\"floralwhite\": [255, 250, 240],\r\n\t\"forestgreen\": [34, 139, 34],\r\n\t\"fuchsia\": [255, 0, 255],\r\n\t\"gainsboro\": [220, 220, 220],\r\n\t\"ghostwhite\": [248, 248, 255],\r\n\t\"gold\": [255, 215, 0],\r\n\t\"goldenrod\": [218, 165, 32],\r\n\t\"gray\": [128, 128, 128],\r\n\t\"green\": [0, 128, 0],\r\n\t\"greenyellow\": [173, 255, 47],\r\n\t\"grey\": [128, 128, 128],\r\n\t\"honeydew\": [240, 255, 240],\r\n\t\"hotpink\": [255, 105, 180],\r\n\t\"indianred\": [205, 92, 92],\r\n\t\"indigo\": [75, 0, 130],\r\n\t\"ivory\": [255, 255, 240],\r\n\t\"khaki\": [240, 230, 140],\r\n\t\"lavender\": [230, 230, 250],\r\n\t\"lavenderblush\": [255, 240, 245],\r\n\t\"lawngreen\": [124, 252, 0],\r\n\t\"lemonchiffon\": [255, 250, 205],\r\n\t\"lightblue\": [173, 216, 230],\r\n\t\"lightcoral\": [240, 128, 128],\r\n\t\"lightcyan\": [224, 255, 255],\r\n\t\"lightgoldenrodyellow\": [250, 250, 210],\r\n\t\"lightgray\": [211, 211, 211],\r\n\t\"lightgreen\": [144, 238, 144],\r\n\t\"lightgrey\": [211, 211, 211],\r\n\t\"lightpink\": [255, 182, 193],\r\n\t\"lightsalmon\": [255, 160, 122],\r\n\t\"lightseagreen\": [32, 178, 170],\r\n\t\"lightskyblue\": [135, 206, 250],\r\n\t\"lightslategray\": [119, 136, 153],\r\n\t\"lightslategrey\": [119, 136, 153],\r\n\t\"lightsteelblue\": [176, 196, 222],\r\n\t\"lightyellow\": [255, 255, 224],\r\n\t\"lime\": [0, 255, 0],\r\n\t\"limegreen\": [50, 205, 50],\r\n\t\"linen\": [250, 240, 230],\r\n\t\"magenta\": [255, 0, 255],\r\n\t\"maroon\": [128, 0, 0],\r\n\t\"mediumaquamarine\": [102, 205, 170],\r\n\t\"mediumblue\": [0, 0, 205],\r\n\t\"mediumorchid\": [186, 85, 211],\r\n\t\"mediumpurple\": [147, 112, 219],\r\n\t\"mediumseagreen\": [60, 179, 113],\r\n\t\"mediumslateblue\": [123, 104, 238],\r\n\t\"mediumspringgreen\": [0, 250, 154],\r\n\t\"mediumturquoise\": [72, 209, 204],\r\n\t\"mediumvioletred\": [199, 21, 133],\r\n\t\"midnightblue\": [25, 25, 112],\r\n\t\"mintcream\": [245, 255, 250],\r\n\t\"mistyrose\": [255, 228, 225],\r\n\t\"moccasin\": [255, 228, 181],\r\n\t\"navajowhite\": [255, 222, 173],\r\n\t\"navy\": [0, 0, 128],\r\n\t\"oldlace\": [253, 245, 230],\r\n\t\"olive\": [128, 128, 0],\r\n\t\"olivedrab\": [107, 142, 35],\r\n\t\"orange\": [255, 165, 0],\r\n\t\"orangered\": [255, 69, 0],\r\n\t\"orchid\": [218, 112, 214],\r\n\t\"palegoldenrod\": [238, 232, 170],\r\n\t\"palegreen\": [152, 251, 152],\r\n\t\"paleturquoise\": [175, 238, 238],\r\n\t\"palevioletred\": [219, 112, 147],\r\n\t\"papayawhip\": [255, 239, 213],\r\n\t\"peachpuff\": [255, 218, 185],\r\n\t\"peru\": [205, 133, 63],\r\n\t\"pink\": [255, 192, 203],\r\n\t\"plum\": [221, 160, 221],\r\n\t\"powderblue\": [176, 224, 230],\r\n\t\"purple\": [128, 0, 128],\r\n\t\"rebeccapurple\": [102, 51, 153],\r\n\t\"red\": [255, 0, 0],\r\n\t\"rosybrown\": [188, 143, 143],\r\n\t\"royalblue\": [65, 105, 225],\r\n\t\"saddlebrown\": [139, 69, 19],\r\n\t\"salmon\": [250, 128, 114],\r\n\t\"sandybrown\": [244, 164, 96],\r\n\t\"seagreen\": [46, 139, 87],\r\n\t\"seashell\": [255, 245, 238],\r\n\t\"sienna\": [160, 82, 45],\r\n\t\"silver\": [192, 192, 192],\r\n\t\"skyblue\": [135, 206, 235],\r\n\t\"slateblue\": [106, 90, 205],\r\n\t\"slategray\": [112, 128, 144],\r\n\t\"slategrey\": [112, 128, 144],\r\n\t\"snow\": [255, 250, 250],\r\n\t\"springgreen\": [0, 255, 127],\r\n\t\"steelblue\": [70, 130, 180],\r\n\t\"tan\": [210, 180, 140],\r\n\t\"teal\": [0, 128, 128],\r\n\t\"thistle\": [216, 191, 216],\r\n\t\"tomato\": [255, 99, 71],\r\n\t\"turquoise\": [64, 224, 208],\r\n\t\"violet\": [238, 130, 238],\r\n\t\"wheat\": [245, 222, 179],\r\n\t\"white\": [255, 255, 255],\r\n\t\"whitesmoke\": [245, 245, 245],\r\n\t\"yellow\": [255, 255, 0],\r\n\t\"yellowgreen\": [154, 205, 50]\r\n};\r\n","var conversions = require('./conversions');\n\n/*\n\tthis function routes a model to all other models.\n\n\tall functions that are routed have a property `.conversion` attached\n\tto the returned synthetic function. This property is an array\n\tof strings, each with the steps in between the 'from' and 'to'\n\tcolor models (inclusive).\n\n\tconversions that are not possible simply are not included.\n*/\n\nfunction buildGraph() {\n\tvar graph = {};\n\t// https://jsperf.com/object-keys-vs-for-in-with-closure/3\n\tvar models = Object.keys(conversions);\n\n\tfor (var len = models.length, i = 0; i < len; i++) {\n\t\tgraph[models[i]] = {\n\t\t\t// http://jsperf.com/1-vs-infinity\n\t\t\t// micro-opt, but this is simple.\n\t\t\tdistance: -1,\n\t\t\tparent: null\n\t\t};\n\t}\n\n\treturn graph;\n}\n\n// https://en.wikipedia.org/wiki/Breadth-first_search\nfunction deriveBFS(fromModel) {\n\tvar graph = buildGraph();\n\tvar queue = [fromModel]; // unshift -> queue -> pop\n\n\tgraph[fromModel].distance = 0;\n\n\twhile (queue.length) {\n\t\tvar current = queue.pop();\n\t\tvar adjacents = Object.keys(conversions[current]);\n\n\t\tfor (var len = adjacents.length, i = 0; i < len; i++) {\n\t\t\tvar adjacent = adjacents[i];\n\t\t\tvar node = graph[adjacent];\n\n\t\t\tif (node.distance === -1) {\n\t\t\t\tnode.distance = graph[current].distance + 1;\n\t\t\t\tnode.parent = current;\n\t\t\t\tqueue.unshift(adjacent);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn graph;\n}\n\nfunction link(from, to) {\n\treturn function (args) {\n\t\treturn to(from(args));\n\t};\n}\n\nfunction wrapConversion(toModel, graph) {\n\tvar path = [graph[toModel].parent, toModel];\n\tvar fn = conversions[graph[toModel].parent][toModel];\n\n\tvar cur = graph[toModel].parent;\n\twhile (graph[cur].parent) {\n\t\tpath.unshift(graph[cur].parent);\n\t\tfn = link(conversions[graph[cur].parent][cur], fn);\n\t\tcur = graph[cur].parent;\n\t}\n\n\tfn.conversion = path;\n\treturn fn;\n}\n\nmodule.exports = function (fromModel) {\n\tvar graph = deriveBFS(fromModel);\n\tvar conversion = {};\n\n\tvar models = Object.keys(graph);\n\tfor (var len = models.length, i = 0; i < len; i++) {\n\t\tvar toModel = models[i];\n\t\tvar node = graph[toModel];\n\n\t\tif (node.parent === null) {\n\t\t\t// no possible conversion, or this node is the source model.\n\t\t\tcontinue;\n\t\t}\n\n\t\tconversion[toModel] = wrapConversion(toModel, graph);\n\t}\n\n\treturn conversion;\n};\n\n","'use strict';\nmodule.exports = {\n\tstdout: false,\n\tstderr: false\n};\n","'use strict';\nconst TEMPLATE_REGEX = /(?:\\\\(u[a-f\\d]{4}|x[a-f\\d]{2}|.))|(?:\\{(~)?(\\w+(?:\\([^)]*\\))?(?:\\.\\w+(?:\\([^)]*\\))?)*)(?:[ \\t]|(?=\\r?\\n)))|(\\})|((?:.|[\\r\\n\\f])+?)/gi;\nconst STYLE_REGEX = /(?:^|\\.)(\\w+)(?:\\(([^)]*)\\))?/g;\nconst STRING_REGEX = /^(['\"])((?:\\\\.|(?!\\1)[^\\\\])*)\\1$/;\nconst ESCAPE_REGEX = /\\\\(u[a-f\\d]{4}|x[a-f\\d]{2}|.)|([^\\\\])/gi;\n\nconst ESCAPES = new Map([\n\t['n', '\\n'],\n\t['r', '\\r'],\n\t['t', '\\t'],\n\t['b', '\\b'],\n\t['f', '\\f'],\n\t['v', '\\v'],\n\t['0', '\\0'],\n\t['\\\\', '\\\\'],\n\t['e', '\\u001B'],\n\t['a', '\\u0007']\n]);\n\nfunction unescape(c) {\n\tif ((c[0] === 'u' && c.length === 5) || (c[0] === 'x' && c.length === 3)) {\n\t\treturn String.fromCharCode(parseInt(c.slice(1), 16));\n\t}\n\n\treturn ESCAPES.get(c) || c;\n}\n\nfunction parseArguments(name, args) {\n\tconst results = [];\n\tconst chunks = args.trim().split(/\\s*,\\s*/g);\n\tlet matches;\n\n\tfor (const chunk of chunks) {\n\t\tif (!isNaN(chunk)) {\n\t\t\tresults.push(Number(chunk));\n\t\t} else if ((matches = chunk.match(STRING_REGEX))) {\n\t\t\tresults.push(matches[2].replace(ESCAPE_REGEX, (m, escape, chr) => escape ? unescape(escape) : chr));\n\t\t} else {\n\t\t\tthrow new Error(`Invalid Chalk template style argument: ${chunk} (in style '${name}')`);\n\t\t}\n\t}\n\n\treturn results;\n}\n\nfunction parseStyle(style) {\n\tSTYLE_REGEX.lastIndex = 0;\n\n\tconst results = [];\n\tlet matches;\n\n\twhile ((matches = STYLE_REGEX.exec(style)) !== null) {\n\t\tconst name = matches[1];\n\n\t\tif (matches[2]) {\n\t\t\tconst args = parseArguments(name, matches[2]);\n\t\t\tresults.push([name].concat(args));\n\t\t} else {\n\t\t\tresults.push([name]);\n\t\t}\n\t}\n\n\treturn results;\n}\n\nfunction buildStyle(chalk, styles) {\n\tconst enabled = {};\n\n\tfor (const layer of styles) {\n\t\tfor (const style of layer.styles) {\n\t\t\tenabled[style[0]] = layer.inverse ? null : style.slice(1);\n\t\t}\n\t}\n\n\tlet current = chalk;\n\tfor (const styleName of Object.keys(enabled)) {\n\t\tif (Array.isArray(enabled[styleName])) {\n\t\t\tif (!(styleName in current)) {\n\t\t\t\tthrow new Error(`Unknown Chalk style: ${styleName}`);\n\t\t\t}\n\n\t\t\tif (enabled[styleName].length > 0) {\n\t\t\t\tcurrent = current[styleName].apply(current, enabled[styleName]);\n\t\t\t} else {\n\t\t\t\tcurrent = current[styleName];\n\t\t\t}\n\t\t}\n\t}\n\n\treturn current;\n}\n\nmodule.exports = (chalk, tmp) => {\n\tconst styles = [];\n\tconst chunks = [];\n\tlet chunk = [];\n\n\t// eslint-disable-next-line max-params\n\ttmp.replace(TEMPLATE_REGEX, (m, escapeChar, inverse, style, close, chr) => {\n\t\tif (escapeChar) {\n\t\t\tchunk.push(unescape(escapeChar));\n\t\t} else if (style) {\n\t\t\tconst str = chunk.join('');\n\t\t\tchunk = [];\n\t\t\tchunks.push(styles.length === 0 ? str : buildStyle(chalk, styles)(str));\n\t\t\tstyles.push({inverse, styles: parseStyle(style)});\n\t\t} else if (close) {\n\t\t\tif (styles.length === 0) {\n\t\t\t\tthrow new Error('Found extraneous } in Chalk template literal');\n\t\t\t}\n\n\t\t\tchunks.push(buildStyle(chalk, styles)(chunk.join('')));\n\t\t\tchunk = [];\n\t\t\tstyles.pop();\n\t\t} else {\n\t\t\tchunk.push(chr);\n\t\t}\n\t});\n\n\tchunks.push(chunk.join(''));\n\n\tif (styles.length > 0) {\n\t\tconst errMsg = `Chalk template literal is missing ${styles.length} closing bracket${styles.length === 1 ? '' : 's'} (\\`}\\`)`;\n\t\tthrow new Error(errMsg);\n\t}\n\n\treturn chunks.join('');\n};\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = literalTemplate;\n\nvar _options = require(\"./options\");\n\nvar _parse = _interopRequireDefault(require(\"./parse\"));\n\nvar _populate = _interopRequireDefault(require(\"./populate\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction literalTemplate(formatter, tpl, opts) {\n  const {\n    metadata,\n    names\n  } = buildLiteralData(formatter, tpl, opts);\n  return arg => {\n    const defaultReplacements = {};\n    arg.forEach((replacement, i) => {\n      defaultReplacements[names[i]] = replacement;\n    });\n    return arg => {\n      const replacements = (0, _options.normalizeReplacements)(arg);\n\n      if (replacements) {\n        Object.keys(replacements).forEach(key => {\n          if (Object.prototype.hasOwnProperty.call(defaultReplacements, key)) {\n            throw new Error(\"Unexpected replacement overlap.\");\n          }\n        });\n      }\n\n      return formatter.unwrap((0, _populate.default)(metadata, replacements ? Object.assign(replacements, defaultReplacements) : defaultReplacements));\n    };\n  };\n}\n\nfunction buildLiteralData(formatter, tpl, opts) {\n  let names;\n  let nameSet;\n  let metadata;\n  let prefix = \"\";\n\n  do {\n    prefix += \"$\";\n    const result = buildTemplateCode(tpl, prefix);\n    names = result.names;\n    nameSet = new Set(names);\n    metadata = (0, _parse.default)(formatter, formatter.code(result.code), {\n      parser: opts.parser,\n      placeholderWhitelist: new Set(result.names.concat(opts.placeholderWhitelist ? Array.from(opts.placeholderWhitelist) : [])),\n      placeholderPattern: opts.placeholderPattern,\n      preserveComments: opts.preserveComments,\n      syntacticPlaceholders: opts.syntacticPlaceholders\n    });\n  } while (metadata.placeholders.some(placeholder => placeholder.isDuplicate && nameSet.has(placeholder.name)));\n\n  return {\n    metadata,\n    names\n  };\n}\n\nfunction buildTemplateCode(tpl, prefix) {\n  const names = [];\n  let code = tpl[0];\n\n  for (let i = 1; i < tpl.length; i++) {\n    const value = `${prefix}${i - 1}`;\n    names.push(value);\n    code += value + tpl[i];\n  }\n\n  return {\n    names,\n    code\n  };\n}"],"sourceRoot":""}