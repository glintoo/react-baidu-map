{"version":3,"sources":["../node_modules/@babel/plugin-transform-classes/lib/transformClass.js","../node_modules/@babel/plugin-transform-classes/lib/inline-createSuper-helpers.js","../node_modules/@babel/parser/lib/index.js","../node_modules/@babel/code-frame/lib/index.js","../node_modules/@babel/template/lib/options.js","../node_modules/@babel/template/lib/parse.js","../node_modules/@babel/highlight/node_modules/color-convert/conversions.js","../node_modules/@babel/template/lib/populate.js","../node_modules/@babel/plugin-transform-classes/lib/index.js","../node_modules/@babel/template/lib/formatters.js","../node_modules/@babel/template/lib/builder.js","../node_modules/@babel/template/lib/string.js","../node_modules/@babel/highlight/lib/index.js","../node_modules/@babel/highlight/node_modules/chalk/index.js","../node_modules/@babel/highlight/node_modules/ansi-styles/index.js","../node_modules/@babel/highlight/node_modules/color-convert/index.js","../node_modules/@babel/highlight/node_modules/color-name/index.js","../node_modules/@babel/highlight/node_modules/color-convert/route.js","../node_modules/@babel/highlight/node_modules/supports-color/browser.js","../node_modules/@babel/highlight/node_modules/chalk/templates.js","../node_modules/@babel/template/lib/literal.js","../node_modules/@babel/template/lib/index.js"],"names":["Object","defineProperty","exports","value","default","path","file","builtinClasses","isLoose","classState","parent","undefined","scope","node","classId","classRef","superFnId","superName","superReturns","isDerived","extendsNative","construct","constructorBody","userConstructor","userConstructorPath","hasConstructor","instancePropBody","instancePropRefs","staticPropBody","body","superThises","pushedConstructor","pushedInherits","protoAlias","hasInstanceDescriptors","hasStaticDescriptors","instanceMutatorMap","staticMutatorMap","setState","newState","assign","findThisesVisitor","_core","traverse","visitors","merge","_helperReplaceSupers","environmentVisitor","ThisExpression","push","buildBody","paths","get","equals","params","constructor","template","expression","ast","types","blockStatement","unshiftContainer","classMethod","identifier","maybeCreateConstructor","classBodyPaths","isClassProperty","buildCodeFrameError","decorators","isClassMethod","isConstructor","kind","methodPath","objectRef","superRef","replace","ReturnStatement","getFunctionParent","isArrowFunctionExpression","pushConstructor","pushMethod","pushBody","thisRef","ref","generateDeclaredUidIdentifier","cloneNode","thisPath","parentPath","isMemberExpression","object","replaceWith","callExpression","addHelper","bareSupers","Set","Super","isCallExpression","callee","add","wrapReturn","guaranteedSuperBeforeFinish","size","bareSuper","wrapSuperCall","find","isLoop","isConditional","returnArg","thisExpr","logicalExpression","concat","bodyPaths","length","pop","isReturnStatement","pushContainer","returnStatement","returnPath","argument","verifyConstructor","inherits","pushDescriptors","pushInheritsToBody","instanceProps","staticProps","defineMap","toClassObject","toComputedObjectFromClass","args","nullLiteral","lastNonNullIndex","i","isNullLiteral","slice","expressionStatement","call","bareSuperNode","arguments","unshift","thisExpression","isSpreadElement","isIdentifier","name","memberExpression","_helperOptimiseCallExpression","isExpressionStatement","container","key","assignmentExpression","static","generateUidIdentifier","classProto","protoDeclaration","variableDeclaration","variableDeclarator","insertProtoAliasOnce","methodName","computed","isLiteral","func","functionExpression","generator","async","toComputedKey","isStringLiteral","_helperFunctionName","id","expr","inheritsComments","processMethod","enumerable","mutatorMap","map","booleanLiteral","pushToMap","method","hasOwnBinding","rename","directives","pushConstructorToBody","_inlineCreateSuperHelpers","superClass","has","hasBinding","buildConstructor","closureParams","closureArgs","arg","_helperAnnotateAsPure","param","generateUidIdentifierBasedOnNode","setupClosureParamsArgs","fn","isStrict","isInStrictMode","constructorOnly","directive","directiveLiteral","toExpression","arrowFunctionExpression","classTransformer","_interopRequireDefault","require","_interopRequireWildcard","_getRequireWildcardCache","WeakMap","cache","obj","__esModule","newObj","hasPropertyDescriptor","getOwnPropertyDescriptor","prototype","hasOwnProperty","desc","set","functionDeclaration","helperIDs","clone","_unused","helper","CREATE_SUPER","GET_PROTOTYPE_OF","POSSIBLE_CONSTRUCTOR_RETURN","registerDeclaration","statement","beforeExpr","startsExpr","prefix","TokenType","label","conf","this","keyword","rightAssociative","isAssign","postfix","binop","updateContext","keywords","Map","createKeyword","options","token","createBinop","num","bigint","decimal","regexp","string","eof","bracketL","bracketHashL","bracketBarL","bracketR","bracketBarR","braceL","braceBarL","braceHashL","braceR","braceBarR","parenL","parenR","comma","semi","colon","doubleColon","dot","question","questionDot","arrow","ellipsis","backQuote","dollarBraceL","at","hash","interpreterDirective","eq","incDec","bang","tilde","pipeline","nullishCoalescing","logicalOR","logicalAND","bitwiseOR","bitwiseXOR","bitwiseAND","equality","relational","bitShift","plusMin","modulo","star","slash","exponent","_break","_case","_catch","_continue","_debugger","_default","_do","_else","_finally","_for","_function","_if","_return","_switch","_throw","_try","_var","_const","_while","_with","_new","_this","_super","_class","_extends","_export","_import","_null","_true","_false","_in","_instanceof","_typeof","_void","_delete","lineBreak","lineBreakG","RegExp","source","isNewLine","code","skipWhiteSpace","isWhitespace","Position","line","col","column","SourceLocation","start","end","filename","identifierName","last","stack","CommentsParser","comment","loc","state","trailingComments","leadingComments","elements","takeAllComments","lastElement","j","commentPreviousNode","splice","newTrailingComments","leadingComment","type","firstChild","lastChild","commentStack","lastInStack","adjustCommentsAfterTrailingComma","properties","innerComments","firstTrailingCommentIndex","findIndex","sawUnambiguousESM","ambiguousScriptDifferentAst","plugins","plugin","hasPlugin","ErrorMessages","freeze","AccessorIsGenerator","ArgumentsInClass","AsyncFunctionInSingleStatementContext","AwaitBindingIdentifier","AwaitExpressionFormalParameter","AwaitNotInAsyncContext","AwaitNotInAsyncFunction","BadGetterArity","BadSetterArity","BadSetterRestParameter","ConstructorClassField","ConstructorClassPrivateField","ConstructorIsAccessor","ConstructorIsAsync","ConstructorIsGenerator","DeclarationMissingInitializer","DecoratorBeforeExport","DecoratorConstructor","DecoratorExportClass","DecoratorSemicolon","DecoratorStaticBlock","DeletePrivateField","DestructureNamedImport","DuplicateConstructor","DuplicateDefaultExport","DuplicateExport","DuplicateProto","DuplicateRegExpFlags","DuplicateStaticBlock","ElementAfterRest","EscapedCharNotAnIdentifier","ExportBindingIsString","ExportDefaultFromAsIdentifier","ForInOfLoopInitializer","GeneratorInSingleStatementContext","IllegalBreakContinue","IllegalLanguageModeDirective","IllegalReturn","ImportBindingIsString","ImportCallArgumentTrailingComma","ImportCallArity","ImportCallNotNewExpression","ImportCallSpreadArgument","ImportMetaOutsideModule","ImportOutsideModule","InvalidBigIntLiteral","InvalidCodePoint","InvalidDecimal","InvalidDigit","InvalidEscapeSequence","InvalidEscapeSequenceTemplate","InvalidEscapedReservedWord","InvalidIdentifier","InvalidLhs","InvalidLhsBinding","InvalidNumber","InvalidOrMissingExponent","InvalidOrUnexpectedToken","InvalidParenthesizedAssignment","InvalidPrivateFieldResolution","InvalidPropertyBindingPattern","InvalidRecordProperty","InvalidRestAssignmentPattern","LabelRedeclaration","LetInLexicalBinding","LineTerminatorBeforeArrow","MalformedRegExpFlags","MissingClassName","MissingEqInAssignment","MissingUnicodeEscape","MixingCoalesceWithLogical","ModuleAttributeDifferentFromType","ModuleAttributeInvalidValue","ModuleAttributesWithDuplicateKeys","ModuleExportNameHasLoneSurrogate","ModuleExportUndefined","MultipleDefaultsInSwitch","NewlineAfterThrow","NoCatchOrFinally","NumberIdentifier","NumericSeparatorInEscapeSequence","ObsoleteAwaitStar","OptionalChainingNoNew","OptionalChainingNoTemplate","ParamDupe","PatternHasAccessor","PatternHasMethod","PipelineBodyNoArrow","PipelineBodySequenceExpression","PipelineHeadSequenceExpression","PipelineTopicUnused","PrimaryTopicNotAllowed","PrimaryTopicRequiresSmartPipeline","PrivateInExpectedIn","PrivateNameRedeclaration","RecordExpressionBarIncorrectEndSyntaxType","RecordExpressionBarIncorrectStartSyntaxType","RecordExpressionHashIncorrectStartSyntaxType","RecordNoProto","RestTrailingComma","SloppyFunction","StaticPrototype","StrictDelete","StrictEvalArguments","StrictEvalArgumentsBinding","StrictFunction","StrictNumericEscape","StrictOctalLiteral","StrictWith","SuperNotAllowed","SuperPrivateField","TrailingDecorator","TupleExpressionBarIncorrectEndSyntaxType","TupleExpressionBarIncorrectStartSyntaxType","TupleExpressionHashIncorrectStartSyntaxType","UnexpectedArgumentPlaceholder","UnexpectedAwaitAfterPipelineBody","UnexpectedDigitAfterHash","UnexpectedImportExport","UnexpectedKeyword","UnexpectedLeadingDecorator","UnexpectedLexicalDeclaration","UnexpectedNewTarget","UnexpectedNumericSeparator","UnexpectedPrivateField","UnexpectedReservedWord","UnexpectedSuper","UnexpectedToken","UnexpectedTokenUnaryExponentiation","UnsupportedBind","UnsupportedDecoratorExport","UnsupportedDefaultExport","UnsupportedImport","UnsupportedMetaProperty","UnsupportedParameterDecorator","UnsupportedPropertyDecorator","UnsupportedSuper","UnterminatedComment","UnterminatedRegExp","UnterminatedString","UnterminatedTemplate","VarRedeclaration","YieldBindingIdentifier","YieldInParameter","ZeroDigitNumericSeparator","ParserError","pos","startLoc","lastTokStart","lastTokStartLoc","endLoc","lastTokEnd","lastTokEndLoc","input","offset","match","lineStart","lastIndex","exec","index","getLineInfo","errorTemplate","raiseWithData","data","getLocationForPosition","message","_","_raise","errorContext","err","SyntaxError","errorRecovery","isLookahead","errors","TokContext","isExpr","preserveSpace","override","types$1","braceStatement","braceExpression","recordExpression","templateQuasi","parenStatement","parenExpression","p","readTmplToken","functionStatement","context","out","curContext","exprAllowed","prevType","allowed","isIterator","braceIsBlock","statementParens","hasPrecedingLineBreak","b_stat","nonASCIIidentifierStartChars","nonASCIIidentifierChars","nonASCIIidentifierStart","nonASCIIidentifier","astralIdentifierStartCodes","astralIdentifierCodes","isInAstralSet","isIdentifierStart","test","String","fromCharCode","isIdentifierChar","reservedWords","keywords$1","reservedWordsStrictSet","reservedWordsStrictBindSet","isReservedWord","word","inModule","isStrictReservedWord","isStrictBindOnlyReservedWord","isStrictBindReservedWord","isKeyword","keywordRelationalOperator","SCOPE_CLASS","SCOPE_TS_MODULE","BIND_FLAGS_CLASS","BIND_FLAGS_TS_ENUM","BIND_FLAGS_TS_CONST_ENUM","BIND_FLAGS_TS_EXPORT_ONLY","BIND_TS_AMBIENT","BIND_NONE","reservedTypes","FlowErrors","AmbiguousConditionalArrow","AmbiguousDeclareModuleKind","AssignReservedType","DeclareClassElement","DeclareClassFieldInitializer","DuplicateDeclareModuleExports","EnumBooleanMemberNotInitialized","EnumDuplicateMemberName","EnumInconsistentMemberValues","EnumInvalidExplicitType","EnumInvalidExplicitTypeUnknownSupplied","EnumInvalidMemberInitializerPrimaryType","EnumInvalidMemberInitializerSymbolType","EnumInvalidMemberInitializerUnknownType","EnumInvalidMemberName","EnumNumberMemberNotInitialized","EnumStringMemberInconsistentlyInitailized","ImportTypeShorthandOnlyInPureImport","InexactInsideExact","InexactInsideNonObject","InexactVariance","InvalidNonTypeImportInDeclareModule","MissingTypeParamDefault","NestedDeclareModule","NestedFlowComment","OptionalBindingPattern","SpreadVariance","TypeBeforeInitializer","TypeCastInPattern","UnexpectedExplicitInexactInObject","UnexpectedReservedType","UnexpectedReservedUnderscore","UnexpectedSpaceBetweenModuloChecks","UnexpectedSpreadType","UnexpectedSubtractionOperand","UnexpectedTokenAfterTypeParameter","UnexpectedTypeParameterBeforeAsyncArrowFunction","UnsupportedDeclareExportKind","UnsupportedStatementInDeclareModule","UnterminatedFlowComment","hasTypeImportKind","importKind","isMaybeDefaultImport","exportSuggestions","const","let","interface","FLOW_PRAGMA_REGEX","entities","quot","amp","apos","lt","gt","nbsp","iexcl","cent","pound","curren","yen","brvbar","sect","uml","copy","ordf","laquo","not","shy","reg","macr","deg","plusmn","sup2","sup3","acute","micro","para","middot","cedil","sup1","ordm","raquo","frac14","frac12","frac34","iquest","Agrave","Aacute","Acirc","Atilde","Auml","Aring","AElig","Ccedil","Egrave","Eacute","Ecirc","Euml","Igrave","Iacute","Icirc","Iuml","ETH","Ntilde","Ograve","Oacute","Ocirc","Otilde","Ouml","times","Oslash","Ugrave","Uacute","Ucirc","Uuml","Yacute","THORN","szlig","agrave","aacute","acirc","atilde","auml","aring","aelig","ccedil","egrave","eacute","ecirc","euml","igrave","iacute","icirc","iuml","eth","ntilde","ograve","oacute","ocirc","otilde","ouml","divide","oslash","ugrave","uacute","ucirc","uuml","yacute","thorn","yuml","OElig","oelig","Scaron","scaron","Yuml","fnof","circ","Alpha","Beta","Gamma","Delta","Epsilon","Zeta","Eta","Theta","Iota","Kappa","Lambda","Mu","Nu","Xi","Omicron","Pi","Rho","Sigma","Tau","Upsilon","Phi","Chi","Psi","Omega","alpha","beta","gamma","delta","epsilon","zeta","eta","theta","iota","kappa","lambda","mu","nu","xi","omicron","pi","rho","sigmaf","sigma","tau","upsilon","phi","chi","psi","omega","thetasym","upsih","piv","ensp","emsp","thinsp","zwnj","zwj","lrm","rlm","ndash","mdash","lsquo","rsquo","sbquo","ldquo","rdquo","bdquo","dagger","Dagger","bull","hellip","permil","prime","Prime","lsaquo","rsaquo","oline","frasl","euro","image","weierp","real","trade","alefsym","larr","uarr","rarr","darr","harr","crarr","lArr","uArr","rArr","dArr","hArr","forall","part","exist","empty","nabla","isin","notin","ni","prod","sum","minus","lowast","radic","prop","infin","ang","and","or","cap","cup","int","there4","sim","cong","asymp","ne","equiv","le","ge","sub","sup","nsub","sube","supe","oplus","otimes","perp","sdot","lceil","rceil","lfloor","rfloor","lang","rang","loz","spades","clubs","hearts","diams","HEX_NUMBER","DECIMAL_NUMBER","JsxErrors","AttributeIsEmpty","MissingClosingTagFragment","MissingClosingTagElement","UnexpectedSequenceExpression","UnsupportedJsxValue","UnterminatedJsxContent","UnwrappedAdjacentJSXElements","isFragment","getQualifiedJSXName","namespace","property","Error","j_oTag","j_cTag","j_expr","jsxName","jsxText","jsxTagStart","jsxTagEnd","Scope","flags","var","lexical","functions","ScopeHandler","raise","scopeStack","undefinedExports","undefinedPrivateNames","createScope","bindingType","currentScope","checkRedeclarationInScope","maybeExportDefined","SCOPE_PROGRAM","delete","isRedeclaredInScope","indexOf","treatFunctionsAsVarInScope","currentVarScope","currentThisScope","TypeScriptScope","enums","constEnums","classes","exportOnlyBindings","TypeScriptScopeHandler","isConst","wasConst","ProductionParameterHandler","stacks","currentFlags","functionFlags","isAsync","isGenerator","nonNull","x","assert","TSErrors","ClassMethodHasDeclare","ClassMethodHasReadonly","ConstructorHasTypeParameters","DeclareClassFieldHasInitializer","DeclareFunctionHasImplementation","DuplicateModifier","EmptyHeritageClauseType","EmptyTypeArguments","EmptyTypeParameters","IndexSignatureHasAbstract","IndexSignatureHasAccessibility","IndexSignatureHasStatic","IndexSignatureHasDeclare","InvalidTupleMemberLabel","MixedLabeledAndUnlabeledElements","OptionalTypeBeforeRequired","PatternIsOptional","PrivateElementHasAbstract","PrivateElementHasAccessibility","TypeAnnotationAfterAssign","UnexpectedParameterModifier","UnexpectedReadonly","UnexpectedTypeAnnotation","UnexpectedTypeCastInParameter","UnsupportedImportTypeArgument","UnsupportedParameterPropertyKind","UnsupportedSignatureParameterKind","placeholder","some","Array","isArray","getPluginOption","option","PIPELINE_PROPOSALS","RECORD_AND_TUPLE_SYNTAX_TYPES","mixinPlugins","estree","pattern","regex","e","estreeParseLiteral","bigInt","BigInt","parseLiteral","stmt","startNodeAt","extra","expressionValue","raw","finishNodeAt","isObjectProperty","checkDeclaration","_stmt$expression$extr","parenthesized","addExtra","directiveStatements","d","directiveToStmt","classBody","allowsDirectSuper","parseMethod","typeParameters","refExpressionErrors","estreeParseRegExpLiteral","estreeParseBigIntLiteral","estreeParseDecimalLiteral","startPos","allowExpression","isMethod","allowDirectSuper","inClassScope","funcNode","startNode","finishNode","isPattern","isAccessor","shorthand","isLHS","toAssignable","optional","exported","specifiers","base","noCalls","optionalChainMember","substring","stop","chain","startNodeAtNode","jsx","chunkStart","ch","charCodeAt","finishToken","jsxReadEntity","jsxReadNewLine","normalizeCRLF","curLine","quote","entity","str","count","substr","fromCodePoint","parseInt","unexpected","next","jsxParseIdentifier","eat","jsxParseNamespacedName","newNode","jsxParseExpressionContainer","parseExprAtom","parseExpression","expect","jsxParseEmptyExpression","parseMaybeAssignAllowIn","jsxParseAttributeValue","jsxParseElementName","jsxParseOpeningElementAfterName","attributes","jsxParseAttribute","selfClosing","children","openingElement","jsxParseOpeningElementAt","closingElement","contents","jsxParseClosingElementAt","jsxParseElementAt","jsxParseSpreadChild","openingFragment","closingFragment","isRelational","jsxParseElement","inPropertyName","jsxReadToken","jsxReadWord","jsxReadString","flow","flowPragma","val","matches","tok","oldInType","inType","flowParseType","moduloLoc","moduloPos","checksLoc","expectContextual","predicate","flowParsePredicate","flowParseInterfaceish","parseIdentifier","typeNode","typeContainer","flowParseTypeParameterDeclaration","tmp","flowParseFunctionTypeParams","rest","flowParseTypeAndPredicateInitialiser","returnType","typeAnnotation","resetEndLocation","semicolon","insideModule","flowParseDeclareClass","flowParseDeclareFunction","flowParseDeclareVariable","eatContextual","flowParseDeclareModuleExports","flowParseDeclareModule","isContextual","flowParseDeclareTypeAlias","flowParseDeclareOpaqueType","flowParseDeclareInterface","flowParseDeclareExportDeclaration","flowParseTypeAnnotatableIdentifier","declareName","BIND_KIND_VALUE","enter","bodyNode","parseImport","flowParseDeclare","exit","hasModuleExport","forEach","bodyElement","declaration","isEsModuleType","isLet","suggestion","parseExport","exportKind","flowParseTypeAnnotation","flowParseTypeAlias","flowParseOpaqueType","isClass","flowParseRestrictedIdentifier","extends","implements","mixins","flowParseInterfaceExtends","flowParseObjectType","allowStatic","allowExact","allowSpread","allowProto","allowInexact","flowParseQualifiedTypeIdentifier","flowParseTypeParameterInstantiation","liberal","checkReservedType","right","flowParseTypeInitialiser","declare","supertype","impltype","requireDefault","nodeStart","variance","flowParseVariance","ident","bound","defaultRequired","typeParameter","flowParseTypeParameter","expectRelational","oldNoAnonFunctionType","noAnonFunctionType","flowParseTypeOrImplicitInstantiation","isStatic","lookahead","flowParseObjectPropertyKey","flowParseObjectTypeMethodish","flowParseFunctionTypeParam","valueNode","endDelim","exact","callProperties","indexers","internalSlots","inexact","protoStart","inexactStart","flowParseObjectTypeInternalSlot","flowParseObjectTypeIndexer","flowParseObjectTypeCallProperty","propOrInexact","flowParseObjectTypeProperty","flowObjectTypeSemicolon","proto","flowCheckGetterSetterParams","paramCount","node2","qualification","flowParsePrimaryType","lh","checkNotUnderscore","flowParseGenericType","isGroupedType","flowParseInterfaceType","flowIdentToTypeAnnotation","flowParseTupleType","reinterpretTypeAsFunctionTypeParam","flowParseTypeofType","canInsertSemicolon","elementType","flowParsePrefixType","flowParsePostfixType","flowParseAnonFunctionWithoutParens","flowParseIntersectionType","flowParseUnionType","allowPrimitiveOverride","allowExpressionBody","forwardNoArrowParamsConversionAt","topLevel","strict","flowParseInterface","shouldParseEnums","flowParseEnumDeclaration","isValidDirective","refNeedsArrowPos","result","tryParse","error","failState","originalNoArrowAt","noArrowAt","tryParseConditionalConsequent","consequent","failed","getArrowLikeExpressions","valid","invalid","alternate","parseMaybeAssign","noArrowParamsConversionAt","disallowInvalid","arrows","finishArrowValidation","list","list1","list2","partition","every","isAssignable","_node$extra","toAssignableList","trailingComma","SCOPE_FUNCTION","parse","typeCastNode","decl","declarationNode","parseExportSpecifiers","parseExportFrom","hasNamespace","isStatement","optionalId","member","parseClassMemberFromModifier","finishOp","current","isIteratorStart","isBinding","element","operator","typeCastToParameter","exprList","trailingCommaPos","isParenthesizedExpr","_expr$extra","close","canBePattern","isTuple","maybeInArrowParameters","toReferencedList","superTypeParameters","implemented","isPrivateNameAllowed","left","specifier","contextDescription","local","checkLVal","firstIdentLoc","firstIdent","parseModuleExportName","specifierTypeKind","isLookaheadContextual","as_ident","imported","__clone","nodeIsTypeImport","specifierIsTypeImport","checkReservedWord","allowModifiers","afterLeftParse","_jsx","_jsx2","_jsx3","abort","_arrowExpression$extr","arrowExpression","resetStartLocationFromNode","maybeUnwrapTypeCastExpression","aborted","thrown","allowDuplicates","isArrowFunction","canBeArrow","parseCallExpressionArguments","parseAsyncArrowWithTypeParameters","subscriptState","isLookaheadToken_lt","typeArguments","finishCallExpression","shouldParseTypes","flowParseTypeParameterInstantiationCallOrNew","targs","parseFunctionParams","parseArrow","parseArrowExpression","hasFlowComment","nextToken","program","fileNode","skipFlowComment","hasFlowCommentCompletion","shiftToFirstNonWhiteSpace","includes","ch2","ch3","enumName","memberName","toUpperCase","suppliedType","explicitType","endOfInit","literal","parseBooleanLiteral","init","flowEnumMemberInit","expectedType","flowEnumErrorInvalidMemberInitializer","seenNames","members","booleanMembers","numberMembers","stringMembers","defaultedMembers","memberNode","flowEnumMemberRaw","flowEnumErrorInvalidMemberName","flowEnumErrorDuplicateMemberName","flowEnumCheckExplicitTypeMismatch","flowEnumErrorBooleanMemberNotInitialized","flowEnumErrorNumberMemberNotInitialized","initializedMembers","_i","flowEnumErrorStringMemberInconsistentlyInitailized","_i2","flowEnumErrorInvalidExplicitType","nameLoc","flowEnumParseExplicitType","flowEnumMembers","flowEnumStringMembers","boolsLen","numsLen","strsLen","defaultedLen","_i3","_members$defaultedMem","_i4","_members$defaultedMem2","flowEnumErrorInconsistentMemberValues","flowEnumBody","nextTokenStart","afterNext","typescript","isLiteralPropertyName","allowedModifiers","modifier","tsTryParse","tsNextTokenCanFollowModifier","bind","modified","tsParseModifier","parseElement","tsIsListTerminator","tsParseDelimitedListWorker","expectSuccess","bracket","skipFirstToken","tsParseDelimitedList","qualifier","tsParseEntityName","tsParseTypeArguments","allowReservedWords","typeName","lhs","parameterName","tsParseTypeAnnotation","asserts","exprName","tsParseImportType","parseIdentifierName","constraint","tsEatThenParseType","tsParseTypeParameters","tsParseBracketedList","tsParseTypeParameter","tsParseTypeReference","returnToken","signature","returnTokenRequired","tsTryParseTypeParameters","parameters","tsParseBindingListForSignature","tsParseTypeOrTypePredicateAnnotation","parseBindingList","tsFillSignature","tsParseTypeMemberSemicolon","tsLookAhead","tsIsUnambiguouslyIndexSignature","tsTryParseTypeAnnotation","readonly","nodeAny","tsParseSignatureMember","createIdentifier","tsParsePropertyOrMethodSignature","idx","tsTryParseIndexSignature","parsePropertyName","tsParseObjectTypeMembers","tsParseList","tsParseTypeMember","tsIsIdentifier","tsExpectThenParseType","tsParseMappedTypeParameter","nameType","tsParseType","tsTryParseType","elementTypes","tsParseTupleElementType","seenOptionalElement","labeledElements","elementNode","_labeledElements","isLabeled","labeledNode","optionalTypeNode","restNode","parseTemplate","thisKeyword","tsParseThisTypeNode","tsParseThisTypePredicate","keywordTypeFromName","lookaheadCharCode","tsParseLiteralTypeNode","parseMaybeUnary","tsParseThisTypeOrThisTypePredicate","tsParseTypeQuery","tsIsStartOfMappedType","tsParseMappedType","tsParseTypeLiteral","tsParseTupleType","tsParseParenthesizedType","tsParseTemplateLiteralType","tsParseNonArrayType","objectType","indexType","tsParseTypeOperatorOrHigher","tsCheckTypeAnnotationForReadOnly","kw","tsParseTypeOperator","tsParseInferType","tsParseArrayTypeOrHigher","parseConstituentType","tsParseUnionOrIntersectionType","tsParseIntersectionTypeOrHigher","tsIsUnambiguouslyStartOfFunctionType","braceStackCounter","tsSkipParameterStart","tsInType","t","tsParseTypePredicateAsserts","thisTypePredicate","typePredicateVariable","tsParseTypePredicatePrefix","containsEsc","eatColon","tsParseNonConditionalType","checkType","extendsType","trueType","falseType","tsIsStartOfFunctionType","tsParseFunctionOrConstructorType","tsParseUnionTypeOrHigher","tsTryNextParseConstantContext","tsNextThenParseType","descriptor","originalStart","delimitedList","tsParseExpressionWithTypeArguments","tsParseHeritageClause","cb","oldContext","tsDoThenParseType","initializer","BIND_TS_ENUM","tsParseEnumMember","parseBlockOrModuleBlockBody","nested","inner","tsParseModuleOrNamespaceDeclaration","prodParam","tsParseModuleBlock","global","isExport","moduleReference","tsParseModuleReference","tsIsExternalModuleReference","tsParseExternalModuleReference","f","res","nany","isLineTerminator","starttype","tsInDeclareContext","parseFunctionStatement","parseClass","tsParseEnumDeclaration","parseVarStatement","tsParseAmbientExternalModuleDeclaration","tsParseDeclaration","tsTryParseDeclare","mod","tsCheckLineTerminatorAndMatch","cls","abstract","tsParseInterfaceDeclaration","tsParseTypeAliasDeclaration","tokenType","oldMaybeInArrowParameters","tsTryParseAndCatch","tsTryParseTypeOrTypePredicateAnnotation","tsInNoContext","tsIsDeclarationStart","accessibility","parseAccessModifier","parseMaybeDefault","parseAssignableListItemTypes","elt","pp","parameter","bodilessType","isDeclareContext","items","isInParens","tsCheckForInvalidTypeCasts","nonNullExpression","atPossibleAsyncArrow","asyncArrowFn","tsTryParseGenericAsyncArrowFunction","parseTaggedTemplateExpression","leftStartPos","leftStartLoc","minPrec","reScan_lt_gt","parseExprOp","checkKeywords","ahead","tsParseImportEqualsDeclaration","importNode","isAbstractClass","tsParseModifiers","callParseClassMember","methodOrProp","tsParseExpressionStatement","isDeclare","tsTryParseExportDeclaration","resetStartLocation","definite","parseClassPropertyAnnotation","_typeCast","_typeCast2","_jsx4","_typeCast3","typeCast","_typeParameters","tsParseTypeAssertion","readToken_lt_gt","baseCount","firstParam","getObjectOrClassMethodParams","oldIsDeclareContext","v8intrinsic","v8IntrinsicStart","parseV8Intrinsic","placeholders","expectedNode","assertNoSpace","finishPlaceholder","isFinished","parsePlaceholder","parseStatement","takeDecorators","oldStrict","parseClassId","parseClassSuper","parseClassBody","expectPlugin","isUnparsedContextual","startsWith","nextTokenStartSince","filter","hasStarImport","maybeParseStarImportSpecifier","parseNamedImportSpecifiers","parseImportSource","mixinPluginNames","keys","defaultOptions","sourceType","sourceFilename","startLine","allowAwaitOutsideFunction","allowReturnOutsideFunction","allowImportExportEverywhere","allowSuperOutsideMethod","allowUndeclaredExports","strictMode","ranges","tokens","createParenthesizedExpressions","State","potentialArrowAt","inPipeline","topicContext","maxNumOfResolvableTopics","maxTopicIndex","soloAwait","inFSharpPipelineDirectBody","labels","decoratorStack","comments","strictErrors","exportedIdentifiers","tokensLength","curPosition","skipArrays","_isDigit","VALID_REGEX_FLAGS","forbiddenNumericSeparatorSiblings","decBinOct","hex","allowedNumericSeparatorSiblings","oct","bin","dec","Token","UtilParser","op","nameStart","nameEnd","messageOrType","missingPlugin","names","n","join","oldState","abortSignal","andThrow","shorthandAssign","doubleProto","isPrivateName","checkKeywordEscapes","pushToken","old","curr","clear","skipSpace","getTokenFromCode","codePointAt","block","text","addComment","pushComment","startSkip","loop","skipBlockComment","skipLineComment","readToken_interpreter","nextPos","readNumber","readRegexp","width","next2","readToken_dot","readToken_question","readRadixNumber","readString","readToken_slash","readToken_mult_modulo","readToken_pipe_amp","readToken_caret","readToken_plus_min","readToken_eq_excl","readToken_numberSign","readWord","escaped","inClass","charAt","content","mods","char","charCode","radix","len","forceLen","allowNumSeparator","forbiddenSiblings","allowedSiblings","total","Infinity","prev","Number","isNaN","isBigInt","readInt","startsWithDot","isFloat","isDecimal","hasExponent","isOctal","hasLeadingZero","integer","recordStrictModeErrors","underscorePos","parseFloat","throwOnInvalid","codePos","readHexChar","readEscapedChar","containsInvalid","inTemplate","readCodePoint","octalStr","octal","escStart","identifierCheck","esc","readWord1","update","ExpressionErrors","Node","parser","range","unwrapParenthesizedExpression","LValParser","_node$extra3","expressionScope","recordParenthesizedIdentifierError","_node$extra2","isLast","toAssignableObjectExpressionProp","raiseRestNotLast","checkToRestConversion","raiseTrailingCommaAfterRest","toReferencedListDeep","parseBindingAtom","parseObjectLike","closeCharCode","allowEmpty","elts","first","parseRestBinding","checkCommaAfterRest","parseDecorator","parseAssignableListItem","_startLoc","_startPos","_left","checkClashes","disallowLetBinding","strictModeChanged","_expr$properties","isObjectMethod","_expr$elements","elem","processComment","locationNode","ExpressionScope","ArrowHeadParsingScope","iterator","ExpressionScopeHandler","isCertainlyParameterDeclaration","canBeArrowParameterDeclaration","recordDeclarationError","iterateErrors","clearDeclarationError","newExpressionScope","loopLabel","switchLabel","loneSurrogate","StatementParser","interpreter","parseInterpreterDirective","parseBlockBody","_Array$from","from","nextCh","parseDecorators","parseStatementContent","parseBreakContinueStatement","parseDebuggerStatement","parseDoStatement","parseForStatement","parseIfStatement","parseReturnStatement","parseSwitchStatement","parseThrowStatement","parseTryStatement","parseWhileStatement","parseWithStatement","parseBlock","parseEmptyStatement","nextTokenCharCode","assertModuleNodeAllowed","isAsyncFunction","maybeName","parseLabeledStatement","parseExpressionStatement","allowExport","currentContextDecorators","decorator","canHaveLeadingDecorator","expectOnePlugin","parseMaybeDecoratorArguments","parseExprSubscripts","isBreak","verifyBreakContinue","lab","withTopicForbiddingContext","parseHeaderExpression","awaitAt","isAwaitAllowed","parseFor","parseVar","declarations","parseForIn","description","checkExpressionErrors","declarationPosition","parseFunction","hasReturn","discriminant","cur","sawDefault","cases","isCase","simple","handler","clause","parseCatchClauseParam","finalizer","_this$state$labels","statementStart","allowDirectives","createNewLexicalScope","afterBlockParse","hasStrictModeDirective","parsedNonDirective","stmtToDirective","setStrict","isForIn","await","isFor","isTypescript","parseVarId","parseMaybeAssignDisallowIn","isHangingStatement","requireId","initFunction","parseFunctionId","parseFunctionBodyAndFinish","registerFunctionStatementId","treatFunctionsAsVar","constructorAllowsSuper","classScope","hadConstructor","hadStaticBlock","parseClassMember","pushClassMethod","parseClassProperty","parseClassStaticBlock","parseClassMemberWithIsStatic","publicMethod","privateMethod","publicProp","privateProp","publicMember","parseClassElementName","pushClassPrivateMethod","isNonstaticConstructor","isPrivate","isSimple","maybeQuestionTokenStart","parsePostMemberNameModifiers","pushClassPrivateProperty","pushClassProperty","checkGetterSetterParams","getPrivateNameSV","_member$decorators","oldLabels","parseClassPrivateProperty","declarePrivateName","CLASS_ELEMENT_KIND_GETTER","CLASS_ELEMENT_KIND_SETTER","parseInitializer","hasDefault","maybeParseExportDefaultSpecifier","parseAfterDefault","hasStar","eatExportStar","maybeParseExportNamespaceSpecifier","parseAfterNamespace","isFromRequired","hasDeclaration","hasSpecifiers","maybeParseExportNamedSpecifiers","maybeParseExportDeclaration","checkExport","parseExportDefaultExpression","isExportDefaultSpecifier","shouldParseExportDeclaration","parseExportDeclaration","FUNC_STATEMENT","l","hasFrom","nextAfterFrom","assertions","maybeParseImportAssertions","checkNames","isDefault","isFrom","checkDuplicateExports","_declaration$extra","_node$specifiers","exportedName","checkLocalExport","_node$declaration$dec","_i5","_node$properties","_i6","_node$elements","nodes","surrogate","toString","parseNext","maybeParseDefaultImportSpecifier","maybeParseModuleAttributes","attrs","attrNames","keyName","parseAssertEntries","shouldParseDefaultImport","parseImportSpecifierLocal","parseImportSpecifier","isRecord","protoRef","used","paramFlags","disallowIn","disallowInAnd","parseExpressionBase","allowInAnd","expressions","ownExpressionErrors","hasYield","parseYield","parseMaybeConditional","parseExprOps","shouldExitDescending","parseConditional","prec","hasIn","checkPipelineAtInfixOperator","logical","coalesce","hasAwait","parseExprOpRightExpr","nextOp","withTopicPermittingContext","parseSmartPipelineBody","parseExprOpBaseRightExpr","withSoloAwaitPermittingContext","parseFSharpPipelineBody","parseAwait","isDelete","hasPropertyAsPrivateName","parseUpdate","parseSubscripts","maybeAsyncArrow","parseSubscript","parseBind","parseCoverCallAndAsyncArrowHead","parseMember","parseMaybePrivateName","usePrivateName","parseNoCallExpr","shouldParseAsyncArrow","validateAsPattern","parseAsyncArrowFromCallExpression","toReferencedArguments","tag","quasi","_node$arguments","possibleAsyncArrow","dynamicImport","allowPlaceholder","nodeForExtra","oldInFSharpPipelineDirectBody","parseExprListItem","_call$extra","parseSuper","parseImportMetaProperty","parseAsyncArrowUnaryFunction","parseDo","parseParenAndDistinguishExpression","parseArrayLike","parseFunctionOrFunctionSent","parseNewOrNewTarget","primaryTopicReferenceIsAllowedInCurrentTopicContext","registerTopicReference","lookaheadCh","allowSuper","meta","parseMetaProperty","propertyName","spreadStart","optionalCommaStart","innerStartPos","innerStartLoc","spreadNodeStartPos","spreadNodeStartLoc","parseParenItem","innerEndPos","innerEndLoc","arrowNode","shouldParseArrow","metaProp","inNonArrowFunction","parseNew","isOptionalChain","parseNewArguments","parseExprList","isTagged","cooked","tail","curElt","parseTemplateElement","quasis","parseTemplateSubstitution","propHash","create","parsePropertyDefinition","checkProto","parseSpread","maybeAsyncOrAccessorProp","parseObjPropValue","_params","getGetterSetterExpectedParamCount","parseObjectMethod","parseObjectProperty","oldInPropertyName","setArrowFunctionParameters","parseFunctionBody","isExpression","checkParams","nonSimple","isSimpleParamList","errorPos","_node$params","recordAsyncArrowParametersError","inFunction","recordParameterInitializerError","delegate","childExpression","checkSmartPipelineBodyEarlyErrors","parseSmartPipelineBodyInStyle","isSimpleReference","topicReferenceWasUsedInCurrentTopicContext","callback","outerContextTopicState","outerContextSoloAwaitState","ret","ClassScope","privateNames","loneAccessors","ClassScopeHandler","oldClassScope","redefined","accessor","_this$stack","Parser","opts","_Object$keys","getOptions","getScopeHandler","pluginMap","pluginsMap","parseTopLevel","getParser","decoratorsBeforeExport","validatePlugins","pluginsFromOptions","pluginList","parserClassCache","getParserClass","_options","moduleError","_unused2","getExpression","tokTypes","codeFrameColumns","rawLines","lineNumber","colNumber","deprecationWarningShown","process","emitWarning","deprecationError","console","warn","location","Math","max","_highlight","getDefs","chalk","gutter","grey","marker","red","bold","NEWLINE","getMarkerLines","linesAbove","linesBelow","startColumn","endLine","endColumn","min","lineDiff","markerLines","sourceLength","highlighted","highlightCode","forceColor","shouldHighlight","getChalk","defs","maybeHighlight","chalkFn","lines","split","hasColumns","numberMaxWidth","highlightedLines","frame","number","paddedNumber","hasMarker","lastMarkerLine","markerLine","markerSpacing","numberOfMarkers","repeat","reset","a","b","placeholderWhitelist","placeholderPattern","preserveComments","syntacticPlaceholders","validate","_ref","excluded","target","sourceKeys","_objectWithoutPropertiesLoose","normalizeReplacements","replacements","reduce","acc","replacement","formatter","parserOpts","_parser","_codeFrame","parseWithCodeFrame","removePropertiesDeep","syntactic","placeholderNames","legacy","isLegacyRef","placeholderVisitorHandler","PATTERN","ancestors","_state$placeholderWhi","isPlaceholder","isJSXIdentifier","isNewExpression","isFunction","resolve","resolveAncestors","isDuplicate","cssKeywords","reverseKeywords","convert","module","rgb","channels","hsl","hsv","hwb","cmyk","xyz","lch","ansi16","ansi256","hcg","apple","gray","model","h","r","g","rdif","gdif","bdif","s","v","diff","diffc","c","k","reversed","currentClosestKeyword","y","currentClosestDistance","distance","pow","z","t1","t2","t3","smin","lmin","hi","floor","q","sl","vmin","wh","bl","ratio","m","y2","x2","z2","atan2","PI","sqrt","hr","cos","sin","round","ansi","color","mult","rem","colorString","hue","chroma","mg","pure","w","metadata","placeholderName","reverse","stringLiteral","emptyStatement","applyReplacement","_helperPluginUtils","_helperSplitExportDeclaration","_globals","_transformClass","getBuiltinClasses","category","api","assertVersion","loose","VISITED","Symbol","visitor","ExportDefaultDeclaration","isClassDeclaration","ClassDeclaration","ClassExpression","inferred","arrowFunctionToExpression","statements","smart","makeStatementFormatter","unwrap","assertExpressionStatement","createTemplateBuilder","defaultOpts","templateFnCache","templateAstCache","cachedOpts","tpl","extendedTrace","_string","builder","_literal","NO_PLACEHOLDER","rootStack","_parse","_populate","highlightTokens","_jsTokens","_helperValidatorIdentifier","_chalk","cyan","capitalized","yellow","jsx_tag","punctuator","magenta","green","white","bgRed","JSX_TAG","BRACKET","getTokenType","matchToToken","toLowerCase","colorize","supportsColor","enabled","level","escapeStringRegexp","ansiStyles","stdoutColor","stdout","isSimpleWindowsTerm","platform","TERM","levelMapping","skipModels","styles","applyOptions","scLevel","Chalk","chalkTag","apply","setPrototypeOf","blue","open","closeRe","codes","build","_styles","_empty","visible","bgColor","bgModel","defineProperties","applyStyle","self","hasGrey","__proto__","argsLen","originalDim","dim","strings","parts","colorConvert","wrapAnsi16","wrapAnsi256","wrapAnsi16m","italic","underline","inverse","hidden","strikethrough","black","redBright","greenBright","yellowBright","blueBright","magentaBright","cyanBright","whiteBright","bgBlack","bgGreen","bgYellow","bgBlue","bgMagenta","bgCyan","bgWhite","bgBlackBright","bgRedBright","bgGreenBright","bgYellowBright","bgBlueBright","bgMagentaBright","bgCyanBright","bgWhiteBright","groupName","group","styleName","style","ansi2ansi","rgb2rgb","ansi16m","suite","conversions","route","fromModel","routes","toModel","wrappedFn","conversion","wrapRounded","wrapRaw","deriveBFS","graph","models","buildGraph","queue","adjacents","adjacent","link","to","wrapConversion","stderr","TEMPLATE_REGEX","STYLE_REGEX","STRING_REGEX","ESCAPE_REGEX","ESCAPES","unescape","parseArguments","results","chunks","trim","chunk","escape","chr","parseStyle","buildStyle","layer","escapeChar","errMsg","nameSet","buildTemplateCode","buildLiteralData","defaultReplacements","formatters","_builder"],"mappings":"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G,EAAG,GAAI,GAAI,GAAI,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,GAAI,EAAG,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,IAAK,GAAI,GAAI,EAAG,GAAI,EAAG,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,IAAK,GAAI,GAAI,EAAG,GAAI,GAAI,GAAI,EAAG,GAAI,GAAI,GAAI,EAAG,GAAI,GAAI,IAAK,GAAI,IAAK,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,GAAI,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,GAAI,EAAG,EAAG,GAAI,EAAG,GAAI,GAAI,GAAI,EAAG,GAAI,GAAI,IAAK,EAAG,EAAG,GAAI,GAAI,EAAG,GAAI,GAAI,IAAK,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,EAAG,IAAK,GAAI,IAAK,EAAG,GAAI,IAAK,IAAK,IAAK,GAAI,IAAK,KAAM,KAAM,KAAM,IAAK,KAAM,IAAK,EAAG,GAAI,IAAK,GAAI,GAAI,GAAI,GAAI,EAAG,GAAI,GAAI,EAAG,GAAI,IAAK,GAAI,IAAK,GAAI,EAAG,EAAG,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,GAAI,KAAM,EAAG,KAAM,GAAI,EAAG,KAAM,IAAK,GAAI,EAAG,GAAI,EAAG,EAAG,IAAK,KAAM,IAAK,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,KAAM,GAAI,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,KAAM,GAAI,GAAI,EAAG,GAAI,EAAG,IAAK,GAAI,KAAM,IAAK,GAAI,GAAI,EAAG,EAAG,KAAM,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,KAAM,MAAO,GAAI,KAAM,GAAI,IAAK,EAAG,KAAM,GAAI,KAAM,KAAM,IAAK,KAAM,MAC3wDC,EAAwB,CAAC,IAAK,EAAG,IAAK,EAAG,IAAK,EAAG,IAAK,EAAG,KAAM,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,IAAK,EAAG,IAAK,EAAG,EAAG,EAAG,IAAK,EAAG,IAAK,GAAI,IAAK,EAAG,GAAI,GAAI,GAAI,EAAG,GAAI,EAAG,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,GAAI,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,EAAG,EAAG,IAAK,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,GAAI,GAAI,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,EAAG,IAAK,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,GAAI,GAAI,EAAG,GAAI,GAAI,EAAG,EAAG,GAAI,GAAI,EAAG,EAAG,IAAK,GAAI,IAAK,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG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","file":"static/js/vendors-runtime-template.b1bc8da1.chunk.js","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = transformClass;\n\nvar _helperFunctionName = _interopRequireDefault(require(\"@babel/helper-function-name\"));\n\nvar _helperReplaceSupers = _interopRequireWildcard(require(\"@babel/helper-replace-supers\"));\n\nvar _helperOptimiseCallExpression = _interopRequireDefault(require(\"@babel/helper-optimise-call-expression\"));\n\nvar defineMap = _interopRequireWildcard(require(\"@babel/helper-define-map\"));\n\nvar _core = require(\"@babel/core\");\n\nvar _helperAnnotateAsPure = _interopRequireDefault(require(\"@babel/helper-annotate-as-pure\"));\n\nvar _inlineCreateSuperHelpers = _interopRequireDefault(require(\"./inline-createSuper-helpers\"));\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction buildConstructor(classRef, constructorBody, node) {\n  const func = _core.types.functionDeclaration(_core.types.cloneNode(classRef), [], constructorBody);\n\n  _core.types.inherits(func, node);\n\n  return func;\n}\n\nfunction transformClass(path, file, builtinClasses, isLoose) {\n  const classState = {\n    parent: undefined,\n    scope: undefined,\n    node: undefined,\n    path: undefined,\n    file: undefined,\n    classId: undefined,\n    classRef: undefined,\n    superFnId: undefined,\n    superName: undefined,\n    superReturns: [],\n    isDerived: false,\n    extendsNative: false,\n    construct: undefined,\n    constructorBody: undefined,\n    userConstructor: undefined,\n    userConstructorPath: undefined,\n    hasConstructor: false,\n    instancePropBody: [],\n    instancePropRefs: {},\n    staticPropBody: [],\n    body: [],\n    superThises: [],\n    pushedConstructor: false,\n    pushedInherits: false,\n    protoAlias: null,\n    isLoose: false,\n    hasInstanceDescriptors: false,\n    hasStaticDescriptors: false,\n    instanceMutatorMap: {},\n    staticMutatorMap: {}\n  };\n\n  const setState = newState => {\n    Object.assign(classState, newState);\n  };\n\n  const findThisesVisitor = _core.traverse.visitors.merge([_helperReplaceSupers.environmentVisitor, {\n    ThisExpression(path) {\n      classState.superThises.push(path);\n    }\n\n  }]);\n\n  function pushToMap(node, enumerable, kind = \"value\", scope) {\n    let mutatorMap;\n\n    if (node.static) {\n      setState({\n        hasStaticDescriptors: true\n      });\n      mutatorMap = classState.staticMutatorMap;\n    } else {\n      setState({\n        hasInstanceDescriptors: true\n      });\n      mutatorMap = classState.instanceMutatorMap;\n    }\n\n    const map = defineMap.push(mutatorMap, node, kind, classState.file, scope);\n\n    if (enumerable) {\n      map.enumerable = _core.types.booleanLiteral(true);\n    }\n\n    return map;\n  }\n\n  function maybeCreateConstructor() {\n    let hasConstructor = false;\n    const paths = classState.path.get(\"body.body\");\n\n    for (const path of paths) {\n      hasConstructor = path.equals(\"kind\", \"constructor\");\n      if (hasConstructor) break;\n    }\n\n    if (hasConstructor) return;\n    let params, body;\n\n    if (classState.isDerived) {\n      const constructor = _core.template.expression.ast`\n        (function () {\n          super(...arguments);\n        })\n      `;\n      params = constructor.params;\n      body = constructor.body;\n    } else {\n      params = [];\n      body = _core.types.blockStatement([]);\n    }\n\n    classState.path.get(\"body\").unshiftContainer(\"body\", _core.types.classMethod(\"constructor\", _core.types.identifier(\"constructor\"), params, body));\n  }\n\n  function buildBody() {\n    maybeCreateConstructor();\n    pushBody();\n    verifyConstructor();\n\n    if (classState.userConstructor) {\n      const {\n        constructorBody,\n        userConstructor,\n        construct\n      } = classState;\n      constructorBody.body = constructorBody.body.concat(userConstructor.body.body);\n\n      _core.types.inherits(construct, userConstructor);\n\n      _core.types.inherits(constructorBody, userConstructor.body);\n    }\n\n    pushDescriptors();\n  }\n\n  function pushBody() {\n    const classBodyPaths = classState.path.get(\"body.body\");\n\n    for (const path of classBodyPaths) {\n      const node = path.node;\n\n      if (path.isClassProperty()) {\n        throw path.buildCodeFrameError(\"Missing class properties transform.\");\n      }\n\n      if (node.decorators) {\n        throw path.buildCodeFrameError(\"Method has decorators, put the decorator plugin before the classes one.\");\n      }\n\n      if (_core.types.isClassMethod(node)) {\n        const isConstructor = node.kind === \"constructor\";\n        const replaceSupers = new _helperReplaceSupers.default({\n          methodPath: path,\n          objectRef: classState.classRef,\n          superRef: classState.superName,\n          isLoose: classState.isLoose,\n          file: classState.file\n        });\n        replaceSupers.replace();\n        const superReturns = [];\n        path.traverse(_core.traverse.visitors.merge([_helperReplaceSupers.environmentVisitor, {\n          ReturnStatement(path) {\n            if (!path.getFunctionParent().isArrowFunctionExpression()) {\n              superReturns.push(path);\n            }\n          }\n\n        }]));\n\n        if (isConstructor) {\n          pushConstructor(superReturns, node, path);\n        } else {\n          pushMethod(node, path);\n        }\n      }\n    }\n  }\n\n  function clearDescriptors() {\n    setState({\n      hasInstanceDescriptors: false,\n      hasStaticDescriptors: false,\n      instanceMutatorMap: {},\n      staticMutatorMap: {}\n    });\n  }\n\n  function pushDescriptors() {\n    pushInheritsToBody();\n    const {\n      body\n    } = classState;\n    let instanceProps;\n    let staticProps;\n\n    if (classState.hasInstanceDescriptors) {\n      instanceProps = defineMap.toClassObject(classState.instanceMutatorMap);\n    }\n\n    if (classState.hasStaticDescriptors) {\n      staticProps = defineMap.toClassObject(classState.staticMutatorMap);\n    }\n\n    if (instanceProps || staticProps) {\n      if (instanceProps) {\n        instanceProps = defineMap.toComputedObjectFromClass(instanceProps);\n      }\n\n      if (staticProps) {\n        staticProps = defineMap.toComputedObjectFromClass(staticProps);\n      }\n\n      let args = [_core.types.cloneNode(classState.classRef), _core.types.nullLiteral(), _core.types.nullLiteral()];\n      if (instanceProps) args[1] = instanceProps;\n      if (staticProps) args[2] = staticProps;\n      let lastNonNullIndex = 0;\n\n      for (let i = 0; i < args.length; i++) {\n        if (!_core.types.isNullLiteral(args[i])) lastNonNullIndex = i;\n      }\n\n      args = args.slice(0, lastNonNullIndex + 1);\n      body.push(_core.types.expressionStatement(_core.types.callExpression(classState.file.addHelper(\"createClass\"), args)));\n    }\n\n    clearDescriptors();\n  }\n\n  function wrapSuperCall(bareSuper, superRef, thisRef, body) {\n    const bareSuperNode = bareSuper.node;\n    let call;\n\n    if (classState.isLoose) {\n      bareSuperNode.arguments.unshift(_core.types.thisExpression());\n\n      if (bareSuperNode.arguments.length === 2 && _core.types.isSpreadElement(bareSuperNode.arguments[1]) && _core.types.isIdentifier(bareSuperNode.arguments[1].argument, {\n        name: \"arguments\"\n      })) {\n        bareSuperNode.arguments[1] = bareSuperNode.arguments[1].argument;\n        bareSuperNode.callee = _core.types.memberExpression(_core.types.cloneNode(superRef), _core.types.identifier(\"apply\"));\n      } else {\n        bareSuperNode.callee = _core.types.memberExpression(_core.types.cloneNode(superRef), _core.types.identifier(\"call\"));\n      }\n\n      call = _core.types.logicalExpression(\"||\", bareSuperNode, _core.types.thisExpression());\n    } else {\n      call = (0, _helperOptimiseCallExpression.default)(_core.types.cloneNode(classState.superFnId), _core.types.thisExpression(), bareSuperNode.arguments);\n    }\n\n    if (bareSuper.parentPath.isExpressionStatement() && bareSuper.parentPath.container === body.node.body && body.node.body.length - 1 === bareSuper.parentPath.key) {\n      if (classState.superThises.length) {\n        call = _core.types.assignmentExpression(\"=\", thisRef(), call);\n      }\n\n      bareSuper.parentPath.replaceWith(_core.types.returnStatement(call));\n    } else {\n      bareSuper.replaceWith(_core.types.assignmentExpression(\"=\", thisRef(), call));\n    }\n  }\n\n  function verifyConstructor() {\n    if (!classState.isDerived) return;\n    const path = classState.userConstructorPath;\n    const body = path.get(\"body\");\n    path.traverse(findThisesVisitor);\n\n    let thisRef = function () {\n      const ref = path.scope.generateDeclaredUidIdentifier(\"this\");\n\n      thisRef = () => _core.types.cloneNode(ref);\n\n      return ref;\n    };\n\n    for (const thisPath of classState.superThises) {\n      const {\n        node,\n        parentPath\n      } = thisPath;\n\n      if (parentPath.isMemberExpression({\n        object: node\n      })) {\n        thisPath.replaceWith(thisRef());\n        continue;\n      }\n\n      thisPath.replaceWith(_core.types.callExpression(classState.file.addHelper(\"assertThisInitialized\"), [thisRef()]));\n    }\n\n    const bareSupers = new Set();\n    path.traverse(_core.traverse.visitors.merge([_helperReplaceSupers.environmentVisitor, {\n      Super(path) {\n        const {\n          node,\n          parentPath\n        } = path;\n\n        if (parentPath.isCallExpression({\n          callee: node\n        })) {\n          bareSupers.add(parentPath);\n        }\n      }\n\n    }]));\n    let guaranteedSuperBeforeFinish = !!bareSupers.size;\n\n    for (const bareSuper of bareSupers) {\n      wrapSuperCall(bareSuper, classState.superName, thisRef, body);\n\n      if (guaranteedSuperBeforeFinish) {\n        bareSuper.find(function (parentPath) {\n          if (parentPath === path) {\n            return true;\n          }\n\n          if (parentPath.isLoop() || parentPath.isConditional() || parentPath.isArrowFunctionExpression()) {\n            guaranteedSuperBeforeFinish = false;\n            return true;\n          }\n        });\n      }\n    }\n\n    let wrapReturn;\n\n    if (classState.isLoose) {\n      wrapReturn = returnArg => {\n        const thisExpr = _core.types.callExpression(classState.file.addHelper(\"assertThisInitialized\"), [thisRef()]);\n\n        return returnArg ? _core.types.logicalExpression(\"||\", returnArg, thisExpr) : thisExpr;\n      };\n    } else {\n      wrapReturn = returnArg => _core.types.callExpression(classState.file.addHelper(\"possibleConstructorReturn\"), [thisRef()].concat(returnArg || []));\n    }\n\n    const bodyPaths = body.get(\"body\");\n\n    if (!bodyPaths.length || !bodyPaths.pop().isReturnStatement()) {\n      body.pushContainer(\"body\", _core.types.returnStatement(guaranteedSuperBeforeFinish ? thisRef() : wrapReturn()));\n    }\n\n    for (const returnPath of classState.superReturns) {\n      returnPath.get(\"argument\").replaceWith(wrapReturn(returnPath.node.argument));\n    }\n  }\n\n  function pushMethod(node, path) {\n    const scope = path ? path.scope : classState.scope;\n\n    if (node.kind === \"method\") {\n      if (processMethod(node, scope)) return;\n    }\n\n    pushToMap(node, false, null, scope);\n  }\n\n  function processMethod(node, scope) {\n    if (classState.isLoose && !node.decorators) {\n      let {\n        classRef\n      } = classState;\n\n      if (!node.static) {\n        insertProtoAliasOnce();\n        classRef = classState.protoAlias;\n      }\n\n      const methodName = _core.types.memberExpression(_core.types.cloneNode(classRef), node.key, node.computed || _core.types.isLiteral(node.key));\n\n      let func = _core.types.functionExpression(null, node.params, node.body, node.generator, node.async);\n\n      _core.types.inherits(func, node);\n\n      const key = _core.types.toComputedKey(node, node.key);\n\n      if (_core.types.isStringLiteral(key)) {\n        func = (0, _helperFunctionName.default)({\n          node: func,\n          id: key,\n          scope\n        });\n      }\n\n      const expr = _core.types.expressionStatement(_core.types.assignmentExpression(\"=\", methodName, func));\n\n      _core.types.inheritsComments(expr, node);\n\n      classState.body.push(expr);\n      return true;\n    }\n\n    return false;\n  }\n\n  function insertProtoAliasOnce() {\n    if (classState.protoAlias === null) {\n      setState({\n        protoAlias: classState.scope.generateUidIdentifier(\"proto\")\n      });\n\n      const classProto = _core.types.memberExpression(classState.classRef, _core.types.identifier(\"prototype\"));\n\n      const protoDeclaration = _core.types.variableDeclaration(\"var\", [_core.types.variableDeclarator(classState.protoAlias, classProto)]);\n\n      classState.body.push(protoDeclaration);\n    }\n  }\n\n  function pushConstructor(superReturns, method, path) {\n    if (path.scope.hasOwnBinding(classState.classRef.name)) {\n      path.scope.rename(classState.classRef.name);\n    }\n\n    setState({\n      userConstructorPath: path,\n      userConstructor: method,\n      hasConstructor: true,\n      superReturns\n    });\n    const {\n      construct\n    } = classState;\n\n    _core.types.inheritsComments(construct, method);\n\n    construct.params = method.params;\n\n    _core.types.inherits(construct.body, method.body);\n\n    construct.body.directives = method.body.directives;\n    pushConstructorToBody();\n  }\n\n  function pushConstructorToBody() {\n    if (classState.pushedConstructor) return;\n    classState.pushedConstructor = true;\n\n    if (classState.hasInstanceDescriptors || classState.hasStaticDescriptors) {\n      pushDescriptors();\n    }\n\n    classState.body.push(classState.construct);\n    pushInheritsToBody();\n  }\n\n  function pushInheritsToBody() {\n    if (!classState.isDerived || classState.pushedInherits) return;\n    const superFnId = path.scope.generateUidIdentifier(\"super\");\n    setState({\n      pushedInherits: true,\n      superFnId\n    });\n\n    if (!classState.isLoose) {\n      classState.body.unshift(_core.types.variableDeclaration(\"var\", [_core.types.variableDeclarator(superFnId, _core.types.callExpression((0, _inlineCreateSuperHelpers.default)(classState.file), [_core.types.cloneNode(classState.classRef)]))]));\n    }\n\n    classState.body.unshift(_core.types.expressionStatement(_core.types.callExpression(classState.file.addHelper(classState.isLoose ? \"inheritsLoose\" : \"inherits\"), [_core.types.cloneNode(classState.classRef), _core.types.cloneNode(classState.superName)])));\n  }\n\n  function setupClosureParamsArgs() {\n    const {\n      superName\n    } = classState;\n    const closureParams = [];\n    const closureArgs = [];\n\n    if (classState.isDerived) {\n      let arg = _core.types.cloneNode(superName);\n\n      if (classState.extendsNative) {\n        arg = _core.types.callExpression(classState.file.addHelper(\"wrapNativeSuper\"), [arg]);\n        (0, _helperAnnotateAsPure.default)(arg);\n      }\n\n      const param = classState.scope.generateUidIdentifierBasedOnNode(superName);\n      closureParams.push(param);\n      closureArgs.push(arg);\n      setState({\n        superName: _core.types.cloneNode(param)\n      });\n    }\n\n    return {\n      closureParams,\n      closureArgs\n    };\n  }\n\n  function classTransformer(path, file, builtinClasses, isLoose) {\n    setState({\n      parent: path.parent,\n      scope: path.scope,\n      node: path.node,\n      path,\n      file,\n      isLoose\n    });\n    setState({\n      classId: classState.node.id,\n      classRef: classState.node.id ? _core.types.identifier(classState.node.id.name) : classState.scope.generateUidIdentifier(\"class\"),\n      superName: classState.node.superClass,\n      isDerived: !!classState.node.superClass,\n      constructorBody: _core.types.blockStatement([])\n    });\n    setState({\n      extendsNative: classState.isDerived && builtinClasses.has(classState.superName.name) && !classState.scope.hasBinding(classState.superName.name, true)\n    });\n    const {\n      classRef,\n      node,\n      constructorBody\n    } = classState;\n    setState({\n      construct: buildConstructor(classRef, constructorBody, node)\n    });\n    let {\n      body\n    } = classState;\n    const {\n      closureParams,\n      closureArgs\n    } = setupClosureParamsArgs();\n    buildBody();\n\n    if (!classState.isLoose) {\n      constructorBody.body.unshift(_core.types.expressionStatement(_core.types.callExpression(classState.file.addHelper(\"classCallCheck\"), [_core.types.thisExpression(), _core.types.cloneNode(classState.classRef)])));\n    }\n\n    body = body.concat(classState.staticPropBody.map(fn => fn(_core.types.cloneNode(classState.classRef))));\n    const isStrict = path.isInStrictMode();\n    let constructorOnly = classState.classId && body.length === 1;\n\n    if (constructorOnly && !isStrict) {\n      for (const param of classState.construct.params) {\n        if (!_core.types.isIdentifier(param)) {\n          constructorOnly = false;\n          break;\n        }\n      }\n    }\n\n    const directives = constructorOnly ? body[0].body.directives : [];\n\n    if (!isStrict) {\n      directives.push(_core.types.directive(_core.types.directiveLiteral(\"use strict\")));\n    }\n\n    if (constructorOnly) {\n      return _core.types.toExpression(body[0]);\n    }\n\n    body.push(_core.types.returnStatement(_core.types.cloneNode(classState.classRef)));\n\n    const container = _core.types.arrowFunctionExpression(closureParams, _core.types.blockStatement(body, directives));\n\n    return _core.types.callExpression(container, closureArgs);\n  }\n\n  return classTransformer(path, file, builtinClasses, isLoose);\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = addCreateSuperHelper;\n\nvar _core = require(\"@babel/core\");\n\nconst helperIDs = new WeakMap();\n\nfunction addCreateSuperHelper(file) {\n  if (helperIDs.has(file)) {\n    return (_core.types.cloneNode || _core.types.clone)(helperIDs.get(file));\n  }\n\n  try {\n    return file.addHelper(\"createSuper\");\n  } catch (_unused) {}\n\n  const id = file.scope.generateUidIdentifier(\"createSuper\");\n  helperIDs.set(file, id);\n  const fn = helper({\n    CREATE_SUPER: id,\n    GET_PROTOTYPE_OF: file.addHelper(\"getPrototypeOf\"),\n    POSSIBLE_CONSTRUCTOR_RETURN: file.addHelper(\"possibleConstructorReturn\")\n  });\n  file.path.unshiftContainer(\"body\", [fn]);\n  file.scope.registerDeclaration(file.path.get(\"body.0\"));\n  return _core.types.cloneNode(id);\n}\n\nconst helper = _core.template.statement`\n  function CREATE_SUPER(Derived) {\n    function isNativeReflectConstruct() {\n      if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n\n      // core-js@3\n      if (Reflect.construct.sham) return false;\n\n      // Proxy can't be polyfilled. Every browser implemented\n      // proxies before or at the same time as Reflect.construct,\n      // so if they support Proxy they also support Reflect.construct.\n      if (typeof Proxy === \"function\") return true;\n\n      // Since Reflect.construct can't be properly polyfilled, some\n      // implementations (e.g. core-js@2) don't set the correct internal slots.\n      // Those polyfills don't allow us to subclass built-ins, so we need to\n      // use our fallback implementation.\n      try {\n        // If the internal slots aren't set, this throws an error similar to\n        //   TypeError: this is not a Date object.\n        Date.prototype.toString.call(Reflect.construct(Date, [], function() {}));\n        return true;\n      } catch (e) {\n        return false;\n      }\n    }\n\n    return function () {\n      var Super = GET_PROTOTYPE_OF(Derived), result;\n      if (isNativeReflectConstruct()) {\n        // NOTE: This doesn't work if this.__proto__.constructor has been modified.\n        var NewTarget = GET_PROTOTYPE_OF(this).constructor;\n        result = Reflect.construct(Super, arguments, NewTarget);\n      } else {\n        result = Super.apply(this, arguments);\n      }\n      return POSSIBLE_CONSTRUCTOR_RETURN(this, result);\n    }\n  }\n`;","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nconst beforeExpr = true;\nconst startsExpr = true;\nconst isLoop = true;\nconst isAssign = true;\nconst prefix = true;\nconst postfix = true;\nclass TokenType {\n  constructor(label, conf = {}) {\n    this.label = void 0;\n    this.keyword = void 0;\n    this.beforeExpr = void 0;\n    this.startsExpr = void 0;\n    this.rightAssociative = void 0;\n    this.isLoop = void 0;\n    this.isAssign = void 0;\n    this.prefix = void 0;\n    this.postfix = void 0;\n    this.binop = void 0;\n    this.updateContext = void 0;\n    this.label = label;\n    this.keyword = conf.keyword;\n    this.beforeExpr = !!conf.beforeExpr;\n    this.startsExpr = !!conf.startsExpr;\n    this.rightAssociative = !!conf.rightAssociative;\n    this.isLoop = !!conf.isLoop;\n    this.isAssign = !!conf.isAssign;\n    this.prefix = !!conf.prefix;\n    this.postfix = !!conf.postfix;\n    this.binop = conf.binop != null ? conf.binop : null;\n    this.updateContext = null;\n  }\n\n}\nconst keywords = new Map();\n\nfunction createKeyword(name, options = {}) {\n  options.keyword = name;\n  const token = new TokenType(name, options);\n  keywords.set(name, token);\n  return token;\n}\n\nfunction createBinop(name, binop) {\n  return new TokenType(name, {\n    beforeExpr,\n    binop\n  });\n}\n\nconst types = {\n  num: new TokenType(\"num\", {\n    startsExpr\n  }),\n  bigint: new TokenType(\"bigint\", {\n    startsExpr\n  }),\n  decimal: new TokenType(\"decimal\", {\n    startsExpr\n  }),\n  regexp: new TokenType(\"regexp\", {\n    startsExpr\n  }),\n  string: new TokenType(\"string\", {\n    startsExpr\n  }),\n  name: new TokenType(\"name\", {\n    startsExpr\n  }),\n  eof: new TokenType(\"eof\"),\n  bracketL: new TokenType(\"[\", {\n    beforeExpr,\n    startsExpr\n  }),\n  bracketHashL: new TokenType(\"#[\", {\n    beforeExpr,\n    startsExpr\n  }),\n  bracketBarL: new TokenType(\"[|\", {\n    beforeExpr,\n    startsExpr\n  }),\n  bracketR: new TokenType(\"]\"),\n  bracketBarR: new TokenType(\"|]\"),\n  braceL: new TokenType(\"{\", {\n    beforeExpr,\n    startsExpr\n  }),\n  braceBarL: new TokenType(\"{|\", {\n    beforeExpr,\n    startsExpr\n  }),\n  braceHashL: new TokenType(\"#{\", {\n    beforeExpr,\n    startsExpr\n  }),\n  braceR: new TokenType(\"}\"),\n  braceBarR: new TokenType(\"|}\"),\n  parenL: new TokenType(\"(\", {\n    beforeExpr,\n    startsExpr\n  }),\n  parenR: new TokenType(\")\"),\n  comma: new TokenType(\",\", {\n    beforeExpr\n  }),\n  semi: new TokenType(\";\", {\n    beforeExpr\n  }),\n  colon: new TokenType(\":\", {\n    beforeExpr\n  }),\n  doubleColon: new TokenType(\"::\", {\n    beforeExpr\n  }),\n  dot: new TokenType(\".\"),\n  question: new TokenType(\"?\", {\n    beforeExpr\n  }),\n  questionDot: new TokenType(\"?.\"),\n  arrow: new TokenType(\"=>\", {\n    beforeExpr\n  }),\n  template: new TokenType(\"template\"),\n  ellipsis: new TokenType(\"...\", {\n    beforeExpr\n  }),\n  backQuote: new TokenType(\"`\", {\n    startsExpr\n  }),\n  dollarBraceL: new TokenType(\"${\", {\n    beforeExpr,\n    startsExpr\n  }),\n  at: new TokenType(\"@\"),\n  hash: new TokenType(\"#\", {\n    startsExpr\n  }),\n  interpreterDirective: new TokenType(\"#!...\"),\n  eq: new TokenType(\"=\", {\n    beforeExpr,\n    isAssign\n  }),\n  assign: new TokenType(\"_=\", {\n    beforeExpr,\n    isAssign\n  }),\n  incDec: new TokenType(\"++/--\", {\n    prefix,\n    postfix,\n    startsExpr\n  }),\n  bang: new TokenType(\"!\", {\n    beforeExpr,\n    prefix,\n    startsExpr\n  }),\n  tilde: new TokenType(\"~\", {\n    beforeExpr,\n    prefix,\n    startsExpr\n  }),\n  pipeline: createBinop(\"|>\", 0),\n  nullishCoalescing: createBinop(\"??\", 1),\n  logicalOR: createBinop(\"||\", 1),\n  logicalAND: createBinop(\"&&\", 2),\n  bitwiseOR: createBinop(\"|\", 3),\n  bitwiseXOR: createBinop(\"^\", 4),\n  bitwiseAND: createBinop(\"&\", 5),\n  equality: createBinop(\"==/!=/===/!==\", 6),\n  relational: createBinop(\"</>/<=/>=\", 7),\n  bitShift: createBinop(\"<</>>/>>>\", 8),\n  plusMin: new TokenType(\"+/-\", {\n    beforeExpr,\n    binop: 9,\n    prefix,\n    startsExpr\n  }),\n  modulo: new TokenType(\"%\", {\n    beforeExpr,\n    binop: 10,\n    startsExpr\n  }),\n  star: new TokenType(\"*\", {\n    binop: 10\n  }),\n  slash: createBinop(\"/\", 10),\n  exponent: new TokenType(\"**\", {\n    beforeExpr,\n    binop: 11,\n    rightAssociative: true\n  }),\n  _break: createKeyword(\"break\"),\n  _case: createKeyword(\"case\", {\n    beforeExpr\n  }),\n  _catch: createKeyword(\"catch\"),\n  _continue: createKeyword(\"continue\"),\n  _debugger: createKeyword(\"debugger\"),\n  _default: createKeyword(\"default\", {\n    beforeExpr\n  }),\n  _do: createKeyword(\"do\", {\n    isLoop,\n    beforeExpr\n  }),\n  _else: createKeyword(\"else\", {\n    beforeExpr\n  }),\n  _finally: createKeyword(\"finally\"),\n  _for: createKeyword(\"for\", {\n    isLoop\n  }),\n  _function: createKeyword(\"function\", {\n    startsExpr\n  }),\n  _if: createKeyword(\"if\"),\n  _return: createKeyword(\"return\", {\n    beforeExpr\n  }),\n  _switch: createKeyword(\"switch\"),\n  _throw: createKeyword(\"throw\", {\n    beforeExpr,\n    prefix,\n    startsExpr\n  }),\n  _try: createKeyword(\"try\"),\n  _var: createKeyword(\"var\"),\n  _const: createKeyword(\"const\"),\n  _while: createKeyword(\"while\", {\n    isLoop\n  }),\n  _with: createKeyword(\"with\"),\n  _new: createKeyword(\"new\", {\n    beforeExpr,\n    startsExpr\n  }),\n  _this: createKeyword(\"this\", {\n    startsExpr\n  }),\n  _super: createKeyword(\"super\", {\n    startsExpr\n  }),\n  _class: createKeyword(\"class\", {\n    startsExpr\n  }),\n  _extends: createKeyword(\"extends\", {\n    beforeExpr\n  }),\n  _export: createKeyword(\"export\"),\n  _import: createKeyword(\"import\", {\n    startsExpr\n  }),\n  _null: createKeyword(\"null\", {\n    startsExpr\n  }),\n  _true: createKeyword(\"true\", {\n    startsExpr\n  }),\n  _false: createKeyword(\"false\", {\n    startsExpr\n  }),\n  _in: createKeyword(\"in\", {\n    beforeExpr,\n    binop: 7\n  }),\n  _instanceof: createKeyword(\"instanceof\", {\n    beforeExpr,\n    binop: 7\n  }),\n  _typeof: createKeyword(\"typeof\", {\n    beforeExpr,\n    prefix,\n    startsExpr\n  }),\n  _void: createKeyword(\"void\", {\n    beforeExpr,\n    prefix,\n    startsExpr\n  }),\n  _delete: createKeyword(\"delete\", {\n    beforeExpr,\n    prefix,\n    startsExpr\n  })\n};\n\nconst lineBreak = /\\r\\n?|[\\n\\u2028\\u2029]/;\nconst lineBreakG = new RegExp(lineBreak.source, \"g\");\nfunction isNewLine(code) {\n  switch (code) {\n    case 10:\n    case 13:\n    case 8232:\n    case 8233:\n      return true;\n\n    default:\n      return false;\n  }\n}\nconst skipWhiteSpace = /(?:\\s|\\/\\/.*|\\/\\*[^]*?\\*\\/)*/g;\nfunction isWhitespace(code) {\n  switch (code) {\n    case 0x0009:\n    case 0x000b:\n    case 0x000c:\n    case 32:\n    case 160:\n    case 5760:\n    case 0x2000:\n    case 0x2001:\n    case 0x2002:\n    case 0x2003:\n    case 0x2004:\n    case 0x2005:\n    case 0x2006:\n    case 0x2007:\n    case 0x2008:\n    case 0x2009:\n    case 0x200a:\n    case 0x202f:\n    case 0x205f:\n    case 0x3000:\n    case 0xfeff:\n      return true;\n\n    default:\n      return false;\n  }\n}\n\nclass Position {\n  constructor(line, col) {\n    this.line = void 0;\n    this.column = void 0;\n    this.line = line;\n    this.column = col;\n  }\n\n}\nclass SourceLocation {\n  constructor(start, end) {\n    this.start = void 0;\n    this.end = void 0;\n    this.filename = void 0;\n    this.identifierName = void 0;\n    this.start = start;\n    this.end = end;\n  }\n\n}\nfunction getLineInfo(input, offset) {\n  let line = 1;\n  let lineStart = 0;\n  let match;\n  lineBreakG.lastIndex = 0;\n\n  while ((match = lineBreakG.exec(input)) && match.index < offset) {\n    line++;\n    lineStart = lineBreakG.lastIndex;\n  }\n\n  return new Position(line, offset - lineStart);\n}\n\nclass BaseParser {\n  constructor() {\n    this.sawUnambiguousESM = false;\n    this.ambiguousScriptDifferentAst = false;\n  }\n\n  hasPlugin(name) {\n    return this.plugins.has(name);\n  }\n\n  getPluginOption(plugin, name) {\n    if (this.hasPlugin(plugin)) return this.plugins.get(plugin)[name];\n  }\n\n}\n\nfunction last(stack) {\n  return stack[stack.length - 1];\n}\n\nclass CommentsParser extends BaseParser {\n  addComment(comment) {\n    if (this.filename) comment.loc.filename = this.filename;\n    this.state.trailingComments.push(comment);\n    this.state.leadingComments.push(comment);\n  }\n\n  adjustCommentsAfterTrailingComma(node, elements, takeAllComments) {\n    if (this.state.leadingComments.length === 0) {\n      return;\n    }\n\n    let lastElement = null;\n    let i = elements.length;\n\n    while (lastElement === null && i > 0) {\n      lastElement = elements[--i];\n    }\n\n    if (lastElement === null) {\n      return;\n    }\n\n    for (let j = 0; j < this.state.leadingComments.length; j++) {\n      if (this.state.leadingComments[j].end < this.state.commentPreviousNode.end) {\n        this.state.leadingComments.splice(j, 1);\n        j--;\n      }\n    }\n\n    const newTrailingComments = [];\n\n    for (let i = 0; i < this.state.leadingComments.length; i++) {\n      const leadingComment = this.state.leadingComments[i];\n\n      if (leadingComment.end < node.end) {\n        newTrailingComments.push(leadingComment);\n\n        if (!takeAllComments) {\n          this.state.leadingComments.splice(i, 1);\n          i--;\n        }\n      } else {\n        if (node.trailingComments === undefined) {\n          node.trailingComments = [];\n        }\n\n        node.trailingComments.push(leadingComment);\n      }\n    }\n\n    if (takeAllComments) this.state.leadingComments = [];\n\n    if (newTrailingComments.length > 0) {\n      lastElement.trailingComments = newTrailingComments;\n    } else if (lastElement.trailingComments !== undefined) {\n      lastElement.trailingComments = [];\n    }\n  }\n\n  processComment(node) {\n    if (node.type === \"Program\" && node.body.length > 0) return;\n    const stack = this.state.commentStack;\n    let firstChild, lastChild, trailingComments, i, j;\n\n    if (this.state.trailingComments.length > 0) {\n      if (this.state.trailingComments[0].start >= node.end) {\n        trailingComments = this.state.trailingComments;\n        this.state.trailingComments = [];\n      } else {\n        this.state.trailingComments.length = 0;\n      }\n    } else if (stack.length > 0) {\n      const lastInStack = last(stack);\n\n      if (lastInStack.trailingComments && lastInStack.trailingComments[0].start >= node.end) {\n        trailingComments = lastInStack.trailingComments;\n        delete lastInStack.trailingComments;\n      }\n    }\n\n    if (stack.length > 0 && last(stack).start >= node.start) {\n      firstChild = stack.pop();\n    }\n\n    while (stack.length > 0 && last(stack).start >= node.start) {\n      lastChild = stack.pop();\n    }\n\n    if (!lastChild && firstChild) lastChild = firstChild;\n\n    if (firstChild) {\n      switch (node.type) {\n        case \"ObjectExpression\":\n          this.adjustCommentsAfterTrailingComma(node, node.properties);\n          break;\n\n        case \"ObjectPattern\":\n          this.adjustCommentsAfterTrailingComma(node, node.properties, true);\n          break;\n\n        case \"CallExpression\":\n          this.adjustCommentsAfterTrailingComma(node, node.arguments);\n          break;\n\n        case \"ArrayExpression\":\n          this.adjustCommentsAfterTrailingComma(node, node.elements);\n          break;\n\n        case \"ArrayPattern\":\n          this.adjustCommentsAfterTrailingComma(node, node.elements, true);\n          break;\n      }\n    } else if (this.state.commentPreviousNode && (this.state.commentPreviousNode.type === \"ImportSpecifier\" && node.type !== \"ImportSpecifier\" || this.state.commentPreviousNode.type === \"ExportSpecifier\" && node.type !== \"ExportSpecifier\")) {\n      this.adjustCommentsAfterTrailingComma(node, [this.state.commentPreviousNode]);\n    }\n\n    if (lastChild) {\n      if (lastChild.leadingComments) {\n        if (lastChild !== node && lastChild.leadingComments.length > 0 && last(lastChild.leadingComments).end <= node.start) {\n          node.leadingComments = lastChild.leadingComments;\n          delete lastChild.leadingComments;\n        } else {\n          for (i = lastChild.leadingComments.length - 2; i >= 0; --i) {\n            if (lastChild.leadingComments[i].end <= node.start) {\n              node.leadingComments = lastChild.leadingComments.splice(0, i + 1);\n              break;\n            }\n          }\n        }\n      }\n    } else if (this.state.leadingComments.length > 0) {\n      if (last(this.state.leadingComments).end <= node.start) {\n        if (this.state.commentPreviousNode) {\n          for (j = 0; j < this.state.leadingComments.length; j++) {\n            if (this.state.leadingComments[j].end < this.state.commentPreviousNode.end) {\n              this.state.leadingComments.splice(j, 1);\n              j--;\n            }\n          }\n        }\n\n        if (this.state.leadingComments.length > 0) {\n          node.leadingComments = this.state.leadingComments;\n          this.state.leadingComments = [];\n        }\n      } else {\n        for (i = 0; i < this.state.leadingComments.length; i++) {\n          if (this.state.leadingComments[i].end > node.start) {\n            break;\n          }\n        }\n\n        const leadingComments = this.state.leadingComments.slice(0, i);\n\n        if (leadingComments.length) {\n          node.leadingComments = leadingComments;\n        }\n\n        trailingComments = this.state.leadingComments.slice(i);\n\n        if (trailingComments.length === 0) {\n          trailingComments = null;\n        }\n      }\n    }\n\n    this.state.commentPreviousNode = node;\n\n    if (trailingComments) {\n      if (trailingComments.length && trailingComments[0].start >= node.start && last(trailingComments).end <= node.end) {\n        node.innerComments = trailingComments;\n      } else {\n        const firstTrailingCommentIndex = trailingComments.findIndex(comment => comment.end >= node.end);\n\n        if (firstTrailingCommentIndex > 0) {\n          node.innerComments = trailingComments.slice(0, firstTrailingCommentIndex);\n          node.trailingComments = trailingComments.slice(firstTrailingCommentIndex);\n        } else {\n          node.trailingComments = trailingComments;\n        }\n      }\n    }\n\n    stack.push(node);\n  }\n\n}\n\nconst ErrorMessages = Object.freeze({\n  AccessorIsGenerator: \"A %0ter cannot be a generator\",\n  ArgumentsInClass: \"'arguments' is only allowed in functions and class methods\",\n  AsyncFunctionInSingleStatementContext: \"Async functions can only be declared at the top level or inside a block\",\n  AwaitBindingIdentifier: \"Can not use 'await' as identifier inside an async function\",\n  AwaitExpressionFormalParameter: \"await is not allowed in async function parameters\",\n  AwaitNotInAsyncContext: \"'await' is only allowed within async functions and at the top levels of modules\",\n  AwaitNotInAsyncFunction: \"'await' is only allowed within async functions\",\n  BadGetterArity: \"getter must not have any formal parameters\",\n  BadSetterArity: \"setter must have exactly one formal parameter\",\n  BadSetterRestParameter: \"setter function argument must not be a rest parameter\",\n  ConstructorClassField: \"Classes may not have a field named 'constructor'\",\n  ConstructorClassPrivateField: \"Classes may not have a private field named '#constructor'\",\n  ConstructorIsAccessor: \"Class constructor may not be an accessor\",\n  ConstructorIsAsync: \"Constructor can't be an async function\",\n  ConstructorIsGenerator: \"Constructor can't be a generator\",\n  DeclarationMissingInitializer: \"%0 require an initialization value\",\n  DecoratorBeforeExport: \"Decorators must be placed *before* the 'export' keyword. You can set the 'decoratorsBeforeExport' option to false to use the 'export @decorator class {}' syntax\",\n  DecoratorConstructor: \"Decorators can't be used with a constructor. Did you mean '@dec class { ... }'?\",\n  DecoratorExportClass: \"Using the export keyword between a decorator and a class is not allowed. Please use `export @dec class` instead.\",\n  DecoratorSemicolon: \"Decorators must not be followed by a semicolon\",\n  DecoratorStaticBlock: \"Decorators can't be used with a static block\",\n  DeletePrivateField: \"Deleting a private field is not allowed\",\n  DestructureNamedImport: \"ES2015 named imports do not destructure. Use another statement for destructuring after the import.\",\n  DuplicateConstructor: \"Duplicate constructor in the same class\",\n  DuplicateDefaultExport: \"Only one default export allowed per module.\",\n  DuplicateExport: \"`%0` has already been exported. Exported identifiers must be unique.\",\n  DuplicateProto: \"Redefinition of __proto__ property\",\n  DuplicateRegExpFlags: \"Duplicate regular expression flag\",\n  DuplicateStaticBlock: \"Duplicate static block in the same class\",\n  ElementAfterRest: \"Rest element must be last element\",\n  EscapedCharNotAnIdentifier: \"Invalid Unicode escape\",\n  ExportBindingIsString: \"A string literal cannot be used as an exported binding without `from`.\\n- Did you mean `export { '%0' as '%1' } from 'some-module'`?\",\n  ExportDefaultFromAsIdentifier: \"'from' is not allowed as an identifier after 'export default'\",\n  ForInOfLoopInitializer: \"%0 loop variable declaration may not have an initializer\",\n  GeneratorInSingleStatementContext: \"Generators can only be declared at the top level or inside a block\",\n  IllegalBreakContinue: \"Unsyntactic %0\",\n  IllegalLanguageModeDirective: \"Illegal 'use strict' directive in function with non-simple parameter list\",\n  IllegalReturn: \"'return' outside of function\",\n  ImportBindingIsString: 'A string literal cannot be used as an imported binding.\\n- Did you mean `import { \"%0\" as foo }`?',\n  ImportCallArgumentTrailingComma: \"Trailing comma is disallowed inside import(...) arguments\",\n  ImportCallArity: \"import() requires exactly %0\",\n  ImportCallNotNewExpression: \"Cannot use new with import(...)\",\n  ImportCallSpreadArgument: \"... is not allowed in import()\",\n  ImportMetaOutsideModule: `import.meta may appear only with 'sourceType: \"module\"'`,\n  ImportOutsideModule: `'import' and 'export' may appear only with 'sourceType: \"module\"'`,\n  InvalidBigIntLiteral: \"Invalid BigIntLiteral\",\n  InvalidCodePoint: \"Code point out of bounds\",\n  InvalidDecimal: \"Invalid decimal\",\n  InvalidDigit: \"Expected number in radix %0\",\n  InvalidEscapeSequence: \"Bad character escape sequence\",\n  InvalidEscapeSequenceTemplate: \"Invalid escape sequence in template\",\n  InvalidEscapedReservedWord: \"Escape sequence in keyword %0\",\n  InvalidIdentifier: \"Invalid identifier %0\",\n  InvalidLhs: \"Invalid left-hand side in %0\",\n  InvalidLhsBinding: \"Binding invalid left-hand side in %0\",\n  InvalidNumber: \"Invalid number\",\n  InvalidOrMissingExponent: \"Floating-point numbers require a valid exponent after the 'e'\",\n  InvalidOrUnexpectedToken: \"Unexpected character '%0'\",\n  InvalidParenthesizedAssignment: \"Invalid parenthesized assignment pattern\",\n  InvalidPrivateFieldResolution: \"Private name #%0 is not defined\",\n  InvalidPropertyBindingPattern: \"Binding member expression\",\n  InvalidRecordProperty: \"Only properties and spread elements are allowed in record definitions\",\n  InvalidRestAssignmentPattern: \"Invalid rest operator's argument\",\n  LabelRedeclaration: \"Label '%0' is already declared\",\n  LetInLexicalBinding: \"'let' is not allowed to be used as a name in 'let' or 'const' declarations.\",\n  LineTerminatorBeforeArrow: \"No line break is allowed before '=>'\",\n  MalformedRegExpFlags: \"Invalid regular expression flag\",\n  MissingClassName: \"A class name is required\",\n  MissingEqInAssignment: \"Only '=' operator can be used for specifying default value.\",\n  MissingUnicodeEscape: \"Expecting Unicode escape sequence \\\\uXXXX\",\n  MixingCoalesceWithLogical: \"Nullish coalescing operator(??) requires parens when mixing with logical operators\",\n  ModuleAttributeDifferentFromType: \"The only accepted module attribute is `type`\",\n  ModuleAttributeInvalidValue: \"Only string literals are allowed as module attribute values\",\n  ModuleAttributesWithDuplicateKeys: 'Duplicate key \"%0\" is not allowed in module attributes',\n  ModuleExportNameHasLoneSurrogate: \"An export name cannot include a lone surrogate, found '\\\\u%0'\",\n  ModuleExportUndefined: \"Export '%0' is not defined\",\n  MultipleDefaultsInSwitch: \"Multiple default clauses\",\n  NewlineAfterThrow: \"Illegal newline after throw\",\n  NoCatchOrFinally: \"Missing catch or finally clause\",\n  NumberIdentifier: \"Identifier directly after number\",\n  NumericSeparatorInEscapeSequence: \"Numeric separators are not allowed inside unicode escape sequences or hex escape sequences\",\n  ObsoleteAwaitStar: \"await* has been removed from the async functions proposal. Use Promise.all() instead.\",\n  OptionalChainingNoNew: \"constructors in/after an Optional Chain are not allowed\",\n  OptionalChainingNoTemplate: \"Tagged Template Literals are not allowed in optionalChain\",\n  ParamDupe: \"Argument name clash\",\n  PatternHasAccessor: \"Object pattern can't contain getter or setter\",\n  PatternHasMethod: \"Object pattern can't contain methods\",\n  PipelineBodyNoArrow: 'Unexpected arrow \"=>\" after pipeline body; arrow function in pipeline body must be parenthesized',\n  PipelineBodySequenceExpression: \"Pipeline body may not be a comma-separated sequence expression\",\n  PipelineHeadSequenceExpression: \"Pipeline head should not be a comma-separated sequence expression\",\n  PipelineTopicUnused: \"Pipeline is in topic style but does not use topic reference\",\n  PrimaryTopicNotAllowed: \"Topic reference was used in a lexical context without topic binding\",\n  PrimaryTopicRequiresSmartPipeline: \"Primary Topic Reference found but pipelineOperator not passed 'smart' for 'proposal' option.\",\n  PrivateInExpectedIn: \"Private names are only allowed in property accesses (`obj.#%0`) or in `in` expressions (`#%0 in obj`)\",\n  PrivateNameRedeclaration: \"Duplicate private name #%0\",\n  RecordExpressionBarIncorrectEndSyntaxType: \"Record expressions ending with '|}' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'\",\n  RecordExpressionBarIncorrectStartSyntaxType: \"Record expressions starting with '{|' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'\",\n  RecordExpressionHashIncorrectStartSyntaxType: \"Record expressions starting with '#{' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'hash'\",\n  RecordNoProto: \"'__proto__' is not allowed in Record expressions\",\n  RestTrailingComma: \"Unexpected trailing comma after rest element\",\n  SloppyFunction: \"In non-strict mode code, functions can only be declared at top level, inside a block, or as the body of an if statement\",\n  StaticPrototype: \"Classes may not have static property named prototype\",\n  StrictDelete: \"Deleting local variable in strict mode\",\n  StrictEvalArguments: \"Assigning to '%0' in strict mode\",\n  StrictEvalArgumentsBinding: \"Binding '%0' in strict mode\",\n  StrictFunction: \"In strict mode code, functions can only be declared at top level or inside a block\",\n  StrictNumericEscape: \"The only valid numeric escape in strict mode is '\\\\0'\",\n  StrictOctalLiteral: \"Legacy octal literals are not allowed in strict mode\",\n  StrictWith: \"'with' in strict mode\",\n  SuperNotAllowed: \"super() is only valid inside a class constructor of a subclass. Maybe a typo in the method name ('constructor') or not extending another class?\",\n  SuperPrivateField: \"Private fields can't be accessed on super\",\n  TrailingDecorator: \"Decorators must be attached to a class element\",\n  TupleExpressionBarIncorrectEndSyntaxType: \"Tuple expressions ending with '|]' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'\",\n  TupleExpressionBarIncorrectStartSyntaxType: \"Tuple expressions starting with '[|' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'\",\n  TupleExpressionHashIncorrectStartSyntaxType: \"Tuple expressions starting with '#[' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'hash'\",\n  UnexpectedArgumentPlaceholder: \"Unexpected argument placeholder\",\n  UnexpectedAwaitAfterPipelineBody: 'Unexpected \"await\" after pipeline body; await must have parentheses in minimal proposal',\n  UnexpectedDigitAfterHash: \"Unexpected digit after hash token\",\n  UnexpectedImportExport: \"'import' and 'export' may only appear at the top level\",\n  UnexpectedKeyword: \"Unexpected keyword '%0'\",\n  UnexpectedLeadingDecorator: \"Leading decorators must be attached to a class declaration\",\n  UnexpectedLexicalDeclaration: \"Lexical declaration cannot appear in a single-statement context\",\n  UnexpectedNewTarget: \"new.target can only be used in functions\",\n  UnexpectedNumericSeparator: \"A numeric separator is only allowed between two digits\",\n  UnexpectedPrivateField: \"Private names can only be used as the name of a class element (i.e. class C { #p = 42; #m() {} } )\\n or a property of member expression (i.e. this.#p).\",\n  UnexpectedReservedWord: \"Unexpected reserved word '%0'\",\n  UnexpectedSuper: \"super is only allowed in object methods and classes\",\n  UnexpectedToken: \"Unexpected token '%0'\",\n  UnexpectedTokenUnaryExponentiation: \"Illegal expression. Wrap left hand side or entire exponentiation in parentheses.\",\n  UnsupportedBind: \"Binding should be performed on object property.\",\n  UnsupportedDecoratorExport: \"A decorated export must export a class declaration\",\n  UnsupportedDefaultExport: \"Only expressions, functions or classes are allowed as the `default` export.\",\n  UnsupportedImport: \"import can only be used in import() or import.meta\",\n  UnsupportedMetaProperty: \"The only valid meta property for %0 is %0.%1\",\n  UnsupportedParameterDecorator: \"Decorators cannot be used to decorate parameters\",\n  UnsupportedPropertyDecorator: \"Decorators cannot be used to decorate object literal properties\",\n  UnsupportedSuper: \"super can only be used with function calls (i.e. super()) or in property accesses (i.e. super.prop or super[prop])\",\n  UnterminatedComment: \"Unterminated comment\",\n  UnterminatedRegExp: \"Unterminated regular expression\",\n  UnterminatedString: \"Unterminated string constant\",\n  UnterminatedTemplate: \"Unterminated template\",\n  VarRedeclaration: \"Identifier '%0' has already been declared\",\n  YieldBindingIdentifier: \"Can not use 'yield' as identifier inside a generator\",\n  YieldInParameter: \"Yield expression is not allowed in formal parameters\",\n  ZeroDigitNumericSeparator: \"Numeric separator can not be used after leading 0\"\n});\n\nclass ParserError extends CommentsParser {\n  getLocationForPosition(pos) {\n    let loc;\n    if (pos === this.state.start) loc = this.state.startLoc;else if (pos === this.state.lastTokStart) loc = this.state.lastTokStartLoc;else if (pos === this.state.end) loc = this.state.endLoc;else if (pos === this.state.lastTokEnd) loc = this.state.lastTokEndLoc;else loc = getLineInfo(this.input, pos);\n    return loc;\n  }\n\n  raise(pos, errorTemplate, ...params) {\n    return this.raiseWithData(pos, undefined, errorTemplate, ...params);\n  }\n\n  raiseWithData(pos, data, errorTemplate, ...params) {\n    const loc = this.getLocationForPosition(pos);\n    const message = errorTemplate.replace(/%(\\d+)/g, (_, i) => params[i]) + ` (${loc.line}:${loc.column})`;\n    return this._raise(Object.assign({\n      loc,\n      pos\n    }, data), message);\n  }\n\n  _raise(errorContext, message) {\n    const err = new SyntaxError(message);\n    Object.assign(err, errorContext);\n\n    if (this.options.errorRecovery) {\n      if (!this.isLookahead) this.state.errors.push(err);\n      return err;\n    } else {\n      throw err;\n    }\n  }\n\n}\n\nvar estree = (superClass => class extends superClass {\n  estreeParseRegExpLiteral({\n    pattern,\n    flags\n  }) {\n    let regex = null;\n\n    try {\n      regex = new RegExp(pattern, flags);\n    } catch (e) {}\n\n    const node = this.estreeParseLiteral(regex);\n    node.regex = {\n      pattern,\n      flags\n    };\n    return node;\n  }\n\n  estreeParseBigIntLiteral(value) {\n    let bigInt;\n\n    try {\n      bigInt = BigInt(value);\n    } catch (_unused) {\n      bigInt = null;\n    }\n\n    const node = this.estreeParseLiteral(bigInt);\n    node.bigint = String(node.value || value);\n    return node;\n  }\n\n  estreeParseDecimalLiteral(value) {\n    const decimal = null;\n    const node = this.estreeParseLiteral(decimal);\n    node.decimal = String(node.value || value);\n    return node;\n  }\n\n  estreeParseLiteral(value) {\n    return this.parseLiteral(value, \"Literal\");\n  }\n\n  directiveToStmt(directive) {\n    const directiveLiteral = directive.value;\n    const stmt = this.startNodeAt(directive.start, directive.loc.start);\n    const expression = this.startNodeAt(directiveLiteral.start, directiveLiteral.loc.start);\n    expression.value = directiveLiteral.extra.expressionValue;\n    expression.raw = directiveLiteral.extra.raw;\n    stmt.expression = this.finishNodeAt(expression, \"Literal\", directiveLiteral.end, directiveLiteral.loc.end);\n    stmt.directive = directiveLiteral.extra.raw.slice(1, -1);\n    return this.finishNodeAt(stmt, \"ExpressionStatement\", directive.end, directive.loc.end);\n  }\n\n  initFunction(node, isAsync) {\n    super.initFunction(node, isAsync);\n    node.expression = false;\n  }\n\n  checkDeclaration(node) {\n    if (node != null && this.isObjectProperty(node)) {\n      this.checkDeclaration(node.value);\n    } else {\n      super.checkDeclaration(node);\n    }\n  }\n\n  getObjectOrClassMethodParams(method) {\n    return method.value.params;\n  }\n\n  isValidDirective(stmt) {\n    var _stmt$expression$extr;\n\n    return stmt.type === \"ExpressionStatement\" && stmt.expression.type === \"Literal\" && typeof stmt.expression.value === \"string\" && !((_stmt$expression$extr = stmt.expression.extra) == null ? void 0 : _stmt$expression$extr.parenthesized);\n  }\n\n  stmtToDirective(stmt) {\n    const directive = super.stmtToDirective(stmt);\n    const value = stmt.expression.value;\n    this.addExtra(directive.value, \"expressionValue\", value);\n    return directive;\n  }\n\n  parseBlockBody(node, ...args) {\n    super.parseBlockBody(node, ...args);\n    const directiveStatements = node.directives.map(d => this.directiveToStmt(d));\n    node.body = directiveStatements.concat(node.body);\n    delete node.directives;\n  }\n\n  pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper) {\n    this.parseMethod(method, isGenerator, isAsync, isConstructor, allowsDirectSuper, \"ClassMethod\", true);\n\n    if (method.typeParameters) {\n      method.value.typeParameters = method.typeParameters;\n      delete method.typeParameters;\n    }\n\n    classBody.body.push(method);\n  }\n\n  parseExprAtom(refExpressionErrors) {\n    switch (this.state.type) {\n      case types.num:\n      case types.string:\n        return this.estreeParseLiteral(this.state.value);\n\n      case types.regexp:\n        return this.estreeParseRegExpLiteral(this.state.value);\n\n      case types.bigint:\n        return this.estreeParseBigIntLiteral(this.state.value);\n\n      case types.decimal:\n        return this.estreeParseDecimalLiteral(this.state.value);\n\n      case types._null:\n        return this.estreeParseLiteral(null);\n\n      case types._true:\n        return this.estreeParseLiteral(true);\n\n      case types._false:\n        return this.estreeParseLiteral(false);\n\n      default:\n        return super.parseExprAtom(refExpressionErrors);\n    }\n  }\n\n  parseLiteral(value, type, startPos, startLoc) {\n    const node = super.parseLiteral(value, type, startPos, startLoc);\n    node.raw = node.extra.raw;\n    delete node.extra;\n    return node;\n  }\n\n  parseFunctionBody(node, allowExpression, isMethod = false) {\n    super.parseFunctionBody(node, allowExpression, isMethod);\n    node.expression = node.body.type !== \"BlockStatement\";\n  }\n\n  parseMethod(node, isGenerator, isAsync, isConstructor, allowDirectSuper, type, inClassScope = false) {\n    let funcNode = this.startNode();\n    funcNode.kind = node.kind;\n    funcNode = super.parseMethod(funcNode, isGenerator, isAsync, isConstructor, allowDirectSuper, type, inClassScope);\n    funcNode.type = \"FunctionExpression\";\n    delete funcNode.kind;\n    node.value = funcNode;\n    type = type === \"ClassMethod\" ? \"MethodDefinition\" : type;\n    return this.finishNode(node, type);\n  }\n\n  parseObjectMethod(prop, isGenerator, isAsync, isPattern, isAccessor) {\n    const node = super.parseObjectMethod(prop, isGenerator, isAsync, isPattern, isAccessor);\n\n    if (node) {\n      node.type = \"Property\";\n      if (node.kind === \"method\") node.kind = \"init\";\n      node.shorthand = false;\n    }\n\n    return node;\n  }\n\n  parseObjectProperty(prop, startPos, startLoc, isPattern, refExpressionErrors) {\n    const node = super.parseObjectProperty(prop, startPos, startLoc, isPattern, refExpressionErrors);\n\n    if (node) {\n      node.kind = \"init\";\n      node.type = \"Property\";\n    }\n\n    return node;\n  }\n\n  toAssignable(node, isLHS = false) {\n    if (node != null && this.isObjectProperty(node)) {\n      this.toAssignable(node.value, isLHS);\n      return node;\n    }\n\n    return super.toAssignable(node, isLHS);\n  }\n\n  toAssignableObjectExpressionProp(prop, ...args) {\n    if (prop.kind === \"get\" || prop.kind === \"set\") {\n      this.raise(prop.key.start, ErrorMessages.PatternHasAccessor);\n    } else if (prop.method) {\n      this.raise(prop.key.start, ErrorMessages.PatternHasMethod);\n    } else {\n      super.toAssignableObjectExpressionProp(prop, ...args);\n    }\n  }\n\n  finishCallExpression(node, optional) {\n    super.finishCallExpression(node, optional);\n\n    if (node.callee.type === \"Import\") {\n      node.type = \"ImportExpression\";\n      node.source = node.arguments[0];\n      delete node.arguments;\n      delete node.callee;\n    }\n\n    return node;\n  }\n\n  toReferencedArguments(node) {\n    if (node.type === \"ImportExpression\") {\n      return;\n    }\n\n    super.toReferencedArguments(node);\n  }\n\n  parseExport(node) {\n    super.parseExport(node);\n\n    switch (node.type) {\n      case \"ExportAllDeclaration\":\n        node.exported = null;\n        break;\n\n      case \"ExportNamedDeclaration\":\n        if (node.specifiers.length === 1 && node.specifiers[0].type === \"ExportNamespaceSpecifier\") {\n          node.type = \"ExportAllDeclaration\";\n          node.exported = node.specifiers[0].exported;\n          delete node.specifiers;\n        }\n\n        break;\n    }\n\n    return node;\n  }\n\n  parseSubscript(base, startPos, startLoc, noCalls, state) {\n    const node = super.parseSubscript(base, startPos, startLoc, noCalls, state);\n\n    if (state.optionalChainMember) {\n      if (node.type === \"OptionalMemberExpression\" || node.type === \"OptionalCallExpression\") {\n        node.type = node.type.substring(8);\n      }\n\n      if (state.stop) {\n        const chain = this.startNodeAtNode(node);\n        chain.expression = node;\n        return this.finishNode(chain, \"ChainExpression\");\n      }\n    } else if (node.type === \"MemberExpression\" || node.type === \"CallExpression\") {\n      node.optional = false;\n    }\n\n    return node;\n  }\n\n  hasPropertyAsPrivateName(node) {\n    if (node.type === \"ChainExpression\") {\n      node = node.expression;\n    }\n\n    return super.hasPropertyAsPrivateName(node);\n  }\n\n  isOptionalChain(node) {\n    return node.type === \"ChainExpression\";\n  }\n\n  isObjectProperty(node) {\n    return node.type === \"Property\" && node.kind === \"init\" && !node.method;\n  }\n\n  isObjectMethod(node) {\n    return node.method || node.kind === \"get\" || node.kind === \"set\";\n  }\n\n});\n\nclass TokContext {\n  constructor(token, isExpr, preserveSpace, override) {\n    this.token = void 0;\n    this.isExpr = void 0;\n    this.preserveSpace = void 0;\n    this.override = void 0;\n    this.token = token;\n    this.isExpr = !!isExpr;\n    this.preserveSpace = !!preserveSpace;\n    this.override = override;\n  }\n\n}\nconst types$1 = {\n  braceStatement: new TokContext(\"{\", false),\n  braceExpression: new TokContext(\"{\", true),\n  recordExpression: new TokContext(\"#{\", true),\n  templateQuasi: new TokContext(\"${\", false),\n  parenStatement: new TokContext(\"(\", false),\n  parenExpression: new TokContext(\"(\", true),\n  template: new TokContext(\"`\", true, true, p => p.readTmplToken()),\n  functionExpression: new TokContext(\"function\", true),\n  functionStatement: new TokContext(\"function\", false)\n};\n\ntypes.parenR.updateContext = types.braceR.updateContext = function () {\n  if (this.state.context.length === 1) {\n    this.state.exprAllowed = true;\n    return;\n  }\n\n  let out = this.state.context.pop();\n\n  if (out === types$1.braceStatement && this.curContext().token === \"function\") {\n    out = this.state.context.pop();\n  }\n\n  this.state.exprAllowed = !out.isExpr;\n};\n\ntypes.name.updateContext = function (prevType) {\n  let allowed = false;\n\n  if (prevType !== types.dot) {\n    if (this.state.value === \"of\" && !this.state.exprAllowed && prevType !== types._function && prevType !== types._class) {\n      allowed = true;\n    }\n  }\n\n  this.state.exprAllowed = allowed;\n\n  if (this.state.isIterator) {\n    this.state.isIterator = false;\n  }\n};\n\ntypes.braceL.updateContext = function (prevType) {\n  this.state.context.push(this.braceIsBlock(prevType) ? types$1.braceStatement : types$1.braceExpression);\n  this.state.exprAllowed = true;\n};\n\ntypes.dollarBraceL.updateContext = function () {\n  this.state.context.push(types$1.templateQuasi);\n  this.state.exprAllowed = true;\n};\n\ntypes.parenL.updateContext = function (prevType) {\n  const statementParens = prevType === types._if || prevType === types._for || prevType === types._with || prevType === types._while;\n  this.state.context.push(statementParens ? types$1.parenStatement : types$1.parenExpression);\n  this.state.exprAllowed = true;\n};\n\ntypes.incDec.updateContext = function () {};\n\ntypes._function.updateContext = types._class.updateContext = function (prevType) {\n  if (prevType.beforeExpr && prevType !== types.semi && prevType !== types._else && !(prevType === types._return && this.hasPrecedingLineBreak()) && !((prevType === types.colon || prevType === types.braceL) && this.curContext() === types$1.b_stat)) {\n    this.state.context.push(types$1.functionExpression);\n  } else {\n    this.state.context.push(types$1.functionStatement);\n  }\n\n  this.state.exprAllowed = false;\n};\n\ntypes.backQuote.updateContext = function () {\n  if (this.curContext() === types$1.template) {\n    this.state.context.pop();\n  } else {\n    this.state.context.push(types$1.template);\n  }\n\n  this.state.exprAllowed = false;\n};\n\ntypes.braceHashL.updateContext = function () {\n  this.state.context.push(types$1.recordExpression);\n  this.state.exprAllowed = true;\n};\n\nlet nonASCIIidentifierStartChars = \"\\xaa\\xb5\\xba\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02c1\\u02c6-\\u02d1\\u02e0-\\u02e4\\u02ec\\u02ee\\u0370-\\u0374\\u0376\\u0377\\u037a-\\u037d\\u037f\\u0386\\u0388-\\u038a\\u038c\\u038e-\\u03a1\\u03a3-\\u03f5\\u03f7-\\u0481\\u048a-\\u052f\\u0531-\\u0556\\u0559\\u0560-\\u0588\\u05d0-\\u05ea\\u05ef-\\u05f2\\u0620-\\u064a\\u066e\\u066f\\u0671-\\u06d3\\u06d5\\u06e5\\u06e6\\u06ee\\u06ef\\u06fa-\\u06fc\\u06ff\\u0710\\u0712-\\u072f\\u074d-\\u07a5\\u07b1\\u07ca-\\u07ea\\u07f4\\u07f5\\u07fa\\u0800-\\u0815\\u081a\\u0824\\u0828\\u0840-\\u0858\\u0860-\\u086a\\u08a0-\\u08b4\\u08b6-\\u08c7\\u0904-\\u0939\\u093d\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098c\\u098f\\u0990\\u0993-\\u09a8\\u09aa-\\u09b0\\u09b2\\u09b6-\\u09b9\\u09bd\\u09ce\\u09dc\\u09dd\\u09df-\\u09e1\\u09f0\\u09f1\\u09fc\\u0a05-\\u0a0a\\u0a0f\\u0a10\\u0a13-\\u0a28\\u0a2a-\\u0a30\\u0a32\\u0a33\\u0a35\\u0a36\\u0a38\\u0a39\\u0a59-\\u0a5c\\u0a5e\\u0a72-\\u0a74\\u0a85-\\u0a8d\\u0a8f-\\u0a91\\u0a93-\\u0aa8\\u0aaa-\\u0ab0\\u0ab2\\u0ab3\\u0ab5-\\u0ab9\\u0abd\\u0ad0\\u0ae0\\u0ae1\\u0af9\\u0b05-\\u0b0c\\u0b0f\\u0b10\\u0b13-\\u0b28\\u0b2a-\\u0b30\\u0b32\\u0b33\\u0b35-\\u0b39\\u0b3d\\u0b5c\\u0b5d\\u0b5f-\\u0b61\\u0b71\\u0b83\\u0b85-\\u0b8a\\u0b8e-\\u0b90\\u0b92-\\u0b95\\u0b99\\u0b9a\\u0b9c\\u0b9e\\u0b9f\\u0ba3\\u0ba4\\u0ba8-\\u0baa\\u0bae-\\u0bb9\\u0bd0\\u0c05-\\u0c0c\\u0c0e-\\u0c10\\u0c12-\\u0c28\\u0c2a-\\u0c39\\u0c3d\\u0c58-\\u0c5a\\u0c60\\u0c61\\u0c80\\u0c85-\\u0c8c\\u0c8e-\\u0c90\\u0c92-\\u0ca8\\u0caa-\\u0cb3\\u0cb5-\\u0cb9\\u0cbd\\u0cde\\u0ce0\\u0ce1\\u0cf1\\u0cf2\\u0d04-\\u0d0c\\u0d0e-\\u0d10\\u0d12-\\u0d3a\\u0d3d\\u0d4e\\u0d54-\\u0d56\\u0d5f-\\u0d61\\u0d7a-\\u0d7f\\u0d85-\\u0d96\\u0d9a-\\u0db1\\u0db3-\\u0dbb\\u0dbd\\u0dc0-\\u0dc6\\u0e01-\\u0e30\\u0e32\\u0e33\\u0e40-\\u0e46\\u0e81\\u0e82\\u0e84\\u0e86-\\u0e8a\\u0e8c-\\u0ea3\\u0ea5\\u0ea7-\\u0eb0\\u0eb2\\u0eb3\\u0ebd\\u0ec0-\\u0ec4\\u0ec6\\u0edc-\\u0edf\\u0f00\\u0f40-\\u0f47\\u0f49-\\u0f6c\\u0f88-\\u0f8c\\u1000-\\u102a\\u103f\\u1050-\\u1055\\u105a-\\u105d\\u1061\\u1065\\u1066\\u106e-\\u1070\\u1075-\\u1081\\u108e\\u10a0-\\u10c5\\u10c7\\u10cd\\u10d0-\\u10fa\\u10fc-\\u1248\\u124a-\\u124d\\u1250-\\u1256\\u1258\\u125a-\\u125d\\u1260-\\u1288\\u128a-\\u128d\\u1290-\\u12b0\\u12b2-\\u12b5\\u12b8-\\u12be\\u12c0\\u12c2-\\u12c5\\u12c8-\\u12d6\\u12d8-\\u1310\\u1312-\\u1315\\u1318-\\u135a\\u1380-\\u138f\\u13a0-\\u13f5\\u13f8-\\u13fd\\u1401-\\u166c\\u166f-\\u167f\\u1681-\\u169a\\u16a0-\\u16ea\\u16ee-\\u16f8\\u1700-\\u170c\\u170e-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176c\\u176e-\\u1770\\u1780-\\u17b3\\u17d7\\u17dc\\u1820-\\u1878\\u1880-\\u18a8\\u18aa\\u18b0-\\u18f5\\u1900-\\u191e\\u1950-\\u196d\\u1970-\\u1974\\u1980-\\u19ab\\u19b0-\\u19c9\\u1a00-\\u1a16\\u1a20-\\u1a54\\u1aa7\\u1b05-\\u1b33\\u1b45-\\u1b4b\\u1b83-\\u1ba0\\u1bae\\u1baf\\u1bba-\\u1be5\\u1c00-\\u1c23\\u1c4d-\\u1c4f\\u1c5a-\\u1c7d\\u1c80-\\u1c88\\u1c90-\\u1cba\\u1cbd-\\u1cbf\\u1ce9-\\u1cec\\u1cee-\\u1cf3\\u1cf5\\u1cf6\\u1cfa\\u1d00-\\u1dbf\\u1e00-\\u1f15\\u1f18-\\u1f1d\\u1f20-\\u1f45\\u1f48-\\u1f4d\\u1f50-\\u1f57\\u1f59\\u1f5b\\u1f5d\\u1f5f-\\u1f7d\\u1f80-\\u1fb4\\u1fb6-\\u1fbc\\u1fbe\\u1fc2-\\u1fc4\\u1fc6-\\u1fcc\\u1fd0-\\u1fd3\\u1fd6-\\u1fdb\\u1fe0-\\u1fec\\u1ff2-\\u1ff4\\u1ff6-\\u1ffc\\u2071\\u207f\\u2090-\\u209c\\u2102\\u2107\\u210a-\\u2113\\u2115\\u2118-\\u211d\\u2124\\u2126\\u2128\\u212a-\\u2139\\u213c-\\u213f\\u2145-\\u2149\\u214e\\u2160-\\u2188\\u2c00-\\u2c2e\\u2c30-\\u2c5e\\u2c60-\\u2ce4\\u2ceb-\\u2cee\\u2cf2\\u2cf3\\u2d00-\\u2d25\\u2d27\\u2d2d\\u2d30-\\u2d67\\u2d6f\\u2d80-\\u2d96\\u2da0-\\u2da6\\u2da8-\\u2dae\\u2db0-\\u2db6\\u2db8-\\u2dbe\\u2dc0-\\u2dc6\\u2dc8-\\u2dce\\u2dd0-\\u2dd6\\u2dd8-\\u2dde\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303c\\u3041-\\u3096\\u309b-\\u309f\\u30a1-\\u30fa\\u30fc-\\u30ff\\u3105-\\u312f\\u3131-\\u318e\\u31a0-\\u31bf\\u31f0-\\u31ff\\u3400-\\u4dbf\\u4e00-\\u9ffc\\ua000-\\ua48c\\ua4d0-\\ua4fd\\ua500-\\ua60c\\ua610-\\ua61f\\ua62a\\ua62b\\ua640-\\ua66e\\ua67f-\\ua69d\\ua6a0-\\ua6ef\\ua717-\\ua71f\\ua722-\\ua788\\ua78b-\\ua7bf\\ua7c2-\\ua7ca\\ua7f5-\\ua801\\ua803-\\ua805\\ua807-\\ua80a\\ua80c-\\ua822\\ua840-\\ua873\\ua882-\\ua8b3\\ua8f2-\\ua8f7\\ua8fb\\ua8fd\\ua8fe\\ua90a-\\ua925\\ua930-\\ua946\\ua960-\\ua97c\\ua984-\\ua9b2\\ua9cf\\ua9e0-\\ua9e4\\ua9e6-\\ua9ef\\ua9fa-\\ua9fe\\uaa00-\\uaa28\\uaa40-\\uaa42\\uaa44-\\uaa4b\\uaa60-\\uaa76\\uaa7a\\uaa7e-\\uaaaf\\uaab1\\uaab5\\uaab6\\uaab9-\\uaabd\\uaac0\\uaac2\\uaadb-\\uaadd\\uaae0-\\uaaea\\uaaf2-\\uaaf4\\uab01-\\uab06\\uab09-\\uab0e\\uab11-\\uab16\\uab20-\\uab26\\uab28-\\uab2e\\uab30-\\uab5a\\uab5c-\\uab69\\uab70-\\uabe2\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\uf900-\\ufa6d\\ufa70-\\ufad9\\ufb00-\\ufb06\\ufb13-\\ufb17\\ufb1d\\ufb1f-\\ufb28\\ufb2a-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40\\ufb41\\ufb43\\ufb44\\ufb46-\\ufbb1\\ufbd3-\\ufd3d\\ufd50-\\ufd8f\\ufd92-\\ufdc7\\ufdf0-\\ufdfb\\ufe70-\\ufe74\\ufe76-\\ufefc\\uff21-\\uff3a\\uff41-\\uff5a\\uff66-\\uffbe\\uffc2-\\uffc7\\uffca-\\uffcf\\uffd2-\\uffd7\\uffda-\\uffdc\";\nlet nonASCIIidentifierChars = \"\\u200c\\u200d\\xb7\\u0300-\\u036f\\u0387\\u0483-\\u0487\\u0591-\\u05bd\\u05bf\\u05c1\\u05c2\\u05c4\\u05c5\\u05c7\\u0610-\\u061a\\u064b-\\u0669\\u0670\\u06d6-\\u06dc\\u06df-\\u06e4\\u06e7\\u06e8\\u06ea-\\u06ed\\u06f0-\\u06f9\\u0711\\u0730-\\u074a\\u07a6-\\u07b0\\u07c0-\\u07c9\\u07eb-\\u07f3\\u07fd\\u0816-\\u0819\\u081b-\\u0823\\u0825-\\u0827\\u0829-\\u082d\\u0859-\\u085b\\u08d3-\\u08e1\\u08e3-\\u0903\\u093a-\\u093c\\u093e-\\u094f\\u0951-\\u0957\\u0962\\u0963\\u0966-\\u096f\\u0981-\\u0983\\u09bc\\u09be-\\u09c4\\u09c7\\u09c8\\u09cb-\\u09cd\\u09d7\\u09e2\\u09e3\\u09e6-\\u09ef\\u09fe\\u0a01-\\u0a03\\u0a3c\\u0a3e-\\u0a42\\u0a47\\u0a48\\u0a4b-\\u0a4d\\u0a51\\u0a66-\\u0a71\\u0a75\\u0a81-\\u0a83\\u0abc\\u0abe-\\u0ac5\\u0ac7-\\u0ac9\\u0acb-\\u0acd\\u0ae2\\u0ae3\\u0ae6-\\u0aef\\u0afa-\\u0aff\\u0b01-\\u0b03\\u0b3c\\u0b3e-\\u0b44\\u0b47\\u0b48\\u0b4b-\\u0b4d\\u0b55-\\u0b57\\u0b62\\u0b63\\u0b66-\\u0b6f\\u0b82\\u0bbe-\\u0bc2\\u0bc6-\\u0bc8\\u0bca-\\u0bcd\\u0bd7\\u0be6-\\u0bef\\u0c00-\\u0c04\\u0c3e-\\u0c44\\u0c46-\\u0c48\\u0c4a-\\u0c4d\\u0c55\\u0c56\\u0c62\\u0c63\\u0c66-\\u0c6f\\u0c81-\\u0c83\\u0cbc\\u0cbe-\\u0cc4\\u0cc6-\\u0cc8\\u0cca-\\u0ccd\\u0cd5\\u0cd6\\u0ce2\\u0ce3\\u0ce6-\\u0cef\\u0d00-\\u0d03\\u0d3b\\u0d3c\\u0d3e-\\u0d44\\u0d46-\\u0d48\\u0d4a-\\u0d4d\\u0d57\\u0d62\\u0d63\\u0d66-\\u0d6f\\u0d81-\\u0d83\\u0dca\\u0dcf-\\u0dd4\\u0dd6\\u0dd8-\\u0ddf\\u0de6-\\u0def\\u0df2\\u0df3\\u0e31\\u0e34-\\u0e3a\\u0e47-\\u0e4e\\u0e50-\\u0e59\\u0eb1\\u0eb4-\\u0ebc\\u0ec8-\\u0ecd\\u0ed0-\\u0ed9\\u0f18\\u0f19\\u0f20-\\u0f29\\u0f35\\u0f37\\u0f39\\u0f3e\\u0f3f\\u0f71-\\u0f84\\u0f86\\u0f87\\u0f8d-\\u0f97\\u0f99-\\u0fbc\\u0fc6\\u102b-\\u103e\\u1040-\\u1049\\u1056-\\u1059\\u105e-\\u1060\\u1062-\\u1064\\u1067-\\u106d\\u1071-\\u1074\\u1082-\\u108d\\u108f-\\u109d\\u135d-\\u135f\\u1369-\\u1371\\u1712-\\u1714\\u1732-\\u1734\\u1752\\u1753\\u1772\\u1773\\u17b4-\\u17d3\\u17dd\\u17e0-\\u17e9\\u180b-\\u180d\\u1810-\\u1819\\u18a9\\u1920-\\u192b\\u1930-\\u193b\\u1946-\\u194f\\u19d0-\\u19da\\u1a17-\\u1a1b\\u1a55-\\u1a5e\\u1a60-\\u1a7c\\u1a7f-\\u1a89\\u1a90-\\u1a99\\u1ab0-\\u1abd\\u1abf\\u1ac0\\u1b00-\\u1b04\\u1b34-\\u1b44\\u1b50-\\u1b59\\u1b6b-\\u1b73\\u1b80-\\u1b82\\u1ba1-\\u1bad\\u1bb0-\\u1bb9\\u1be6-\\u1bf3\\u1c24-\\u1c37\\u1c40-\\u1c49\\u1c50-\\u1c59\\u1cd0-\\u1cd2\\u1cd4-\\u1ce8\\u1ced\\u1cf4\\u1cf7-\\u1cf9\\u1dc0-\\u1df9\\u1dfb-\\u1dff\\u203f\\u2040\\u2054\\u20d0-\\u20dc\\u20e1\\u20e5-\\u20f0\\u2cef-\\u2cf1\\u2d7f\\u2de0-\\u2dff\\u302a-\\u302f\\u3099\\u309a\\ua620-\\ua629\\ua66f\\ua674-\\ua67d\\ua69e\\ua69f\\ua6f0\\ua6f1\\ua802\\ua806\\ua80b\\ua823-\\ua827\\ua82c\\ua880\\ua881\\ua8b4-\\ua8c5\\ua8d0-\\ua8d9\\ua8e0-\\ua8f1\\ua8ff-\\ua909\\ua926-\\ua92d\\ua947-\\ua953\\ua980-\\ua983\\ua9b3-\\ua9c0\\ua9d0-\\ua9d9\\ua9e5\\ua9f0-\\ua9f9\\uaa29-\\uaa36\\uaa43\\uaa4c\\uaa4d\\uaa50-\\uaa59\\uaa7b-\\uaa7d\\uaab0\\uaab2-\\uaab4\\uaab7\\uaab8\\uaabe\\uaabf\\uaac1\\uaaeb-\\uaaef\\uaaf5\\uaaf6\\uabe3-\\uabea\\uabec\\uabed\\uabf0-\\uabf9\\ufb1e\\ufe00-\\ufe0f\\ufe20-\\ufe2f\\ufe33\\ufe34\\ufe4d-\\ufe4f\\uff10-\\uff19\\uff3f\";\nconst nonASCIIidentifierStart = new RegExp(\"[\" + nonASCIIidentifierStartChars + \"]\");\nconst nonASCIIidentifier = new RegExp(\"[\" + nonASCIIidentifierStartChars + nonASCIIidentifierChars + \"]\");\nnonASCIIidentifierStartChars = nonASCIIidentifierChars = null;\nconst astralIdentifierStartCodes = [0, 11, 2, 25, 2, 18, 2, 1, 2, 14, 3, 13, 35, 122, 70, 52, 268, 28, 4, 48, 48, 31, 14, 29, 6, 37, 11, 29, 3, 35, 5, 7, 2, 4, 43, 157, 19, 35, 5, 35, 5, 39, 9, 51, 157, 310, 10, 21, 11, 7, 153, 5, 3, 0, 2, 43, 2, 1, 4, 0, 3, 22, 11, 22, 10, 30, 66, 18, 2, 1, 11, 21, 11, 25, 71, 55, 7, 1, 65, 0, 16, 3, 2, 2, 2, 28, 43, 28, 4, 28, 36, 7, 2, 27, 28, 53, 11, 21, 11, 18, 14, 17, 111, 72, 56, 50, 14, 50, 14, 35, 349, 41, 7, 1, 79, 28, 11, 0, 9, 21, 107, 20, 28, 22, 13, 52, 76, 44, 33, 24, 27, 35, 30, 0, 3, 0, 9, 34, 4, 0, 13, 47, 15, 3, 22, 0, 2, 0, 36, 17, 2, 24, 85, 6, 2, 0, 2, 3, 2, 14, 2, 9, 8, 46, 39, 7, 3, 1, 3, 21, 2, 6, 2, 1, 2, 4, 4, 0, 19, 0, 13, 4, 159, 52, 19, 3, 21, 2, 31, 47, 21, 1, 2, 0, 185, 46, 42, 3, 37, 47, 21, 0, 60, 42, 14, 0, 72, 26, 230, 43, 117, 63, 32, 7, 3, 0, 3, 7, 2, 1, 2, 23, 16, 0, 2, 0, 95, 7, 3, 38, 17, 0, 2, 0, 29, 0, 11, 39, 8, 0, 22, 0, 12, 45, 20, 0, 35, 56, 264, 8, 2, 36, 18, 0, 50, 29, 113, 6, 2, 1, 2, 37, 22, 0, 26, 5, 2, 1, 2, 31, 15, 0, 328, 18, 190, 0, 80, 921, 103, 110, 18, 195, 2749, 1070, 4050, 582, 8634, 568, 8, 30, 114, 29, 19, 47, 17, 3, 32, 20, 6, 18, 689, 63, 129, 74, 6, 0, 67, 12, 65, 1, 2, 0, 29, 6135, 9, 1237, 43, 8, 8952, 286, 50, 2, 18, 3, 9, 395, 2309, 106, 6, 12, 4, 8, 8, 9, 5991, 84, 2, 70, 2, 1, 3, 0, 3, 1, 3, 3, 2, 11, 2, 0, 2, 6, 2, 64, 2, 3, 3, 7, 2, 6, 2, 27, 2, 3, 2, 4, 2, 0, 4, 6, 2, 339, 3, 24, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 7, 2357, 44, 11, 6, 17, 0, 370, 43, 1301, 196, 60, 67, 8, 0, 1205, 3, 2, 26, 2, 1, 2, 0, 3, 0, 2, 9, 2, 3, 2, 0, 2, 0, 7, 0, 5, 0, 2, 0, 2, 0, 2, 2, 2, 1, 2, 0, 3, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 1, 2, 0, 3, 3, 2, 6, 2, 3, 2, 3, 2, 0, 2, 9, 2, 16, 6, 2, 2, 4, 2, 16, 4421, 42717, 35, 4148, 12, 221, 3, 5761, 15, 7472, 3104, 541, 1507, 4938];\nconst astralIdentifierCodes = [509, 0, 227, 0, 150, 4, 294, 9, 1368, 2, 2, 1, 6, 3, 41, 2, 5, 0, 166, 1, 574, 3, 9, 9, 370, 1, 154, 10, 176, 2, 54, 14, 32, 9, 16, 3, 46, 10, 54, 9, 7, 2, 37, 13, 2, 9, 6, 1, 45, 0, 13, 2, 49, 13, 9, 3, 2, 11, 83, 11, 7, 0, 161, 11, 6, 9, 7, 3, 56, 1, 2, 6, 3, 1, 3, 2, 10, 0, 11, 1, 3, 6, 4, 4, 193, 17, 10, 9, 5, 0, 82, 19, 13, 9, 214, 6, 3, 8, 28, 1, 83, 16, 16, 9, 82, 12, 9, 9, 84, 14, 5, 9, 243, 14, 166, 9, 71, 5, 2, 1, 3, 3, 2, 0, 2, 1, 13, 9, 120, 6, 3, 6, 4, 0, 29, 9, 41, 6, 2, 3, 9, 0, 10, 10, 47, 15, 406, 7, 2, 7, 17, 9, 57, 21, 2, 13, 123, 5, 4, 0, 2, 1, 2, 6, 2, 0, 9, 9, 49, 4, 2, 1, 2, 4, 9, 9, 330, 3, 19306, 9, 135, 4, 60, 6, 26, 9, 1014, 0, 2, 54, 8, 3, 82, 0, 12, 1, 19628, 1, 5319, 4, 4, 5, 9, 7, 3, 6, 31, 3, 149, 2, 1418, 49, 513, 54, 5, 49, 9, 0, 15, 0, 23, 4, 2, 14, 1361, 6, 2, 16, 3, 6, 2, 1, 2, 4, 262, 6, 10, 9, 419, 13, 1495, 6, 110, 6, 6, 9, 4759, 9, 787719, 239];\n\nfunction isInAstralSet(code, set) {\n  let pos = 0x10000;\n\n  for (let i = 0, length = set.length; i < length; i += 2) {\n    pos += set[i];\n    if (pos > code) return false;\n    pos += set[i + 1];\n    if (pos >= code) return true;\n  }\n\n  return false;\n}\n\nfunction isIdentifierStart(code) {\n  if (code < 65) return code === 36;\n  if (code <= 90) return true;\n  if (code < 97) return code === 95;\n  if (code <= 122) return true;\n\n  if (code <= 0xffff) {\n    return code >= 0xaa && nonASCIIidentifierStart.test(String.fromCharCode(code));\n  }\n\n  return isInAstralSet(code, astralIdentifierStartCodes);\n}\nfunction isIdentifierChar(code) {\n  if (code < 48) return code === 36;\n  if (code < 58) return true;\n  if (code < 65) return false;\n  if (code <= 90) return true;\n  if (code < 97) return code === 95;\n  if (code <= 122) return true;\n\n  if (code <= 0xffff) {\n    return code >= 0xaa && nonASCIIidentifier.test(String.fromCharCode(code));\n  }\n\n  return isInAstralSet(code, astralIdentifierStartCodes) || isInAstralSet(code, astralIdentifierCodes);\n}\n\nconst reservedWords = {\n  keyword: [\"break\", \"case\", \"catch\", \"continue\", \"debugger\", \"default\", \"do\", \"else\", \"finally\", \"for\", \"function\", \"if\", \"return\", \"switch\", \"throw\", \"try\", \"var\", \"const\", \"while\", \"with\", \"new\", \"this\", \"super\", \"class\", \"extends\", \"export\", \"import\", \"null\", \"true\", \"false\", \"in\", \"instanceof\", \"typeof\", \"void\", \"delete\"],\n  strict: [\"implements\", \"interface\", \"let\", \"package\", \"private\", \"protected\", \"public\", \"static\", \"yield\"],\n  strictBind: [\"eval\", \"arguments\"]\n};\nconst keywords$1 = new Set(reservedWords.keyword);\nconst reservedWordsStrictSet = new Set(reservedWords.strict);\nconst reservedWordsStrictBindSet = new Set(reservedWords.strictBind);\nfunction isReservedWord(word, inModule) {\n  return inModule && word === \"await\" || word === \"enum\";\n}\nfunction isStrictReservedWord(word, inModule) {\n  return isReservedWord(word, inModule) || reservedWordsStrictSet.has(word);\n}\nfunction isStrictBindOnlyReservedWord(word) {\n  return reservedWordsStrictBindSet.has(word);\n}\nfunction isStrictBindReservedWord(word, inModule) {\n  return isStrictReservedWord(word, inModule) || isStrictBindOnlyReservedWord(word);\n}\nfunction isKeyword(word) {\n  return keywords$1.has(word);\n}\n\nconst keywordRelationalOperator = /^in(stanceof)?$/;\nfunction isIteratorStart(current, next) {\n  return current === 64 && next === 64;\n}\n\nconst SCOPE_OTHER = 0b00000000,\n      SCOPE_PROGRAM = 0b00000001,\n      SCOPE_FUNCTION = 0b00000010,\n      SCOPE_ARROW = 0b00000100,\n      SCOPE_SIMPLE_CATCH = 0b00001000,\n      SCOPE_SUPER = 0b00010000,\n      SCOPE_DIRECT_SUPER = 0b00100000,\n      SCOPE_CLASS = 0b01000000,\n      SCOPE_TS_MODULE = 0b10000000,\n      SCOPE_VAR = SCOPE_PROGRAM | SCOPE_FUNCTION | SCOPE_TS_MODULE;\nconst BIND_KIND_VALUE = 0b00000000001,\n      BIND_KIND_TYPE = 0b00000000010,\n      BIND_SCOPE_VAR = 0b00000000100,\n      BIND_SCOPE_LEXICAL = 0b00000001000,\n      BIND_SCOPE_FUNCTION = 0b00000010000,\n      BIND_FLAGS_NONE = 0b00001000000,\n      BIND_FLAGS_CLASS = 0b00010000000,\n      BIND_FLAGS_TS_ENUM = 0b00100000000,\n      BIND_FLAGS_TS_CONST_ENUM = 0b01000000000,\n      BIND_FLAGS_TS_EXPORT_ONLY = 0b10000000000;\nconst BIND_CLASS = BIND_KIND_VALUE | BIND_KIND_TYPE | BIND_SCOPE_LEXICAL | BIND_FLAGS_CLASS,\n      BIND_LEXICAL = BIND_KIND_VALUE | 0 | BIND_SCOPE_LEXICAL | 0,\n      BIND_VAR = BIND_KIND_VALUE | 0 | BIND_SCOPE_VAR | 0,\n      BIND_FUNCTION = BIND_KIND_VALUE | 0 | BIND_SCOPE_FUNCTION | 0,\n      BIND_TS_INTERFACE = 0 | BIND_KIND_TYPE | 0 | BIND_FLAGS_CLASS,\n      BIND_TS_TYPE = 0 | BIND_KIND_TYPE | 0 | 0,\n      BIND_TS_ENUM = BIND_KIND_VALUE | BIND_KIND_TYPE | BIND_SCOPE_LEXICAL | BIND_FLAGS_TS_ENUM,\n      BIND_TS_AMBIENT = 0 | 0 | 0 | BIND_FLAGS_TS_EXPORT_ONLY,\n      BIND_NONE = 0 | 0 | 0 | BIND_FLAGS_NONE,\n      BIND_OUTSIDE = BIND_KIND_VALUE | 0 | 0 | BIND_FLAGS_NONE,\n      BIND_TS_CONST_ENUM = BIND_TS_ENUM | BIND_FLAGS_TS_CONST_ENUM,\n      BIND_TS_NAMESPACE = 0 | 0 | 0 | BIND_FLAGS_TS_EXPORT_ONLY;\nconst CLASS_ELEMENT_FLAG_STATIC = 0b100,\n      CLASS_ELEMENT_KIND_GETTER = 0b010,\n      CLASS_ELEMENT_KIND_SETTER = 0b001,\n      CLASS_ELEMENT_KIND_ACCESSOR = CLASS_ELEMENT_KIND_GETTER | CLASS_ELEMENT_KIND_SETTER;\nconst CLASS_ELEMENT_STATIC_GETTER = CLASS_ELEMENT_KIND_GETTER | CLASS_ELEMENT_FLAG_STATIC,\n      CLASS_ELEMENT_STATIC_SETTER = CLASS_ELEMENT_KIND_SETTER | CLASS_ELEMENT_FLAG_STATIC,\n      CLASS_ELEMENT_INSTANCE_GETTER = CLASS_ELEMENT_KIND_GETTER,\n      CLASS_ELEMENT_INSTANCE_SETTER = CLASS_ELEMENT_KIND_SETTER,\n      CLASS_ELEMENT_OTHER = 0;\n\nconst reservedTypes = new Set([\"_\", \"any\", \"bool\", \"boolean\", \"empty\", \"extends\", \"false\", \"interface\", \"mixed\", \"null\", \"number\", \"static\", \"string\", \"true\", \"typeof\", \"void\"]);\nconst FlowErrors = Object.freeze({\n  AmbiguousConditionalArrow: \"Ambiguous expression: wrap the arrow functions in parentheses to disambiguate.\",\n  AmbiguousDeclareModuleKind: \"Found both `declare module.exports` and `declare export` in the same module. Modules can only have 1 since they are either an ES module or they are a CommonJS module\",\n  AssignReservedType: \"Cannot overwrite reserved type %0\",\n  DeclareClassElement: \"The `declare` modifier can only appear on class fields.\",\n  DeclareClassFieldInitializer: \"Initializers are not allowed in fields with the `declare` modifier.\",\n  DuplicateDeclareModuleExports: \"Duplicate `declare module.exports` statement\",\n  EnumBooleanMemberNotInitialized: \"Boolean enum members need to be initialized. Use either `%0 = true,` or `%0 = false,` in enum `%1`.\",\n  EnumDuplicateMemberName: \"Enum member names need to be unique, but the name `%0` has already been used before in enum `%1`.\",\n  EnumInconsistentMemberValues: \"Enum `%0` has inconsistent member initializers. Either use no initializers, or consistently use literals (either booleans, numbers, or strings) for all member initializers.\",\n  EnumInvalidExplicitType: \"Enum type `%1` is not valid. Use one of `boolean`, `number`, `string`, or `symbol` in enum `%0`.\",\n  EnumInvalidExplicitTypeUnknownSupplied: \"Supplied enum type is not valid. Use one of `boolean`, `number`, `string`, or `symbol` in enum `%0`.\",\n  EnumInvalidMemberInitializerPrimaryType: \"Enum `%0` has type `%2`, so the initializer of `%1` needs to be a %2 literal.\",\n  EnumInvalidMemberInitializerSymbolType: \"Symbol enum members cannot be initialized. Use `%1,` in enum `%0`.\",\n  EnumInvalidMemberInitializerUnknownType: \"The enum member initializer for `%1` needs to be a literal (either a boolean, number, or string) in enum `%0`.\",\n  EnumInvalidMemberName: \"Enum member names cannot start with lowercase 'a' through 'z'. Instead of using `%0`, consider using `%1`, in enum `%2`.\",\n  EnumNumberMemberNotInitialized: \"Number enum members need to be initialized, e.g. `%1 = 1` in enum `%0`.\",\n  EnumStringMemberInconsistentlyInitailized: \"String enum members need to consistently either all use initializers, or use no initializers, in enum `%0`.\",\n  ImportTypeShorthandOnlyInPureImport: \"The `type` and `typeof` keywords on named imports can only be used on regular `import` statements. It cannot be used with `import type` or `import typeof` statements\",\n  InexactInsideExact: \"Explicit inexact syntax cannot appear inside an explicit exact object type\",\n  InexactInsideNonObject: \"Explicit inexact syntax cannot appear in class or interface definitions\",\n  InexactVariance: \"Explicit inexact syntax cannot have variance\",\n  InvalidNonTypeImportInDeclareModule: \"Imports within a `declare module` body must always be `import type` or `import typeof`\",\n  MissingTypeParamDefault: \"Type parameter declaration needs a default, since a preceding type parameter declaration has a default.\",\n  NestedDeclareModule: \"`declare module` cannot be used inside another `declare module`\",\n  NestedFlowComment: \"Cannot have a flow comment inside another flow comment\",\n  OptionalBindingPattern: \"A binding pattern parameter cannot be optional in an implementation signature.\",\n  SpreadVariance: \"Spread properties cannot have variance\",\n  TypeBeforeInitializer: \"Type annotations must come before default assignments, e.g. instead of `age = 25: number` use `age: number = 25`\",\n  TypeCastInPattern: \"The type cast expression is expected to be wrapped with parenthesis\",\n  UnexpectedExplicitInexactInObject: \"Explicit inexact syntax must appear at the end of an inexact object\",\n  UnexpectedReservedType: \"Unexpected reserved type %0\",\n  UnexpectedReservedUnderscore: \"`_` is only allowed as a type argument to call or new\",\n  UnexpectedSpaceBetweenModuloChecks: \"Spaces between `%` and `checks` are not allowed here.\",\n  UnexpectedSpreadType: \"Spread operator cannot appear in class or interface definitions\",\n  UnexpectedSubtractionOperand: 'Unexpected token, expected \"number\" or \"bigint\"',\n  UnexpectedTokenAfterTypeParameter: \"Expected an arrow function after this type parameter declaration\",\n  UnexpectedTypeParameterBeforeAsyncArrowFunction: \"Type parameters must come after the async keyword, e.g. instead of `<T> async () => {}`, use `async <T>() => {}`\",\n  UnsupportedDeclareExportKind: \"`declare export %0` is not supported. Use `%1` instead\",\n  UnsupportedStatementInDeclareModule: \"Only declares and type imports are allowed inside declare module\",\n  UnterminatedFlowComment: \"Unterminated flow-comment\"\n});\n\nfunction isEsModuleType(bodyElement) {\n  return bodyElement.type === \"DeclareExportAllDeclaration\" || bodyElement.type === \"DeclareExportDeclaration\" && (!bodyElement.declaration || bodyElement.declaration.type !== \"TypeAlias\" && bodyElement.declaration.type !== \"InterfaceDeclaration\");\n}\n\nfunction hasTypeImportKind(node) {\n  return node.importKind === \"type\" || node.importKind === \"typeof\";\n}\n\nfunction isMaybeDefaultImport(state) {\n  return (state.type === types.name || !!state.type.keyword) && state.value !== \"from\";\n}\n\nconst exportSuggestions = {\n  const: \"declare export var\",\n  let: \"declare export var\",\n  type: \"export type\",\n  interface: \"export interface\"\n};\n\nfunction partition(list, test) {\n  const list1 = [];\n  const list2 = [];\n\n  for (let i = 0; i < list.length; i++) {\n    (test(list[i], i, list) ? list1 : list2).push(list[i]);\n  }\n\n  return [list1, list2];\n}\n\nconst FLOW_PRAGMA_REGEX = /\\*?\\s*@((?:no)?flow)\\b/;\nvar flow = (superClass => {\n  var _temp;\n\n  return _temp = class extends superClass {\n    constructor(options, input) {\n      super(options, input);\n      this.flowPragma = void 0;\n      this.flowPragma = undefined;\n    }\n\n    shouldParseTypes() {\n      return this.getPluginOption(\"flow\", \"all\") || this.flowPragma === \"flow\";\n    }\n\n    shouldParseEnums() {\n      return !!this.getPluginOption(\"flow\", \"enums\");\n    }\n\n    finishToken(type, val) {\n      if (type !== types.string && type !== types.semi && type !== types.interpreterDirective) {\n        if (this.flowPragma === undefined) {\n          this.flowPragma = null;\n        }\n      }\n\n      return super.finishToken(type, val);\n    }\n\n    addComment(comment) {\n      if (this.flowPragma === undefined) {\n        const matches = FLOW_PRAGMA_REGEX.exec(comment.value);\n\n        if (!matches) ; else if (matches[1] === \"flow\") {\n          this.flowPragma = \"flow\";\n        } else if (matches[1] === \"noflow\") {\n          this.flowPragma = \"noflow\";\n        } else {\n          throw new Error(\"Unexpected flow pragma\");\n        }\n      }\n\n      return super.addComment(comment);\n    }\n\n    flowParseTypeInitialiser(tok) {\n      const oldInType = this.state.inType;\n      this.state.inType = true;\n      this.expect(tok || types.colon);\n      const type = this.flowParseType();\n      this.state.inType = oldInType;\n      return type;\n    }\n\n    flowParsePredicate() {\n      const node = this.startNode();\n      const moduloLoc = this.state.startLoc;\n      const moduloPos = this.state.start;\n      this.expect(types.modulo);\n      const checksLoc = this.state.startLoc;\n      this.expectContextual(\"checks\");\n\n      if (moduloLoc.line !== checksLoc.line || moduloLoc.column !== checksLoc.column - 1) {\n        this.raise(moduloPos, FlowErrors.UnexpectedSpaceBetweenModuloChecks);\n      }\n\n      if (this.eat(types.parenL)) {\n        node.value = this.parseExpression();\n        this.expect(types.parenR);\n        return this.finishNode(node, \"DeclaredPredicate\");\n      } else {\n        return this.finishNode(node, \"InferredPredicate\");\n      }\n    }\n\n    flowParseTypeAndPredicateInitialiser() {\n      const oldInType = this.state.inType;\n      this.state.inType = true;\n      this.expect(types.colon);\n      let type = null;\n      let predicate = null;\n\n      if (this.match(types.modulo)) {\n        this.state.inType = oldInType;\n        predicate = this.flowParsePredicate();\n      } else {\n        type = this.flowParseType();\n        this.state.inType = oldInType;\n\n        if (this.match(types.modulo)) {\n          predicate = this.flowParsePredicate();\n        }\n      }\n\n      return [type, predicate];\n    }\n\n    flowParseDeclareClass(node) {\n      this.next();\n      this.flowParseInterfaceish(node, true);\n      return this.finishNode(node, \"DeclareClass\");\n    }\n\n    flowParseDeclareFunction(node) {\n      this.next();\n      const id = node.id = this.parseIdentifier();\n      const typeNode = this.startNode();\n      const typeContainer = this.startNode();\n\n      if (this.isRelational(\"<\")) {\n        typeNode.typeParameters = this.flowParseTypeParameterDeclaration();\n      } else {\n        typeNode.typeParameters = null;\n      }\n\n      this.expect(types.parenL);\n      const tmp = this.flowParseFunctionTypeParams();\n      typeNode.params = tmp.params;\n      typeNode.rest = tmp.rest;\n      this.expect(types.parenR);\n      [typeNode.returnType, node.predicate] = this.flowParseTypeAndPredicateInitialiser();\n      typeContainer.typeAnnotation = this.finishNode(typeNode, \"FunctionTypeAnnotation\");\n      id.typeAnnotation = this.finishNode(typeContainer, \"TypeAnnotation\");\n      this.resetEndLocation(id);\n      this.semicolon();\n      return this.finishNode(node, \"DeclareFunction\");\n    }\n\n    flowParseDeclare(node, insideModule) {\n      if (this.match(types._class)) {\n        return this.flowParseDeclareClass(node);\n      } else if (this.match(types._function)) {\n        return this.flowParseDeclareFunction(node);\n      } else if (this.match(types._var)) {\n        return this.flowParseDeclareVariable(node);\n      } else if (this.eatContextual(\"module\")) {\n        if (this.match(types.dot)) {\n          return this.flowParseDeclareModuleExports(node);\n        } else {\n          if (insideModule) {\n            this.raise(this.state.lastTokStart, FlowErrors.NestedDeclareModule);\n          }\n\n          return this.flowParseDeclareModule(node);\n        }\n      } else if (this.isContextual(\"type\")) {\n        return this.flowParseDeclareTypeAlias(node);\n      } else if (this.isContextual(\"opaque\")) {\n        return this.flowParseDeclareOpaqueType(node);\n      } else if (this.isContextual(\"interface\")) {\n        return this.flowParseDeclareInterface(node);\n      } else if (this.match(types._export)) {\n        return this.flowParseDeclareExportDeclaration(node, insideModule);\n      } else {\n        throw this.unexpected();\n      }\n    }\n\n    flowParseDeclareVariable(node) {\n      this.next();\n      node.id = this.flowParseTypeAnnotatableIdentifier(true);\n      this.scope.declareName(node.id.name, BIND_VAR, node.id.start);\n      this.semicolon();\n      return this.finishNode(node, \"DeclareVariable\");\n    }\n\n    flowParseDeclareModule(node) {\n      this.scope.enter(SCOPE_OTHER);\n\n      if (this.match(types.string)) {\n        node.id = this.parseExprAtom();\n      } else {\n        node.id = this.parseIdentifier();\n      }\n\n      const bodyNode = node.body = this.startNode();\n      const body = bodyNode.body = [];\n      this.expect(types.braceL);\n\n      while (!this.match(types.braceR)) {\n        let bodyNode = this.startNode();\n\n        if (this.match(types._import)) {\n          this.next();\n\n          if (!this.isContextual(\"type\") && !this.match(types._typeof)) {\n            this.raise(this.state.lastTokStart, FlowErrors.InvalidNonTypeImportInDeclareModule);\n          }\n\n          this.parseImport(bodyNode);\n        } else {\n          this.expectContextual(\"declare\", FlowErrors.UnsupportedStatementInDeclareModule);\n          bodyNode = this.flowParseDeclare(bodyNode, true);\n        }\n\n        body.push(bodyNode);\n      }\n\n      this.scope.exit();\n      this.expect(types.braceR);\n      this.finishNode(bodyNode, \"BlockStatement\");\n      let kind = null;\n      let hasModuleExport = false;\n      body.forEach(bodyElement => {\n        if (isEsModuleType(bodyElement)) {\n          if (kind === \"CommonJS\") {\n            this.raise(bodyElement.start, FlowErrors.AmbiguousDeclareModuleKind);\n          }\n\n          kind = \"ES\";\n        } else if (bodyElement.type === \"DeclareModuleExports\") {\n          if (hasModuleExport) {\n            this.raise(bodyElement.start, FlowErrors.DuplicateDeclareModuleExports);\n          }\n\n          if (kind === \"ES\") {\n            this.raise(bodyElement.start, FlowErrors.AmbiguousDeclareModuleKind);\n          }\n\n          kind = \"CommonJS\";\n          hasModuleExport = true;\n        }\n      });\n      node.kind = kind || \"CommonJS\";\n      return this.finishNode(node, \"DeclareModule\");\n    }\n\n    flowParseDeclareExportDeclaration(node, insideModule) {\n      this.expect(types._export);\n\n      if (this.eat(types._default)) {\n        if (this.match(types._function) || this.match(types._class)) {\n          node.declaration = this.flowParseDeclare(this.startNode());\n        } else {\n          node.declaration = this.flowParseType();\n          this.semicolon();\n        }\n\n        node.default = true;\n        return this.finishNode(node, \"DeclareExportDeclaration\");\n      } else {\n        if (this.match(types._const) || this.isLet() || (this.isContextual(\"type\") || this.isContextual(\"interface\")) && !insideModule) {\n          const label = this.state.value;\n          const suggestion = exportSuggestions[label];\n          throw this.raise(this.state.start, FlowErrors.UnsupportedDeclareExportKind, label, suggestion);\n        }\n\n        if (this.match(types._var) || this.match(types._function) || this.match(types._class) || this.isContextual(\"opaque\")) {\n            node.declaration = this.flowParseDeclare(this.startNode());\n            node.default = false;\n            return this.finishNode(node, \"DeclareExportDeclaration\");\n          } else if (this.match(types.star) || this.match(types.braceL) || this.isContextual(\"interface\") || this.isContextual(\"type\") || this.isContextual(\"opaque\")) {\n            node = this.parseExport(node);\n\n            if (node.type === \"ExportNamedDeclaration\") {\n              node.type = \"ExportDeclaration\";\n              node.default = false;\n              delete node.exportKind;\n            }\n\n            node.type = \"Declare\" + node.type;\n            return node;\n          }\n      }\n\n      throw this.unexpected();\n    }\n\n    flowParseDeclareModuleExports(node) {\n      this.next();\n      this.expectContextual(\"exports\");\n      node.typeAnnotation = this.flowParseTypeAnnotation();\n      this.semicolon();\n      return this.finishNode(node, \"DeclareModuleExports\");\n    }\n\n    flowParseDeclareTypeAlias(node) {\n      this.next();\n      this.flowParseTypeAlias(node);\n      node.type = \"DeclareTypeAlias\";\n      return node;\n    }\n\n    flowParseDeclareOpaqueType(node) {\n      this.next();\n      this.flowParseOpaqueType(node, true);\n      node.type = \"DeclareOpaqueType\";\n      return node;\n    }\n\n    flowParseDeclareInterface(node) {\n      this.next();\n      this.flowParseInterfaceish(node);\n      return this.finishNode(node, \"DeclareInterface\");\n    }\n\n    flowParseInterfaceish(node, isClass = false) {\n      node.id = this.flowParseRestrictedIdentifier(!isClass, true);\n      this.scope.declareName(node.id.name, isClass ? BIND_FUNCTION : BIND_LEXICAL, node.id.start);\n\n      if (this.isRelational(\"<\")) {\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n      } else {\n        node.typeParameters = null;\n      }\n\n      node.extends = [];\n      node.implements = [];\n      node.mixins = [];\n\n      if (this.eat(types._extends)) {\n        do {\n          node.extends.push(this.flowParseInterfaceExtends());\n        } while (!isClass && this.eat(types.comma));\n      }\n\n      if (this.isContextual(\"mixins\")) {\n        this.next();\n\n        do {\n          node.mixins.push(this.flowParseInterfaceExtends());\n        } while (this.eat(types.comma));\n      }\n\n      if (this.isContextual(\"implements\")) {\n        this.next();\n\n        do {\n          node.implements.push(this.flowParseInterfaceExtends());\n        } while (this.eat(types.comma));\n      }\n\n      node.body = this.flowParseObjectType({\n        allowStatic: isClass,\n        allowExact: false,\n        allowSpread: false,\n        allowProto: isClass,\n        allowInexact: false\n      });\n    }\n\n    flowParseInterfaceExtends() {\n      const node = this.startNode();\n      node.id = this.flowParseQualifiedTypeIdentifier();\n\n      if (this.isRelational(\"<\")) {\n        node.typeParameters = this.flowParseTypeParameterInstantiation();\n      } else {\n        node.typeParameters = null;\n      }\n\n      return this.finishNode(node, \"InterfaceExtends\");\n    }\n\n    flowParseInterface(node) {\n      this.flowParseInterfaceish(node);\n      return this.finishNode(node, \"InterfaceDeclaration\");\n    }\n\n    checkNotUnderscore(word) {\n      if (word === \"_\") {\n        this.raise(this.state.start, FlowErrors.UnexpectedReservedUnderscore);\n      }\n    }\n\n    checkReservedType(word, startLoc, declaration) {\n      if (!reservedTypes.has(word)) return;\n      this.raise(startLoc, declaration ? FlowErrors.AssignReservedType : FlowErrors.UnexpectedReservedType, word);\n    }\n\n    flowParseRestrictedIdentifier(liberal, declaration) {\n      this.checkReservedType(this.state.value, this.state.start, declaration);\n      return this.parseIdentifier(liberal);\n    }\n\n    flowParseTypeAlias(node) {\n      node.id = this.flowParseRestrictedIdentifier(false, true);\n      this.scope.declareName(node.id.name, BIND_LEXICAL, node.id.start);\n\n      if (this.isRelational(\"<\")) {\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n      } else {\n        node.typeParameters = null;\n      }\n\n      node.right = this.flowParseTypeInitialiser(types.eq);\n      this.semicolon();\n      return this.finishNode(node, \"TypeAlias\");\n    }\n\n    flowParseOpaqueType(node, declare) {\n      this.expectContextual(\"type\");\n      node.id = this.flowParseRestrictedIdentifier(true, true);\n      this.scope.declareName(node.id.name, BIND_LEXICAL, node.id.start);\n\n      if (this.isRelational(\"<\")) {\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n      } else {\n        node.typeParameters = null;\n      }\n\n      node.supertype = null;\n\n      if (this.match(types.colon)) {\n        node.supertype = this.flowParseTypeInitialiser(types.colon);\n      }\n\n      node.impltype = null;\n\n      if (!declare) {\n        node.impltype = this.flowParseTypeInitialiser(types.eq);\n      }\n\n      this.semicolon();\n      return this.finishNode(node, \"OpaqueType\");\n    }\n\n    flowParseTypeParameter(requireDefault = false) {\n      const nodeStart = this.state.start;\n      const node = this.startNode();\n      const variance = this.flowParseVariance();\n      const ident = this.flowParseTypeAnnotatableIdentifier();\n      node.name = ident.name;\n      node.variance = variance;\n      node.bound = ident.typeAnnotation;\n\n      if (this.match(types.eq)) {\n        this.eat(types.eq);\n        node.default = this.flowParseType();\n      } else {\n        if (requireDefault) {\n          this.raise(nodeStart, FlowErrors.MissingTypeParamDefault);\n        }\n      }\n\n      return this.finishNode(node, \"TypeParameter\");\n    }\n\n    flowParseTypeParameterDeclaration() {\n      const oldInType = this.state.inType;\n      const node = this.startNode();\n      node.params = [];\n      this.state.inType = true;\n\n      if (this.isRelational(\"<\") || this.match(types.jsxTagStart)) {\n        this.next();\n      } else {\n        this.unexpected();\n      }\n\n      let defaultRequired = false;\n\n      do {\n        const typeParameter = this.flowParseTypeParameter(defaultRequired);\n        node.params.push(typeParameter);\n\n        if (typeParameter.default) {\n          defaultRequired = true;\n        }\n\n        if (!this.isRelational(\">\")) {\n          this.expect(types.comma);\n        }\n      } while (!this.isRelational(\">\"));\n\n      this.expectRelational(\">\");\n      this.state.inType = oldInType;\n      return this.finishNode(node, \"TypeParameterDeclaration\");\n    }\n\n    flowParseTypeParameterInstantiation() {\n      const node = this.startNode();\n      const oldInType = this.state.inType;\n      node.params = [];\n      this.state.inType = true;\n      this.expectRelational(\"<\");\n      const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n      this.state.noAnonFunctionType = false;\n\n      while (!this.isRelational(\">\")) {\n        node.params.push(this.flowParseType());\n\n        if (!this.isRelational(\">\")) {\n          this.expect(types.comma);\n        }\n      }\n\n      this.state.noAnonFunctionType = oldNoAnonFunctionType;\n      this.expectRelational(\">\");\n      this.state.inType = oldInType;\n      return this.finishNode(node, \"TypeParameterInstantiation\");\n    }\n\n    flowParseTypeParameterInstantiationCallOrNew() {\n      const node = this.startNode();\n      const oldInType = this.state.inType;\n      node.params = [];\n      this.state.inType = true;\n      this.expectRelational(\"<\");\n\n      while (!this.isRelational(\">\")) {\n        node.params.push(this.flowParseTypeOrImplicitInstantiation());\n\n        if (!this.isRelational(\">\")) {\n          this.expect(types.comma);\n        }\n      }\n\n      this.expectRelational(\">\");\n      this.state.inType = oldInType;\n      return this.finishNode(node, \"TypeParameterInstantiation\");\n    }\n\n    flowParseInterfaceType() {\n      const node = this.startNode();\n      this.expectContextual(\"interface\");\n      node.extends = [];\n\n      if (this.eat(types._extends)) {\n        do {\n          node.extends.push(this.flowParseInterfaceExtends());\n        } while (this.eat(types.comma));\n      }\n\n      node.body = this.flowParseObjectType({\n        allowStatic: false,\n        allowExact: false,\n        allowSpread: false,\n        allowProto: false,\n        allowInexact: false\n      });\n      return this.finishNode(node, \"InterfaceTypeAnnotation\");\n    }\n\n    flowParseObjectPropertyKey() {\n      return this.match(types.num) || this.match(types.string) ? this.parseExprAtom() : this.parseIdentifier(true);\n    }\n\n    flowParseObjectTypeIndexer(node, isStatic, variance) {\n      node.static = isStatic;\n\n      if (this.lookahead().type === types.colon) {\n        node.id = this.flowParseObjectPropertyKey();\n        node.key = this.flowParseTypeInitialiser();\n      } else {\n        node.id = null;\n        node.key = this.flowParseType();\n      }\n\n      this.expect(types.bracketR);\n      node.value = this.flowParseTypeInitialiser();\n      node.variance = variance;\n      return this.finishNode(node, \"ObjectTypeIndexer\");\n    }\n\n    flowParseObjectTypeInternalSlot(node, isStatic) {\n      node.static = isStatic;\n      node.id = this.flowParseObjectPropertyKey();\n      this.expect(types.bracketR);\n      this.expect(types.bracketR);\n\n      if (this.isRelational(\"<\") || this.match(types.parenL)) {\n        node.method = true;\n        node.optional = false;\n        node.value = this.flowParseObjectTypeMethodish(this.startNodeAt(node.start, node.loc.start));\n      } else {\n        node.method = false;\n\n        if (this.eat(types.question)) {\n          node.optional = true;\n        }\n\n        node.value = this.flowParseTypeInitialiser();\n      }\n\n      return this.finishNode(node, \"ObjectTypeInternalSlot\");\n    }\n\n    flowParseObjectTypeMethodish(node) {\n      node.params = [];\n      node.rest = null;\n      node.typeParameters = null;\n\n      if (this.isRelational(\"<\")) {\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n      }\n\n      this.expect(types.parenL);\n\n      while (!this.match(types.parenR) && !this.match(types.ellipsis)) {\n        node.params.push(this.flowParseFunctionTypeParam());\n\n        if (!this.match(types.parenR)) {\n          this.expect(types.comma);\n        }\n      }\n\n      if (this.eat(types.ellipsis)) {\n        node.rest = this.flowParseFunctionTypeParam();\n      }\n\n      this.expect(types.parenR);\n      node.returnType = this.flowParseTypeInitialiser();\n      return this.finishNode(node, \"FunctionTypeAnnotation\");\n    }\n\n    flowParseObjectTypeCallProperty(node, isStatic) {\n      const valueNode = this.startNode();\n      node.static = isStatic;\n      node.value = this.flowParseObjectTypeMethodish(valueNode);\n      return this.finishNode(node, \"ObjectTypeCallProperty\");\n    }\n\n    flowParseObjectType({\n      allowStatic,\n      allowExact,\n      allowSpread,\n      allowProto,\n      allowInexact\n    }) {\n      const oldInType = this.state.inType;\n      this.state.inType = true;\n      const nodeStart = this.startNode();\n      nodeStart.callProperties = [];\n      nodeStart.properties = [];\n      nodeStart.indexers = [];\n      nodeStart.internalSlots = [];\n      let endDelim;\n      let exact;\n      let inexact = false;\n\n      if (allowExact && this.match(types.braceBarL)) {\n        this.expect(types.braceBarL);\n        endDelim = types.braceBarR;\n        exact = true;\n      } else {\n        this.expect(types.braceL);\n        endDelim = types.braceR;\n        exact = false;\n      }\n\n      nodeStart.exact = exact;\n\n      while (!this.match(endDelim)) {\n        let isStatic = false;\n        let protoStart = null;\n        let inexactStart = null;\n        const node = this.startNode();\n\n        if (allowProto && this.isContextual(\"proto\")) {\n          const lookahead = this.lookahead();\n\n          if (lookahead.type !== types.colon && lookahead.type !== types.question) {\n            this.next();\n            protoStart = this.state.start;\n            allowStatic = false;\n          }\n        }\n\n        if (allowStatic && this.isContextual(\"static\")) {\n          const lookahead = this.lookahead();\n\n          if (lookahead.type !== types.colon && lookahead.type !== types.question) {\n            this.next();\n            isStatic = true;\n          }\n        }\n\n        const variance = this.flowParseVariance();\n\n        if (this.eat(types.bracketL)) {\n          if (protoStart != null) {\n            this.unexpected(protoStart);\n          }\n\n          if (this.eat(types.bracketL)) {\n            if (variance) {\n              this.unexpected(variance.start);\n            }\n\n            nodeStart.internalSlots.push(this.flowParseObjectTypeInternalSlot(node, isStatic));\n          } else {\n            nodeStart.indexers.push(this.flowParseObjectTypeIndexer(node, isStatic, variance));\n          }\n        } else if (this.match(types.parenL) || this.isRelational(\"<\")) {\n          if (protoStart != null) {\n            this.unexpected(protoStart);\n          }\n\n          if (variance) {\n            this.unexpected(variance.start);\n          }\n\n          nodeStart.callProperties.push(this.flowParseObjectTypeCallProperty(node, isStatic));\n        } else {\n          let kind = \"init\";\n\n          if (this.isContextual(\"get\") || this.isContextual(\"set\")) {\n            const lookahead = this.lookahead();\n\n            if (lookahead.type === types.name || lookahead.type === types.string || lookahead.type === types.num) {\n              kind = this.state.value;\n              this.next();\n            }\n          }\n\n          const propOrInexact = this.flowParseObjectTypeProperty(node, isStatic, protoStart, variance, kind, allowSpread, allowInexact != null ? allowInexact : !exact);\n\n          if (propOrInexact === null) {\n            inexact = true;\n            inexactStart = this.state.lastTokStart;\n          } else {\n            nodeStart.properties.push(propOrInexact);\n          }\n        }\n\n        this.flowObjectTypeSemicolon();\n\n        if (inexactStart && !this.match(types.braceR) && !this.match(types.braceBarR)) {\n          this.raise(inexactStart, FlowErrors.UnexpectedExplicitInexactInObject);\n        }\n      }\n\n      this.expect(endDelim);\n\n      if (allowSpread) {\n        nodeStart.inexact = inexact;\n      }\n\n      const out = this.finishNode(nodeStart, \"ObjectTypeAnnotation\");\n      this.state.inType = oldInType;\n      return out;\n    }\n\n    flowParseObjectTypeProperty(node, isStatic, protoStart, variance, kind, allowSpread, allowInexact) {\n      if (this.eat(types.ellipsis)) {\n        const isInexactToken = this.match(types.comma) || this.match(types.semi) || this.match(types.braceR) || this.match(types.braceBarR);\n\n        if (isInexactToken) {\n          if (!allowSpread) {\n            this.raise(this.state.lastTokStart, FlowErrors.InexactInsideNonObject);\n          } else if (!allowInexact) {\n            this.raise(this.state.lastTokStart, FlowErrors.InexactInsideExact);\n          }\n\n          if (variance) {\n            this.raise(variance.start, FlowErrors.InexactVariance);\n          }\n\n          return null;\n        }\n\n        if (!allowSpread) {\n          this.raise(this.state.lastTokStart, FlowErrors.UnexpectedSpreadType);\n        }\n\n        if (protoStart != null) {\n          this.unexpected(protoStart);\n        }\n\n        if (variance) {\n          this.raise(variance.start, FlowErrors.SpreadVariance);\n        }\n\n        node.argument = this.flowParseType();\n        return this.finishNode(node, \"ObjectTypeSpreadProperty\");\n      } else {\n        node.key = this.flowParseObjectPropertyKey();\n        node.static = isStatic;\n        node.proto = protoStart != null;\n        node.kind = kind;\n        let optional = false;\n\n        if (this.isRelational(\"<\") || this.match(types.parenL)) {\n          node.method = true;\n\n          if (protoStart != null) {\n            this.unexpected(protoStart);\n          }\n\n          if (variance) {\n            this.unexpected(variance.start);\n          }\n\n          node.value = this.flowParseObjectTypeMethodish(this.startNodeAt(node.start, node.loc.start));\n\n          if (kind === \"get\" || kind === \"set\") {\n            this.flowCheckGetterSetterParams(node);\n          }\n        } else {\n          if (kind !== \"init\") this.unexpected();\n          node.method = false;\n\n          if (this.eat(types.question)) {\n            optional = true;\n          }\n\n          node.value = this.flowParseTypeInitialiser();\n          node.variance = variance;\n        }\n\n        node.optional = optional;\n        return this.finishNode(node, \"ObjectTypeProperty\");\n      }\n    }\n\n    flowCheckGetterSetterParams(property) {\n      const paramCount = property.kind === \"get\" ? 0 : 1;\n      const start = property.start;\n      const length = property.value.params.length + (property.value.rest ? 1 : 0);\n\n      if (length !== paramCount) {\n        if (property.kind === \"get\") {\n          this.raise(start, ErrorMessages.BadGetterArity);\n        } else {\n          this.raise(start, ErrorMessages.BadSetterArity);\n        }\n      }\n\n      if (property.kind === \"set\" && property.value.rest) {\n        this.raise(start, ErrorMessages.BadSetterRestParameter);\n      }\n    }\n\n    flowObjectTypeSemicolon() {\n      if (!this.eat(types.semi) && !this.eat(types.comma) && !this.match(types.braceR) && !this.match(types.braceBarR)) {\n        this.unexpected();\n      }\n    }\n\n    flowParseQualifiedTypeIdentifier(startPos, startLoc, id) {\n      startPos = startPos || this.state.start;\n      startLoc = startLoc || this.state.startLoc;\n      let node = id || this.flowParseRestrictedIdentifier(true);\n\n      while (this.eat(types.dot)) {\n        const node2 = this.startNodeAt(startPos, startLoc);\n        node2.qualification = node;\n        node2.id = this.flowParseRestrictedIdentifier(true);\n        node = this.finishNode(node2, \"QualifiedTypeIdentifier\");\n      }\n\n      return node;\n    }\n\n    flowParseGenericType(startPos, startLoc, id) {\n      const node = this.startNodeAt(startPos, startLoc);\n      node.typeParameters = null;\n      node.id = this.flowParseQualifiedTypeIdentifier(startPos, startLoc, id);\n\n      if (this.isRelational(\"<\")) {\n        node.typeParameters = this.flowParseTypeParameterInstantiation();\n      }\n\n      return this.finishNode(node, \"GenericTypeAnnotation\");\n    }\n\n    flowParseTypeofType() {\n      const node = this.startNode();\n      this.expect(types._typeof);\n      node.argument = this.flowParsePrimaryType();\n      return this.finishNode(node, \"TypeofTypeAnnotation\");\n    }\n\n    flowParseTupleType() {\n      const node = this.startNode();\n      node.types = [];\n      this.expect(types.bracketL);\n\n      while (this.state.pos < this.length && !this.match(types.bracketR)) {\n        node.types.push(this.flowParseType());\n        if (this.match(types.bracketR)) break;\n        this.expect(types.comma);\n      }\n\n      this.expect(types.bracketR);\n      return this.finishNode(node, \"TupleTypeAnnotation\");\n    }\n\n    flowParseFunctionTypeParam() {\n      let name = null;\n      let optional = false;\n      let typeAnnotation = null;\n      const node = this.startNode();\n      const lh = this.lookahead();\n\n      if (lh.type === types.colon || lh.type === types.question) {\n        name = this.parseIdentifier();\n\n        if (this.eat(types.question)) {\n          optional = true;\n        }\n\n        typeAnnotation = this.flowParseTypeInitialiser();\n      } else {\n        typeAnnotation = this.flowParseType();\n      }\n\n      node.name = name;\n      node.optional = optional;\n      node.typeAnnotation = typeAnnotation;\n      return this.finishNode(node, \"FunctionTypeParam\");\n    }\n\n    reinterpretTypeAsFunctionTypeParam(type) {\n      const node = this.startNodeAt(type.start, type.loc.start);\n      node.name = null;\n      node.optional = false;\n      node.typeAnnotation = type;\n      return this.finishNode(node, \"FunctionTypeParam\");\n    }\n\n    flowParseFunctionTypeParams(params = []) {\n      let rest = null;\n\n      while (!this.match(types.parenR) && !this.match(types.ellipsis)) {\n        params.push(this.flowParseFunctionTypeParam());\n\n        if (!this.match(types.parenR)) {\n          this.expect(types.comma);\n        }\n      }\n\n      if (this.eat(types.ellipsis)) {\n        rest = this.flowParseFunctionTypeParam();\n      }\n\n      return {\n        params,\n        rest\n      };\n    }\n\n    flowIdentToTypeAnnotation(startPos, startLoc, node, id) {\n      switch (id.name) {\n        case \"any\":\n          return this.finishNode(node, \"AnyTypeAnnotation\");\n\n        case \"bool\":\n        case \"boolean\":\n          return this.finishNode(node, \"BooleanTypeAnnotation\");\n\n        case \"mixed\":\n          return this.finishNode(node, \"MixedTypeAnnotation\");\n\n        case \"empty\":\n          return this.finishNode(node, \"EmptyTypeAnnotation\");\n\n        case \"number\":\n          return this.finishNode(node, \"NumberTypeAnnotation\");\n\n        case \"string\":\n          return this.finishNode(node, \"StringTypeAnnotation\");\n\n        case \"symbol\":\n          return this.finishNode(node, \"SymbolTypeAnnotation\");\n\n        default:\n          this.checkNotUnderscore(id.name);\n          return this.flowParseGenericType(startPos, startLoc, id);\n      }\n    }\n\n    flowParsePrimaryType() {\n      const startPos = this.state.start;\n      const startLoc = this.state.startLoc;\n      const node = this.startNode();\n      let tmp;\n      let type;\n      let isGroupedType = false;\n      const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n\n      switch (this.state.type) {\n        case types.name:\n          if (this.isContextual(\"interface\")) {\n            return this.flowParseInterfaceType();\n          }\n\n          return this.flowIdentToTypeAnnotation(startPos, startLoc, node, this.parseIdentifier());\n\n        case types.braceL:\n          return this.flowParseObjectType({\n            allowStatic: false,\n            allowExact: false,\n            allowSpread: true,\n            allowProto: false,\n            allowInexact: true\n          });\n\n        case types.braceBarL:\n          return this.flowParseObjectType({\n            allowStatic: false,\n            allowExact: true,\n            allowSpread: true,\n            allowProto: false,\n            allowInexact: false\n          });\n\n        case types.bracketL:\n          this.state.noAnonFunctionType = false;\n          type = this.flowParseTupleType();\n          this.state.noAnonFunctionType = oldNoAnonFunctionType;\n          return type;\n\n        case types.relational:\n          if (this.state.value === \"<\") {\n            node.typeParameters = this.flowParseTypeParameterDeclaration();\n            this.expect(types.parenL);\n            tmp = this.flowParseFunctionTypeParams();\n            node.params = tmp.params;\n            node.rest = tmp.rest;\n            this.expect(types.parenR);\n            this.expect(types.arrow);\n            node.returnType = this.flowParseType();\n            return this.finishNode(node, \"FunctionTypeAnnotation\");\n          }\n\n          break;\n\n        case types.parenL:\n          this.next();\n\n          if (!this.match(types.parenR) && !this.match(types.ellipsis)) {\n            if (this.match(types.name)) {\n              const token = this.lookahead().type;\n              isGroupedType = token !== types.question && token !== types.colon;\n            } else {\n              isGroupedType = true;\n            }\n          }\n\n          if (isGroupedType) {\n            this.state.noAnonFunctionType = false;\n            type = this.flowParseType();\n            this.state.noAnonFunctionType = oldNoAnonFunctionType;\n\n            if (this.state.noAnonFunctionType || !(this.match(types.comma) || this.match(types.parenR) && this.lookahead().type === types.arrow)) {\n              this.expect(types.parenR);\n              return type;\n            } else {\n              this.eat(types.comma);\n            }\n          }\n\n          if (type) {\n            tmp = this.flowParseFunctionTypeParams([this.reinterpretTypeAsFunctionTypeParam(type)]);\n          } else {\n            tmp = this.flowParseFunctionTypeParams();\n          }\n\n          node.params = tmp.params;\n          node.rest = tmp.rest;\n          this.expect(types.parenR);\n          this.expect(types.arrow);\n          node.returnType = this.flowParseType();\n          node.typeParameters = null;\n          return this.finishNode(node, \"FunctionTypeAnnotation\");\n\n        case types.string:\n          return this.parseLiteral(this.state.value, \"StringLiteralTypeAnnotation\");\n\n        case types._true:\n        case types._false:\n          node.value = this.match(types._true);\n          this.next();\n          return this.finishNode(node, \"BooleanLiteralTypeAnnotation\");\n\n        case types.plusMin:\n          if (this.state.value === \"-\") {\n            this.next();\n\n            if (this.match(types.num)) {\n              return this.parseLiteral(-this.state.value, \"NumberLiteralTypeAnnotation\", node.start, node.loc.start);\n            }\n\n            if (this.match(types.bigint)) {\n              return this.parseLiteral(-this.state.value, \"BigIntLiteralTypeAnnotation\", node.start, node.loc.start);\n            }\n\n            throw this.raise(this.state.start, FlowErrors.UnexpectedSubtractionOperand);\n          }\n\n          throw this.unexpected();\n\n        case types.num:\n          return this.parseLiteral(this.state.value, \"NumberLiteralTypeAnnotation\");\n\n        case types.bigint:\n          return this.parseLiteral(this.state.value, \"BigIntLiteralTypeAnnotation\");\n\n        case types._void:\n          this.next();\n          return this.finishNode(node, \"VoidTypeAnnotation\");\n\n        case types._null:\n          this.next();\n          return this.finishNode(node, \"NullLiteralTypeAnnotation\");\n\n        case types._this:\n          this.next();\n          return this.finishNode(node, \"ThisTypeAnnotation\");\n\n        case types.star:\n          this.next();\n          return this.finishNode(node, \"ExistsTypeAnnotation\");\n\n        default:\n          if (this.state.type.keyword === \"typeof\") {\n            return this.flowParseTypeofType();\n          } else if (this.state.type.keyword) {\n            const label = this.state.type.label;\n            this.next();\n            return super.createIdentifier(node, label);\n          }\n\n      }\n\n      throw this.unexpected();\n    }\n\n    flowParsePostfixType() {\n      const startPos = this.state.start,\n            startLoc = this.state.startLoc;\n      let type = this.flowParsePrimaryType();\n\n      while (this.match(types.bracketL) && !this.canInsertSemicolon()) {\n        const node = this.startNodeAt(startPos, startLoc);\n        node.elementType = type;\n        this.expect(types.bracketL);\n        this.expect(types.bracketR);\n        type = this.finishNode(node, \"ArrayTypeAnnotation\");\n      }\n\n      return type;\n    }\n\n    flowParsePrefixType() {\n      const node = this.startNode();\n\n      if (this.eat(types.question)) {\n        node.typeAnnotation = this.flowParsePrefixType();\n        return this.finishNode(node, \"NullableTypeAnnotation\");\n      } else {\n        return this.flowParsePostfixType();\n      }\n    }\n\n    flowParseAnonFunctionWithoutParens() {\n      const param = this.flowParsePrefixType();\n\n      if (!this.state.noAnonFunctionType && this.eat(types.arrow)) {\n        const node = this.startNodeAt(param.start, param.loc.start);\n        node.params = [this.reinterpretTypeAsFunctionTypeParam(param)];\n        node.rest = null;\n        node.returnType = this.flowParseType();\n        node.typeParameters = null;\n        return this.finishNode(node, \"FunctionTypeAnnotation\");\n      }\n\n      return param;\n    }\n\n    flowParseIntersectionType() {\n      const node = this.startNode();\n      this.eat(types.bitwiseAND);\n      const type = this.flowParseAnonFunctionWithoutParens();\n      node.types = [type];\n\n      while (this.eat(types.bitwiseAND)) {\n        node.types.push(this.flowParseAnonFunctionWithoutParens());\n      }\n\n      return node.types.length === 1 ? type : this.finishNode(node, \"IntersectionTypeAnnotation\");\n    }\n\n    flowParseUnionType() {\n      const node = this.startNode();\n      this.eat(types.bitwiseOR);\n      const type = this.flowParseIntersectionType();\n      node.types = [type];\n\n      while (this.eat(types.bitwiseOR)) {\n        node.types.push(this.flowParseIntersectionType());\n      }\n\n      return node.types.length === 1 ? type : this.finishNode(node, \"UnionTypeAnnotation\");\n    }\n\n    flowParseType() {\n      const oldInType = this.state.inType;\n      this.state.inType = true;\n      const type = this.flowParseUnionType();\n      this.state.inType = oldInType;\n      this.state.exprAllowed = this.state.exprAllowed || this.state.noAnonFunctionType;\n      return type;\n    }\n\n    flowParseTypeOrImplicitInstantiation() {\n      if (this.state.type === types.name && this.state.value === \"_\") {\n        const startPos = this.state.start;\n        const startLoc = this.state.startLoc;\n        const node = this.parseIdentifier();\n        return this.flowParseGenericType(startPos, startLoc, node);\n      } else {\n        return this.flowParseType();\n      }\n    }\n\n    flowParseTypeAnnotation() {\n      const node = this.startNode();\n      node.typeAnnotation = this.flowParseTypeInitialiser();\n      return this.finishNode(node, \"TypeAnnotation\");\n    }\n\n    flowParseTypeAnnotatableIdentifier(allowPrimitiveOverride) {\n      const ident = allowPrimitiveOverride ? this.parseIdentifier() : this.flowParseRestrictedIdentifier();\n\n      if (this.match(types.colon)) {\n        ident.typeAnnotation = this.flowParseTypeAnnotation();\n        this.resetEndLocation(ident);\n      }\n\n      return ident;\n    }\n\n    typeCastToParameter(node) {\n      node.expression.typeAnnotation = node.typeAnnotation;\n      this.resetEndLocation(node.expression, node.typeAnnotation.end, node.typeAnnotation.loc.end);\n      return node.expression;\n    }\n\n    flowParseVariance() {\n      let variance = null;\n\n      if (this.match(types.plusMin)) {\n        variance = this.startNode();\n\n        if (this.state.value === \"+\") {\n          variance.kind = \"plus\";\n        } else {\n          variance.kind = \"minus\";\n        }\n\n        this.next();\n        this.finishNode(variance, \"Variance\");\n      }\n\n      return variance;\n    }\n\n    parseFunctionBody(node, allowExpressionBody, isMethod = false) {\n      if (allowExpressionBody) {\n        return this.forwardNoArrowParamsConversionAt(node, () => super.parseFunctionBody(node, true, isMethod));\n      }\n\n      return super.parseFunctionBody(node, false, isMethod);\n    }\n\n    parseFunctionBodyAndFinish(node, type, isMethod = false) {\n      if (this.match(types.colon)) {\n        const typeNode = this.startNode();\n        [typeNode.typeAnnotation, node.predicate] = this.flowParseTypeAndPredicateInitialiser();\n        node.returnType = typeNode.typeAnnotation ? this.finishNode(typeNode, \"TypeAnnotation\") : null;\n      }\n\n      super.parseFunctionBodyAndFinish(node, type, isMethod);\n    }\n\n    parseStatement(context, topLevel) {\n      if (this.state.strict && this.match(types.name) && this.state.value === \"interface\") {\n        const lookahead = this.lookahead();\n\n        if (lookahead.type === types.name || isKeyword(lookahead.value)) {\n          const node = this.startNode();\n          this.next();\n          return this.flowParseInterface(node);\n        }\n      } else if (this.shouldParseEnums() && this.isContextual(\"enum\")) {\n        const node = this.startNode();\n        this.next();\n        return this.flowParseEnumDeclaration(node);\n      }\n\n      const stmt = super.parseStatement(context, topLevel);\n\n      if (this.flowPragma === undefined && !this.isValidDirective(stmt)) {\n        this.flowPragma = null;\n      }\n\n      return stmt;\n    }\n\n    parseExpressionStatement(node, expr) {\n      if (expr.type === \"Identifier\") {\n        if (expr.name === \"declare\") {\n          if (this.match(types._class) || this.match(types.name) || this.match(types._function) || this.match(types._var) || this.match(types._export)) {\n            return this.flowParseDeclare(node);\n          }\n        } else if (this.match(types.name)) {\n          if (expr.name === \"interface\") {\n            return this.flowParseInterface(node);\n          } else if (expr.name === \"type\") {\n            return this.flowParseTypeAlias(node);\n          } else if (expr.name === \"opaque\") {\n            return this.flowParseOpaqueType(node, false);\n          }\n        }\n      }\n\n      return super.parseExpressionStatement(node, expr);\n    }\n\n    shouldParseExportDeclaration() {\n      return this.isContextual(\"type\") || this.isContextual(\"interface\") || this.isContextual(\"opaque\") || this.shouldParseEnums() && this.isContextual(\"enum\") || super.shouldParseExportDeclaration();\n    }\n\n    isExportDefaultSpecifier() {\n      if (this.match(types.name) && (this.state.value === \"type\" || this.state.value === \"interface\" || this.state.value === \"opaque\" || this.shouldParseEnums() && this.state.value === \"enum\")) {\n        return false;\n      }\n\n      return super.isExportDefaultSpecifier();\n    }\n\n    parseExportDefaultExpression() {\n      if (this.shouldParseEnums() && this.isContextual(\"enum\")) {\n        const node = this.startNode();\n        this.next();\n        return this.flowParseEnumDeclaration(node);\n      }\n\n      return super.parseExportDefaultExpression();\n    }\n\n    parseConditional(expr, startPos, startLoc, refNeedsArrowPos) {\n      if (!this.match(types.question)) return expr;\n\n      if (refNeedsArrowPos) {\n        const result = this.tryParse(() => super.parseConditional(expr, startPos, startLoc));\n\n        if (!result.node) {\n          refNeedsArrowPos.start = result.error.pos || this.state.start;\n          return expr;\n        }\n\n        if (result.error) this.state = result.failState;\n        return result.node;\n      }\n\n      this.expect(types.question);\n      const state = this.state.clone();\n      const originalNoArrowAt = this.state.noArrowAt;\n      const node = this.startNodeAt(startPos, startLoc);\n      let {\n        consequent,\n        failed\n      } = this.tryParseConditionalConsequent();\n      let [valid, invalid] = this.getArrowLikeExpressions(consequent);\n\n      if (failed || invalid.length > 0) {\n        const noArrowAt = [...originalNoArrowAt];\n\n        if (invalid.length > 0) {\n          this.state = state;\n          this.state.noArrowAt = noArrowAt;\n\n          for (let i = 0; i < invalid.length; i++) {\n            noArrowAt.push(invalid[i].start);\n          }\n\n          ({\n            consequent,\n            failed\n          } = this.tryParseConditionalConsequent());\n          [valid, invalid] = this.getArrowLikeExpressions(consequent);\n        }\n\n        if (failed && valid.length > 1) {\n          this.raise(state.start, FlowErrors.AmbiguousConditionalArrow);\n        }\n\n        if (failed && valid.length === 1) {\n          this.state = state;\n          this.state.noArrowAt = noArrowAt.concat(valid[0].start);\n          ({\n            consequent,\n            failed\n          } = this.tryParseConditionalConsequent());\n        }\n      }\n\n      this.getArrowLikeExpressions(consequent, true);\n      this.state.noArrowAt = originalNoArrowAt;\n      this.expect(types.colon);\n      node.test = expr;\n      node.consequent = consequent;\n      node.alternate = this.forwardNoArrowParamsConversionAt(node, () => this.parseMaybeAssign(undefined, undefined, undefined));\n      return this.finishNode(node, \"ConditionalExpression\");\n    }\n\n    tryParseConditionalConsequent() {\n      this.state.noArrowParamsConversionAt.push(this.state.start);\n      const consequent = this.parseMaybeAssignAllowIn();\n      const failed = !this.match(types.colon);\n      this.state.noArrowParamsConversionAt.pop();\n      return {\n        consequent,\n        failed\n      };\n    }\n\n    getArrowLikeExpressions(node, disallowInvalid) {\n      const stack = [node];\n      const arrows = [];\n\n      while (stack.length !== 0) {\n        const node = stack.pop();\n\n        if (node.type === \"ArrowFunctionExpression\") {\n          if (node.typeParameters || !node.returnType) {\n            this.finishArrowValidation(node);\n          } else {\n            arrows.push(node);\n          }\n\n          stack.push(node.body);\n        } else if (node.type === \"ConditionalExpression\") {\n          stack.push(node.consequent);\n          stack.push(node.alternate);\n        }\n      }\n\n      if (disallowInvalid) {\n        arrows.forEach(node => this.finishArrowValidation(node));\n        return [arrows, []];\n      }\n\n      return partition(arrows, node => node.params.every(param => this.isAssignable(param, true)));\n    }\n\n    finishArrowValidation(node) {\n      var _node$extra;\n\n      this.toAssignableList(node.params, (_node$extra = node.extra) == null ? void 0 : _node$extra.trailingComma, false);\n      this.scope.enter(SCOPE_FUNCTION | SCOPE_ARROW);\n      super.checkParams(node, false, true);\n      this.scope.exit();\n    }\n\n    forwardNoArrowParamsConversionAt(node, parse) {\n      let result;\n\n      if (this.state.noArrowParamsConversionAt.indexOf(node.start) !== -1) {\n        this.state.noArrowParamsConversionAt.push(this.state.start);\n        result = parse();\n        this.state.noArrowParamsConversionAt.pop();\n      } else {\n        result = parse();\n      }\n\n      return result;\n    }\n\n    parseParenItem(node, startPos, startLoc) {\n      node = super.parseParenItem(node, startPos, startLoc);\n\n      if (this.eat(types.question)) {\n        node.optional = true;\n        this.resetEndLocation(node);\n      }\n\n      if (this.match(types.colon)) {\n        const typeCastNode = this.startNodeAt(startPos, startLoc);\n        typeCastNode.expression = node;\n        typeCastNode.typeAnnotation = this.flowParseTypeAnnotation();\n        return this.finishNode(typeCastNode, \"TypeCastExpression\");\n      }\n\n      return node;\n    }\n\n    assertModuleNodeAllowed(node) {\n      if (node.type === \"ImportDeclaration\" && (node.importKind === \"type\" || node.importKind === \"typeof\") || node.type === \"ExportNamedDeclaration\" && node.exportKind === \"type\" || node.type === \"ExportAllDeclaration\" && node.exportKind === \"type\") {\n        return;\n      }\n\n      super.assertModuleNodeAllowed(node);\n    }\n\n    parseExport(node) {\n      const decl = super.parseExport(node);\n\n      if (decl.type === \"ExportNamedDeclaration\" || decl.type === \"ExportAllDeclaration\") {\n        decl.exportKind = decl.exportKind || \"value\";\n      }\n\n      return decl;\n    }\n\n    parseExportDeclaration(node) {\n      if (this.isContextual(\"type\")) {\n        node.exportKind = \"type\";\n        const declarationNode = this.startNode();\n        this.next();\n\n        if (this.match(types.braceL)) {\n          node.specifiers = this.parseExportSpecifiers();\n          this.parseExportFrom(node);\n          return null;\n        } else {\n          return this.flowParseTypeAlias(declarationNode);\n        }\n      } else if (this.isContextual(\"opaque\")) {\n        node.exportKind = \"type\";\n        const declarationNode = this.startNode();\n        this.next();\n        return this.flowParseOpaqueType(declarationNode, false);\n      } else if (this.isContextual(\"interface\")) {\n        node.exportKind = \"type\";\n        const declarationNode = this.startNode();\n        this.next();\n        return this.flowParseInterface(declarationNode);\n      } else if (this.shouldParseEnums() && this.isContextual(\"enum\")) {\n        node.exportKind = \"value\";\n        const declarationNode = this.startNode();\n        this.next();\n        return this.flowParseEnumDeclaration(declarationNode);\n      } else {\n        return super.parseExportDeclaration(node);\n      }\n    }\n\n    eatExportStar(node) {\n      if (super.eatExportStar(...arguments)) return true;\n\n      if (this.isContextual(\"type\") && this.lookahead().type === types.star) {\n        node.exportKind = \"type\";\n        this.next();\n        this.next();\n        return true;\n      }\n\n      return false;\n    }\n\n    maybeParseExportNamespaceSpecifier(node) {\n      const pos = this.state.start;\n      const hasNamespace = super.maybeParseExportNamespaceSpecifier(node);\n\n      if (hasNamespace && node.exportKind === \"type\") {\n        this.unexpected(pos);\n      }\n\n      return hasNamespace;\n    }\n\n    parseClassId(node, isStatement, optionalId) {\n      super.parseClassId(node, isStatement, optionalId);\n\n      if (this.isRelational(\"<\")) {\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n      }\n    }\n\n    parseClassMember(classBody, member, state) {\n      const pos = this.state.start;\n\n      if (this.isContextual(\"declare\")) {\n        if (this.parseClassMemberFromModifier(classBody, member)) {\n          return;\n        }\n\n        member.declare = true;\n      }\n\n      super.parseClassMember(classBody, member, state);\n\n      if (member.declare) {\n        if (member.type !== \"ClassProperty\" && member.type !== \"ClassPrivateProperty\") {\n          this.raise(pos, FlowErrors.DeclareClassElement);\n        } else if (member.value) {\n          this.raise(member.value.start, FlowErrors.DeclareClassFieldInitializer);\n        }\n      }\n    }\n\n    getTokenFromCode(code) {\n      const next = this.input.charCodeAt(this.state.pos + 1);\n\n      if (code === 123 && next === 124) {\n        return this.finishOp(types.braceBarL, 2);\n      } else if (this.state.inType && (code === 62 || code === 60)) {\n        return this.finishOp(types.relational, 1);\n      } else if (this.state.inType && code === 63) {\n        return this.finishOp(types.question, 1);\n      } else if (isIteratorStart(code, next)) {\n        this.state.isIterator = true;\n        return super.readWord();\n      } else {\n        return super.getTokenFromCode(code);\n      }\n    }\n\n    isAssignable(node, isBinding) {\n      switch (node.type) {\n        case \"Identifier\":\n        case \"ObjectPattern\":\n        case \"ArrayPattern\":\n        case \"AssignmentPattern\":\n          return true;\n\n        case \"ObjectExpression\":\n          {\n            const last = node.properties.length - 1;\n            return node.properties.every((prop, i) => {\n              return prop.type !== \"ObjectMethod\" && (i === last || prop.type === \"SpreadElement\") && this.isAssignable(prop);\n            });\n          }\n\n        case \"ObjectProperty\":\n          return this.isAssignable(node.value);\n\n        case \"SpreadElement\":\n          return this.isAssignable(node.argument);\n\n        case \"ArrayExpression\":\n          return node.elements.every(element => this.isAssignable(element));\n\n        case \"AssignmentExpression\":\n          return node.operator === \"=\";\n\n        case \"ParenthesizedExpression\":\n        case \"TypeCastExpression\":\n          return this.isAssignable(node.expression);\n\n        case \"MemberExpression\":\n        case \"OptionalMemberExpression\":\n          return !isBinding;\n\n        default:\n          return false;\n      }\n    }\n\n    toAssignable(node, isLHS = false) {\n      if (node.type === \"TypeCastExpression\") {\n        return super.toAssignable(this.typeCastToParameter(node), isLHS);\n      } else {\n        return super.toAssignable(node, isLHS);\n      }\n    }\n\n    toAssignableList(exprList, trailingCommaPos, isLHS) {\n      for (let i = 0; i < exprList.length; i++) {\n        const expr = exprList[i];\n\n        if ((expr == null ? void 0 : expr.type) === \"TypeCastExpression\") {\n          exprList[i] = this.typeCastToParameter(expr);\n        }\n      }\n\n      return super.toAssignableList(exprList, trailingCommaPos, isLHS);\n    }\n\n    toReferencedList(exprList, isParenthesizedExpr) {\n      for (let i = 0; i < exprList.length; i++) {\n        var _expr$extra;\n\n        const expr = exprList[i];\n\n        if (expr && expr.type === \"TypeCastExpression\" && !((_expr$extra = expr.extra) == null ? void 0 : _expr$extra.parenthesized) && (exprList.length > 1 || !isParenthesizedExpr)) {\n          this.raise(expr.typeAnnotation.start, FlowErrors.TypeCastInPattern);\n        }\n      }\n\n      return exprList;\n    }\n\n    parseArrayLike(close, canBePattern, isTuple, refExpressionErrors) {\n      const node = super.parseArrayLike(close, canBePattern, isTuple, refExpressionErrors);\n\n      if (canBePattern && !this.state.maybeInArrowParameters) {\n        this.toReferencedList(node.elements);\n      }\n\n      return node;\n    }\n\n    checkLVal(expr, ...args) {\n      if (expr.type !== \"TypeCastExpression\") {\n        return super.checkLVal(expr, ...args);\n      }\n    }\n\n    parseClassProperty(node) {\n      if (this.match(types.colon)) {\n        node.typeAnnotation = this.flowParseTypeAnnotation();\n      }\n\n      return super.parseClassProperty(node);\n    }\n\n    parseClassPrivateProperty(node) {\n      if (this.match(types.colon)) {\n        node.typeAnnotation = this.flowParseTypeAnnotation();\n      }\n\n      return super.parseClassPrivateProperty(node);\n    }\n\n    isClassMethod() {\n      return this.isRelational(\"<\") || super.isClassMethod();\n    }\n\n    isClassProperty() {\n      return this.match(types.colon) || super.isClassProperty();\n    }\n\n    isNonstaticConstructor(method) {\n      return !this.match(types.colon) && super.isNonstaticConstructor(method);\n    }\n\n    pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper) {\n      if (method.variance) {\n        this.unexpected(method.variance.start);\n      }\n\n      delete method.variance;\n\n      if (this.isRelational(\"<\")) {\n        method.typeParameters = this.flowParseTypeParameterDeclaration();\n      }\n\n      super.pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper);\n    }\n\n    pushClassPrivateMethod(classBody, method, isGenerator, isAsync) {\n      if (method.variance) {\n        this.unexpected(method.variance.start);\n      }\n\n      delete method.variance;\n\n      if (this.isRelational(\"<\")) {\n        method.typeParameters = this.flowParseTypeParameterDeclaration();\n      }\n\n      super.pushClassPrivateMethod(classBody, method, isGenerator, isAsync);\n    }\n\n    parseClassSuper(node) {\n      super.parseClassSuper(node);\n\n      if (node.superClass && this.isRelational(\"<\")) {\n        node.superTypeParameters = this.flowParseTypeParameterInstantiation();\n      }\n\n      if (this.isContextual(\"implements\")) {\n        this.next();\n        const implemented = node.implements = [];\n\n        do {\n          const node = this.startNode();\n          node.id = this.flowParseRestrictedIdentifier(true);\n\n          if (this.isRelational(\"<\")) {\n            node.typeParameters = this.flowParseTypeParameterInstantiation();\n          } else {\n            node.typeParameters = null;\n          }\n\n          implemented.push(this.finishNode(node, \"ClassImplements\"));\n        } while (this.eat(types.comma));\n      }\n    }\n\n    parsePropertyName(node, isPrivateNameAllowed) {\n      const variance = this.flowParseVariance();\n      const key = super.parsePropertyName(node, isPrivateNameAllowed);\n      node.variance = variance;\n      return key;\n    }\n\n    parseObjPropValue(prop, startPos, startLoc, isGenerator, isAsync, isPattern, isAccessor, refExpressionErrors) {\n      if (prop.variance) {\n        this.unexpected(prop.variance.start);\n      }\n\n      delete prop.variance;\n      let typeParameters;\n\n      if (this.isRelational(\"<\") && !isAccessor) {\n        typeParameters = this.flowParseTypeParameterDeclaration();\n        if (!this.match(types.parenL)) this.unexpected();\n      }\n\n      super.parseObjPropValue(prop, startPos, startLoc, isGenerator, isAsync, isPattern, isAccessor, refExpressionErrors);\n\n      if (typeParameters) {\n        (prop.value || prop).typeParameters = typeParameters;\n      }\n    }\n\n    parseAssignableListItemTypes(param) {\n      if (this.eat(types.question)) {\n        if (param.type !== \"Identifier\") {\n          this.raise(param.start, FlowErrors.OptionalBindingPattern);\n        }\n\n        param.optional = true;\n      }\n\n      if (this.match(types.colon)) {\n        param.typeAnnotation = this.flowParseTypeAnnotation();\n      }\n\n      this.resetEndLocation(param);\n      return param;\n    }\n\n    parseMaybeDefault(startPos, startLoc, left) {\n      const node = super.parseMaybeDefault(startPos, startLoc, left);\n\n      if (node.type === \"AssignmentPattern\" && node.typeAnnotation && node.right.start < node.typeAnnotation.start) {\n        this.raise(node.typeAnnotation.start, FlowErrors.TypeBeforeInitializer);\n      }\n\n      return node;\n    }\n\n    shouldParseDefaultImport(node) {\n      if (!hasTypeImportKind(node)) {\n        return super.shouldParseDefaultImport(node);\n      }\n\n      return isMaybeDefaultImport(this.state);\n    }\n\n    parseImportSpecifierLocal(node, specifier, type, contextDescription) {\n      specifier.local = hasTypeImportKind(node) ? this.flowParseRestrictedIdentifier(true, true) : this.parseIdentifier();\n      this.checkLVal(specifier.local, contextDescription, BIND_LEXICAL);\n      node.specifiers.push(this.finishNode(specifier, type));\n    }\n\n    maybeParseDefaultImportSpecifier(node) {\n      node.importKind = \"value\";\n      let kind = null;\n\n      if (this.match(types._typeof)) {\n        kind = \"typeof\";\n      } else if (this.isContextual(\"type\")) {\n        kind = \"type\";\n      }\n\n      if (kind) {\n        const lh = this.lookahead();\n\n        if (kind === \"type\" && lh.type === types.star) {\n          this.unexpected(lh.start);\n        }\n\n        if (isMaybeDefaultImport(lh) || lh.type === types.braceL || lh.type === types.star) {\n          this.next();\n          node.importKind = kind;\n        }\n      }\n\n      return super.maybeParseDefaultImportSpecifier(node);\n    }\n\n    parseImportSpecifier(node) {\n      const specifier = this.startNode();\n      const firstIdentLoc = this.state.start;\n      const firstIdent = this.parseModuleExportName();\n      let specifierTypeKind = null;\n\n      if (firstIdent.type === \"Identifier\") {\n        if (firstIdent.name === \"type\") {\n          specifierTypeKind = \"type\";\n        } else if (firstIdent.name === \"typeof\") {\n          specifierTypeKind = \"typeof\";\n        }\n      }\n\n      let isBinding = false;\n\n      if (this.isContextual(\"as\") && !this.isLookaheadContextual(\"as\")) {\n        const as_ident = this.parseIdentifier(true);\n\n        if (specifierTypeKind !== null && !this.match(types.name) && !this.state.type.keyword) {\n          specifier.imported = as_ident;\n          specifier.importKind = specifierTypeKind;\n          specifier.local = as_ident.__clone();\n        } else {\n          specifier.imported = firstIdent;\n          specifier.importKind = null;\n          specifier.local = this.parseIdentifier();\n        }\n      } else if (specifierTypeKind !== null && (this.match(types.name) || this.state.type.keyword)) {\n        specifier.imported = this.parseIdentifier(true);\n        specifier.importKind = specifierTypeKind;\n\n        if (this.eatContextual(\"as\")) {\n          specifier.local = this.parseIdentifier();\n        } else {\n          isBinding = true;\n          specifier.local = specifier.imported.__clone();\n        }\n      } else {\n        if (firstIdent.type === \"StringLiteral\") {\n          throw this.raise(specifier.start, ErrorMessages.ImportBindingIsString, firstIdent.value);\n        }\n\n        isBinding = true;\n        specifier.imported = firstIdent;\n        specifier.importKind = null;\n        specifier.local = specifier.imported.__clone();\n      }\n\n      const nodeIsTypeImport = hasTypeImportKind(node);\n      const specifierIsTypeImport = hasTypeImportKind(specifier);\n\n      if (nodeIsTypeImport && specifierIsTypeImport) {\n        this.raise(firstIdentLoc, FlowErrors.ImportTypeShorthandOnlyInPureImport);\n      }\n\n      if (nodeIsTypeImport || specifierIsTypeImport) {\n        this.checkReservedType(specifier.local.name, specifier.local.start, true);\n      }\n\n      if (isBinding && !nodeIsTypeImport && !specifierIsTypeImport) {\n        this.checkReservedWord(specifier.local.name, specifier.start, true, true);\n      }\n\n      this.checkLVal(specifier.local, \"import specifier\", BIND_LEXICAL);\n      node.specifiers.push(this.finishNode(specifier, \"ImportSpecifier\"));\n    }\n\n    parseFunctionParams(node, allowModifiers) {\n      const kind = node.kind;\n\n      if (kind !== \"get\" && kind !== \"set\" && this.isRelational(\"<\")) {\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n      }\n\n      super.parseFunctionParams(node, allowModifiers);\n    }\n\n    parseVarId(decl, kind) {\n      super.parseVarId(decl, kind);\n\n      if (this.match(types.colon)) {\n        decl.id.typeAnnotation = this.flowParseTypeAnnotation();\n        this.resetEndLocation(decl.id);\n      }\n    }\n\n    parseAsyncArrowFromCallExpression(node, call) {\n      if (this.match(types.colon)) {\n        const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n        this.state.noAnonFunctionType = true;\n        node.returnType = this.flowParseTypeAnnotation();\n        this.state.noAnonFunctionType = oldNoAnonFunctionType;\n      }\n\n      return super.parseAsyncArrowFromCallExpression(node, call);\n    }\n\n    shouldParseAsyncArrow() {\n      return this.match(types.colon) || super.shouldParseAsyncArrow();\n    }\n\n    parseMaybeAssign(refExpressionErrors, afterLeftParse, refNeedsArrowPos) {\n      var _jsx;\n\n      let state = null;\n      let jsx;\n\n      if (this.hasPlugin(\"jsx\") && (this.match(types.jsxTagStart) || this.isRelational(\"<\"))) {\n        state = this.state.clone();\n        jsx = this.tryParse(() => super.parseMaybeAssign(refExpressionErrors, afterLeftParse, refNeedsArrowPos), state);\n        if (!jsx.error) return jsx.node;\n        const {\n          context\n        } = this.state;\n\n        if (context[context.length - 1] === types$1.j_oTag) {\n          context.length -= 2;\n        } else if (context[context.length - 1] === types$1.j_expr) {\n          context.length -= 1;\n        }\n      }\n\n      if (((_jsx = jsx) == null ? void 0 : _jsx.error) || this.isRelational(\"<\")) {\n        var _jsx2, _jsx3;\n\n        state = state || this.state.clone();\n        let typeParameters;\n        const arrow = this.tryParse(abort => {\n          var _arrowExpression$extr;\n\n          typeParameters = this.flowParseTypeParameterDeclaration();\n          const arrowExpression = this.forwardNoArrowParamsConversionAt(typeParameters, () => {\n            const result = super.parseMaybeAssign(refExpressionErrors, afterLeftParse, refNeedsArrowPos);\n            this.resetStartLocationFromNode(result, typeParameters);\n            return result;\n          });\n\n          if (arrowExpression.type !== \"ArrowFunctionExpression\" && ((_arrowExpression$extr = arrowExpression.extra) == null ? void 0 : _arrowExpression$extr.parenthesized)) {\n            abort();\n          }\n\n          const expr = this.maybeUnwrapTypeCastExpression(arrowExpression);\n          expr.typeParameters = typeParameters;\n          this.resetStartLocationFromNode(expr, typeParameters);\n          return arrowExpression;\n        }, state);\n        let arrowExpression = null;\n\n        if (arrow.node && this.maybeUnwrapTypeCastExpression(arrow.node).type === \"ArrowFunctionExpression\") {\n          if (!arrow.error && !arrow.aborted) {\n            if (arrow.node.async) {\n              this.raise(typeParameters.start, FlowErrors.UnexpectedTypeParameterBeforeAsyncArrowFunction);\n            }\n\n            return arrow.node;\n          }\n\n          arrowExpression = arrow.node;\n        }\n\n        if ((_jsx2 = jsx) == null ? void 0 : _jsx2.node) {\n          this.state = jsx.failState;\n          return jsx.node;\n        }\n\n        if (arrowExpression) {\n          this.state = arrow.failState;\n          return arrowExpression;\n        }\n\n        if ((_jsx3 = jsx) == null ? void 0 : _jsx3.thrown) throw jsx.error;\n        if (arrow.thrown) throw arrow.error;\n        throw this.raise(typeParameters.start, FlowErrors.UnexpectedTokenAfterTypeParameter);\n      }\n\n      return super.parseMaybeAssign(refExpressionErrors, afterLeftParse, refNeedsArrowPos);\n    }\n\n    parseArrow(node) {\n      if (this.match(types.colon)) {\n        const result = this.tryParse(() => {\n          const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n          this.state.noAnonFunctionType = true;\n          const typeNode = this.startNode();\n          [typeNode.typeAnnotation, node.predicate] = this.flowParseTypeAndPredicateInitialiser();\n          this.state.noAnonFunctionType = oldNoAnonFunctionType;\n          if (this.canInsertSemicolon()) this.unexpected();\n          if (!this.match(types.arrow)) this.unexpected();\n          return typeNode;\n        });\n        if (result.thrown) return null;\n        if (result.error) this.state = result.failState;\n        node.returnType = result.node.typeAnnotation ? this.finishNode(result.node, \"TypeAnnotation\") : null;\n      }\n\n      return super.parseArrow(node);\n    }\n\n    shouldParseArrow() {\n      return this.match(types.colon) || super.shouldParseArrow();\n    }\n\n    setArrowFunctionParameters(node, params) {\n      if (this.state.noArrowParamsConversionAt.indexOf(node.start) !== -1) {\n        node.params = params;\n      } else {\n        super.setArrowFunctionParameters(node, params);\n      }\n    }\n\n    checkParams(node, allowDuplicates, isArrowFunction) {\n      if (isArrowFunction && this.state.noArrowParamsConversionAt.indexOf(node.start) !== -1) {\n        return;\n      }\n\n      return super.checkParams(...arguments);\n    }\n\n    parseParenAndDistinguishExpression(canBeArrow) {\n      return super.parseParenAndDistinguishExpression(canBeArrow && this.state.noArrowAt.indexOf(this.state.start) === -1);\n    }\n\n    parseSubscripts(base, startPos, startLoc, noCalls) {\n      if (base.type === \"Identifier\" && base.name === \"async\" && this.state.noArrowAt.indexOf(startPos) !== -1) {\n        this.next();\n        const node = this.startNodeAt(startPos, startLoc);\n        node.callee = base;\n        node.arguments = this.parseCallExpressionArguments(types.parenR, false);\n        base = this.finishNode(node, \"CallExpression\");\n      } else if (base.type === \"Identifier\" && base.name === \"async\" && this.isRelational(\"<\")) {\n        const state = this.state.clone();\n        const arrow = this.tryParse(abort => this.parseAsyncArrowWithTypeParameters(startPos, startLoc) || abort(), state);\n        if (!arrow.error && !arrow.aborted) return arrow.node;\n        const result = this.tryParse(() => super.parseSubscripts(base, startPos, startLoc, noCalls), state);\n        if (result.node && !result.error) return result.node;\n\n        if (arrow.node) {\n          this.state = arrow.failState;\n          return arrow.node;\n        }\n\n        if (result.node) {\n          this.state = result.failState;\n          return result.node;\n        }\n\n        throw arrow.error || result.error;\n      }\n\n      return super.parseSubscripts(base, startPos, startLoc, noCalls);\n    }\n\n    parseSubscript(base, startPos, startLoc, noCalls, subscriptState) {\n      if (this.match(types.questionDot) && this.isLookaheadToken_lt()) {\n        subscriptState.optionalChainMember = true;\n\n        if (noCalls) {\n          subscriptState.stop = true;\n          return base;\n        }\n\n        this.next();\n        const node = this.startNodeAt(startPos, startLoc);\n        node.callee = base;\n        node.typeArguments = this.flowParseTypeParameterInstantiation();\n        this.expect(types.parenL);\n        node.arguments = this.parseCallExpressionArguments(types.parenR, false);\n        node.optional = true;\n        return this.finishCallExpression(node, true);\n      } else if (!noCalls && this.shouldParseTypes() && this.isRelational(\"<\")) {\n        const node = this.startNodeAt(startPos, startLoc);\n        node.callee = base;\n        const result = this.tryParse(() => {\n          node.typeArguments = this.flowParseTypeParameterInstantiationCallOrNew();\n          this.expect(types.parenL);\n          node.arguments = this.parseCallExpressionArguments(types.parenR, false);\n          if (subscriptState.optionalChainMember) node.optional = false;\n          return this.finishCallExpression(node, subscriptState.optionalChainMember);\n        });\n\n        if (result.node) {\n          if (result.error) this.state = result.failState;\n          return result.node;\n        }\n      }\n\n      return super.parseSubscript(base, startPos, startLoc, noCalls, subscriptState);\n    }\n\n    parseNewArguments(node) {\n      let targs = null;\n\n      if (this.shouldParseTypes() && this.isRelational(\"<\")) {\n        targs = this.tryParse(() => this.flowParseTypeParameterInstantiationCallOrNew()).node;\n      }\n\n      node.typeArguments = targs;\n      super.parseNewArguments(node);\n    }\n\n    parseAsyncArrowWithTypeParameters(startPos, startLoc) {\n      const node = this.startNodeAt(startPos, startLoc);\n      this.parseFunctionParams(node);\n      if (!this.parseArrow(node)) return;\n      return this.parseArrowExpression(node, undefined, true);\n    }\n\n    readToken_mult_modulo(code) {\n      const next = this.input.charCodeAt(this.state.pos + 1);\n\n      if (code === 42 && next === 47 && this.state.hasFlowComment) {\n        this.state.hasFlowComment = false;\n        this.state.pos += 2;\n        this.nextToken();\n        return;\n      }\n\n      super.readToken_mult_modulo(code);\n    }\n\n    readToken_pipe_amp(code) {\n      const next = this.input.charCodeAt(this.state.pos + 1);\n\n      if (code === 124 && next === 125) {\n        this.finishOp(types.braceBarR, 2);\n        return;\n      }\n\n      super.readToken_pipe_amp(code);\n    }\n\n    parseTopLevel(file, program) {\n      const fileNode = super.parseTopLevel(file, program);\n\n      if (this.state.hasFlowComment) {\n        this.raise(this.state.pos, FlowErrors.UnterminatedFlowComment);\n      }\n\n      return fileNode;\n    }\n\n    skipBlockComment() {\n      if (this.hasPlugin(\"flowComments\") && this.skipFlowComment()) {\n        if (this.state.hasFlowComment) {\n          this.unexpected(null, FlowErrors.NestedFlowComment);\n        }\n\n        this.hasFlowCommentCompletion();\n        this.state.pos += this.skipFlowComment();\n        this.state.hasFlowComment = true;\n        return;\n      }\n\n      if (this.state.hasFlowComment) {\n        const end = this.input.indexOf(\"*-/\", this.state.pos += 2);\n\n        if (end === -1) {\n          throw this.raise(this.state.pos - 2, ErrorMessages.UnterminatedComment);\n        }\n\n        this.state.pos = end + 3;\n        return;\n      }\n\n      super.skipBlockComment();\n    }\n\n    skipFlowComment() {\n      const {\n        pos\n      } = this.state;\n      let shiftToFirstNonWhiteSpace = 2;\n\n      while ([32, 9].includes(this.input.charCodeAt(pos + shiftToFirstNonWhiteSpace))) {\n        shiftToFirstNonWhiteSpace++;\n      }\n\n      const ch2 = this.input.charCodeAt(shiftToFirstNonWhiteSpace + pos);\n      const ch3 = this.input.charCodeAt(shiftToFirstNonWhiteSpace + pos + 1);\n\n      if (ch2 === 58 && ch3 === 58) {\n        return shiftToFirstNonWhiteSpace + 2;\n      }\n\n      if (this.input.slice(shiftToFirstNonWhiteSpace + pos, shiftToFirstNonWhiteSpace + pos + 12) === \"flow-include\") {\n        return shiftToFirstNonWhiteSpace + 12;\n      }\n\n      if (ch2 === 58 && ch3 !== 58) {\n        return shiftToFirstNonWhiteSpace;\n      }\n\n      return false;\n    }\n\n    hasFlowCommentCompletion() {\n      const end = this.input.indexOf(\"*/\", this.state.pos);\n\n      if (end === -1) {\n        throw this.raise(this.state.pos, ErrorMessages.UnterminatedComment);\n      }\n    }\n\n    flowEnumErrorBooleanMemberNotInitialized(pos, {\n      enumName,\n      memberName\n    }) {\n      this.raise(pos, FlowErrors.EnumBooleanMemberNotInitialized, memberName, enumName);\n    }\n\n    flowEnumErrorInvalidMemberName(pos, {\n      enumName,\n      memberName\n    }) {\n      const suggestion = memberName[0].toUpperCase() + memberName.slice(1);\n      this.raise(pos, FlowErrors.EnumInvalidMemberName, memberName, suggestion, enumName);\n    }\n\n    flowEnumErrorDuplicateMemberName(pos, {\n      enumName,\n      memberName\n    }) {\n      this.raise(pos, FlowErrors.EnumDuplicateMemberName, memberName, enumName);\n    }\n\n    flowEnumErrorInconsistentMemberValues(pos, {\n      enumName\n    }) {\n      this.raise(pos, FlowErrors.EnumInconsistentMemberValues, enumName);\n    }\n\n    flowEnumErrorInvalidExplicitType(pos, {\n      enumName,\n      suppliedType\n    }) {\n      return this.raise(pos, suppliedType === null ? FlowErrors.EnumInvalidExplicitTypeUnknownSupplied : FlowErrors.EnumInvalidExplicitType, enumName, suppliedType);\n    }\n\n    flowEnumErrorInvalidMemberInitializer(pos, {\n      enumName,\n      explicitType,\n      memberName\n    }) {\n      let message = null;\n\n      switch (explicitType) {\n        case \"boolean\":\n        case \"number\":\n        case \"string\":\n          message = FlowErrors.EnumInvalidMemberInitializerPrimaryType;\n          break;\n\n        case \"symbol\":\n          message = FlowErrors.EnumInvalidMemberInitializerSymbolType;\n          break;\n\n        default:\n          message = FlowErrors.EnumInvalidMemberInitializerUnknownType;\n      }\n\n      return this.raise(pos, message, enumName, memberName, explicitType);\n    }\n\n    flowEnumErrorNumberMemberNotInitialized(pos, {\n      enumName,\n      memberName\n    }) {\n      this.raise(pos, FlowErrors.EnumNumberMemberNotInitialized, enumName, memberName);\n    }\n\n    flowEnumErrorStringMemberInconsistentlyInitailized(pos, {\n      enumName\n    }) {\n      this.raise(pos, FlowErrors.EnumStringMemberInconsistentlyInitailized, enumName);\n    }\n\n    flowEnumMemberInit() {\n      const startPos = this.state.start;\n\n      const endOfInit = () => this.match(types.comma) || this.match(types.braceR);\n\n      switch (this.state.type) {\n        case types.num:\n          {\n            const literal = this.parseLiteral(this.state.value, \"NumericLiteral\");\n\n            if (endOfInit()) {\n              return {\n                type: \"number\",\n                pos: literal.start,\n                value: literal\n              };\n            }\n\n            return {\n              type: \"invalid\",\n              pos: startPos\n            };\n          }\n\n        case types.string:\n          {\n            const literal = this.parseLiteral(this.state.value, \"StringLiteral\");\n\n            if (endOfInit()) {\n              return {\n                type: \"string\",\n                pos: literal.start,\n                value: literal\n              };\n            }\n\n            return {\n              type: \"invalid\",\n              pos: startPos\n            };\n          }\n\n        case types._true:\n        case types._false:\n          {\n            const literal = this.parseBooleanLiteral();\n\n            if (endOfInit()) {\n              return {\n                type: \"boolean\",\n                pos: literal.start,\n                value: literal\n              };\n            }\n\n            return {\n              type: \"invalid\",\n              pos: startPos\n            };\n          }\n\n        default:\n          return {\n            type: \"invalid\",\n            pos: startPos\n          };\n      }\n    }\n\n    flowEnumMemberRaw() {\n      const pos = this.state.start;\n      const id = this.parseIdentifier(true);\n      const init = this.eat(types.eq) ? this.flowEnumMemberInit() : {\n        type: \"none\",\n        pos\n      };\n      return {\n        id,\n        init\n      };\n    }\n\n    flowEnumCheckExplicitTypeMismatch(pos, context, expectedType) {\n      const {\n        explicitType\n      } = context;\n\n      if (explicitType === null) {\n        return;\n      }\n\n      if (explicitType !== expectedType) {\n        this.flowEnumErrorInvalidMemberInitializer(pos, context);\n      }\n    }\n\n    flowEnumMembers({\n      enumName,\n      explicitType\n    }) {\n      const seenNames = new Set();\n      const members = {\n        booleanMembers: [],\n        numberMembers: [],\n        stringMembers: [],\n        defaultedMembers: []\n      };\n\n      while (!this.match(types.braceR)) {\n        const memberNode = this.startNode();\n        const {\n          id,\n          init\n        } = this.flowEnumMemberRaw();\n        const memberName = id.name;\n\n        if (memberName === \"\") {\n          continue;\n        }\n\n        if (/^[a-z]/.test(memberName)) {\n          this.flowEnumErrorInvalidMemberName(id.start, {\n            enumName,\n            memberName\n          });\n        }\n\n        if (seenNames.has(memberName)) {\n          this.flowEnumErrorDuplicateMemberName(id.start, {\n            enumName,\n            memberName\n          });\n        }\n\n        seenNames.add(memberName);\n        const context = {\n          enumName,\n          explicitType,\n          memberName\n        };\n        memberNode.id = id;\n\n        switch (init.type) {\n          case \"boolean\":\n            {\n              this.flowEnumCheckExplicitTypeMismatch(init.pos, context, \"boolean\");\n              memberNode.init = init.value;\n              members.booleanMembers.push(this.finishNode(memberNode, \"EnumBooleanMember\"));\n              break;\n            }\n\n          case \"number\":\n            {\n              this.flowEnumCheckExplicitTypeMismatch(init.pos, context, \"number\");\n              memberNode.init = init.value;\n              members.numberMembers.push(this.finishNode(memberNode, \"EnumNumberMember\"));\n              break;\n            }\n\n          case \"string\":\n            {\n              this.flowEnumCheckExplicitTypeMismatch(init.pos, context, \"string\");\n              memberNode.init = init.value;\n              members.stringMembers.push(this.finishNode(memberNode, \"EnumStringMember\"));\n              break;\n            }\n\n          case \"invalid\":\n            {\n              throw this.flowEnumErrorInvalidMemberInitializer(init.pos, context);\n            }\n\n          case \"none\":\n            {\n              switch (explicitType) {\n                case \"boolean\":\n                  this.flowEnumErrorBooleanMemberNotInitialized(init.pos, context);\n                  break;\n\n                case \"number\":\n                  this.flowEnumErrorNumberMemberNotInitialized(init.pos, context);\n                  break;\n\n                default:\n                  members.defaultedMembers.push(this.finishNode(memberNode, \"EnumDefaultedMember\"));\n              }\n            }\n        }\n\n        if (!this.match(types.braceR)) {\n          this.expect(types.comma);\n        }\n      }\n\n      return members;\n    }\n\n    flowEnumStringMembers(initializedMembers, defaultedMembers, {\n      enumName\n    }) {\n      if (initializedMembers.length === 0) {\n        return defaultedMembers;\n      } else if (defaultedMembers.length === 0) {\n        return initializedMembers;\n      } else if (defaultedMembers.length > initializedMembers.length) {\n        for (let _i = 0; _i < initializedMembers.length; _i++) {\n          const member = initializedMembers[_i];\n          this.flowEnumErrorStringMemberInconsistentlyInitailized(member.start, {\n            enumName\n          });\n        }\n\n        return defaultedMembers;\n      } else {\n        for (let _i2 = 0; _i2 < defaultedMembers.length; _i2++) {\n          const member = defaultedMembers[_i2];\n          this.flowEnumErrorStringMemberInconsistentlyInitailized(member.start, {\n            enumName\n          });\n        }\n\n        return initializedMembers;\n      }\n    }\n\n    flowEnumParseExplicitType({\n      enumName\n    }) {\n      if (this.eatContextual(\"of\")) {\n        if (!this.match(types.name)) {\n          throw this.flowEnumErrorInvalidExplicitType(this.state.start, {\n            enumName,\n            suppliedType: null\n          });\n        }\n\n        const {\n          value\n        } = this.state;\n        this.next();\n\n        if (value !== \"boolean\" && value !== \"number\" && value !== \"string\" && value !== \"symbol\") {\n          this.flowEnumErrorInvalidExplicitType(this.state.start, {\n            enumName,\n            suppliedType: value\n          });\n        }\n\n        return value;\n      }\n\n      return null;\n    }\n\n    flowEnumBody(node, {\n      enumName,\n      nameLoc\n    }) {\n      const explicitType = this.flowEnumParseExplicitType({\n        enumName\n      });\n      this.expect(types.braceL);\n      const members = this.flowEnumMembers({\n        enumName,\n        explicitType\n      });\n\n      switch (explicitType) {\n        case \"boolean\":\n          node.explicitType = true;\n          node.members = members.booleanMembers;\n          this.expect(types.braceR);\n          return this.finishNode(node, \"EnumBooleanBody\");\n\n        case \"number\":\n          node.explicitType = true;\n          node.members = members.numberMembers;\n          this.expect(types.braceR);\n          return this.finishNode(node, \"EnumNumberBody\");\n\n        case \"string\":\n          node.explicitType = true;\n          node.members = this.flowEnumStringMembers(members.stringMembers, members.defaultedMembers, {\n            enumName\n          });\n          this.expect(types.braceR);\n          return this.finishNode(node, \"EnumStringBody\");\n\n        case \"symbol\":\n          node.members = members.defaultedMembers;\n          this.expect(types.braceR);\n          return this.finishNode(node, \"EnumSymbolBody\");\n\n        default:\n          {\n            const empty = () => {\n              node.members = [];\n              this.expect(types.braceR);\n              return this.finishNode(node, \"EnumStringBody\");\n            };\n\n            node.explicitType = false;\n            const boolsLen = members.booleanMembers.length;\n            const numsLen = members.numberMembers.length;\n            const strsLen = members.stringMembers.length;\n            const defaultedLen = members.defaultedMembers.length;\n\n            if (!boolsLen && !numsLen && !strsLen && !defaultedLen) {\n              return empty();\n            } else if (!boolsLen && !numsLen) {\n              node.members = this.flowEnumStringMembers(members.stringMembers, members.defaultedMembers, {\n                enumName\n              });\n              this.expect(types.braceR);\n              return this.finishNode(node, \"EnumStringBody\");\n            } else if (!numsLen && !strsLen && boolsLen >= defaultedLen) {\n              for (let _i3 = 0, _members$defaultedMem = members.defaultedMembers; _i3 < _members$defaultedMem.length; _i3++) {\n                const member = _members$defaultedMem[_i3];\n                this.flowEnumErrorBooleanMemberNotInitialized(member.start, {\n                  enumName,\n                  memberName: member.id.name\n                });\n              }\n\n              node.members = members.booleanMembers;\n              this.expect(types.braceR);\n              return this.finishNode(node, \"EnumBooleanBody\");\n            } else if (!boolsLen && !strsLen && numsLen >= defaultedLen) {\n              for (let _i4 = 0, _members$defaultedMem2 = members.defaultedMembers; _i4 < _members$defaultedMem2.length; _i4++) {\n                const member = _members$defaultedMem2[_i4];\n                this.flowEnumErrorNumberMemberNotInitialized(member.start, {\n                  enumName,\n                  memberName: member.id.name\n                });\n              }\n\n              node.members = members.numberMembers;\n              this.expect(types.braceR);\n              return this.finishNode(node, \"EnumNumberBody\");\n            } else {\n              this.flowEnumErrorInconsistentMemberValues(nameLoc, {\n                enumName\n              });\n              return empty();\n            }\n          }\n      }\n    }\n\n    flowParseEnumDeclaration(node) {\n      const id = this.parseIdentifier();\n      node.id = id;\n      node.body = this.flowEnumBody(this.startNode(), {\n        enumName: id.name,\n        nameLoc: id.start\n      });\n      return this.finishNode(node, \"EnumDeclaration\");\n    }\n\n    updateContext(prevType) {\n      if (this.match(types.name) && this.state.value === \"of\" && prevType === types.name && this.input.slice(this.state.lastTokStart, this.state.lastTokEnd) === \"interface\") {\n        this.state.exprAllowed = false;\n      } else {\n        super.updateContext(prevType);\n      }\n    }\n\n    isLookaheadToken_lt() {\n      const next = this.nextTokenStart();\n\n      if (this.input.charCodeAt(next) === 60) {\n        const afterNext = this.input.charCodeAt(next + 1);\n        return afterNext !== 60 && afterNext !== 61;\n      }\n\n      return false;\n    }\n\n    maybeUnwrapTypeCastExpression(node) {\n      return node.type === \"TypeCastExpression\" ? node.expression : node;\n    }\n\n  }, _temp;\n});\n\nconst entities = {\n  quot: \"\\u0022\",\n  amp: \"&\",\n  apos: \"\\u0027\",\n  lt: \"<\",\n  gt: \">\",\n  nbsp: \"\\u00A0\",\n  iexcl: \"\\u00A1\",\n  cent: \"\\u00A2\",\n  pound: \"\\u00A3\",\n  curren: \"\\u00A4\",\n  yen: \"\\u00A5\",\n  brvbar: \"\\u00A6\",\n  sect: \"\\u00A7\",\n  uml: \"\\u00A8\",\n  copy: \"\\u00A9\",\n  ordf: \"\\u00AA\",\n  laquo: \"\\u00AB\",\n  not: \"\\u00AC\",\n  shy: \"\\u00AD\",\n  reg: \"\\u00AE\",\n  macr: \"\\u00AF\",\n  deg: \"\\u00B0\",\n  plusmn: \"\\u00B1\",\n  sup2: \"\\u00B2\",\n  sup3: \"\\u00B3\",\n  acute: \"\\u00B4\",\n  micro: \"\\u00B5\",\n  para: \"\\u00B6\",\n  middot: \"\\u00B7\",\n  cedil: \"\\u00B8\",\n  sup1: \"\\u00B9\",\n  ordm: \"\\u00BA\",\n  raquo: \"\\u00BB\",\n  frac14: \"\\u00BC\",\n  frac12: \"\\u00BD\",\n  frac34: \"\\u00BE\",\n  iquest: \"\\u00BF\",\n  Agrave: \"\\u00C0\",\n  Aacute: \"\\u00C1\",\n  Acirc: \"\\u00C2\",\n  Atilde: \"\\u00C3\",\n  Auml: \"\\u00C4\",\n  Aring: \"\\u00C5\",\n  AElig: \"\\u00C6\",\n  Ccedil: \"\\u00C7\",\n  Egrave: \"\\u00C8\",\n  Eacute: \"\\u00C9\",\n  Ecirc: \"\\u00CA\",\n  Euml: \"\\u00CB\",\n  Igrave: \"\\u00CC\",\n  Iacute: \"\\u00CD\",\n  Icirc: \"\\u00CE\",\n  Iuml: \"\\u00CF\",\n  ETH: \"\\u00D0\",\n  Ntilde: \"\\u00D1\",\n  Ograve: \"\\u00D2\",\n  Oacute: \"\\u00D3\",\n  Ocirc: \"\\u00D4\",\n  Otilde: \"\\u00D5\",\n  Ouml: \"\\u00D6\",\n  times: \"\\u00D7\",\n  Oslash: \"\\u00D8\",\n  Ugrave: \"\\u00D9\",\n  Uacute: \"\\u00DA\",\n  Ucirc: \"\\u00DB\",\n  Uuml: \"\\u00DC\",\n  Yacute: \"\\u00DD\",\n  THORN: \"\\u00DE\",\n  szlig: \"\\u00DF\",\n  agrave: \"\\u00E0\",\n  aacute: \"\\u00E1\",\n  acirc: \"\\u00E2\",\n  atilde: \"\\u00E3\",\n  auml: \"\\u00E4\",\n  aring: \"\\u00E5\",\n  aelig: \"\\u00E6\",\n  ccedil: \"\\u00E7\",\n  egrave: \"\\u00E8\",\n  eacute: \"\\u00E9\",\n  ecirc: \"\\u00EA\",\n  euml: \"\\u00EB\",\n  igrave: \"\\u00EC\",\n  iacute: \"\\u00ED\",\n  icirc: \"\\u00EE\",\n  iuml: \"\\u00EF\",\n  eth: \"\\u00F0\",\n  ntilde: \"\\u00F1\",\n  ograve: \"\\u00F2\",\n  oacute: \"\\u00F3\",\n  ocirc: \"\\u00F4\",\n  otilde: \"\\u00F5\",\n  ouml: \"\\u00F6\",\n  divide: \"\\u00F7\",\n  oslash: \"\\u00F8\",\n  ugrave: \"\\u00F9\",\n  uacute: \"\\u00FA\",\n  ucirc: \"\\u00FB\",\n  uuml: \"\\u00FC\",\n  yacute: \"\\u00FD\",\n  thorn: \"\\u00FE\",\n  yuml: \"\\u00FF\",\n  OElig: \"\\u0152\",\n  oelig: \"\\u0153\",\n  Scaron: \"\\u0160\",\n  scaron: \"\\u0161\",\n  Yuml: \"\\u0178\",\n  fnof: \"\\u0192\",\n  circ: \"\\u02C6\",\n  tilde: \"\\u02DC\",\n  Alpha: \"\\u0391\",\n  Beta: \"\\u0392\",\n  Gamma: \"\\u0393\",\n  Delta: \"\\u0394\",\n  Epsilon: \"\\u0395\",\n  Zeta: \"\\u0396\",\n  Eta: \"\\u0397\",\n  Theta: \"\\u0398\",\n  Iota: \"\\u0399\",\n  Kappa: \"\\u039A\",\n  Lambda: \"\\u039B\",\n  Mu: \"\\u039C\",\n  Nu: \"\\u039D\",\n  Xi: \"\\u039E\",\n  Omicron: \"\\u039F\",\n  Pi: \"\\u03A0\",\n  Rho: \"\\u03A1\",\n  Sigma: \"\\u03A3\",\n  Tau: \"\\u03A4\",\n  Upsilon: \"\\u03A5\",\n  Phi: \"\\u03A6\",\n  Chi: \"\\u03A7\",\n  Psi: \"\\u03A8\",\n  Omega: \"\\u03A9\",\n  alpha: \"\\u03B1\",\n  beta: \"\\u03B2\",\n  gamma: \"\\u03B3\",\n  delta: \"\\u03B4\",\n  epsilon: \"\\u03B5\",\n  zeta: \"\\u03B6\",\n  eta: \"\\u03B7\",\n  theta: \"\\u03B8\",\n  iota: \"\\u03B9\",\n  kappa: \"\\u03BA\",\n  lambda: \"\\u03BB\",\n  mu: \"\\u03BC\",\n  nu: \"\\u03BD\",\n  xi: \"\\u03BE\",\n  omicron: \"\\u03BF\",\n  pi: \"\\u03C0\",\n  rho: \"\\u03C1\",\n  sigmaf: \"\\u03C2\",\n  sigma: \"\\u03C3\",\n  tau: \"\\u03C4\",\n  upsilon: \"\\u03C5\",\n  phi: \"\\u03C6\",\n  chi: \"\\u03C7\",\n  psi: \"\\u03C8\",\n  omega: \"\\u03C9\",\n  thetasym: \"\\u03D1\",\n  upsih: \"\\u03D2\",\n  piv: \"\\u03D6\",\n  ensp: \"\\u2002\",\n  emsp: \"\\u2003\",\n  thinsp: \"\\u2009\",\n  zwnj: \"\\u200C\",\n  zwj: \"\\u200D\",\n  lrm: \"\\u200E\",\n  rlm: \"\\u200F\",\n  ndash: \"\\u2013\",\n  mdash: \"\\u2014\",\n  lsquo: \"\\u2018\",\n  rsquo: \"\\u2019\",\n  sbquo: \"\\u201A\",\n  ldquo: \"\\u201C\",\n  rdquo: \"\\u201D\",\n  bdquo: \"\\u201E\",\n  dagger: \"\\u2020\",\n  Dagger: \"\\u2021\",\n  bull: \"\\u2022\",\n  hellip: \"\\u2026\",\n  permil: \"\\u2030\",\n  prime: \"\\u2032\",\n  Prime: \"\\u2033\",\n  lsaquo: \"\\u2039\",\n  rsaquo: \"\\u203A\",\n  oline: \"\\u203E\",\n  frasl: \"\\u2044\",\n  euro: \"\\u20AC\",\n  image: \"\\u2111\",\n  weierp: \"\\u2118\",\n  real: \"\\u211C\",\n  trade: \"\\u2122\",\n  alefsym: \"\\u2135\",\n  larr: \"\\u2190\",\n  uarr: \"\\u2191\",\n  rarr: \"\\u2192\",\n  darr: \"\\u2193\",\n  harr: \"\\u2194\",\n  crarr: \"\\u21B5\",\n  lArr: \"\\u21D0\",\n  uArr: \"\\u21D1\",\n  rArr: \"\\u21D2\",\n  dArr: \"\\u21D3\",\n  hArr: \"\\u21D4\",\n  forall: \"\\u2200\",\n  part: \"\\u2202\",\n  exist: \"\\u2203\",\n  empty: \"\\u2205\",\n  nabla: \"\\u2207\",\n  isin: \"\\u2208\",\n  notin: \"\\u2209\",\n  ni: \"\\u220B\",\n  prod: \"\\u220F\",\n  sum: \"\\u2211\",\n  minus: \"\\u2212\",\n  lowast: \"\\u2217\",\n  radic: \"\\u221A\",\n  prop: \"\\u221D\",\n  infin: \"\\u221E\",\n  ang: \"\\u2220\",\n  and: \"\\u2227\",\n  or: \"\\u2228\",\n  cap: \"\\u2229\",\n  cup: \"\\u222A\",\n  int: \"\\u222B\",\n  there4: \"\\u2234\",\n  sim: \"\\u223C\",\n  cong: \"\\u2245\",\n  asymp: \"\\u2248\",\n  ne: \"\\u2260\",\n  equiv: \"\\u2261\",\n  le: \"\\u2264\",\n  ge: \"\\u2265\",\n  sub: \"\\u2282\",\n  sup: \"\\u2283\",\n  nsub: \"\\u2284\",\n  sube: \"\\u2286\",\n  supe: \"\\u2287\",\n  oplus: \"\\u2295\",\n  otimes: \"\\u2297\",\n  perp: \"\\u22A5\",\n  sdot: \"\\u22C5\",\n  lceil: \"\\u2308\",\n  rceil: \"\\u2309\",\n  lfloor: \"\\u230A\",\n  rfloor: \"\\u230B\",\n  lang: \"\\u2329\",\n  rang: \"\\u232A\",\n  loz: \"\\u25CA\",\n  spades: \"\\u2660\",\n  clubs: \"\\u2663\",\n  hearts: \"\\u2665\",\n  diams: \"\\u2666\"\n};\n\nconst HEX_NUMBER = /^[\\da-fA-F]+$/;\nconst DECIMAL_NUMBER = /^\\d+$/;\nconst JsxErrors = Object.freeze({\n  AttributeIsEmpty: \"JSX attributes must only be assigned a non-empty expression\",\n  MissingClosingTagFragment: \"Expected corresponding JSX closing tag for <>\",\n  MissingClosingTagElement: \"Expected corresponding JSX closing tag for <%0>\",\n  UnexpectedSequenceExpression: \"Sequence expressions cannot be directly nested inside JSX. Did you mean to wrap it in parentheses (...)?\",\n  UnsupportedJsxValue: \"JSX value should be either an expression or a quoted JSX text\",\n  UnterminatedJsxContent: \"Unterminated JSX contents\",\n  UnwrappedAdjacentJSXElements: \"Adjacent JSX elements must be wrapped in an enclosing tag. Did you want a JSX fragment <>...</>?\"\n});\ntypes$1.j_oTag = new TokContext(\"<tag\", false);\ntypes$1.j_cTag = new TokContext(\"</tag\", false);\ntypes$1.j_expr = new TokContext(\"<tag>...</tag>\", true, true);\ntypes.jsxName = new TokenType(\"jsxName\");\ntypes.jsxText = new TokenType(\"jsxText\", {\n  beforeExpr: true\n});\ntypes.jsxTagStart = new TokenType(\"jsxTagStart\", {\n  startsExpr: true\n});\ntypes.jsxTagEnd = new TokenType(\"jsxTagEnd\");\n\ntypes.jsxTagStart.updateContext = function () {\n  this.state.context.push(types$1.j_expr);\n  this.state.context.push(types$1.j_oTag);\n  this.state.exprAllowed = false;\n};\n\ntypes.jsxTagEnd.updateContext = function (prevType) {\n  const out = this.state.context.pop();\n\n  if (out === types$1.j_oTag && prevType === types.slash || out === types$1.j_cTag) {\n    this.state.context.pop();\n    this.state.exprAllowed = this.curContext() === types$1.j_expr;\n  } else {\n    this.state.exprAllowed = true;\n  }\n};\n\nfunction isFragment(object) {\n  return object ? object.type === \"JSXOpeningFragment\" || object.type === \"JSXClosingFragment\" : false;\n}\n\nfunction getQualifiedJSXName(object) {\n  if (object.type === \"JSXIdentifier\") {\n    return object.name;\n  }\n\n  if (object.type === \"JSXNamespacedName\") {\n    return object.namespace.name + \":\" + object.name.name;\n  }\n\n  if (object.type === \"JSXMemberExpression\") {\n    return getQualifiedJSXName(object.object) + \".\" + getQualifiedJSXName(object.property);\n  }\n\n  throw new Error(\"Node had unexpected type: \" + object.type);\n}\n\nvar jsx = (superClass => class extends superClass {\n  jsxReadToken() {\n    let out = \"\";\n    let chunkStart = this.state.pos;\n\n    for (;;) {\n      if (this.state.pos >= this.length) {\n        throw this.raise(this.state.start, JsxErrors.UnterminatedJsxContent);\n      }\n\n      const ch = this.input.charCodeAt(this.state.pos);\n\n      switch (ch) {\n        case 60:\n        case 123:\n          if (this.state.pos === this.state.start) {\n            if (ch === 60 && this.state.exprAllowed) {\n              ++this.state.pos;\n              return this.finishToken(types.jsxTagStart);\n            }\n\n            return super.getTokenFromCode(ch);\n          }\n\n          out += this.input.slice(chunkStart, this.state.pos);\n          return this.finishToken(types.jsxText, out);\n\n        case 38:\n          out += this.input.slice(chunkStart, this.state.pos);\n          out += this.jsxReadEntity();\n          chunkStart = this.state.pos;\n          break;\n\n        default:\n          if (isNewLine(ch)) {\n            out += this.input.slice(chunkStart, this.state.pos);\n            out += this.jsxReadNewLine(true);\n            chunkStart = this.state.pos;\n          } else {\n            ++this.state.pos;\n          }\n\n      }\n    }\n  }\n\n  jsxReadNewLine(normalizeCRLF) {\n    const ch = this.input.charCodeAt(this.state.pos);\n    let out;\n    ++this.state.pos;\n\n    if (ch === 13 && this.input.charCodeAt(this.state.pos) === 10) {\n      ++this.state.pos;\n      out = normalizeCRLF ? \"\\n\" : \"\\r\\n\";\n    } else {\n      out = String.fromCharCode(ch);\n    }\n\n    ++this.state.curLine;\n    this.state.lineStart = this.state.pos;\n    return out;\n  }\n\n  jsxReadString(quote) {\n    let out = \"\";\n    let chunkStart = ++this.state.pos;\n\n    for (;;) {\n      if (this.state.pos >= this.length) {\n        throw this.raise(this.state.start, ErrorMessages.UnterminatedString);\n      }\n\n      const ch = this.input.charCodeAt(this.state.pos);\n      if (ch === quote) break;\n\n      if (ch === 38) {\n        out += this.input.slice(chunkStart, this.state.pos);\n        out += this.jsxReadEntity();\n        chunkStart = this.state.pos;\n      } else if (isNewLine(ch)) {\n        out += this.input.slice(chunkStart, this.state.pos);\n        out += this.jsxReadNewLine(false);\n        chunkStart = this.state.pos;\n      } else {\n        ++this.state.pos;\n      }\n    }\n\n    out += this.input.slice(chunkStart, this.state.pos++);\n    return this.finishToken(types.string, out);\n  }\n\n  jsxReadEntity() {\n    let str = \"\";\n    let count = 0;\n    let entity;\n    let ch = this.input[this.state.pos];\n    const startPos = ++this.state.pos;\n\n    while (this.state.pos < this.length && count++ < 10) {\n      ch = this.input[this.state.pos++];\n\n      if (ch === \";\") {\n        if (str[0] === \"#\") {\n          if (str[1] === \"x\") {\n            str = str.substr(2);\n\n            if (HEX_NUMBER.test(str)) {\n              entity = String.fromCodePoint(parseInt(str, 16));\n            }\n          } else {\n            str = str.substr(1);\n\n            if (DECIMAL_NUMBER.test(str)) {\n              entity = String.fromCodePoint(parseInt(str, 10));\n            }\n          }\n        } else {\n          entity = entities[str];\n        }\n\n        break;\n      }\n\n      str += ch;\n    }\n\n    if (!entity) {\n      this.state.pos = startPos;\n      return \"&\";\n    }\n\n    return entity;\n  }\n\n  jsxReadWord() {\n    let ch;\n    const start = this.state.pos;\n\n    do {\n      ch = this.input.charCodeAt(++this.state.pos);\n    } while (isIdentifierChar(ch) || ch === 45);\n\n    return this.finishToken(types.jsxName, this.input.slice(start, this.state.pos));\n  }\n\n  jsxParseIdentifier() {\n    const node = this.startNode();\n\n    if (this.match(types.jsxName)) {\n      node.name = this.state.value;\n    } else if (this.state.type.keyword) {\n      node.name = this.state.type.keyword;\n    } else {\n      this.unexpected();\n    }\n\n    this.next();\n    return this.finishNode(node, \"JSXIdentifier\");\n  }\n\n  jsxParseNamespacedName() {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const name = this.jsxParseIdentifier();\n    if (!this.eat(types.colon)) return name;\n    const node = this.startNodeAt(startPos, startLoc);\n    node.namespace = name;\n    node.name = this.jsxParseIdentifier();\n    return this.finishNode(node, \"JSXNamespacedName\");\n  }\n\n  jsxParseElementName() {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    let node = this.jsxParseNamespacedName();\n\n    if (node.type === \"JSXNamespacedName\") {\n      return node;\n    }\n\n    while (this.eat(types.dot)) {\n      const newNode = this.startNodeAt(startPos, startLoc);\n      newNode.object = node;\n      newNode.property = this.jsxParseIdentifier();\n      node = this.finishNode(newNode, \"JSXMemberExpression\");\n    }\n\n    return node;\n  }\n\n  jsxParseAttributeValue() {\n    let node;\n\n    switch (this.state.type) {\n      case types.braceL:\n        node = this.startNode();\n        this.next();\n        node = this.jsxParseExpressionContainer(node);\n\n        if (node.expression.type === \"JSXEmptyExpression\") {\n          this.raise(node.start, JsxErrors.AttributeIsEmpty);\n        }\n\n        return node;\n\n      case types.jsxTagStart:\n      case types.string:\n        return this.parseExprAtom();\n\n      default:\n        throw this.raise(this.state.start, JsxErrors.UnsupportedJsxValue);\n    }\n  }\n\n  jsxParseEmptyExpression() {\n    const node = this.startNodeAt(this.state.lastTokEnd, this.state.lastTokEndLoc);\n    return this.finishNodeAt(node, \"JSXEmptyExpression\", this.state.start, this.state.startLoc);\n  }\n\n  jsxParseSpreadChild(node) {\n    this.next();\n    node.expression = this.parseExpression();\n    this.expect(types.braceR);\n    return this.finishNode(node, \"JSXSpreadChild\");\n  }\n\n  jsxParseExpressionContainer(node) {\n    if (this.match(types.braceR)) {\n      node.expression = this.jsxParseEmptyExpression();\n    } else {\n      const expression = this.parseExpression();\n      node.expression = expression;\n    }\n\n    this.expect(types.braceR);\n    return this.finishNode(node, \"JSXExpressionContainer\");\n  }\n\n  jsxParseAttribute() {\n    const node = this.startNode();\n\n    if (this.eat(types.braceL)) {\n      this.expect(types.ellipsis);\n      node.argument = this.parseMaybeAssignAllowIn();\n      this.expect(types.braceR);\n      return this.finishNode(node, \"JSXSpreadAttribute\");\n    }\n\n    node.name = this.jsxParseNamespacedName();\n    node.value = this.eat(types.eq) ? this.jsxParseAttributeValue() : null;\n    return this.finishNode(node, \"JSXAttribute\");\n  }\n\n  jsxParseOpeningElementAt(startPos, startLoc) {\n    const node = this.startNodeAt(startPos, startLoc);\n\n    if (this.match(types.jsxTagEnd)) {\n      this.expect(types.jsxTagEnd);\n      return this.finishNode(node, \"JSXOpeningFragment\");\n    }\n\n    node.name = this.jsxParseElementName();\n    return this.jsxParseOpeningElementAfterName(node);\n  }\n\n  jsxParseOpeningElementAfterName(node) {\n    const attributes = [];\n\n    while (!this.match(types.slash) && !this.match(types.jsxTagEnd)) {\n      attributes.push(this.jsxParseAttribute());\n    }\n\n    node.attributes = attributes;\n    node.selfClosing = this.eat(types.slash);\n    this.expect(types.jsxTagEnd);\n    return this.finishNode(node, \"JSXOpeningElement\");\n  }\n\n  jsxParseClosingElementAt(startPos, startLoc) {\n    const node = this.startNodeAt(startPos, startLoc);\n\n    if (this.match(types.jsxTagEnd)) {\n      this.expect(types.jsxTagEnd);\n      return this.finishNode(node, \"JSXClosingFragment\");\n    }\n\n    node.name = this.jsxParseElementName();\n    this.expect(types.jsxTagEnd);\n    return this.finishNode(node, \"JSXClosingElement\");\n  }\n\n  jsxParseElementAt(startPos, startLoc) {\n    const node = this.startNodeAt(startPos, startLoc);\n    const children = [];\n    const openingElement = this.jsxParseOpeningElementAt(startPos, startLoc);\n    let closingElement = null;\n\n    if (!openingElement.selfClosing) {\n      contents: for (;;) {\n        switch (this.state.type) {\n          case types.jsxTagStart:\n            startPos = this.state.start;\n            startLoc = this.state.startLoc;\n            this.next();\n\n            if (this.eat(types.slash)) {\n              closingElement = this.jsxParseClosingElementAt(startPos, startLoc);\n              break contents;\n            }\n\n            children.push(this.jsxParseElementAt(startPos, startLoc));\n            break;\n\n          case types.jsxText:\n            children.push(this.parseExprAtom());\n            break;\n\n          case types.braceL:\n            {\n              const node = this.startNode();\n              this.next();\n\n              if (this.match(types.ellipsis)) {\n                children.push(this.jsxParseSpreadChild(node));\n              } else {\n                children.push(this.jsxParseExpressionContainer(node));\n              }\n\n              break;\n            }\n\n          default:\n            throw this.unexpected();\n        }\n      }\n\n      if (isFragment(openingElement) && !isFragment(closingElement)) {\n        this.raise(closingElement.start, JsxErrors.MissingClosingTagFragment);\n      } else if (!isFragment(openingElement) && isFragment(closingElement)) {\n        this.raise(closingElement.start, JsxErrors.MissingClosingTagElement, getQualifiedJSXName(openingElement.name));\n      } else if (!isFragment(openingElement) && !isFragment(closingElement)) {\n        if (getQualifiedJSXName(closingElement.name) !== getQualifiedJSXName(openingElement.name)) {\n          this.raise(closingElement.start, JsxErrors.MissingClosingTagElement, getQualifiedJSXName(openingElement.name));\n        }\n      }\n    }\n\n    if (isFragment(openingElement)) {\n      node.openingFragment = openingElement;\n      node.closingFragment = closingElement;\n    } else {\n      node.openingElement = openingElement;\n      node.closingElement = closingElement;\n    }\n\n    node.children = children;\n\n    if (this.isRelational(\"<\")) {\n      throw this.raise(this.state.start, JsxErrors.UnwrappedAdjacentJSXElements);\n    }\n\n    return isFragment(openingElement) ? this.finishNode(node, \"JSXFragment\") : this.finishNode(node, \"JSXElement\");\n  }\n\n  jsxParseElement() {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    this.next();\n    return this.jsxParseElementAt(startPos, startLoc);\n  }\n\n  parseExprAtom(refExpressionErrors) {\n    if (this.match(types.jsxText)) {\n      return this.parseLiteral(this.state.value, \"JSXText\");\n    } else if (this.match(types.jsxTagStart)) {\n      return this.jsxParseElement();\n    } else if (this.isRelational(\"<\") && this.input.charCodeAt(this.state.pos) !== 33) {\n      this.finishToken(types.jsxTagStart);\n      return this.jsxParseElement();\n    } else {\n      return super.parseExprAtom(refExpressionErrors);\n    }\n  }\n\n  getTokenFromCode(code) {\n    if (this.state.inPropertyName) return super.getTokenFromCode(code);\n    const context = this.curContext();\n\n    if (context === types$1.j_expr) {\n      return this.jsxReadToken();\n    }\n\n    if (context === types$1.j_oTag || context === types$1.j_cTag) {\n      if (isIdentifierStart(code)) {\n        return this.jsxReadWord();\n      }\n\n      if (code === 62) {\n        ++this.state.pos;\n        return this.finishToken(types.jsxTagEnd);\n      }\n\n      if ((code === 34 || code === 39) && context === types$1.j_oTag) {\n        return this.jsxReadString(code);\n      }\n    }\n\n    if (code === 60 && this.state.exprAllowed && this.input.charCodeAt(this.state.pos + 1) !== 33) {\n      ++this.state.pos;\n      return this.finishToken(types.jsxTagStart);\n    }\n\n    return super.getTokenFromCode(code);\n  }\n\n  updateContext(prevType) {\n    if (this.match(types.braceL)) {\n      const curContext = this.curContext();\n\n      if (curContext === types$1.j_oTag) {\n        this.state.context.push(types$1.braceExpression);\n      } else if (curContext === types$1.j_expr) {\n        this.state.context.push(types$1.templateQuasi);\n      } else {\n        super.updateContext(prevType);\n      }\n\n      this.state.exprAllowed = true;\n    } else if (this.match(types.slash) && prevType === types.jsxTagStart) {\n      this.state.context.length -= 2;\n      this.state.context.push(types$1.j_cTag);\n      this.state.exprAllowed = false;\n    } else {\n      return super.updateContext(prevType);\n    }\n  }\n\n});\n\nclass Scope {\n  constructor(flags) {\n    this.flags = void 0;\n    this.var = [];\n    this.lexical = [];\n    this.functions = [];\n    this.flags = flags;\n  }\n\n}\nclass ScopeHandler {\n  constructor(raise, inModule) {\n    this.scopeStack = [];\n    this.undefinedExports = new Map();\n    this.undefinedPrivateNames = new Map();\n    this.raise = raise;\n    this.inModule = inModule;\n  }\n\n  get inFunction() {\n    return (this.currentVarScope().flags & SCOPE_FUNCTION) > 0;\n  }\n\n  get allowSuper() {\n    return (this.currentThisScope().flags & SCOPE_SUPER) > 0;\n  }\n\n  get allowDirectSuper() {\n    return (this.currentThisScope().flags & SCOPE_DIRECT_SUPER) > 0;\n  }\n\n  get inClass() {\n    return (this.currentThisScope().flags & SCOPE_CLASS) > 0;\n  }\n\n  get inNonArrowFunction() {\n    return (this.currentThisScope().flags & SCOPE_FUNCTION) > 0;\n  }\n\n  get treatFunctionsAsVar() {\n    return this.treatFunctionsAsVarInScope(this.currentScope());\n  }\n\n  createScope(flags) {\n    return new Scope(flags);\n  }\n\n  enter(flags) {\n    this.scopeStack.push(this.createScope(flags));\n  }\n\n  exit() {\n    this.scopeStack.pop();\n  }\n\n  treatFunctionsAsVarInScope(scope) {\n    return !!(scope.flags & SCOPE_FUNCTION || !this.inModule && scope.flags & SCOPE_PROGRAM);\n  }\n\n  declareName(name, bindingType, pos) {\n    let scope = this.currentScope();\n\n    if (bindingType & BIND_SCOPE_LEXICAL || bindingType & BIND_SCOPE_FUNCTION) {\n      this.checkRedeclarationInScope(scope, name, bindingType, pos);\n\n      if (bindingType & BIND_SCOPE_FUNCTION) {\n        scope.functions.push(name);\n      } else {\n        scope.lexical.push(name);\n      }\n\n      if (bindingType & BIND_SCOPE_LEXICAL) {\n        this.maybeExportDefined(scope, name);\n      }\n    } else if (bindingType & BIND_SCOPE_VAR) {\n      for (let i = this.scopeStack.length - 1; i >= 0; --i) {\n        scope = this.scopeStack[i];\n        this.checkRedeclarationInScope(scope, name, bindingType, pos);\n        scope.var.push(name);\n        this.maybeExportDefined(scope, name);\n        if (scope.flags & SCOPE_VAR) break;\n      }\n    }\n\n    if (this.inModule && scope.flags & SCOPE_PROGRAM) {\n      this.undefinedExports.delete(name);\n    }\n  }\n\n  maybeExportDefined(scope, name) {\n    if (this.inModule && scope.flags & SCOPE_PROGRAM) {\n      this.undefinedExports.delete(name);\n    }\n  }\n\n  checkRedeclarationInScope(scope, name, bindingType, pos) {\n    if (this.isRedeclaredInScope(scope, name, bindingType)) {\n      this.raise(pos, ErrorMessages.VarRedeclaration, name);\n    }\n  }\n\n  isRedeclaredInScope(scope, name, bindingType) {\n    if (!(bindingType & BIND_KIND_VALUE)) return false;\n\n    if (bindingType & BIND_SCOPE_LEXICAL) {\n      return scope.lexical.indexOf(name) > -1 || scope.functions.indexOf(name) > -1 || scope.var.indexOf(name) > -1;\n    }\n\n    if (bindingType & BIND_SCOPE_FUNCTION) {\n      return scope.lexical.indexOf(name) > -1 || !this.treatFunctionsAsVarInScope(scope) && scope.var.indexOf(name) > -1;\n    }\n\n    return scope.lexical.indexOf(name) > -1 && !(scope.flags & SCOPE_SIMPLE_CATCH && scope.lexical[0] === name) || !this.treatFunctionsAsVarInScope(scope) && scope.functions.indexOf(name) > -1;\n  }\n\n  checkLocalExport(id) {\n    if (this.scopeStack[0].lexical.indexOf(id.name) === -1 && this.scopeStack[0].var.indexOf(id.name) === -1 && this.scopeStack[0].functions.indexOf(id.name) === -1) {\n      this.undefinedExports.set(id.name, id.start);\n    }\n  }\n\n  currentScope() {\n    return this.scopeStack[this.scopeStack.length - 1];\n  }\n\n  currentVarScope() {\n    for (let i = this.scopeStack.length - 1;; i--) {\n      const scope = this.scopeStack[i];\n\n      if (scope.flags & SCOPE_VAR) {\n        return scope;\n      }\n    }\n  }\n\n  currentThisScope() {\n    for (let i = this.scopeStack.length - 1;; i--) {\n      const scope = this.scopeStack[i];\n\n      if ((scope.flags & SCOPE_VAR || scope.flags & SCOPE_CLASS) && !(scope.flags & SCOPE_ARROW)) {\n        return scope;\n      }\n    }\n  }\n\n}\n\nclass TypeScriptScope extends Scope {\n  constructor(...args) {\n    super(...args);\n    this.types = [];\n    this.enums = [];\n    this.constEnums = [];\n    this.classes = [];\n    this.exportOnlyBindings = [];\n  }\n\n}\n\nclass TypeScriptScopeHandler extends ScopeHandler {\n  createScope(flags) {\n    return new TypeScriptScope(flags);\n  }\n\n  declareName(name, bindingType, pos) {\n    const scope = this.currentScope();\n\n    if (bindingType & BIND_FLAGS_TS_EXPORT_ONLY) {\n      this.maybeExportDefined(scope, name);\n      scope.exportOnlyBindings.push(name);\n      return;\n    }\n\n    super.declareName(...arguments);\n\n    if (bindingType & BIND_KIND_TYPE) {\n      if (!(bindingType & BIND_KIND_VALUE)) {\n        this.checkRedeclarationInScope(scope, name, bindingType, pos);\n        this.maybeExportDefined(scope, name);\n      }\n\n      scope.types.push(name);\n    }\n\n    if (bindingType & BIND_FLAGS_TS_ENUM) scope.enums.push(name);\n    if (bindingType & BIND_FLAGS_TS_CONST_ENUM) scope.constEnums.push(name);\n    if (bindingType & BIND_FLAGS_CLASS) scope.classes.push(name);\n  }\n\n  isRedeclaredInScope(scope, name, bindingType) {\n    if (scope.enums.indexOf(name) > -1) {\n      if (bindingType & BIND_FLAGS_TS_ENUM) {\n        const isConst = !!(bindingType & BIND_FLAGS_TS_CONST_ENUM);\n        const wasConst = scope.constEnums.indexOf(name) > -1;\n        return isConst !== wasConst;\n      }\n\n      return true;\n    }\n\n    if (bindingType & BIND_FLAGS_CLASS && scope.classes.indexOf(name) > -1) {\n      if (scope.lexical.indexOf(name) > -1) {\n        return !!(bindingType & BIND_KIND_VALUE);\n      } else {\n        return false;\n      }\n    }\n\n    if (bindingType & BIND_KIND_TYPE && scope.types.indexOf(name) > -1) {\n      return true;\n    }\n\n    return super.isRedeclaredInScope(...arguments);\n  }\n\n  checkLocalExport(id) {\n    if (this.scopeStack[0].types.indexOf(id.name) === -1 && this.scopeStack[0].exportOnlyBindings.indexOf(id.name) === -1) {\n      super.checkLocalExport(id);\n    }\n  }\n\n}\n\nconst PARAM = 0b0000,\n      PARAM_YIELD = 0b0001,\n      PARAM_AWAIT = 0b0010,\n      PARAM_RETURN = 0b0100,\n      PARAM_IN = 0b1000;\nclass ProductionParameterHandler {\n  constructor() {\n    this.stacks = [];\n  }\n\n  enter(flags) {\n    this.stacks.push(flags);\n  }\n\n  exit() {\n    this.stacks.pop();\n  }\n\n  currentFlags() {\n    return this.stacks[this.stacks.length - 1];\n  }\n\n  get hasAwait() {\n    return (this.currentFlags() & PARAM_AWAIT) > 0;\n  }\n\n  get hasYield() {\n    return (this.currentFlags() & PARAM_YIELD) > 0;\n  }\n\n  get hasReturn() {\n    return (this.currentFlags() & PARAM_RETURN) > 0;\n  }\n\n  get hasIn() {\n    return (this.currentFlags() & PARAM_IN) > 0;\n  }\n\n}\nfunction functionFlags(isAsync, isGenerator) {\n  return (isAsync ? PARAM_AWAIT : 0) | (isGenerator ? PARAM_YIELD : 0);\n}\n\nfunction nonNull(x) {\n  if (x == null) {\n    throw new Error(`Unexpected ${x} value.`);\n  }\n\n  return x;\n}\n\nfunction assert(x) {\n  if (!x) {\n    throw new Error(\"Assert fail\");\n  }\n}\n\nconst TSErrors = Object.freeze({\n  ClassMethodHasDeclare: \"Class methods cannot have the 'declare' modifier\",\n  ClassMethodHasReadonly: \"Class methods cannot have the 'readonly' modifier\",\n  ConstructorHasTypeParameters: \"Type parameters cannot appear on a constructor declaration.\",\n  DeclareClassFieldHasInitializer: \"Initializers are not allowed in ambient contexts.\",\n  DeclareFunctionHasImplementation: \"An implementation cannot be declared in ambient contexts.\",\n  DuplicateModifier: \"Duplicate modifier: '%0'\",\n  EmptyHeritageClauseType: \"'%0' list cannot be empty.\",\n  EmptyTypeArguments: \"Type argument list cannot be empty.\",\n  EmptyTypeParameters: \"Type parameter list cannot be empty.\",\n  IndexSignatureHasAbstract: \"Index signatures cannot have the 'abstract' modifier\",\n  IndexSignatureHasAccessibility: \"Index signatures cannot have an accessibility modifier ('%0')\",\n  IndexSignatureHasStatic: \"Index signatures cannot have the 'static' modifier\",\n  IndexSignatureHasDeclare: \"Index signatures cannot have the 'declare' modifier\",\n  InvalidTupleMemberLabel: \"Tuple members must be labeled with a simple identifier.\",\n  MixedLabeledAndUnlabeledElements: \"Tuple members must all have names or all not have names.\",\n  OptionalTypeBeforeRequired: \"A required element cannot follow an optional element.\",\n  PatternIsOptional: \"A binding pattern parameter cannot be optional in an implementation signature.\",\n  PrivateElementHasAbstract: \"Private elements cannot have the 'abstract' modifier.\",\n  PrivateElementHasAccessibility: \"Private elements cannot have an accessibility modifier ('%0')\",\n  TypeAnnotationAfterAssign: \"Type annotations must come before default assignments, e.g. instead of `age = 25: number` use `age: number = 25`\",\n  UnexpectedParameterModifier: \"A parameter property is only allowed in a constructor implementation.\",\n  UnexpectedReadonly: \"'readonly' type modifier is only permitted on array and tuple literal types.\",\n  UnexpectedTypeAnnotation: \"Did not expect a type annotation here.\",\n  UnexpectedTypeCastInParameter: \"Unexpected type cast in parameter position.\",\n  UnsupportedImportTypeArgument: \"Argument in a type import must be a string literal\",\n  UnsupportedParameterPropertyKind: \"A parameter property may not be declared using a binding pattern.\",\n  UnsupportedSignatureParameterKind: \"Name in a signature must be an Identifier, ObjectPattern or ArrayPattern, instead got %0\"\n});\n\nfunction keywordTypeFromName(value) {\n  switch (value) {\n    case \"any\":\n      return \"TSAnyKeyword\";\n\n    case \"boolean\":\n      return \"TSBooleanKeyword\";\n\n    case \"bigint\":\n      return \"TSBigIntKeyword\";\n\n    case \"never\":\n      return \"TSNeverKeyword\";\n\n    case \"number\":\n      return \"TSNumberKeyword\";\n\n    case \"object\":\n      return \"TSObjectKeyword\";\n\n    case \"string\":\n      return \"TSStringKeyword\";\n\n    case \"symbol\":\n      return \"TSSymbolKeyword\";\n\n    case \"undefined\":\n      return \"TSUndefinedKeyword\";\n\n    case \"unknown\":\n      return \"TSUnknownKeyword\";\n\n    default:\n      return undefined;\n  }\n}\n\nvar typescript = (superClass => class extends superClass {\n  getScopeHandler() {\n    return TypeScriptScopeHandler;\n  }\n\n  tsIsIdentifier() {\n    return this.match(types.name);\n  }\n\n  tsNextTokenCanFollowModifier() {\n    this.next();\n    return (this.match(types.bracketL) || this.match(types.braceL) || this.match(types.star) || this.match(types.ellipsis) || this.match(types.hash) || this.isLiteralPropertyName()) && !this.hasPrecedingLineBreak();\n  }\n\n  tsParseModifier(allowedModifiers) {\n    if (!this.match(types.name)) {\n      return undefined;\n    }\n\n    const modifier = this.state.value;\n\n    if (allowedModifiers.indexOf(modifier) !== -1 && this.tsTryParse(this.tsNextTokenCanFollowModifier.bind(this))) {\n      return modifier;\n    }\n\n    return undefined;\n  }\n\n  tsParseModifiers(modified, allowedModifiers) {\n    for (;;) {\n      const startPos = this.state.start;\n      const modifier = this.tsParseModifier(allowedModifiers);\n      if (!modifier) break;\n\n      if (Object.hasOwnProperty.call(modified, modifier)) {\n        this.raise(startPos, TSErrors.DuplicateModifier, modifier);\n      }\n\n      modified[modifier] = true;\n    }\n  }\n\n  tsIsListTerminator(kind) {\n    switch (kind) {\n      case \"EnumMembers\":\n      case \"TypeMembers\":\n        return this.match(types.braceR);\n\n      case \"HeritageClauseElement\":\n        return this.match(types.braceL);\n\n      case \"TupleElementTypes\":\n        return this.match(types.bracketR);\n\n      case \"TypeParametersOrArguments\":\n        return this.isRelational(\">\");\n    }\n\n    throw new Error(\"Unreachable\");\n  }\n\n  tsParseList(kind, parseElement) {\n    const result = [];\n\n    while (!this.tsIsListTerminator(kind)) {\n      result.push(parseElement());\n    }\n\n    return result;\n  }\n\n  tsParseDelimitedList(kind, parseElement) {\n    return nonNull(this.tsParseDelimitedListWorker(kind, parseElement, true));\n  }\n\n  tsParseDelimitedListWorker(kind, parseElement, expectSuccess) {\n    const result = [];\n\n    for (;;) {\n      if (this.tsIsListTerminator(kind)) {\n        break;\n      }\n\n      const element = parseElement();\n\n      if (element == null) {\n        return undefined;\n      }\n\n      result.push(element);\n\n      if (this.eat(types.comma)) {\n        continue;\n      }\n\n      if (this.tsIsListTerminator(kind)) {\n        break;\n      }\n\n      if (expectSuccess) {\n        this.expect(types.comma);\n      }\n\n      return undefined;\n    }\n\n    return result;\n  }\n\n  tsParseBracketedList(kind, parseElement, bracket, skipFirstToken) {\n    if (!skipFirstToken) {\n      if (bracket) {\n        this.expect(types.bracketL);\n      } else {\n        this.expectRelational(\"<\");\n      }\n    }\n\n    const result = this.tsParseDelimitedList(kind, parseElement);\n\n    if (bracket) {\n      this.expect(types.bracketR);\n    } else {\n      this.expectRelational(\">\");\n    }\n\n    return result;\n  }\n\n  tsParseImportType() {\n    const node = this.startNode();\n    this.expect(types._import);\n    this.expect(types.parenL);\n\n    if (!this.match(types.string)) {\n      this.raise(this.state.start, TSErrors.UnsupportedImportTypeArgument);\n    }\n\n    node.argument = this.parseExprAtom();\n    this.expect(types.parenR);\n\n    if (this.eat(types.dot)) {\n      node.qualifier = this.tsParseEntityName(true);\n    }\n\n    if (this.isRelational(\"<\")) {\n      node.typeParameters = this.tsParseTypeArguments();\n    }\n\n    return this.finishNode(node, \"TSImportType\");\n  }\n\n  tsParseEntityName(allowReservedWords) {\n    let entity = this.parseIdentifier();\n\n    while (this.eat(types.dot)) {\n      const node = this.startNodeAtNode(entity);\n      node.left = entity;\n      node.right = this.parseIdentifier(allowReservedWords);\n      entity = this.finishNode(node, \"TSQualifiedName\");\n    }\n\n    return entity;\n  }\n\n  tsParseTypeReference() {\n    const node = this.startNode();\n    node.typeName = this.tsParseEntityName(false);\n\n    if (!this.hasPrecedingLineBreak() && this.isRelational(\"<\")) {\n      node.typeParameters = this.tsParseTypeArguments();\n    }\n\n    return this.finishNode(node, \"TSTypeReference\");\n  }\n\n  tsParseThisTypePredicate(lhs) {\n    this.next();\n    const node = this.startNodeAtNode(lhs);\n    node.parameterName = lhs;\n    node.typeAnnotation = this.tsParseTypeAnnotation(false);\n    node.asserts = false;\n    return this.finishNode(node, \"TSTypePredicate\");\n  }\n\n  tsParseThisTypeNode() {\n    const node = this.startNode();\n    this.next();\n    return this.finishNode(node, \"TSThisType\");\n  }\n\n  tsParseTypeQuery() {\n    const node = this.startNode();\n    this.expect(types._typeof);\n\n    if (this.match(types._import)) {\n      node.exprName = this.tsParseImportType();\n    } else {\n      node.exprName = this.tsParseEntityName(true);\n    }\n\n    return this.finishNode(node, \"TSTypeQuery\");\n  }\n\n  tsParseTypeParameter() {\n    const node = this.startNode();\n    node.name = this.parseIdentifierName(node.start);\n    node.constraint = this.tsEatThenParseType(types._extends);\n    node.default = this.tsEatThenParseType(types.eq);\n    return this.finishNode(node, \"TSTypeParameter\");\n  }\n\n  tsTryParseTypeParameters() {\n    if (this.isRelational(\"<\")) {\n      return this.tsParseTypeParameters();\n    }\n  }\n\n  tsParseTypeParameters() {\n    const node = this.startNode();\n\n    if (this.isRelational(\"<\") || this.match(types.jsxTagStart)) {\n      this.next();\n    } else {\n      this.unexpected();\n    }\n\n    node.params = this.tsParseBracketedList(\"TypeParametersOrArguments\", this.tsParseTypeParameter.bind(this), false, true);\n\n    if (node.params.length === 0) {\n      this.raise(node.start, TSErrors.EmptyTypeParameters);\n    }\n\n    return this.finishNode(node, \"TSTypeParameterDeclaration\");\n  }\n\n  tsTryNextParseConstantContext() {\n    if (this.lookahead().type === types._const) {\n      this.next();\n      return this.tsParseTypeReference();\n    }\n\n    return null;\n  }\n\n  tsFillSignature(returnToken, signature) {\n    const returnTokenRequired = returnToken === types.arrow;\n    signature.typeParameters = this.tsTryParseTypeParameters();\n    this.expect(types.parenL);\n    signature.parameters = this.tsParseBindingListForSignature();\n\n    if (returnTokenRequired) {\n      signature.typeAnnotation = this.tsParseTypeOrTypePredicateAnnotation(returnToken);\n    } else if (this.match(returnToken)) {\n      signature.typeAnnotation = this.tsParseTypeOrTypePredicateAnnotation(returnToken);\n    }\n  }\n\n  tsParseBindingListForSignature() {\n    return this.parseBindingList(types.parenR, 41).map(pattern => {\n      if (pattern.type !== \"Identifier\" && pattern.type !== \"RestElement\" && pattern.type !== \"ObjectPattern\" && pattern.type !== \"ArrayPattern\") {\n        this.raise(pattern.start, TSErrors.UnsupportedSignatureParameterKind, pattern.type);\n      }\n\n      return pattern;\n    });\n  }\n\n  tsParseTypeMemberSemicolon() {\n    if (!this.eat(types.comma)) {\n      this.semicolon();\n    }\n  }\n\n  tsParseSignatureMember(kind, node) {\n    this.tsFillSignature(types.colon, node);\n    this.tsParseTypeMemberSemicolon();\n    return this.finishNode(node, kind);\n  }\n\n  tsIsUnambiguouslyIndexSignature() {\n    this.next();\n    return this.eat(types.name) && this.match(types.colon);\n  }\n\n  tsTryParseIndexSignature(node) {\n    if (!(this.match(types.bracketL) && this.tsLookAhead(this.tsIsUnambiguouslyIndexSignature.bind(this)))) {\n      return undefined;\n    }\n\n    this.expect(types.bracketL);\n    const id = this.parseIdentifier();\n    id.typeAnnotation = this.tsParseTypeAnnotation();\n    this.resetEndLocation(id);\n    this.expect(types.bracketR);\n    node.parameters = [id];\n    const type = this.tsTryParseTypeAnnotation();\n    if (type) node.typeAnnotation = type;\n    this.tsParseTypeMemberSemicolon();\n    return this.finishNode(node, \"TSIndexSignature\");\n  }\n\n  tsParsePropertyOrMethodSignature(node, readonly) {\n    if (this.eat(types.question)) node.optional = true;\n    const nodeAny = node;\n\n    if (!readonly && (this.match(types.parenL) || this.isRelational(\"<\"))) {\n      const method = nodeAny;\n      this.tsFillSignature(types.colon, method);\n      this.tsParseTypeMemberSemicolon();\n      return this.finishNode(method, \"TSMethodSignature\");\n    } else {\n      const property = nodeAny;\n      if (readonly) property.readonly = true;\n      const type = this.tsTryParseTypeAnnotation();\n      if (type) property.typeAnnotation = type;\n      this.tsParseTypeMemberSemicolon();\n      return this.finishNode(property, \"TSPropertySignature\");\n    }\n  }\n\n  tsParseTypeMember() {\n    const node = this.startNode();\n\n    if (this.match(types.parenL) || this.isRelational(\"<\")) {\n      return this.tsParseSignatureMember(\"TSCallSignatureDeclaration\", node);\n    }\n\n    if (this.match(types._new)) {\n      const id = this.startNode();\n      this.next();\n\n      if (this.match(types.parenL) || this.isRelational(\"<\")) {\n        return this.tsParseSignatureMember(\"TSConstructSignatureDeclaration\", node);\n      } else {\n        node.key = this.createIdentifier(id, \"new\");\n        return this.tsParsePropertyOrMethodSignature(node, false);\n      }\n    }\n\n    const readonly = !!this.tsParseModifier([\"readonly\"]);\n    const idx = this.tsTryParseIndexSignature(node);\n\n    if (idx) {\n      if (readonly) node.readonly = true;\n      return idx;\n    }\n\n    this.parsePropertyName(node, false);\n    return this.tsParsePropertyOrMethodSignature(node, readonly);\n  }\n\n  tsParseTypeLiteral() {\n    const node = this.startNode();\n    node.members = this.tsParseObjectTypeMembers();\n    return this.finishNode(node, \"TSTypeLiteral\");\n  }\n\n  tsParseObjectTypeMembers() {\n    this.expect(types.braceL);\n    const members = this.tsParseList(\"TypeMembers\", this.tsParseTypeMember.bind(this));\n    this.expect(types.braceR);\n    return members;\n  }\n\n  tsIsStartOfMappedType() {\n    this.next();\n\n    if (this.eat(types.plusMin)) {\n      return this.isContextual(\"readonly\");\n    }\n\n    if (this.isContextual(\"readonly\")) {\n      this.next();\n    }\n\n    if (!this.match(types.bracketL)) {\n      return false;\n    }\n\n    this.next();\n\n    if (!this.tsIsIdentifier()) {\n      return false;\n    }\n\n    this.next();\n    return this.match(types._in);\n  }\n\n  tsParseMappedTypeParameter() {\n    const node = this.startNode();\n    node.name = this.parseIdentifierName(node.start);\n    node.constraint = this.tsExpectThenParseType(types._in);\n    return this.finishNode(node, \"TSTypeParameter\");\n  }\n\n  tsParseMappedType() {\n    const node = this.startNode();\n    this.expect(types.braceL);\n\n    if (this.match(types.plusMin)) {\n      node.readonly = this.state.value;\n      this.next();\n      this.expectContextual(\"readonly\");\n    } else if (this.eatContextual(\"readonly\")) {\n      node.readonly = true;\n    }\n\n    this.expect(types.bracketL);\n    node.typeParameter = this.tsParseMappedTypeParameter();\n    node.nameType = this.eatContextual(\"as\") ? this.tsParseType() : null;\n    this.expect(types.bracketR);\n\n    if (this.match(types.plusMin)) {\n      node.optional = this.state.value;\n      this.next();\n      this.expect(types.question);\n    } else if (this.eat(types.question)) {\n      node.optional = true;\n    }\n\n    node.typeAnnotation = this.tsTryParseType();\n    this.semicolon();\n    this.expect(types.braceR);\n    return this.finishNode(node, \"TSMappedType\");\n  }\n\n  tsParseTupleType() {\n    const node = this.startNode();\n    node.elementTypes = this.tsParseBracketedList(\"TupleElementTypes\", this.tsParseTupleElementType.bind(this), true, false);\n    let seenOptionalElement = false;\n    let labeledElements = null;\n    node.elementTypes.forEach(elementNode => {\n      var _labeledElements;\n\n      let {\n        type\n      } = elementNode;\n\n      if (seenOptionalElement && type !== \"TSRestType\" && type !== \"TSOptionalType\" && !(type === \"TSNamedTupleMember\" && elementNode.optional)) {\n        this.raise(elementNode.start, TSErrors.OptionalTypeBeforeRequired);\n      }\n\n      seenOptionalElement = seenOptionalElement || type === \"TSNamedTupleMember\" && elementNode.optional || type === \"TSOptionalType\";\n\n      if (type === \"TSRestType\") {\n        elementNode = elementNode.typeAnnotation;\n        type = elementNode.type;\n      }\n\n      const isLabeled = type === \"TSNamedTupleMember\";\n      labeledElements = (_labeledElements = labeledElements) != null ? _labeledElements : isLabeled;\n\n      if (labeledElements !== isLabeled) {\n        this.raise(elementNode.start, TSErrors.MixedLabeledAndUnlabeledElements);\n      }\n    });\n    return this.finishNode(node, \"TSTupleType\");\n  }\n\n  tsParseTupleElementType() {\n    const {\n      start: startPos,\n      startLoc\n    } = this.state;\n    const rest = this.eat(types.ellipsis);\n    let type = this.tsParseType();\n    const optional = this.eat(types.question);\n    const labeled = this.eat(types.colon);\n\n    if (labeled) {\n      const labeledNode = this.startNodeAtNode(type);\n      labeledNode.optional = optional;\n\n      if (type.type === \"TSTypeReference\" && !type.typeParameters && type.typeName.type === \"Identifier\") {\n        labeledNode.label = type.typeName;\n      } else {\n        this.raise(type.start, TSErrors.InvalidTupleMemberLabel);\n        labeledNode.label = type;\n      }\n\n      labeledNode.elementType = this.tsParseType();\n      type = this.finishNode(labeledNode, \"TSNamedTupleMember\");\n    } else if (optional) {\n      const optionalTypeNode = this.startNodeAtNode(type);\n      optionalTypeNode.typeAnnotation = type;\n      type = this.finishNode(optionalTypeNode, \"TSOptionalType\");\n    }\n\n    if (rest) {\n      const restNode = this.startNodeAt(startPos, startLoc);\n      restNode.typeAnnotation = type;\n      type = this.finishNode(restNode, \"TSRestType\");\n    }\n\n    return type;\n  }\n\n  tsParseParenthesizedType() {\n    const node = this.startNode();\n    this.expect(types.parenL);\n    node.typeAnnotation = this.tsParseType();\n    this.expect(types.parenR);\n    return this.finishNode(node, \"TSParenthesizedType\");\n  }\n\n  tsParseFunctionOrConstructorType(type) {\n    const node = this.startNode();\n\n    if (type === \"TSConstructorType\") {\n      this.expect(types._new);\n    }\n\n    this.tsFillSignature(types.arrow, node);\n    return this.finishNode(node, type);\n  }\n\n  tsParseLiteralTypeNode() {\n    const node = this.startNode();\n\n    node.literal = (() => {\n      switch (this.state.type) {\n        case types.num:\n        case types.bigint:\n        case types.string:\n        case types._true:\n        case types._false:\n          return this.parseExprAtom();\n\n        default:\n          throw this.unexpected();\n      }\n    })();\n\n    return this.finishNode(node, \"TSLiteralType\");\n  }\n\n  tsParseTemplateLiteralType() {\n    const node = this.startNode();\n    node.literal = this.parseTemplate(false);\n    return this.finishNode(node, \"TSLiteralType\");\n  }\n\n  parseTemplateSubstitution() {\n    if (this.state.inType) return this.tsParseType();\n    return super.parseTemplateSubstitution();\n  }\n\n  tsParseThisTypeOrThisTypePredicate() {\n    const thisKeyword = this.tsParseThisTypeNode();\n\n    if (this.isContextual(\"is\") && !this.hasPrecedingLineBreak()) {\n      return this.tsParseThisTypePredicate(thisKeyword);\n    } else {\n      return thisKeyword;\n    }\n  }\n\n  tsParseNonArrayType() {\n    switch (this.state.type) {\n      case types.name:\n      case types._void:\n      case types._null:\n        {\n          const type = this.match(types._void) ? \"TSVoidKeyword\" : this.match(types._null) ? \"TSNullKeyword\" : keywordTypeFromName(this.state.value);\n\n          if (type !== undefined && this.lookaheadCharCode() !== 46) {\n            const node = this.startNode();\n            this.next();\n            return this.finishNode(node, type);\n          }\n\n          return this.tsParseTypeReference();\n        }\n\n      case types.string:\n      case types.num:\n      case types.bigint:\n      case types._true:\n      case types._false:\n        return this.tsParseLiteralTypeNode();\n\n      case types.plusMin:\n        if (this.state.value === \"-\") {\n          const node = this.startNode();\n          const nextToken = this.lookahead();\n\n          if (nextToken.type !== types.num && nextToken.type !== types.bigint) {\n            throw this.unexpected();\n          }\n\n          node.literal = this.parseMaybeUnary();\n          return this.finishNode(node, \"TSLiteralType\");\n        }\n\n        break;\n\n      case types._this:\n        return this.tsParseThisTypeOrThisTypePredicate();\n\n      case types._typeof:\n        return this.tsParseTypeQuery();\n\n      case types._import:\n        return this.tsParseImportType();\n\n      case types.braceL:\n        return this.tsLookAhead(this.tsIsStartOfMappedType.bind(this)) ? this.tsParseMappedType() : this.tsParseTypeLiteral();\n\n      case types.bracketL:\n        return this.tsParseTupleType();\n\n      case types.parenL:\n        return this.tsParseParenthesizedType();\n\n      case types.backQuote:\n        return this.tsParseTemplateLiteralType();\n    }\n\n    throw this.unexpected();\n  }\n\n  tsParseArrayTypeOrHigher() {\n    let type = this.tsParseNonArrayType();\n\n    while (!this.hasPrecedingLineBreak() && this.eat(types.bracketL)) {\n      if (this.match(types.bracketR)) {\n        const node = this.startNodeAtNode(type);\n        node.elementType = type;\n        this.expect(types.bracketR);\n        type = this.finishNode(node, \"TSArrayType\");\n      } else {\n        const node = this.startNodeAtNode(type);\n        node.objectType = type;\n        node.indexType = this.tsParseType();\n        this.expect(types.bracketR);\n        type = this.finishNode(node, \"TSIndexedAccessType\");\n      }\n    }\n\n    return type;\n  }\n\n  tsParseTypeOperator(operator) {\n    const node = this.startNode();\n    this.expectContextual(operator);\n    node.operator = operator;\n    node.typeAnnotation = this.tsParseTypeOperatorOrHigher();\n\n    if (operator === \"readonly\") {\n      this.tsCheckTypeAnnotationForReadOnly(node);\n    }\n\n    return this.finishNode(node, \"TSTypeOperator\");\n  }\n\n  tsCheckTypeAnnotationForReadOnly(node) {\n    switch (node.typeAnnotation.type) {\n      case \"TSTupleType\":\n      case \"TSArrayType\":\n        return;\n\n      default:\n        this.raise(node.start, TSErrors.UnexpectedReadonly);\n    }\n  }\n\n  tsParseInferType() {\n    const node = this.startNode();\n    this.expectContextual(\"infer\");\n    const typeParameter = this.startNode();\n    typeParameter.name = this.parseIdentifierName(typeParameter.start);\n    node.typeParameter = this.finishNode(typeParameter, \"TSTypeParameter\");\n    return this.finishNode(node, \"TSInferType\");\n  }\n\n  tsParseTypeOperatorOrHigher() {\n    const operator = [\"keyof\", \"unique\", \"readonly\"].find(kw => this.isContextual(kw));\n    return operator ? this.tsParseTypeOperator(operator) : this.isContextual(\"infer\") ? this.tsParseInferType() : this.tsParseArrayTypeOrHigher();\n  }\n\n  tsParseUnionOrIntersectionType(kind, parseConstituentType, operator) {\n    this.eat(operator);\n    let type = parseConstituentType();\n\n    if (this.match(operator)) {\n      const types = [type];\n\n      while (this.eat(operator)) {\n        types.push(parseConstituentType());\n      }\n\n      const node = this.startNodeAtNode(type);\n      node.types = types;\n      type = this.finishNode(node, kind);\n    }\n\n    return type;\n  }\n\n  tsParseIntersectionTypeOrHigher() {\n    return this.tsParseUnionOrIntersectionType(\"TSIntersectionType\", this.tsParseTypeOperatorOrHigher.bind(this), types.bitwiseAND);\n  }\n\n  tsParseUnionTypeOrHigher() {\n    return this.tsParseUnionOrIntersectionType(\"TSUnionType\", this.tsParseIntersectionTypeOrHigher.bind(this), types.bitwiseOR);\n  }\n\n  tsIsStartOfFunctionType() {\n    if (this.isRelational(\"<\")) {\n      return true;\n    }\n\n    return this.match(types.parenL) && this.tsLookAhead(this.tsIsUnambiguouslyStartOfFunctionType.bind(this));\n  }\n\n  tsSkipParameterStart() {\n    if (this.match(types.name) || this.match(types._this)) {\n      this.next();\n      return true;\n    }\n\n    if (this.match(types.braceL)) {\n      let braceStackCounter = 1;\n      this.next();\n\n      while (braceStackCounter > 0) {\n        if (this.match(types.braceL)) {\n          ++braceStackCounter;\n        } else if (this.match(types.braceR)) {\n          --braceStackCounter;\n        }\n\n        this.next();\n      }\n\n      return true;\n    }\n\n    if (this.match(types.bracketL)) {\n      let braceStackCounter = 1;\n      this.next();\n\n      while (braceStackCounter > 0) {\n        if (this.match(types.bracketL)) {\n          ++braceStackCounter;\n        } else if (this.match(types.bracketR)) {\n          --braceStackCounter;\n        }\n\n        this.next();\n      }\n\n      return true;\n    }\n\n    return false;\n  }\n\n  tsIsUnambiguouslyStartOfFunctionType() {\n    this.next();\n\n    if (this.match(types.parenR) || this.match(types.ellipsis)) {\n      return true;\n    }\n\n    if (this.tsSkipParameterStart()) {\n      if (this.match(types.colon) || this.match(types.comma) || this.match(types.question) || this.match(types.eq)) {\n        return true;\n      }\n\n      if (this.match(types.parenR)) {\n        this.next();\n\n        if (this.match(types.arrow)) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  }\n\n  tsParseTypeOrTypePredicateAnnotation(returnToken) {\n    return this.tsInType(() => {\n      const t = this.startNode();\n      this.expect(returnToken);\n      const asserts = !!this.tsTryParse(this.tsParseTypePredicateAsserts.bind(this));\n\n      if (asserts && this.match(types._this)) {\n        let thisTypePredicate = this.tsParseThisTypeOrThisTypePredicate();\n\n        if (thisTypePredicate.type === \"TSThisType\") {\n          const node = this.startNodeAtNode(t);\n          node.parameterName = thisTypePredicate;\n          node.asserts = true;\n          thisTypePredicate = this.finishNode(node, \"TSTypePredicate\");\n        } else {\n          thisTypePredicate.asserts = true;\n        }\n\n        t.typeAnnotation = thisTypePredicate;\n        return this.finishNode(t, \"TSTypeAnnotation\");\n      }\n\n      const typePredicateVariable = this.tsIsIdentifier() && this.tsTryParse(this.tsParseTypePredicatePrefix.bind(this));\n\n      if (!typePredicateVariable) {\n        if (!asserts) {\n          return this.tsParseTypeAnnotation(false, t);\n        }\n\n        const node = this.startNodeAtNode(t);\n        node.parameterName = this.parseIdentifier();\n        node.asserts = asserts;\n        t.typeAnnotation = this.finishNode(node, \"TSTypePredicate\");\n        return this.finishNode(t, \"TSTypeAnnotation\");\n      }\n\n      const type = this.tsParseTypeAnnotation(false);\n      const node = this.startNodeAtNode(t);\n      node.parameterName = typePredicateVariable;\n      node.typeAnnotation = type;\n      node.asserts = asserts;\n      t.typeAnnotation = this.finishNode(node, \"TSTypePredicate\");\n      return this.finishNode(t, \"TSTypeAnnotation\");\n    });\n  }\n\n  tsTryParseTypeOrTypePredicateAnnotation() {\n    return this.match(types.colon) ? this.tsParseTypeOrTypePredicateAnnotation(types.colon) : undefined;\n  }\n\n  tsTryParseTypeAnnotation() {\n    return this.match(types.colon) ? this.tsParseTypeAnnotation() : undefined;\n  }\n\n  tsTryParseType() {\n    return this.tsEatThenParseType(types.colon);\n  }\n\n  tsParseTypePredicatePrefix() {\n    const id = this.parseIdentifier();\n\n    if (this.isContextual(\"is\") && !this.hasPrecedingLineBreak()) {\n      this.next();\n      return id;\n    }\n  }\n\n  tsParseTypePredicateAsserts() {\n    if (!this.match(types.name) || this.state.value !== \"asserts\" || this.hasPrecedingLineBreak()) {\n      return false;\n    }\n\n    const containsEsc = this.state.containsEsc;\n    this.next();\n\n    if (!this.match(types.name) && !this.match(types._this)) {\n      return false;\n    }\n\n    if (containsEsc) {\n      this.raise(this.state.lastTokStart, ErrorMessages.InvalidEscapedReservedWord, \"asserts\");\n    }\n\n    return true;\n  }\n\n  tsParseTypeAnnotation(eatColon = true, t = this.startNode()) {\n    this.tsInType(() => {\n      if (eatColon) this.expect(types.colon);\n      t.typeAnnotation = this.tsParseType();\n    });\n    return this.finishNode(t, \"TSTypeAnnotation\");\n  }\n\n  tsParseType() {\n    assert(this.state.inType);\n    const type = this.tsParseNonConditionalType();\n\n    if (this.hasPrecedingLineBreak() || !this.eat(types._extends)) {\n      return type;\n    }\n\n    const node = this.startNodeAtNode(type);\n    node.checkType = type;\n    node.extendsType = this.tsParseNonConditionalType();\n    this.expect(types.question);\n    node.trueType = this.tsParseType();\n    this.expect(types.colon);\n    node.falseType = this.tsParseType();\n    return this.finishNode(node, \"TSConditionalType\");\n  }\n\n  tsParseNonConditionalType() {\n    if (this.tsIsStartOfFunctionType()) {\n      return this.tsParseFunctionOrConstructorType(\"TSFunctionType\");\n    }\n\n    if (this.match(types._new)) {\n      return this.tsParseFunctionOrConstructorType(\"TSConstructorType\");\n    }\n\n    return this.tsParseUnionTypeOrHigher();\n  }\n\n  tsParseTypeAssertion() {\n    const node = this.startNode();\n\n    const _const = this.tsTryNextParseConstantContext();\n\n    node.typeAnnotation = _const || this.tsNextThenParseType();\n    this.expectRelational(\">\");\n    node.expression = this.parseMaybeUnary();\n    return this.finishNode(node, \"TSTypeAssertion\");\n  }\n\n  tsParseHeritageClause(descriptor) {\n    const originalStart = this.state.start;\n    const delimitedList = this.tsParseDelimitedList(\"HeritageClauseElement\", this.tsParseExpressionWithTypeArguments.bind(this));\n\n    if (!delimitedList.length) {\n      this.raise(originalStart, TSErrors.EmptyHeritageClauseType, descriptor);\n    }\n\n    return delimitedList;\n  }\n\n  tsParseExpressionWithTypeArguments() {\n    const node = this.startNode();\n    node.expression = this.tsParseEntityName(false);\n\n    if (this.isRelational(\"<\")) {\n      node.typeParameters = this.tsParseTypeArguments();\n    }\n\n    return this.finishNode(node, \"TSExpressionWithTypeArguments\");\n  }\n\n  tsParseInterfaceDeclaration(node) {\n    node.id = this.parseIdentifier();\n    this.checkLVal(node.id, \"typescript interface declaration\", BIND_TS_INTERFACE);\n    node.typeParameters = this.tsTryParseTypeParameters();\n\n    if (this.eat(types._extends)) {\n      node.extends = this.tsParseHeritageClause(\"extends\");\n    }\n\n    const body = this.startNode();\n    body.body = this.tsInType(this.tsParseObjectTypeMembers.bind(this));\n    node.body = this.finishNode(body, \"TSInterfaceBody\");\n    return this.finishNode(node, \"TSInterfaceDeclaration\");\n  }\n\n  tsParseTypeAliasDeclaration(node) {\n    node.id = this.parseIdentifier();\n    this.checkLVal(node.id, \"typescript type alias\", BIND_TS_TYPE);\n    node.typeParameters = this.tsTryParseTypeParameters();\n    node.typeAnnotation = this.tsInType(() => {\n      this.expect(types.eq);\n\n      if (this.isContextual(\"intrinsic\") && this.lookahead().type !== types.dot) {\n        const node = this.startNode();\n        this.next();\n        return this.finishNode(node, \"TSIntrinsicKeyword\");\n      }\n\n      return this.tsParseType();\n    });\n    this.semicolon();\n    return this.finishNode(node, \"TSTypeAliasDeclaration\");\n  }\n\n  tsInNoContext(cb) {\n    const oldContext = this.state.context;\n    this.state.context = [oldContext[0]];\n\n    try {\n      return cb();\n    } finally {\n      this.state.context = oldContext;\n    }\n  }\n\n  tsInType(cb) {\n    const oldInType = this.state.inType;\n    this.state.inType = true;\n\n    try {\n      return cb();\n    } finally {\n      this.state.inType = oldInType;\n    }\n  }\n\n  tsEatThenParseType(token) {\n    return !this.match(token) ? undefined : this.tsNextThenParseType();\n  }\n\n  tsExpectThenParseType(token) {\n    return this.tsDoThenParseType(() => this.expect(token));\n  }\n\n  tsNextThenParseType() {\n    return this.tsDoThenParseType(() => this.next());\n  }\n\n  tsDoThenParseType(cb) {\n    return this.tsInType(() => {\n      cb();\n      return this.tsParseType();\n    });\n  }\n\n  tsParseEnumMember() {\n    const node = this.startNode();\n    node.id = this.match(types.string) ? this.parseExprAtom() : this.parseIdentifier(true);\n\n    if (this.eat(types.eq)) {\n      node.initializer = this.parseMaybeAssignAllowIn();\n    }\n\n    return this.finishNode(node, \"TSEnumMember\");\n  }\n\n  tsParseEnumDeclaration(node, isConst) {\n    if (isConst) node.const = true;\n    node.id = this.parseIdentifier();\n    this.checkLVal(node.id, \"typescript enum declaration\", isConst ? BIND_TS_CONST_ENUM : BIND_TS_ENUM);\n    this.expect(types.braceL);\n    node.members = this.tsParseDelimitedList(\"EnumMembers\", this.tsParseEnumMember.bind(this));\n    this.expect(types.braceR);\n    return this.finishNode(node, \"TSEnumDeclaration\");\n  }\n\n  tsParseModuleBlock() {\n    const node = this.startNode();\n    this.scope.enter(SCOPE_OTHER);\n    this.expect(types.braceL);\n    this.parseBlockOrModuleBlockBody(node.body = [], undefined, true, types.braceR);\n    this.scope.exit();\n    return this.finishNode(node, \"TSModuleBlock\");\n  }\n\n  tsParseModuleOrNamespaceDeclaration(node, nested = false) {\n    node.id = this.parseIdentifier();\n\n    if (!nested) {\n      this.checkLVal(node.id, \"module or namespace declaration\", BIND_TS_NAMESPACE);\n    }\n\n    if (this.eat(types.dot)) {\n      const inner = this.startNode();\n      this.tsParseModuleOrNamespaceDeclaration(inner, true);\n      node.body = inner;\n    } else {\n      this.scope.enter(SCOPE_TS_MODULE);\n      this.prodParam.enter(PARAM);\n      node.body = this.tsParseModuleBlock();\n      this.prodParam.exit();\n      this.scope.exit();\n    }\n\n    return this.finishNode(node, \"TSModuleDeclaration\");\n  }\n\n  tsParseAmbientExternalModuleDeclaration(node) {\n    if (this.isContextual(\"global\")) {\n      node.global = true;\n      node.id = this.parseIdentifier();\n    } else if (this.match(types.string)) {\n      node.id = this.parseExprAtom();\n    } else {\n      this.unexpected();\n    }\n\n    if (this.match(types.braceL)) {\n      this.scope.enter(SCOPE_TS_MODULE);\n      this.prodParam.enter(PARAM);\n      node.body = this.tsParseModuleBlock();\n      this.prodParam.exit();\n      this.scope.exit();\n    } else {\n      this.semicolon();\n    }\n\n    return this.finishNode(node, \"TSModuleDeclaration\");\n  }\n\n  tsParseImportEqualsDeclaration(node, isExport) {\n    node.isExport = isExport || false;\n    node.id = this.parseIdentifier();\n    this.checkLVal(node.id, \"import equals declaration\", BIND_LEXICAL);\n    this.expect(types.eq);\n    node.moduleReference = this.tsParseModuleReference();\n    this.semicolon();\n    return this.finishNode(node, \"TSImportEqualsDeclaration\");\n  }\n\n  tsIsExternalModuleReference() {\n    return this.isContextual(\"require\") && this.lookaheadCharCode() === 40;\n  }\n\n  tsParseModuleReference() {\n    return this.tsIsExternalModuleReference() ? this.tsParseExternalModuleReference() : this.tsParseEntityName(false);\n  }\n\n  tsParseExternalModuleReference() {\n    const node = this.startNode();\n    this.expectContextual(\"require\");\n    this.expect(types.parenL);\n\n    if (!this.match(types.string)) {\n      throw this.unexpected();\n    }\n\n    node.expression = this.parseExprAtom();\n    this.expect(types.parenR);\n    return this.finishNode(node, \"TSExternalModuleReference\");\n  }\n\n  tsLookAhead(f) {\n    const state = this.state.clone();\n    const res = f();\n    this.state = state;\n    return res;\n  }\n\n  tsTryParseAndCatch(f) {\n    const result = this.tryParse(abort => f() || abort());\n    if (result.aborted || !result.node) return undefined;\n    if (result.error) this.state = result.failState;\n    return result.node;\n  }\n\n  tsTryParse(f) {\n    const state = this.state.clone();\n    const result = f();\n\n    if (result !== undefined && result !== false) {\n      return result;\n    } else {\n      this.state = state;\n      return undefined;\n    }\n  }\n\n  tsTryParseDeclare(nany) {\n    if (this.isLineTerminator()) {\n      return;\n    }\n\n    let starttype = this.state.type;\n    let kind;\n\n    if (this.isContextual(\"let\")) {\n      starttype = types._var;\n      kind = \"let\";\n    }\n\n    return this.tsInDeclareContext(() => {\n      switch (starttype) {\n        case types._function:\n          nany.declare = true;\n          return this.parseFunctionStatement(nany, false, true);\n\n        case types._class:\n          nany.declare = true;\n          return this.parseClass(nany, true, false);\n\n        case types._const:\n          if (this.match(types._const) && this.isLookaheadContextual(\"enum\")) {\n            this.expect(types._const);\n            this.expectContextual(\"enum\");\n            return this.tsParseEnumDeclaration(nany, true);\n          }\n\n        case types._var:\n          kind = kind || this.state.value;\n          return this.parseVarStatement(nany, kind);\n\n        case types.name:\n          {\n            const value = this.state.value;\n\n            if (value === \"global\") {\n              return this.tsParseAmbientExternalModuleDeclaration(nany);\n            } else {\n              return this.tsParseDeclaration(nany, value, true);\n            }\n          }\n      }\n    });\n  }\n\n  tsTryParseExportDeclaration() {\n    return this.tsParseDeclaration(this.startNode(), this.state.value, true);\n  }\n\n  tsParseExpressionStatement(node, expr) {\n    switch (expr.name) {\n      case \"declare\":\n        {\n          const declaration = this.tsTryParseDeclare(node);\n\n          if (declaration) {\n            declaration.declare = true;\n            return declaration;\n          }\n\n          break;\n        }\n\n      case \"global\":\n        if (this.match(types.braceL)) {\n          this.scope.enter(SCOPE_TS_MODULE);\n          this.prodParam.enter(PARAM);\n          const mod = node;\n          mod.global = true;\n          mod.id = expr;\n          mod.body = this.tsParseModuleBlock();\n          this.scope.exit();\n          this.prodParam.exit();\n          return this.finishNode(mod, \"TSModuleDeclaration\");\n        }\n\n        break;\n\n      default:\n        return this.tsParseDeclaration(node, expr.name, false);\n    }\n  }\n\n  tsParseDeclaration(node, value, next) {\n    switch (value) {\n      case \"abstract\":\n        if (this.tsCheckLineTerminatorAndMatch(types._class, next)) {\n          const cls = node;\n          cls.abstract = true;\n\n          if (next) {\n            this.next();\n\n            if (!this.match(types._class)) {\n              this.unexpected(null, types._class);\n            }\n          }\n\n          return this.parseClass(cls, true, false);\n        }\n\n        break;\n\n      case \"enum\":\n        if (next || this.match(types.name)) {\n          if (next) this.next();\n          return this.tsParseEnumDeclaration(node, false);\n        }\n\n        break;\n\n      case \"interface\":\n        if (this.tsCheckLineTerminatorAndMatch(types.name, next)) {\n          if (next) this.next();\n          return this.tsParseInterfaceDeclaration(node);\n        }\n\n        break;\n\n      case \"module\":\n        if (next) this.next();\n\n        if (this.match(types.string)) {\n          return this.tsParseAmbientExternalModuleDeclaration(node);\n        } else if (this.tsCheckLineTerminatorAndMatch(types.name, next)) {\n          return this.tsParseModuleOrNamespaceDeclaration(node);\n        }\n\n        break;\n\n      case \"namespace\":\n        if (this.tsCheckLineTerminatorAndMatch(types.name, next)) {\n          if (next) this.next();\n          return this.tsParseModuleOrNamespaceDeclaration(node);\n        }\n\n        break;\n\n      case \"type\":\n        if (this.tsCheckLineTerminatorAndMatch(types.name, next)) {\n          if (next) this.next();\n          return this.tsParseTypeAliasDeclaration(node);\n        }\n\n        break;\n    }\n  }\n\n  tsCheckLineTerminatorAndMatch(tokenType, next) {\n    return (next || this.match(tokenType)) && !this.isLineTerminator();\n  }\n\n  tsTryParseGenericAsyncArrowFunction(startPos, startLoc) {\n    if (!this.isRelational(\"<\")) {\n      return undefined;\n    }\n\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n    this.state.maybeInArrowParameters = true;\n    const res = this.tsTryParseAndCatch(() => {\n      const node = this.startNodeAt(startPos, startLoc);\n      node.typeParameters = this.tsParseTypeParameters();\n      super.parseFunctionParams(node);\n      node.returnType = this.tsTryParseTypeOrTypePredicateAnnotation();\n      this.expect(types.arrow);\n      return node;\n    });\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n\n    if (!res) {\n      return undefined;\n    }\n\n    return this.parseArrowExpression(res, null, true);\n  }\n\n  tsParseTypeArguments() {\n    const node = this.startNode();\n    node.params = this.tsInType(() => this.tsInNoContext(() => {\n      this.expectRelational(\"<\");\n      return this.tsParseDelimitedList(\"TypeParametersOrArguments\", this.tsParseType.bind(this));\n    }));\n\n    if (node.params.length === 0) {\n      this.raise(node.start, TSErrors.EmptyTypeArguments);\n    }\n\n    this.state.exprAllowed = false;\n    this.expectRelational(\">\");\n    return this.finishNode(node, \"TSTypeParameterInstantiation\");\n  }\n\n  tsIsDeclarationStart() {\n    if (this.match(types.name)) {\n      switch (this.state.value) {\n        case \"abstract\":\n        case \"declare\":\n        case \"enum\":\n        case \"interface\":\n        case \"module\":\n        case \"namespace\":\n        case \"type\":\n          return true;\n      }\n    }\n\n    return false;\n  }\n\n  isExportDefaultSpecifier() {\n    if (this.tsIsDeclarationStart()) return false;\n    return super.isExportDefaultSpecifier();\n  }\n\n  parseAssignableListItem(allowModifiers, decorators) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    let accessibility;\n    let readonly = false;\n\n    if (allowModifiers !== undefined) {\n      accessibility = this.parseAccessModifier();\n      readonly = !!this.tsParseModifier([\"readonly\"]);\n\n      if (allowModifiers === false && (accessibility || readonly)) {\n        this.raise(startPos, TSErrors.UnexpectedParameterModifier);\n      }\n    }\n\n    const left = this.parseMaybeDefault();\n    this.parseAssignableListItemTypes(left);\n    const elt = this.parseMaybeDefault(left.start, left.loc.start, left);\n\n    if (accessibility || readonly) {\n      const pp = this.startNodeAt(startPos, startLoc);\n\n      if (decorators.length) {\n        pp.decorators = decorators;\n      }\n\n      if (accessibility) pp.accessibility = accessibility;\n      if (readonly) pp.readonly = readonly;\n\n      if (elt.type !== \"Identifier\" && elt.type !== \"AssignmentPattern\") {\n        this.raise(pp.start, TSErrors.UnsupportedParameterPropertyKind);\n      }\n\n      pp.parameter = elt;\n      return this.finishNode(pp, \"TSParameterProperty\");\n    }\n\n    if (decorators.length) {\n      left.decorators = decorators;\n    }\n\n    return elt;\n  }\n\n  parseFunctionBodyAndFinish(node, type, isMethod = false) {\n    if (this.match(types.colon)) {\n      node.returnType = this.tsParseTypeOrTypePredicateAnnotation(types.colon);\n    }\n\n    const bodilessType = type === \"FunctionDeclaration\" ? \"TSDeclareFunction\" : type === \"ClassMethod\" ? \"TSDeclareMethod\" : undefined;\n\n    if (bodilessType && !this.match(types.braceL) && this.isLineTerminator()) {\n      this.finishNode(node, bodilessType);\n      return;\n    }\n\n    if (bodilessType === \"TSDeclareFunction\" && this.state.isDeclareContext) {\n      this.raise(node.start, TSErrors.DeclareFunctionHasImplementation);\n\n      if (node.declare) {\n        super.parseFunctionBodyAndFinish(node, bodilessType, isMethod);\n        return;\n      }\n    }\n\n    super.parseFunctionBodyAndFinish(node, type, isMethod);\n  }\n\n  registerFunctionStatementId(node) {\n    if (!node.body && node.id) {\n      this.checkLVal(node.id, \"function name\", BIND_TS_AMBIENT);\n    } else {\n      super.registerFunctionStatementId(...arguments);\n    }\n  }\n\n  tsCheckForInvalidTypeCasts(items) {\n    items.forEach(node => {\n      if ((node == null ? void 0 : node.type) === \"TSTypeCastExpression\") {\n        this.raise(node.typeAnnotation.start, TSErrors.UnexpectedTypeAnnotation);\n      }\n    });\n  }\n\n  toReferencedList(exprList, isInParens) {\n    this.tsCheckForInvalidTypeCasts(exprList);\n    return exprList;\n  }\n\n  parseArrayLike(...args) {\n    const node = super.parseArrayLike(...args);\n\n    if (node.type === \"ArrayExpression\") {\n      this.tsCheckForInvalidTypeCasts(node.elements);\n    }\n\n    return node;\n  }\n\n  parseSubscript(base, startPos, startLoc, noCalls, state) {\n    if (!this.hasPrecedingLineBreak() && this.match(types.bang)) {\n      this.state.exprAllowed = false;\n      this.next();\n      const nonNullExpression = this.startNodeAt(startPos, startLoc);\n      nonNullExpression.expression = base;\n      return this.finishNode(nonNullExpression, \"TSNonNullExpression\");\n    }\n\n    if (this.isRelational(\"<\")) {\n      const result = this.tsTryParseAndCatch(() => {\n        if (!noCalls && this.atPossibleAsyncArrow(base)) {\n          const asyncArrowFn = this.tsTryParseGenericAsyncArrowFunction(startPos, startLoc);\n\n          if (asyncArrowFn) {\n            return asyncArrowFn;\n          }\n        }\n\n        const node = this.startNodeAt(startPos, startLoc);\n        node.callee = base;\n        const typeArguments = this.tsParseTypeArguments();\n\n        if (typeArguments) {\n          if (!noCalls && this.eat(types.parenL)) {\n            node.arguments = this.parseCallExpressionArguments(types.parenR, false);\n            this.tsCheckForInvalidTypeCasts(node.arguments);\n            node.typeParameters = typeArguments;\n            return this.finishCallExpression(node, state.optionalChainMember);\n          } else if (this.match(types.backQuote)) {\n            const result = this.parseTaggedTemplateExpression(base, startPos, startLoc, state);\n            result.typeParameters = typeArguments;\n            return result;\n          }\n        }\n\n        this.unexpected();\n      });\n      if (result) return result;\n    }\n\n    return super.parseSubscript(base, startPos, startLoc, noCalls, state);\n  }\n\n  parseNewArguments(node) {\n    if (this.isRelational(\"<\")) {\n      const typeParameters = this.tsTryParseAndCatch(() => {\n        const args = this.tsParseTypeArguments();\n        if (!this.match(types.parenL)) this.unexpected();\n        return args;\n      });\n\n      if (typeParameters) {\n        node.typeParameters = typeParameters;\n      }\n    }\n\n    super.parseNewArguments(node);\n  }\n\n  parseExprOp(left, leftStartPos, leftStartLoc, minPrec) {\n    if (nonNull(types._in.binop) > minPrec && !this.hasPrecedingLineBreak() && this.isContextual(\"as\")) {\n      const node = this.startNodeAt(leftStartPos, leftStartLoc);\n      node.expression = left;\n\n      const _const = this.tsTryNextParseConstantContext();\n\n      if (_const) {\n        node.typeAnnotation = _const;\n      } else {\n        node.typeAnnotation = this.tsNextThenParseType();\n      }\n\n      this.finishNode(node, \"TSAsExpression\");\n      this.reScan_lt_gt();\n      return this.parseExprOp(node, leftStartPos, leftStartLoc, minPrec);\n    }\n\n    return super.parseExprOp(left, leftStartPos, leftStartLoc, minPrec);\n  }\n\n  checkReservedWord(word, startLoc, checkKeywords, isBinding) {}\n\n  checkDuplicateExports() {}\n\n  parseImport(node) {\n    if (this.match(types.name) || this.match(types.star) || this.match(types.braceL)) {\n      const ahead = this.lookahead();\n\n      if (this.match(types.name) && ahead.type === types.eq) {\n        return this.tsParseImportEqualsDeclaration(node);\n      }\n\n      if (this.isContextual(\"type\") && ahead.type !== types.comma && !(ahead.type === types.name && ahead.value === \"from\")) {\n        node.importKind = \"type\";\n        this.next();\n      }\n    }\n\n    if (!node.importKind) {\n      node.importKind = \"value\";\n    }\n\n    const importNode = super.parseImport(node);\n\n    if (importNode.importKind === \"type\" && importNode.specifiers.length > 1 && importNode.specifiers[0].type === \"ImportDefaultSpecifier\") {\n      this.raise(importNode.start, \"A type-only import can specify a default import or named bindings, but not both.\");\n    }\n\n    return importNode;\n  }\n\n  parseExport(node) {\n    if (this.match(types._import)) {\n      this.expect(types._import);\n      return this.tsParseImportEqualsDeclaration(node, true);\n    } else if (this.eat(types.eq)) {\n      const assign = node;\n      assign.expression = this.parseExpression();\n      this.semicolon();\n      return this.finishNode(assign, \"TSExportAssignment\");\n    } else if (this.eatContextual(\"as\")) {\n      const decl = node;\n      this.expectContextual(\"namespace\");\n      decl.id = this.parseIdentifier();\n      this.semicolon();\n      return this.finishNode(decl, \"TSNamespaceExportDeclaration\");\n    } else {\n      if (this.isContextual(\"type\") && this.lookahead().type === types.braceL) {\n        this.next();\n        node.exportKind = \"type\";\n      } else {\n        node.exportKind = \"value\";\n      }\n\n      return super.parseExport(node);\n    }\n  }\n\n  isAbstractClass() {\n    return this.isContextual(\"abstract\") && this.lookahead().type === types._class;\n  }\n\n  parseExportDefaultExpression() {\n    if (this.isAbstractClass()) {\n      const cls = this.startNode();\n      this.next();\n      this.parseClass(cls, true, true);\n      cls.abstract = true;\n      return cls;\n    }\n\n    if (this.state.value === \"interface\") {\n      const result = this.tsParseDeclaration(this.startNode(), this.state.value, true);\n      if (result) return result;\n    }\n\n    return super.parseExportDefaultExpression();\n  }\n\n  parseStatementContent(context, topLevel) {\n    if (this.state.type === types._const) {\n      const ahead = this.lookahead();\n\n      if (ahead.type === types.name && ahead.value === \"enum\") {\n        const node = this.startNode();\n        this.expect(types._const);\n        this.expectContextual(\"enum\");\n        return this.tsParseEnumDeclaration(node, true);\n      }\n    }\n\n    return super.parseStatementContent(context, topLevel);\n  }\n\n  parseAccessModifier() {\n    return this.tsParseModifier([\"public\", \"protected\", \"private\"]);\n  }\n\n  parseClassMember(classBody, member, state) {\n    this.tsParseModifiers(member, [\"declare\"]);\n    const accessibility = this.parseAccessModifier();\n    if (accessibility) member.accessibility = accessibility;\n    this.tsParseModifiers(member, [\"declare\"]);\n\n    const callParseClassMember = () => {\n      super.parseClassMember(classBody, member, state);\n    };\n\n    if (member.declare) {\n      this.tsInDeclareContext(callParseClassMember);\n    } else {\n      callParseClassMember();\n    }\n  }\n\n  parseClassMemberWithIsStatic(classBody, member, state, isStatic) {\n    this.tsParseModifiers(member, [\"abstract\", \"readonly\", \"declare\"]);\n    const idx = this.tsTryParseIndexSignature(member);\n\n    if (idx) {\n      classBody.body.push(idx);\n\n      if (member.abstract) {\n        this.raise(member.start, TSErrors.IndexSignatureHasAbstract);\n      }\n\n      if (isStatic) {\n        this.raise(member.start, TSErrors.IndexSignatureHasStatic);\n      }\n\n      if (member.accessibility) {\n        this.raise(member.start, TSErrors.IndexSignatureHasAccessibility, member.accessibility);\n      }\n\n      if (member.declare) {\n        this.raise(member.start, TSErrors.IndexSignatureHasDeclare);\n      }\n\n      return;\n    }\n\n    super.parseClassMemberWithIsStatic(classBody, member, state, isStatic);\n  }\n\n  parsePostMemberNameModifiers(methodOrProp) {\n    const optional = this.eat(types.question);\n    if (optional) methodOrProp.optional = true;\n\n    if (methodOrProp.readonly && this.match(types.parenL)) {\n      this.raise(methodOrProp.start, TSErrors.ClassMethodHasReadonly);\n    }\n\n    if (methodOrProp.declare && this.match(types.parenL)) {\n      this.raise(methodOrProp.start, TSErrors.ClassMethodHasDeclare);\n    }\n  }\n\n  parseExpressionStatement(node, expr) {\n    const decl = expr.type === \"Identifier\" ? this.tsParseExpressionStatement(node, expr) : undefined;\n    return decl || super.parseExpressionStatement(node, expr);\n  }\n\n  shouldParseExportDeclaration() {\n    if (this.tsIsDeclarationStart()) return true;\n    return super.shouldParseExportDeclaration();\n  }\n\n  parseConditional(expr, startPos, startLoc, refNeedsArrowPos) {\n    if (!refNeedsArrowPos || !this.match(types.question)) {\n      return super.parseConditional(expr, startPos, startLoc, refNeedsArrowPos);\n    }\n\n    const result = this.tryParse(() => super.parseConditional(expr, startPos, startLoc));\n\n    if (!result.node) {\n      refNeedsArrowPos.start = result.error.pos || this.state.start;\n      return expr;\n    }\n\n    if (result.error) this.state = result.failState;\n    return result.node;\n  }\n\n  parseParenItem(node, startPos, startLoc) {\n    node = super.parseParenItem(node, startPos, startLoc);\n\n    if (this.eat(types.question)) {\n      node.optional = true;\n      this.resetEndLocation(node);\n    }\n\n    if (this.match(types.colon)) {\n      const typeCastNode = this.startNodeAt(startPos, startLoc);\n      typeCastNode.expression = node;\n      typeCastNode.typeAnnotation = this.tsParseTypeAnnotation();\n      return this.finishNode(typeCastNode, \"TSTypeCastExpression\");\n    }\n\n    return node;\n  }\n\n  parseExportDeclaration(node) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const isDeclare = this.eatContextual(\"declare\");\n    let declaration;\n\n    if (this.match(types.name)) {\n      declaration = this.tsTryParseExportDeclaration();\n    }\n\n    if (!declaration) {\n      declaration = super.parseExportDeclaration(node);\n    }\n\n    if (declaration && (declaration.type === \"TSInterfaceDeclaration\" || declaration.type === \"TSTypeAliasDeclaration\" || isDeclare)) {\n      node.exportKind = \"type\";\n    }\n\n    if (declaration && isDeclare) {\n      this.resetStartLocation(declaration, startPos, startLoc);\n      declaration.declare = true;\n    }\n\n    return declaration;\n  }\n\n  parseClassId(node, isStatement, optionalId) {\n    if ((!isStatement || optionalId) && this.isContextual(\"implements\")) {\n      return;\n    }\n\n    super.parseClassId(node, isStatement, optionalId, node.declare ? BIND_TS_AMBIENT : BIND_CLASS);\n    const typeParameters = this.tsTryParseTypeParameters();\n    if (typeParameters) node.typeParameters = typeParameters;\n  }\n\n  parseClassPropertyAnnotation(node) {\n    if (!node.optional && this.eat(types.bang)) {\n      node.definite = true;\n    }\n\n    const type = this.tsTryParseTypeAnnotation();\n    if (type) node.typeAnnotation = type;\n  }\n\n  parseClassProperty(node) {\n    this.parseClassPropertyAnnotation(node);\n\n    if (this.state.isDeclareContext && this.match(types.eq)) {\n      this.raise(this.state.start, TSErrors.DeclareClassFieldHasInitializer);\n    }\n\n    return super.parseClassProperty(node);\n  }\n\n  parseClassPrivateProperty(node) {\n    if (node.abstract) {\n      this.raise(node.start, TSErrors.PrivateElementHasAbstract);\n    }\n\n    if (node.accessibility) {\n      this.raise(node.start, TSErrors.PrivateElementHasAccessibility, node.accessibility);\n    }\n\n    this.parseClassPropertyAnnotation(node);\n    return super.parseClassPrivateProperty(node);\n  }\n\n  pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper) {\n    const typeParameters = this.tsTryParseTypeParameters();\n\n    if (typeParameters && isConstructor) {\n      this.raise(typeParameters.start, TSErrors.ConstructorHasTypeParameters);\n    }\n\n    if (typeParameters) method.typeParameters = typeParameters;\n    super.pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper);\n  }\n\n  pushClassPrivateMethod(classBody, method, isGenerator, isAsync) {\n    const typeParameters = this.tsTryParseTypeParameters();\n    if (typeParameters) method.typeParameters = typeParameters;\n    super.pushClassPrivateMethod(classBody, method, isGenerator, isAsync);\n  }\n\n  parseClassSuper(node) {\n    super.parseClassSuper(node);\n\n    if (node.superClass && this.isRelational(\"<\")) {\n      node.superTypeParameters = this.tsParseTypeArguments();\n    }\n\n    if (this.eatContextual(\"implements\")) {\n      node.implements = this.tsParseHeritageClause(\"implements\");\n    }\n  }\n\n  parseObjPropValue(prop, ...args) {\n    const typeParameters = this.tsTryParseTypeParameters();\n    if (typeParameters) prop.typeParameters = typeParameters;\n    super.parseObjPropValue(prop, ...args);\n  }\n\n  parseFunctionParams(node, allowModifiers) {\n    const typeParameters = this.tsTryParseTypeParameters();\n    if (typeParameters) node.typeParameters = typeParameters;\n    super.parseFunctionParams(node, allowModifiers);\n  }\n\n  parseVarId(decl, kind) {\n    super.parseVarId(decl, kind);\n\n    if (decl.id.type === \"Identifier\" && this.eat(types.bang)) {\n      decl.definite = true;\n    }\n\n    const type = this.tsTryParseTypeAnnotation();\n\n    if (type) {\n      decl.id.typeAnnotation = type;\n      this.resetEndLocation(decl.id);\n    }\n  }\n\n  parseAsyncArrowFromCallExpression(node, call) {\n    if (this.match(types.colon)) {\n      node.returnType = this.tsParseTypeAnnotation();\n    }\n\n    return super.parseAsyncArrowFromCallExpression(node, call);\n  }\n\n  parseMaybeAssign(...args) {\n    var _jsx, _jsx2, _typeCast, _jsx3, _typeCast2, _jsx4, _typeCast3;\n\n    let state;\n    let jsx;\n    let typeCast;\n\n    if (this.match(types.jsxTagStart)) {\n      state = this.state.clone();\n      jsx = this.tryParse(() => super.parseMaybeAssign(...args), state);\n      if (!jsx.error) return jsx.node;\n      const {\n        context\n      } = this.state;\n\n      if (context[context.length - 1] === types$1.j_oTag) {\n        context.length -= 2;\n      } else if (context[context.length - 1] === types$1.j_expr) {\n        context.length -= 1;\n      }\n    }\n\n    if (!((_jsx = jsx) == null ? void 0 : _jsx.error) && !this.isRelational(\"<\")) {\n      return super.parseMaybeAssign(...args);\n    }\n\n    let typeParameters;\n    state = state || this.state.clone();\n    const arrow = this.tryParse(abort => {\n      var _typeParameters;\n\n      typeParameters = this.tsParseTypeParameters();\n      const expr = super.parseMaybeAssign(...args);\n\n      if (expr.type !== \"ArrowFunctionExpression\" || expr.extra && expr.extra.parenthesized) {\n        abort();\n      }\n\n      if (((_typeParameters = typeParameters) == null ? void 0 : _typeParameters.params.length) !== 0) {\n        this.resetStartLocationFromNode(expr, typeParameters);\n      }\n\n      expr.typeParameters = typeParameters;\n      return expr;\n    }, state);\n    if (!arrow.error && !arrow.aborted) return arrow.node;\n\n    if (!jsx) {\n      assert(!this.hasPlugin(\"jsx\"));\n      typeCast = this.tryParse(() => super.parseMaybeAssign(...args), state);\n      if (!typeCast.error) return typeCast.node;\n    }\n\n    if ((_jsx2 = jsx) == null ? void 0 : _jsx2.node) {\n      this.state = jsx.failState;\n      return jsx.node;\n    }\n\n    if (arrow.node) {\n      this.state = arrow.failState;\n      return arrow.node;\n    }\n\n    if ((_typeCast = typeCast) == null ? void 0 : _typeCast.node) {\n      this.state = typeCast.failState;\n      return typeCast.node;\n    }\n\n    if ((_jsx3 = jsx) == null ? void 0 : _jsx3.thrown) throw jsx.error;\n    if (arrow.thrown) throw arrow.error;\n    if ((_typeCast2 = typeCast) == null ? void 0 : _typeCast2.thrown) throw typeCast.error;\n    throw ((_jsx4 = jsx) == null ? void 0 : _jsx4.error) || arrow.error || ((_typeCast3 = typeCast) == null ? void 0 : _typeCast3.error);\n  }\n\n  parseMaybeUnary(refExpressionErrors) {\n    if (!this.hasPlugin(\"jsx\") && this.isRelational(\"<\")) {\n      return this.tsParseTypeAssertion();\n    } else {\n      return super.parseMaybeUnary(refExpressionErrors);\n    }\n  }\n\n  parseArrow(node) {\n    if (this.match(types.colon)) {\n      const result = this.tryParse(abort => {\n        const returnType = this.tsParseTypeOrTypePredicateAnnotation(types.colon);\n        if (this.canInsertSemicolon() || !this.match(types.arrow)) abort();\n        return returnType;\n      });\n      if (result.aborted) return;\n\n      if (!result.thrown) {\n        if (result.error) this.state = result.failState;\n        node.returnType = result.node;\n      }\n    }\n\n    return super.parseArrow(node);\n  }\n\n  parseAssignableListItemTypes(param) {\n    if (this.eat(types.question)) {\n      if (param.type !== \"Identifier\" && !this.state.isDeclareContext && !this.state.inType) {\n        this.raise(param.start, TSErrors.PatternIsOptional);\n      }\n\n      param.optional = true;\n    }\n\n    const type = this.tsTryParseTypeAnnotation();\n    if (type) param.typeAnnotation = type;\n    this.resetEndLocation(param);\n    return param;\n  }\n\n  toAssignable(node, isLHS = false) {\n    switch (node.type) {\n      case \"TSTypeCastExpression\":\n        return super.toAssignable(this.typeCastToParameter(node), isLHS);\n\n      case \"TSParameterProperty\":\n        return super.toAssignable(node, isLHS);\n\n      case \"TSAsExpression\":\n      case \"TSNonNullExpression\":\n      case \"TSTypeAssertion\":\n        node.expression = this.toAssignable(node.expression, isLHS);\n        return node;\n\n      default:\n        return super.toAssignable(node, isLHS);\n    }\n  }\n\n  checkLVal(expr, contextDescription, ...args) {\n    switch (expr.type) {\n      case \"TSTypeCastExpression\":\n        return;\n\n      case \"TSParameterProperty\":\n        this.checkLVal(expr.parameter, \"parameter property\", ...args);\n        return;\n\n      case \"TSAsExpression\":\n      case \"TSNonNullExpression\":\n      case \"TSTypeAssertion\":\n        this.checkLVal(expr.expression, contextDescription, ...args);\n        return;\n\n      default:\n        super.checkLVal(expr, contextDescription, ...args);\n        return;\n    }\n  }\n\n  parseBindingAtom() {\n    switch (this.state.type) {\n      case types._this:\n        return this.parseIdentifier(true);\n\n      default:\n        return super.parseBindingAtom();\n    }\n  }\n\n  parseMaybeDecoratorArguments(expr) {\n    if (this.isRelational(\"<\")) {\n      const typeArguments = this.tsParseTypeArguments();\n\n      if (this.match(types.parenL)) {\n        const call = super.parseMaybeDecoratorArguments(expr);\n        call.typeParameters = typeArguments;\n        return call;\n      }\n\n      this.unexpected(this.state.start, types.parenL);\n    }\n\n    return super.parseMaybeDecoratorArguments(expr);\n  }\n\n  isClassMethod() {\n    return this.isRelational(\"<\") || super.isClassMethod();\n  }\n\n  isClassProperty() {\n    return this.match(types.bang) || this.match(types.colon) || super.isClassProperty();\n  }\n\n  parseMaybeDefault(...args) {\n    const node = super.parseMaybeDefault(...args);\n\n    if (node.type === \"AssignmentPattern\" && node.typeAnnotation && node.right.start < node.typeAnnotation.start) {\n      this.raise(node.typeAnnotation.start, TSErrors.TypeAnnotationAfterAssign);\n    }\n\n    return node;\n  }\n\n  getTokenFromCode(code) {\n    if (this.state.inType && (code === 62 || code === 60)) {\n      return this.finishOp(types.relational, 1);\n    } else {\n      return super.getTokenFromCode(code);\n    }\n  }\n\n  reScan_lt_gt() {\n    if (this.match(types.relational)) {\n      const code = this.input.charCodeAt(this.state.start);\n\n      if (code === 60 || code === 62) {\n        this.state.pos -= 1;\n        this.readToken_lt_gt(code);\n      }\n    }\n  }\n\n  toAssignableList(exprList) {\n    for (let i = 0; i < exprList.length; i++) {\n      const expr = exprList[i];\n      if (!expr) continue;\n\n      switch (expr.type) {\n        case \"TSTypeCastExpression\":\n          exprList[i] = this.typeCastToParameter(expr);\n          break;\n\n        case \"TSAsExpression\":\n        case \"TSTypeAssertion\":\n          if (!this.state.maybeInArrowParameters) {\n            exprList[i] = this.typeCastToParameter(expr);\n          } else {\n            this.raise(expr.start, TSErrors.UnexpectedTypeCastInParameter);\n          }\n\n          break;\n      }\n    }\n\n    return super.toAssignableList(...arguments);\n  }\n\n  typeCastToParameter(node) {\n    node.expression.typeAnnotation = node.typeAnnotation;\n    this.resetEndLocation(node.expression, node.typeAnnotation.end, node.typeAnnotation.loc.end);\n    return node.expression;\n  }\n\n  shouldParseArrow() {\n    return this.match(types.colon) || super.shouldParseArrow();\n  }\n\n  shouldParseAsyncArrow() {\n    return this.match(types.colon) || super.shouldParseAsyncArrow();\n  }\n\n  canHaveLeadingDecorator() {\n    return super.canHaveLeadingDecorator() || this.isAbstractClass();\n  }\n\n  jsxParseOpeningElementAfterName(node) {\n    if (this.isRelational(\"<\")) {\n      const typeArguments = this.tsTryParseAndCatch(() => this.tsParseTypeArguments());\n      if (typeArguments) node.typeParameters = typeArguments;\n    }\n\n    return super.jsxParseOpeningElementAfterName(node);\n  }\n\n  getGetterSetterExpectedParamCount(method) {\n    const baseCount = super.getGetterSetterExpectedParamCount(method);\n    const params = this.getObjectOrClassMethodParams(method);\n    const firstParam = params[0];\n    const hasContextParam = firstParam && firstParam.type === \"Identifier\" && firstParam.name === \"this\";\n    return hasContextParam ? baseCount + 1 : baseCount;\n  }\n\n  parseCatchClauseParam() {\n    const param = super.parseCatchClauseParam();\n    const type = this.tsTryParseTypeAnnotation();\n\n    if (type) {\n      param.typeAnnotation = type;\n      this.resetEndLocation(param);\n    }\n\n    return param;\n  }\n\n  tsInDeclareContext(cb) {\n    const oldIsDeclareContext = this.state.isDeclareContext;\n    this.state.isDeclareContext = true;\n\n    try {\n      return cb();\n    } finally {\n      this.state.isDeclareContext = oldIsDeclareContext;\n    }\n  }\n\n});\n\ntypes.placeholder = new TokenType(\"%%\", {\n  startsExpr: true\n});\nvar placeholders = (superClass => class extends superClass {\n  parsePlaceholder(expectedNode) {\n    if (this.match(types.placeholder)) {\n      const node = this.startNode();\n      this.next();\n      this.assertNoSpace(\"Unexpected space in placeholder.\");\n      node.name = super.parseIdentifier(true);\n      this.assertNoSpace(\"Unexpected space in placeholder.\");\n      this.expect(types.placeholder);\n      return this.finishPlaceholder(node, expectedNode);\n    }\n  }\n\n  finishPlaceholder(node, expectedNode) {\n    const isFinished = !!(node.expectedNode && node.type === \"Placeholder\");\n    node.expectedNode = expectedNode;\n    return isFinished ? node : this.finishNode(node, \"Placeholder\");\n  }\n\n  getTokenFromCode(code) {\n    if (code === 37 && this.input.charCodeAt(this.state.pos + 1) === 37) {\n      return this.finishOp(types.placeholder, 2);\n    }\n\n    return super.getTokenFromCode(...arguments);\n  }\n\n  parseExprAtom() {\n    return this.parsePlaceholder(\"Expression\") || super.parseExprAtom(...arguments);\n  }\n\n  parseIdentifier() {\n    return this.parsePlaceholder(\"Identifier\") || super.parseIdentifier(...arguments);\n  }\n\n  checkReservedWord(word) {\n    if (word !== undefined) super.checkReservedWord(...arguments);\n  }\n\n  parseBindingAtom() {\n    return this.parsePlaceholder(\"Pattern\") || super.parseBindingAtom(...arguments);\n  }\n\n  checkLVal(expr) {\n    if (expr.type !== \"Placeholder\") super.checkLVal(...arguments);\n  }\n\n  toAssignable(node) {\n    if (node && node.type === \"Placeholder\" && node.expectedNode === \"Expression\") {\n      node.expectedNode = \"Pattern\";\n      return node;\n    }\n\n    return super.toAssignable(...arguments);\n  }\n\n  verifyBreakContinue(node) {\n    if (node.label && node.label.type === \"Placeholder\") return;\n    super.verifyBreakContinue(...arguments);\n  }\n\n  parseExpressionStatement(node, expr) {\n    if (expr.type !== \"Placeholder\" || expr.extra && expr.extra.parenthesized) {\n      return super.parseExpressionStatement(...arguments);\n    }\n\n    if (this.match(types.colon)) {\n      const stmt = node;\n      stmt.label = this.finishPlaceholder(expr, \"Identifier\");\n      this.next();\n      stmt.body = this.parseStatement(\"label\");\n      return this.finishNode(stmt, \"LabeledStatement\");\n    }\n\n    this.semicolon();\n    node.name = expr.name;\n    return this.finishPlaceholder(node, \"Statement\");\n  }\n\n  parseBlock() {\n    return this.parsePlaceholder(\"BlockStatement\") || super.parseBlock(...arguments);\n  }\n\n  parseFunctionId() {\n    return this.parsePlaceholder(\"Identifier\") || super.parseFunctionId(...arguments);\n  }\n\n  parseClass(node, isStatement, optionalId) {\n    const type = isStatement ? \"ClassDeclaration\" : \"ClassExpression\";\n    this.next();\n    this.takeDecorators(node);\n    const oldStrict = this.state.strict;\n    const placeholder = this.parsePlaceholder(\"Identifier\");\n\n    if (placeholder) {\n      if (this.match(types._extends) || this.match(types.placeholder) || this.match(types.braceL)) {\n        node.id = placeholder;\n      } else if (optionalId || !isStatement) {\n        node.id = null;\n        node.body = this.finishPlaceholder(placeholder, \"ClassBody\");\n        return this.finishNode(node, type);\n      } else {\n        this.unexpected(null, \"A class name is required\");\n      }\n    } else {\n      this.parseClassId(node, isStatement, optionalId);\n    }\n\n    this.parseClassSuper(node);\n    node.body = this.parsePlaceholder(\"ClassBody\") || this.parseClassBody(!!node.superClass, oldStrict);\n    return this.finishNode(node, type);\n  }\n\n  parseExport(node) {\n    const placeholder = this.parsePlaceholder(\"Identifier\");\n    if (!placeholder) return super.parseExport(...arguments);\n\n    if (!this.isContextual(\"from\") && !this.match(types.comma)) {\n      node.specifiers = [];\n      node.source = null;\n      node.declaration = this.finishPlaceholder(placeholder, \"Declaration\");\n      return this.finishNode(node, \"ExportNamedDeclaration\");\n    }\n\n    this.expectPlugin(\"exportDefaultFrom\");\n    const specifier = this.startNode();\n    specifier.exported = placeholder;\n    node.specifiers = [this.finishNode(specifier, \"ExportDefaultSpecifier\")];\n    return super.parseExport(node);\n  }\n\n  isExportDefaultSpecifier() {\n    if (this.match(types._default)) {\n      const next = this.nextTokenStart();\n\n      if (this.isUnparsedContextual(next, \"from\")) {\n        if (this.input.startsWith(types.placeholder.label, this.nextTokenStartSince(next + 4))) {\n          return true;\n        }\n      }\n    }\n\n    return super.isExportDefaultSpecifier();\n  }\n\n  maybeParseExportDefaultSpecifier(node) {\n    if (node.specifiers && node.specifiers.length > 0) {\n      return true;\n    }\n\n    return super.maybeParseExportDefaultSpecifier(...arguments);\n  }\n\n  checkExport(node) {\n    const {\n      specifiers\n    } = node;\n\n    if (specifiers == null ? void 0 : specifiers.length) {\n      node.specifiers = specifiers.filter(node => node.exported.type === \"Placeholder\");\n    }\n\n    super.checkExport(node);\n    node.specifiers = specifiers;\n  }\n\n  parseImport(node) {\n    const placeholder = this.parsePlaceholder(\"Identifier\");\n    if (!placeholder) return super.parseImport(...arguments);\n    node.specifiers = [];\n\n    if (!this.isContextual(\"from\") && !this.match(types.comma)) {\n      node.source = this.finishPlaceholder(placeholder, \"StringLiteral\");\n      this.semicolon();\n      return this.finishNode(node, \"ImportDeclaration\");\n    }\n\n    const specifier = this.startNodeAtNode(placeholder);\n    specifier.local = placeholder;\n    this.finishNode(specifier, \"ImportDefaultSpecifier\");\n    node.specifiers.push(specifier);\n\n    if (this.eat(types.comma)) {\n      const hasStarImport = this.maybeParseStarImportSpecifier(node);\n      if (!hasStarImport) this.parseNamedImportSpecifiers(node);\n    }\n\n    this.expectContextual(\"from\");\n    node.source = this.parseImportSource();\n    this.semicolon();\n    return this.finishNode(node, \"ImportDeclaration\");\n  }\n\n  parseImportSource() {\n    return this.parsePlaceholder(\"StringLiteral\") || super.parseImportSource(...arguments);\n  }\n\n});\n\nvar v8intrinsic = (superClass => class extends superClass {\n  parseV8Intrinsic() {\n    if (this.match(types.modulo)) {\n      const v8IntrinsicStart = this.state.start;\n      const node = this.startNode();\n      this.eat(types.modulo);\n\n      if (this.match(types.name)) {\n        const name = this.parseIdentifierName(this.state.start);\n        const identifier = this.createIdentifier(node, name);\n        identifier.type = \"V8IntrinsicIdentifier\";\n\n        if (this.match(types.parenL)) {\n          return identifier;\n        }\n      }\n\n      this.unexpected(v8IntrinsicStart);\n    }\n  }\n\n  parseExprAtom() {\n    return this.parseV8Intrinsic() || super.parseExprAtom(...arguments);\n  }\n\n});\n\nfunction hasPlugin(plugins, name) {\n  return plugins.some(plugin => {\n    if (Array.isArray(plugin)) {\n      return plugin[0] === name;\n    } else {\n      return plugin === name;\n    }\n  });\n}\nfunction getPluginOption(plugins, name, option) {\n  const plugin = plugins.find(plugin => {\n    if (Array.isArray(plugin)) {\n      return plugin[0] === name;\n    } else {\n      return plugin === name;\n    }\n  });\n\n  if (plugin && Array.isArray(plugin)) {\n    return plugin[1][option];\n  }\n\n  return null;\n}\nconst PIPELINE_PROPOSALS = [\"minimal\", \"smart\", \"fsharp\"];\nconst RECORD_AND_TUPLE_SYNTAX_TYPES = [\"hash\", \"bar\"];\nfunction validatePlugins(plugins) {\n  if (hasPlugin(plugins, \"decorators\")) {\n    if (hasPlugin(plugins, \"decorators-legacy\")) {\n      throw new Error(\"Cannot use the decorators and decorators-legacy plugin together\");\n    }\n\n    const decoratorsBeforeExport = getPluginOption(plugins, \"decorators\", \"decoratorsBeforeExport\");\n\n    if (decoratorsBeforeExport == null) {\n      throw new Error(\"The 'decorators' plugin requires a 'decoratorsBeforeExport' option,\" + \" whose value must be a boolean. If you are migrating from\" + \" Babylon/Babel 6 or want to use the old decorators proposal, you\" + \" should use the 'decorators-legacy' plugin instead of 'decorators'.\");\n    } else if (typeof decoratorsBeforeExport !== \"boolean\") {\n      throw new Error(\"'decoratorsBeforeExport' must be a boolean.\");\n    }\n  }\n\n  if (hasPlugin(plugins, \"flow\") && hasPlugin(plugins, \"typescript\")) {\n    throw new Error(\"Cannot combine flow and typescript plugins.\");\n  }\n\n  if (hasPlugin(plugins, \"placeholders\") && hasPlugin(plugins, \"v8intrinsic\")) {\n    throw new Error(\"Cannot combine placeholders and v8intrinsic plugins.\");\n  }\n\n  if (hasPlugin(plugins, \"pipelineOperator\") && !PIPELINE_PROPOSALS.includes(getPluginOption(plugins, \"pipelineOperator\", \"proposal\"))) {\n    throw new Error(\"'pipelineOperator' requires 'proposal' option whose value should be one of: \" + PIPELINE_PROPOSALS.map(p => `'${p}'`).join(\", \"));\n  }\n\n  if (hasPlugin(plugins, \"moduleAttributes\")) {\n    if (hasPlugin(plugins, \"importAssertions\")) {\n      throw new Error(\"Cannot combine importAssertions and moduleAttributes plugins.\");\n    }\n\n    const moduleAttributesVerionPluginOption = getPluginOption(plugins, \"moduleAttributes\", \"version\");\n\n    if (moduleAttributesVerionPluginOption !== \"may-2020\") {\n      throw new Error(\"The 'moduleAttributes' plugin requires a 'version' option,\" + \" representing the last proposal update. Currently, the\" + \" only supported value is 'may-2020'.\");\n    }\n  }\n\n  if (hasPlugin(plugins, \"recordAndTuple\") && !RECORD_AND_TUPLE_SYNTAX_TYPES.includes(getPluginOption(plugins, \"recordAndTuple\", \"syntaxType\"))) {\n    throw new Error(\"'recordAndTuple' requires 'syntaxType' option whose value should be one of: \" + RECORD_AND_TUPLE_SYNTAX_TYPES.map(p => `'${p}'`).join(\", \"));\n  }\n}\nconst mixinPlugins = {\n  estree,\n  jsx,\n  flow,\n  typescript,\n  v8intrinsic,\n  placeholders\n};\nconst mixinPluginNames = Object.keys(mixinPlugins);\n\nconst defaultOptions = {\n  sourceType: \"script\",\n  sourceFilename: undefined,\n  startLine: 1,\n  allowAwaitOutsideFunction: false,\n  allowReturnOutsideFunction: false,\n  allowImportExportEverywhere: false,\n  allowSuperOutsideMethod: false,\n  allowUndeclaredExports: false,\n  plugins: [],\n  strictMode: null,\n  ranges: false,\n  tokens: false,\n  createParenthesizedExpressions: false,\n  errorRecovery: false\n};\nfunction getOptions(opts) {\n  const options = {};\n\n  for (let _i = 0, _Object$keys = Object.keys(defaultOptions); _i < _Object$keys.length; _i++) {\n    const key = _Object$keys[_i];\n    options[key] = opts && opts[key] != null ? opts[key] : defaultOptions[key];\n  }\n\n  return options;\n}\n\nclass State {\n  constructor() {\n    this.strict = void 0;\n    this.curLine = void 0;\n    this.startLoc = void 0;\n    this.endLoc = void 0;\n    this.errors = [];\n    this.potentialArrowAt = -1;\n    this.noArrowAt = [];\n    this.noArrowParamsConversionAt = [];\n    this.maybeInArrowParameters = false;\n    this.inPipeline = false;\n    this.inType = false;\n    this.noAnonFunctionType = false;\n    this.inPropertyName = false;\n    this.hasFlowComment = false;\n    this.isIterator = false;\n    this.isDeclareContext = false;\n    this.topicContext = {\n      maxNumOfResolvableTopics: 0,\n      maxTopicIndex: null\n    };\n    this.soloAwait = false;\n    this.inFSharpPipelineDirectBody = false;\n    this.labels = [];\n    this.decoratorStack = [[]];\n    this.comments = [];\n    this.trailingComments = [];\n    this.leadingComments = [];\n    this.commentStack = [];\n    this.commentPreviousNode = null;\n    this.pos = 0;\n    this.lineStart = 0;\n    this.type = types.eof;\n    this.value = null;\n    this.start = 0;\n    this.end = 0;\n    this.lastTokEndLoc = null;\n    this.lastTokStartLoc = null;\n    this.lastTokStart = 0;\n    this.lastTokEnd = 0;\n    this.context = [types$1.braceStatement];\n    this.exprAllowed = true;\n    this.containsEsc = false;\n    this.strictErrors = new Map();\n    this.exportedIdentifiers = [];\n    this.tokensLength = 0;\n  }\n\n  init(options) {\n    this.strict = options.strictMode === false ? false : options.sourceType === \"module\";\n    this.curLine = options.startLine;\n    this.startLoc = this.endLoc = this.curPosition();\n  }\n\n  curPosition() {\n    return new Position(this.curLine, this.pos - this.lineStart);\n  }\n\n  clone(skipArrays) {\n    const state = new State();\n    const keys = Object.keys(this);\n\n    for (let i = 0, length = keys.length; i < length; i++) {\n      const key = keys[i];\n      let val = this[key];\n\n      if (!skipArrays && Array.isArray(val)) {\n        val = val.slice();\n      }\n\n      state[key] = val;\n    }\n\n    return state;\n  }\n\n}\n\nvar _isDigit = function isDigit(code) {\n  return code >= 48 && code <= 57;\n};\nconst VALID_REGEX_FLAGS = new Set([\"g\", \"m\", \"s\", \"i\", \"y\", \"u\"]);\nconst forbiddenNumericSeparatorSiblings = {\n  decBinOct: [46, 66, 69, 79, 95, 98, 101, 111],\n  hex: [46, 88, 95, 120]\n};\nconst allowedNumericSeparatorSiblings = {};\nallowedNumericSeparatorSiblings.bin = [48, 49];\nallowedNumericSeparatorSiblings.oct = [...allowedNumericSeparatorSiblings.bin, 50, 51, 52, 53, 54, 55];\nallowedNumericSeparatorSiblings.dec = [...allowedNumericSeparatorSiblings.oct, 56, 57];\nallowedNumericSeparatorSiblings.hex = [...allowedNumericSeparatorSiblings.dec, 65, 66, 67, 68, 69, 70, 97, 98, 99, 100, 101, 102];\nclass Token {\n  constructor(state) {\n    this.type = state.type;\n    this.value = state.value;\n    this.start = state.start;\n    this.end = state.end;\n    this.loc = new SourceLocation(state.startLoc, state.endLoc);\n  }\n\n}\nclass Tokenizer extends ParserError {\n  constructor(options, input) {\n    super();\n    this.isLookahead = void 0;\n    this.tokens = [];\n    this.state = new State();\n    this.state.init(options);\n    this.input = input;\n    this.length = input.length;\n    this.isLookahead = false;\n  }\n\n  pushToken(token) {\n    this.tokens.length = this.state.tokensLength;\n    this.tokens.push(token);\n    ++this.state.tokensLength;\n  }\n\n  next() {\n    if (!this.isLookahead) {\n      this.checkKeywordEscapes();\n\n      if (this.options.tokens) {\n        this.pushToken(new Token(this.state));\n      }\n    }\n\n    this.state.lastTokEnd = this.state.end;\n    this.state.lastTokStart = this.state.start;\n    this.state.lastTokEndLoc = this.state.endLoc;\n    this.state.lastTokStartLoc = this.state.startLoc;\n    this.nextToken();\n  }\n\n  eat(type) {\n    if (this.match(type)) {\n      this.next();\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  match(type) {\n    return this.state.type === type;\n  }\n\n  lookahead() {\n    const old = this.state;\n    this.state = old.clone(true);\n    this.isLookahead = true;\n    this.next();\n    this.isLookahead = false;\n    const curr = this.state;\n    this.state = old;\n    return curr;\n  }\n\n  nextTokenStart() {\n    return this.nextTokenStartSince(this.state.pos);\n  }\n\n  nextTokenStartSince(pos) {\n    skipWhiteSpace.lastIndex = pos;\n    const skip = skipWhiteSpace.exec(this.input);\n    return pos + skip[0].length;\n  }\n\n  lookaheadCharCode() {\n    return this.input.charCodeAt(this.nextTokenStart());\n  }\n\n  setStrict(strict) {\n    this.state.strict = strict;\n\n    if (strict) {\n      this.state.strictErrors.forEach((message, pos) => this.raise(pos, message));\n      this.state.strictErrors.clear();\n    }\n  }\n\n  curContext() {\n    return this.state.context[this.state.context.length - 1];\n  }\n\n  nextToken() {\n    const curContext = this.curContext();\n    if (!(curContext == null ? void 0 : curContext.preserveSpace)) this.skipSpace();\n    this.state.start = this.state.pos;\n    this.state.startLoc = this.state.curPosition();\n\n    if (this.state.pos >= this.length) {\n      this.finishToken(types.eof);\n      return;\n    }\n\n    const override = curContext == null ? void 0 : curContext.override;\n\n    if (override) {\n      override(this);\n    } else {\n      this.getTokenFromCode(this.input.codePointAt(this.state.pos));\n    }\n  }\n\n  pushComment(block, text, start, end, startLoc, endLoc) {\n    const comment = {\n      type: block ? \"CommentBlock\" : \"CommentLine\",\n      value: text,\n      start: start,\n      end: end,\n      loc: new SourceLocation(startLoc, endLoc)\n    };\n    if (this.options.tokens) this.pushToken(comment);\n    this.state.comments.push(comment);\n    this.addComment(comment);\n  }\n\n  skipBlockComment() {\n    const startLoc = this.state.curPosition();\n    const start = this.state.pos;\n    const end = this.input.indexOf(\"*/\", this.state.pos + 2);\n    if (end === -1) throw this.raise(start, ErrorMessages.UnterminatedComment);\n    this.state.pos = end + 2;\n    lineBreakG.lastIndex = start;\n    let match;\n\n    while ((match = lineBreakG.exec(this.input)) && match.index < this.state.pos) {\n      ++this.state.curLine;\n      this.state.lineStart = match.index + match[0].length;\n    }\n\n    if (this.isLookahead) return;\n    this.pushComment(true, this.input.slice(start + 2, end), start, this.state.pos, startLoc, this.state.curPosition());\n  }\n\n  skipLineComment(startSkip) {\n    const start = this.state.pos;\n    const startLoc = this.state.curPosition();\n    let ch = this.input.charCodeAt(this.state.pos += startSkip);\n\n    if (this.state.pos < this.length) {\n      while (!isNewLine(ch) && ++this.state.pos < this.length) {\n        ch = this.input.charCodeAt(this.state.pos);\n      }\n    }\n\n    if (this.isLookahead) return;\n    this.pushComment(false, this.input.slice(start + startSkip, this.state.pos), start, this.state.pos, startLoc, this.state.curPosition());\n  }\n\n  skipSpace() {\n    loop: while (this.state.pos < this.length) {\n      const ch = this.input.charCodeAt(this.state.pos);\n\n      switch (ch) {\n        case 32:\n        case 160:\n        case 9:\n          ++this.state.pos;\n          break;\n\n        case 13:\n          if (this.input.charCodeAt(this.state.pos + 1) === 10) {\n            ++this.state.pos;\n          }\n\n        case 10:\n        case 8232:\n        case 8233:\n          ++this.state.pos;\n          ++this.state.curLine;\n          this.state.lineStart = this.state.pos;\n          break;\n\n        case 47:\n          switch (this.input.charCodeAt(this.state.pos + 1)) {\n            case 42:\n              this.skipBlockComment();\n              break;\n\n            case 47:\n              this.skipLineComment(2);\n              break;\n\n            default:\n              break loop;\n          }\n\n          break;\n\n        default:\n          if (isWhitespace(ch)) {\n            ++this.state.pos;\n          } else {\n            break loop;\n          }\n\n      }\n    }\n  }\n\n  finishToken(type, val) {\n    this.state.end = this.state.pos;\n    this.state.endLoc = this.state.curPosition();\n    const prevType = this.state.type;\n    this.state.type = type;\n    this.state.value = val;\n    if (!this.isLookahead) this.updateContext(prevType);\n  }\n\n  readToken_numberSign() {\n    if (this.state.pos === 0 && this.readToken_interpreter()) {\n      return;\n    }\n\n    const nextPos = this.state.pos + 1;\n    const next = this.input.charCodeAt(nextPos);\n\n    if (next >= 48 && next <= 57) {\n      throw this.raise(this.state.pos, ErrorMessages.UnexpectedDigitAfterHash);\n    }\n\n    if (next === 123 || next === 91 && this.hasPlugin(\"recordAndTuple\")) {\n      this.expectPlugin(\"recordAndTuple\");\n\n      if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"hash\") {\n        throw this.raise(this.state.pos, next === 123 ? ErrorMessages.RecordExpressionHashIncorrectStartSyntaxType : ErrorMessages.TupleExpressionHashIncorrectStartSyntaxType);\n      }\n\n      if (next === 123) {\n        this.finishToken(types.braceHashL);\n      } else {\n        this.finishToken(types.bracketHashL);\n      }\n\n      this.state.pos += 2;\n    } else {\n      this.finishOp(types.hash, 1);\n    }\n  }\n\n  readToken_dot() {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next >= 48 && next <= 57) {\n      this.readNumber(true);\n      return;\n    }\n\n    if (next === 46 && this.input.charCodeAt(this.state.pos + 2) === 46) {\n      this.state.pos += 3;\n      this.finishToken(types.ellipsis);\n    } else {\n      ++this.state.pos;\n      this.finishToken(types.dot);\n    }\n  }\n\n  readToken_slash() {\n    if (this.state.exprAllowed && !this.state.inType) {\n      ++this.state.pos;\n      this.readRegexp();\n      return;\n    }\n\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next === 61) {\n      this.finishOp(types.assign, 2);\n    } else {\n      this.finishOp(types.slash, 1);\n    }\n  }\n\n  readToken_interpreter() {\n    if (this.state.pos !== 0 || this.length < 2) return false;\n    let ch = this.input.charCodeAt(this.state.pos + 1);\n    if (ch !== 33) return false;\n    const start = this.state.pos;\n    this.state.pos += 1;\n\n    while (!isNewLine(ch) && ++this.state.pos < this.length) {\n      ch = this.input.charCodeAt(this.state.pos);\n    }\n\n    const value = this.input.slice(start + 2, this.state.pos);\n    this.finishToken(types.interpreterDirective, value);\n    return true;\n  }\n\n  readToken_mult_modulo(code) {\n    let type = code === 42 ? types.star : types.modulo;\n    let width = 1;\n    let next = this.input.charCodeAt(this.state.pos + 1);\n    const exprAllowed = this.state.exprAllowed;\n\n    if (code === 42 && next === 42) {\n      width++;\n      next = this.input.charCodeAt(this.state.pos + 2);\n      type = types.exponent;\n    }\n\n    if (next === 61 && !exprAllowed) {\n      width++;\n      type = types.assign;\n    }\n\n    this.finishOp(type, width);\n  }\n\n  readToken_pipe_amp(code) {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next === code) {\n      if (this.input.charCodeAt(this.state.pos + 2) === 61) {\n        this.finishOp(types.assign, 3);\n      } else {\n        this.finishOp(code === 124 ? types.logicalOR : types.logicalAND, 2);\n      }\n\n      return;\n    }\n\n    if (code === 124) {\n      if (next === 62) {\n        this.finishOp(types.pipeline, 2);\n        return;\n      }\n\n      if (this.hasPlugin(\"recordAndTuple\") && next === 125) {\n        if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n          throw this.raise(this.state.pos, ErrorMessages.RecordExpressionBarIncorrectEndSyntaxType);\n        }\n\n        this.finishOp(types.braceBarR, 2);\n        return;\n      }\n\n      if (this.hasPlugin(\"recordAndTuple\") && next === 93) {\n        if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n          throw this.raise(this.state.pos, ErrorMessages.TupleExpressionBarIncorrectEndSyntaxType);\n        }\n\n        this.finishOp(types.bracketBarR, 2);\n        return;\n      }\n    }\n\n    if (next === 61) {\n      this.finishOp(types.assign, 2);\n      return;\n    }\n\n    this.finishOp(code === 124 ? types.bitwiseOR : types.bitwiseAND, 1);\n  }\n\n  readToken_caret() {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next === 61) {\n      this.finishOp(types.assign, 2);\n    } else {\n      this.finishOp(types.bitwiseXOR, 1);\n    }\n  }\n\n  readToken_plus_min(code) {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next === code) {\n      if (next === 45 && !this.inModule && this.input.charCodeAt(this.state.pos + 2) === 62 && (this.state.lastTokEnd === 0 || this.hasPrecedingLineBreak())) {\n        this.skipLineComment(3);\n        this.skipSpace();\n        this.nextToken();\n        return;\n      }\n\n      this.finishOp(types.incDec, 2);\n      return;\n    }\n\n    if (next === 61) {\n      this.finishOp(types.assign, 2);\n    } else {\n      this.finishOp(types.plusMin, 1);\n    }\n  }\n\n  readToken_lt_gt(code) {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n    let size = 1;\n\n    if (next === code) {\n      size = code === 62 && this.input.charCodeAt(this.state.pos + 2) === 62 ? 3 : 2;\n\n      if (this.input.charCodeAt(this.state.pos + size) === 61) {\n        this.finishOp(types.assign, size + 1);\n        return;\n      }\n\n      this.finishOp(types.bitShift, size);\n      return;\n    }\n\n    if (next === 33 && code === 60 && !this.inModule && this.input.charCodeAt(this.state.pos + 2) === 45 && this.input.charCodeAt(this.state.pos + 3) === 45) {\n      this.skipLineComment(4);\n      this.skipSpace();\n      this.nextToken();\n      return;\n    }\n\n    if (next === 61) {\n      size = 2;\n    }\n\n    this.finishOp(types.relational, size);\n  }\n\n  readToken_eq_excl(code) {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next === 61) {\n      this.finishOp(types.equality, this.input.charCodeAt(this.state.pos + 2) === 61 ? 3 : 2);\n      return;\n    }\n\n    if (code === 61 && next === 62) {\n      this.state.pos += 2;\n      this.finishToken(types.arrow);\n      return;\n    }\n\n    this.finishOp(code === 61 ? types.eq : types.bang, 1);\n  }\n\n  readToken_question() {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n    const next2 = this.input.charCodeAt(this.state.pos + 2);\n\n    if (next === 63) {\n      if (next2 === 61) {\n        this.finishOp(types.assign, 3);\n      } else {\n        this.finishOp(types.nullishCoalescing, 2);\n      }\n    } else if (next === 46 && !(next2 >= 48 && next2 <= 57)) {\n      this.state.pos += 2;\n      this.finishToken(types.questionDot);\n    } else {\n      ++this.state.pos;\n      this.finishToken(types.question);\n    }\n  }\n\n  getTokenFromCode(code) {\n    switch (code) {\n      case 46:\n        this.readToken_dot();\n        return;\n\n      case 40:\n        ++this.state.pos;\n        this.finishToken(types.parenL);\n        return;\n\n      case 41:\n        ++this.state.pos;\n        this.finishToken(types.parenR);\n        return;\n\n      case 59:\n        ++this.state.pos;\n        this.finishToken(types.semi);\n        return;\n\n      case 44:\n        ++this.state.pos;\n        this.finishToken(types.comma);\n        return;\n\n      case 91:\n        if (this.hasPlugin(\"recordAndTuple\") && this.input.charCodeAt(this.state.pos + 1) === 124) {\n          if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n            throw this.raise(this.state.pos, ErrorMessages.TupleExpressionBarIncorrectStartSyntaxType);\n          }\n\n          this.finishToken(types.bracketBarL);\n          this.state.pos += 2;\n        } else {\n          ++this.state.pos;\n          this.finishToken(types.bracketL);\n        }\n\n        return;\n\n      case 93:\n        ++this.state.pos;\n        this.finishToken(types.bracketR);\n        return;\n\n      case 123:\n        if (this.hasPlugin(\"recordAndTuple\") && this.input.charCodeAt(this.state.pos + 1) === 124) {\n          if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n            throw this.raise(this.state.pos, ErrorMessages.RecordExpressionBarIncorrectStartSyntaxType);\n          }\n\n          this.finishToken(types.braceBarL);\n          this.state.pos += 2;\n        } else {\n          ++this.state.pos;\n          this.finishToken(types.braceL);\n        }\n\n        return;\n\n      case 125:\n        ++this.state.pos;\n        this.finishToken(types.braceR);\n        return;\n\n      case 58:\n        if (this.hasPlugin(\"functionBind\") && this.input.charCodeAt(this.state.pos + 1) === 58) {\n          this.finishOp(types.doubleColon, 2);\n        } else {\n          ++this.state.pos;\n          this.finishToken(types.colon);\n        }\n\n        return;\n\n      case 63:\n        this.readToken_question();\n        return;\n\n      case 96:\n        ++this.state.pos;\n        this.finishToken(types.backQuote);\n        return;\n\n      case 48:\n        {\n          const next = this.input.charCodeAt(this.state.pos + 1);\n\n          if (next === 120 || next === 88) {\n            this.readRadixNumber(16);\n            return;\n          }\n\n          if (next === 111 || next === 79) {\n            this.readRadixNumber(8);\n            return;\n          }\n\n          if (next === 98 || next === 66) {\n            this.readRadixNumber(2);\n            return;\n          }\n        }\n\n      case 49:\n      case 50:\n      case 51:\n      case 52:\n      case 53:\n      case 54:\n      case 55:\n      case 56:\n      case 57:\n        this.readNumber(false);\n        return;\n\n      case 34:\n      case 39:\n        this.readString(code);\n        return;\n\n      case 47:\n        this.readToken_slash();\n        return;\n\n      case 37:\n      case 42:\n        this.readToken_mult_modulo(code);\n        return;\n\n      case 124:\n      case 38:\n        this.readToken_pipe_amp(code);\n        return;\n\n      case 94:\n        this.readToken_caret();\n        return;\n\n      case 43:\n      case 45:\n        this.readToken_plus_min(code);\n        return;\n\n      case 60:\n      case 62:\n        this.readToken_lt_gt(code);\n        return;\n\n      case 61:\n      case 33:\n        this.readToken_eq_excl(code);\n        return;\n\n      case 126:\n        this.finishOp(types.tilde, 1);\n        return;\n\n      case 64:\n        ++this.state.pos;\n        this.finishToken(types.at);\n        return;\n\n      case 35:\n        this.readToken_numberSign();\n        return;\n\n      case 92:\n        this.readWord();\n        return;\n\n      default:\n        if (isIdentifierStart(code)) {\n          this.readWord();\n          return;\n        }\n\n    }\n\n    throw this.raise(this.state.pos, ErrorMessages.InvalidOrUnexpectedToken, String.fromCodePoint(code));\n  }\n\n  finishOp(type, size) {\n    const str = this.input.slice(this.state.pos, this.state.pos + size);\n    this.state.pos += size;\n    this.finishToken(type, str);\n  }\n\n  readRegexp() {\n    const start = this.state.pos;\n    let escaped, inClass;\n\n    for (;;) {\n      if (this.state.pos >= this.length) {\n        throw this.raise(start, ErrorMessages.UnterminatedRegExp);\n      }\n\n      const ch = this.input.charAt(this.state.pos);\n\n      if (lineBreak.test(ch)) {\n        throw this.raise(start, ErrorMessages.UnterminatedRegExp);\n      }\n\n      if (escaped) {\n        escaped = false;\n      } else {\n        if (ch === \"[\") {\n          inClass = true;\n        } else if (ch === \"]\" && inClass) {\n          inClass = false;\n        } else if (ch === \"/\" && !inClass) {\n          break;\n        }\n\n        escaped = ch === \"\\\\\";\n      }\n\n      ++this.state.pos;\n    }\n\n    const content = this.input.slice(start, this.state.pos);\n    ++this.state.pos;\n    let mods = \"\";\n\n    while (this.state.pos < this.length) {\n      const char = this.input[this.state.pos];\n      const charCode = this.input.codePointAt(this.state.pos);\n\n      if (VALID_REGEX_FLAGS.has(char)) {\n        if (mods.indexOf(char) > -1) {\n          this.raise(this.state.pos + 1, ErrorMessages.DuplicateRegExpFlags);\n        }\n      } else if (isIdentifierChar(charCode) || charCode === 92) {\n        this.raise(this.state.pos + 1, ErrorMessages.MalformedRegExpFlags);\n      } else {\n        break;\n      }\n\n      ++this.state.pos;\n      mods += char;\n    }\n\n    this.finishToken(types.regexp, {\n      pattern: content,\n      flags: mods\n    });\n  }\n\n  readInt(radix, len, forceLen, allowNumSeparator = true) {\n    const start = this.state.pos;\n    const forbiddenSiblings = radix === 16 ? forbiddenNumericSeparatorSiblings.hex : forbiddenNumericSeparatorSiblings.decBinOct;\n    const allowedSiblings = radix === 16 ? allowedNumericSeparatorSiblings.hex : radix === 10 ? allowedNumericSeparatorSiblings.dec : radix === 8 ? allowedNumericSeparatorSiblings.oct : allowedNumericSeparatorSiblings.bin;\n    let invalid = false;\n    let total = 0;\n\n    for (let i = 0, e = len == null ? Infinity : len; i < e; ++i) {\n      const code = this.input.charCodeAt(this.state.pos);\n      let val;\n\n      if (code === 95) {\n        const prev = this.input.charCodeAt(this.state.pos - 1);\n        const next = this.input.charCodeAt(this.state.pos + 1);\n\n        if (allowedSiblings.indexOf(next) === -1) {\n          this.raise(this.state.pos, ErrorMessages.UnexpectedNumericSeparator);\n        } else if (forbiddenSiblings.indexOf(prev) > -1 || forbiddenSiblings.indexOf(next) > -1 || Number.isNaN(next)) {\n          this.raise(this.state.pos, ErrorMessages.UnexpectedNumericSeparator);\n        }\n\n        if (!allowNumSeparator) {\n          this.raise(this.state.pos, ErrorMessages.NumericSeparatorInEscapeSequence);\n        }\n\n        ++this.state.pos;\n        continue;\n      }\n\n      if (code >= 97) {\n        val = code - 97 + 10;\n      } else if (code >= 65) {\n        val = code - 65 + 10;\n      } else if (_isDigit(code)) {\n        val = code - 48;\n      } else {\n        val = Infinity;\n      }\n\n      if (val >= radix) {\n        if (this.options.errorRecovery && val <= 9) {\n          val = 0;\n          this.raise(this.state.start + i + 2, ErrorMessages.InvalidDigit, radix);\n        } else if (forceLen) {\n          val = 0;\n          invalid = true;\n        } else {\n          break;\n        }\n      }\n\n      ++this.state.pos;\n      total = total * radix + val;\n    }\n\n    if (this.state.pos === start || len != null && this.state.pos - start !== len || invalid) {\n      return null;\n    }\n\n    return total;\n  }\n\n  readRadixNumber(radix) {\n    const start = this.state.pos;\n    let isBigInt = false;\n    this.state.pos += 2;\n    const val = this.readInt(radix);\n\n    if (val == null) {\n      this.raise(this.state.start + 2, ErrorMessages.InvalidDigit, radix);\n    }\n\n    const next = this.input.charCodeAt(this.state.pos);\n\n    if (next === 110) {\n      ++this.state.pos;\n      isBigInt = true;\n    } else if (next === 109) {\n      throw this.raise(start, ErrorMessages.InvalidDecimal);\n    }\n\n    if (isIdentifierStart(this.input.codePointAt(this.state.pos))) {\n      throw this.raise(this.state.pos, ErrorMessages.NumberIdentifier);\n    }\n\n    if (isBigInt) {\n      const str = this.input.slice(start, this.state.pos).replace(/[_n]/g, \"\");\n      this.finishToken(types.bigint, str);\n      return;\n    }\n\n    this.finishToken(types.num, val);\n  }\n\n  readNumber(startsWithDot) {\n    const start = this.state.pos;\n    let isFloat = false;\n    let isBigInt = false;\n    let isDecimal = false;\n    let hasExponent = false;\n    let isOctal = false;\n\n    if (!startsWithDot && this.readInt(10) === null) {\n      this.raise(start, ErrorMessages.InvalidNumber);\n    }\n\n    const hasLeadingZero = this.state.pos - start >= 2 && this.input.charCodeAt(start) === 48;\n\n    if (hasLeadingZero) {\n      const integer = this.input.slice(start, this.state.pos);\n      this.recordStrictModeErrors(start, ErrorMessages.StrictOctalLiteral);\n\n      if (!this.state.strict) {\n        const underscorePos = integer.indexOf(\"_\");\n\n        if (underscorePos > 0) {\n          this.raise(underscorePos + start, ErrorMessages.ZeroDigitNumericSeparator);\n        }\n      }\n\n      isOctal = hasLeadingZero && !/[89]/.test(integer);\n    }\n\n    let next = this.input.charCodeAt(this.state.pos);\n\n    if (next === 46 && !isOctal) {\n      ++this.state.pos;\n      this.readInt(10);\n      isFloat = true;\n      next = this.input.charCodeAt(this.state.pos);\n    }\n\n    if ((next === 69 || next === 101) && !isOctal) {\n      next = this.input.charCodeAt(++this.state.pos);\n\n      if (next === 43 || next === 45) {\n        ++this.state.pos;\n      }\n\n      if (this.readInt(10) === null) {\n        this.raise(start, ErrorMessages.InvalidOrMissingExponent);\n      }\n\n      isFloat = true;\n      hasExponent = true;\n      next = this.input.charCodeAt(this.state.pos);\n    }\n\n    if (next === 110) {\n      if (isFloat || hasLeadingZero) {\n        this.raise(start, ErrorMessages.InvalidBigIntLiteral);\n      }\n\n      ++this.state.pos;\n      isBigInt = true;\n    }\n\n    if (next === 109) {\n      this.expectPlugin(\"decimal\", this.state.pos);\n\n      if (hasExponent || hasLeadingZero) {\n        this.raise(start, ErrorMessages.InvalidDecimal);\n      }\n\n      ++this.state.pos;\n      isDecimal = true;\n    }\n\n    if (isIdentifierStart(this.input.codePointAt(this.state.pos))) {\n      throw this.raise(this.state.pos, ErrorMessages.NumberIdentifier);\n    }\n\n    const str = this.input.slice(start, this.state.pos).replace(/[_mn]/g, \"\");\n\n    if (isBigInt) {\n      this.finishToken(types.bigint, str);\n      return;\n    }\n\n    if (isDecimal) {\n      this.finishToken(types.decimal, str);\n      return;\n    }\n\n    const val = isOctal ? parseInt(str, 8) : parseFloat(str);\n    this.finishToken(types.num, val);\n  }\n\n  readCodePoint(throwOnInvalid) {\n    const ch = this.input.charCodeAt(this.state.pos);\n    let code;\n\n    if (ch === 123) {\n      const codePos = ++this.state.pos;\n      code = this.readHexChar(this.input.indexOf(\"}\", this.state.pos) - this.state.pos, true, throwOnInvalid);\n      ++this.state.pos;\n\n      if (code !== null && code > 0x10ffff) {\n        if (throwOnInvalid) {\n          this.raise(codePos, ErrorMessages.InvalidCodePoint);\n        } else {\n          return null;\n        }\n      }\n    } else {\n      code = this.readHexChar(4, false, throwOnInvalid);\n    }\n\n    return code;\n  }\n\n  readString(quote) {\n    let out = \"\",\n        chunkStart = ++this.state.pos;\n\n    for (;;) {\n      if (this.state.pos >= this.length) {\n        throw this.raise(this.state.start, ErrorMessages.UnterminatedString);\n      }\n\n      const ch = this.input.charCodeAt(this.state.pos);\n      if (ch === quote) break;\n\n      if (ch === 92) {\n        out += this.input.slice(chunkStart, this.state.pos);\n        out += this.readEscapedChar(false);\n        chunkStart = this.state.pos;\n      } else if (ch === 8232 || ch === 8233) {\n        ++this.state.pos;\n        ++this.state.curLine;\n        this.state.lineStart = this.state.pos;\n      } else if (isNewLine(ch)) {\n        throw this.raise(this.state.start, ErrorMessages.UnterminatedString);\n      } else {\n        ++this.state.pos;\n      }\n    }\n\n    out += this.input.slice(chunkStart, this.state.pos++);\n    this.finishToken(types.string, out);\n  }\n\n  readTmplToken() {\n    let out = \"\",\n        chunkStart = this.state.pos,\n        containsInvalid = false;\n\n    for (;;) {\n      if (this.state.pos >= this.length) {\n        throw this.raise(this.state.start, ErrorMessages.UnterminatedTemplate);\n      }\n\n      const ch = this.input.charCodeAt(this.state.pos);\n\n      if (ch === 96 || ch === 36 && this.input.charCodeAt(this.state.pos + 1) === 123) {\n        if (this.state.pos === this.state.start && this.match(types.template)) {\n          if (ch === 36) {\n            this.state.pos += 2;\n            this.finishToken(types.dollarBraceL);\n            return;\n          } else {\n            ++this.state.pos;\n            this.finishToken(types.backQuote);\n            return;\n          }\n        }\n\n        out += this.input.slice(chunkStart, this.state.pos);\n        this.finishToken(types.template, containsInvalid ? null : out);\n        return;\n      }\n\n      if (ch === 92) {\n        out += this.input.slice(chunkStart, this.state.pos);\n        const escaped = this.readEscapedChar(true);\n\n        if (escaped === null) {\n          containsInvalid = true;\n        } else {\n          out += escaped;\n        }\n\n        chunkStart = this.state.pos;\n      } else if (isNewLine(ch)) {\n        out += this.input.slice(chunkStart, this.state.pos);\n        ++this.state.pos;\n\n        switch (ch) {\n          case 13:\n            if (this.input.charCodeAt(this.state.pos) === 10) {\n              ++this.state.pos;\n            }\n\n          case 10:\n            out += \"\\n\";\n            break;\n\n          default:\n            out += String.fromCharCode(ch);\n            break;\n        }\n\n        ++this.state.curLine;\n        this.state.lineStart = this.state.pos;\n        chunkStart = this.state.pos;\n      } else {\n        ++this.state.pos;\n      }\n    }\n  }\n\n  recordStrictModeErrors(pos, message) {\n    if (this.state.strict && !this.state.strictErrors.has(pos)) {\n      this.raise(pos, message);\n    } else {\n      this.state.strictErrors.set(pos, message);\n    }\n  }\n\n  readEscapedChar(inTemplate) {\n    const throwOnInvalid = !inTemplate;\n    const ch = this.input.charCodeAt(++this.state.pos);\n    ++this.state.pos;\n\n    switch (ch) {\n      case 110:\n        return \"\\n\";\n\n      case 114:\n        return \"\\r\";\n\n      case 120:\n        {\n          const code = this.readHexChar(2, false, throwOnInvalid);\n          return code === null ? null : String.fromCharCode(code);\n        }\n\n      case 117:\n        {\n          const code = this.readCodePoint(throwOnInvalid);\n          return code === null ? null : String.fromCodePoint(code);\n        }\n\n      case 116:\n        return \"\\t\";\n\n      case 98:\n        return \"\\b\";\n\n      case 118:\n        return \"\\u000b\";\n\n      case 102:\n        return \"\\f\";\n\n      case 13:\n        if (this.input.charCodeAt(this.state.pos) === 10) {\n          ++this.state.pos;\n        }\n\n      case 10:\n        this.state.lineStart = this.state.pos;\n        ++this.state.curLine;\n\n      case 8232:\n      case 8233:\n        return \"\";\n\n      case 56:\n      case 57:\n        if (inTemplate) {\n          return null;\n        } else {\n          this.recordStrictModeErrors(this.state.pos - 1, ErrorMessages.StrictNumericEscape);\n        }\n\n      default:\n        if (ch >= 48 && ch <= 55) {\n          const codePos = this.state.pos - 1;\n          const match = this.input.substr(this.state.pos - 1, 3).match(/^[0-7]+/);\n          let octalStr = match[0];\n          let octal = parseInt(octalStr, 8);\n\n          if (octal > 255) {\n            octalStr = octalStr.slice(0, -1);\n            octal = parseInt(octalStr, 8);\n          }\n\n          this.state.pos += octalStr.length - 1;\n          const next = this.input.charCodeAt(this.state.pos);\n\n          if (octalStr !== \"0\" || next === 56 || next === 57) {\n            if (inTemplate) {\n              return null;\n            } else {\n              this.recordStrictModeErrors(codePos, ErrorMessages.StrictNumericEscape);\n            }\n          }\n\n          return String.fromCharCode(octal);\n        }\n\n        return String.fromCharCode(ch);\n    }\n  }\n\n  readHexChar(len, forceLen, throwOnInvalid) {\n    const codePos = this.state.pos;\n    const n = this.readInt(16, len, forceLen, false);\n\n    if (n === null) {\n      if (throwOnInvalid) {\n        this.raise(codePos, ErrorMessages.InvalidEscapeSequence);\n      } else {\n        this.state.pos = codePos - 1;\n      }\n    }\n\n    return n;\n  }\n\n  readWord1() {\n    let word = \"\";\n    this.state.containsEsc = false;\n    const start = this.state.pos;\n    let chunkStart = this.state.pos;\n\n    while (this.state.pos < this.length) {\n      const ch = this.input.codePointAt(this.state.pos);\n\n      if (isIdentifierChar(ch)) {\n        this.state.pos += ch <= 0xffff ? 1 : 2;\n      } else if (this.state.isIterator && ch === 64) {\n        ++this.state.pos;\n      } else if (ch === 92) {\n        this.state.containsEsc = true;\n        word += this.input.slice(chunkStart, this.state.pos);\n        const escStart = this.state.pos;\n        const identifierCheck = this.state.pos === start ? isIdentifierStart : isIdentifierChar;\n\n        if (this.input.charCodeAt(++this.state.pos) !== 117) {\n          this.raise(this.state.pos, ErrorMessages.MissingUnicodeEscape);\n          continue;\n        }\n\n        ++this.state.pos;\n        const esc = this.readCodePoint(true);\n\n        if (esc !== null) {\n          if (!identifierCheck(esc)) {\n            this.raise(escStart, ErrorMessages.EscapedCharNotAnIdentifier);\n          }\n\n          word += String.fromCodePoint(esc);\n        }\n\n        chunkStart = this.state.pos;\n      } else {\n        break;\n      }\n    }\n\n    return word + this.input.slice(chunkStart, this.state.pos);\n  }\n\n  isIterator(word) {\n    return word === \"@@iterator\" || word === \"@@asyncIterator\";\n  }\n\n  readWord() {\n    const word = this.readWord1();\n    const type = keywords.get(word) || types.name;\n\n    if (this.state.isIterator && (!this.isIterator(word) || !this.state.inType)) {\n      this.raise(this.state.pos, ErrorMessages.InvalidIdentifier, word);\n    }\n\n    this.finishToken(type, word);\n  }\n\n  checkKeywordEscapes() {\n    const kw = this.state.type.keyword;\n\n    if (kw && this.state.containsEsc) {\n      this.raise(this.state.start, ErrorMessages.InvalidEscapedReservedWord, kw);\n    }\n  }\n\n  braceIsBlock(prevType) {\n    const parent = this.curContext();\n\n    if (parent === types$1.functionExpression || parent === types$1.functionStatement) {\n      return true;\n    }\n\n    if (prevType === types.colon && (parent === types$1.braceStatement || parent === types$1.braceExpression)) {\n      return !parent.isExpr;\n    }\n\n    if (prevType === types._return || prevType === types.name && this.state.exprAllowed) {\n      return this.hasPrecedingLineBreak();\n    }\n\n    if (prevType === types._else || prevType === types.semi || prevType === types.eof || prevType === types.parenR || prevType === types.arrow) {\n      return true;\n    }\n\n    if (prevType === types.braceL) {\n      return parent === types$1.braceStatement;\n    }\n\n    if (prevType === types._var || prevType === types._const || prevType === types.name) {\n      return false;\n    }\n\n    if (prevType === types.relational) {\n      return true;\n    }\n\n    return !this.state.exprAllowed;\n  }\n\n  updateContext(prevType) {\n    const type = this.state.type;\n    let update;\n\n    if (type.keyword && (prevType === types.dot || prevType === types.questionDot)) {\n      this.state.exprAllowed = false;\n    } else if (update = type.updateContext) {\n      update.call(this, prevType);\n    } else {\n      this.state.exprAllowed = type.beforeExpr;\n    }\n  }\n\n}\n\nclass UtilParser extends Tokenizer {\n  addExtra(node, key, val) {\n    if (!node) return;\n    const extra = node.extra = node.extra || {};\n    extra[key] = val;\n  }\n\n  isRelational(op) {\n    return this.match(types.relational) && this.state.value === op;\n  }\n\n  expectRelational(op) {\n    if (this.isRelational(op)) {\n      this.next();\n    } else {\n      this.unexpected(null, types.relational);\n    }\n  }\n\n  isContextual(name) {\n    return this.match(types.name) && this.state.value === name && !this.state.containsEsc;\n  }\n\n  isUnparsedContextual(nameStart, name) {\n    const nameEnd = nameStart + name.length;\n    return this.input.slice(nameStart, nameEnd) === name && (nameEnd === this.input.length || !isIdentifierChar(this.input.charCodeAt(nameEnd)));\n  }\n\n  isLookaheadContextual(name) {\n    const next = this.nextTokenStart();\n    return this.isUnparsedContextual(next, name);\n  }\n\n  eatContextual(name) {\n    return this.isContextual(name) && this.eat(types.name);\n  }\n\n  expectContextual(name, message) {\n    if (!this.eatContextual(name)) this.unexpected(null, message);\n  }\n\n  canInsertSemicolon() {\n    return this.match(types.eof) || this.match(types.braceR) || this.hasPrecedingLineBreak();\n  }\n\n  hasPrecedingLineBreak() {\n    return lineBreak.test(this.input.slice(this.state.lastTokEnd, this.state.start));\n  }\n\n  isLineTerminator() {\n    return this.eat(types.semi) || this.canInsertSemicolon();\n  }\n\n  semicolon() {\n    if (!this.isLineTerminator()) this.unexpected(null, types.semi);\n  }\n\n  expect(type, pos) {\n    this.eat(type) || this.unexpected(pos, type);\n  }\n\n  assertNoSpace(message = \"Unexpected space.\") {\n    if (this.state.start > this.state.lastTokEnd) {\n      this.raise(this.state.lastTokEnd, message);\n    }\n  }\n\n  unexpected(pos, messageOrType = \"Unexpected token\") {\n    if (typeof messageOrType !== \"string\") {\n      messageOrType = `Unexpected token, expected \"${messageOrType.label}\"`;\n    }\n\n    throw this.raise(pos != null ? pos : this.state.start, messageOrType);\n  }\n\n  expectPlugin(name, pos) {\n    if (!this.hasPlugin(name)) {\n      throw this.raiseWithData(pos != null ? pos : this.state.start, {\n        missingPlugin: [name]\n      }, `This experimental syntax requires enabling the parser plugin: '${name}'`);\n    }\n\n    return true;\n  }\n\n  expectOnePlugin(names, pos) {\n    if (!names.some(n => this.hasPlugin(n))) {\n      throw this.raiseWithData(pos != null ? pos : this.state.start, {\n        missingPlugin: names\n      }, `This experimental syntax requires enabling one of the following parser plugin(s): '${names.join(\", \")}'`);\n    }\n  }\n\n  tryParse(fn, oldState = this.state.clone()) {\n    const abortSignal = {\n      node: null\n    };\n\n    try {\n      const node = fn((node = null) => {\n        abortSignal.node = node;\n        throw abortSignal;\n      });\n\n      if (this.state.errors.length > oldState.errors.length) {\n        const failState = this.state;\n        this.state = oldState;\n        return {\n          node,\n          error: failState.errors[oldState.errors.length],\n          thrown: false,\n          aborted: false,\n          failState\n        };\n      }\n\n      return {\n        node,\n        error: null,\n        thrown: false,\n        aborted: false,\n        failState: null\n      };\n    } catch (error) {\n      const failState = this.state;\n      this.state = oldState;\n\n      if (error instanceof SyntaxError) {\n        return {\n          node: null,\n          error,\n          thrown: true,\n          aborted: false,\n          failState\n        };\n      }\n\n      if (error === abortSignal) {\n        return {\n          node: abortSignal.node,\n          error: null,\n          thrown: false,\n          aborted: true,\n          failState\n        };\n      }\n\n      throw error;\n    }\n  }\n\n  checkExpressionErrors(refExpressionErrors, andThrow) {\n    if (!refExpressionErrors) return false;\n    const {\n      shorthandAssign,\n      doubleProto\n    } = refExpressionErrors;\n    if (!andThrow) return shorthandAssign >= 0 || doubleProto >= 0;\n\n    if (shorthandAssign >= 0) {\n      this.unexpected(shorthandAssign);\n    }\n\n    if (doubleProto >= 0) {\n      this.raise(doubleProto, ErrorMessages.DuplicateProto);\n    }\n  }\n\n  isLiteralPropertyName() {\n    return this.match(types.name) || !!this.state.type.keyword || this.match(types.string) || this.match(types.num) || this.match(types.bigint) || this.match(types.decimal);\n  }\n\n  isPrivateName(node) {\n    return node.type === \"PrivateName\";\n  }\n\n  getPrivateNameSV(node) {\n    return node.id.name;\n  }\n\n  hasPropertyAsPrivateName(node) {\n    return (node.type === \"MemberExpression\" || node.type === \"OptionalMemberExpression\") && this.isPrivateName(node.property);\n  }\n\n  isOptionalChain(node) {\n    return node.type === \"OptionalMemberExpression\" || node.type === \"OptionalCallExpression\";\n  }\n\n  isObjectProperty(node) {\n    return node.type === \"ObjectProperty\";\n  }\n\n  isObjectMethod(node) {\n    return node.type === \"ObjectMethod\";\n  }\n\n}\nclass ExpressionErrors {\n  constructor() {\n    this.shorthandAssign = -1;\n    this.doubleProto = -1;\n  }\n\n}\n\nclass Node {\n  constructor(parser, pos, loc) {\n    this.type = void 0;\n    this.start = void 0;\n    this.end = void 0;\n    this.loc = void 0;\n    this.range = void 0;\n    this.leadingComments = void 0;\n    this.trailingComments = void 0;\n    this.innerComments = void 0;\n    this.extra = void 0;\n    this.type = \"\";\n    this.start = pos;\n    this.end = 0;\n    this.loc = new SourceLocation(loc);\n    if (parser == null ? void 0 : parser.options.ranges) this.range = [pos, 0];\n    if (parser == null ? void 0 : parser.filename) this.loc.filename = parser.filename;\n  }\n\n  __clone() {\n    const newNode = new Node();\n    const keys = Object.keys(this);\n\n    for (let i = 0, length = keys.length; i < length; i++) {\n      const key = keys[i];\n\n      if (key !== \"leadingComments\" && key !== \"trailingComments\" && key !== \"innerComments\") {\n        newNode[key] = this[key];\n      }\n    }\n\n    return newNode;\n  }\n\n}\n\nclass NodeUtils extends UtilParser {\n  startNode() {\n    return new Node(this, this.state.start, this.state.startLoc);\n  }\n\n  startNodeAt(pos, loc) {\n    return new Node(this, pos, loc);\n  }\n\n  startNodeAtNode(type) {\n    return this.startNodeAt(type.start, type.loc.start);\n  }\n\n  finishNode(node, type) {\n    return this.finishNodeAt(node, type, this.state.lastTokEnd, this.state.lastTokEndLoc);\n  }\n\n  finishNodeAt(node, type, pos, loc) {\n\n    node.type = type;\n    node.end = pos;\n    node.loc.end = loc;\n    if (this.options.ranges) node.range[1] = pos;\n    this.processComment(node);\n    return node;\n  }\n\n  resetStartLocation(node, start, startLoc) {\n    node.start = start;\n    node.loc.start = startLoc;\n    if (this.options.ranges) node.range[0] = start;\n  }\n\n  resetEndLocation(node, end = this.state.lastTokEnd, endLoc = this.state.lastTokEndLoc) {\n    node.end = end;\n    node.loc.end = endLoc;\n    if (this.options.ranges) node.range[1] = end;\n  }\n\n  resetStartLocationFromNode(node, locationNode) {\n    this.resetStartLocation(node, locationNode.start, locationNode.loc.start);\n  }\n\n}\n\nconst unwrapParenthesizedExpression = node => {\n  return node.type === \"ParenthesizedExpression\" ? unwrapParenthesizedExpression(node.expression) : node;\n};\n\nclass LValParser extends NodeUtils {\n  toAssignable(node, isLHS = false) {\n    var _node$extra, _node$extra3;\n\n    let parenthesized = undefined;\n\n    if (node.type === \"ParenthesizedExpression\" || ((_node$extra = node.extra) == null ? void 0 : _node$extra.parenthesized)) {\n      parenthesized = unwrapParenthesizedExpression(node);\n\n      if (isLHS) {\n        if (parenthesized.type === \"Identifier\") {\n          this.expressionScope.recordParenthesizedIdentifierError(node.start, ErrorMessages.InvalidParenthesizedAssignment);\n        } else if (parenthesized.type !== \"MemberExpression\") {\n          this.raise(node.start, ErrorMessages.InvalidParenthesizedAssignment);\n        }\n      } else {\n        this.raise(node.start, ErrorMessages.InvalidParenthesizedAssignment);\n      }\n    }\n\n    switch (node.type) {\n      case \"Identifier\":\n      case \"ObjectPattern\":\n      case \"ArrayPattern\":\n      case \"AssignmentPattern\":\n        break;\n\n      case \"ObjectExpression\":\n        node.type = \"ObjectPattern\";\n\n        for (let i = 0, length = node.properties.length, last = length - 1; i < length; i++) {\n          var _node$extra2;\n\n          const prop = node.properties[i];\n          const isLast = i === last;\n          this.toAssignableObjectExpressionProp(prop, isLast, isLHS);\n\n          if (isLast && prop.type === \"RestElement\" && ((_node$extra2 = node.extra) == null ? void 0 : _node$extra2.trailingComma)) {\n            this.raiseRestNotLast(node.extra.trailingComma);\n          }\n        }\n\n        break;\n\n      case \"ObjectProperty\":\n        this.toAssignable(node.value, isLHS);\n        break;\n\n      case \"SpreadElement\":\n        {\n          this.checkToRestConversion(node);\n          node.type = \"RestElement\";\n          const arg = node.argument;\n          this.toAssignable(arg, isLHS);\n          break;\n        }\n\n      case \"ArrayExpression\":\n        node.type = \"ArrayPattern\";\n        this.toAssignableList(node.elements, (_node$extra3 = node.extra) == null ? void 0 : _node$extra3.trailingComma, isLHS);\n        break;\n\n      case \"AssignmentExpression\":\n        if (node.operator !== \"=\") {\n          this.raise(node.left.end, ErrorMessages.MissingEqInAssignment);\n        }\n\n        node.type = \"AssignmentPattern\";\n        delete node.operator;\n        this.toAssignable(node.left, isLHS);\n        break;\n\n      case \"ParenthesizedExpression\":\n        this.toAssignable(parenthesized, isLHS);\n        break;\n    }\n\n    return node;\n  }\n\n  toAssignableObjectExpressionProp(prop, isLast, isLHS) {\n    if (prop.type === \"ObjectMethod\") {\n      const error = prop.kind === \"get\" || prop.kind === \"set\" ? ErrorMessages.PatternHasAccessor : ErrorMessages.PatternHasMethod;\n      this.raise(prop.key.start, error);\n    } else if (prop.type === \"SpreadElement\" && !isLast) {\n      this.raiseRestNotLast(prop.start);\n    } else {\n      this.toAssignable(prop, isLHS);\n    }\n  }\n\n  toAssignableList(exprList, trailingCommaPos, isLHS) {\n    let end = exprList.length;\n\n    if (end) {\n      const last = exprList[end - 1];\n\n      if ((last == null ? void 0 : last.type) === \"RestElement\") {\n        --end;\n      } else if ((last == null ? void 0 : last.type) === \"SpreadElement\") {\n        last.type = \"RestElement\";\n        let arg = last.argument;\n        this.toAssignable(arg, isLHS);\n        arg = unwrapParenthesizedExpression(arg);\n\n        if (arg.type !== \"Identifier\" && arg.type !== \"MemberExpression\" && arg.type !== \"ArrayPattern\" && arg.type !== \"ObjectPattern\") {\n          this.unexpected(arg.start);\n        }\n\n        if (trailingCommaPos) {\n          this.raiseTrailingCommaAfterRest(trailingCommaPos);\n        }\n\n        --end;\n      }\n    }\n\n    for (let i = 0; i < end; i++) {\n      const elt = exprList[i];\n\n      if (elt) {\n        this.toAssignable(elt, isLHS);\n\n        if (elt.type === \"RestElement\") {\n          this.raiseRestNotLast(elt.start);\n        }\n      }\n    }\n\n    return exprList;\n  }\n\n  toReferencedList(exprList, isParenthesizedExpr) {\n    return exprList;\n  }\n\n  toReferencedListDeep(exprList, isParenthesizedExpr) {\n    this.toReferencedList(exprList, isParenthesizedExpr);\n\n    for (let _i = 0; _i < exprList.length; _i++) {\n      const expr = exprList[_i];\n\n      if ((expr == null ? void 0 : expr.type) === \"ArrayExpression\") {\n        this.toReferencedListDeep(expr.elements);\n      }\n    }\n  }\n\n  parseSpread(refExpressionErrors, refNeedsArrowPos) {\n    const node = this.startNode();\n    this.next();\n    node.argument = this.parseMaybeAssignAllowIn(refExpressionErrors, undefined, refNeedsArrowPos);\n    return this.finishNode(node, \"SpreadElement\");\n  }\n\n  parseRestBinding() {\n    const node = this.startNode();\n    this.next();\n    node.argument = this.parseBindingAtom();\n    return this.finishNode(node, \"RestElement\");\n  }\n\n  parseBindingAtom() {\n    switch (this.state.type) {\n      case types.bracketL:\n        {\n          const node = this.startNode();\n          this.next();\n          node.elements = this.parseBindingList(types.bracketR, 93, true);\n          return this.finishNode(node, \"ArrayPattern\");\n        }\n\n      case types.braceL:\n        return this.parseObjectLike(types.braceR, true);\n    }\n\n    return this.parseIdentifier();\n  }\n\n  parseBindingList(close, closeCharCode, allowEmpty, allowModifiers) {\n    const elts = [];\n    let first = true;\n\n    while (!this.eat(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(types.comma);\n      }\n\n      if (allowEmpty && this.match(types.comma)) {\n        elts.push(null);\n      } else if (this.eat(close)) {\n        break;\n      } else if (this.match(types.ellipsis)) {\n        elts.push(this.parseAssignableListItemTypes(this.parseRestBinding()));\n        this.checkCommaAfterRest(closeCharCode);\n        this.expect(close);\n        break;\n      } else {\n        const decorators = [];\n\n        if (this.match(types.at) && this.hasPlugin(\"decorators\")) {\n          this.raise(this.state.start, ErrorMessages.UnsupportedParameterDecorator);\n        }\n\n        while (this.match(types.at)) {\n          decorators.push(this.parseDecorator());\n        }\n\n        elts.push(this.parseAssignableListItem(allowModifiers, decorators));\n      }\n    }\n\n    return elts;\n  }\n\n  parseAssignableListItem(allowModifiers, decorators) {\n    const left = this.parseMaybeDefault();\n    this.parseAssignableListItemTypes(left);\n    const elt = this.parseMaybeDefault(left.start, left.loc.start, left);\n\n    if (decorators.length) {\n      left.decorators = decorators;\n    }\n\n    return elt;\n  }\n\n  parseAssignableListItemTypes(param) {\n    return param;\n  }\n\n  parseMaybeDefault(startPos, startLoc, left) {\n    var _startLoc, _startPos, _left;\n\n    startLoc = (_startLoc = startLoc) != null ? _startLoc : this.state.startLoc;\n    startPos = (_startPos = startPos) != null ? _startPos : this.state.start;\n    left = (_left = left) != null ? _left : this.parseBindingAtom();\n    if (!this.eat(types.eq)) return left;\n    const node = this.startNodeAt(startPos, startLoc);\n    node.left = left;\n    node.right = this.parseMaybeAssignAllowIn();\n    return this.finishNode(node, \"AssignmentPattern\");\n  }\n\n  checkLVal(expr, contextDescription, bindingType = BIND_NONE, checkClashes, disallowLetBinding, strictModeChanged = false) {\n    switch (expr.type) {\n      case \"Identifier\":\n        {\n          const {\n            name\n          } = expr;\n\n          if (this.state.strict && (strictModeChanged ? isStrictBindReservedWord(name, this.inModule) : isStrictBindOnlyReservedWord(name))) {\n            this.raise(expr.start, bindingType === BIND_NONE ? ErrorMessages.StrictEvalArguments : ErrorMessages.StrictEvalArgumentsBinding, name);\n          }\n\n          if (checkClashes) {\n            if (checkClashes.has(name)) {\n              this.raise(expr.start, ErrorMessages.ParamDupe);\n            } else {\n              checkClashes.add(name);\n            }\n          }\n\n          if (disallowLetBinding && name === \"let\") {\n            this.raise(expr.start, ErrorMessages.LetInLexicalBinding);\n          }\n\n          if (!(bindingType & BIND_NONE)) {\n            this.scope.declareName(name, bindingType, expr.start);\n          }\n\n          break;\n        }\n\n      case \"MemberExpression\":\n        if (bindingType !== BIND_NONE) {\n          this.raise(expr.start, ErrorMessages.InvalidPropertyBindingPattern);\n        }\n\n        break;\n\n      case \"ObjectPattern\":\n        for (let _i2 = 0, _expr$properties = expr.properties; _i2 < _expr$properties.length; _i2++) {\n          let prop = _expr$properties[_i2];\n          if (this.isObjectProperty(prop)) prop = prop.value;else if (this.isObjectMethod(prop)) continue;\n          this.checkLVal(prop, \"object destructuring pattern\", bindingType, checkClashes, disallowLetBinding);\n        }\n\n        break;\n\n      case \"ArrayPattern\":\n        for (let _i3 = 0, _expr$elements = expr.elements; _i3 < _expr$elements.length; _i3++) {\n          const elem = _expr$elements[_i3];\n\n          if (elem) {\n            this.checkLVal(elem, \"array destructuring pattern\", bindingType, checkClashes, disallowLetBinding);\n          }\n        }\n\n        break;\n\n      case \"AssignmentPattern\":\n        this.checkLVal(expr.left, \"assignment pattern\", bindingType, checkClashes);\n        break;\n\n      case \"RestElement\":\n        this.checkLVal(expr.argument, \"rest element\", bindingType, checkClashes);\n        break;\n\n      case \"ParenthesizedExpression\":\n        this.checkLVal(expr.expression, \"parenthesized expression\", bindingType, checkClashes);\n        break;\n\n      default:\n        {\n          this.raise(expr.start, bindingType === BIND_NONE ? ErrorMessages.InvalidLhs : ErrorMessages.InvalidLhsBinding, contextDescription);\n        }\n    }\n  }\n\n  checkToRestConversion(node) {\n    if (node.argument.type !== \"Identifier\" && node.argument.type !== \"MemberExpression\") {\n      this.raise(node.argument.start, ErrorMessages.InvalidRestAssignmentPattern);\n    }\n  }\n\n  checkCommaAfterRest(close) {\n    if (this.match(types.comma)) {\n      if (this.lookaheadCharCode() === close) {\n        this.raiseTrailingCommaAfterRest(this.state.start);\n      } else {\n        this.raiseRestNotLast(this.state.start);\n      }\n    }\n  }\n\n  raiseRestNotLast(pos) {\n    throw this.raise(pos, ErrorMessages.ElementAfterRest);\n  }\n\n  raiseTrailingCommaAfterRest(pos) {\n    this.raise(pos, ErrorMessages.RestTrailingComma);\n  }\n\n}\n\nconst kExpression = 0,\n      kMaybeArrowParameterDeclaration = 1,\n      kMaybeAsyncArrowParameterDeclaration = 2,\n      kParameterDeclaration = 3;\n\nclass ExpressionScope {\n  constructor(type = kExpression) {\n    this.type = void 0;\n    this.type = type;\n  }\n\n  canBeArrowParameterDeclaration() {\n    return this.type === kMaybeAsyncArrowParameterDeclaration || this.type === kMaybeArrowParameterDeclaration;\n  }\n\n  isCertainlyParameterDeclaration() {\n    return this.type === kParameterDeclaration;\n  }\n\n}\n\nclass ArrowHeadParsingScope extends ExpressionScope {\n  constructor(type) {\n    super(type);\n    this.errors = new Map();\n  }\n\n  recordDeclarationError(pos, message) {\n    this.errors.set(pos, message);\n  }\n\n  clearDeclarationError(pos) {\n    this.errors.delete(pos);\n  }\n\n  iterateErrors(iterator) {\n    this.errors.forEach(iterator);\n  }\n\n}\n\nclass ExpressionScopeHandler {\n  constructor(raise) {\n    this.stack = [new ExpressionScope()];\n    this.raise = raise;\n  }\n\n  enter(scope) {\n    this.stack.push(scope);\n  }\n\n  exit() {\n    this.stack.pop();\n  }\n\n  recordParameterInitializerError(pos, message) {\n    const {\n      stack\n    } = this;\n    let i = stack.length - 1;\n    let scope = stack[i];\n\n    while (!scope.isCertainlyParameterDeclaration()) {\n      if (scope.canBeArrowParameterDeclaration()) {\n        scope.recordDeclarationError(pos, message);\n      } else {\n        return;\n      }\n\n      scope = stack[--i];\n    }\n\n    this.raise(pos, message);\n  }\n\n  recordParenthesizedIdentifierError(pos, message) {\n    const {\n      stack\n    } = this;\n    const scope = stack[stack.length - 1];\n\n    if (scope.isCertainlyParameterDeclaration()) {\n      this.raise(pos, message);\n    } else if (scope.canBeArrowParameterDeclaration()) {\n      scope.recordDeclarationError(pos, message);\n    } else {\n      return;\n    }\n  }\n\n  recordAsyncArrowParametersError(pos, message) {\n    const {\n      stack\n    } = this;\n    let i = stack.length - 1;\n    let scope = stack[i];\n\n    while (scope.canBeArrowParameterDeclaration()) {\n      if (scope.type === kMaybeAsyncArrowParameterDeclaration) {\n        scope.recordDeclarationError(pos, message);\n      }\n\n      scope = stack[--i];\n    }\n  }\n\n  validateAsPattern() {\n    const {\n      stack\n    } = this;\n    const currentScope = stack[stack.length - 1];\n    if (!currentScope.canBeArrowParameterDeclaration()) return;\n    currentScope.iterateErrors((message, pos) => {\n      this.raise(pos, message);\n      let i = stack.length - 2;\n      let scope = stack[i];\n\n      while (scope.canBeArrowParameterDeclaration()) {\n        scope.clearDeclarationError(pos);\n        scope = stack[--i];\n      }\n    });\n  }\n\n}\nfunction newParameterDeclarationScope() {\n  return new ExpressionScope(kParameterDeclaration);\n}\nfunction newArrowHeadScope() {\n  return new ArrowHeadParsingScope(kMaybeArrowParameterDeclaration);\n}\nfunction newAsyncArrowScope() {\n  return new ArrowHeadParsingScope(kMaybeAsyncArrowParameterDeclaration);\n}\nfunction newExpressionScope() {\n  return new ExpressionScope();\n}\n\nclass ExpressionParser extends LValParser {\n  checkProto(prop, isRecord, protoRef, refExpressionErrors) {\n    if (prop.type === \"SpreadElement\" || this.isObjectMethod(prop) || prop.computed || prop.shorthand) {\n      return;\n    }\n\n    const key = prop.key;\n    const name = key.type === \"Identifier\" ? key.name : key.value;\n\n    if (name === \"__proto__\") {\n      if (isRecord) {\n        this.raise(key.start, ErrorMessages.RecordNoProto);\n        return;\n      }\n\n      if (protoRef.used) {\n        if (refExpressionErrors) {\n          if (refExpressionErrors.doubleProto === -1) {\n            refExpressionErrors.doubleProto = key.start;\n          }\n        } else {\n          this.raise(key.start, ErrorMessages.DuplicateProto);\n        }\n      }\n\n      protoRef.used = true;\n    }\n  }\n\n  shouldExitDescending(expr, potentialArrowAt) {\n    return expr.type === \"ArrowFunctionExpression\" && expr.start === potentialArrowAt;\n  }\n\n  getExpression() {\n    let paramFlags = PARAM;\n\n    if (this.hasPlugin(\"topLevelAwait\") && this.inModule) {\n      paramFlags |= PARAM_AWAIT;\n    }\n\n    this.scope.enter(SCOPE_PROGRAM);\n    this.prodParam.enter(paramFlags);\n    this.nextToken();\n    const expr = this.parseExpression();\n\n    if (!this.match(types.eof)) {\n      this.unexpected();\n    }\n\n    expr.comments = this.state.comments;\n    expr.errors = this.state.errors;\n    return expr;\n  }\n\n  parseExpression(disallowIn, refExpressionErrors) {\n    if (disallowIn) {\n      return this.disallowInAnd(() => this.parseExpressionBase(refExpressionErrors));\n    }\n\n    return this.allowInAnd(() => this.parseExpressionBase(refExpressionErrors));\n  }\n\n  parseExpressionBase(refExpressionErrors) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const expr = this.parseMaybeAssign(refExpressionErrors);\n\n    if (this.match(types.comma)) {\n      const node = this.startNodeAt(startPos, startLoc);\n      node.expressions = [expr];\n\n      while (this.eat(types.comma)) {\n        node.expressions.push(this.parseMaybeAssign(refExpressionErrors));\n      }\n\n      this.toReferencedList(node.expressions);\n      return this.finishNode(node, \"SequenceExpression\");\n    }\n\n    return expr;\n  }\n\n  parseMaybeAssignDisallowIn(refExpressionErrors, afterLeftParse, refNeedsArrowPos) {\n    return this.disallowInAnd(() => this.parseMaybeAssign(refExpressionErrors, afterLeftParse, refNeedsArrowPos));\n  }\n\n  parseMaybeAssignAllowIn(refExpressionErrors, afterLeftParse, refNeedsArrowPos) {\n    return this.allowInAnd(() => this.parseMaybeAssign(refExpressionErrors, afterLeftParse, refNeedsArrowPos));\n  }\n\n  parseMaybeAssign(refExpressionErrors, afterLeftParse, refNeedsArrowPos) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n\n    if (this.isContextual(\"yield\")) {\n      if (this.prodParam.hasYield) {\n        this.state.exprAllowed = true;\n        let left = this.parseYield();\n\n        if (afterLeftParse) {\n          left = afterLeftParse.call(this, left, startPos, startLoc);\n        }\n\n        return left;\n      }\n    }\n\n    let ownExpressionErrors;\n\n    if (refExpressionErrors) {\n      ownExpressionErrors = false;\n    } else {\n      refExpressionErrors = new ExpressionErrors();\n      ownExpressionErrors = true;\n    }\n\n    if (this.match(types.parenL) || this.match(types.name)) {\n      this.state.potentialArrowAt = this.state.start;\n    }\n\n    let left = this.parseMaybeConditional(refExpressionErrors, refNeedsArrowPos);\n\n    if (afterLeftParse) {\n      left = afterLeftParse.call(this, left, startPos, startLoc);\n    }\n\n    if (this.state.type.isAssign) {\n      const node = this.startNodeAt(startPos, startLoc);\n      const operator = this.state.value;\n      node.operator = operator;\n\n      if (this.match(types.eq)) {\n        node.left = this.toAssignable(left, true);\n        refExpressionErrors.doubleProto = -1;\n      } else {\n        node.left = left;\n      }\n\n      if (refExpressionErrors.shorthandAssign >= node.left.start) {\n        refExpressionErrors.shorthandAssign = -1;\n      }\n\n      this.checkLVal(left, \"assignment expression\");\n      this.next();\n      node.right = this.parseMaybeAssign();\n      return this.finishNode(node, \"AssignmentExpression\");\n    } else if (ownExpressionErrors) {\n      this.checkExpressionErrors(refExpressionErrors, true);\n    }\n\n    return left;\n  }\n\n  parseMaybeConditional(refExpressionErrors, refNeedsArrowPos) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const potentialArrowAt = this.state.potentialArrowAt;\n    const expr = this.parseExprOps(refExpressionErrors);\n\n    if (this.shouldExitDescending(expr, potentialArrowAt)) {\n      return expr;\n    }\n\n    return this.parseConditional(expr, startPos, startLoc, refNeedsArrowPos);\n  }\n\n  parseConditional(expr, startPos, startLoc, refNeedsArrowPos) {\n    if (this.eat(types.question)) {\n      const node = this.startNodeAt(startPos, startLoc);\n      node.test = expr;\n      node.consequent = this.parseMaybeAssignAllowIn();\n      this.expect(types.colon);\n      node.alternate = this.parseMaybeAssign();\n      return this.finishNode(node, \"ConditionalExpression\");\n    }\n\n    return expr;\n  }\n\n  parseExprOps(refExpressionErrors) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const potentialArrowAt = this.state.potentialArrowAt;\n    const expr = this.parseMaybeUnary(refExpressionErrors);\n\n    if (this.shouldExitDescending(expr, potentialArrowAt)) {\n      return expr;\n    }\n\n    return this.parseExprOp(expr, startPos, startLoc, -1);\n  }\n\n  parseExprOp(left, leftStartPos, leftStartLoc, minPrec) {\n    let prec = this.state.type.binop;\n\n    if (prec != null && (this.prodParam.hasIn || !this.match(types._in))) {\n      if (prec > minPrec) {\n        const op = this.state.type;\n\n        if (op === types.pipeline) {\n          this.expectPlugin(\"pipelineOperator\");\n\n          if (this.state.inFSharpPipelineDirectBody) {\n            return left;\n          }\n\n          this.state.inPipeline = true;\n          this.checkPipelineAtInfixOperator(left, leftStartPos);\n        }\n\n        const node = this.startNodeAt(leftStartPos, leftStartLoc);\n        node.left = left;\n        node.operator = this.state.value;\n\n        if (op === types.exponent && left.type === \"UnaryExpression\" && (this.options.createParenthesizedExpressions || !(left.extra && left.extra.parenthesized))) {\n          this.raise(left.argument.start, ErrorMessages.UnexpectedTokenUnaryExponentiation);\n        }\n\n        const logical = op === types.logicalOR || op === types.logicalAND;\n        const coalesce = op === types.nullishCoalescing;\n\n        if (coalesce) {\n          prec = types.logicalAND.binop;\n        }\n\n        this.next();\n\n        if (op === types.pipeline && this.getPluginOption(\"pipelineOperator\", \"proposal\") === \"minimal\") {\n          if (this.match(types.name) && this.state.value === \"await\" && this.prodParam.hasAwait) {\n            throw this.raise(this.state.start, ErrorMessages.UnexpectedAwaitAfterPipelineBody);\n          }\n        }\n\n        node.right = this.parseExprOpRightExpr(op, prec);\n        this.finishNode(node, logical || coalesce ? \"LogicalExpression\" : \"BinaryExpression\");\n        const nextOp = this.state.type;\n\n        if (coalesce && (nextOp === types.logicalOR || nextOp === types.logicalAND) || logical && nextOp === types.nullishCoalescing) {\n          throw this.raise(this.state.start, ErrorMessages.MixingCoalesceWithLogical);\n        }\n\n        return this.parseExprOp(node, leftStartPos, leftStartLoc, minPrec);\n      }\n    }\n\n    return left;\n  }\n\n  parseExprOpRightExpr(op, prec) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n\n    switch (op) {\n      case types.pipeline:\n        switch (this.getPluginOption(\"pipelineOperator\", \"proposal\")) {\n          case \"smart\":\n            return this.withTopicPermittingContext(() => {\n              return this.parseSmartPipelineBody(this.parseExprOpBaseRightExpr(op, prec), startPos, startLoc);\n            });\n\n          case \"fsharp\":\n            return this.withSoloAwaitPermittingContext(() => {\n              return this.parseFSharpPipelineBody(prec);\n            });\n        }\n\n      default:\n        return this.parseExprOpBaseRightExpr(op, prec);\n    }\n  }\n\n  parseExprOpBaseRightExpr(op, prec) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    return this.parseExprOp(this.parseMaybeUnary(), startPos, startLoc, op.rightAssociative ? prec - 1 : prec);\n  }\n\n  parseMaybeUnary(refExpressionErrors) {\n    if (this.isContextual(\"await\") && this.isAwaitAllowed()) {\n      return this.parseAwait();\n    }\n\n    const update = this.match(types.incDec);\n    const node = this.startNode();\n\n    if (this.state.type.prefix) {\n      node.operator = this.state.value;\n      node.prefix = true;\n\n      if (this.match(types._throw)) {\n        this.expectPlugin(\"throwExpressions\");\n      }\n\n      const isDelete = this.match(types._delete);\n      this.next();\n      node.argument = this.parseMaybeUnary();\n      this.checkExpressionErrors(refExpressionErrors, true);\n\n      if (this.state.strict && isDelete) {\n        const arg = node.argument;\n\n        if (arg.type === \"Identifier\") {\n          this.raise(node.start, ErrorMessages.StrictDelete);\n        } else if (this.hasPropertyAsPrivateName(arg)) {\n          this.raise(node.start, ErrorMessages.DeletePrivateField);\n        }\n      }\n\n      if (!update) {\n        return this.finishNode(node, \"UnaryExpression\");\n      }\n    }\n\n    return this.parseUpdate(node, update, refExpressionErrors);\n  }\n\n  parseUpdate(node, update, refExpressionErrors) {\n    if (update) {\n      this.checkLVal(node.argument, \"prefix operation\");\n      return this.finishNode(node, \"UpdateExpression\");\n    }\n\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    let expr = this.parseExprSubscripts(refExpressionErrors);\n    if (this.checkExpressionErrors(refExpressionErrors, false)) return expr;\n\n    while (this.state.type.postfix && !this.canInsertSemicolon()) {\n      const node = this.startNodeAt(startPos, startLoc);\n      node.operator = this.state.value;\n      node.prefix = false;\n      node.argument = expr;\n      this.checkLVal(expr, \"postfix operation\");\n      this.next();\n      expr = this.finishNode(node, \"UpdateExpression\");\n    }\n\n    return expr;\n  }\n\n  parseExprSubscripts(refExpressionErrors) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const potentialArrowAt = this.state.potentialArrowAt;\n    const expr = this.parseExprAtom(refExpressionErrors);\n\n    if (this.shouldExitDescending(expr, potentialArrowAt)) {\n      return expr;\n    }\n\n    return this.parseSubscripts(expr, startPos, startLoc);\n  }\n\n  parseSubscripts(base, startPos, startLoc, noCalls) {\n    const state = {\n      optionalChainMember: false,\n      maybeAsyncArrow: this.atPossibleAsyncArrow(base),\n      stop: false\n    };\n\n    do {\n      base = this.parseSubscript(base, startPos, startLoc, noCalls, state);\n      state.maybeAsyncArrow = false;\n    } while (!state.stop);\n\n    return base;\n  }\n\n  parseSubscript(base, startPos, startLoc, noCalls, state) {\n    if (!noCalls && this.eat(types.doubleColon)) {\n      return this.parseBind(base, startPos, startLoc, noCalls, state);\n    } else if (this.match(types.backQuote)) {\n      return this.parseTaggedTemplateExpression(base, startPos, startLoc, state);\n    }\n\n    let optional = false;\n\n    if (this.match(types.questionDot)) {\n      if (noCalls && this.lookaheadCharCode() === 40) {\n        state.stop = true;\n        return base;\n      }\n\n      state.optionalChainMember = optional = true;\n      this.next();\n    }\n\n    if (!noCalls && this.match(types.parenL)) {\n      return this.parseCoverCallAndAsyncArrowHead(base, startPos, startLoc, state, optional);\n    } else if (optional || this.match(types.bracketL) || this.eat(types.dot)) {\n      return this.parseMember(base, startPos, startLoc, state, optional);\n    } else {\n      state.stop = true;\n      return base;\n    }\n  }\n\n  parseMember(base, startPos, startLoc, state, optional) {\n    const node = this.startNodeAt(startPos, startLoc);\n    const computed = this.eat(types.bracketL);\n    node.object = base;\n    node.computed = computed;\n    const property = computed ? this.parseExpression() : this.parseMaybePrivateName(true);\n\n    if (this.isPrivateName(property)) {\n      if (node.object.type === \"Super\") {\n        this.raise(startPos, ErrorMessages.SuperPrivateField);\n      }\n\n      this.classScope.usePrivateName(this.getPrivateNameSV(property), property.start);\n    }\n\n    node.property = property;\n\n    if (computed) {\n      this.expect(types.bracketR);\n    }\n\n    if (state.optionalChainMember) {\n      node.optional = optional;\n      return this.finishNode(node, \"OptionalMemberExpression\");\n    } else {\n      return this.finishNode(node, \"MemberExpression\");\n    }\n  }\n\n  parseBind(base, startPos, startLoc, noCalls, state) {\n    const node = this.startNodeAt(startPos, startLoc);\n    node.object = base;\n    node.callee = this.parseNoCallExpr();\n    state.stop = true;\n    return this.parseSubscripts(this.finishNode(node, \"BindExpression\"), startPos, startLoc, noCalls);\n  }\n\n  parseCoverCallAndAsyncArrowHead(base, startPos, startLoc, state, optional) {\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n    this.state.maybeInArrowParameters = true;\n    this.next();\n    let node = this.startNodeAt(startPos, startLoc);\n    node.callee = base;\n\n    if (state.maybeAsyncArrow) {\n      this.expressionScope.enter(newAsyncArrowScope());\n    }\n\n    if (state.optionalChainMember) {\n      node.optional = optional;\n    }\n\n    if (optional) {\n      node.arguments = this.parseCallExpressionArguments(types.parenR, false);\n    } else {\n      node.arguments = this.parseCallExpressionArguments(types.parenR, state.maybeAsyncArrow, base.type === \"Import\", base.type !== \"Super\", node);\n    }\n\n    this.finishCallExpression(node, state.optionalChainMember);\n\n    if (state.maybeAsyncArrow && this.shouldParseAsyncArrow() && !optional) {\n      state.stop = true;\n      this.expressionScope.validateAsPattern();\n      this.expressionScope.exit();\n      node = this.parseAsyncArrowFromCallExpression(this.startNodeAt(startPos, startLoc), node);\n    } else {\n      if (state.maybeAsyncArrow) {\n        this.expressionScope.exit();\n      }\n\n      this.toReferencedArguments(node);\n    }\n\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n    return node;\n  }\n\n  toReferencedArguments(node, isParenthesizedExpr) {\n    this.toReferencedListDeep(node.arguments, isParenthesizedExpr);\n  }\n\n  parseTaggedTemplateExpression(base, startPos, startLoc, state) {\n    const node = this.startNodeAt(startPos, startLoc);\n    node.tag = base;\n    node.quasi = this.parseTemplate(true);\n\n    if (state.optionalChainMember) {\n      this.raise(startPos, ErrorMessages.OptionalChainingNoTemplate);\n    }\n\n    return this.finishNode(node, \"TaggedTemplateExpression\");\n  }\n\n  atPossibleAsyncArrow(base) {\n    return base.type === \"Identifier\" && base.name === \"async\" && this.state.lastTokEnd === base.end && !this.canInsertSemicolon() && base.end - base.start === 5 && base.start === this.state.potentialArrowAt;\n  }\n\n  finishCallExpression(node, optional) {\n    if (node.callee.type === \"Import\") {\n      if (node.arguments.length === 2) {\n        if (!this.hasPlugin(\"moduleAttributes\")) {\n          this.expectPlugin(\"importAssertions\");\n        }\n      }\n\n      if (node.arguments.length === 0 || node.arguments.length > 2) {\n        this.raise(node.start, ErrorMessages.ImportCallArity, this.hasPlugin(\"importAssertions\") || this.hasPlugin(\"moduleAttributes\") ? \"one or two arguments\" : \"one argument\");\n      } else {\n        for (let _i = 0, _node$arguments = node.arguments; _i < _node$arguments.length; _i++) {\n          const arg = _node$arguments[_i];\n\n          if (arg.type === \"SpreadElement\") {\n            this.raise(arg.start, ErrorMessages.ImportCallSpreadArgument);\n          }\n        }\n      }\n    }\n\n    return this.finishNode(node, optional ? \"OptionalCallExpression\" : \"CallExpression\");\n  }\n\n  parseCallExpressionArguments(close, possibleAsyncArrow, dynamicImport, allowPlaceholder, nodeForExtra) {\n    const elts = [];\n    let first = true;\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = false;\n\n    while (!this.eat(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(types.comma);\n\n        if (this.match(close)) {\n          if (dynamicImport && !this.hasPlugin(\"importAssertions\") && !this.hasPlugin(\"moduleAttributes\")) {\n            this.raise(this.state.lastTokStart, ErrorMessages.ImportCallArgumentTrailingComma);\n          }\n\n          if (nodeForExtra) {\n            this.addExtra(nodeForExtra, \"trailingComma\", this.state.lastTokStart);\n          }\n\n          this.next();\n          break;\n        }\n      }\n\n      elts.push(this.parseExprListItem(false, possibleAsyncArrow ? new ExpressionErrors() : undefined, possibleAsyncArrow ? {\n        start: 0\n      } : undefined, allowPlaceholder));\n    }\n\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n    return elts;\n  }\n\n  shouldParseAsyncArrow() {\n    return this.match(types.arrow) && !this.canInsertSemicolon();\n  }\n\n  parseAsyncArrowFromCallExpression(node, call) {\n    var _call$extra;\n\n    this.expect(types.arrow);\n    this.parseArrowExpression(node, call.arguments, true, (_call$extra = call.extra) == null ? void 0 : _call$extra.trailingComma);\n    return node;\n  }\n\n  parseNoCallExpr() {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    return this.parseSubscripts(this.parseExprAtom(), startPos, startLoc, true);\n  }\n\n  parseExprAtom(refExpressionErrors) {\n    if (this.state.type === types.slash) this.readRegexp();\n    const canBeArrow = this.state.potentialArrowAt === this.state.start;\n    let node;\n\n    switch (this.state.type) {\n      case types._super:\n        return this.parseSuper();\n\n      case types._import:\n        node = this.startNode();\n        this.next();\n\n        if (this.match(types.dot)) {\n          return this.parseImportMetaProperty(node);\n        }\n\n        if (!this.match(types.parenL)) {\n          this.raise(this.state.lastTokStart, ErrorMessages.UnsupportedImport);\n        }\n\n        return this.finishNode(node, \"Import\");\n\n      case types._this:\n        node = this.startNode();\n        this.next();\n        return this.finishNode(node, \"ThisExpression\");\n\n      case types.name:\n        {\n          const containsEsc = this.state.containsEsc;\n          const id = this.parseIdentifier();\n\n          if (!containsEsc && id.name === \"async\" && !this.canInsertSemicolon()) {\n            if (this.match(types._function)) {\n              const last = this.state.context.length - 1;\n\n              if (this.state.context[last] !== types$1.functionStatement) {\n                throw new Error(\"Internal error\");\n              }\n\n              this.state.context[last] = types$1.functionExpression;\n              this.next();\n              return this.parseFunction(this.startNodeAtNode(id), undefined, true);\n            } else if (this.match(types.name)) {\n              return this.parseAsyncArrowUnaryFunction(id);\n            }\n          }\n\n          if (canBeArrow && this.match(types.arrow) && !this.canInsertSemicolon()) {\n            this.next();\n            return this.parseArrowExpression(this.startNodeAtNode(id), [id], false);\n          }\n\n          return id;\n        }\n\n      case types._do:\n        {\n          return this.parseDo();\n        }\n\n      case types.regexp:\n        {\n          const value = this.state.value;\n          node = this.parseLiteral(value.value, \"RegExpLiteral\");\n          node.pattern = value.pattern;\n          node.flags = value.flags;\n          return node;\n        }\n\n      case types.num:\n        return this.parseLiteral(this.state.value, \"NumericLiteral\");\n\n      case types.bigint:\n        return this.parseLiteral(this.state.value, \"BigIntLiteral\");\n\n      case types.decimal:\n        return this.parseLiteral(this.state.value, \"DecimalLiteral\");\n\n      case types.string:\n        return this.parseLiteral(this.state.value, \"StringLiteral\");\n\n      case types._null:\n        node = this.startNode();\n        this.next();\n        return this.finishNode(node, \"NullLiteral\");\n\n      case types._true:\n      case types._false:\n        return this.parseBooleanLiteral();\n\n      case types.parenL:\n        return this.parseParenAndDistinguishExpression(canBeArrow);\n\n      case types.bracketBarL:\n      case types.bracketHashL:\n        {\n          return this.parseArrayLike(this.state.type === types.bracketBarL ? types.bracketBarR : types.bracketR, false, true, refExpressionErrors);\n        }\n\n      case types.bracketL:\n        {\n          return this.parseArrayLike(types.bracketR, true, false, refExpressionErrors);\n        }\n\n      case types.braceBarL:\n      case types.braceHashL:\n        {\n          return this.parseObjectLike(this.state.type === types.braceBarL ? types.braceBarR : types.braceR, false, true, refExpressionErrors);\n        }\n\n      case types.braceL:\n        {\n          return this.parseObjectLike(types.braceR, false, false, refExpressionErrors);\n        }\n\n      case types._function:\n        return this.parseFunctionOrFunctionSent();\n\n      case types.at:\n        this.parseDecorators();\n\n      case types._class:\n        node = this.startNode();\n        this.takeDecorators(node);\n        return this.parseClass(node, false);\n\n      case types._new:\n        return this.parseNewOrNewTarget();\n\n      case types.backQuote:\n        return this.parseTemplate(false);\n\n      case types.doubleColon:\n        {\n          node = this.startNode();\n          this.next();\n          node.object = null;\n          const callee = node.callee = this.parseNoCallExpr();\n\n          if (callee.type === \"MemberExpression\") {\n            return this.finishNode(node, \"BindExpression\");\n          } else {\n            throw this.raise(callee.start, ErrorMessages.UnsupportedBind);\n          }\n        }\n\n      case types.hash:\n        {\n          if (this.state.inPipeline) {\n            node = this.startNode();\n\n            if (this.getPluginOption(\"pipelineOperator\", \"proposal\") !== \"smart\") {\n              this.raise(node.start, ErrorMessages.PrimaryTopicRequiresSmartPipeline);\n            }\n\n            this.next();\n\n            if (!this.primaryTopicReferenceIsAllowedInCurrentTopicContext()) {\n              this.raise(node.start, ErrorMessages.PrimaryTopicNotAllowed);\n            }\n\n            this.registerTopicReference();\n            return this.finishNode(node, \"PipelinePrimaryTopicReference\");\n          }\n\n          const nextCh = this.input.codePointAt(this.state.end);\n\n          if (isIdentifierStart(nextCh) || nextCh === 92) {\n            const start = this.state.start;\n            node = this.parseMaybePrivateName(true);\n\n            if (this.match(types._in)) {\n              this.expectPlugin(\"privateIn\");\n              this.classScope.usePrivateName(node.id.name, node.start);\n            } else if (this.hasPlugin(\"privateIn\")) {\n              this.raise(this.state.start, ErrorMessages.PrivateInExpectedIn, node.id.name);\n            } else {\n              throw this.unexpected(start);\n            }\n\n            return node;\n          }\n        }\n\n      case types.relational:\n        {\n          if (this.state.value === \"<\") {\n            const lookaheadCh = this.input.codePointAt(this.nextTokenStart());\n\n            if (isIdentifierStart(lookaheadCh) || lookaheadCh === 62) {\n                this.expectOnePlugin([\"jsx\", \"flow\", \"typescript\"]);\n              }\n          }\n        }\n\n      default:\n        throw this.unexpected();\n    }\n  }\n\n  parseAsyncArrowUnaryFunction(id) {\n    const node = this.startNodeAtNode(id);\n    this.prodParam.enter(functionFlags(true, this.prodParam.hasYield));\n    const params = [this.parseIdentifier()];\n    this.prodParam.exit();\n\n    if (this.hasPrecedingLineBreak()) {\n      this.raise(this.state.pos, ErrorMessages.LineTerminatorBeforeArrow);\n    }\n\n    this.expect(types.arrow);\n    this.parseArrowExpression(node, params, true);\n    return node;\n  }\n\n  parseDo() {\n    this.expectPlugin(\"doExpressions\");\n    const node = this.startNode();\n    this.next();\n    const oldLabels = this.state.labels;\n    this.state.labels = [];\n    node.body = this.parseBlock();\n    this.state.labels = oldLabels;\n    return this.finishNode(node, \"DoExpression\");\n  }\n\n  parseSuper() {\n    const node = this.startNode();\n    this.next();\n\n    if (this.match(types.parenL) && !this.scope.allowDirectSuper && !this.options.allowSuperOutsideMethod) {\n      this.raise(node.start, ErrorMessages.SuperNotAllowed);\n    } else if (!this.scope.allowSuper && !this.options.allowSuperOutsideMethod) {\n      this.raise(node.start, ErrorMessages.UnexpectedSuper);\n    }\n\n    if (!this.match(types.parenL) && !this.match(types.bracketL) && !this.match(types.dot)) {\n      this.raise(node.start, ErrorMessages.UnsupportedSuper);\n    }\n\n    return this.finishNode(node, \"Super\");\n  }\n\n  parseBooleanLiteral() {\n    const node = this.startNode();\n    node.value = this.match(types._true);\n    this.next();\n    return this.finishNode(node, \"BooleanLiteral\");\n  }\n\n  parseMaybePrivateName(isPrivateNameAllowed) {\n    const isPrivate = this.match(types.hash);\n\n    if (isPrivate) {\n      this.expectOnePlugin([\"classPrivateProperties\", \"classPrivateMethods\"]);\n\n      if (!isPrivateNameAllowed) {\n        this.raise(this.state.pos, ErrorMessages.UnexpectedPrivateField);\n      }\n\n      const node = this.startNode();\n      this.next();\n      this.assertNoSpace(\"Unexpected space between # and identifier\");\n      node.id = this.parseIdentifier(true);\n      return this.finishNode(node, \"PrivateName\");\n    } else {\n      return this.parseIdentifier(true);\n    }\n  }\n\n  parseFunctionOrFunctionSent() {\n    const node = this.startNode();\n    this.next();\n\n    if (this.prodParam.hasYield && this.match(types.dot)) {\n      const meta = this.createIdentifier(this.startNodeAtNode(node), \"function\");\n      this.next();\n      return this.parseMetaProperty(node, meta, \"sent\");\n    }\n\n    return this.parseFunction(node);\n  }\n\n  parseMetaProperty(node, meta, propertyName) {\n    node.meta = meta;\n\n    if (meta.name === \"function\" && propertyName === \"sent\") {\n      if (this.isContextual(propertyName)) {\n        this.expectPlugin(\"functionSent\");\n      } else if (!this.hasPlugin(\"functionSent\")) {\n        this.unexpected();\n      }\n    }\n\n    const containsEsc = this.state.containsEsc;\n    node.property = this.parseIdentifier(true);\n\n    if (node.property.name !== propertyName || containsEsc) {\n      this.raise(node.property.start, ErrorMessages.UnsupportedMetaProperty, meta.name, propertyName);\n    }\n\n    return this.finishNode(node, \"MetaProperty\");\n  }\n\n  parseImportMetaProperty(node) {\n    const id = this.createIdentifier(this.startNodeAtNode(node), \"import\");\n    this.next();\n\n    if (this.isContextual(\"meta\")) {\n      if (!this.inModule) {\n        this.raiseWithData(id.start, {\n          code: \"BABEL_PARSER_SOURCETYPE_MODULE_REQUIRED\"\n        }, ErrorMessages.ImportMetaOutsideModule);\n      }\n\n      this.sawUnambiguousESM = true;\n    }\n\n    return this.parseMetaProperty(node, id, \"meta\");\n  }\n\n  parseLiteral(value, type, startPos, startLoc) {\n    startPos = startPos || this.state.start;\n    startLoc = startLoc || this.state.startLoc;\n    const node = this.startNodeAt(startPos, startLoc);\n    this.addExtra(node, \"rawValue\", value);\n    this.addExtra(node, \"raw\", this.input.slice(startPos, this.state.end));\n    node.value = value;\n    this.next();\n    return this.finishNode(node, type);\n  }\n\n  parseParenAndDistinguishExpression(canBeArrow) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    let val;\n    this.next();\n    this.expressionScope.enter(newArrowHeadScope());\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.maybeInArrowParameters = true;\n    this.state.inFSharpPipelineDirectBody = false;\n    const innerStartPos = this.state.start;\n    const innerStartLoc = this.state.startLoc;\n    const exprList = [];\n    const refExpressionErrors = new ExpressionErrors();\n    const refNeedsArrowPos = {\n      start: 0\n    };\n    let first = true;\n    let spreadStart;\n    let optionalCommaStart;\n\n    while (!this.match(types.parenR)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(types.comma, refNeedsArrowPos.start || null);\n\n        if (this.match(types.parenR)) {\n          optionalCommaStart = this.state.start;\n          break;\n        }\n      }\n\n      if (this.match(types.ellipsis)) {\n        const spreadNodeStartPos = this.state.start;\n        const spreadNodeStartLoc = this.state.startLoc;\n        spreadStart = this.state.start;\n        exprList.push(this.parseParenItem(this.parseRestBinding(), spreadNodeStartPos, spreadNodeStartLoc));\n        this.checkCommaAfterRest(41);\n        break;\n      } else {\n        exprList.push(this.parseMaybeAssignAllowIn(refExpressionErrors, this.parseParenItem, refNeedsArrowPos));\n      }\n    }\n\n    const innerEndPos = this.state.lastTokEnd;\n    const innerEndLoc = this.state.lastTokEndLoc;\n    this.expect(types.parenR);\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n    let arrowNode = this.startNodeAt(startPos, startLoc);\n\n    if (canBeArrow && this.shouldParseArrow() && (arrowNode = this.parseArrow(arrowNode))) {\n      this.expressionScope.validateAsPattern();\n      this.expressionScope.exit();\n      this.parseArrowExpression(arrowNode, exprList, false);\n      return arrowNode;\n    }\n\n    this.expressionScope.exit();\n\n    if (!exprList.length) {\n      this.unexpected(this.state.lastTokStart);\n    }\n\n    if (optionalCommaStart) this.unexpected(optionalCommaStart);\n    if (spreadStart) this.unexpected(spreadStart);\n    this.checkExpressionErrors(refExpressionErrors, true);\n    if (refNeedsArrowPos.start) this.unexpected(refNeedsArrowPos.start);\n    this.toReferencedListDeep(exprList, true);\n\n    if (exprList.length > 1) {\n      val = this.startNodeAt(innerStartPos, innerStartLoc);\n      val.expressions = exprList;\n      this.finishNodeAt(val, \"SequenceExpression\", innerEndPos, innerEndLoc);\n    } else {\n      val = exprList[0];\n    }\n\n    if (!this.options.createParenthesizedExpressions) {\n      this.addExtra(val, \"parenthesized\", true);\n      this.addExtra(val, \"parenStart\", startPos);\n      return val;\n    }\n\n    const parenExpression = this.startNodeAt(startPos, startLoc);\n    parenExpression.expression = val;\n    this.finishNode(parenExpression, \"ParenthesizedExpression\");\n    return parenExpression;\n  }\n\n  shouldParseArrow() {\n    return !this.canInsertSemicolon();\n  }\n\n  parseArrow(node) {\n    if (this.eat(types.arrow)) {\n      return node;\n    }\n  }\n\n  parseParenItem(node, startPos, startLoc) {\n    return node;\n  }\n\n  parseNewOrNewTarget() {\n    const node = this.startNode();\n    this.next();\n\n    if (this.match(types.dot)) {\n      const meta = this.createIdentifier(this.startNodeAtNode(node), \"new\");\n      this.next();\n      const metaProp = this.parseMetaProperty(node, meta, \"target\");\n\n      if (!this.scope.inNonArrowFunction && !this.scope.inClass) {\n        let error = ErrorMessages.UnexpectedNewTarget;\n\n        if (this.hasPlugin(\"classProperties\")) {\n          error += \" or class properties\";\n        }\n\n        this.raise(metaProp.start, error);\n      }\n\n      return metaProp;\n    }\n\n    return this.parseNew(node);\n  }\n\n  parseNew(node) {\n    node.callee = this.parseNoCallExpr();\n\n    if (node.callee.type === \"Import\") {\n      this.raise(node.callee.start, ErrorMessages.ImportCallNotNewExpression);\n    } else if (this.isOptionalChain(node.callee)) {\n      this.raise(this.state.lastTokEnd, ErrorMessages.OptionalChainingNoNew);\n    } else if (this.eat(types.questionDot)) {\n      this.raise(this.state.start, ErrorMessages.OptionalChainingNoNew);\n    }\n\n    this.parseNewArguments(node);\n    return this.finishNode(node, \"NewExpression\");\n  }\n\n  parseNewArguments(node) {\n    if (this.eat(types.parenL)) {\n      const args = this.parseExprList(types.parenR);\n      this.toReferencedList(args);\n      node.arguments = args;\n    } else {\n      node.arguments = [];\n    }\n  }\n\n  parseTemplateElement(isTagged) {\n    const elem = this.startNode();\n\n    if (this.state.value === null) {\n      if (!isTagged) {\n        this.raise(this.state.start + 1, ErrorMessages.InvalidEscapeSequenceTemplate);\n      }\n    }\n\n    elem.value = {\n      raw: this.input.slice(this.state.start, this.state.end).replace(/\\r\\n?/g, \"\\n\"),\n      cooked: this.state.value\n    };\n    this.next();\n    elem.tail = this.match(types.backQuote);\n    return this.finishNode(elem, \"TemplateElement\");\n  }\n\n  parseTemplate(isTagged) {\n    const node = this.startNode();\n    this.next();\n    node.expressions = [];\n    let curElt = this.parseTemplateElement(isTagged);\n    node.quasis = [curElt];\n\n    while (!curElt.tail) {\n      this.expect(types.dollarBraceL);\n      node.expressions.push(this.parseTemplateSubstitution());\n      this.expect(types.braceR);\n      node.quasis.push(curElt = this.parseTemplateElement(isTagged));\n    }\n\n    this.next();\n    return this.finishNode(node, \"TemplateLiteral\");\n  }\n\n  parseTemplateSubstitution() {\n    return this.parseExpression();\n  }\n\n  parseObjectLike(close, isPattern, isRecord, refExpressionErrors) {\n    if (isRecord) {\n      this.expectPlugin(\"recordAndTuple\");\n    }\n\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = false;\n    const propHash = Object.create(null);\n    let first = true;\n    const node = this.startNode();\n    node.properties = [];\n    this.next();\n\n    while (!this.match(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(types.comma);\n\n        if (this.match(close)) {\n          this.addExtra(node, \"trailingComma\", this.state.lastTokStart);\n          break;\n        }\n      }\n\n      const prop = this.parsePropertyDefinition(isPattern, refExpressionErrors);\n\n      if (!isPattern) {\n        this.checkProto(prop, isRecord, propHash, refExpressionErrors);\n      }\n\n      if (isRecord && !this.isObjectProperty(prop) && prop.type !== \"SpreadElement\") {\n        this.raise(prop.start, ErrorMessages.InvalidRecordProperty);\n      }\n\n      if (prop.shorthand) {\n        this.addExtra(prop, \"shorthand\", true);\n      }\n\n      node.properties.push(prop);\n    }\n\n    this.state.exprAllowed = false;\n    this.next();\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n    let type = \"ObjectExpression\";\n\n    if (isPattern) {\n      type = \"ObjectPattern\";\n    } else if (isRecord) {\n      type = \"RecordExpression\";\n    }\n\n    return this.finishNode(node, type);\n  }\n\n  maybeAsyncOrAccessorProp(prop) {\n    return !prop.computed && prop.key.type === \"Identifier\" && (this.isLiteralPropertyName() || this.match(types.bracketL) || this.match(types.star));\n  }\n\n  parsePropertyDefinition(isPattern, refExpressionErrors) {\n    let decorators = [];\n\n    if (this.match(types.at)) {\n      if (this.hasPlugin(\"decorators\")) {\n        this.raise(this.state.start, ErrorMessages.UnsupportedPropertyDecorator);\n      }\n\n      while (this.match(types.at)) {\n        decorators.push(this.parseDecorator());\n      }\n    }\n\n    const prop = this.startNode();\n    let isGenerator = false;\n    let isAsync = false;\n    let isAccessor = false;\n    let startPos;\n    let startLoc;\n\n    if (this.match(types.ellipsis)) {\n      if (decorators.length) this.unexpected();\n\n      if (isPattern) {\n        this.next();\n        prop.argument = this.parseIdentifier();\n        this.checkCommaAfterRest(125);\n        return this.finishNode(prop, \"RestElement\");\n      }\n\n      return this.parseSpread();\n    }\n\n    if (decorators.length) {\n      prop.decorators = decorators;\n      decorators = [];\n    }\n\n    prop.method = false;\n\n    if (isPattern || refExpressionErrors) {\n      startPos = this.state.start;\n      startLoc = this.state.startLoc;\n    }\n\n    if (!isPattern) {\n      isGenerator = this.eat(types.star);\n    }\n\n    const containsEsc = this.state.containsEsc;\n    const key = this.parsePropertyName(prop, false);\n\n    if (!isPattern && !isGenerator && !containsEsc && this.maybeAsyncOrAccessorProp(prop)) {\n      const keyName = key.name;\n\n      if (keyName === \"async\" && !this.hasPrecedingLineBreak()) {\n        isAsync = true;\n        isGenerator = this.eat(types.star);\n        this.parsePropertyName(prop, false);\n      }\n\n      if (keyName === \"get\" || keyName === \"set\") {\n        isAccessor = true;\n        prop.kind = keyName;\n\n        if (this.match(types.star)) {\n          isGenerator = true;\n          this.raise(this.state.pos, ErrorMessages.AccessorIsGenerator, keyName);\n          this.next();\n        }\n\n        this.parsePropertyName(prop, false);\n      }\n    }\n\n    this.parseObjPropValue(prop, startPos, startLoc, isGenerator, isAsync, isPattern, isAccessor, refExpressionErrors);\n    return prop;\n  }\n\n  getGetterSetterExpectedParamCount(method) {\n    return method.kind === \"get\" ? 0 : 1;\n  }\n\n  getObjectOrClassMethodParams(method) {\n    return method.params;\n  }\n\n  checkGetterSetterParams(method) {\n    var _params;\n\n    const paramCount = this.getGetterSetterExpectedParamCount(method);\n    const params = this.getObjectOrClassMethodParams(method);\n    const start = method.start;\n\n    if (params.length !== paramCount) {\n      if (method.kind === \"get\") {\n        this.raise(start, ErrorMessages.BadGetterArity);\n      } else {\n        this.raise(start, ErrorMessages.BadSetterArity);\n      }\n    }\n\n    if (method.kind === \"set\" && ((_params = params[params.length - 1]) == null ? void 0 : _params.type) === \"RestElement\") {\n      this.raise(start, ErrorMessages.BadSetterRestParameter);\n    }\n  }\n\n  parseObjectMethod(prop, isGenerator, isAsync, isPattern, isAccessor) {\n    if (isAccessor) {\n      this.parseMethod(prop, isGenerator, false, false, false, \"ObjectMethod\");\n      this.checkGetterSetterParams(prop);\n      return prop;\n    }\n\n    if (isAsync || isGenerator || this.match(types.parenL)) {\n      if (isPattern) this.unexpected();\n      prop.kind = \"method\";\n      prop.method = true;\n      return this.parseMethod(prop, isGenerator, isAsync, false, false, \"ObjectMethod\");\n    }\n  }\n\n  parseObjectProperty(prop, startPos, startLoc, isPattern, refExpressionErrors) {\n    prop.shorthand = false;\n\n    if (this.eat(types.colon)) {\n      prop.value = isPattern ? this.parseMaybeDefault(this.state.start, this.state.startLoc) : this.parseMaybeAssignAllowIn(refExpressionErrors);\n      return this.finishNode(prop, \"ObjectProperty\");\n    }\n\n    if (!prop.computed && prop.key.type === \"Identifier\") {\n      this.checkReservedWord(prop.key.name, prop.key.start, true, false);\n\n      if (isPattern) {\n        prop.value = this.parseMaybeDefault(startPos, startLoc, prop.key.__clone());\n      } else if (this.match(types.eq) && refExpressionErrors) {\n        if (refExpressionErrors.shorthandAssign === -1) {\n          refExpressionErrors.shorthandAssign = this.state.start;\n        }\n\n        prop.value = this.parseMaybeDefault(startPos, startLoc, prop.key.__clone());\n      } else {\n        prop.value = prop.key.__clone();\n      }\n\n      prop.shorthand = true;\n      return this.finishNode(prop, \"ObjectProperty\");\n    }\n  }\n\n  parseObjPropValue(prop, startPos, startLoc, isGenerator, isAsync, isPattern, isAccessor, refExpressionErrors) {\n    const node = this.parseObjectMethod(prop, isGenerator, isAsync, isPattern, isAccessor) || this.parseObjectProperty(prop, startPos, startLoc, isPattern, refExpressionErrors);\n    if (!node) this.unexpected();\n    return node;\n  }\n\n  parsePropertyName(prop, isPrivateNameAllowed) {\n    if (this.eat(types.bracketL)) {\n      prop.computed = true;\n      prop.key = this.parseMaybeAssignAllowIn();\n      this.expect(types.bracketR);\n    } else {\n      const oldInPropertyName = this.state.inPropertyName;\n      this.state.inPropertyName = true;\n      prop.key = this.match(types.num) || this.match(types.string) || this.match(types.bigint) || this.match(types.decimal) ? this.parseExprAtom() : this.parseMaybePrivateName(isPrivateNameAllowed);\n\n      if (!this.isPrivateName(prop.key)) {\n        prop.computed = false;\n      }\n\n      this.state.inPropertyName = oldInPropertyName;\n    }\n\n    return prop.key;\n  }\n\n  initFunction(node, isAsync) {\n    node.id = null;\n    node.generator = false;\n    node.async = !!isAsync;\n  }\n\n  parseMethod(node, isGenerator, isAsync, isConstructor, allowDirectSuper, type, inClassScope = false) {\n    this.initFunction(node, isAsync);\n    node.generator = !!isGenerator;\n    const allowModifiers = isConstructor;\n    this.scope.enter(SCOPE_FUNCTION | SCOPE_SUPER | (inClassScope ? SCOPE_CLASS : 0) | (allowDirectSuper ? SCOPE_DIRECT_SUPER : 0));\n    this.prodParam.enter(functionFlags(isAsync, node.generator));\n    this.parseFunctionParams(node, allowModifiers);\n    this.parseFunctionBodyAndFinish(node, type, true);\n    this.prodParam.exit();\n    this.scope.exit();\n    return node;\n  }\n\n  parseArrayLike(close, canBePattern, isTuple, refExpressionErrors) {\n    if (isTuple) {\n      this.expectPlugin(\"recordAndTuple\");\n    }\n\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = false;\n    const node = this.startNode();\n    this.next();\n    node.elements = this.parseExprList(close, !isTuple, refExpressionErrors, node);\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n    return this.finishNode(node, isTuple ? \"TupleExpression\" : \"ArrayExpression\");\n  }\n\n  parseArrowExpression(node, params, isAsync, trailingCommaPos) {\n    this.scope.enter(SCOPE_FUNCTION | SCOPE_ARROW);\n    let flags = functionFlags(isAsync, false);\n\n    if (!this.match(types.bracketL) && this.prodParam.hasIn) {\n      flags |= PARAM_IN;\n    }\n\n    this.prodParam.enter(flags);\n    this.initFunction(node, isAsync);\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n\n    if (params) {\n      this.state.maybeInArrowParameters = true;\n      this.setArrowFunctionParameters(node, params, trailingCommaPos);\n    }\n\n    this.state.maybeInArrowParameters = false;\n    this.parseFunctionBody(node, true);\n    this.prodParam.exit();\n    this.scope.exit();\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n    return this.finishNode(node, \"ArrowFunctionExpression\");\n  }\n\n  setArrowFunctionParameters(node, params, trailingCommaPos) {\n    node.params = this.toAssignableList(params, trailingCommaPos, false);\n  }\n\n  parseFunctionBodyAndFinish(node, type, isMethod = false) {\n    this.parseFunctionBody(node, false, isMethod);\n    this.finishNode(node, type);\n  }\n\n  parseFunctionBody(node, allowExpression, isMethod = false) {\n    const isExpression = allowExpression && !this.match(types.braceL);\n    this.expressionScope.enter(newExpressionScope());\n\n    if (isExpression) {\n      node.body = this.parseMaybeAssign();\n      this.checkParams(node, false, allowExpression, false);\n    } else {\n      const oldStrict = this.state.strict;\n      const oldLabels = this.state.labels;\n      this.state.labels = [];\n      this.prodParam.enter(this.prodParam.currentFlags() | PARAM_RETURN);\n      node.body = this.parseBlock(true, false, hasStrictModeDirective => {\n        const nonSimple = !this.isSimpleParamList(node.params);\n\n        if (hasStrictModeDirective && nonSimple) {\n          const errorPos = (node.kind === \"method\" || node.kind === \"constructor\") && !!node.key ? node.key.end : node.start;\n          this.raise(errorPos, ErrorMessages.IllegalLanguageModeDirective);\n        }\n\n        const strictModeChanged = !oldStrict && this.state.strict;\n        this.checkParams(node, !this.state.strict && !allowExpression && !isMethod && !nonSimple, allowExpression, strictModeChanged);\n\n        if (this.state.strict && node.id) {\n          this.checkLVal(node.id, \"function name\", BIND_OUTSIDE, undefined, undefined, strictModeChanged);\n        }\n      });\n      this.prodParam.exit();\n      this.expressionScope.exit();\n      this.state.labels = oldLabels;\n    }\n  }\n\n  isSimpleParamList(params) {\n    for (let i = 0, len = params.length; i < len; i++) {\n      if (params[i].type !== \"Identifier\") return false;\n    }\n\n    return true;\n  }\n\n  checkParams(node, allowDuplicates, isArrowFunction, strictModeChanged = true) {\n    const checkClashes = new Set();\n\n    for (let _i2 = 0, _node$params = node.params; _i2 < _node$params.length; _i2++) {\n      const param = _node$params[_i2];\n      this.checkLVal(param, \"function parameter list\", BIND_VAR, allowDuplicates ? null : checkClashes, undefined, strictModeChanged);\n    }\n  }\n\n  parseExprList(close, allowEmpty, refExpressionErrors, nodeForExtra) {\n    const elts = [];\n    let first = true;\n\n    while (!this.eat(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(types.comma);\n\n        if (this.match(close)) {\n          if (nodeForExtra) {\n            this.addExtra(nodeForExtra, \"trailingComma\", this.state.lastTokStart);\n          }\n\n          this.next();\n          break;\n        }\n      }\n\n      elts.push(this.parseExprListItem(allowEmpty, refExpressionErrors));\n    }\n\n    return elts;\n  }\n\n  parseExprListItem(allowEmpty, refExpressionErrors, refNeedsArrowPos, allowPlaceholder) {\n    let elt;\n\n    if (this.match(types.comma)) {\n      if (!allowEmpty) {\n        this.raise(this.state.pos, ErrorMessages.UnexpectedToken, \",\");\n      }\n\n      elt = null;\n    } else if (this.match(types.ellipsis)) {\n      const spreadNodeStartPos = this.state.start;\n      const spreadNodeStartLoc = this.state.startLoc;\n      elt = this.parseParenItem(this.parseSpread(refExpressionErrors, refNeedsArrowPos), spreadNodeStartPos, spreadNodeStartLoc);\n    } else if (this.match(types.question)) {\n      this.expectPlugin(\"partialApplication\");\n\n      if (!allowPlaceholder) {\n        this.raise(this.state.start, ErrorMessages.UnexpectedArgumentPlaceholder);\n      }\n\n      const node = this.startNode();\n      this.next();\n      elt = this.finishNode(node, \"ArgumentPlaceholder\");\n    } else {\n      elt = this.parseMaybeAssignAllowIn(refExpressionErrors, this.parseParenItem, refNeedsArrowPos);\n    }\n\n    return elt;\n  }\n\n  parseIdentifier(liberal) {\n    const node = this.startNode();\n    const name = this.parseIdentifierName(node.start, liberal);\n    return this.createIdentifier(node, name);\n  }\n\n  createIdentifier(node, name) {\n    node.name = name;\n    node.loc.identifierName = name;\n    return this.finishNode(node, \"Identifier\");\n  }\n\n  parseIdentifierName(pos, liberal) {\n    let name;\n    const {\n      start,\n      type\n    } = this.state;\n\n    if (type === types.name) {\n      name = this.state.value;\n    } else if (type.keyword) {\n      name = type.keyword;\n      const curContext = this.curContext();\n\n      if ((type === types._class || type === types._function) && (curContext === types$1.functionStatement || curContext === types$1.functionExpression)) {\n        this.state.context.pop();\n      }\n    } else {\n      throw this.unexpected();\n    }\n\n    if (liberal) {\n      this.state.type = types.name;\n    } else {\n      this.checkReservedWord(name, start, !!type.keyword, false);\n    }\n\n    this.next();\n    return name;\n  }\n\n  checkReservedWord(word, startLoc, checkKeywords, isBinding) {\n    if (this.prodParam.hasYield && word === \"yield\") {\n      this.raise(startLoc, ErrorMessages.YieldBindingIdentifier);\n      return;\n    }\n\n    if (word === \"await\") {\n      if (this.prodParam.hasAwait) {\n        this.raise(startLoc, ErrorMessages.AwaitBindingIdentifier);\n        return;\n      } else {\n        this.expressionScope.recordAsyncArrowParametersError(startLoc, ErrorMessages.AwaitBindingIdentifier);\n      }\n    }\n\n    if (this.scope.inClass && !this.scope.inNonArrowFunction && word === \"arguments\") {\n      this.raise(startLoc, ErrorMessages.ArgumentsInClass);\n      return;\n    }\n\n    if (checkKeywords && isKeyword(word)) {\n      this.raise(startLoc, ErrorMessages.UnexpectedKeyword, word);\n      return;\n    }\n\n    const reservedTest = !this.state.strict ? isReservedWord : isBinding ? isStrictBindReservedWord : isStrictReservedWord;\n\n    if (reservedTest(word, this.inModule)) {\n      if (!this.prodParam.hasAwait && word === \"await\") {\n        this.raise(startLoc, this.hasPlugin(\"topLevelAwait\") ? ErrorMessages.AwaitNotInAsyncContext : ErrorMessages.AwaitNotInAsyncFunction);\n      } else {\n        this.raise(startLoc, ErrorMessages.UnexpectedReservedWord, word);\n      }\n    }\n  }\n\n  isAwaitAllowed() {\n    if (this.prodParam.hasAwait) return true;\n\n    if (this.options.allowAwaitOutsideFunction && !this.scope.inFunction) {\n      return true;\n    }\n\n    return false;\n  }\n\n  parseAwait() {\n    const node = this.startNode();\n    this.next();\n    this.expressionScope.recordParameterInitializerError(node.start, ErrorMessages.AwaitExpressionFormalParameter);\n\n    if (this.eat(types.star)) {\n      this.raise(node.start, ErrorMessages.ObsoleteAwaitStar);\n    }\n\n    if (!this.scope.inFunction && !this.options.allowAwaitOutsideFunction) {\n      if (this.hasPrecedingLineBreak() || this.match(types.plusMin) || this.match(types.parenL) || this.match(types.bracketL) || this.match(types.backQuote) || this.match(types.regexp) || this.match(types.slash) || this.hasPlugin(\"v8intrinsic\") && this.match(types.modulo)) {\n        this.ambiguousScriptDifferentAst = true;\n      } else {\n        this.sawUnambiguousESM = true;\n      }\n    }\n\n    if (!this.state.soloAwait) {\n      node.argument = this.parseMaybeUnary();\n    }\n\n    return this.finishNode(node, \"AwaitExpression\");\n  }\n\n  parseYield() {\n    const node = this.startNode();\n    this.expressionScope.recordParameterInitializerError(node.start, ErrorMessages.YieldInParameter);\n    this.next();\n\n    if (this.match(types.semi) || !this.match(types.star) && !this.state.type.startsExpr || this.hasPrecedingLineBreak()) {\n      node.delegate = false;\n      node.argument = null;\n    } else {\n      node.delegate = this.eat(types.star);\n      node.argument = this.parseMaybeAssign();\n    }\n\n    return this.finishNode(node, \"YieldExpression\");\n  }\n\n  checkPipelineAtInfixOperator(left, leftStartPos) {\n    if (this.getPluginOption(\"pipelineOperator\", \"proposal\") === \"smart\") {\n      if (left.type === \"SequenceExpression\") {\n        this.raise(leftStartPos, ErrorMessages.PipelineHeadSequenceExpression);\n      }\n    }\n  }\n\n  parseSmartPipelineBody(childExpression, startPos, startLoc) {\n    this.checkSmartPipelineBodyEarlyErrors(childExpression, startPos);\n    return this.parseSmartPipelineBodyInStyle(childExpression, startPos, startLoc);\n  }\n\n  checkSmartPipelineBodyEarlyErrors(childExpression, startPos) {\n    if (this.match(types.arrow)) {\n      throw this.raise(this.state.start, ErrorMessages.PipelineBodyNoArrow);\n    } else if (childExpression.type === \"SequenceExpression\") {\n      this.raise(startPos, ErrorMessages.PipelineBodySequenceExpression);\n    }\n  }\n\n  parseSmartPipelineBodyInStyle(childExpression, startPos, startLoc) {\n    const bodyNode = this.startNodeAt(startPos, startLoc);\n    const isSimpleReference = this.isSimpleReference(childExpression);\n\n    if (isSimpleReference) {\n      bodyNode.callee = childExpression;\n    } else {\n      if (!this.topicReferenceWasUsedInCurrentTopicContext()) {\n        this.raise(startPos, ErrorMessages.PipelineTopicUnused);\n      }\n\n      bodyNode.expression = childExpression;\n    }\n\n    return this.finishNode(bodyNode, isSimpleReference ? \"PipelineBareFunction\" : \"PipelineTopicExpression\");\n  }\n\n  isSimpleReference(expression) {\n    switch (expression.type) {\n      case \"MemberExpression\":\n        return !expression.computed && this.isSimpleReference(expression.object);\n\n      case \"Identifier\":\n        return true;\n\n      default:\n        return false;\n    }\n  }\n\n  withTopicPermittingContext(callback) {\n    const outerContextTopicState = this.state.topicContext;\n    this.state.topicContext = {\n      maxNumOfResolvableTopics: 1,\n      maxTopicIndex: null\n    };\n\n    try {\n      return callback();\n    } finally {\n      this.state.topicContext = outerContextTopicState;\n    }\n  }\n\n  withTopicForbiddingContext(callback) {\n    const outerContextTopicState = this.state.topicContext;\n    this.state.topicContext = {\n      maxNumOfResolvableTopics: 0,\n      maxTopicIndex: null\n    };\n\n    try {\n      return callback();\n    } finally {\n      this.state.topicContext = outerContextTopicState;\n    }\n  }\n\n  withSoloAwaitPermittingContext(callback) {\n    const outerContextSoloAwaitState = this.state.soloAwait;\n    this.state.soloAwait = true;\n\n    try {\n      return callback();\n    } finally {\n      this.state.soloAwait = outerContextSoloAwaitState;\n    }\n  }\n\n  allowInAnd(callback) {\n    const flags = this.prodParam.currentFlags();\n    const prodParamToSet = PARAM_IN & ~flags;\n\n    if (prodParamToSet) {\n      this.prodParam.enter(flags | PARAM_IN);\n\n      try {\n        return callback();\n      } finally {\n        this.prodParam.exit();\n      }\n    }\n\n    return callback();\n  }\n\n  disallowInAnd(callback) {\n    const flags = this.prodParam.currentFlags();\n    const prodParamToClear = PARAM_IN & flags;\n\n    if (prodParamToClear) {\n      this.prodParam.enter(flags & ~PARAM_IN);\n\n      try {\n        return callback();\n      } finally {\n        this.prodParam.exit();\n      }\n    }\n\n    return callback();\n  }\n\n  registerTopicReference() {\n    this.state.topicContext.maxTopicIndex = 0;\n  }\n\n  primaryTopicReferenceIsAllowedInCurrentTopicContext() {\n    return this.state.topicContext.maxNumOfResolvableTopics >= 1;\n  }\n\n  topicReferenceWasUsedInCurrentTopicContext() {\n    return this.state.topicContext.maxTopicIndex != null && this.state.topicContext.maxTopicIndex >= 0;\n  }\n\n  parseFSharpPipelineBody(prec) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    this.state.potentialArrowAt = this.state.start;\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = true;\n    const ret = this.parseExprOp(this.parseMaybeUnary(), startPos, startLoc, prec);\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n    return ret;\n  }\n\n}\n\nconst loopLabel = {\n  kind: \"loop\"\n},\n      switchLabel = {\n  kind: \"switch\"\n};\nconst FUNC_NO_FLAGS = 0b000,\n      FUNC_STATEMENT = 0b001,\n      FUNC_HANGING_STATEMENT = 0b010,\n      FUNC_NULLABLE_ID = 0b100;\nconst loneSurrogate = /[\\uD800-\\uDFFF]/u;\nclass StatementParser extends ExpressionParser {\n  parseTopLevel(file, program) {\n    program.sourceType = this.options.sourceType;\n    program.interpreter = this.parseInterpreterDirective();\n    this.parseBlockBody(program, true, true, types.eof);\n\n    if (this.inModule && !this.options.allowUndeclaredExports && this.scope.undefinedExports.size > 0) {\n      for (let _i = 0, _Array$from = Array.from(this.scope.undefinedExports); _i < _Array$from.length; _i++) {\n        const [name] = _Array$from[_i];\n        const pos = this.scope.undefinedExports.get(name);\n        this.raise(pos, ErrorMessages.ModuleExportUndefined, name);\n      }\n    }\n\n    file.program = this.finishNode(program, \"Program\");\n    file.comments = this.state.comments;\n    if (this.options.tokens) file.tokens = this.tokens;\n    return this.finishNode(file, \"File\");\n  }\n\n  stmtToDirective(stmt) {\n    const expr = stmt.expression;\n    const directiveLiteral = this.startNodeAt(expr.start, expr.loc.start);\n    const directive = this.startNodeAt(stmt.start, stmt.loc.start);\n    const raw = this.input.slice(expr.start, expr.end);\n    const val = directiveLiteral.value = raw.slice(1, -1);\n    this.addExtra(directiveLiteral, \"raw\", raw);\n    this.addExtra(directiveLiteral, \"rawValue\", val);\n    directive.value = this.finishNodeAt(directiveLiteral, \"DirectiveLiteral\", expr.end, expr.loc.end);\n    return this.finishNodeAt(directive, \"Directive\", stmt.end, stmt.loc.end);\n  }\n\n  parseInterpreterDirective() {\n    if (!this.match(types.interpreterDirective)) {\n      return null;\n    }\n\n    const node = this.startNode();\n    node.value = this.state.value;\n    this.next();\n    return this.finishNode(node, \"InterpreterDirective\");\n  }\n\n  isLet(context) {\n    if (!this.isContextual(\"let\")) {\n      return false;\n    }\n\n    const next = this.nextTokenStart();\n    const nextCh = this.input.charCodeAt(next);\n    if (nextCh === 91) return true;\n    if (context) return false;\n    if (nextCh === 123) return true;\n\n    if (isIdentifierStart(nextCh)) {\n      let pos = next + 1;\n\n      while (isIdentifierChar(this.input.charCodeAt(pos))) {\n        ++pos;\n      }\n\n      const ident = this.input.slice(next, pos);\n      if (!keywordRelationalOperator.test(ident)) return true;\n    }\n\n    return false;\n  }\n\n  parseStatement(context, topLevel) {\n    if (this.match(types.at)) {\n      this.parseDecorators(true);\n    }\n\n    return this.parseStatementContent(context, topLevel);\n  }\n\n  parseStatementContent(context, topLevel) {\n    let starttype = this.state.type;\n    const node = this.startNode();\n    let kind;\n\n    if (this.isLet(context)) {\n      starttype = types._var;\n      kind = \"let\";\n    }\n\n    switch (starttype) {\n      case types._break:\n      case types._continue:\n        return this.parseBreakContinueStatement(node, starttype.keyword);\n\n      case types._debugger:\n        return this.parseDebuggerStatement(node);\n\n      case types._do:\n        return this.parseDoStatement(node);\n\n      case types._for:\n        return this.parseForStatement(node);\n\n      case types._function:\n        if (this.lookaheadCharCode() === 46) break;\n\n        if (context) {\n          if (this.state.strict) {\n            this.raise(this.state.start, ErrorMessages.StrictFunction);\n          } else if (context !== \"if\" && context !== \"label\") {\n            this.raise(this.state.start, ErrorMessages.SloppyFunction);\n          }\n        }\n\n        return this.parseFunctionStatement(node, false, !context);\n\n      case types._class:\n        if (context) this.unexpected();\n        return this.parseClass(node, true);\n\n      case types._if:\n        return this.parseIfStatement(node);\n\n      case types._return:\n        return this.parseReturnStatement(node);\n\n      case types._switch:\n        return this.parseSwitchStatement(node);\n\n      case types._throw:\n        return this.parseThrowStatement(node);\n\n      case types._try:\n        return this.parseTryStatement(node);\n\n      case types._const:\n      case types._var:\n        kind = kind || this.state.value;\n\n        if (context && kind !== \"var\") {\n          this.raise(this.state.start, ErrorMessages.UnexpectedLexicalDeclaration);\n        }\n\n        return this.parseVarStatement(node, kind);\n\n      case types._while:\n        return this.parseWhileStatement(node);\n\n      case types._with:\n        return this.parseWithStatement(node);\n\n      case types.braceL:\n        return this.parseBlock();\n\n      case types.semi:\n        return this.parseEmptyStatement(node);\n\n      case types._import:\n        {\n          const nextTokenCharCode = this.lookaheadCharCode();\n\n          if (nextTokenCharCode === 40 || nextTokenCharCode === 46) {\n              break;\n            }\n        }\n\n      case types._export:\n        {\n          if (!this.options.allowImportExportEverywhere && !topLevel) {\n            this.raise(this.state.start, ErrorMessages.UnexpectedImportExport);\n          }\n\n          this.next();\n          let result;\n\n          if (starttype === types._import) {\n            result = this.parseImport(node);\n\n            if (result.type === \"ImportDeclaration\" && (!result.importKind || result.importKind === \"value\")) {\n              this.sawUnambiguousESM = true;\n            }\n          } else {\n            result = this.parseExport(node);\n\n            if (result.type === \"ExportNamedDeclaration\" && (!result.exportKind || result.exportKind === \"value\") || result.type === \"ExportAllDeclaration\" && (!result.exportKind || result.exportKind === \"value\") || result.type === \"ExportDefaultDeclaration\") {\n              this.sawUnambiguousESM = true;\n            }\n          }\n\n          this.assertModuleNodeAllowed(node);\n          return result;\n        }\n\n      default:\n        {\n          if (this.isAsyncFunction()) {\n            if (context) {\n              this.raise(this.state.start, ErrorMessages.AsyncFunctionInSingleStatementContext);\n            }\n\n            this.next();\n            return this.parseFunctionStatement(node, true, !context);\n          }\n        }\n    }\n\n    const maybeName = this.state.value;\n    const expr = this.parseExpression();\n\n    if (starttype === types.name && expr.type === \"Identifier\" && this.eat(types.colon)) {\n      return this.parseLabeledStatement(node, maybeName, expr, context);\n    } else {\n      return this.parseExpressionStatement(node, expr);\n    }\n  }\n\n  assertModuleNodeAllowed(node) {\n    if (!this.options.allowImportExportEverywhere && !this.inModule) {\n      this.raiseWithData(node.start, {\n        code: \"BABEL_PARSER_SOURCETYPE_MODULE_REQUIRED\"\n      }, ErrorMessages.ImportOutsideModule);\n    }\n  }\n\n  takeDecorators(node) {\n    const decorators = this.state.decoratorStack[this.state.decoratorStack.length - 1];\n\n    if (decorators.length) {\n      node.decorators = decorators;\n      this.resetStartLocationFromNode(node, decorators[0]);\n      this.state.decoratorStack[this.state.decoratorStack.length - 1] = [];\n    }\n  }\n\n  canHaveLeadingDecorator() {\n    return this.match(types._class);\n  }\n\n  parseDecorators(allowExport) {\n    const currentContextDecorators = this.state.decoratorStack[this.state.decoratorStack.length - 1];\n\n    while (this.match(types.at)) {\n      const decorator = this.parseDecorator();\n      currentContextDecorators.push(decorator);\n    }\n\n    if (this.match(types._export)) {\n      if (!allowExport) {\n        this.unexpected();\n      }\n\n      if (this.hasPlugin(\"decorators\") && !this.getPluginOption(\"decorators\", \"decoratorsBeforeExport\")) {\n        this.raise(this.state.start, ErrorMessages.DecoratorExportClass);\n      }\n    } else if (!this.canHaveLeadingDecorator()) {\n      throw this.raise(this.state.start, ErrorMessages.UnexpectedLeadingDecorator);\n    }\n  }\n\n  parseDecorator() {\n    this.expectOnePlugin([\"decorators-legacy\", \"decorators\"]);\n    const node = this.startNode();\n    this.next();\n\n    if (this.hasPlugin(\"decorators\")) {\n      this.state.decoratorStack.push([]);\n      const startPos = this.state.start;\n      const startLoc = this.state.startLoc;\n      let expr;\n\n      if (this.eat(types.parenL)) {\n        expr = this.parseExpression();\n        this.expect(types.parenR);\n      } else {\n        expr = this.parseIdentifier(false);\n\n        while (this.eat(types.dot)) {\n          const node = this.startNodeAt(startPos, startLoc);\n          node.object = expr;\n          node.property = this.parseIdentifier(true);\n          node.computed = false;\n          expr = this.finishNode(node, \"MemberExpression\");\n        }\n      }\n\n      node.expression = this.parseMaybeDecoratorArguments(expr);\n      this.state.decoratorStack.pop();\n    } else {\n      node.expression = this.parseExprSubscripts();\n    }\n\n    return this.finishNode(node, \"Decorator\");\n  }\n\n  parseMaybeDecoratorArguments(expr) {\n    if (this.eat(types.parenL)) {\n      const node = this.startNodeAtNode(expr);\n      node.callee = expr;\n      node.arguments = this.parseCallExpressionArguments(types.parenR, false);\n      this.toReferencedList(node.arguments);\n      return this.finishNode(node, \"CallExpression\");\n    }\n\n    return expr;\n  }\n\n  parseBreakContinueStatement(node, keyword) {\n    const isBreak = keyword === \"break\";\n    this.next();\n\n    if (this.isLineTerminator()) {\n      node.label = null;\n    } else {\n      node.label = this.parseIdentifier();\n      this.semicolon();\n    }\n\n    this.verifyBreakContinue(node, keyword);\n    return this.finishNode(node, isBreak ? \"BreakStatement\" : \"ContinueStatement\");\n  }\n\n  verifyBreakContinue(node, keyword) {\n    const isBreak = keyword === \"break\";\n    let i;\n\n    for (i = 0; i < this.state.labels.length; ++i) {\n      const lab = this.state.labels[i];\n\n      if (node.label == null || lab.name === node.label.name) {\n        if (lab.kind != null && (isBreak || lab.kind === \"loop\")) break;\n        if (node.label && isBreak) break;\n      }\n    }\n\n    if (i === this.state.labels.length) {\n      this.raise(node.start, ErrorMessages.IllegalBreakContinue, keyword);\n    }\n  }\n\n  parseDebuggerStatement(node) {\n    this.next();\n    this.semicolon();\n    return this.finishNode(node, \"DebuggerStatement\");\n  }\n\n  parseHeaderExpression() {\n    this.expect(types.parenL);\n    const val = this.parseExpression();\n    this.expect(types.parenR);\n    return val;\n  }\n\n  parseDoStatement(node) {\n    this.next();\n    this.state.labels.push(loopLabel);\n    node.body = this.withTopicForbiddingContext(() => this.parseStatement(\"do\"));\n    this.state.labels.pop();\n    this.expect(types._while);\n    node.test = this.parseHeaderExpression();\n    this.eat(types.semi);\n    return this.finishNode(node, \"DoWhileStatement\");\n  }\n\n  parseForStatement(node) {\n    this.next();\n    this.state.labels.push(loopLabel);\n    let awaitAt = -1;\n\n    if (this.isAwaitAllowed() && this.eatContextual(\"await\")) {\n      awaitAt = this.state.lastTokStart;\n    }\n\n    this.scope.enter(SCOPE_OTHER);\n    this.expect(types.parenL);\n\n    if (this.match(types.semi)) {\n      if (awaitAt > -1) {\n        this.unexpected(awaitAt);\n      }\n\n      return this.parseFor(node, null);\n    }\n\n    const isLet = this.isLet();\n\n    if (this.match(types._var) || this.match(types._const) || isLet) {\n      const init = this.startNode();\n      const kind = isLet ? \"let\" : this.state.value;\n      this.next();\n      this.parseVar(init, true, kind);\n      this.finishNode(init, \"VariableDeclaration\");\n\n      if ((this.match(types._in) || this.isContextual(\"of\")) && init.declarations.length === 1) {\n        return this.parseForIn(node, init, awaitAt);\n      }\n\n      if (awaitAt > -1) {\n        this.unexpected(awaitAt);\n      }\n\n      return this.parseFor(node, init);\n    }\n\n    const refExpressionErrors = new ExpressionErrors();\n    const init = this.parseExpression(true, refExpressionErrors);\n\n    if (this.match(types._in) || this.isContextual(\"of\")) {\n      this.toAssignable(init, true);\n      const description = this.isContextual(\"of\") ? \"for-of statement\" : \"for-in statement\";\n      this.checkLVal(init, description);\n      return this.parseForIn(node, init, awaitAt);\n    } else {\n      this.checkExpressionErrors(refExpressionErrors, true);\n    }\n\n    if (awaitAt > -1) {\n      this.unexpected(awaitAt);\n    }\n\n    return this.parseFor(node, init);\n  }\n\n  parseFunctionStatement(node, isAsync, declarationPosition) {\n    this.next();\n    return this.parseFunction(node, FUNC_STATEMENT | (declarationPosition ? 0 : FUNC_HANGING_STATEMENT), isAsync);\n  }\n\n  parseIfStatement(node) {\n    this.next();\n    node.test = this.parseHeaderExpression();\n    node.consequent = this.parseStatement(\"if\");\n    node.alternate = this.eat(types._else) ? this.parseStatement(\"if\") : null;\n    return this.finishNode(node, \"IfStatement\");\n  }\n\n  parseReturnStatement(node) {\n    if (!this.prodParam.hasReturn && !this.options.allowReturnOutsideFunction) {\n      this.raise(this.state.start, ErrorMessages.IllegalReturn);\n    }\n\n    this.next();\n\n    if (this.isLineTerminator()) {\n      node.argument = null;\n    } else {\n      node.argument = this.parseExpression();\n      this.semicolon();\n    }\n\n    return this.finishNode(node, \"ReturnStatement\");\n  }\n\n  parseSwitchStatement(node) {\n    this.next();\n    node.discriminant = this.parseHeaderExpression();\n    const cases = node.cases = [];\n    this.expect(types.braceL);\n    this.state.labels.push(switchLabel);\n    this.scope.enter(SCOPE_OTHER);\n    let cur;\n\n    for (let sawDefault; !this.match(types.braceR);) {\n      if (this.match(types._case) || this.match(types._default)) {\n        const isCase = this.match(types._case);\n        if (cur) this.finishNode(cur, \"SwitchCase\");\n        cases.push(cur = this.startNode());\n        cur.consequent = [];\n        this.next();\n\n        if (isCase) {\n          cur.test = this.parseExpression();\n        } else {\n          if (sawDefault) {\n            this.raise(this.state.lastTokStart, ErrorMessages.MultipleDefaultsInSwitch);\n          }\n\n          sawDefault = true;\n          cur.test = null;\n        }\n\n        this.expect(types.colon);\n      } else {\n        if (cur) {\n          cur.consequent.push(this.parseStatement(null));\n        } else {\n          this.unexpected();\n        }\n      }\n    }\n\n    this.scope.exit();\n    if (cur) this.finishNode(cur, \"SwitchCase\");\n    this.next();\n    this.state.labels.pop();\n    return this.finishNode(node, \"SwitchStatement\");\n  }\n\n  parseThrowStatement(node) {\n    this.next();\n\n    if (this.hasPrecedingLineBreak()) {\n      this.raise(this.state.lastTokEnd, ErrorMessages.NewlineAfterThrow);\n    }\n\n    node.argument = this.parseExpression();\n    this.semicolon();\n    return this.finishNode(node, \"ThrowStatement\");\n  }\n\n  parseCatchClauseParam() {\n    const param = this.parseBindingAtom();\n    const simple = param.type === \"Identifier\";\n    this.scope.enter(simple ? SCOPE_SIMPLE_CATCH : 0);\n    this.checkLVal(param, \"catch clause\", BIND_LEXICAL);\n    return param;\n  }\n\n  parseTryStatement(node) {\n    this.next();\n    node.block = this.parseBlock();\n    node.handler = null;\n\n    if (this.match(types._catch)) {\n      const clause = this.startNode();\n      this.next();\n\n      if (this.match(types.parenL)) {\n        this.expect(types.parenL);\n        clause.param = this.parseCatchClauseParam();\n        this.expect(types.parenR);\n      } else {\n        clause.param = null;\n        this.scope.enter(SCOPE_OTHER);\n      }\n\n      clause.body = this.withTopicForbiddingContext(() => this.parseBlock(false, false));\n      this.scope.exit();\n      node.handler = this.finishNode(clause, \"CatchClause\");\n    }\n\n    node.finalizer = this.eat(types._finally) ? this.parseBlock() : null;\n\n    if (!node.handler && !node.finalizer) {\n      this.raise(node.start, ErrorMessages.NoCatchOrFinally);\n    }\n\n    return this.finishNode(node, \"TryStatement\");\n  }\n\n  parseVarStatement(node, kind) {\n    this.next();\n    this.parseVar(node, false, kind);\n    this.semicolon();\n    return this.finishNode(node, \"VariableDeclaration\");\n  }\n\n  parseWhileStatement(node) {\n    this.next();\n    node.test = this.parseHeaderExpression();\n    this.state.labels.push(loopLabel);\n    node.body = this.withTopicForbiddingContext(() => this.parseStatement(\"while\"));\n    this.state.labels.pop();\n    return this.finishNode(node, \"WhileStatement\");\n  }\n\n  parseWithStatement(node) {\n    if (this.state.strict) {\n      this.raise(this.state.start, ErrorMessages.StrictWith);\n    }\n\n    this.next();\n    node.object = this.parseHeaderExpression();\n    node.body = this.withTopicForbiddingContext(() => this.parseStatement(\"with\"));\n    return this.finishNode(node, \"WithStatement\");\n  }\n\n  parseEmptyStatement(node) {\n    this.next();\n    return this.finishNode(node, \"EmptyStatement\");\n  }\n\n  parseLabeledStatement(node, maybeName, expr, context) {\n    for (let _i2 = 0, _this$state$labels = this.state.labels; _i2 < _this$state$labels.length; _i2++) {\n      const label = _this$state$labels[_i2];\n\n      if (label.name === maybeName) {\n        this.raise(expr.start, ErrorMessages.LabelRedeclaration, maybeName);\n      }\n    }\n\n    const kind = this.state.type.isLoop ? \"loop\" : this.match(types._switch) ? \"switch\" : null;\n\n    for (let i = this.state.labels.length - 1; i >= 0; i--) {\n      const label = this.state.labels[i];\n\n      if (label.statementStart === node.start) {\n        label.statementStart = this.state.start;\n        label.kind = kind;\n      } else {\n        break;\n      }\n    }\n\n    this.state.labels.push({\n      name: maybeName,\n      kind: kind,\n      statementStart: this.state.start\n    });\n    node.body = this.parseStatement(context ? context.indexOf(\"label\") === -1 ? context + \"label\" : context : \"label\");\n    this.state.labels.pop();\n    node.label = expr;\n    return this.finishNode(node, \"LabeledStatement\");\n  }\n\n  parseExpressionStatement(node, expr) {\n    node.expression = expr;\n    this.semicolon();\n    return this.finishNode(node, \"ExpressionStatement\");\n  }\n\n  parseBlock(allowDirectives = false, createNewLexicalScope = true, afterBlockParse) {\n    const node = this.startNode();\n\n    if (allowDirectives) {\n      this.state.strictErrors.clear();\n    }\n\n    this.expect(types.braceL);\n\n    if (createNewLexicalScope) {\n      this.scope.enter(SCOPE_OTHER);\n    }\n\n    this.parseBlockBody(node, allowDirectives, false, types.braceR, afterBlockParse);\n\n    if (createNewLexicalScope) {\n      this.scope.exit();\n    }\n\n    return this.finishNode(node, \"BlockStatement\");\n  }\n\n  isValidDirective(stmt) {\n    return stmt.type === \"ExpressionStatement\" && stmt.expression.type === \"StringLiteral\" && !stmt.expression.extra.parenthesized;\n  }\n\n  parseBlockBody(node, allowDirectives, topLevel, end, afterBlockParse) {\n    const body = node.body = [];\n    const directives = node.directives = [];\n    this.parseBlockOrModuleBlockBody(body, allowDirectives ? directives : undefined, topLevel, end, afterBlockParse);\n  }\n\n  parseBlockOrModuleBlockBody(body, directives, topLevel, end, afterBlockParse) {\n    const oldStrict = this.state.strict;\n    let hasStrictModeDirective = false;\n    let parsedNonDirective = false;\n\n    while (!this.match(end)) {\n      const stmt = this.parseStatement(null, topLevel);\n\n      if (directives && !parsedNonDirective) {\n        if (this.isValidDirective(stmt)) {\n          const directive = this.stmtToDirective(stmt);\n          directives.push(directive);\n\n          if (!hasStrictModeDirective && directive.value.value === \"use strict\") {\n            hasStrictModeDirective = true;\n            this.setStrict(true);\n          }\n\n          continue;\n        }\n\n        parsedNonDirective = true;\n        this.state.strictErrors.clear();\n      }\n\n      body.push(stmt);\n    }\n\n    if (afterBlockParse) {\n      afterBlockParse.call(this, hasStrictModeDirective);\n    }\n\n    if (!oldStrict) {\n      this.setStrict(false);\n    }\n\n    this.next();\n  }\n\n  parseFor(node, init) {\n    node.init = init;\n    this.expect(types.semi);\n    node.test = this.match(types.semi) ? null : this.parseExpression();\n    this.expect(types.semi);\n    node.update = this.match(types.parenR) ? null : this.parseExpression();\n    this.expect(types.parenR);\n    node.body = this.withTopicForbiddingContext(() => this.parseStatement(\"for\"));\n    this.scope.exit();\n    this.state.labels.pop();\n    return this.finishNode(node, \"ForStatement\");\n  }\n\n  parseForIn(node, init, awaitAt) {\n    const isForIn = this.match(types._in);\n    this.next();\n\n    if (isForIn) {\n      if (awaitAt > -1) this.unexpected(awaitAt);\n    } else {\n      node.await = awaitAt > -1;\n    }\n\n    if (init.type === \"VariableDeclaration\" && init.declarations[0].init != null && (!isForIn || this.state.strict || init.kind !== \"var\" || init.declarations[0].id.type !== \"Identifier\")) {\n      this.raise(init.start, ErrorMessages.ForInOfLoopInitializer, isForIn ? \"for-in\" : \"for-of\");\n    } else if (init.type === \"AssignmentPattern\") {\n      this.raise(init.start, ErrorMessages.InvalidLhs, \"for-loop\");\n    }\n\n    node.left = init;\n    node.right = isForIn ? this.parseExpression() : this.parseMaybeAssignAllowIn();\n    this.expect(types.parenR);\n    node.body = this.withTopicForbiddingContext(() => this.parseStatement(\"for\"));\n    this.scope.exit();\n    this.state.labels.pop();\n    return this.finishNode(node, isForIn ? \"ForInStatement\" : \"ForOfStatement\");\n  }\n\n  parseVar(node, isFor, kind) {\n    const declarations = node.declarations = [];\n    const isTypescript = this.hasPlugin(\"typescript\");\n    node.kind = kind;\n\n    for (;;) {\n      const decl = this.startNode();\n      this.parseVarId(decl, kind);\n\n      if (this.eat(types.eq)) {\n        decl.init = isFor ? this.parseMaybeAssignDisallowIn() : this.parseMaybeAssignAllowIn();\n      } else {\n        if (kind === \"const\" && !(this.match(types._in) || this.isContextual(\"of\"))) {\n          if (!isTypescript) {\n            this.raise(this.state.lastTokEnd, ErrorMessages.DeclarationMissingInitializer, \"Const declarations\");\n          }\n        } else if (decl.id.type !== \"Identifier\" && !(isFor && (this.match(types._in) || this.isContextual(\"of\")))) {\n          this.raise(this.state.lastTokEnd, ErrorMessages.DeclarationMissingInitializer, \"Complex binding patterns\");\n        }\n\n        decl.init = null;\n      }\n\n      declarations.push(this.finishNode(decl, \"VariableDeclarator\"));\n      if (!this.eat(types.comma)) break;\n    }\n\n    return node;\n  }\n\n  parseVarId(decl, kind) {\n    decl.id = this.parseBindingAtom();\n    this.checkLVal(decl.id, \"variable declaration\", kind === \"var\" ? BIND_VAR : BIND_LEXICAL, undefined, kind !== \"var\");\n  }\n\n  parseFunction(node, statement = FUNC_NO_FLAGS, isAsync = false) {\n    const isStatement = statement & FUNC_STATEMENT;\n    const isHangingStatement = statement & FUNC_HANGING_STATEMENT;\n    const requireId = !!isStatement && !(statement & FUNC_NULLABLE_ID);\n    this.initFunction(node, isAsync);\n\n    if (this.match(types.star) && isHangingStatement) {\n      this.raise(this.state.start, ErrorMessages.GeneratorInSingleStatementContext);\n    }\n\n    node.generator = this.eat(types.star);\n\n    if (isStatement) {\n      node.id = this.parseFunctionId(requireId);\n    }\n\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n    this.state.maybeInArrowParameters = false;\n    this.scope.enter(SCOPE_FUNCTION);\n    this.prodParam.enter(functionFlags(isAsync, node.generator));\n\n    if (!isStatement) {\n      node.id = this.parseFunctionId();\n    }\n\n    this.parseFunctionParams(node, false);\n    this.withTopicForbiddingContext(() => {\n      this.parseFunctionBodyAndFinish(node, isStatement ? \"FunctionDeclaration\" : \"FunctionExpression\");\n    });\n    this.prodParam.exit();\n    this.scope.exit();\n\n    if (isStatement && !isHangingStatement) {\n      this.registerFunctionStatementId(node);\n    }\n\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n    return node;\n  }\n\n  parseFunctionId(requireId) {\n    return requireId || this.match(types.name) ? this.parseIdentifier() : null;\n  }\n\n  parseFunctionParams(node, allowModifiers) {\n    this.expect(types.parenL);\n    this.expressionScope.enter(newParameterDeclarationScope());\n    node.params = this.parseBindingList(types.parenR, 41, false, allowModifiers);\n    this.expressionScope.exit();\n  }\n\n  registerFunctionStatementId(node) {\n    if (!node.id) return;\n    this.scope.declareName(node.id.name, this.state.strict || node.generator || node.async ? this.scope.treatFunctionsAsVar ? BIND_VAR : BIND_LEXICAL : BIND_FUNCTION, node.id.start);\n  }\n\n  parseClass(node, isStatement, optionalId) {\n    this.next();\n    this.takeDecorators(node);\n    const oldStrict = this.state.strict;\n    this.state.strict = true;\n    this.parseClassId(node, isStatement, optionalId);\n    this.parseClassSuper(node);\n    node.body = this.parseClassBody(!!node.superClass, oldStrict);\n    return this.finishNode(node, isStatement ? \"ClassDeclaration\" : \"ClassExpression\");\n  }\n\n  isClassProperty() {\n    return this.match(types.eq) || this.match(types.semi) || this.match(types.braceR);\n  }\n\n  isClassMethod() {\n    return this.match(types.parenL);\n  }\n\n  isNonstaticConstructor(method) {\n    return !method.computed && !method.static && (method.key.name === \"constructor\" || method.key.value === \"constructor\");\n  }\n\n  parseClassBody(constructorAllowsSuper, oldStrict) {\n    this.classScope.enter();\n    const state = {\n      constructorAllowsSuper,\n      hadConstructor: false,\n      hadStaticBlock: false\n    };\n    let decorators = [];\n    const classBody = this.startNode();\n    classBody.body = [];\n    this.expect(types.braceL);\n    this.withTopicForbiddingContext(() => {\n      while (!this.match(types.braceR)) {\n        if (this.eat(types.semi)) {\n          if (decorators.length > 0) {\n            throw this.raise(this.state.lastTokEnd, ErrorMessages.DecoratorSemicolon);\n          }\n\n          continue;\n        }\n\n        if (this.match(types.at)) {\n          decorators.push(this.parseDecorator());\n          continue;\n        }\n\n        const member = this.startNode();\n\n        if (decorators.length) {\n          member.decorators = decorators;\n          this.resetStartLocationFromNode(member, decorators[0]);\n          decorators = [];\n        }\n\n        this.parseClassMember(classBody, member, state);\n\n        if (member.kind === \"constructor\" && member.decorators && member.decorators.length > 0) {\n          this.raise(member.start, ErrorMessages.DecoratorConstructor);\n        }\n      }\n    });\n    this.state.strict = oldStrict;\n    this.next();\n\n    if (decorators.length) {\n      throw this.raise(this.state.start, ErrorMessages.TrailingDecorator);\n    }\n\n    this.classScope.exit();\n    return this.finishNode(classBody, \"ClassBody\");\n  }\n\n  parseClassMemberFromModifier(classBody, member) {\n    const key = this.parseIdentifier(true);\n\n    if (this.isClassMethod()) {\n      const method = member;\n      method.kind = \"method\";\n      method.computed = false;\n      method.key = key;\n      method.static = false;\n      this.pushClassMethod(classBody, method, false, false, false, false);\n      return true;\n    } else if (this.isClassProperty()) {\n      const prop = member;\n      prop.computed = false;\n      prop.key = key;\n      prop.static = false;\n      classBody.body.push(this.parseClassProperty(prop));\n      return true;\n    }\n\n    return false;\n  }\n\n  parseClassMember(classBody, member, state) {\n    const isStatic = this.isContextual(\"static\");\n\n    if (isStatic) {\n      if (this.parseClassMemberFromModifier(classBody, member)) {\n        return;\n      }\n\n      if (this.eat(types.braceL)) {\n        this.parseClassStaticBlock(classBody, member, state);\n        return;\n      }\n    }\n\n    this.parseClassMemberWithIsStatic(classBody, member, state, isStatic);\n  }\n\n  parseClassMemberWithIsStatic(classBody, member, state, isStatic) {\n    const publicMethod = member;\n    const privateMethod = member;\n    const publicProp = member;\n    const privateProp = member;\n    const method = publicMethod;\n    const publicMember = publicMethod;\n    member.static = isStatic;\n\n    if (this.eat(types.star)) {\n      method.kind = \"method\";\n      this.parseClassElementName(method);\n\n      if (this.isPrivateName(method.key)) {\n        this.pushClassPrivateMethod(classBody, privateMethod, true, false);\n        return;\n      }\n\n      if (this.isNonstaticConstructor(publicMethod)) {\n        this.raise(publicMethod.key.start, ErrorMessages.ConstructorIsGenerator);\n      }\n\n      this.pushClassMethod(classBody, publicMethod, true, false, false, false);\n      return;\n    }\n\n    const containsEsc = this.state.containsEsc;\n    const key = this.parseClassElementName(member);\n    const isPrivate = this.isPrivateName(key);\n    const isSimple = key.type === \"Identifier\";\n    const maybeQuestionTokenStart = this.state.start;\n    this.parsePostMemberNameModifiers(publicMember);\n\n    if (this.isClassMethod()) {\n      method.kind = \"method\";\n\n      if (isPrivate) {\n        this.pushClassPrivateMethod(classBody, privateMethod, false, false);\n        return;\n      }\n\n      const isConstructor = this.isNonstaticConstructor(publicMethod);\n      let allowsDirectSuper = false;\n\n      if (isConstructor) {\n        publicMethod.kind = \"constructor\";\n\n        if (state.hadConstructor && !this.hasPlugin(\"typescript\")) {\n          this.raise(key.start, ErrorMessages.DuplicateConstructor);\n        }\n\n        state.hadConstructor = true;\n        allowsDirectSuper = state.constructorAllowsSuper;\n      }\n\n      this.pushClassMethod(classBody, publicMethod, false, false, isConstructor, allowsDirectSuper);\n    } else if (this.isClassProperty()) {\n      if (isPrivate) {\n        this.pushClassPrivateProperty(classBody, privateProp);\n      } else {\n        this.pushClassProperty(classBody, publicProp);\n      }\n    } else if (isSimple && key.name === \"async\" && !containsEsc && !this.isLineTerminator()) {\n      const isGenerator = this.eat(types.star);\n\n      if (publicMember.optional) {\n        this.unexpected(maybeQuestionTokenStart);\n      }\n\n      method.kind = \"method\";\n      this.parseClassElementName(method);\n      this.parsePostMemberNameModifiers(publicMember);\n\n      if (this.isPrivateName(method.key)) {\n        this.pushClassPrivateMethod(classBody, privateMethod, isGenerator, true);\n      } else {\n        if (this.isNonstaticConstructor(publicMethod)) {\n          this.raise(publicMethod.key.start, ErrorMessages.ConstructorIsAsync);\n        }\n\n        this.pushClassMethod(classBody, publicMethod, isGenerator, true, false, false);\n      }\n    } else if (isSimple && (key.name === \"get\" || key.name === \"set\") && !containsEsc && !(this.match(types.star) && this.isLineTerminator())) {\n      method.kind = key.name;\n      this.parseClassElementName(publicMethod);\n\n      if (this.isPrivateName(method.key)) {\n        this.pushClassPrivateMethod(classBody, privateMethod, false, false);\n      } else {\n        if (this.isNonstaticConstructor(publicMethod)) {\n          this.raise(publicMethod.key.start, ErrorMessages.ConstructorIsAccessor);\n        }\n\n        this.pushClassMethod(classBody, publicMethod, false, false, false, false);\n      }\n\n      this.checkGetterSetterParams(publicMethod);\n    } else if (this.isLineTerminator()) {\n      if (isPrivate) {\n        this.pushClassPrivateProperty(classBody, privateProp);\n      } else {\n        this.pushClassProperty(classBody, publicProp);\n      }\n    } else {\n      this.unexpected();\n    }\n  }\n\n  parseClassElementName(member) {\n    const key = this.parsePropertyName(member, true);\n\n    if (!member.computed && member.static && (key.name === \"prototype\" || key.value === \"prototype\")) {\n      this.raise(key.start, ErrorMessages.StaticPrototype);\n    }\n\n    if (this.isPrivateName(key) && this.getPrivateNameSV(key) === \"constructor\") {\n      this.raise(key.start, ErrorMessages.ConstructorClassPrivateField);\n    }\n\n    return key;\n  }\n\n  parseClassStaticBlock(classBody, member, state) {\n    var _member$decorators;\n\n    this.expectPlugin(\"classStaticBlock\", member.start);\n    this.scope.enter(SCOPE_CLASS | SCOPE_SUPER);\n    this.expressionScope.enter(newExpressionScope());\n    const oldLabels = this.state.labels;\n    this.state.labels = [];\n    this.prodParam.enter(PARAM);\n    const body = member.body = [];\n    this.parseBlockOrModuleBlockBody(body, undefined, false, types.braceR);\n    this.prodParam.exit();\n    this.expressionScope.exit();\n    this.scope.exit();\n    this.state.labels = oldLabels;\n    classBody.body.push(this.finishNode(member, \"StaticBlock\"));\n\n    if (state.hadStaticBlock) {\n      this.raise(member.start, ErrorMessages.DuplicateStaticBlock);\n    }\n\n    if ((_member$decorators = member.decorators) == null ? void 0 : _member$decorators.length) {\n      this.raise(member.start, ErrorMessages.DecoratorStaticBlock);\n    }\n\n    state.hadStaticBlock = true;\n  }\n\n  pushClassProperty(classBody, prop) {\n    if (!prop.computed && (prop.key.name === \"constructor\" || prop.key.value === \"constructor\")) {\n      this.raise(prop.key.start, ErrorMessages.ConstructorClassField);\n    }\n\n    classBody.body.push(this.parseClassProperty(prop));\n  }\n\n  pushClassPrivateProperty(classBody, prop) {\n    this.expectPlugin(\"classPrivateProperties\", prop.key.start);\n    const node = this.parseClassPrivateProperty(prop);\n    classBody.body.push(node);\n    this.classScope.declarePrivateName(this.getPrivateNameSV(node.key), CLASS_ELEMENT_OTHER, node.key.start);\n  }\n\n  pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper) {\n    classBody.body.push(this.parseMethod(method, isGenerator, isAsync, isConstructor, allowsDirectSuper, \"ClassMethod\", true));\n  }\n\n  pushClassPrivateMethod(classBody, method, isGenerator, isAsync) {\n    this.expectPlugin(\"classPrivateMethods\", method.key.start);\n    const node = this.parseMethod(method, isGenerator, isAsync, false, false, \"ClassPrivateMethod\", true);\n    classBody.body.push(node);\n    const kind = node.kind === \"get\" ? node.static ? CLASS_ELEMENT_STATIC_GETTER : CLASS_ELEMENT_INSTANCE_GETTER : node.kind === \"set\" ? node.static ? CLASS_ELEMENT_STATIC_SETTER : CLASS_ELEMENT_INSTANCE_SETTER : CLASS_ELEMENT_OTHER;\n    this.classScope.declarePrivateName(this.getPrivateNameSV(node.key), kind, node.key.start);\n  }\n\n  parsePostMemberNameModifiers(methodOrProp) {}\n\n  parseClassPrivateProperty(node) {\n    this.parseInitializer(node);\n    this.semicolon();\n    return this.finishNode(node, \"ClassPrivateProperty\");\n  }\n\n  parseClassProperty(node) {\n    if (!node.typeAnnotation || this.match(types.eq)) {\n      this.expectPlugin(\"classProperties\");\n    }\n\n    this.parseInitializer(node);\n    this.semicolon();\n    return this.finishNode(node, \"ClassProperty\");\n  }\n\n  parseInitializer(node) {\n    this.scope.enter(SCOPE_CLASS | SCOPE_SUPER);\n    this.expressionScope.enter(newExpressionScope());\n    this.prodParam.enter(PARAM);\n    node.value = this.eat(types.eq) ? this.parseMaybeAssignAllowIn() : null;\n    this.expressionScope.exit();\n    this.prodParam.exit();\n    this.scope.exit();\n  }\n\n  parseClassId(node, isStatement, optionalId, bindingType = BIND_CLASS) {\n    if (this.match(types.name)) {\n      node.id = this.parseIdentifier();\n\n      if (isStatement) {\n        this.checkLVal(node.id, \"class name\", bindingType);\n      }\n    } else {\n      if (optionalId || !isStatement) {\n        node.id = null;\n      } else {\n        this.unexpected(null, ErrorMessages.MissingClassName);\n      }\n    }\n  }\n\n  parseClassSuper(node) {\n    node.superClass = this.eat(types._extends) ? this.parseExprSubscripts() : null;\n  }\n\n  parseExport(node) {\n    const hasDefault = this.maybeParseExportDefaultSpecifier(node);\n    const parseAfterDefault = !hasDefault || this.eat(types.comma);\n    const hasStar = parseAfterDefault && this.eatExportStar(node);\n    const hasNamespace = hasStar && this.maybeParseExportNamespaceSpecifier(node);\n    const parseAfterNamespace = parseAfterDefault && (!hasNamespace || this.eat(types.comma));\n    const isFromRequired = hasDefault || hasStar;\n\n    if (hasStar && !hasNamespace) {\n      if (hasDefault) this.unexpected();\n      this.parseExportFrom(node, true);\n      return this.finishNode(node, \"ExportAllDeclaration\");\n    }\n\n    const hasSpecifiers = this.maybeParseExportNamedSpecifiers(node);\n\n    if (hasDefault && parseAfterDefault && !hasStar && !hasSpecifiers || hasNamespace && parseAfterNamespace && !hasSpecifiers) {\n      throw this.unexpected(null, types.braceL);\n    }\n\n    let hasDeclaration;\n\n    if (isFromRequired || hasSpecifiers) {\n      hasDeclaration = false;\n      this.parseExportFrom(node, isFromRequired);\n    } else {\n      hasDeclaration = this.maybeParseExportDeclaration(node);\n    }\n\n    if (isFromRequired || hasSpecifiers || hasDeclaration) {\n      this.checkExport(node, true, false, !!node.source);\n      return this.finishNode(node, \"ExportNamedDeclaration\");\n    }\n\n    if (this.eat(types._default)) {\n      node.declaration = this.parseExportDefaultExpression();\n      this.checkExport(node, true, true);\n      return this.finishNode(node, \"ExportDefaultDeclaration\");\n    }\n\n    throw this.unexpected(null, types.braceL);\n  }\n\n  eatExportStar(node) {\n    return this.eat(types.star);\n  }\n\n  maybeParseExportDefaultSpecifier(node) {\n    if (this.isExportDefaultSpecifier()) {\n      this.expectPlugin(\"exportDefaultFrom\");\n      const specifier = this.startNode();\n      specifier.exported = this.parseIdentifier(true);\n      node.specifiers = [this.finishNode(specifier, \"ExportDefaultSpecifier\")];\n      return true;\n    }\n\n    return false;\n  }\n\n  maybeParseExportNamespaceSpecifier(node) {\n    if (this.isContextual(\"as\")) {\n      if (!node.specifiers) node.specifiers = [];\n      const specifier = this.startNodeAt(this.state.lastTokStart, this.state.lastTokStartLoc);\n      this.next();\n      specifier.exported = this.parseModuleExportName();\n      node.specifiers.push(this.finishNode(specifier, \"ExportNamespaceSpecifier\"));\n      return true;\n    }\n\n    return false;\n  }\n\n  maybeParseExportNamedSpecifiers(node) {\n    if (this.match(types.braceL)) {\n      if (!node.specifiers) node.specifiers = [];\n      node.specifiers.push(...this.parseExportSpecifiers());\n      node.source = null;\n      node.declaration = null;\n      return true;\n    }\n\n    return false;\n  }\n\n  maybeParseExportDeclaration(node) {\n    if (this.shouldParseExportDeclaration()) {\n      node.specifiers = [];\n      node.source = null;\n      node.declaration = this.parseExportDeclaration(node);\n      return true;\n    }\n\n    return false;\n  }\n\n  isAsyncFunction() {\n    if (!this.isContextual(\"async\")) return false;\n    const next = this.nextTokenStart();\n    return !lineBreak.test(this.input.slice(this.state.pos, next)) && this.isUnparsedContextual(next, \"function\");\n  }\n\n  parseExportDefaultExpression() {\n    const expr = this.startNode();\n    const isAsync = this.isAsyncFunction();\n\n    if (this.match(types._function) || isAsync) {\n      this.next();\n\n      if (isAsync) {\n        this.next();\n      }\n\n      return this.parseFunction(expr, FUNC_STATEMENT | FUNC_NULLABLE_ID, isAsync);\n    } else if (this.match(types._class)) {\n      return this.parseClass(expr, true, true);\n    } else if (this.match(types.at)) {\n      if (this.hasPlugin(\"decorators\") && this.getPluginOption(\"decorators\", \"decoratorsBeforeExport\")) {\n        this.raise(this.state.start, ErrorMessages.DecoratorBeforeExport);\n      }\n\n      this.parseDecorators(false);\n      return this.parseClass(expr, true, true);\n    } else if (this.match(types._const) || this.match(types._var) || this.isLet()) {\n      throw this.raise(this.state.start, ErrorMessages.UnsupportedDefaultExport);\n    } else {\n      const res = this.parseMaybeAssignAllowIn();\n      this.semicolon();\n      return res;\n    }\n  }\n\n  parseExportDeclaration(node) {\n    return this.parseStatement(null);\n  }\n\n  isExportDefaultSpecifier() {\n    if (this.match(types.name)) {\n      const value = this.state.value;\n\n      if (value === \"async\" && !this.state.containsEsc || value === \"let\") {\n        return false;\n      }\n\n      if ((value === \"type\" || value === \"interface\") && !this.state.containsEsc) {\n        const l = this.lookahead();\n\n        if (l.type === types.name && l.value !== \"from\" || l.type === types.braceL) {\n          this.expectOnePlugin([\"flow\", \"typescript\"]);\n          return false;\n        }\n      }\n    } else if (!this.match(types._default)) {\n      return false;\n    }\n\n    const next = this.nextTokenStart();\n    const hasFrom = this.isUnparsedContextual(next, \"from\");\n\n    if (this.input.charCodeAt(next) === 44 || this.match(types.name) && hasFrom) {\n      return true;\n    }\n\n    if (this.match(types._default) && hasFrom) {\n      const nextAfterFrom = this.input.charCodeAt(this.nextTokenStartSince(next + 4));\n      return nextAfterFrom === 34 || nextAfterFrom === 39;\n    }\n\n    return false;\n  }\n\n  parseExportFrom(node, expect) {\n    if (this.eatContextual(\"from\")) {\n      node.source = this.parseImportSource();\n      this.checkExport(node);\n      const assertions = this.maybeParseImportAssertions();\n\n      if (assertions) {\n        node.assertions = assertions;\n      }\n    } else {\n      if (expect) {\n        this.unexpected();\n      } else {\n        node.source = null;\n      }\n    }\n\n    this.semicolon();\n  }\n\n  shouldParseExportDeclaration() {\n    if (this.match(types.at)) {\n      this.expectOnePlugin([\"decorators\", \"decorators-legacy\"]);\n\n      if (this.hasPlugin(\"decorators\")) {\n        if (this.getPluginOption(\"decorators\", \"decoratorsBeforeExport\")) {\n          this.unexpected(this.state.start, ErrorMessages.DecoratorBeforeExport);\n        } else {\n          return true;\n        }\n      }\n    }\n\n    return this.state.type.keyword === \"var\" || this.state.type.keyword === \"const\" || this.state.type.keyword === \"function\" || this.state.type.keyword === \"class\" || this.isLet() || this.isAsyncFunction();\n  }\n\n  checkExport(node, checkNames, isDefault, isFrom) {\n    if (checkNames) {\n      if (isDefault) {\n        this.checkDuplicateExports(node, \"default\");\n\n        if (this.hasPlugin(\"exportDefaultFrom\")) {\n          var _declaration$extra;\n\n          const declaration = node.declaration;\n\n          if (declaration.type === \"Identifier\" && declaration.name === \"from\" && declaration.end - declaration.start === 4 && !((_declaration$extra = declaration.extra) == null ? void 0 : _declaration$extra.parenthesized)) {\n            this.raise(declaration.start, ErrorMessages.ExportDefaultFromAsIdentifier);\n          }\n        }\n      } else if (node.specifiers && node.specifiers.length) {\n        for (let _i3 = 0, _node$specifiers = node.specifiers; _i3 < _node$specifiers.length; _i3++) {\n          const specifier = _node$specifiers[_i3];\n          const {\n            exported\n          } = specifier;\n          const exportedName = exported.type === \"Identifier\" ? exported.name : exported.value;\n          this.checkDuplicateExports(specifier, exportedName);\n\n          if (!isFrom && specifier.local) {\n            const {\n              local\n            } = specifier;\n\n            if (local.type === \"StringLiteral\") {\n              this.raise(specifier.start, ErrorMessages.ExportBindingIsString, local.value, exportedName);\n            } else {\n              this.checkReservedWord(local.name, local.start, true, false);\n              this.scope.checkLocalExport(local);\n            }\n          }\n        }\n      } else if (node.declaration) {\n        if (node.declaration.type === \"FunctionDeclaration\" || node.declaration.type === \"ClassDeclaration\") {\n          const id = node.declaration.id;\n          if (!id) throw new Error(\"Assertion failure\");\n          this.checkDuplicateExports(node, id.name);\n        } else if (node.declaration.type === \"VariableDeclaration\") {\n          for (let _i4 = 0, _node$declaration$dec = node.declaration.declarations; _i4 < _node$declaration$dec.length; _i4++) {\n            const declaration = _node$declaration$dec[_i4];\n            this.checkDeclaration(declaration.id);\n          }\n        }\n      }\n    }\n\n    const currentContextDecorators = this.state.decoratorStack[this.state.decoratorStack.length - 1];\n\n    if (currentContextDecorators.length) {\n      throw this.raise(node.start, ErrorMessages.UnsupportedDecoratorExport);\n    }\n  }\n\n  checkDeclaration(node) {\n    if (node.type === \"Identifier\") {\n      this.checkDuplicateExports(node, node.name);\n    } else if (node.type === \"ObjectPattern\") {\n      for (let _i5 = 0, _node$properties = node.properties; _i5 < _node$properties.length; _i5++) {\n        const prop = _node$properties[_i5];\n        this.checkDeclaration(prop);\n      }\n    } else if (node.type === \"ArrayPattern\") {\n      for (let _i6 = 0, _node$elements = node.elements; _i6 < _node$elements.length; _i6++) {\n        const elem = _node$elements[_i6];\n\n        if (elem) {\n          this.checkDeclaration(elem);\n        }\n      }\n    } else if (node.type === \"ObjectProperty\") {\n      this.checkDeclaration(node.value);\n    } else if (node.type === \"RestElement\") {\n      this.checkDeclaration(node.argument);\n    } else if (node.type === \"AssignmentPattern\") {\n      this.checkDeclaration(node.left);\n    }\n  }\n\n  checkDuplicateExports(node, name) {\n    if (this.state.exportedIdentifiers.indexOf(name) > -1) {\n      this.raise(node.start, name === \"default\" ? ErrorMessages.DuplicateDefaultExport : ErrorMessages.DuplicateExport, name);\n    }\n\n    this.state.exportedIdentifiers.push(name);\n  }\n\n  parseExportSpecifiers() {\n    const nodes = [];\n    let first = true;\n    this.expect(types.braceL);\n\n    while (!this.eat(types.braceR)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(types.comma);\n        if (this.eat(types.braceR)) break;\n      }\n\n      const node = this.startNode();\n      node.local = this.parseModuleExportName();\n      node.exported = this.eatContextual(\"as\") ? this.parseModuleExportName() : node.local.__clone();\n      nodes.push(this.finishNode(node, \"ExportSpecifier\"));\n    }\n\n    return nodes;\n  }\n\n  parseModuleExportName() {\n    if (this.match(types.string)) {\n      this.expectPlugin(\"moduleStringNames\");\n      const result = this.parseLiteral(this.state.value, \"StringLiteral\");\n      const surrogate = result.value.match(loneSurrogate);\n\n      if (surrogate) {\n        this.raise(result.start, ErrorMessages.ModuleExportNameHasLoneSurrogate, surrogate[0].charCodeAt(0).toString(16));\n      }\n\n      return result;\n    }\n\n    return this.parseIdentifier(true);\n  }\n\n  parseImport(node) {\n    node.specifiers = [];\n\n    if (!this.match(types.string)) {\n      const hasDefault = this.maybeParseDefaultImportSpecifier(node);\n      const parseNext = !hasDefault || this.eat(types.comma);\n      const hasStar = parseNext && this.maybeParseStarImportSpecifier(node);\n      if (parseNext && !hasStar) this.parseNamedImportSpecifiers(node);\n      this.expectContextual(\"from\");\n    }\n\n    node.source = this.parseImportSource();\n    const assertions = this.maybeParseImportAssertions();\n\n    if (assertions) {\n      node.assertions = assertions;\n    } else {\n        const attributes = this.maybeParseModuleAttributes();\n\n        if (attributes) {\n          node.attributes = attributes;\n        }\n      }\n\n    this.semicolon();\n    return this.finishNode(node, \"ImportDeclaration\");\n  }\n\n  parseImportSource() {\n    if (!this.match(types.string)) this.unexpected();\n    return this.parseExprAtom();\n  }\n\n  shouldParseDefaultImport(node) {\n    return this.match(types.name);\n  }\n\n  parseImportSpecifierLocal(node, specifier, type, contextDescription) {\n    specifier.local = this.parseIdentifier();\n    this.checkLVal(specifier.local, contextDescription, BIND_LEXICAL);\n    node.specifiers.push(this.finishNode(specifier, type));\n  }\n\n  parseAssertEntries() {\n    const attrs = [];\n    const attrNames = new Set();\n\n    do {\n      if (this.match(types.braceR)) {\n        break;\n      }\n\n      const node = this.startNode();\n      const keyName = this.state.value;\n\n      if (this.match(types.string)) {\n        node.key = this.parseLiteral(keyName, \"StringLiteral\");\n      } else {\n        node.key = this.parseIdentifier(true);\n      }\n\n      this.expect(types.colon);\n\n      if (keyName !== \"type\") {\n        this.raise(node.key.start, ErrorMessages.ModuleAttributeDifferentFromType, keyName);\n      }\n\n      if (attrNames.has(keyName)) {\n        this.raise(node.key.start, ErrorMessages.ModuleAttributesWithDuplicateKeys, keyName);\n      }\n\n      attrNames.add(keyName);\n\n      if (!this.match(types.string)) {\n        throw this.unexpected(this.state.start, ErrorMessages.ModuleAttributeInvalidValue);\n      }\n\n      node.value = this.parseLiteral(this.state.value, \"StringLiteral\");\n      this.finishNode(node, \"ImportAttribute\");\n      attrs.push(node);\n    } while (this.eat(types.comma));\n\n    return attrs;\n  }\n\n  maybeParseModuleAttributes() {\n    if (this.match(types._with) && !this.hasPrecedingLineBreak()) {\n      this.expectPlugin(\"moduleAttributes\");\n      this.next();\n    } else {\n      if (this.hasPlugin(\"moduleAttributes\")) return [];\n      return null;\n    }\n\n    const attrs = [];\n    const attributes = new Set();\n\n    do {\n      const node = this.startNode();\n      node.key = this.parseIdentifier(true);\n\n      if (node.key.name !== \"type\") {\n        this.raise(node.key.start, ErrorMessages.ModuleAttributeDifferentFromType, node.key.name);\n      }\n\n      if (attributes.has(node.key.name)) {\n        this.raise(node.key.start, ErrorMessages.ModuleAttributesWithDuplicateKeys, node.key.name);\n      }\n\n      attributes.add(node.key.name);\n      this.expect(types.colon);\n\n      if (!this.match(types.string)) {\n        throw this.unexpected(this.state.start, ErrorMessages.ModuleAttributeInvalidValue);\n      }\n\n      node.value = this.parseLiteral(this.state.value, \"StringLiteral\");\n      this.finishNode(node, \"ImportAttribute\");\n      attrs.push(node);\n    } while (this.eat(types.comma));\n\n    return attrs;\n  }\n\n  maybeParseImportAssertions() {\n    if (this.isContextual(\"assert\") && !this.hasPrecedingLineBreak()) {\n      this.expectPlugin(\"importAssertions\");\n      this.next();\n    } else {\n      if (this.hasPlugin(\"importAssertions\")) return [];\n      return null;\n    }\n\n    this.eat(types.braceL);\n    const attrs = this.parseAssertEntries();\n    this.eat(types.braceR);\n    return attrs;\n  }\n\n  maybeParseDefaultImportSpecifier(node) {\n    if (this.shouldParseDefaultImport(node)) {\n      this.parseImportSpecifierLocal(node, this.startNode(), \"ImportDefaultSpecifier\", \"default import specifier\");\n      return true;\n    }\n\n    return false;\n  }\n\n  maybeParseStarImportSpecifier(node) {\n    if (this.match(types.star)) {\n      const specifier = this.startNode();\n      this.next();\n      this.expectContextual(\"as\");\n      this.parseImportSpecifierLocal(node, specifier, \"ImportNamespaceSpecifier\", \"import namespace specifier\");\n      return true;\n    }\n\n    return false;\n  }\n\n  parseNamedImportSpecifiers(node) {\n    let first = true;\n    this.expect(types.braceL);\n\n    while (!this.eat(types.braceR)) {\n      if (first) {\n        first = false;\n      } else {\n        if (this.eat(types.colon)) {\n          throw this.raise(this.state.start, ErrorMessages.DestructureNamedImport);\n        }\n\n        this.expect(types.comma);\n        if (this.eat(types.braceR)) break;\n      }\n\n      this.parseImportSpecifier(node);\n    }\n  }\n\n  parseImportSpecifier(node) {\n    const specifier = this.startNode();\n    specifier.imported = this.parseModuleExportName();\n\n    if (this.eatContextual(\"as\")) {\n      specifier.local = this.parseIdentifier();\n    } else {\n      const {\n        imported\n      } = specifier;\n\n      if (imported.type === \"StringLiteral\") {\n        throw this.raise(specifier.start, ErrorMessages.ImportBindingIsString, imported.value);\n      }\n\n      this.checkReservedWord(imported.name, specifier.start, true, true);\n      specifier.local = imported.__clone();\n    }\n\n    this.checkLVal(specifier.local, \"import specifier\", BIND_LEXICAL);\n    node.specifiers.push(this.finishNode(specifier, \"ImportSpecifier\"));\n  }\n\n}\n\nclass ClassScope {\n  constructor() {\n    this.privateNames = new Set();\n    this.loneAccessors = new Map();\n    this.undefinedPrivateNames = new Map();\n  }\n\n}\nclass ClassScopeHandler {\n  constructor(raise) {\n    this.stack = [];\n    this.undefinedPrivateNames = new Map();\n    this.raise = raise;\n  }\n\n  current() {\n    return this.stack[this.stack.length - 1];\n  }\n\n  enter() {\n    this.stack.push(new ClassScope());\n  }\n\n  exit() {\n    const oldClassScope = this.stack.pop();\n    const current = this.current();\n\n    for (let _i = 0, _Array$from = Array.from(oldClassScope.undefinedPrivateNames); _i < _Array$from.length; _i++) {\n      const [name, pos] = _Array$from[_i];\n\n      if (current) {\n        if (!current.undefinedPrivateNames.has(name)) {\n          current.undefinedPrivateNames.set(name, pos);\n        }\n      } else {\n        this.raise(pos, ErrorMessages.InvalidPrivateFieldResolution, name);\n      }\n    }\n  }\n\n  declarePrivateName(name, elementType, pos) {\n    const classScope = this.current();\n    let redefined = classScope.privateNames.has(name);\n\n    if (elementType & CLASS_ELEMENT_KIND_ACCESSOR) {\n      const accessor = redefined && classScope.loneAccessors.get(name);\n\n      if (accessor) {\n        const oldStatic = accessor & CLASS_ELEMENT_FLAG_STATIC;\n        const newStatic = elementType & CLASS_ELEMENT_FLAG_STATIC;\n        const oldKind = accessor & CLASS_ELEMENT_KIND_ACCESSOR;\n        const newKind = elementType & CLASS_ELEMENT_KIND_ACCESSOR;\n        redefined = oldKind === newKind || oldStatic !== newStatic;\n        if (!redefined) classScope.loneAccessors.delete(name);\n      } else if (!redefined) {\n        classScope.loneAccessors.set(name, elementType);\n      }\n    }\n\n    if (redefined) {\n      this.raise(pos, ErrorMessages.PrivateNameRedeclaration, name);\n    }\n\n    classScope.privateNames.add(name);\n    classScope.undefinedPrivateNames.delete(name);\n  }\n\n  usePrivateName(name, pos) {\n    let classScope;\n\n    for (let _i2 = 0, _this$stack = this.stack; _i2 < _this$stack.length; _i2++) {\n      classScope = _this$stack[_i2];\n      if (classScope.privateNames.has(name)) return;\n    }\n\n    if (classScope) {\n      classScope.undefinedPrivateNames.set(name, pos);\n    } else {\n      this.raise(pos, ErrorMessages.InvalidPrivateFieldResolution, name);\n    }\n  }\n\n}\n\nclass Parser extends StatementParser {\n  constructor(options, input) {\n    options = getOptions(options);\n    super(options, input);\n    const ScopeHandler = this.getScopeHandler();\n    this.options = options;\n    this.inModule = this.options.sourceType === \"module\";\n    this.scope = new ScopeHandler(this.raise.bind(this), this.inModule);\n    this.prodParam = new ProductionParameterHandler();\n    this.classScope = new ClassScopeHandler(this.raise.bind(this));\n    this.expressionScope = new ExpressionScopeHandler(this.raise.bind(this));\n    this.plugins = pluginsMap(this.options.plugins);\n    this.filename = options.sourceFilename;\n  }\n\n  getScopeHandler() {\n    return ScopeHandler;\n  }\n\n  parse() {\n    let paramFlags = PARAM;\n\n    if (this.hasPlugin(\"topLevelAwait\") && this.inModule) {\n      paramFlags |= PARAM_AWAIT;\n    }\n\n    this.scope.enter(SCOPE_PROGRAM);\n    this.prodParam.enter(paramFlags);\n    const file = this.startNode();\n    const program = this.startNode();\n    this.nextToken();\n    file.errors = null;\n    this.parseTopLevel(file, program);\n    file.errors = this.state.errors;\n    return file;\n  }\n\n}\n\nfunction pluginsMap(plugins) {\n  const pluginMap = new Map();\n\n  for (let _i = 0; _i < plugins.length; _i++) {\n    const plugin = plugins[_i];\n    const [name, options] = Array.isArray(plugin) ? plugin : [plugin, {}];\n    if (!pluginMap.has(name)) pluginMap.set(name, options || {});\n  }\n\n  return pluginMap;\n}\n\nfunction parse(input, options) {\n  var _options;\n\n  if (((_options = options) == null ? void 0 : _options.sourceType) === \"unambiguous\") {\n    options = Object.assign({}, options);\n\n    try {\n      options.sourceType = \"module\";\n      const parser = getParser(options, input);\n      const ast = parser.parse();\n\n      if (parser.sawUnambiguousESM) {\n        return ast;\n      }\n\n      if (parser.ambiguousScriptDifferentAst) {\n        try {\n          options.sourceType = \"script\";\n          return getParser(options, input).parse();\n        } catch (_unused) {}\n      } else {\n        ast.program.sourceType = \"script\";\n      }\n\n      return ast;\n    } catch (moduleError) {\n      try {\n        options.sourceType = \"script\";\n        return getParser(options, input).parse();\n      } catch (_unused2) {}\n\n      throw moduleError;\n    }\n  } else {\n    return getParser(options, input).parse();\n  }\n}\nfunction parseExpression(input, options) {\n  const parser = getParser(options, input);\n\n  if (parser.options.strictMode) {\n    parser.state.strict = true;\n  }\n\n  return parser.getExpression();\n}\n\nfunction getParser(options, input) {\n  let cls = Parser;\n\n  if (options == null ? void 0 : options.plugins) {\n    validatePlugins(options.plugins);\n    cls = getParserClass(options.plugins);\n  }\n\n  return new cls(options, input);\n}\n\nconst parserClassCache = {};\n\nfunction getParserClass(pluginsFromOptions) {\n  const pluginList = mixinPluginNames.filter(name => hasPlugin(pluginsFromOptions, name));\n  const key = pluginList.join(\"/\");\n  let cls = parserClassCache[key];\n\n  if (!cls) {\n    cls = Parser;\n\n    for (let _i = 0; _i < pluginList.length; _i++) {\n      const plugin = pluginList[_i];\n      cls = mixinPlugins[plugin](cls);\n    }\n\n    parserClassCache[key] = cls;\n  }\n\n  return cls;\n}\n\nexports.parse = parse;\nexports.parseExpression = parseExpression;\nexports.tokTypes = types;\n//# sourceMappingURL=index.js.map\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.codeFrameColumns = codeFrameColumns;\nexports.default = _default;\n\nvar _highlight = _interopRequireWildcard(require(\"@babel/highlight\"));\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nlet deprecationWarningShown = false;\n\nfunction getDefs(chalk) {\n  return {\n    gutter: chalk.grey,\n    marker: chalk.red.bold,\n    message: chalk.red.bold\n  };\n}\n\nconst NEWLINE = /\\r\\n|[\\n\\r\\u2028\\u2029]/;\n\nfunction getMarkerLines(loc, source, opts) {\n  const startLoc = Object.assign({\n    column: 0,\n    line: -1\n  }, loc.start);\n  const endLoc = Object.assign({}, startLoc, loc.end);\n  const {\n    linesAbove = 2,\n    linesBelow = 3\n  } = opts || {};\n  const startLine = startLoc.line;\n  const startColumn = startLoc.column;\n  const endLine = endLoc.line;\n  const endColumn = endLoc.column;\n  let start = Math.max(startLine - (linesAbove + 1), 0);\n  let end = Math.min(source.length, endLine + linesBelow);\n\n  if (startLine === -1) {\n    start = 0;\n  }\n\n  if (endLine === -1) {\n    end = source.length;\n  }\n\n  const lineDiff = endLine - startLine;\n  const markerLines = {};\n\n  if (lineDiff) {\n    for (let i = 0; i <= lineDiff; i++) {\n      const lineNumber = i + startLine;\n\n      if (!startColumn) {\n        markerLines[lineNumber] = true;\n      } else if (i === 0) {\n        const sourceLength = source[lineNumber - 1].length;\n        markerLines[lineNumber] = [startColumn, sourceLength - startColumn + 1];\n      } else if (i === lineDiff) {\n        markerLines[lineNumber] = [0, endColumn];\n      } else {\n        const sourceLength = source[lineNumber - i].length;\n        markerLines[lineNumber] = [0, sourceLength];\n      }\n    }\n  } else {\n    if (startColumn === endColumn) {\n      if (startColumn) {\n        markerLines[startLine] = [startColumn, 0];\n      } else {\n        markerLines[startLine] = true;\n      }\n    } else {\n      markerLines[startLine] = [startColumn, endColumn - startColumn];\n    }\n  }\n\n  return {\n    start,\n    end,\n    markerLines\n  };\n}\n\nfunction codeFrameColumns(rawLines, loc, opts = {}) {\n  const highlighted = (opts.highlightCode || opts.forceColor) && (0, _highlight.shouldHighlight)(opts);\n  const chalk = (0, _highlight.getChalk)(opts);\n  const defs = getDefs(chalk);\n\n  const maybeHighlight = (chalkFn, string) => {\n    return highlighted ? chalkFn(string) : string;\n  };\n\n  const lines = rawLines.split(NEWLINE);\n  const {\n    start,\n    end,\n    markerLines\n  } = getMarkerLines(loc, lines, opts);\n  const hasColumns = loc.start && typeof loc.start.column === \"number\";\n  const numberMaxWidth = String(end).length;\n  const highlightedLines = highlighted ? (0, _highlight.default)(rawLines, opts) : rawLines;\n  let frame = highlightedLines.split(NEWLINE).slice(start, end).map((line, index) => {\n    const number = start + 1 + index;\n    const paddedNumber = ` ${number}`.slice(-numberMaxWidth);\n    const gutter = ` ${paddedNumber} | `;\n    const hasMarker = markerLines[number];\n    const lastMarkerLine = !markerLines[number + 1];\n\n    if (hasMarker) {\n      let markerLine = \"\";\n\n      if (Array.isArray(hasMarker)) {\n        const markerSpacing = line.slice(0, Math.max(hasMarker[0] - 1, 0)).replace(/[^\\t]/g, \" \");\n        const numberOfMarkers = hasMarker[1] || 1;\n        markerLine = [\"\\n \", maybeHighlight(defs.gutter, gutter.replace(/\\d/g, \" \")), markerSpacing, maybeHighlight(defs.marker, \"^\").repeat(numberOfMarkers)].join(\"\");\n\n        if (lastMarkerLine && opts.message) {\n          markerLine += \" \" + maybeHighlight(defs.message, opts.message);\n        }\n      }\n\n      return [maybeHighlight(defs.marker, \">\"), maybeHighlight(defs.gutter, gutter), line, markerLine].join(\"\");\n    } else {\n      return ` ${maybeHighlight(defs.gutter, gutter)}${line}`;\n    }\n  }).join(\"\\n\");\n\n  if (opts.message && !hasColumns) {\n    frame = `${\" \".repeat(numberMaxWidth + 1)}${opts.message}\\n${frame}`;\n  }\n\n  if (highlighted) {\n    return chalk.reset(frame);\n  } else {\n    return frame;\n  }\n}\n\nfunction _default(rawLines, lineNumber, colNumber, opts = {}) {\n  if (!deprecationWarningShown) {\n    deprecationWarningShown = true;\n    const message = \"Passing lineNumber and colNumber is deprecated to @babel/code-frame. Please use `codeFrameColumns`.\";\n\n    if (process.emitWarning) {\n      process.emitWarning(message, \"DeprecationWarning\");\n    } else {\n      const deprecationError = new Error(message);\n      deprecationError.name = \"DeprecationWarning\";\n      console.warn(new Error(message));\n    }\n  }\n\n  colNumber = Math.max(colNumber, 0);\n  const location = {\n    start: {\n      column: colNumber,\n      line: lineNumber\n    }\n  };\n  return codeFrameColumns(rawLines, location, opts);\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.merge = merge;\nexports.validate = validate;\nexports.normalizeReplacements = normalizeReplacements;\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction merge(a, b) {\n  const {\n    placeholderWhitelist = a.placeholderWhitelist,\n    placeholderPattern = a.placeholderPattern,\n    preserveComments = a.preserveComments,\n    syntacticPlaceholders = a.syntacticPlaceholders\n  } = b;\n  return {\n    parser: Object.assign({}, a.parser, b.parser),\n    placeholderWhitelist,\n    placeholderPattern,\n    preserveComments,\n    syntacticPlaceholders\n  };\n}\n\nfunction validate(opts) {\n  if (opts != null && typeof opts !== \"object\") {\n    throw new Error(\"Unknown template options.\");\n  }\n\n  const _ref = opts || {},\n        {\n    placeholderWhitelist,\n    placeholderPattern,\n    preserveComments,\n    syntacticPlaceholders\n  } = _ref,\n        parser = _objectWithoutPropertiesLoose(_ref, [\"placeholderWhitelist\", \"placeholderPattern\", \"preserveComments\", \"syntacticPlaceholders\"]);\n\n  if (placeholderWhitelist != null && !(placeholderWhitelist instanceof Set)) {\n    throw new Error(\"'.placeholderWhitelist' must be a Set, null, or undefined\");\n  }\n\n  if (placeholderPattern != null && !(placeholderPattern instanceof RegExp) && placeholderPattern !== false) {\n    throw new Error(\"'.placeholderPattern' must be a RegExp, false, null, or undefined\");\n  }\n\n  if (preserveComments != null && typeof preserveComments !== \"boolean\") {\n    throw new Error(\"'.preserveComments' must be a boolean, null, or undefined\");\n  }\n\n  if (syntacticPlaceholders != null && typeof syntacticPlaceholders !== \"boolean\") {\n    throw new Error(\"'.syntacticPlaceholders' must be a boolean, null, or undefined\");\n  }\n\n  if (syntacticPlaceholders === true && (placeholderWhitelist != null || placeholderPattern != null)) {\n    throw new Error(\"'.placeholderWhitelist' and '.placeholderPattern' aren't compatible\" + \" with '.syntacticPlaceholders: true'\");\n  }\n\n  return {\n    parser,\n    placeholderWhitelist: placeholderWhitelist || undefined,\n    placeholderPattern: placeholderPattern == null ? undefined : placeholderPattern,\n    preserveComments: preserveComments == null ? undefined : preserveComments,\n    syntacticPlaceholders: syntacticPlaceholders == null ? undefined : syntacticPlaceholders\n  };\n}\n\nfunction normalizeReplacements(replacements) {\n  if (Array.isArray(replacements)) {\n    return replacements.reduce((acc, replacement, i) => {\n      acc[\"$\" + i] = replacement;\n      return acc;\n    }, {});\n  } else if (typeof replacements === \"object\" || replacements == null) {\n    return replacements || undefined;\n  }\n\n  throw new Error(\"Template replacements must be an array, object, null, or undefined\");\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = parseAndBuildMetadata;\n\nvar t = _interopRequireWildcard(require(\"@babel/types\"));\n\nvar _parser = require(\"@babel/parser\");\n\nvar _codeFrame = require(\"@babel/code-frame\");\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nconst PATTERN = /^[_$A-Z0-9]+$/;\n\nfunction parseAndBuildMetadata(formatter, code, opts) {\n  const {\n    placeholderWhitelist,\n    placeholderPattern,\n    preserveComments,\n    syntacticPlaceholders\n  } = opts;\n  const ast = parseWithCodeFrame(code, opts.parser, syntacticPlaceholders);\n  t.removePropertiesDeep(ast, {\n    preserveComments\n  });\n  formatter.validate(ast);\n  const syntactic = {\n    placeholders: [],\n    placeholderNames: new Set()\n  };\n  const legacy = {\n    placeholders: [],\n    placeholderNames: new Set()\n  };\n  const isLegacyRef = {\n    value: undefined\n  };\n  t.traverse(ast, placeholderVisitorHandler, {\n    syntactic,\n    legacy,\n    isLegacyRef,\n    placeholderWhitelist,\n    placeholderPattern,\n    syntacticPlaceholders\n  });\n  return Object.assign({\n    ast\n  }, isLegacyRef.value ? legacy : syntactic);\n}\n\nfunction placeholderVisitorHandler(node, ancestors, state) {\n  var _state$placeholderWhi;\n\n  let name;\n\n  if (t.isPlaceholder(node)) {\n    if (state.syntacticPlaceholders === false) {\n      throw new Error(\"%%foo%%-style placeholders can't be used when \" + \"'.syntacticPlaceholders' is false.\");\n    } else {\n      name = node.name.name;\n      state.isLegacyRef.value = false;\n    }\n  } else if (state.isLegacyRef.value === false || state.syntacticPlaceholders) {\n    return;\n  } else if (t.isIdentifier(node) || t.isJSXIdentifier(node)) {\n    name = node.name;\n    state.isLegacyRef.value = true;\n  } else if (t.isStringLiteral(node)) {\n    name = node.value;\n    state.isLegacyRef.value = true;\n  } else {\n    return;\n  }\n\n  if (!state.isLegacyRef.value && (state.placeholderPattern != null || state.placeholderWhitelist != null)) {\n    throw new Error(\"'.placeholderWhitelist' and '.placeholderPattern' aren't compatible\" + \" with '.syntacticPlaceholders: true'\");\n  }\n\n  if (state.isLegacyRef.value && (state.placeholderPattern === false || !(state.placeholderPattern || PATTERN).test(name)) && !((_state$placeholderWhi = state.placeholderWhitelist) == null ? void 0 : _state$placeholderWhi.has(name))) {\n    return;\n  }\n\n  ancestors = ancestors.slice();\n  const {\n    node: parent,\n    key\n  } = ancestors[ancestors.length - 1];\n  let type;\n\n  if (t.isStringLiteral(node) || t.isPlaceholder(node, {\n    expectedNode: \"StringLiteral\"\n  })) {\n    type = \"string\";\n  } else if (t.isNewExpression(parent) && key === \"arguments\" || t.isCallExpression(parent) && key === \"arguments\" || t.isFunction(parent) && key === \"params\") {\n    type = \"param\";\n  } else if (t.isExpressionStatement(parent) && !t.isPlaceholder(node)) {\n    type = \"statement\";\n    ancestors = ancestors.slice(0, -1);\n  } else if (t.isStatement(node) && t.isPlaceholder(node)) {\n    type = \"statement\";\n  } else {\n    type = \"other\";\n  }\n\n  const {\n    placeholders,\n    placeholderNames\n  } = state.isLegacyRef.value ? state.legacy : state.syntactic;\n  placeholders.push({\n    name,\n    type,\n    resolve: ast => resolveAncestors(ast, ancestors),\n    isDuplicate: placeholderNames.has(name)\n  });\n  placeholderNames.add(name);\n}\n\nfunction resolveAncestors(ast, ancestors) {\n  let parent = ast;\n\n  for (let i = 0; i < ancestors.length - 1; i++) {\n    const {\n      key,\n      index\n    } = ancestors[i];\n\n    if (index === undefined) {\n      parent = parent[key];\n    } else {\n      parent = parent[key][index];\n    }\n  }\n\n  const {\n    key,\n    index\n  } = ancestors[ancestors.length - 1];\n  return {\n    parent,\n    key,\n    index\n  };\n}\n\nfunction parseWithCodeFrame(code, parserOpts, syntacticPlaceholders) {\n  const plugins = (parserOpts.plugins || []).slice();\n\n  if (syntacticPlaceholders !== false) {\n    plugins.push(\"placeholders\");\n  }\n\n  parserOpts = Object.assign({\n    allowReturnOutsideFunction: true,\n    allowSuperOutsideMethod: true,\n    sourceType: \"module\"\n  }, parserOpts, {\n    plugins\n  });\n\n  try {\n    return (0, _parser.parse)(code, parserOpts);\n  } catch (err) {\n    const loc = err.loc;\n\n    if (loc) {\n      err.message += \"\\n\" + (0, _codeFrame.codeFrameColumns)(code, {\n        start: loc\n      });\n      err.code = \"BABEL_TEMPLATE_PARSE_ERROR\";\n    }\n\n    throw err;\n  }\n}","/* MIT license */\nvar cssKeywords = require('color-name');\n\n// NOTE: conversions should only return primitive values (i.e. arrays, or\n//       values that give correct `typeof` results).\n//       do not use box values types (i.e. Number(), String(), etc.)\n\nvar reverseKeywords = {};\nfor (var key in cssKeywords) {\n\tif (cssKeywords.hasOwnProperty(key)) {\n\t\treverseKeywords[cssKeywords[key]] = key;\n\t}\n}\n\nvar convert = module.exports = {\n\trgb: {channels: 3, labels: 'rgb'},\n\thsl: {channels: 3, labels: 'hsl'},\n\thsv: {channels: 3, labels: 'hsv'},\n\thwb: {channels: 3, labels: 'hwb'},\n\tcmyk: {channels: 4, labels: 'cmyk'},\n\txyz: {channels: 3, labels: 'xyz'},\n\tlab: {channels: 3, labels: 'lab'},\n\tlch: {channels: 3, labels: 'lch'},\n\thex: {channels: 1, labels: ['hex']},\n\tkeyword: {channels: 1, labels: ['keyword']},\n\tansi16: {channels: 1, labels: ['ansi16']},\n\tansi256: {channels: 1, labels: ['ansi256']},\n\thcg: {channels: 3, labels: ['h', 'c', 'g']},\n\tapple: {channels: 3, labels: ['r16', 'g16', 'b16']},\n\tgray: {channels: 1, labels: ['gray']}\n};\n\n// hide .channels and .labels properties\nfor (var model in convert) {\n\tif (convert.hasOwnProperty(model)) {\n\t\tif (!('channels' in convert[model])) {\n\t\t\tthrow new Error('missing channels property: ' + model);\n\t\t}\n\n\t\tif (!('labels' in convert[model])) {\n\t\t\tthrow new Error('missing channel labels property: ' + model);\n\t\t}\n\n\t\tif (convert[model].labels.length !== convert[model].channels) {\n\t\t\tthrow new Error('channel and label counts mismatch: ' + model);\n\t\t}\n\n\t\tvar channels = convert[model].channels;\n\t\tvar labels = convert[model].labels;\n\t\tdelete convert[model].channels;\n\t\tdelete convert[model].labels;\n\t\tObject.defineProperty(convert[model], 'channels', {value: channels});\n\t\tObject.defineProperty(convert[model], 'labels', {value: labels});\n\t}\n}\n\nconvert.rgb.hsl = function (rgb) {\n\tvar r = rgb[0] / 255;\n\tvar g = rgb[1] / 255;\n\tvar b = rgb[2] / 255;\n\tvar min = Math.min(r, g, b);\n\tvar max = Math.max(r, g, b);\n\tvar delta = max - min;\n\tvar h;\n\tvar s;\n\tvar l;\n\n\tif (max === min) {\n\t\th = 0;\n\t} else if (r === max) {\n\t\th = (g - b) / delta;\n\t} else if (g === max) {\n\t\th = 2 + (b - r) / delta;\n\t} else if (b === max) {\n\t\th = 4 + (r - g) / delta;\n\t}\n\n\th = Math.min(h * 60, 360);\n\n\tif (h < 0) {\n\t\th += 360;\n\t}\n\n\tl = (min + max) / 2;\n\n\tif (max === min) {\n\t\ts = 0;\n\t} else if (l <= 0.5) {\n\t\ts = delta / (max + min);\n\t} else {\n\t\ts = delta / (2 - max - min);\n\t}\n\n\treturn [h, s * 100, l * 100];\n};\n\nconvert.rgb.hsv = function (rgb) {\n\tvar rdif;\n\tvar gdif;\n\tvar bdif;\n\tvar h;\n\tvar s;\n\n\tvar r = rgb[0] / 255;\n\tvar g = rgb[1] / 255;\n\tvar b = rgb[2] / 255;\n\tvar v = Math.max(r, g, b);\n\tvar diff = v - Math.min(r, g, b);\n\tvar diffc = function (c) {\n\t\treturn (v - c) / 6 / diff + 1 / 2;\n\t};\n\n\tif (diff === 0) {\n\t\th = s = 0;\n\t} else {\n\t\ts = diff / v;\n\t\trdif = diffc(r);\n\t\tgdif = diffc(g);\n\t\tbdif = diffc(b);\n\n\t\tif (r === v) {\n\t\t\th = bdif - gdif;\n\t\t} else if (g === v) {\n\t\t\th = (1 / 3) + rdif - bdif;\n\t\t} else if (b === v) {\n\t\t\th = (2 / 3) + gdif - rdif;\n\t\t}\n\t\tif (h < 0) {\n\t\t\th += 1;\n\t\t} else if (h > 1) {\n\t\t\th -= 1;\n\t\t}\n\t}\n\n\treturn [\n\t\th * 360,\n\t\ts * 100,\n\t\tv * 100\n\t];\n};\n\nconvert.rgb.hwb = function (rgb) {\n\tvar r = rgb[0];\n\tvar g = rgb[1];\n\tvar b = rgb[2];\n\tvar h = convert.rgb.hsl(rgb)[0];\n\tvar w = 1 / 255 * Math.min(r, Math.min(g, b));\n\n\tb = 1 - 1 / 255 * Math.max(r, Math.max(g, b));\n\n\treturn [h, w * 100, b * 100];\n};\n\nconvert.rgb.cmyk = function (rgb) {\n\tvar r = rgb[0] / 255;\n\tvar g = rgb[1] / 255;\n\tvar b = rgb[2] / 255;\n\tvar c;\n\tvar m;\n\tvar y;\n\tvar k;\n\n\tk = Math.min(1 - r, 1 - g, 1 - b);\n\tc = (1 - r - k) / (1 - k) || 0;\n\tm = (1 - g - k) / (1 - k) || 0;\n\ty = (1 - b - k) / (1 - k) || 0;\n\n\treturn [c * 100, m * 100, y * 100, k * 100];\n};\n\n/**\n * See https://en.m.wikipedia.org/wiki/Euclidean_distance#Squared_Euclidean_distance\n * */\nfunction comparativeDistance(x, y) {\n\treturn (\n\t\tMath.pow(x[0] - y[0], 2) +\n\t\tMath.pow(x[1] - y[1], 2) +\n\t\tMath.pow(x[2] - y[2], 2)\n\t);\n}\n\nconvert.rgb.keyword = function (rgb) {\n\tvar reversed = reverseKeywords[rgb];\n\tif (reversed) {\n\t\treturn reversed;\n\t}\n\n\tvar currentClosestDistance = Infinity;\n\tvar currentClosestKeyword;\n\n\tfor (var keyword in cssKeywords) {\n\t\tif (cssKeywords.hasOwnProperty(keyword)) {\n\t\t\tvar value = cssKeywords[keyword];\n\n\t\t\t// Compute comparative distance\n\t\t\tvar distance = comparativeDistance(rgb, value);\n\n\t\t\t// Check if its less, if so set as closest\n\t\t\tif (distance < currentClosestDistance) {\n\t\t\t\tcurrentClosestDistance = distance;\n\t\t\t\tcurrentClosestKeyword = keyword;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn currentClosestKeyword;\n};\n\nconvert.keyword.rgb = function (keyword) {\n\treturn cssKeywords[keyword];\n};\n\nconvert.rgb.xyz = function (rgb) {\n\tvar r = rgb[0] / 255;\n\tvar g = rgb[1] / 255;\n\tvar b = rgb[2] / 255;\n\n\t// assume sRGB\n\tr = r > 0.04045 ? Math.pow(((r + 0.055) / 1.055), 2.4) : (r / 12.92);\n\tg = g > 0.04045 ? Math.pow(((g + 0.055) / 1.055), 2.4) : (g / 12.92);\n\tb = b > 0.04045 ? Math.pow(((b + 0.055) / 1.055), 2.4) : (b / 12.92);\n\n\tvar x = (r * 0.4124) + (g * 0.3576) + (b * 0.1805);\n\tvar y = (r * 0.2126) + (g * 0.7152) + (b * 0.0722);\n\tvar z = (r * 0.0193) + (g * 0.1192) + (b * 0.9505);\n\n\treturn [x * 100, y * 100, z * 100];\n};\n\nconvert.rgb.lab = function (rgb) {\n\tvar xyz = convert.rgb.xyz(rgb);\n\tvar x = xyz[0];\n\tvar y = xyz[1];\n\tvar z = xyz[2];\n\tvar l;\n\tvar a;\n\tvar b;\n\n\tx /= 95.047;\n\ty /= 100;\n\tz /= 108.883;\n\n\tx = x > 0.008856 ? Math.pow(x, 1 / 3) : (7.787 * x) + (16 / 116);\n\ty = y > 0.008856 ? Math.pow(y, 1 / 3) : (7.787 * y) + (16 / 116);\n\tz = z > 0.008856 ? Math.pow(z, 1 / 3) : (7.787 * z) + (16 / 116);\n\n\tl = (116 * y) - 16;\n\ta = 500 * (x - y);\n\tb = 200 * (y - z);\n\n\treturn [l, a, b];\n};\n\nconvert.hsl.rgb = function (hsl) {\n\tvar h = hsl[0] / 360;\n\tvar s = hsl[1] / 100;\n\tvar l = hsl[2] / 100;\n\tvar t1;\n\tvar t2;\n\tvar t3;\n\tvar rgb;\n\tvar val;\n\n\tif (s === 0) {\n\t\tval = l * 255;\n\t\treturn [val, val, val];\n\t}\n\n\tif (l < 0.5) {\n\t\tt2 = l * (1 + s);\n\t} else {\n\t\tt2 = l + s - l * s;\n\t}\n\n\tt1 = 2 * l - t2;\n\n\trgb = [0, 0, 0];\n\tfor (var i = 0; i < 3; i++) {\n\t\tt3 = h + 1 / 3 * -(i - 1);\n\t\tif (t3 < 0) {\n\t\t\tt3++;\n\t\t}\n\t\tif (t3 > 1) {\n\t\t\tt3--;\n\t\t}\n\n\t\tif (6 * t3 < 1) {\n\t\t\tval = t1 + (t2 - t1) * 6 * t3;\n\t\t} else if (2 * t3 < 1) {\n\t\t\tval = t2;\n\t\t} else if (3 * t3 < 2) {\n\t\t\tval = t1 + (t2 - t1) * (2 / 3 - t3) * 6;\n\t\t} else {\n\t\t\tval = t1;\n\t\t}\n\n\t\trgb[i] = val * 255;\n\t}\n\n\treturn rgb;\n};\n\nconvert.hsl.hsv = function (hsl) {\n\tvar h = hsl[0];\n\tvar s = hsl[1] / 100;\n\tvar l = hsl[2] / 100;\n\tvar smin = s;\n\tvar lmin = Math.max(l, 0.01);\n\tvar sv;\n\tvar v;\n\n\tl *= 2;\n\ts *= (l <= 1) ? l : 2 - l;\n\tsmin *= lmin <= 1 ? lmin : 2 - lmin;\n\tv = (l + s) / 2;\n\tsv = l === 0 ? (2 * smin) / (lmin + smin) : (2 * s) / (l + s);\n\n\treturn [h, sv * 100, v * 100];\n};\n\nconvert.hsv.rgb = function (hsv) {\n\tvar h = hsv[0] / 60;\n\tvar s = hsv[1] / 100;\n\tvar v = hsv[2] / 100;\n\tvar hi = Math.floor(h) % 6;\n\n\tvar f = h - Math.floor(h);\n\tvar p = 255 * v * (1 - s);\n\tvar q = 255 * v * (1 - (s * f));\n\tvar t = 255 * v * (1 - (s * (1 - f)));\n\tv *= 255;\n\n\tswitch (hi) {\n\t\tcase 0:\n\t\t\treturn [v, t, p];\n\t\tcase 1:\n\t\t\treturn [q, v, p];\n\t\tcase 2:\n\t\t\treturn [p, v, t];\n\t\tcase 3:\n\t\t\treturn [p, q, v];\n\t\tcase 4:\n\t\t\treturn [t, p, v];\n\t\tcase 5:\n\t\t\treturn [v, p, q];\n\t}\n};\n\nconvert.hsv.hsl = function (hsv) {\n\tvar h = hsv[0];\n\tvar s = hsv[1] / 100;\n\tvar v = hsv[2] / 100;\n\tvar vmin = Math.max(v, 0.01);\n\tvar lmin;\n\tvar sl;\n\tvar l;\n\n\tl = (2 - s) * v;\n\tlmin = (2 - s) * vmin;\n\tsl = s * vmin;\n\tsl /= (lmin <= 1) ? lmin : 2 - lmin;\n\tsl = sl || 0;\n\tl /= 2;\n\n\treturn [h, sl * 100, l * 100];\n};\n\n// http://dev.w3.org/csswg/css-color/#hwb-to-rgb\nconvert.hwb.rgb = function (hwb) {\n\tvar h = hwb[0] / 360;\n\tvar wh = hwb[1] / 100;\n\tvar bl = hwb[2] / 100;\n\tvar ratio = wh + bl;\n\tvar i;\n\tvar v;\n\tvar f;\n\tvar n;\n\n\t// wh + bl cant be > 1\n\tif (ratio > 1) {\n\t\twh /= ratio;\n\t\tbl /= ratio;\n\t}\n\n\ti = Math.floor(6 * h);\n\tv = 1 - bl;\n\tf = 6 * h - i;\n\n\tif ((i & 0x01) !== 0) {\n\t\tf = 1 - f;\n\t}\n\n\tn = wh + f * (v - wh); // linear interpolation\n\n\tvar r;\n\tvar g;\n\tvar b;\n\tswitch (i) {\n\t\tdefault:\n\t\tcase 6:\n\t\tcase 0: r = v; g = n; b = wh; break;\n\t\tcase 1: r = n; g = v; b = wh; break;\n\t\tcase 2: r = wh; g = v; b = n; break;\n\t\tcase 3: r = wh; g = n; b = v; break;\n\t\tcase 4: r = n; g = wh; b = v; break;\n\t\tcase 5: r = v; g = wh; b = n; break;\n\t}\n\n\treturn [r * 255, g * 255, b * 255];\n};\n\nconvert.cmyk.rgb = function (cmyk) {\n\tvar c = cmyk[0] / 100;\n\tvar m = cmyk[1] / 100;\n\tvar y = cmyk[2] / 100;\n\tvar k = cmyk[3] / 100;\n\tvar r;\n\tvar g;\n\tvar b;\n\n\tr = 1 - Math.min(1, c * (1 - k) + k);\n\tg = 1 - Math.min(1, m * (1 - k) + k);\n\tb = 1 - Math.min(1, y * (1 - k) + k);\n\n\treturn [r * 255, g * 255, b * 255];\n};\n\nconvert.xyz.rgb = function (xyz) {\n\tvar x = xyz[0] / 100;\n\tvar y = xyz[1] / 100;\n\tvar z = xyz[2] / 100;\n\tvar r;\n\tvar g;\n\tvar b;\n\n\tr = (x * 3.2406) + (y * -1.5372) + (z * -0.4986);\n\tg = (x * -0.9689) + (y * 1.8758) + (z * 0.0415);\n\tb = (x * 0.0557) + (y * -0.2040) + (z * 1.0570);\n\n\t// assume sRGB\n\tr = r > 0.0031308\n\t\t? ((1.055 * Math.pow(r, 1.0 / 2.4)) - 0.055)\n\t\t: r * 12.92;\n\n\tg = g > 0.0031308\n\t\t? ((1.055 * Math.pow(g, 1.0 / 2.4)) - 0.055)\n\t\t: g * 12.92;\n\n\tb = b > 0.0031308\n\t\t? ((1.055 * Math.pow(b, 1.0 / 2.4)) - 0.055)\n\t\t: b * 12.92;\n\n\tr = Math.min(Math.max(0, r), 1);\n\tg = Math.min(Math.max(0, g), 1);\n\tb = Math.min(Math.max(0, b), 1);\n\n\treturn [r * 255, g * 255, b * 255];\n};\n\nconvert.xyz.lab = function (xyz) {\n\tvar x = xyz[0];\n\tvar y = xyz[1];\n\tvar z = xyz[2];\n\tvar l;\n\tvar a;\n\tvar b;\n\n\tx /= 95.047;\n\ty /= 100;\n\tz /= 108.883;\n\n\tx = x > 0.008856 ? Math.pow(x, 1 / 3) : (7.787 * x) + (16 / 116);\n\ty = y > 0.008856 ? Math.pow(y, 1 / 3) : (7.787 * y) + (16 / 116);\n\tz = z > 0.008856 ? Math.pow(z, 1 / 3) : (7.787 * z) + (16 / 116);\n\n\tl = (116 * y) - 16;\n\ta = 500 * (x - y);\n\tb = 200 * (y - z);\n\n\treturn [l, a, b];\n};\n\nconvert.lab.xyz = function (lab) {\n\tvar l = lab[0];\n\tvar a = lab[1];\n\tvar b = lab[2];\n\tvar x;\n\tvar y;\n\tvar z;\n\n\ty = (l + 16) / 116;\n\tx = a / 500 + y;\n\tz = y - b / 200;\n\n\tvar y2 = Math.pow(y, 3);\n\tvar x2 = Math.pow(x, 3);\n\tvar z2 = Math.pow(z, 3);\n\ty = y2 > 0.008856 ? y2 : (y - 16 / 116) / 7.787;\n\tx = x2 > 0.008856 ? x2 : (x - 16 / 116) / 7.787;\n\tz = z2 > 0.008856 ? z2 : (z - 16 / 116) / 7.787;\n\n\tx *= 95.047;\n\ty *= 100;\n\tz *= 108.883;\n\n\treturn [x, y, z];\n};\n\nconvert.lab.lch = function (lab) {\n\tvar l = lab[0];\n\tvar a = lab[1];\n\tvar b = lab[2];\n\tvar hr;\n\tvar h;\n\tvar c;\n\n\thr = Math.atan2(b, a);\n\th = hr * 360 / 2 / Math.PI;\n\n\tif (h < 0) {\n\t\th += 360;\n\t}\n\n\tc = Math.sqrt(a * a + b * b);\n\n\treturn [l, c, h];\n};\n\nconvert.lch.lab = function (lch) {\n\tvar l = lch[0];\n\tvar c = lch[1];\n\tvar h = lch[2];\n\tvar a;\n\tvar b;\n\tvar hr;\n\n\thr = h / 360 * 2 * Math.PI;\n\ta = c * Math.cos(hr);\n\tb = c * Math.sin(hr);\n\n\treturn [l, a, b];\n};\n\nconvert.rgb.ansi16 = function (args) {\n\tvar r = args[0];\n\tvar g = args[1];\n\tvar b = args[2];\n\tvar value = 1 in arguments ? arguments[1] : convert.rgb.hsv(args)[2]; // hsv -> ansi16 optimization\n\n\tvalue = Math.round(value / 50);\n\n\tif (value === 0) {\n\t\treturn 30;\n\t}\n\n\tvar ansi = 30\n\t\t+ ((Math.round(b / 255) << 2)\n\t\t| (Math.round(g / 255) << 1)\n\t\t| Math.round(r / 255));\n\n\tif (value === 2) {\n\t\tansi += 60;\n\t}\n\n\treturn ansi;\n};\n\nconvert.hsv.ansi16 = function (args) {\n\t// optimization here; we already know the value and don't need to get\n\t// it converted for us.\n\treturn convert.rgb.ansi16(convert.hsv.rgb(args), args[2]);\n};\n\nconvert.rgb.ansi256 = function (args) {\n\tvar r = args[0];\n\tvar g = args[1];\n\tvar b = args[2];\n\n\t// we use the extended greyscale palette here, with the exception of\n\t// black and white. normal palette only has 4 greyscale shades.\n\tif (r === g && g === b) {\n\t\tif (r < 8) {\n\t\t\treturn 16;\n\t\t}\n\n\t\tif (r > 248) {\n\t\t\treturn 231;\n\t\t}\n\n\t\treturn Math.round(((r - 8) / 247) * 24) + 232;\n\t}\n\n\tvar ansi = 16\n\t\t+ (36 * Math.round(r / 255 * 5))\n\t\t+ (6 * Math.round(g / 255 * 5))\n\t\t+ Math.round(b / 255 * 5);\n\n\treturn ansi;\n};\n\nconvert.ansi16.rgb = function (args) {\n\tvar color = args % 10;\n\n\t// handle greyscale\n\tif (color === 0 || color === 7) {\n\t\tif (args > 50) {\n\t\t\tcolor += 3.5;\n\t\t}\n\n\t\tcolor = color / 10.5 * 255;\n\n\t\treturn [color, color, color];\n\t}\n\n\tvar mult = (~~(args > 50) + 1) * 0.5;\n\tvar r = ((color & 1) * mult) * 255;\n\tvar g = (((color >> 1) & 1) * mult) * 255;\n\tvar b = (((color >> 2) & 1) * mult) * 255;\n\n\treturn [r, g, b];\n};\n\nconvert.ansi256.rgb = function (args) {\n\t// handle greyscale\n\tif (args >= 232) {\n\t\tvar c = (args - 232) * 10 + 8;\n\t\treturn [c, c, c];\n\t}\n\n\targs -= 16;\n\n\tvar rem;\n\tvar r = Math.floor(args / 36) / 5 * 255;\n\tvar g = Math.floor((rem = args % 36) / 6) / 5 * 255;\n\tvar b = (rem % 6) / 5 * 255;\n\n\treturn [r, g, b];\n};\n\nconvert.rgb.hex = function (args) {\n\tvar integer = ((Math.round(args[0]) & 0xFF) << 16)\n\t\t+ ((Math.round(args[1]) & 0xFF) << 8)\n\t\t+ (Math.round(args[2]) & 0xFF);\n\n\tvar string = integer.toString(16).toUpperCase();\n\treturn '000000'.substring(string.length) + string;\n};\n\nconvert.hex.rgb = function (args) {\n\tvar match = args.toString(16).match(/[a-f0-9]{6}|[a-f0-9]{3}/i);\n\tif (!match) {\n\t\treturn [0, 0, 0];\n\t}\n\n\tvar colorString = match[0];\n\n\tif (match[0].length === 3) {\n\t\tcolorString = colorString.split('').map(function (char) {\n\t\t\treturn char + char;\n\t\t}).join('');\n\t}\n\n\tvar integer = parseInt(colorString, 16);\n\tvar r = (integer >> 16) & 0xFF;\n\tvar g = (integer >> 8) & 0xFF;\n\tvar b = integer & 0xFF;\n\n\treturn [r, g, b];\n};\n\nconvert.rgb.hcg = function (rgb) {\n\tvar r = rgb[0] / 255;\n\tvar g = rgb[1] / 255;\n\tvar b = rgb[2] / 255;\n\tvar max = Math.max(Math.max(r, g), b);\n\tvar min = Math.min(Math.min(r, g), b);\n\tvar chroma = (max - min);\n\tvar grayscale;\n\tvar hue;\n\n\tif (chroma < 1) {\n\t\tgrayscale = min / (1 - chroma);\n\t} else {\n\t\tgrayscale = 0;\n\t}\n\n\tif (chroma <= 0) {\n\t\thue = 0;\n\t} else\n\tif (max === r) {\n\t\thue = ((g - b) / chroma) % 6;\n\t} else\n\tif (max === g) {\n\t\thue = 2 + (b - r) / chroma;\n\t} else {\n\t\thue = 4 + (r - g) / chroma + 4;\n\t}\n\n\thue /= 6;\n\thue %= 1;\n\n\treturn [hue * 360, chroma * 100, grayscale * 100];\n};\n\nconvert.hsl.hcg = function (hsl) {\n\tvar s = hsl[1] / 100;\n\tvar l = hsl[2] / 100;\n\tvar c = 1;\n\tvar f = 0;\n\n\tif (l < 0.5) {\n\t\tc = 2.0 * s * l;\n\t} else {\n\t\tc = 2.0 * s * (1.0 - l);\n\t}\n\n\tif (c < 1.0) {\n\t\tf = (l - 0.5 * c) / (1.0 - c);\n\t}\n\n\treturn [hsl[0], c * 100, f * 100];\n};\n\nconvert.hsv.hcg = function (hsv) {\n\tvar s = hsv[1] / 100;\n\tvar v = hsv[2] / 100;\n\n\tvar c = s * v;\n\tvar f = 0;\n\n\tif (c < 1.0) {\n\t\tf = (v - c) / (1 - c);\n\t}\n\n\treturn [hsv[0], c * 100, f * 100];\n};\n\nconvert.hcg.rgb = function (hcg) {\n\tvar h = hcg[0] / 360;\n\tvar c = hcg[1] / 100;\n\tvar g = hcg[2] / 100;\n\n\tif (c === 0.0) {\n\t\treturn [g * 255, g * 255, g * 255];\n\t}\n\n\tvar pure = [0, 0, 0];\n\tvar hi = (h % 1) * 6;\n\tvar v = hi % 1;\n\tvar w = 1 - v;\n\tvar mg = 0;\n\n\tswitch (Math.floor(hi)) {\n\t\tcase 0:\n\t\t\tpure[0] = 1; pure[1] = v; pure[2] = 0; break;\n\t\tcase 1:\n\t\t\tpure[0] = w; pure[1] = 1; pure[2] = 0; break;\n\t\tcase 2:\n\t\t\tpure[0] = 0; pure[1] = 1; pure[2] = v; break;\n\t\tcase 3:\n\t\t\tpure[0] = 0; pure[1] = w; pure[2] = 1; break;\n\t\tcase 4:\n\t\t\tpure[0] = v; pure[1] = 0; pure[2] = 1; break;\n\t\tdefault:\n\t\t\tpure[0] = 1; pure[1] = 0; pure[2] = w;\n\t}\n\n\tmg = (1.0 - c) * g;\n\n\treturn [\n\t\t(c * pure[0] + mg) * 255,\n\t\t(c * pure[1] + mg) * 255,\n\t\t(c * pure[2] + mg) * 255\n\t];\n};\n\nconvert.hcg.hsv = function (hcg) {\n\tvar c = hcg[1] / 100;\n\tvar g = hcg[2] / 100;\n\n\tvar v = c + g * (1.0 - c);\n\tvar f = 0;\n\n\tif (v > 0.0) {\n\t\tf = c / v;\n\t}\n\n\treturn [hcg[0], f * 100, v * 100];\n};\n\nconvert.hcg.hsl = function (hcg) {\n\tvar c = hcg[1] / 100;\n\tvar g = hcg[2] / 100;\n\n\tvar l = g * (1.0 - c) + 0.5 * c;\n\tvar s = 0;\n\n\tif (l > 0.0 && l < 0.5) {\n\t\ts = c / (2 * l);\n\t} else\n\tif (l >= 0.5 && l < 1.0) {\n\t\ts = c / (2 * (1 - l));\n\t}\n\n\treturn [hcg[0], s * 100, l * 100];\n};\n\nconvert.hcg.hwb = function (hcg) {\n\tvar c = hcg[1] / 100;\n\tvar g = hcg[2] / 100;\n\tvar v = c + g * (1.0 - c);\n\treturn [hcg[0], (v - c) * 100, (1 - v) * 100];\n};\n\nconvert.hwb.hcg = function (hwb) {\n\tvar w = hwb[1] / 100;\n\tvar b = hwb[2] / 100;\n\tvar v = 1 - b;\n\tvar c = v - w;\n\tvar g = 0;\n\n\tif (c < 1) {\n\t\tg = (v - c) / (1 - c);\n\t}\n\n\treturn [hwb[0], c * 100, g * 100];\n};\n\nconvert.apple.rgb = function (apple) {\n\treturn [(apple[0] / 65535) * 255, (apple[1] / 65535) * 255, (apple[2] / 65535) * 255];\n};\n\nconvert.rgb.apple = function (rgb) {\n\treturn [(rgb[0] / 255) * 65535, (rgb[1] / 255) * 65535, (rgb[2] / 255) * 65535];\n};\n\nconvert.gray.rgb = function (args) {\n\treturn [args[0] / 100 * 255, args[0] / 100 * 255, args[0] / 100 * 255];\n};\n\nconvert.gray.hsl = convert.gray.hsv = function (args) {\n\treturn [0, 0, args[0]];\n};\n\nconvert.gray.hwb = function (gray) {\n\treturn [0, 100, gray[0]];\n};\n\nconvert.gray.cmyk = function (gray) {\n\treturn [0, 0, 0, gray[0]];\n};\n\nconvert.gray.lab = function (gray) {\n\treturn [gray[0], 0, 0];\n};\n\nconvert.gray.hex = function (gray) {\n\tvar val = Math.round(gray[0] / 100 * 255) & 0xFF;\n\tvar integer = (val << 16) + (val << 8) + val;\n\n\tvar string = integer.toString(16).toUpperCase();\n\treturn '000000'.substring(string.length) + string;\n};\n\nconvert.rgb.gray = function (rgb) {\n\tvar val = (rgb[0] + rgb[1] + rgb[2]) / 3;\n\treturn [val / 255 * 100];\n};\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = populatePlaceholders;\n\nvar t = _interopRequireWildcard(require(\"@babel/types\"));\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction populatePlaceholders(metadata, replacements) {\n  const ast = t.cloneNode(metadata.ast);\n\n  if (replacements) {\n    metadata.placeholders.forEach(placeholder => {\n      if (!Object.prototype.hasOwnProperty.call(replacements, placeholder.name)) {\n        const placeholderName = placeholder.name;\n        throw new Error(`Error: No substitution given for \"${placeholderName}\". If this is not meant to be a\n            placeholder you may want to consider passing one of the following options to @babel/template:\n            - { placeholderPattern: false, placeholderWhitelist: new Set(['${placeholderName}'])}\n            - { placeholderPattern: /^${placeholderName}$/ }`);\n      }\n    });\n    Object.keys(replacements).forEach(key => {\n      if (!metadata.placeholderNames.has(key)) {\n        throw new Error(`Unknown substitution \"${key}\" given`);\n      }\n    });\n  }\n\n  metadata.placeholders.slice().reverse().forEach(placeholder => {\n    try {\n      applyReplacement(placeholder, ast, replacements && replacements[placeholder.name] || null);\n    } catch (e) {\n      e.message = `@babel/template placeholder \"${placeholder.name}\": ${e.message}`;\n      throw e;\n    }\n  });\n  return ast;\n}\n\nfunction applyReplacement(placeholder, ast, replacement) {\n  if (placeholder.isDuplicate) {\n    if (Array.isArray(replacement)) {\n      replacement = replacement.map(node => t.cloneNode(node));\n    } else if (typeof replacement === \"object\") {\n      replacement = t.cloneNode(replacement);\n    }\n  }\n\n  const {\n    parent,\n    key,\n    index\n  } = placeholder.resolve(ast);\n\n  if (placeholder.type === \"string\") {\n    if (typeof replacement === \"string\") {\n      replacement = t.stringLiteral(replacement);\n    }\n\n    if (!replacement || !t.isStringLiteral(replacement)) {\n      throw new Error(\"Expected string substitution\");\n    }\n  } else if (placeholder.type === \"statement\") {\n    if (index === undefined) {\n      if (!replacement) {\n        replacement = t.emptyStatement();\n      } else if (Array.isArray(replacement)) {\n        replacement = t.blockStatement(replacement);\n      } else if (typeof replacement === \"string\") {\n        replacement = t.expressionStatement(t.identifier(replacement));\n      } else if (!t.isStatement(replacement)) {\n        replacement = t.expressionStatement(replacement);\n      }\n    } else {\n      if (replacement && !Array.isArray(replacement)) {\n        if (typeof replacement === \"string\") {\n          replacement = t.identifier(replacement);\n        }\n\n        if (!t.isStatement(replacement)) {\n          replacement = t.expressionStatement(replacement);\n        }\n      }\n    }\n  } else if (placeholder.type === \"param\") {\n    if (typeof replacement === \"string\") {\n      replacement = t.identifier(replacement);\n    }\n\n    if (index === undefined) throw new Error(\"Assertion failure.\");\n  } else {\n    if (typeof replacement === \"string\") {\n      replacement = t.identifier(replacement);\n    }\n\n    if (Array.isArray(replacement)) {\n      throw new Error(\"Cannot replace single expression with an array.\");\n    }\n  }\n\n  if (index === undefined) {\n    t.validate(parent, key, replacement);\n    parent[key] = replacement;\n  } else {\n    const items = parent[key].slice();\n\n    if (placeholder.type === \"statement\" || placeholder.type === \"param\") {\n      if (replacement == null) {\n        items.splice(index, 1);\n      } else if (Array.isArray(replacement)) {\n        items.splice(index, 1, ...replacement);\n      } else {\n        items[index] = replacement;\n      }\n    } else {\n      items[index] = replacement;\n    }\n\n    t.validate(parent, key, items);\n    parent[key] = items;\n  }\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _helperPluginUtils = require(\"@babel/helper-plugin-utils\");\n\nvar _helperAnnotateAsPure = _interopRequireDefault(require(\"@babel/helper-annotate-as-pure\"));\n\nvar _helperFunctionName = _interopRequireDefault(require(\"@babel/helper-function-name\"));\n\nvar _helperSplitExportDeclaration = _interopRequireDefault(require(\"@babel/helper-split-export-declaration\"));\n\nvar _core = require(\"@babel/core\");\n\nvar _globals = _interopRequireDefault(require(\"globals\"));\n\nvar _transformClass = _interopRequireDefault(require(\"./transformClass\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst getBuiltinClasses = category => Object.keys(_globals.default[category]).filter(name => /^[A-Z]/.test(name));\n\nconst builtinClasses = new Set([...getBuiltinClasses(\"builtin\"), ...getBuiltinClasses(\"browser\")]);\n\nvar _default = (0, _helperPluginUtils.declare)((api, options) => {\n  api.assertVersion(7);\n  const {\n    loose\n  } = options;\n  const VISITED = Symbol();\n  return {\n    name: \"transform-classes\",\n    visitor: {\n      ExportDefaultDeclaration(path) {\n        if (!path.get(\"declaration\").isClassDeclaration()) return;\n        (0, _helperSplitExportDeclaration.default)(path);\n      },\n\n      ClassDeclaration(path) {\n        const {\n          node\n        } = path;\n        const ref = node.id || path.scope.generateUidIdentifier(\"class\");\n        path.replaceWith(_core.types.variableDeclaration(\"let\", [_core.types.variableDeclarator(ref, _core.types.toExpression(node))]));\n      },\n\n      ClassExpression(path, state) {\n        const {\n          node\n        } = path;\n        if (node[VISITED]) return;\n        const inferred = (0, _helperFunctionName.default)(path);\n\n        if (inferred && inferred !== node) {\n          path.replaceWith(inferred);\n          return;\n        }\n\n        node[VISITED] = true;\n        path.replaceWith((0, _transformClass.default)(path, state.file, builtinClasses, loose));\n\n        if (path.isCallExpression()) {\n          (0, _helperAnnotateAsPure.default)(path);\n\n          if (path.get(\"callee\").isArrowFunctionExpression()) {\n            path.get(\"callee\").arrowFunctionToExpression();\n          }\n        }\n      }\n\n    }\n  };\n});\n\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.program = exports.expression = exports.statement = exports.statements = exports.smart = void 0;\n\nvar t = _interopRequireWildcard(require(\"@babel/types\"));\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction makeStatementFormatter(fn) {\n  return {\n    code: str => `/* @babel/template */;\\n${str}`,\n    validate: () => {},\n    unwrap: ast => {\n      return fn(ast.program.body.slice(1));\n    }\n  };\n}\n\nconst smart = makeStatementFormatter(body => {\n  if (body.length > 1) {\n    return body;\n  } else {\n    return body[0];\n  }\n});\nexports.smart = smart;\nconst statements = makeStatementFormatter(body => body);\nexports.statements = statements;\nconst statement = makeStatementFormatter(body => {\n  if (body.length === 0) {\n    throw new Error(\"Found nothing to return.\");\n  }\n\n  if (body.length > 1) {\n    throw new Error(\"Found multiple statements but wanted one\");\n  }\n\n  return body[0];\n});\nexports.statement = statement;\nconst expression = {\n  code: str => `(\\n${str}\\n)`,\n  validate: ast => {\n    if (ast.program.body.length > 1) {\n      throw new Error(\"Found multiple statements but wanted one\");\n    }\n\n    if (expression.unwrap(ast).start === 0) {\n      throw new Error(\"Parse result included parens.\");\n    }\n  },\n  unwrap: ({\n    program\n  }) => {\n    const [stmt] = program.body;\n    t.assertExpressionStatement(stmt);\n    return stmt.expression;\n  }\n};\nexports.expression = expression;\nconst program = {\n  code: str => str,\n  validate: () => {},\n  unwrap: ast => ast.program\n};\nexports.program = program;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = createTemplateBuilder;\n\nvar _options = require(\"./options\");\n\nvar _string = _interopRequireDefault(require(\"./string\"));\n\nvar _literal = _interopRequireDefault(require(\"./literal\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst NO_PLACEHOLDER = (0, _options.validate)({\n  placeholderPattern: false\n});\n\nfunction createTemplateBuilder(formatter, defaultOpts) {\n  const templateFnCache = new WeakMap();\n  const templateAstCache = new WeakMap();\n  const cachedOpts = defaultOpts || (0, _options.validate)(null);\n  return Object.assign((tpl, ...args) => {\n    if (typeof tpl === \"string\") {\n      if (args.length > 1) throw new Error(\"Unexpected extra params.\");\n      return extendedTrace((0, _string.default)(formatter, tpl, (0, _options.merge)(cachedOpts, (0, _options.validate)(args[0]))));\n    } else if (Array.isArray(tpl)) {\n      let builder = templateFnCache.get(tpl);\n\n      if (!builder) {\n        builder = (0, _literal.default)(formatter, tpl, cachedOpts);\n        templateFnCache.set(tpl, builder);\n      }\n\n      return extendedTrace(builder(args));\n    } else if (typeof tpl === \"object\" && tpl) {\n      if (args.length > 0) throw new Error(\"Unexpected extra params.\");\n      return createTemplateBuilder(formatter, (0, _options.merge)(cachedOpts, (0, _options.validate)(tpl)));\n    }\n\n    throw new Error(`Unexpected template param ${typeof tpl}`);\n  }, {\n    ast: (tpl, ...args) => {\n      if (typeof tpl === \"string\") {\n        if (args.length > 1) throw new Error(\"Unexpected extra params.\");\n        return (0, _string.default)(formatter, tpl, (0, _options.merge)((0, _options.merge)(cachedOpts, (0, _options.validate)(args[0])), NO_PLACEHOLDER))();\n      } else if (Array.isArray(tpl)) {\n        let builder = templateAstCache.get(tpl);\n\n        if (!builder) {\n          builder = (0, _literal.default)(formatter, tpl, (0, _options.merge)(cachedOpts, NO_PLACEHOLDER));\n          templateAstCache.set(tpl, builder);\n        }\n\n        return builder(args)();\n      }\n\n      throw new Error(`Unexpected template param ${typeof tpl}`);\n    }\n  });\n}\n\nfunction extendedTrace(fn) {\n  let rootStack = \"\";\n\n  try {\n    throw new Error();\n  } catch (error) {\n    if (error.stack) {\n      rootStack = error.stack.split(\"\\n\").slice(3).join(\"\\n\");\n    }\n  }\n\n  return arg => {\n    try {\n      return fn(arg);\n    } catch (err) {\n      err.stack += `\\n    =============\\n${rootStack}`;\n      throw err;\n    }\n  };\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = stringTemplate;\n\nvar _options = require(\"./options\");\n\nvar _parse = _interopRequireDefault(require(\"./parse\"));\n\nvar _populate = _interopRequireDefault(require(\"./populate\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction stringTemplate(formatter, code, opts) {\n  code = formatter.code(code);\n  let metadata;\n  return arg => {\n    const replacements = (0, _options.normalizeReplacements)(arg);\n    if (!metadata) metadata = (0, _parse.default)(formatter, code, opts);\n    return formatter.unwrap((0, _populate.default)(metadata, replacements));\n  };\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.shouldHighlight = shouldHighlight;\nexports.getChalk = getChalk;\nexports.default = highlight;\n\nvar _jsTokens = _interopRequireWildcard(require(\"js-tokens\"));\n\nvar _helperValidatorIdentifier = require(\"@babel/helper-validator-identifier\");\n\nvar _chalk = _interopRequireDefault(require(\"chalk\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction getDefs(chalk) {\n  return {\n    keyword: chalk.cyan,\n    capitalized: chalk.yellow,\n    jsx_tag: chalk.yellow,\n    punctuator: chalk.yellow,\n    number: chalk.magenta,\n    string: chalk.green,\n    regex: chalk.magenta,\n    comment: chalk.grey,\n    invalid: chalk.white.bgRed.bold\n  };\n}\n\nconst NEWLINE = /\\r\\n|[\\n\\r\\u2028\\u2029]/;\nconst JSX_TAG = /^[a-z][\\w-]*$/i;\nconst BRACKET = /^[()[\\]{}]$/;\n\nfunction getTokenType(match) {\n  const [offset, text] = match.slice(-2);\n  const token = (0, _jsTokens.matchToToken)(match);\n\n  if (token.type === \"name\") {\n    if ((0, _helperValidatorIdentifier.isKeyword)(token.value) || (0, _helperValidatorIdentifier.isReservedWord)(token.value)) {\n      return \"keyword\";\n    }\n\n    if (JSX_TAG.test(token.value) && (text[offset - 1] === \"<\" || text.substr(offset - 2, 2) == \"</\")) {\n      return \"jsx_tag\";\n    }\n\n    if (token.value[0] !== token.value[0].toLowerCase()) {\n      return \"capitalized\";\n    }\n  }\n\n  if (token.type === \"punctuator\" && BRACKET.test(token.value)) {\n    return \"bracket\";\n  }\n\n  if (token.type === \"invalid\" && (token.value === \"@\" || token.value === \"#\")) {\n    return \"punctuator\";\n  }\n\n  return token.type;\n}\n\nfunction highlightTokens(defs, text) {\n  return text.replace(_jsTokens.default, function (...args) {\n    const type = getTokenType(args);\n    const colorize = defs[type];\n\n    if (colorize) {\n      return args[0].split(NEWLINE).map(str => colorize(str)).join(\"\\n\");\n    } else {\n      return args[0];\n    }\n  });\n}\n\nfunction shouldHighlight(options) {\n  return _chalk.default.supportsColor || options.forceColor;\n}\n\nfunction getChalk(options) {\n  let chalk = _chalk.default;\n\n  if (options.forceColor) {\n    chalk = new _chalk.default.constructor({\n      enabled: true,\n      level: 1\n    });\n  }\n\n  return chalk;\n}\n\nfunction highlight(code, options = {}) {\n  if (shouldHighlight(options)) {\n    const chalk = getChalk(options);\n    const defs = getDefs(chalk);\n    return highlightTokens(defs, code);\n  } else {\n    return code;\n  }\n}","'use strict';\nconst escapeStringRegexp = require('escape-string-regexp');\nconst ansiStyles = require('ansi-styles');\nconst stdoutColor = require('supports-color').stdout;\n\nconst template = require('./templates.js');\n\nconst isSimpleWindowsTerm = process.platform === 'win32' && !(process.env.TERM || '').toLowerCase().startsWith('xterm');\n\n// `supportsColor.level` → `ansiStyles.color[name]` mapping\nconst levelMapping = ['ansi', 'ansi', 'ansi256', 'ansi16m'];\n\n// `color-convert` models to exclude from the Chalk API due to conflicts and such\nconst skipModels = new Set(['gray']);\n\nconst styles = Object.create(null);\n\nfunction applyOptions(obj, options) {\n\toptions = options || {};\n\n\t// Detect level if not set manually\n\tconst scLevel = stdoutColor ? stdoutColor.level : 0;\n\tobj.level = options.level === undefined ? scLevel : options.level;\n\tobj.enabled = 'enabled' in options ? options.enabled : obj.level > 0;\n}\n\nfunction Chalk(options) {\n\t// We check for this.template here since calling `chalk.constructor()`\n\t// by itself will have a `this` of a previously constructed chalk object\n\tif (!this || !(this instanceof Chalk) || this.template) {\n\t\tconst chalk = {};\n\t\tapplyOptions(chalk, options);\n\n\t\tchalk.template = function () {\n\t\t\tconst args = [].slice.call(arguments);\n\t\t\treturn chalkTag.apply(null, [chalk.template].concat(args));\n\t\t};\n\n\t\tObject.setPrototypeOf(chalk, Chalk.prototype);\n\t\tObject.setPrototypeOf(chalk.template, chalk);\n\n\t\tchalk.template.constructor = Chalk;\n\n\t\treturn chalk.template;\n\t}\n\n\tapplyOptions(this, options);\n}\n\n// Use bright blue on Windows as the normal blue color is illegible\nif (isSimpleWindowsTerm) {\n\tansiStyles.blue.open = '\\u001B[94m';\n}\n\nfor (const key of Object.keys(ansiStyles)) {\n\tansiStyles[key].closeRe = new RegExp(escapeStringRegexp(ansiStyles[key].close), 'g');\n\n\tstyles[key] = {\n\t\tget() {\n\t\t\tconst codes = ansiStyles[key];\n\t\t\treturn build.call(this, this._styles ? this._styles.concat(codes) : [codes], this._empty, key);\n\t\t}\n\t};\n}\n\nstyles.visible = {\n\tget() {\n\t\treturn build.call(this, this._styles || [], true, 'visible');\n\t}\n};\n\nansiStyles.color.closeRe = new RegExp(escapeStringRegexp(ansiStyles.color.close), 'g');\nfor (const model of Object.keys(ansiStyles.color.ansi)) {\n\tif (skipModels.has(model)) {\n\t\tcontinue;\n\t}\n\n\tstyles[model] = {\n\t\tget() {\n\t\t\tconst level = this.level;\n\t\t\treturn function () {\n\t\t\t\tconst open = ansiStyles.color[levelMapping[level]][model].apply(null, arguments);\n\t\t\t\tconst codes = {\n\t\t\t\t\topen,\n\t\t\t\t\tclose: ansiStyles.color.close,\n\t\t\t\t\tcloseRe: ansiStyles.color.closeRe\n\t\t\t\t};\n\t\t\t\treturn build.call(this, this._styles ? this._styles.concat(codes) : [codes], this._empty, model);\n\t\t\t};\n\t\t}\n\t};\n}\n\nansiStyles.bgColor.closeRe = new RegExp(escapeStringRegexp(ansiStyles.bgColor.close), 'g');\nfor (const model of Object.keys(ansiStyles.bgColor.ansi)) {\n\tif (skipModels.has(model)) {\n\t\tcontinue;\n\t}\n\n\tconst bgModel = 'bg' + model[0].toUpperCase() + model.slice(1);\n\tstyles[bgModel] = {\n\t\tget() {\n\t\t\tconst level = this.level;\n\t\t\treturn function () {\n\t\t\t\tconst open = ansiStyles.bgColor[levelMapping[level]][model].apply(null, arguments);\n\t\t\t\tconst codes = {\n\t\t\t\t\topen,\n\t\t\t\t\tclose: ansiStyles.bgColor.close,\n\t\t\t\t\tcloseRe: ansiStyles.bgColor.closeRe\n\t\t\t\t};\n\t\t\t\treturn build.call(this, this._styles ? this._styles.concat(codes) : [codes], this._empty, model);\n\t\t\t};\n\t\t}\n\t};\n}\n\nconst proto = Object.defineProperties(() => {}, styles);\n\nfunction build(_styles, _empty, key) {\n\tconst builder = function () {\n\t\treturn applyStyle.apply(builder, arguments);\n\t};\n\n\tbuilder._styles = _styles;\n\tbuilder._empty = _empty;\n\n\tconst self = this;\n\n\tObject.defineProperty(builder, 'level', {\n\t\tenumerable: true,\n\t\tget() {\n\t\t\treturn self.level;\n\t\t},\n\t\tset(level) {\n\t\t\tself.level = level;\n\t\t}\n\t});\n\n\tObject.defineProperty(builder, 'enabled', {\n\t\tenumerable: true,\n\t\tget() {\n\t\t\treturn self.enabled;\n\t\t},\n\t\tset(enabled) {\n\t\t\tself.enabled = enabled;\n\t\t}\n\t});\n\n\t// See below for fix regarding invisible grey/dim combination on Windows\n\tbuilder.hasGrey = this.hasGrey || key === 'gray' || key === 'grey';\n\n\t// `__proto__` is used because we must return a function, but there is\n\t// no way to create a function with a different prototype\n\tbuilder.__proto__ = proto; // eslint-disable-line no-proto\n\n\treturn builder;\n}\n\nfunction applyStyle() {\n\t// Support varags, but simply cast to string in case there's only one arg\n\tconst args = arguments;\n\tconst argsLen = args.length;\n\tlet str = String(arguments[0]);\n\n\tif (argsLen === 0) {\n\t\treturn '';\n\t}\n\n\tif (argsLen > 1) {\n\t\t// Don't slice `arguments`, it prevents V8 optimizations\n\t\tfor (let a = 1; a < argsLen; a++) {\n\t\t\tstr += ' ' + args[a];\n\t\t}\n\t}\n\n\tif (!this.enabled || this.level <= 0 || !str) {\n\t\treturn this._empty ? '' : str;\n\t}\n\n\t// Turns out that on Windows dimmed gray text becomes invisible in cmd.exe,\n\t// see https://github.com/chalk/chalk/issues/58\n\t// If we're on Windows and we're dealing with a gray color, temporarily make 'dim' a noop.\n\tconst originalDim = ansiStyles.dim.open;\n\tif (isSimpleWindowsTerm && this.hasGrey) {\n\t\tansiStyles.dim.open = '';\n\t}\n\n\tfor (const code of this._styles.slice().reverse()) {\n\t\t// Replace any instances already present with a re-opening code\n\t\t// otherwise only the part of the string until said closing code\n\t\t// will be colored, and the rest will simply be 'plain'.\n\t\tstr = code.open + str.replace(code.closeRe, code.open) + code.close;\n\n\t\t// Close the styling before a linebreak and reopen\n\t\t// after next line to fix a bleed issue on macOS\n\t\t// https://github.com/chalk/chalk/pull/92\n\t\tstr = str.replace(/\\r?\\n/g, `${code.close}$&${code.open}`);\n\t}\n\n\t// Reset the original `dim` if we changed it to work around the Windows dimmed gray issue\n\tansiStyles.dim.open = originalDim;\n\n\treturn str;\n}\n\nfunction chalkTag(chalk, strings) {\n\tif (!Array.isArray(strings)) {\n\t\t// If chalk() was called by itself or with a string,\n\t\t// return the string itself as a string.\n\t\treturn [].slice.call(arguments, 1).join(' ');\n\t}\n\n\tconst args = [].slice.call(arguments, 2);\n\tconst parts = [strings.raw[0]];\n\n\tfor (let i = 1; i < strings.length; i++) {\n\t\tparts.push(String(args[i - 1]).replace(/[{}\\\\]/g, '\\\\$&'));\n\t\tparts.push(String(strings.raw[i]));\n\t}\n\n\treturn template(chalk, parts.join(''));\n}\n\nObject.defineProperties(Chalk.prototype, styles);\n\nmodule.exports = Chalk(); // eslint-disable-line new-cap\nmodule.exports.supportsColor = stdoutColor;\nmodule.exports.default = module.exports; // For TypeScript\n","'use strict';\nconst colorConvert = require('color-convert');\n\nconst wrapAnsi16 = (fn, offset) => function () {\n\tconst code = fn.apply(colorConvert, arguments);\n\treturn `\\u001B[${code + offset}m`;\n};\n\nconst wrapAnsi256 = (fn, offset) => function () {\n\tconst code = fn.apply(colorConvert, arguments);\n\treturn `\\u001B[${38 + offset};5;${code}m`;\n};\n\nconst wrapAnsi16m = (fn, offset) => function () {\n\tconst rgb = fn.apply(colorConvert, arguments);\n\treturn `\\u001B[${38 + offset};2;${rgb[0]};${rgb[1]};${rgb[2]}m`;\n};\n\nfunction assembleStyles() {\n\tconst codes = new Map();\n\tconst styles = {\n\t\tmodifier: {\n\t\t\treset: [0, 0],\n\t\t\t// 21 isn't widely supported and 22 does the same thing\n\t\t\tbold: [1, 22],\n\t\t\tdim: [2, 22],\n\t\t\titalic: [3, 23],\n\t\t\tunderline: [4, 24],\n\t\t\tinverse: [7, 27],\n\t\t\thidden: [8, 28],\n\t\t\tstrikethrough: [9, 29]\n\t\t},\n\t\tcolor: {\n\t\t\tblack: [30, 39],\n\t\t\tred: [31, 39],\n\t\t\tgreen: [32, 39],\n\t\t\tyellow: [33, 39],\n\t\t\tblue: [34, 39],\n\t\t\tmagenta: [35, 39],\n\t\t\tcyan: [36, 39],\n\t\t\twhite: [37, 39],\n\t\t\tgray: [90, 39],\n\n\t\t\t// Bright color\n\t\t\tredBright: [91, 39],\n\t\t\tgreenBright: [92, 39],\n\t\t\tyellowBright: [93, 39],\n\t\t\tblueBright: [94, 39],\n\t\t\tmagentaBright: [95, 39],\n\t\t\tcyanBright: [96, 39],\n\t\t\twhiteBright: [97, 39]\n\t\t},\n\t\tbgColor: {\n\t\t\tbgBlack: [40, 49],\n\t\t\tbgRed: [41, 49],\n\t\t\tbgGreen: [42, 49],\n\t\t\tbgYellow: [43, 49],\n\t\t\tbgBlue: [44, 49],\n\t\t\tbgMagenta: [45, 49],\n\t\t\tbgCyan: [46, 49],\n\t\t\tbgWhite: [47, 49],\n\n\t\t\t// Bright color\n\t\t\tbgBlackBright: [100, 49],\n\t\t\tbgRedBright: [101, 49],\n\t\t\tbgGreenBright: [102, 49],\n\t\t\tbgYellowBright: [103, 49],\n\t\t\tbgBlueBright: [104, 49],\n\t\t\tbgMagentaBright: [105, 49],\n\t\t\tbgCyanBright: [106, 49],\n\t\t\tbgWhiteBright: [107, 49]\n\t\t}\n\t};\n\n\t// Fix humans\n\tstyles.color.grey = styles.color.gray;\n\n\tfor (const groupName of Object.keys(styles)) {\n\t\tconst group = styles[groupName];\n\n\t\tfor (const styleName of Object.keys(group)) {\n\t\t\tconst style = group[styleName];\n\n\t\t\tstyles[styleName] = {\n\t\t\t\topen: `\\u001B[${style[0]}m`,\n\t\t\t\tclose: `\\u001B[${style[1]}m`\n\t\t\t};\n\n\t\t\tgroup[styleName] = styles[styleName];\n\n\t\t\tcodes.set(style[0], style[1]);\n\t\t}\n\n\t\tObject.defineProperty(styles, groupName, {\n\t\t\tvalue: group,\n\t\t\tenumerable: false\n\t\t});\n\n\t\tObject.defineProperty(styles, 'codes', {\n\t\t\tvalue: codes,\n\t\t\tenumerable: false\n\t\t});\n\t}\n\n\tconst ansi2ansi = n => n;\n\tconst rgb2rgb = (r, g, b) => [r, g, b];\n\n\tstyles.color.close = '\\u001B[39m';\n\tstyles.bgColor.close = '\\u001B[49m';\n\n\tstyles.color.ansi = {\n\t\tansi: wrapAnsi16(ansi2ansi, 0)\n\t};\n\tstyles.color.ansi256 = {\n\t\tansi256: wrapAnsi256(ansi2ansi, 0)\n\t};\n\tstyles.color.ansi16m = {\n\t\trgb: wrapAnsi16m(rgb2rgb, 0)\n\t};\n\n\tstyles.bgColor.ansi = {\n\t\tansi: wrapAnsi16(ansi2ansi, 10)\n\t};\n\tstyles.bgColor.ansi256 = {\n\t\tansi256: wrapAnsi256(ansi2ansi, 10)\n\t};\n\tstyles.bgColor.ansi16m = {\n\t\trgb: wrapAnsi16m(rgb2rgb, 10)\n\t};\n\n\tfor (let key of Object.keys(colorConvert)) {\n\t\tif (typeof colorConvert[key] !== 'object') {\n\t\t\tcontinue;\n\t\t}\n\n\t\tconst suite = colorConvert[key];\n\n\t\tif (key === 'ansi16') {\n\t\t\tkey = 'ansi';\n\t\t}\n\n\t\tif ('ansi16' in suite) {\n\t\t\tstyles.color.ansi[key] = wrapAnsi16(suite.ansi16, 0);\n\t\t\tstyles.bgColor.ansi[key] = wrapAnsi16(suite.ansi16, 10);\n\t\t}\n\n\t\tif ('ansi256' in suite) {\n\t\t\tstyles.color.ansi256[key] = wrapAnsi256(suite.ansi256, 0);\n\t\t\tstyles.bgColor.ansi256[key] = wrapAnsi256(suite.ansi256, 10);\n\t\t}\n\n\t\tif ('rgb' in suite) {\n\t\t\tstyles.color.ansi16m[key] = wrapAnsi16m(suite.rgb, 0);\n\t\t\tstyles.bgColor.ansi16m[key] = wrapAnsi16m(suite.rgb, 10);\n\t\t}\n\t}\n\n\treturn styles;\n}\n\n// Make the export immutable\nObject.defineProperty(module, 'exports', {\n\tenumerable: true,\n\tget: assembleStyles\n});\n","var conversions = require('./conversions');\nvar route = require('./route');\n\nvar convert = {};\n\nvar models = Object.keys(conversions);\n\nfunction wrapRaw(fn) {\n\tvar wrappedFn = function (args) {\n\t\tif (args === undefined || args === null) {\n\t\t\treturn args;\n\t\t}\n\n\t\tif (arguments.length > 1) {\n\t\t\targs = Array.prototype.slice.call(arguments);\n\t\t}\n\n\t\treturn fn(args);\n\t};\n\n\t// preserve .conversion property if there is one\n\tif ('conversion' in fn) {\n\t\twrappedFn.conversion = fn.conversion;\n\t}\n\n\treturn wrappedFn;\n}\n\nfunction wrapRounded(fn) {\n\tvar wrappedFn = function (args) {\n\t\tif (args === undefined || args === null) {\n\t\t\treturn args;\n\t\t}\n\n\t\tif (arguments.length > 1) {\n\t\t\targs = Array.prototype.slice.call(arguments);\n\t\t}\n\n\t\tvar result = fn(args);\n\n\t\t// we're assuming the result is an array here.\n\t\t// see notice in conversions.js; don't use box types\n\t\t// in conversion functions.\n\t\tif (typeof result === 'object') {\n\t\t\tfor (var len = result.length, i = 0; i < len; i++) {\n\t\t\t\tresult[i] = Math.round(result[i]);\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t};\n\n\t// preserve .conversion property if there is one\n\tif ('conversion' in fn) {\n\t\twrappedFn.conversion = fn.conversion;\n\t}\n\n\treturn wrappedFn;\n}\n\nmodels.forEach(function (fromModel) {\n\tconvert[fromModel] = {};\n\n\tObject.defineProperty(convert[fromModel], 'channels', {value: conversions[fromModel].channels});\n\tObject.defineProperty(convert[fromModel], 'labels', {value: conversions[fromModel].labels});\n\n\tvar routes = route(fromModel);\n\tvar routeModels = Object.keys(routes);\n\n\trouteModels.forEach(function (toModel) {\n\t\tvar fn = routes[toModel];\n\n\t\tconvert[fromModel][toModel] = wrapRounded(fn);\n\t\tconvert[fromModel][toModel].raw = wrapRaw(fn);\n\t});\n});\n\nmodule.exports = convert;\n","'use strict'\r\n\r\nmodule.exports = {\r\n\t\"aliceblue\": [240, 248, 255],\r\n\t\"antiquewhite\": [250, 235, 215],\r\n\t\"aqua\": [0, 255, 255],\r\n\t\"aquamarine\": [127, 255, 212],\r\n\t\"azure\": [240, 255, 255],\r\n\t\"beige\": [245, 245, 220],\r\n\t\"bisque\": [255, 228, 196],\r\n\t\"black\": [0, 0, 0],\r\n\t\"blanchedalmond\": [255, 235, 205],\r\n\t\"blue\": [0, 0, 255],\r\n\t\"blueviolet\": [138, 43, 226],\r\n\t\"brown\": [165, 42, 42],\r\n\t\"burlywood\": [222, 184, 135],\r\n\t\"cadetblue\": [95, 158, 160],\r\n\t\"chartreuse\": [127, 255, 0],\r\n\t\"chocolate\": [210, 105, 30],\r\n\t\"coral\": [255, 127, 80],\r\n\t\"cornflowerblue\": [100, 149, 237],\r\n\t\"cornsilk\": [255, 248, 220],\r\n\t\"crimson\": [220, 20, 60],\r\n\t\"cyan\": [0, 255, 255],\r\n\t\"darkblue\": [0, 0, 139],\r\n\t\"darkcyan\": [0, 139, 139],\r\n\t\"darkgoldenrod\": [184, 134, 11],\r\n\t\"darkgray\": [169, 169, 169],\r\n\t\"darkgreen\": [0, 100, 0],\r\n\t\"darkgrey\": [169, 169, 169],\r\n\t\"darkkhaki\": [189, 183, 107],\r\n\t\"darkmagenta\": [139, 0, 139],\r\n\t\"darkolivegreen\": [85, 107, 47],\r\n\t\"darkorange\": [255, 140, 0],\r\n\t\"darkorchid\": [153, 50, 204],\r\n\t\"darkred\": [139, 0, 0],\r\n\t\"darksalmon\": [233, 150, 122],\r\n\t\"darkseagreen\": [143, 188, 143],\r\n\t\"darkslateblue\": [72, 61, 139],\r\n\t\"darkslategray\": [47, 79, 79],\r\n\t\"darkslategrey\": [47, 79, 79],\r\n\t\"darkturquoise\": [0, 206, 209],\r\n\t\"darkviolet\": [148, 0, 211],\r\n\t\"deeppink\": [255, 20, 147],\r\n\t\"deepskyblue\": [0, 191, 255],\r\n\t\"dimgray\": [105, 105, 105],\r\n\t\"dimgrey\": [105, 105, 105],\r\n\t\"dodgerblue\": [30, 144, 255],\r\n\t\"firebrick\": [178, 34, 34],\r\n\t\"floralwhite\": [255, 250, 240],\r\n\t\"forestgreen\": [34, 139, 34],\r\n\t\"fuchsia\": [255, 0, 255],\r\n\t\"gainsboro\": [220, 220, 220],\r\n\t\"ghostwhite\": [248, 248, 255],\r\n\t\"gold\": [255, 215, 0],\r\n\t\"goldenrod\": [218, 165, 32],\r\n\t\"gray\": [128, 128, 128],\r\n\t\"green\": [0, 128, 0],\r\n\t\"greenyellow\": [173, 255, 47],\r\n\t\"grey\": [128, 128, 128],\r\n\t\"honeydew\": [240, 255, 240],\r\n\t\"hotpink\": [255, 105, 180],\r\n\t\"indianred\": [205, 92, 92],\r\n\t\"indigo\": [75, 0, 130],\r\n\t\"ivory\": [255, 255, 240],\r\n\t\"khaki\": [240, 230, 140],\r\n\t\"lavender\": [230, 230, 250],\r\n\t\"lavenderblush\": [255, 240, 245],\r\n\t\"lawngreen\": [124, 252, 0],\r\n\t\"lemonchiffon\": [255, 250, 205],\r\n\t\"lightblue\": [173, 216, 230],\r\n\t\"lightcoral\": [240, 128, 128],\r\n\t\"lightcyan\": [224, 255, 255],\r\n\t\"lightgoldenrodyellow\": [250, 250, 210],\r\n\t\"lightgray\": [211, 211, 211],\r\n\t\"lightgreen\": [144, 238, 144],\r\n\t\"lightgrey\": [211, 211, 211],\r\n\t\"lightpink\": [255, 182, 193],\r\n\t\"lightsalmon\": [255, 160, 122],\r\n\t\"lightseagreen\": [32, 178, 170],\r\n\t\"lightskyblue\": [135, 206, 250],\r\n\t\"lightslategray\": [119, 136, 153],\r\n\t\"lightslategrey\": [119, 136, 153],\r\n\t\"lightsteelblue\": [176, 196, 222],\r\n\t\"lightyellow\": [255, 255, 224],\r\n\t\"lime\": [0, 255, 0],\r\n\t\"limegreen\": [50, 205, 50],\r\n\t\"linen\": [250, 240, 230],\r\n\t\"magenta\": [255, 0, 255],\r\n\t\"maroon\": [128, 0, 0],\r\n\t\"mediumaquamarine\": [102, 205, 170],\r\n\t\"mediumblue\": [0, 0, 205],\r\n\t\"mediumorchid\": [186, 85, 211],\r\n\t\"mediumpurple\": [147, 112, 219],\r\n\t\"mediumseagreen\": [60, 179, 113],\r\n\t\"mediumslateblue\": [123, 104, 238],\r\n\t\"mediumspringgreen\": [0, 250, 154],\r\n\t\"mediumturquoise\": [72, 209, 204],\r\n\t\"mediumvioletred\": [199, 21, 133],\r\n\t\"midnightblue\": [25, 25, 112],\r\n\t\"mintcream\": [245, 255, 250],\r\n\t\"mistyrose\": [255, 228, 225],\r\n\t\"moccasin\": [255, 228, 181],\r\n\t\"navajowhite\": [255, 222, 173],\r\n\t\"navy\": [0, 0, 128],\r\n\t\"oldlace\": [253, 245, 230],\r\n\t\"olive\": [128, 128, 0],\r\n\t\"olivedrab\": [107, 142, 35],\r\n\t\"orange\": [255, 165, 0],\r\n\t\"orangered\": [255, 69, 0],\r\n\t\"orchid\": [218, 112, 214],\r\n\t\"palegoldenrod\": [238, 232, 170],\r\n\t\"palegreen\": [152, 251, 152],\r\n\t\"paleturquoise\": [175, 238, 238],\r\n\t\"palevioletred\": [219, 112, 147],\r\n\t\"papayawhip\": [255, 239, 213],\r\n\t\"peachpuff\": [255, 218, 185],\r\n\t\"peru\": [205, 133, 63],\r\n\t\"pink\": [255, 192, 203],\r\n\t\"plum\": [221, 160, 221],\r\n\t\"powderblue\": [176, 224, 230],\r\n\t\"purple\": [128, 0, 128],\r\n\t\"rebeccapurple\": [102, 51, 153],\r\n\t\"red\": [255, 0, 0],\r\n\t\"rosybrown\": [188, 143, 143],\r\n\t\"royalblue\": [65, 105, 225],\r\n\t\"saddlebrown\": [139, 69, 19],\r\n\t\"salmon\": [250, 128, 114],\r\n\t\"sandybrown\": [244, 164, 96],\r\n\t\"seagreen\": [46, 139, 87],\r\n\t\"seashell\": [255, 245, 238],\r\n\t\"sienna\": [160, 82, 45],\r\n\t\"silver\": [192, 192, 192],\r\n\t\"skyblue\": [135, 206, 235],\r\n\t\"slateblue\": [106, 90, 205],\r\n\t\"slategray\": [112, 128, 144],\r\n\t\"slategrey\": [112, 128, 144],\r\n\t\"snow\": [255, 250, 250],\r\n\t\"springgreen\": [0, 255, 127],\r\n\t\"steelblue\": [70, 130, 180],\r\n\t\"tan\": [210, 180, 140],\r\n\t\"teal\": [0, 128, 128],\r\n\t\"thistle\": [216, 191, 216],\r\n\t\"tomato\": [255, 99, 71],\r\n\t\"turquoise\": [64, 224, 208],\r\n\t\"violet\": [238, 130, 238],\r\n\t\"wheat\": [245, 222, 179],\r\n\t\"white\": [255, 255, 255],\r\n\t\"whitesmoke\": [245, 245, 245],\r\n\t\"yellow\": [255, 255, 0],\r\n\t\"yellowgreen\": [154, 205, 50]\r\n};\r\n","var conversions = require('./conversions');\n\n/*\n\tthis function routes a model to all other models.\n\n\tall functions that are routed have a property `.conversion` attached\n\tto the returned synthetic function. This property is an array\n\tof strings, each with the steps in between the 'from' and 'to'\n\tcolor models (inclusive).\n\n\tconversions that are not possible simply are not included.\n*/\n\nfunction buildGraph() {\n\tvar graph = {};\n\t// https://jsperf.com/object-keys-vs-for-in-with-closure/3\n\tvar models = Object.keys(conversions);\n\n\tfor (var len = models.length, i = 0; i < len; i++) {\n\t\tgraph[models[i]] = {\n\t\t\t// http://jsperf.com/1-vs-infinity\n\t\t\t// micro-opt, but this is simple.\n\t\t\tdistance: -1,\n\t\t\tparent: null\n\t\t};\n\t}\n\n\treturn graph;\n}\n\n// https://en.wikipedia.org/wiki/Breadth-first_search\nfunction deriveBFS(fromModel) {\n\tvar graph = buildGraph();\n\tvar queue = [fromModel]; // unshift -> queue -> pop\n\n\tgraph[fromModel].distance = 0;\n\n\twhile (queue.length) {\n\t\tvar current = queue.pop();\n\t\tvar adjacents = Object.keys(conversions[current]);\n\n\t\tfor (var len = adjacents.length, i = 0; i < len; i++) {\n\t\t\tvar adjacent = adjacents[i];\n\t\t\tvar node = graph[adjacent];\n\n\t\t\tif (node.distance === -1) {\n\t\t\t\tnode.distance = graph[current].distance + 1;\n\t\t\t\tnode.parent = current;\n\t\t\t\tqueue.unshift(adjacent);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn graph;\n}\n\nfunction link(from, to) {\n\treturn function (args) {\n\t\treturn to(from(args));\n\t};\n}\n\nfunction wrapConversion(toModel, graph) {\n\tvar path = [graph[toModel].parent, toModel];\n\tvar fn = conversions[graph[toModel].parent][toModel];\n\n\tvar cur = graph[toModel].parent;\n\twhile (graph[cur].parent) {\n\t\tpath.unshift(graph[cur].parent);\n\t\tfn = link(conversions[graph[cur].parent][cur], fn);\n\t\tcur = graph[cur].parent;\n\t}\n\n\tfn.conversion = path;\n\treturn fn;\n}\n\nmodule.exports = function (fromModel) {\n\tvar graph = deriveBFS(fromModel);\n\tvar conversion = {};\n\n\tvar models = Object.keys(graph);\n\tfor (var len = models.length, i = 0; i < len; i++) {\n\t\tvar toModel = models[i];\n\t\tvar node = graph[toModel];\n\n\t\tif (node.parent === null) {\n\t\t\t// no possible conversion, or this node is the source model.\n\t\t\tcontinue;\n\t\t}\n\n\t\tconversion[toModel] = wrapConversion(toModel, graph);\n\t}\n\n\treturn conversion;\n};\n\n","'use strict';\nmodule.exports = {\n\tstdout: false,\n\tstderr: false\n};\n","'use strict';\nconst TEMPLATE_REGEX = /(?:\\\\(u[a-f\\d]{4}|x[a-f\\d]{2}|.))|(?:\\{(~)?(\\w+(?:\\([^)]*\\))?(?:\\.\\w+(?:\\([^)]*\\))?)*)(?:[ \\t]|(?=\\r?\\n)))|(\\})|((?:.|[\\r\\n\\f])+?)/gi;\nconst STYLE_REGEX = /(?:^|\\.)(\\w+)(?:\\(([^)]*)\\))?/g;\nconst STRING_REGEX = /^(['\"])((?:\\\\.|(?!\\1)[^\\\\])*)\\1$/;\nconst ESCAPE_REGEX = /\\\\(u[a-f\\d]{4}|x[a-f\\d]{2}|.)|([^\\\\])/gi;\n\nconst ESCAPES = new Map([\n\t['n', '\\n'],\n\t['r', '\\r'],\n\t['t', '\\t'],\n\t['b', '\\b'],\n\t['f', '\\f'],\n\t['v', '\\v'],\n\t['0', '\\0'],\n\t['\\\\', '\\\\'],\n\t['e', '\\u001B'],\n\t['a', '\\u0007']\n]);\n\nfunction unescape(c) {\n\tif ((c[0] === 'u' && c.length === 5) || (c[0] === 'x' && c.length === 3)) {\n\t\treturn String.fromCharCode(parseInt(c.slice(1), 16));\n\t}\n\n\treturn ESCAPES.get(c) || c;\n}\n\nfunction parseArguments(name, args) {\n\tconst results = [];\n\tconst chunks = args.trim().split(/\\s*,\\s*/g);\n\tlet matches;\n\n\tfor (const chunk of chunks) {\n\t\tif (!isNaN(chunk)) {\n\t\t\tresults.push(Number(chunk));\n\t\t} else if ((matches = chunk.match(STRING_REGEX))) {\n\t\t\tresults.push(matches[2].replace(ESCAPE_REGEX, (m, escape, chr) => escape ? unescape(escape) : chr));\n\t\t} else {\n\t\t\tthrow new Error(`Invalid Chalk template style argument: ${chunk} (in style '${name}')`);\n\t\t}\n\t}\n\n\treturn results;\n}\n\nfunction parseStyle(style) {\n\tSTYLE_REGEX.lastIndex = 0;\n\n\tconst results = [];\n\tlet matches;\n\n\twhile ((matches = STYLE_REGEX.exec(style)) !== null) {\n\t\tconst name = matches[1];\n\n\t\tif (matches[2]) {\n\t\t\tconst args = parseArguments(name, matches[2]);\n\t\t\tresults.push([name].concat(args));\n\t\t} else {\n\t\t\tresults.push([name]);\n\t\t}\n\t}\n\n\treturn results;\n}\n\nfunction buildStyle(chalk, styles) {\n\tconst enabled = {};\n\n\tfor (const layer of styles) {\n\t\tfor (const style of layer.styles) {\n\t\t\tenabled[style[0]] = layer.inverse ? null : style.slice(1);\n\t\t}\n\t}\n\n\tlet current = chalk;\n\tfor (const styleName of Object.keys(enabled)) {\n\t\tif (Array.isArray(enabled[styleName])) {\n\t\t\tif (!(styleName in current)) {\n\t\t\t\tthrow new Error(`Unknown Chalk style: ${styleName}`);\n\t\t\t}\n\n\t\t\tif (enabled[styleName].length > 0) {\n\t\t\t\tcurrent = current[styleName].apply(current, enabled[styleName]);\n\t\t\t} else {\n\t\t\t\tcurrent = current[styleName];\n\t\t\t}\n\t\t}\n\t}\n\n\treturn current;\n}\n\nmodule.exports = (chalk, tmp) => {\n\tconst styles = [];\n\tconst chunks = [];\n\tlet chunk = [];\n\n\t// eslint-disable-next-line max-params\n\ttmp.replace(TEMPLATE_REGEX, (m, escapeChar, inverse, style, close, chr) => {\n\t\tif (escapeChar) {\n\t\t\tchunk.push(unescape(escapeChar));\n\t\t} else if (style) {\n\t\t\tconst str = chunk.join('');\n\t\t\tchunk = [];\n\t\t\tchunks.push(styles.length === 0 ? str : buildStyle(chalk, styles)(str));\n\t\t\tstyles.push({inverse, styles: parseStyle(style)});\n\t\t} else if (close) {\n\t\t\tif (styles.length === 0) {\n\t\t\t\tthrow new Error('Found extraneous } in Chalk template literal');\n\t\t\t}\n\n\t\t\tchunks.push(buildStyle(chalk, styles)(chunk.join('')));\n\t\t\tchunk = [];\n\t\t\tstyles.pop();\n\t\t} else {\n\t\t\tchunk.push(chr);\n\t\t}\n\t});\n\n\tchunks.push(chunk.join(''));\n\n\tif (styles.length > 0) {\n\t\tconst errMsg = `Chalk template literal is missing ${styles.length} closing bracket${styles.length === 1 ? '' : 's'} (\\`}\\`)`;\n\t\tthrow new Error(errMsg);\n\t}\n\n\treturn chunks.join('');\n};\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = literalTemplate;\n\nvar _options = require(\"./options\");\n\nvar _parse = _interopRequireDefault(require(\"./parse\"));\n\nvar _populate = _interopRequireDefault(require(\"./populate\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction literalTemplate(formatter, tpl, opts) {\n  const {\n    metadata,\n    names\n  } = buildLiteralData(formatter, tpl, opts);\n  return arg => {\n    const defaultReplacements = {};\n    arg.forEach((replacement, i) => {\n      defaultReplacements[names[i]] = replacement;\n    });\n    return arg => {\n      const replacements = (0, _options.normalizeReplacements)(arg);\n\n      if (replacements) {\n        Object.keys(replacements).forEach(key => {\n          if (Object.prototype.hasOwnProperty.call(defaultReplacements, key)) {\n            throw new Error(\"Unexpected replacement overlap.\");\n          }\n        });\n      }\n\n      return formatter.unwrap((0, _populate.default)(metadata, replacements ? Object.assign(replacements, defaultReplacements) : defaultReplacements));\n    };\n  };\n}\n\nfunction buildLiteralData(formatter, tpl, opts) {\n  let names;\n  let nameSet;\n  let metadata;\n  let prefix = \"\";\n\n  do {\n    prefix += \"$\";\n    const result = buildTemplateCode(tpl, prefix);\n    names = result.names;\n    nameSet = new Set(names);\n    metadata = (0, _parse.default)(formatter, formatter.code(result.code), {\n      parser: opts.parser,\n      placeholderWhitelist: new Set(result.names.concat(opts.placeholderWhitelist ? Array.from(opts.placeholderWhitelist) : [])),\n      placeholderPattern: opts.placeholderPattern,\n      preserveComments: opts.preserveComments,\n      syntacticPlaceholders: opts.syntacticPlaceholders\n    });\n  } while (metadata.placeholders.some(placeholder => placeholder.isDuplicate && nameSet.has(placeholder.name)));\n\n  return {\n    metadata,\n    names\n  };\n}\n\nfunction buildTemplateCode(tpl, prefix) {\n  const names = [];\n  let code = tpl[0];\n\n  for (let i = 1; i < tpl.length; i++) {\n    const value = `${prefix}${i - 1}`;\n    names.push(value);\n    code += value + tpl[i];\n  }\n\n  return {\n    names,\n    code\n  };\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports.program = exports.expression = exports.statements = exports.statement = exports.smart = void 0;\n\nvar formatters = _interopRequireWildcard(require(\"./formatters\"));\n\nvar _builder = _interopRequireDefault(require(\"./builder\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nconst smart = (0, _builder.default)(formatters.smart);\nexports.smart = smart;\nconst statement = (0, _builder.default)(formatters.statement);\nexports.statement = statement;\nconst statements = (0, _builder.default)(formatters.statements);\nexports.statements = statements;\nconst expression = (0, _builder.default)(formatters.expression);\nexports.expression = expression;\nconst program = (0, _builder.default)(formatters.program);\nexports.program = program;\n\nvar _default = Object.assign(smart.bind(undefined), {\n  smart,\n  statement,\n  statements,\n  expression,\n  program,\n  ast: smart.ast\n});\n\nexports.default = _default;"],"sourceRoot":""}