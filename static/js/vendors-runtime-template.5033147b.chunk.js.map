{"version":3,"sources":["../node_modules/@babel/template/lib/index.js","../node_modules/@babel/plugin-transform-classes/lib/transformClass.js","../node_modules/@babel/plugin-transform-classes/lib/inline-createSuper-helpers.js","../node_modules/@babel/parser/lib/index.js","../node_modules/@babel/code-frame/lib/index.js","../node_modules/@babel/template/lib/options.js","../node_modules/@babel/template/lib/parse.js","../node_modules/@babel/highlight/node_modules/color-convert/conversions.js","../node_modules/@babel/template/lib/populate.js","../node_modules/@babel/plugin-transform-classes/lib/index.js","../node_modules/@babel/template/lib/formatters.js","../node_modules/@babel/template/lib/builder.js","../node_modules/@babel/template/lib/string.js","../node_modules/@babel/highlight/lib/index.js","../node_modules/@babel/highlight/node_modules/chalk/index.js","../node_modules/@babel/highlight/node_modules/ansi-styles/index.js","../node_modules/@babel/highlight/node_modules/color-convert/index.js","../node_modules/@babel/highlight/node_modules/color-name/index.js","../node_modules/@babel/highlight/node_modules/color-convert/route.js","../node_modules/@babel/highlight/node_modules/supports-color/browser.js","../node_modules/@babel/highlight/node_modules/chalk/templates.js","../node_modules/@babel/template/lib/literal.js"],"names":["Object","defineProperty","exports","value","default","program","expression","statements","statement","smart","obj","formatters","__esModule","cache","_getRequireWildcardCache","has","get","newObj","hasPropertyDescriptor","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","_interopRequireWildcard","require","_builder","WeakMap","_default","assign","bind","undefined","ast","path","file","builtinClasses","isLoose","assumptions","classState","parent","scope","node","classId","classRef","superFnId","superName","superReturns","isDerived","extendsNative","construct","constructorBody","userConstructor","userConstructorPath","hasConstructor","staticPropBody","body","superThises","pushedConstructor","pushedInherits","protoAlias","methods","instance","hasComputed","list","map","Map","static","setState","newState","findThisesVisitor","_core","traverse","visitors","merge","_helperReplaceSupers","environmentVisitor","ThisExpression","push","buildBody","paths","equals","params","constructor","template","types","blockStatement","unshiftContainer","classMethod","identifier","maybeCreateConstructor","classBodyPaths","isClassProperty","buildCodeFrameError","decorators","isClassMethod","isConstructor","kind","methodPath","objectRef","superRef","constantSuper","refToPreserve","replace","ReturnStatement","getFunctionParent","isArrowFunctionExpression","pushConstructor","pushMethod","pushBody","thisRef","ref","generateDeclaredUidIdentifier","cloneNode","thisPath","parentPath","isMemberExpression","object","replaceWith","callExpression","addHelper","bareSupers","Set","Super","isCallExpression","callee","add","wrapReturn","guaranteedSuperBeforeFinish","size","bareSuper","wrapSuperCall","find","isLoop","isConditional","returnArg","thisExpr","logicalExpression","concat","bodyPaths","length","pop","isReturnStatement","pushContainer","returnStatement","returnPath","argument","verifyConstructor","inherits","pushDescriptors","pushInheritsToBody","props","placement","objectExpression","objectProperty","properties","args","arrayExpression","nullLiteral","lastNonNullIndex","i","isNullLiteral","slice","expressionStatement","bareSuperNode","superIsCallableConstructor","arguments","unshift","thisExpression","isSpreadElement","isIdentifier","name","memberExpression","_helperOptimiseCallExpression","isExpressionStatement","container","assignmentExpression","setClassMethods","generateUidIdentifier","classProto","protoDeclaration","variableDeclaration","variableDeclarator","insertProtoAliasOnce","methodName","computed","isLiteral","func","functionExpression","generator","async","toComputedKey","isStringLiteral","_helperFunctionName","id","expr","inheritsComments","processMethod","descriptor","descKey","isNumericLiteral","isBigIntLiteral","stringLiteral","String","fn","toExpression","method","directives","hasInstanceDescriptors","hasStaticDescriptors","pushConstructorToBody","_inlineCreateSuperHelpers","superClass","hasBinding","buildConstructor","closureParams","closureArgs","arg","_helperAnnotateAsPure","param","generateUidIdentifierBasedOnNode","setupClosureParamsArgs","noClassCalls","isStrict","isInStrictMode","constructorOnly","directive","directiveLiteral","arrowFunctionExpression","classTransformer","_interopRequireDefault","functionDeclaration","helperIDs","clone","_unused","helper","CREATE_SUPER","GET_PROTOTYPE_OF","POSSIBLE_CONSTRUCTOR_RETURN","registerDeclaration","beforeExpr","startsExpr","prefix","TokenType","label","conf","this","keyword","rightAssociative","isAssign","postfix","binop","updateContext","keywords","createKeyword","options","token","createBinop","num","bigint","decimal","regexp","string","eof","bracketL","bracketHashL","bracketBarL","bracketR","bracketBarR","braceL","braceBarL","braceHashL","braceR","braceBarR","parenL","parenR","comma","semi","colon","doubleColon","dot","question","questionDot","arrow","ellipsis","backQuote","dollarBraceL","at","hash","interpreterDirective","eq","incDec","bang","tilde","pipeline","nullishCoalescing","logicalOR","logicalAND","bitwiseOR","bitwiseXOR","bitwiseAND","equality","relational","bitShift","plusMin","modulo","star","slash","exponent","_break","_case","_catch","_continue","_debugger","_do","_else","_finally","_for","_function","_if","_return","_switch","_throw","_try","_var","_const","_while","_with","_new","_this","_super","_class","_extends","_export","_import","_null","_true","_false","_in","_instanceof","_typeof","_void","_delete","lineBreak","lineBreakG","RegExp","source","isNewLine","code","skipWhiteSpace","isWhitespace","Position","line","col","column","SourceLocation","start","end","filename","identifierName","last","stack","CommentsParser","comment","loc","state","trailingComments","leadingComments","elements","takeAllComments","lastElement","j","commentPreviousNode","splice","newTrailingComments","leadingComment","type","firstChild","lastChild","commentStack","lastInStack","adjustCommentsAfterTrailingComma","innerComments","firstTrailingCommentIndex","findIndex","sawUnambiguousESM","ambiguousScriptDifferentAst","plugins","plugin","hasPlugin","ErrorMessages","freeze","AccessorIsGenerator","ArgumentsInClass","AsyncFunctionInSingleStatementContext","AwaitBindingIdentifier","AwaitBindingIdentifierInStaticBlock","AwaitExpressionFormalParameter","AwaitNotInAsyncContext","AwaitNotInAsyncFunction","BadGetterArity","BadSetterArity","BadSetterRestParameter","ConstructorClassField","ConstructorClassPrivateField","ConstructorIsAccessor","ConstructorIsAsync","ConstructorIsGenerator","DeclarationMissingInitializer","DecoratorBeforeExport","DecoratorConstructor","DecoratorExportClass","DecoratorSemicolon","DecoratorStaticBlock","DeletePrivateField","DestructureNamedImport","DuplicateConstructor","DuplicateDefaultExport","DuplicateExport","DuplicateProto","DuplicateRegExpFlags","ElementAfterRest","EscapedCharNotAnIdentifier","ExportBindingIsString","ExportDefaultFromAsIdentifier","ForInOfLoopInitializer","ForOfLet","GeneratorInSingleStatementContext","IllegalBreakContinue","IllegalLanguageModeDirective","IllegalReturn","ImportBindingIsString","ImportCallArgumentTrailingComma","ImportCallArity","ImportCallNotNewExpression","ImportCallSpreadArgument","ImportMetaOutsideModule","ImportOutsideModule","InvalidBigIntLiteral","InvalidCodePoint","InvalidDecimal","InvalidDigit","InvalidEscapeSequence","InvalidEscapeSequenceTemplate","InvalidEscapedReservedWord","InvalidIdentifier","InvalidLhs","InvalidLhsBinding","InvalidNumber","InvalidOrMissingExponent","InvalidOrUnexpectedToken","InvalidParenthesizedAssignment","InvalidPrivateFieldResolution","InvalidPropertyBindingPattern","InvalidRecordProperty","InvalidRestAssignmentPattern","LabelRedeclaration","LetInLexicalBinding","LineTerminatorBeforeArrow","MalformedRegExpFlags","MissingClassName","MissingEqInAssignment","MissingSemicolon","MissingUnicodeEscape","MixingCoalesceWithLogical","ModuleAttributeDifferentFromType","ModuleAttributeInvalidValue","ModuleAttributesWithDuplicateKeys","ModuleExportNameHasLoneSurrogate","ModuleExportUndefined","MultipleDefaultsInSwitch","NewlineAfterThrow","NoCatchOrFinally","NumberIdentifier","NumericSeparatorInEscapeSequence","ObsoleteAwaitStar","OptionalChainingNoNew","OptionalChainingNoTemplate","ParamDupe","PatternHasAccessor","PatternHasMethod","PipelineBodyNoArrow","PipelineBodySequenceExpression","PipelineHeadSequenceExpression","PipelineTopicUnused","PrimaryTopicNotAllowed","PrimaryTopicRequiresSmartPipeline","PrivateInExpectedIn","PrivateNameRedeclaration","RecordExpressionBarIncorrectEndSyntaxType","RecordExpressionBarIncorrectStartSyntaxType","RecordExpressionHashIncorrectStartSyntaxType","RecordNoProto","RestTrailingComma","SloppyFunction","StaticPrototype","StrictDelete","StrictEvalArguments","StrictEvalArgumentsBinding","StrictFunction","StrictNumericEscape","StrictOctalLiteral","StrictWith","SuperNotAllowed","SuperPrivateField","TrailingDecorator","TupleExpressionBarIncorrectEndSyntaxType","TupleExpressionBarIncorrectStartSyntaxType","TupleExpressionHashIncorrectStartSyntaxType","UnexpectedArgumentPlaceholder","UnexpectedAwaitAfterPipelineBody","UnexpectedDigitAfterHash","UnexpectedImportExport","UnexpectedKeyword","UnexpectedLeadingDecorator","UnexpectedLexicalDeclaration","UnexpectedNewTarget","UnexpectedNumericSeparator","UnexpectedPrivateField","UnexpectedReservedWord","UnexpectedSuper","UnexpectedToken","UnexpectedTokenUnaryExponentiation","UnsupportedBind","UnsupportedDecoratorExport","UnsupportedDefaultExport","UnsupportedImport","UnsupportedMetaProperty","UnsupportedParameterDecorator","UnsupportedPropertyDecorator","UnsupportedSuper","UnterminatedComment","UnterminatedRegExp","UnterminatedString","UnterminatedTemplate","VarRedeclaration","YieldBindingIdentifier","YieldInParameter","ZeroDigitNumericSeparator","ParserError","pos","startLoc","lastTokStart","lastTokStartLoc","endLoc","lastTokEnd","lastTokEndLoc","input","offset","match","lineStart","lastIndex","exec","index","getLineInfo","errorTemplate","raiseWithData","getLocationForPosition","message","_","errorRecovery","errors","error","_raise","data","errorContext","err","SyntaxError","isLookahead","TokContext","isExpr","preserveSpace","override","types$1","braceStatement","braceExpression","recordExpression","templateQuasi","parenStatement","parenExpression","p","readTmplToken","functionStatement","context","out","curContext","exprAllowed","prevType","allowed","isIterator","braceIsBlock","statementParens","hasPrecedingLineBreak","b_stat","nonASCIIidentifierStartChars","nonASCIIidentifierChars","nonASCIIidentifierStart","nonASCIIidentifier","astralIdentifierStartCodes","astralIdentifierCodes","isInAstralSet","isIdentifierStart","test","fromCharCode","isIdentifierChar","reservedWords","keywords$1","reservedWordsStrictSet","reservedWordsStrictBindSet","isReservedWord","word","inModule","isStrictReservedWord","isStrictBindOnlyReservedWord","isStrictBindReservedWord","isKeyword","keywordRelationalOperator","SCOPE_CLASS","SCOPE_TS_MODULE","BIND_FLAGS_CLASS","BIND_FLAGS_TS_ENUM","BIND_FLAGS_TS_CONST_ENUM","BIND_FLAGS_TS_EXPORT_ONLY","BIND_FLAGS_FLOW_DECLARE_FN","BIND_TS_AMBIENT","BIND_NONE","Scope","flags","var","lexical","functions","ScopeHandler","raise","scopeStack","undefinedExports","undefinedPrivateNames","currentVarScope","currentThisScope","treatFunctionsAsVarInScope","currentScope","createScope","bindingType","checkRedeclarationInScope","maybeExportDefined","SCOPE_PROGRAM","delete","isRedeclaredInScope","indexOf","FlowScope","declareFunctions","FlowScopeHandler","includes","reservedTypes","FlowErrors","AmbiguousConditionalArrow","AmbiguousDeclareModuleKind","AssignReservedType","DeclareClassElement","DeclareClassFieldInitializer","DuplicateDeclareModuleExports","EnumBooleanMemberNotInitialized","EnumDuplicateMemberName","EnumInconsistentMemberValues","EnumInvalidExplicitType","EnumInvalidExplicitTypeUnknownSupplied","EnumInvalidMemberInitializerPrimaryType","EnumInvalidMemberInitializerSymbolType","EnumInvalidMemberInitializerUnknownType","EnumInvalidMemberName","EnumNumberMemberNotInitialized","EnumStringMemberInconsistentlyInitailized","GetterMayNotHaveThisParam","ImportTypeShorthandOnlyInPureImport","InexactInsideExact","InexactInsideNonObject","InexactVariance","InvalidNonTypeImportInDeclareModule","MissingTypeParamDefault","NestedDeclareModule","NestedFlowComment","OptionalBindingPattern","SetterMayNotHaveThisParam","SpreadVariance","ThisParamAnnotationRequired","ThisParamBannedInConstructor","ThisParamMayNotBeOptional","ThisParamMustBeFirst","ThisParamNoDefault","TypeBeforeInitializer","TypeCastInPattern","UnexpectedExplicitInexactInObject","UnexpectedReservedType","UnexpectedReservedUnderscore","UnexpectedSpaceBetweenModuloChecks","UnexpectedSpreadType","UnexpectedSubtractionOperand","UnexpectedTokenAfterTypeParameter","UnexpectedTypeParameterBeforeAsyncArrowFunction","UnsupportedDeclareExportKind","UnsupportedStatementInDeclareModule","UnterminatedFlowComment","hasTypeImportKind","importKind","isMaybeDefaultImport","exportSuggestions","const","let","interface","FLOW_PRAGMA_REGEX","entities","quot","amp","apos","lt","gt","nbsp","iexcl","cent","pound","curren","yen","brvbar","sect","uml","copy","ordf","laquo","not","shy","reg","macr","deg","plusmn","sup2","sup3","acute","micro","para","middot","cedil","sup1","ordm","raquo","frac14","frac12","frac34","iquest","Agrave","Aacute","Acirc","Atilde","Auml","Aring","AElig","Ccedil","Egrave","Eacute","Ecirc","Euml","Igrave","Iacute","Icirc","Iuml","ETH","Ntilde","Ograve","Oacute","Ocirc","Otilde","Ouml","times","Oslash","Ugrave","Uacute","Ucirc","Uuml","Yacute","THORN","szlig","agrave","aacute","acirc","atilde","auml","aring","aelig","ccedil","egrave","eacute","ecirc","euml","igrave","iacute","icirc","iuml","eth","ntilde","ograve","oacute","ocirc","otilde","ouml","divide","oslash","ugrave","uacute","ucirc","uuml","yacute","thorn","yuml","OElig","oelig","Scaron","scaron","Yuml","fnof","circ","Alpha","Beta","Gamma","Delta","Epsilon","Zeta","Eta","Theta","Iota","Kappa","Lambda","Mu","Nu","Xi","Omicron","Pi","Rho","Sigma","Tau","Upsilon","Phi","Chi","Psi","Omega","alpha","beta","gamma","delta","epsilon","zeta","eta","theta","iota","kappa","lambda","mu","nu","xi","omicron","pi","rho","sigmaf","sigma","tau","upsilon","phi","chi","psi","omega","thetasym","upsih","piv","ensp","emsp","thinsp","zwnj","zwj","lrm","rlm","ndash","mdash","lsquo","rsquo","sbquo","ldquo","rdquo","bdquo","dagger","Dagger","bull","hellip","permil","prime","Prime","lsaquo","rsaquo","oline","frasl","euro","image","weierp","real","trade","alefsym","larr","uarr","rarr","darr","harr","crarr","lArr","uArr","rArr","dArr","hArr","forall","part","exist","empty","nabla","isin","notin","ni","prod","sum","minus","lowast","radic","prop","infin","ang","and","or","cap","cup","int","there4","sim","cong","asymp","ne","equiv","le","ge","sub","sup","nsub","sube","supe","oplus","otimes","perp","sdot","lceil","rceil","lfloor","rfloor","lang","rang","loz","spades","clubs","hearts","diams","HEX_NUMBER","DECIMAL_NUMBER","JsxErrors","AttributeIsEmpty","MissingClosingTagElement","MissingClosingTagFragment","UnexpectedSequenceExpression","UnsupportedJsxValue","UnterminatedJsxContent","UnwrappedAdjacentJSXElements","isFragment","getQualifiedJSXName","namespace","property","Error","j_oTag","j_cTag","j_expr","jsxName","jsxText","jsxTagStart","jsxTagEnd","TypeScriptScope","enums","constEnums","classes","exportOnlyBindings","TypeScriptScopeHandler","isConst","wasConst","ProductionParameterHandler","stacks","currentFlags","functionFlags","isAsync","isGenerator","nonNull","x","assert","TSErrors","AbstractMethodHasImplementation","ClassMethodHasDeclare","ClassMethodHasReadonly","ConstructorHasTypeParameters","DeclareAccessor","DeclareClassFieldHasInitializer","DeclareFunctionHasImplementation","DuplicateAccessibilityModifier","DuplicateModifier","EmptyHeritageClauseType","EmptyTypeArguments","EmptyTypeParameters","ExpectedAmbientAfterExportDeclare","ImportAliasHasImportType","IndexSignatureHasAbstract","IndexSignatureHasAccessibility","IndexSignatureHasDeclare","IndexSignatureHasStatic","InvalidModifierOnTypeMember","InvalidTupleMemberLabel","MixedLabeledAndUnlabeledElements","NonAbstractClassHasAbstractMethod","NonClassMethodPropertyHasAbstractModifer","OptionalTypeBeforeRequired","PatternIsOptional","PrivateElementHasAbstract","PrivateElementHasAccessibility","ReadonlyForMethodSignature","TypeAnnotationAfterAssign","UnexpectedParameterModifier","UnexpectedReadonly","UnexpectedTypeAnnotation","UnexpectedTypeCastInParameter","UnsupportedImportTypeArgument","UnsupportedParameterPropertyKind","UnsupportedSignatureParameterKind","tsIsAccessModifier","modifier","placeholder","some","Array","isArray","getPluginOption","option","PIPELINE_PROPOSALS","RECORD_AND_TUPLE_SYNTAX_TYPES","mixinPlugins","estree","pattern","regex","e","estreeParseLiteral","bigInt","BigInt","parseLiteral","stmt","startNodeAt","extra","expressionValue","raw","finishNodeAt","isObjectProperty","checkDeclaration","_stmt$expression$extr","parenthesized","addExtra","directiveStatements","d","directiveToStmt","classBody","allowsDirectSuper","parseMethod","typeParameters","refExpressionErrors","estreeParseRegExpLiteral","estreeParseBigIntLiteral","estreeParseDecimalLiteral","convertPrivateNameToPrivateIdentifier","startPos","allowExpression","isMethod","allowDirectSuper","inClassScope","funcNode","startNode","finishNode","propertyNode","isPattern","isAccessor","shorthand","isLHS","toAssignable","optional","exported","specifiers","base","noCalls","optionalChainMember","substring","stop","chain","startNodeAtNode","jsx","chunkStart","ch","charCodeAt","finishToken","jsxReadEntity","jsxReadNewLine","normalizeCRLF","curLine","quote","entity","str","count","substr","fromCodePoint","parseInt","unexpected","next","jsxParseIdentifier","eat","jsxParseNamespacedName","newNode","jsxParseExpressionContainer","parseExprAtom","parseExpression","expect","jsxParseEmptyExpression","parseMaybeAssignAllowIn","jsxParseAttributeValue","jsxParseElementName","jsxParseOpeningElementAfterName","attributes","jsxParseAttribute","selfClosing","children","openingElement","jsxParseOpeningElementAt","closingElement","contents","jsxParseClosingElementAt","jsxParseElementAt","jsxParseSpreadChild","openingFragment","closingFragment","isRelational","jsxParseElement","inPropertyName","jsxReadToken","jsxReadWord","jsxReadString","flow","flowPragma","val","matches","tok","oldInType","inType","flowParseType","moduloLoc","moduloPos","checksLoc","expectContextual","predicate","flowParsePredicate","flowParseInterfaceish","parseIdentifier","typeNode","typeContainer","flowParseTypeParameterDeclaration","tmp","flowParseFunctionTypeParams","rest","flowParseTypeAndPredicateInitialiser","returnType","typeAnnotation","resetEndLocation","semicolon","declareName","insideModule","flowParseDeclareClass","flowParseDeclareFunction","flowParseDeclareVariable","eatContextual","flowParseDeclareModuleExports","flowParseDeclareModule","isContextual","flowParseDeclareTypeAlias","flowParseDeclareOpaqueType","flowParseDeclareInterface","flowParseDeclareExportDeclaration","flowParseTypeAnnotatableIdentifier","BIND_KIND_VALUE","enter","bodyNode","parseImport","flowParseDeclare","exit","hasModuleExport","forEach","bodyElement","declaration","isEsModuleType","isLet","suggestion","parseExport","exportKind","flowParseTypeAnnotation","flowParseTypeAlias","flowParseOpaqueType","isClass","flowParseRestrictedIdentifier","extends","implements","mixins","flowParseInterfaceExtends","flowParseObjectType","allowStatic","allowExact","allowSpread","allowProto","allowInexact","flowParseQualifiedTypeIdentifier","flowParseTypeParameterInstantiation","liberal","checkReservedType","right","flowParseTypeInitialiser","declare","supertype","impltype","requireDefault","nodeStart","variance","flowParseVariance","ident","bound","defaultRequired","typeParameter","flowParseTypeParameter","expectRelational","oldNoAnonFunctionType","noAnonFunctionType","flowParseTypeOrImplicitInstantiation","isStatic","lookahead","flowParseObjectPropertyKey","flowParseObjectTypeMethodish","flowParseFunctionTypeParam","valueNode","endDelim","exact","callProperties","indexers","internalSlots","inexact","protoStart","inexactStart","flowParseObjectTypeInternalSlot","flowParseObjectTypeIndexer","flowParseObjectTypeCallProperty","propOrInexact","flowParseObjectTypeProperty","flowObjectTypeSemicolon","proto","flowCheckGetterSetterParams","paramCount","node2","qualification","flowParsePrimaryType","first","lh","isThis","checkNotUnderscore","flowParseGenericType","isGroupedType","flowParseInterfaceType","flowIdentToTypeAnnotation","flowParseTupleType","reinterpretTypeAsFunctionTypeParam","flowParseTypeofType","canInsertSemicolon","elementType","flowParsePrefixType","flowParsePostfixType","flowParseAnonFunctionWithoutParens","flowParseIntersectionType","flowParseUnionType","allowPrimitiveOverride","allowExpressionBody","forwardNoArrowParamsConversionAt","topLevel","strict","flowParseInterface","shouldParseEnums","flowParseEnumDeclaration","isValidDirective","refNeedsArrowPos","result","tryParse","failState","originalNoArrowAt","noArrowAt","tryParseConditionalConsequent","consequent","failed","getArrowLikeExpressions","valid","invalid","alternate","parseMaybeAssign","noArrowParamsConversionAt","disallowInvalid","arrows","finishArrowValidation","list1","list2","partition","every","isAssignable","_node$extra","toAssignableList","trailingComma","SCOPE_FUNCTION","parse","typeCastNode","decl","declarationNode","parseExportSpecifiers","parseExportFrom","hasNamespace","isStatement","optionalId","member","parseClassMemberFromModifier","finishOp","current","isIteratorStart","isBinding","element","operator","typeCastToParameter","exprList","trailingCommaPos","isParenthesizedExpr","_expr$extra","close","canBePattern","isTuple","maybeInArrowParameters","toReferencedList","isThisParam","superTypeParameters","implemented","getObjectOrClassMethodParams","isPrivateNameAllowed","left","specifier","contextDescription","local","checkLVal","firstIdentLoc","firstIdent","parseModuleExportName","specifierTypeKind","isLookaheadContextual","as_ident","imported","__clone","nodeIsTypeImport","specifierIsTypeImport","checkReservedWord","allowModifiers","afterLeftParse","_jsx","_jsx2","_jsx3","abort","_arrowExpression$extr","arrowExpression","resetStartLocationFromNode","maybeUnwrapTypeCastExpression","aborted","thrown","allowDuplicates","isArrowFunction","canBeArrow","parseCallExpressionArguments","parseAsyncArrowWithTypeParameters","subscriptState","isLookaheadToken_lt","typeArguments","finishCallExpression","shouldParseTypes","flowParseTypeParameterInstantiationCallOrNew","targs","parseFunctionParams","parseArrow","parseArrowExpression","hasFlowComment","nextToken","fileNode","skipFlowComment","hasFlowCommentCompletion","shiftToFirstNonWhiteSpace","ch2","ch3","enumName","memberName","toUpperCase","suppliedType","explicitType","endOfInit","literal","parseBooleanLiteral","init","flowEnumMemberInit","expectedType","flowEnumErrorInvalidMemberInitializer","seenNames","members","booleanMembers","numberMembers","stringMembers","defaultedMembers","hasUnknownMembers","memberNode","flowEnumMemberRaw","flowEnumErrorInvalidMemberName","flowEnumErrorDuplicateMemberName","flowEnumCheckExplicitTypeMismatch","flowEnumErrorBooleanMemberNotInitialized","flowEnumErrorNumberMemberNotInitialized","initializedMembers","flowEnumErrorStringMemberInconsistentlyInitailized","flowEnumErrorInvalidExplicitType","nameLoc","flowEnumParseExplicitType","flowEnumMembers","flowEnumStringMembers","boolsLen","numsLen","strsLen","defaultedLen","flowEnumErrorInconsistentMemberValues","flowEnumBody","nextTokenStart","afterNext","typescript","isLiteralPropertyName","allowedModifiers","tsTryParse","tsNextTokenCanFollowModifier","modified","disallowedModifiers","tsParseModifier","accessibility","parseElement","tsIsListTerminator","tsParseDelimitedListWorker","expectSuccess","bracket","skipFirstToken","tsParseDelimitedList","qualifier","tsParseEntityName","tsParseTypeArguments","allowReservedWords","typeName","lhs","parameterName","tsParseTypeAnnotation","asserts","exprName","tsParseImportType","parseIdentifierName","constraint","tsEatThenParseType","tsParseTypeParameters","tsParseBracketedList","tsParseTypeParameter","tsParseTypeReference","returnToken","signature","returnTokenRequired","tsTryParseTypeParameters","parameters","tsParseBindingListForSignature","tsParseTypeOrTypePredicateAnnotation","parseBindingList","tsFillSignature","tsParseTypeMemberSemicolon","tsLookAhead","tsIsUnambiguouslyIndexSignature","tsTryParseTypeAnnotation","readonly","nodeAny","tsParseSignatureMember","createIdentifier","tsParsePropertyOrMethodSignature","tsParseModifiers","idx","tsTryParseIndexSignature","parsePropertyName","tsParseObjectTypeMembers","tsParseList","tsParseTypeMember","tsIsIdentifier","tsExpectThenParseType","tsParseMappedTypeParameter","nameType","tsParseType","tsTryParseType","elementTypes","tsParseTupleElementType","seenOptionalElement","labeledElements","elementNode","_labeledElements","isLabeled","labeledNode","optionalTypeNode","restNode","abstract","parseTemplate","thisKeyword","tsParseThisTypeNode","tsParseThisTypePredicate","keywordTypeFromName","lookaheadCharCode","tsParseLiteralTypeNode","parseMaybeUnary","tsParseThisTypeOrThisTypePredicate","tsParseTypeQuery","tsIsStartOfMappedType","tsParseMappedType","tsParseTypeLiteral","tsParseTupleType","tsParseParenthesizedType","tsParseTemplateLiteralType","tsParseNonArrayType","objectType","indexType","tsParseTypeOperatorOrHigher","tsCheckTypeAnnotationForReadOnly","kw","tsParseTypeOperator","tsParseInferType","tsParseArrayTypeOrHigher","parseConstituentType","hasLeadingOperator","tsParseUnionOrIntersectionType","tsParseIntersectionTypeOrHigher","tsIsUnambiguouslyStartOfFunctionType","braceStackCounter","tsSkipParameterStart","tsInType","t","tsParseTypePredicateAsserts","thisTypePredicate","typePredicateVariable","tsParseTypePredicatePrefix","containsEsc","eatColon","tsParseNonConditionalType","checkType","extendsType","trueType","falseType","tsIsStartOfFunctionType","tsParseFunctionOrConstructorType","isAbstractConstructorSignature","tsParseUnionTypeOrHigher","tsTryNextParseConstantContext","tsNextThenParseType","originalStart","delimitedList","tsParseExpressionWithTypeArguments","tsParseHeritageClause","cb","oldContext","tsDoThenParseType","initializer","BIND_TS_ENUM","tsParseEnumMember","parseBlockOrModuleBlockBody","nested","inner","tsParseModuleOrNamespaceDeclaration","prodParam","tsParseModuleBlock","global","isExport","moduleReference","tsParseModuleReference","tsIsExternalModuleReference","tsParseExternalModuleReference","f","res","nany","isLineTerminator","starttype","tsInDeclareContext","parseFunctionStatement","parseClass","tsParseEnumDeclaration","parseVarStatement","tsParseAmbientExternalModuleDeclaration","tsParseDeclaration","tsTryParseDeclare","mod","tsCheckLineTerminator","tsParseAbstractDeclaration","tsParseInterfaceDeclaration","tsParseTypeAliasDeclaration","hasFollowingLineBreak","oldMaybeInArrowParameters","tsTryParseAndCatch","tsTryParseTypeOrTypePredicateAnnotation","tsInNoContext","tsIsDeclarationStart","parseAccessModifier","parseMaybeDefault","parseAssignableListItemTypes","elt","pp","parameter","bodilessType","isDeclareContext","items","isInParens","tsCheckForInvalidTypeCasts","nonNullExpression","atPossibleAsyncArrow","asyncArrowFn","tsTryParseGenericAsyncArrowFunction","parseTaggedTemplateExpression","leftStartPos","leftStartLoc","minPrec","reScan_lt_gt","parseExprOp","checkKeywords","ahead","tsParseImportEqualsDeclaration","importNode","isAbstractClass","cls","callParseClassMember","inAbstractClass","methodOrProp","tsParseExpressionStatement","isDeclare","shouldParseExportDeclaration","tsTryParseExportDeclaration","resetStartLocation","definite","parseClassPropertyAnnotation","_typeCast","_typeCast2","_jsx4","_typeCast3","typeCast","_typeParameters","tsParseTypeAssertion","toAssignableParenthesizedExpression","_expr$extra2","readToken_lt_gt","baseCount","firstParam","oldIsDeclareContext","oldInAbstractClass","hasBody","v8intrinsic","v8IntrinsicStart","parseV8Intrinsic","placeholders","expectedNode","assertNoSpace","finishPlaceholder","isFinished","parsePlaceholder","parseStatement","takeDecorators","oldStrict","parseClassId","parseClassSuper","parseClassBody","expectPlugin","isUnparsedContextual","startsWith","nextTokenStartSince","filter","hasStarImport","maybeParseStarImportSpecifier","parseNamedImportSpecifiers","parseImportSource","mixinPluginNames","keys","defaultOptions","sourceType","sourceFilename","startLine","allowAwaitOutsideFunction","allowReturnOutsideFunction","allowImportExportEverywhere","allowSuperOutsideMethod","allowUndeclaredExports","strictMode","ranges","tokens","createParenthesizedExpressions","State","potentialArrowAt","inPipeline","topicContext","maxNumOfResolvableTopics","maxTopicIndex","soloAwait","inFSharpPipelineDirectBody","labels","decoratorStack","comments","strictErrors","exportedIdentifiers","tokensLength","curPosition","skipArrays","_isDigit","VALID_REGEX_FLAGS","forbiddenNumericSeparatorSiblings","decBinOct","hex","allowedNumericSeparatorSiblings","oct","bin","dec","Token","Tokenizer","checkKeywordEscapes","pushToken","old","curr","clear","skipSpace","getTokenFromCode","codePointAt","block","text","addComment","pushComment","startSkip","loop","skipBlockComment","skipLineComment","readToken_interpreter","nextPos","readNumber","readRegexp","width","next2","readToken_dot","readToken_question","readRadixNumber","readString","readToken_slash","readToken_mult_modulo","readToken_pipe_amp","readToken_caret","readToken_plus_min","readToken_eq_excl","readToken_numberSign","readWord","escaped","inClass","charAt","content","mods","char","charCode","radix","len","forceLen","allowNumSeparator","forbiddenSiblings","allowedSiblings","total","Infinity","prev","Number","isNaN","isBigInt","readInt","startsWithDot","isFloat","isDecimal","hasExponent","isOctal","hasLeadingZero","integer","recordStrictModeErrors","underscorePos","parseFloat","throwOnInvalid","codePos","readHexChar","readEscapedChar","containsInvalid","inTemplate","readCodePoint","octalStr","octal","n","escStart","identifierCheck","esc","readWord1","update","ClassScope","privateNames","loneAccessors","ClassScopeHandler","oldClassScope","from","classScope","redefined","CLASS_ELEMENT_KIND_GETTER","accessor","ExpressionScope","ArrowHeadParsingScope","iterator","ExpressionScopeHandler","isCertainlyParameterDeclaration","canBeArrowParameterDeclaration","recordDeclarationError","iterateErrors","clearDeclarationError","newExpressionScope","UtilParser","op","nameStart","nameEnd","allowAsi","messageOrType","missingPlugin","names","join","oldState","abortSignal","andThrow","shorthandAssign","doubleProto","isPrivateName","oldLabels","oldExportedIdentifiers","oldInModule","oldScope","getScopeHandler","oldProdParam","oldExpressionScope","expressionScope","paramFlags","ExpressionErrors","Node","parser","range","unwrapParenthesizedExpression","loopLabel","switchLabel","loneSurrogate","Parser","opts","getOptions","initializeScopes","pluginMap","pluginsMap","enterInitialScopes","parseTopLevel","parseProgram","interpreter","parseInterpreterDirective","parseBlockBody","isLetKeyword","nextCh","parseDecorators","parseStatementContent","parseBreakContinueStatement","parseDebuggerStatement","parseDoStatement","parseForStatement","parseIfStatement","parseReturnStatement","parseSwitchStatement","parseThrowStatement","parseTryStatement","parseWhileStatement","parseWithStatement","parseBlock","parseEmptyStatement","nextTokenCharCode","assertModuleNodeAllowed","isAsyncFunction","maybeName","parseLabeledStatement","parseExpressionStatement","allowExport","currentContextDecorators","decorator","parseDecorator","canHaveLeadingDecorator","expectOnePlugin","parseMaybeDecoratorArguments","parseExprSubscripts","isBreak","verifyBreakContinue","lab","withTopicForbiddingContext","parseHeaderExpression","awaitAt","isAwaitAllowed","parseFor","startsWithLet","parseVar","declarations","parseForIn","isForOf","description","checkExpressionErrors","declarationPosition","parseFunction","hasReturn","discriminant","cur","sawDefault","cases","isCase","parseBindingAtom","simple","handler","clause","parseCatchClauseParam","finalizer","statementStart","allowDirectives","createNewLexicalScope","afterBlockParse","hasStrictModeDirective","parsedNonDirective","stmtToDirective","setStrict","isForIn","await","isFor","isTypescript","parseVarId","parseMaybeAssignDisallowIn","isHangingStatement","requireId","initFunction","parseFunctionId","parseFunctionBodyAndFinish","registerFunctionStatementId","treatFunctionsAsVar","constructorAllowsSuper","hadConstructor","parseClassMember","pushClassMethod","parseClassProperty","parseClassStaticBlock","parseClassMemberWithIsStatic","publicMethod","privateMethod","publicProp","privateProp","publicMember","parseClassElementName","pushClassPrivateMethod","isNonstaticConstructor","isPrivate","isSimple","maybeQuestionTokenStart","parsePostMemberNameModifiers","pushClassPrivateProperty","pushClassProperty","checkGetterSetterParams","getPrivateNameSV","_member$decorators","parseClassPrivateProperty","declarePrivateName","CLASS_ELEMENT_KIND_SETTER","parseInitializer","hasDefault","maybeParseExportDefaultSpecifier","parseAfterDefault","hasStar","eatExportStar","maybeParseExportNamespaceSpecifier","parseAfterNamespace","isFromRequired","hasDeclaration","hasSpecifiers","maybeParseExportNamedSpecifiers","maybeParseExportDeclaration","checkExport","parseExportDefaultExpression","isExportDefaultSpecifier","parseExportDeclaration","FUNC_STATEMENT","l","hasFrom","nextAfterFrom","assertions","maybeParseImportAssertions","checkNames","isDefault","isFrom","checkDuplicateExports","_declaration$extra","exportedName","checkLocalExport","elem","nodes","surrogate","toString","parseNext","maybeParseDefaultImportSpecifier","maybeParseModuleAttributes","attrs","attrNames","keyName","parseAssertEntries","shouldParseDefaultImport","parseImportSpecifierLocal","parseImportSpecifier","isRecord","protoRef","isObjectMethod","used","disallowIn","disallowInAnd","parseExpressionBase","allowInAnd","expressions","ownExpressionErrors","hasYield","parseYield","parseMaybeConditional","parseExprOps","shouldExitDescending","parseConditional","prec","hasIn","checkPipelineAtInfixOperator","logical","coalesce","hasAwait","parseExprOpRightExpr","nextOp","withTopicPermittingContext","parseSmartPipelineBody","parseExprOpBaseRightExpr","withSoloAwaitPermittingContext","parseFSharpPipelineBody","sawUnary","isAwait","parseAwait","checkExponentialAfterUnary","parseModuleExpression","isDelete","hasPropertyAsPrivateName","parseUpdate","isAmbiguousAwait","raiseOverwrite","parseSubscripts","maybeAsyncArrow","parseSubscript","parseBind","parseCoverCallAndAsyncArrowHead","parseMember","parseMaybePrivateName","usePrivateName","parseNoCallExpr","shouldParseAsyncArrow","validateAsPattern","parseAsyncArrowFromCallExpression","toReferencedArguments","toReferencedListDeep","tag","quasi","possibleAsyncArrow","dynamicImport","allowPlaceholder","nodeForExtra","elts","oldInFSharpPipelineDirectBody","parseExprListItem","_call$extra","parseSuper","parseImportMetaProperty","parseAsyncArrowUnaryFunction","parseDo","parseParenAndDistinguishExpression","parseArrayLike","parseObjectLike","parseFunctionOrFunctionSent","parseNewOrNewTarget","primaryTopicReferenceIsAllowedInCurrentTopicContext","registerTopicReference","lookaheadCh","allowSuper","meta","parseMetaProperty","propertyName","spreadStart","optionalCommaStart","innerStartPos","innerStartLoc","spreadNodeStartPos","spreadNodeStartLoc","parseParenItem","parseRestBinding","checkCommaAfterRest","innerEndPos","innerEndLoc","arrowNode","shouldParseArrow","metaProp","inNonArrowFunction","parseNew","isOptionalChain","parseNewArguments","parseExprList","isTagged","cooked","tail","curElt","parseTemplateElement","quasis","parseTemplateSubstitution","propHash","create","parsePropertyDefinition","checkProto","parseSpread","maybeAsyncOrAccessorProp","parseObjPropValue","_params","getGetterSetterExpectedParamCount","parseObjectMethod","parseObjectProperty","oldInPropertyName","setArrowFunctionParameters","parseFunctionBody","isExpression","checkParams","nonSimple","isSimpleParamList","errorPos","strictModeChanged","checkClashes","allowEmpty","inStaticBlock","recordAsyncArrowParametersError","inFunction","recordParameterInitializerError","delegate","childExpression","checkSmartPipelineBodyEarlyErrors","parseSmartPipelineBodyInStyle","isSimpleReference","topicReferenceWasUsedInCurrentTopicContext","callback","outerContextTopicState","outerContextSoloAwaitState","ret","revertScopes","_node$extra3","recordParenthesizedIdentifierError","_node$extra2","isLast","toAssignableObjectExpressionProp","raiseRestNotLast","checkToRestConversion","raiseTrailingCommaAfterRest","closeCharCode","parseAssignableListItem","_startLoc","_startPos","_left","disallowLetBinding","processComment","locationNode","getParser","decoratorsBeforeExport","validatePlugins","pluginsFromOptions","pluginList","parserClassCache","getParserClass","_options","moduleError","_unused2","getExpression","tokTypes","codeFrameColumns","rawLines","lineNumber","colNumber","deprecationWarningShown","process","emitWarning","deprecationError","console","warn","location","Math","max","_highlight","getDefs","chalk","gutter","grey","marker","red","bold","NEWLINE","getMarkerLines","linesAbove","linesBelow","startColumn","endLine","endColumn","min","lineDiff","markerLines","sourceLength","highlighted","highlightCode","forceColor","shouldHighlight","getChalk","defs","maybeHighlight","chalkFn","lines","split","hasColumns","numberMaxWidth","highlightedLines","frame","number","paddedNumber","hasMarker","lastMarkerLine","markerLine","markerSpacing","numberOfMarkers","repeat","reset","a","b","placeholderWhitelist","placeholderPattern","preserveComments","syntacticPlaceholders","validate","_ref","excluded","target","sourceKeys","_objectWithoutPropertiesLoose","normalizeReplacements","replacements","reduce","acc","replacement","formatter","parserOpts","_parser","_codeFrame","parseWithCodeFrame","removePropertiesDeep","syntactic","placeholderNames","legacy","isLegacyRef","placeholderVisitorHandler","PATTERN","ancestors","_state$placeholderWhi","isPlaceholder","isJSXIdentifier","isNewExpression","isFunction","resolve","resolveAncestors","isDuplicate","cssKeywords","reverseKeywords","convert","module","rgb","channels","hsl","hsv","hwb","cmyk","xyz","lch","ansi16","ansi256","hcg","apple","gray","model","h","r","g","rdif","gdif","bdif","s","v","diff","diffc","c","k","reversed","currentClosestKeyword","y","currentClosestDistance","distance","pow","z","t1","t2","t3","smin","lmin","hi","floor","q","sl","vmin","wh","bl","ratio","m","y2","x2","z2","atan2","PI","sqrt","hr","cos","sin","round","ansi","color","mult","rem","colorString","hue","chroma","mg","pure","w","metadata","placeholderName","reverse","emptyStatement","applyReplacement","_helperPluginUtils","_helperSplitExportDeclaration","_globals","_transformClass","getBuiltinClasses","category","api","_api$assumption","_api$assumption2","_api$assumption3","_api$assumption4","assertVersion","loose","assumption","VISITED","Symbol","visitor","ExportDefaultDeclaration","isClassDeclaration","ClassDeclaration","ClassExpression","inferred","arrowFunctionToExpression","makeStatementFormatter","unwrap","assertExpressionStatement","createTemplateBuilder","defaultOpts","templateFnCache","templateAstCache","cachedOpts","tpl","extendedTrace","_string","builder","_literal","NO_PLACEHOLDER","rootStack","_parse","_populate","highlightTokens","_helperValidatorIdentifier","jsTokens","Chalk","sometimesKeywords","cyan","capitalized","yellow","jsxIdentifier","punctuator","magenta","green","white","bgRed","tokenize","BRACKET","JSX_TAG","getTokenType","toLowerCase","colorize","supportsColor","enabled","level","matchToToken","escapeStringRegexp","ansiStyles","stdoutColor","stdout","isSimpleWindowsTerm","platform","TERM","levelMapping","skipModels","styles","applyOptions","scLevel","chalkTag","apply","setPrototypeOf","blue","open","closeRe","codes","build","_styles","_empty","visible","bgColor","bgModel","defineProperties","applyStyle","self","enumerable","hasGrey","__proto__","argsLen","originalDim","dim","strings","parts","colorConvert","wrapAnsi16","wrapAnsi256","wrapAnsi16m","italic","underline","inverse","hidden","strikethrough","black","redBright","greenBright","yellowBright","blueBright","magentaBright","cyanBright","whiteBright","bgBlack","bgGreen","bgYellow","bgBlue","bgMagenta","bgCyan","bgWhite","bgBlackBright","bgRedBright","bgGreenBright","bgYellowBright","bgBlueBright","bgMagentaBright","bgCyanBright","bgWhiteBright","groupName","group","styleName","style","ansi2ansi","rgb2rgb","ansi16m","suite","conversions","route","fromModel","routes","toModel","wrappedFn","conversion","wrapRounded","wrapRaw","deriveBFS","graph","models","buildGraph","queue","adjacents","adjacent","link","to","wrapConversion","stderr","TEMPLATE_REGEX","STYLE_REGEX","STRING_REGEX","ESCAPE_REGEX","ESCAPES","unescape","parseArguments","results","chunks","trim","chunk","escape","chr","parseStyle","buildStyle","layer","escapeChar","errMsg","nameSet","buildTemplateCode","buildLiteralData","defaultReplacements"],"mappings":"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","file":"static/js/vendors-runtime-template.5033147b.chunk.js","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports.program = exports.expression = exports.statements = exports.statement = exports.smart = void 0;\n\nvar formatters = _interopRequireWildcard(require(\"./formatters\"));\n\nvar _builder = _interopRequireDefault(require(\"./builder\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nconst smart = (0, _builder.default)(formatters.smart);\nexports.smart = smart;\nconst statement = (0, _builder.default)(formatters.statement);\nexports.statement = statement;\nconst statements = (0, _builder.default)(formatters.statements);\nexports.statements = statements;\nconst expression = (0, _builder.default)(formatters.expression);\nexports.expression = expression;\nconst program = (0, _builder.default)(formatters.program);\nexports.program = program;\n\nvar _default = Object.assign(smart.bind(undefined), {\n  smart,\n  statement,\n  statements,\n  expression,\n  program,\n  ast: smart.ast\n});\n\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = transformClass;\n\nvar _helperFunctionName = _interopRequireDefault(require(\"@babel/helper-function-name\"));\n\nvar _helperReplaceSupers = _interopRequireWildcard(require(\"@babel/helper-replace-supers\"));\n\nvar _helperOptimiseCallExpression = _interopRequireDefault(require(\"@babel/helper-optimise-call-expression\"));\n\nvar _core = require(\"@babel/core\");\n\nvar _helperAnnotateAsPure = _interopRequireDefault(require(\"@babel/helper-annotate-as-pure\"));\n\nvar _inlineCreateSuperHelpers = _interopRequireDefault(require(\"./inline-createSuper-helpers\"));\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction buildConstructor(classRef, constructorBody, node) {\n  const func = _core.types.functionDeclaration(_core.types.cloneNode(classRef), [], constructorBody);\n\n  _core.types.inherits(func, node);\n\n  return func;\n}\n\nfunction transformClass(path, file, builtinClasses, isLoose, assumptions) {\n  const classState = {\n    parent: undefined,\n    scope: undefined,\n    node: undefined,\n    path: undefined,\n    file: undefined,\n    classId: undefined,\n    classRef: undefined,\n    superFnId: undefined,\n    superName: undefined,\n    superReturns: [],\n    isDerived: false,\n    extendsNative: false,\n    construct: undefined,\n    constructorBody: undefined,\n    userConstructor: undefined,\n    userConstructorPath: undefined,\n    hasConstructor: false,\n    staticPropBody: [],\n    body: [],\n    superThises: [],\n    pushedConstructor: false,\n    pushedInherits: false,\n    protoAlias: null,\n    isLoose: false,\n    methods: {\n      instance: {\n        hasComputed: false,\n        list: [],\n        map: new Map()\n      },\n      static: {\n        hasComputed: false,\n        list: [],\n        map: new Map()\n      }\n    }\n  };\n\n  const setState = newState => {\n    Object.assign(classState, newState);\n  };\n\n  const findThisesVisitor = _core.traverse.visitors.merge([_helperReplaceSupers.environmentVisitor, {\n    ThisExpression(path) {\n      classState.superThises.push(path);\n    }\n\n  }]);\n\n  function maybeCreateConstructor() {\n    let hasConstructor = false;\n    const paths = classState.path.get(\"body.body\");\n\n    for (const path of paths) {\n      hasConstructor = path.equals(\"kind\", \"constructor\");\n      if (hasConstructor) break;\n    }\n\n    if (hasConstructor) return;\n    let params, body;\n\n    if (classState.isDerived) {\n      const constructor = _core.template.expression.ast`\n        (function () {\n          super(...arguments);\n        })\n      `;\n      params = constructor.params;\n      body = constructor.body;\n    } else {\n      params = [];\n      body = _core.types.blockStatement([]);\n    }\n\n    classState.path.get(\"body\").unshiftContainer(\"body\", _core.types.classMethod(\"constructor\", _core.types.identifier(\"constructor\"), params, body));\n  }\n\n  function buildBody() {\n    maybeCreateConstructor();\n    pushBody();\n    verifyConstructor();\n\n    if (classState.userConstructor) {\n      const {\n        constructorBody,\n        userConstructor,\n        construct\n      } = classState;\n      constructorBody.body = constructorBody.body.concat(userConstructor.body.body);\n\n      _core.types.inherits(construct, userConstructor);\n\n      _core.types.inherits(constructorBody, userConstructor.body);\n    }\n\n    pushDescriptors();\n  }\n\n  function pushBody() {\n    const classBodyPaths = classState.path.get(\"body.body\");\n\n    for (const path of classBodyPaths) {\n      const node = path.node;\n\n      if (path.isClassProperty()) {\n        throw path.buildCodeFrameError(\"Missing class properties transform.\");\n      }\n\n      if (node.decorators) {\n        throw path.buildCodeFrameError(\"Method has decorators, put the decorator plugin before the classes one.\");\n      }\n\n      if (_core.types.isClassMethod(node)) {\n        const isConstructor = node.kind === \"constructor\";\n        const replaceSupers = new _helperReplaceSupers.default({\n          methodPath: path,\n          objectRef: classState.classRef,\n          superRef: classState.superName,\n          constantSuper: assumptions.constantSuper,\n          file: classState.file,\n          refToPreserve: classState.classRef\n        });\n        replaceSupers.replace();\n        const superReturns = [];\n        path.traverse(_core.traverse.visitors.merge([_helperReplaceSupers.environmentVisitor, {\n          ReturnStatement(path) {\n            if (!path.getFunctionParent().isArrowFunctionExpression()) {\n              superReturns.push(path);\n            }\n          }\n\n        }]));\n\n        if (isConstructor) {\n          pushConstructor(superReturns, node, path);\n        } else {\n          pushMethod(node, path);\n        }\n      }\n    }\n  }\n\n  function pushDescriptors() {\n    pushInheritsToBody();\n    const {\n      body\n    } = classState;\n    const props = {\n      instance: null,\n      static: null\n    };\n\n    for (const placement of [\"static\", \"instance\"]) {\n      if (classState.methods[placement].list.length) {\n        props[placement] = classState.methods[placement].list.map(desc => {\n          const obj = _core.types.objectExpression([_core.types.objectProperty(_core.types.identifier(\"key\"), desc.key)]);\n\n          for (const kind of [\"get\", \"set\", \"value\"]) {\n            if (desc[kind] != null) {\n              obj.properties.push(_core.types.objectProperty(_core.types.identifier(kind), desc[kind]));\n            }\n          }\n\n          return obj;\n        });\n      }\n    }\n\n    if (props.instance || props.static) {\n      let args = [_core.types.cloneNode(classState.classRef), props.instance ? _core.types.arrayExpression(props.instance) : _core.types.nullLiteral(), props.static ? _core.types.arrayExpression(props.static) : _core.types.nullLiteral()];\n      let lastNonNullIndex = 0;\n\n      for (let i = 0; i < args.length; i++) {\n        if (!_core.types.isNullLiteral(args[i])) lastNonNullIndex = i;\n      }\n\n      args = args.slice(0, lastNonNullIndex + 1);\n      body.push(_core.types.expressionStatement(_core.types.callExpression(classState.file.addHelper(\"createClass\"), args)));\n    }\n  }\n\n  function wrapSuperCall(bareSuper, superRef, thisRef, body) {\n    const bareSuperNode = bareSuper.node;\n    let call;\n\n    if (assumptions.superIsCallableConstructor) {\n      bareSuperNode.arguments.unshift(_core.types.thisExpression());\n\n      if (bareSuperNode.arguments.length === 2 && _core.types.isSpreadElement(bareSuperNode.arguments[1]) && _core.types.isIdentifier(bareSuperNode.arguments[1].argument, {\n        name: \"arguments\"\n      })) {\n        bareSuperNode.arguments[1] = bareSuperNode.arguments[1].argument;\n        bareSuperNode.callee = _core.types.memberExpression(_core.types.cloneNode(superRef), _core.types.identifier(\"apply\"));\n      } else {\n        bareSuperNode.callee = _core.types.memberExpression(_core.types.cloneNode(superRef), _core.types.identifier(\"call\"));\n      }\n\n      call = _core.types.logicalExpression(\"||\", bareSuperNode, _core.types.thisExpression());\n    } else {\n      call = (0, _helperOptimiseCallExpression.default)(_core.types.cloneNode(classState.superFnId), _core.types.thisExpression(), bareSuperNode.arguments);\n    }\n\n    if (bareSuper.parentPath.isExpressionStatement() && bareSuper.parentPath.container === body.node.body && body.node.body.length - 1 === bareSuper.parentPath.key) {\n      if (classState.superThises.length) {\n        call = _core.types.assignmentExpression(\"=\", thisRef(), call);\n      }\n\n      bareSuper.parentPath.replaceWith(_core.types.returnStatement(call));\n    } else {\n      bareSuper.replaceWith(_core.types.assignmentExpression(\"=\", thisRef(), call));\n    }\n  }\n\n  function verifyConstructor() {\n    if (!classState.isDerived) return;\n    const path = classState.userConstructorPath;\n    const body = path.get(\"body\");\n    path.traverse(findThisesVisitor);\n\n    let thisRef = function () {\n      const ref = path.scope.generateDeclaredUidIdentifier(\"this\");\n\n      thisRef = () => _core.types.cloneNode(ref);\n\n      return ref;\n    };\n\n    for (const thisPath of classState.superThises) {\n      const {\n        node,\n        parentPath\n      } = thisPath;\n\n      if (parentPath.isMemberExpression({\n        object: node\n      })) {\n        thisPath.replaceWith(thisRef());\n        continue;\n      }\n\n      thisPath.replaceWith(_core.types.callExpression(classState.file.addHelper(\"assertThisInitialized\"), [thisRef()]));\n    }\n\n    const bareSupers = new Set();\n    path.traverse(_core.traverse.visitors.merge([_helperReplaceSupers.environmentVisitor, {\n      Super(path) {\n        const {\n          node,\n          parentPath\n        } = path;\n\n        if (parentPath.isCallExpression({\n          callee: node\n        })) {\n          bareSupers.add(parentPath);\n        }\n      }\n\n    }]));\n    let guaranteedSuperBeforeFinish = !!bareSupers.size;\n\n    for (const bareSuper of bareSupers) {\n      wrapSuperCall(bareSuper, classState.superName, thisRef, body);\n\n      if (guaranteedSuperBeforeFinish) {\n        bareSuper.find(function (parentPath) {\n          if (parentPath === path) {\n            return true;\n          }\n\n          if (parentPath.isLoop() || parentPath.isConditional() || parentPath.isArrowFunctionExpression()) {\n            guaranteedSuperBeforeFinish = false;\n            return true;\n          }\n        });\n      }\n    }\n\n    let wrapReturn;\n\n    if (classState.isLoose) {\n      wrapReturn = returnArg => {\n        const thisExpr = _core.types.callExpression(classState.file.addHelper(\"assertThisInitialized\"), [thisRef()]);\n\n        return returnArg ? _core.types.logicalExpression(\"||\", returnArg, thisExpr) : thisExpr;\n      };\n    } else {\n      wrapReturn = returnArg => _core.types.callExpression(classState.file.addHelper(\"possibleConstructorReturn\"), [thisRef()].concat(returnArg || []));\n    }\n\n    const bodyPaths = body.get(\"body\");\n\n    if (!bodyPaths.length || !bodyPaths.pop().isReturnStatement()) {\n      body.pushContainer(\"body\", _core.types.returnStatement(guaranteedSuperBeforeFinish ? thisRef() : wrapReturn()));\n    }\n\n    for (const returnPath of classState.superReturns) {\n      returnPath.get(\"argument\").replaceWith(wrapReturn(returnPath.node.argument));\n    }\n  }\n\n  function pushMethod(node, path) {\n    const scope = path ? path.scope : classState.scope;\n\n    if (node.kind === \"method\") {\n      if (processMethod(node, scope)) return;\n    }\n\n    const placement = node.static ? \"static\" : \"instance\";\n    const methods = classState.methods[placement];\n    const descKey = node.kind === \"method\" ? \"value\" : node.kind;\n    const key = _core.types.isNumericLiteral(node.key) || _core.types.isBigIntLiteral(node.key) ? _core.types.stringLiteral(String(node.key.value)) : _core.types.toComputedKey(node);\n\n    let fn = _core.types.toExpression(node);\n\n    if (_core.types.isStringLiteral(key)) {\n      if (node.kind === \"method\") {\n        fn = (0, _helperFunctionName.default)({\n          id: key,\n          node: node,\n          scope\n        });\n      }\n    } else {\n      methods.hasComputed = true;\n    }\n\n    let descriptor;\n\n    if (!methods.hasComputed && methods.map.has(key.value)) {\n      descriptor = methods.map.get(key.value);\n      descriptor[descKey] = fn;\n\n      if (descKey === \"value\") {\n        descriptor.get = null;\n        descriptor.set = null;\n      } else {\n        descriptor.value = null;\n      }\n    } else {\n      descriptor = {\n        key: key,\n        [descKey]: fn\n      };\n      methods.list.push(descriptor);\n\n      if (!methods.hasComputed) {\n        methods.map.set(key.value, descriptor);\n      }\n    }\n  }\n\n  function processMethod(node, scope) {\n    if (assumptions.setClassMethods && !node.decorators) {\n      let {\n        classRef\n      } = classState;\n\n      if (!node.static) {\n        insertProtoAliasOnce();\n        classRef = classState.protoAlias;\n      }\n\n      const methodName = _core.types.memberExpression(_core.types.cloneNode(classRef), node.key, node.computed || _core.types.isLiteral(node.key));\n\n      let func = _core.types.functionExpression(null, node.params, node.body, node.generator, node.async);\n\n      _core.types.inherits(func, node);\n\n      const key = _core.types.toComputedKey(node, node.key);\n\n      if (_core.types.isStringLiteral(key)) {\n        func = (0, _helperFunctionName.default)({\n          node: func,\n          id: key,\n          scope\n        });\n      }\n\n      const expr = _core.types.expressionStatement(_core.types.assignmentExpression(\"=\", methodName, func));\n\n      _core.types.inheritsComments(expr, node);\n\n      classState.body.push(expr);\n      return true;\n    }\n\n    return false;\n  }\n\n  function insertProtoAliasOnce() {\n    if (classState.protoAlias === null) {\n      setState({\n        protoAlias: classState.scope.generateUidIdentifier(\"proto\")\n      });\n\n      const classProto = _core.types.memberExpression(classState.classRef, _core.types.identifier(\"prototype\"));\n\n      const protoDeclaration = _core.types.variableDeclaration(\"var\", [_core.types.variableDeclarator(classState.protoAlias, classProto)]);\n\n      classState.body.push(protoDeclaration);\n    }\n  }\n\n  function pushConstructor(superReturns, method, path) {\n    setState({\n      userConstructorPath: path,\n      userConstructor: method,\n      hasConstructor: true,\n      superReturns\n    });\n    const {\n      construct\n    } = classState;\n\n    _core.types.inheritsComments(construct, method);\n\n    construct.params = method.params;\n\n    _core.types.inherits(construct.body, method.body);\n\n    construct.body.directives = method.body.directives;\n    pushConstructorToBody();\n  }\n\n  function pushConstructorToBody() {\n    if (classState.pushedConstructor) return;\n    classState.pushedConstructor = true;\n\n    if (classState.hasInstanceDescriptors || classState.hasStaticDescriptors) {\n      pushDescriptors();\n    }\n\n    classState.body.push(classState.construct);\n    pushInheritsToBody();\n  }\n\n  function pushInheritsToBody() {\n    if (!classState.isDerived || classState.pushedInherits) return;\n    const superFnId = path.scope.generateUidIdentifier(\"super\");\n    setState({\n      pushedInherits: true,\n      superFnId\n    });\n\n    if (!assumptions.superIsCallableConstructor) {\n      classState.body.unshift(_core.types.variableDeclaration(\"var\", [_core.types.variableDeclarator(superFnId, _core.types.callExpression((0, _inlineCreateSuperHelpers.default)(classState.file), [_core.types.cloneNode(classState.classRef)]))]));\n    }\n\n    classState.body.unshift(_core.types.expressionStatement(_core.types.callExpression(classState.file.addHelper(classState.isLoose ? \"inheritsLoose\" : \"inherits\"), [_core.types.cloneNode(classState.classRef), _core.types.cloneNode(classState.superName)])));\n  }\n\n  function setupClosureParamsArgs() {\n    const {\n      superName\n    } = classState;\n    const closureParams = [];\n    const closureArgs = [];\n\n    if (classState.isDerived) {\n      let arg = _core.types.cloneNode(superName);\n\n      if (classState.extendsNative) {\n        arg = _core.types.callExpression(classState.file.addHelper(\"wrapNativeSuper\"), [arg]);\n        (0, _helperAnnotateAsPure.default)(arg);\n      }\n\n      const param = classState.scope.generateUidIdentifierBasedOnNode(superName);\n      closureParams.push(param);\n      closureArgs.push(arg);\n      setState({\n        superName: _core.types.cloneNode(param)\n      });\n    }\n\n    return {\n      closureParams,\n      closureArgs\n    };\n  }\n\n  function classTransformer(path, file, builtinClasses, isLoose) {\n    setState({\n      parent: path.parent,\n      scope: path.scope,\n      node: path.node,\n      path,\n      file,\n      isLoose\n    });\n    setState({\n      classId: classState.node.id,\n      classRef: classState.node.id ? _core.types.identifier(classState.node.id.name) : classState.scope.generateUidIdentifier(\"class\"),\n      superName: classState.node.superClass,\n      isDerived: !!classState.node.superClass,\n      constructorBody: _core.types.blockStatement([])\n    });\n    setState({\n      extendsNative: classState.isDerived && builtinClasses.has(classState.superName.name) && !classState.scope.hasBinding(classState.superName.name, true)\n    });\n    const {\n      classRef,\n      node,\n      constructorBody\n    } = classState;\n    setState({\n      construct: buildConstructor(classRef, constructorBody, node)\n    });\n    let {\n      body\n    } = classState;\n    const {\n      closureParams,\n      closureArgs\n    } = setupClosureParamsArgs();\n    buildBody();\n\n    if (!assumptions.noClassCalls) {\n      constructorBody.body.unshift(_core.types.expressionStatement(_core.types.callExpression(classState.file.addHelper(\"classCallCheck\"), [_core.types.thisExpression(), _core.types.cloneNode(classState.classRef)])));\n    }\n\n    body = body.concat(classState.staticPropBody.map(fn => fn(_core.types.cloneNode(classState.classRef))));\n    const isStrict = path.isInStrictMode();\n    let constructorOnly = classState.classId && body.length === 1;\n\n    if (constructorOnly && !isStrict) {\n      for (const param of classState.construct.params) {\n        if (!_core.types.isIdentifier(param)) {\n          constructorOnly = false;\n          break;\n        }\n      }\n    }\n\n    const directives = constructorOnly ? body[0].body.directives : [];\n\n    if (!isStrict) {\n      directives.push(_core.types.directive(_core.types.directiveLiteral(\"use strict\")));\n    }\n\n    if (constructorOnly) {\n      return _core.types.toExpression(body[0]);\n    }\n\n    body.push(_core.types.returnStatement(_core.types.cloneNode(classState.classRef)));\n\n    const container = _core.types.arrowFunctionExpression(closureParams, _core.types.blockStatement(body, directives));\n\n    return _core.types.callExpression(container, closureArgs);\n  }\n\n  return classTransformer(path, file, builtinClasses, isLoose);\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = addCreateSuperHelper;\n\nvar _core = require(\"@babel/core\");\n\nconst helperIDs = new WeakMap();\n\nfunction addCreateSuperHelper(file) {\n  if (helperIDs.has(file)) {\n    return (_core.types.cloneNode || _core.types.clone)(helperIDs.get(file));\n  }\n\n  try {\n    return file.addHelper(\"createSuper\");\n  } catch (_unused) {}\n\n  const id = file.scope.generateUidIdentifier(\"createSuper\");\n  helperIDs.set(file, id);\n  const fn = helper({\n    CREATE_SUPER: id,\n    GET_PROTOTYPE_OF: file.addHelper(\"getPrototypeOf\"),\n    POSSIBLE_CONSTRUCTOR_RETURN: file.addHelper(\"possibleConstructorReturn\")\n  });\n  file.path.unshiftContainer(\"body\", [fn]);\n  file.scope.registerDeclaration(file.path.get(\"body.0\"));\n  return _core.types.cloneNode(id);\n}\n\nconst helper = _core.template.statement`\n  function CREATE_SUPER(Derived) {\n    function isNativeReflectConstruct() {\n      if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n\n      // core-js@3\n      if (Reflect.construct.sham) return false;\n\n      // Proxy can't be polyfilled. Every browser implemented\n      // proxies before or at the same time as Reflect.construct,\n      // so if they support Proxy they also support Reflect.construct.\n      if (typeof Proxy === \"function\") return true;\n\n      // Since Reflect.construct can't be properly polyfilled, some\n      // implementations (e.g. core-js@2) don't set the correct internal slots.\n      // Those polyfills don't allow us to subclass built-ins, so we need to\n      // use our fallback implementation.\n      try {\n        // If the internal slots aren't set, this throws an error similar to\n        //   TypeError: this is not a Date object.\n        Date.prototype.toString.call(Reflect.construct(Date, [], function() {}));\n        return true;\n      } catch (e) {\n        return false;\n      }\n    }\n\n    return function () {\n      var Super = GET_PROTOTYPE_OF(Derived), result;\n      if (isNativeReflectConstruct()) {\n        // NOTE: This doesn't work if this.__proto__.constructor has been modified.\n        var NewTarget = GET_PROTOTYPE_OF(this).constructor;\n        result = Reflect.construct(Super, arguments, NewTarget);\n      } else {\n        result = Super.apply(this, arguments);\n      }\n      return POSSIBLE_CONSTRUCTOR_RETURN(this, result);\n    }\n  }\n`;","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nconst beforeExpr = true;\nconst startsExpr = true;\nconst isLoop = true;\nconst isAssign = true;\nconst prefix = true;\nconst postfix = true;\nclass TokenType {\n  constructor(label, conf = {}) {\n    this.label = void 0;\n    this.keyword = void 0;\n    this.beforeExpr = void 0;\n    this.startsExpr = void 0;\n    this.rightAssociative = void 0;\n    this.isLoop = void 0;\n    this.isAssign = void 0;\n    this.prefix = void 0;\n    this.postfix = void 0;\n    this.binop = void 0;\n    this.updateContext = void 0;\n    this.label = label;\n    this.keyword = conf.keyword;\n    this.beforeExpr = !!conf.beforeExpr;\n    this.startsExpr = !!conf.startsExpr;\n    this.rightAssociative = !!conf.rightAssociative;\n    this.isLoop = !!conf.isLoop;\n    this.isAssign = !!conf.isAssign;\n    this.prefix = !!conf.prefix;\n    this.postfix = !!conf.postfix;\n    this.binop = conf.binop != null ? conf.binop : null;\n    this.updateContext = null;\n  }\n\n}\nconst keywords = new Map();\n\nfunction createKeyword(name, options = {}) {\n  options.keyword = name;\n  const token = new TokenType(name, options);\n  keywords.set(name, token);\n  return token;\n}\n\nfunction createBinop(name, binop) {\n  return new TokenType(name, {\n    beforeExpr,\n    binop\n  });\n}\n\nconst types = {\n  num: new TokenType(\"num\", {\n    startsExpr\n  }),\n  bigint: new TokenType(\"bigint\", {\n    startsExpr\n  }),\n  decimal: new TokenType(\"decimal\", {\n    startsExpr\n  }),\n  regexp: new TokenType(\"regexp\", {\n    startsExpr\n  }),\n  string: new TokenType(\"string\", {\n    startsExpr\n  }),\n  name: new TokenType(\"name\", {\n    startsExpr\n  }),\n  eof: new TokenType(\"eof\"),\n  bracketL: new TokenType(\"[\", {\n    beforeExpr,\n    startsExpr\n  }),\n  bracketHashL: new TokenType(\"#[\", {\n    beforeExpr,\n    startsExpr\n  }),\n  bracketBarL: new TokenType(\"[|\", {\n    beforeExpr,\n    startsExpr\n  }),\n  bracketR: new TokenType(\"]\"),\n  bracketBarR: new TokenType(\"|]\"),\n  braceL: new TokenType(\"{\", {\n    beforeExpr,\n    startsExpr\n  }),\n  braceBarL: new TokenType(\"{|\", {\n    beforeExpr,\n    startsExpr\n  }),\n  braceHashL: new TokenType(\"#{\", {\n    beforeExpr,\n    startsExpr\n  }),\n  braceR: new TokenType(\"}\"),\n  braceBarR: new TokenType(\"|}\"),\n  parenL: new TokenType(\"(\", {\n    beforeExpr,\n    startsExpr\n  }),\n  parenR: new TokenType(\")\"),\n  comma: new TokenType(\",\", {\n    beforeExpr\n  }),\n  semi: new TokenType(\";\", {\n    beforeExpr\n  }),\n  colon: new TokenType(\":\", {\n    beforeExpr\n  }),\n  doubleColon: new TokenType(\"::\", {\n    beforeExpr\n  }),\n  dot: new TokenType(\".\"),\n  question: new TokenType(\"?\", {\n    beforeExpr\n  }),\n  questionDot: new TokenType(\"?.\"),\n  arrow: new TokenType(\"=>\", {\n    beforeExpr\n  }),\n  template: new TokenType(\"template\"),\n  ellipsis: new TokenType(\"...\", {\n    beforeExpr\n  }),\n  backQuote: new TokenType(\"`\", {\n    startsExpr\n  }),\n  dollarBraceL: new TokenType(\"${\", {\n    beforeExpr,\n    startsExpr\n  }),\n  at: new TokenType(\"@\"),\n  hash: new TokenType(\"#\", {\n    startsExpr\n  }),\n  interpreterDirective: new TokenType(\"#!...\"),\n  eq: new TokenType(\"=\", {\n    beforeExpr,\n    isAssign\n  }),\n  assign: new TokenType(\"_=\", {\n    beforeExpr,\n    isAssign\n  }),\n  incDec: new TokenType(\"++/--\", {\n    prefix,\n    postfix,\n    startsExpr\n  }),\n  bang: new TokenType(\"!\", {\n    beforeExpr,\n    prefix,\n    startsExpr\n  }),\n  tilde: new TokenType(\"~\", {\n    beforeExpr,\n    prefix,\n    startsExpr\n  }),\n  pipeline: createBinop(\"|>\", 0),\n  nullishCoalescing: createBinop(\"??\", 1),\n  logicalOR: createBinop(\"||\", 1),\n  logicalAND: createBinop(\"&&\", 2),\n  bitwiseOR: createBinop(\"|\", 3),\n  bitwiseXOR: createBinop(\"^\", 4),\n  bitwiseAND: createBinop(\"&\", 5),\n  equality: createBinop(\"==/!=/===/!==\", 6),\n  relational: createBinop(\"</>/<=/>=\", 7),\n  bitShift: createBinop(\"<</>>/>>>\", 8),\n  plusMin: new TokenType(\"+/-\", {\n    beforeExpr,\n    binop: 9,\n    prefix,\n    startsExpr\n  }),\n  modulo: new TokenType(\"%\", {\n    beforeExpr,\n    binop: 10,\n    startsExpr\n  }),\n  star: new TokenType(\"*\", {\n    binop: 10\n  }),\n  slash: createBinop(\"/\", 10),\n  exponent: new TokenType(\"**\", {\n    beforeExpr,\n    binop: 11,\n    rightAssociative: true\n  }),\n  _break: createKeyword(\"break\"),\n  _case: createKeyword(\"case\", {\n    beforeExpr\n  }),\n  _catch: createKeyword(\"catch\"),\n  _continue: createKeyword(\"continue\"),\n  _debugger: createKeyword(\"debugger\"),\n  _default: createKeyword(\"default\", {\n    beforeExpr\n  }),\n  _do: createKeyword(\"do\", {\n    isLoop,\n    beforeExpr\n  }),\n  _else: createKeyword(\"else\", {\n    beforeExpr\n  }),\n  _finally: createKeyword(\"finally\"),\n  _for: createKeyword(\"for\", {\n    isLoop\n  }),\n  _function: createKeyword(\"function\", {\n    startsExpr\n  }),\n  _if: createKeyword(\"if\"),\n  _return: createKeyword(\"return\", {\n    beforeExpr\n  }),\n  _switch: createKeyword(\"switch\"),\n  _throw: createKeyword(\"throw\", {\n    beforeExpr,\n    prefix,\n    startsExpr\n  }),\n  _try: createKeyword(\"try\"),\n  _var: createKeyword(\"var\"),\n  _const: createKeyword(\"const\"),\n  _while: createKeyword(\"while\", {\n    isLoop\n  }),\n  _with: createKeyword(\"with\"),\n  _new: createKeyword(\"new\", {\n    beforeExpr,\n    startsExpr\n  }),\n  _this: createKeyword(\"this\", {\n    startsExpr\n  }),\n  _super: createKeyword(\"super\", {\n    startsExpr\n  }),\n  _class: createKeyword(\"class\", {\n    startsExpr\n  }),\n  _extends: createKeyword(\"extends\", {\n    beforeExpr\n  }),\n  _export: createKeyword(\"export\"),\n  _import: createKeyword(\"import\", {\n    startsExpr\n  }),\n  _null: createKeyword(\"null\", {\n    startsExpr\n  }),\n  _true: createKeyword(\"true\", {\n    startsExpr\n  }),\n  _false: createKeyword(\"false\", {\n    startsExpr\n  }),\n  _in: createKeyword(\"in\", {\n    beforeExpr,\n    binop: 7\n  }),\n  _instanceof: createKeyword(\"instanceof\", {\n    beforeExpr,\n    binop: 7\n  }),\n  _typeof: createKeyword(\"typeof\", {\n    beforeExpr,\n    prefix,\n    startsExpr\n  }),\n  _void: createKeyword(\"void\", {\n    beforeExpr,\n    prefix,\n    startsExpr\n  }),\n  _delete: createKeyword(\"delete\", {\n    beforeExpr,\n    prefix,\n    startsExpr\n  })\n};\n\nconst lineBreak = /\\r\\n?|[\\n\\u2028\\u2029]/;\nconst lineBreakG = new RegExp(lineBreak.source, \"g\");\nfunction isNewLine(code) {\n  switch (code) {\n    case 10:\n    case 13:\n    case 8232:\n    case 8233:\n      return true;\n\n    default:\n      return false;\n  }\n}\nconst skipWhiteSpace = /(?:\\s|\\/\\/.*|\\/\\*[^]*?\\*\\/)*/g;\nfunction isWhitespace(code) {\n  switch (code) {\n    case 0x0009:\n    case 0x000b:\n    case 0x000c:\n    case 32:\n    case 160:\n    case 5760:\n    case 0x2000:\n    case 0x2001:\n    case 0x2002:\n    case 0x2003:\n    case 0x2004:\n    case 0x2005:\n    case 0x2006:\n    case 0x2007:\n    case 0x2008:\n    case 0x2009:\n    case 0x200a:\n    case 0x202f:\n    case 0x205f:\n    case 0x3000:\n    case 0xfeff:\n      return true;\n\n    default:\n      return false;\n  }\n}\n\nclass Position {\n  constructor(line, col) {\n    this.line = void 0;\n    this.column = void 0;\n    this.line = line;\n    this.column = col;\n  }\n\n}\nclass SourceLocation {\n  constructor(start, end) {\n    this.start = void 0;\n    this.end = void 0;\n    this.filename = void 0;\n    this.identifierName = void 0;\n    this.start = start;\n    this.end = end;\n  }\n\n}\nfunction getLineInfo(input, offset) {\n  let line = 1;\n  let lineStart = 0;\n  let match;\n  lineBreakG.lastIndex = 0;\n\n  while ((match = lineBreakG.exec(input)) && match.index < offset) {\n    line++;\n    lineStart = lineBreakG.lastIndex;\n  }\n\n  return new Position(line, offset - lineStart);\n}\n\nclass BaseParser {\n  constructor() {\n    this.sawUnambiguousESM = false;\n    this.ambiguousScriptDifferentAst = false;\n  }\n\n  hasPlugin(name) {\n    return this.plugins.has(name);\n  }\n\n  getPluginOption(plugin, name) {\n    if (this.hasPlugin(plugin)) return this.plugins.get(plugin)[name];\n  }\n\n}\n\nfunction last(stack) {\n  return stack[stack.length - 1];\n}\n\nclass CommentsParser extends BaseParser {\n  addComment(comment) {\n    if (this.filename) comment.loc.filename = this.filename;\n    this.state.trailingComments.push(comment);\n    this.state.leadingComments.push(comment);\n  }\n\n  adjustCommentsAfterTrailingComma(node, elements, takeAllComments) {\n    if (this.state.leadingComments.length === 0) {\n      return;\n    }\n\n    let lastElement = null;\n    let i = elements.length;\n\n    while (lastElement === null && i > 0) {\n      lastElement = elements[--i];\n    }\n\n    if (lastElement === null) {\n      return;\n    }\n\n    for (let j = 0; j < this.state.leadingComments.length; j++) {\n      if (this.state.leadingComments[j].end < this.state.commentPreviousNode.end) {\n        this.state.leadingComments.splice(j, 1);\n        j--;\n      }\n    }\n\n    const newTrailingComments = [];\n\n    for (let i = 0; i < this.state.leadingComments.length; i++) {\n      const leadingComment = this.state.leadingComments[i];\n\n      if (leadingComment.end < node.end) {\n        newTrailingComments.push(leadingComment);\n\n        if (!takeAllComments) {\n          this.state.leadingComments.splice(i, 1);\n          i--;\n        }\n      } else {\n        if (node.trailingComments === undefined) {\n          node.trailingComments = [];\n        }\n\n        node.trailingComments.push(leadingComment);\n      }\n    }\n\n    if (takeAllComments) this.state.leadingComments = [];\n\n    if (newTrailingComments.length > 0) {\n      lastElement.trailingComments = newTrailingComments;\n    } else if (lastElement.trailingComments !== undefined) {\n      lastElement.trailingComments = [];\n    }\n  }\n\n  processComment(node) {\n    if (node.type === \"Program\" && node.body.length > 0) return;\n    const stack = this.state.commentStack;\n    let firstChild, lastChild, trailingComments, i, j;\n\n    if (this.state.trailingComments.length > 0) {\n      if (this.state.trailingComments[0].start >= node.end) {\n        trailingComments = this.state.trailingComments;\n        this.state.trailingComments = [];\n      } else {\n        this.state.trailingComments.length = 0;\n      }\n    } else if (stack.length > 0) {\n      const lastInStack = last(stack);\n\n      if (lastInStack.trailingComments && lastInStack.trailingComments[0].start >= node.end) {\n        trailingComments = lastInStack.trailingComments;\n        delete lastInStack.trailingComments;\n      }\n    }\n\n    if (stack.length > 0 && last(stack).start >= node.start) {\n      firstChild = stack.pop();\n    }\n\n    while (stack.length > 0 && last(stack).start >= node.start) {\n      lastChild = stack.pop();\n    }\n\n    if (!lastChild && firstChild) lastChild = firstChild;\n\n    if (firstChild) {\n      switch (node.type) {\n        case \"ObjectExpression\":\n          this.adjustCommentsAfterTrailingComma(node, node.properties);\n          break;\n\n        case \"ObjectPattern\":\n          this.adjustCommentsAfterTrailingComma(node, node.properties, true);\n          break;\n\n        case \"CallExpression\":\n          this.adjustCommentsAfterTrailingComma(node, node.arguments);\n          break;\n\n        case \"ArrayExpression\":\n          this.adjustCommentsAfterTrailingComma(node, node.elements);\n          break;\n\n        case \"ArrayPattern\":\n          this.adjustCommentsAfterTrailingComma(node, node.elements, true);\n          break;\n      }\n    } else if (this.state.commentPreviousNode && (this.state.commentPreviousNode.type === \"ImportSpecifier\" && node.type !== \"ImportSpecifier\" || this.state.commentPreviousNode.type === \"ExportSpecifier\" && node.type !== \"ExportSpecifier\")) {\n      this.adjustCommentsAfterTrailingComma(node, [this.state.commentPreviousNode]);\n    }\n\n    if (lastChild) {\n      if (lastChild.leadingComments) {\n        if (lastChild !== node && lastChild.leadingComments.length > 0 && last(lastChild.leadingComments).end <= node.start) {\n          node.leadingComments = lastChild.leadingComments;\n          delete lastChild.leadingComments;\n        } else {\n          for (i = lastChild.leadingComments.length - 2; i >= 0; --i) {\n            if (lastChild.leadingComments[i].end <= node.start) {\n              node.leadingComments = lastChild.leadingComments.splice(0, i + 1);\n              break;\n            }\n          }\n        }\n      }\n    } else if (this.state.leadingComments.length > 0) {\n      if (last(this.state.leadingComments).end <= node.start) {\n        if (this.state.commentPreviousNode) {\n          for (j = 0; j < this.state.leadingComments.length; j++) {\n            if (this.state.leadingComments[j].end < this.state.commentPreviousNode.end) {\n              this.state.leadingComments.splice(j, 1);\n              j--;\n            }\n          }\n        }\n\n        if (this.state.leadingComments.length > 0) {\n          node.leadingComments = this.state.leadingComments;\n          this.state.leadingComments = [];\n        }\n      } else {\n        for (i = 0; i < this.state.leadingComments.length; i++) {\n          if (this.state.leadingComments[i].end > node.start) {\n            break;\n          }\n        }\n\n        const leadingComments = this.state.leadingComments.slice(0, i);\n\n        if (leadingComments.length) {\n          node.leadingComments = leadingComments;\n        }\n\n        trailingComments = this.state.leadingComments.slice(i);\n\n        if (trailingComments.length === 0) {\n          trailingComments = null;\n        }\n      }\n    }\n\n    this.state.commentPreviousNode = node;\n\n    if (trailingComments) {\n      if (trailingComments.length && trailingComments[0].start >= node.start && last(trailingComments).end <= node.end) {\n        node.innerComments = trailingComments;\n      } else {\n        const firstTrailingCommentIndex = trailingComments.findIndex(comment => comment.end >= node.end);\n\n        if (firstTrailingCommentIndex > 0) {\n          node.innerComments = trailingComments.slice(0, firstTrailingCommentIndex);\n          node.trailingComments = trailingComments.slice(firstTrailingCommentIndex);\n        } else {\n          node.trailingComments = trailingComments;\n        }\n      }\n    }\n\n    stack.push(node);\n  }\n\n}\n\nconst ErrorMessages = Object.freeze({\n  AccessorIsGenerator: \"A %0ter cannot be a generator\",\n  ArgumentsInClass: \"'arguments' is only allowed in functions and class methods\",\n  AsyncFunctionInSingleStatementContext: \"Async functions can only be declared at the top level or inside a block\",\n  AwaitBindingIdentifier: \"Can not use 'await' as identifier inside an async function\",\n  AwaitBindingIdentifierInStaticBlock: \"Can not use 'await' as identifier inside a static block\",\n  AwaitExpressionFormalParameter: \"await is not allowed in async function parameters\",\n  AwaitNotInAsyncContext: \"'await' is only allowed within async functions and at the top levels of modules\",\n  AwaitNotInAsyncFunction: \"'await' is only allowed within async functions\",\n  BadGetterArity: \"getter must not have any formal parameters\",\n  BadSetterArity: \"setter must have exactly one formal parameter\",\n  BadSetterRestParameter: \"setter function argument must not be a rest parameter\",\n  ConstructorClassField: \"Classes may not have a field named 'constructor'\",\n  ConstructorClassPrivateField: \"Classes may not have a private field named '#constructor'\",\n  ConstructorIsAccessor: \"Class constructor may not be an accessor\",\n  ConstructorIsAsync: \"Constructor can't be an async function\",\n  ConstructorIsGenerator: \"Constructor can't be a generator\",\n  DeclarationMissingInitializer: \"%0 require an initialization value\",\n  DecoratorBeforeExport: \"Decorators must be placed *before* the 'export' keyword. You can set the 'decoratorsBeforeExport' option to false to use the 'export @decorator class {}' syntax\",\n  DecoratorConstructor: \"Decorators can't be used with a constructor. Did you mean '@dec class { ... }'?\",\n  DecoratorExportClass: \"Using the export keyword between a decorator and a class is not allowed. Please use `export @dec class` instead.\",\n  DecoratorSemicolon: \"Decorators must not be followed by a semicolon\",\n  DecoratorStaticBlock: \"Decorators can't be used with a static block\",\n  DeletePrivateField: \"Deleting a private field is not allowed\",\n  DestructureNamedImport: \"ES2015 named imports do not destructure. Use another statement for destructuring after the import.\",\n  DuplicateConstructor: \"Duplicate constructor in the same class\",\n  DuplicateDefaultExport: \"Only one default export allowed per module.\",\n  DuplicateExport: \"`%0` has already been exported. Exported identifiers must be unique.\",\n  DuplicateProto: \"Redefinition of __proto__ property\",\n  DuplicateRegExpFlags: \"Duplicate regular expression flag\",\n  ElementAfterRest: \"Rest element must be last element\",\n  EscapedCharNotAnIdentifier: \"Invalid Unicode escape\",\n  ExportBindingIsString: \"A string literal cannot be used as an exported binding without `from`.\\n- Did you mean `export { '%0' as '%1' } from 'some-module'`?\",\n  ExportDefaultFromAsIdentifier: \"'from' is not allowed as an identifier after 'export default'\",\n  ForInOfLoopInitializer: \"%0 loop variable declaration may not have an initializer\",\n  ForOfLet: \"The left-hand side of a for-of loop may not start with 'let'.\",\n  GeneratorInSingleStatementContext: \"Generators can only be declared at the top level or inside a block\",\n  IllegalBreakContinue: \"Unsyntactic %0\",\n  IllegalLanguageModeDirective: \"Illegal 'use strict' directive in function with non-simple parameter list\",\n  IllegalReturn: \"'return' outside of function\",\n  ImportBindingIsString: 'A string literal cannot be used as an imported binding.\\n- Did you mean `import { \"%0\" as foo }`?',\n  ImportCallArgumentTrailingComma: \"Trailing comma is disallowed inside import(...) arguments\",\n  ImportCallArity: \"import() requires exactly %0\",\n  ImportCallNotNewExpression: \"Cannot use new with import(...)\",\n  ImportCallSpreadArgument: \"... is not allowed in import()\",\n  ImportMetaOutsideModule: `import.meta may appear only with 'sourceType: \"module\"'`,\n  ImportOutsideModule: `'import' and 'export' may appear only with 'sourceType: \"module\"'`,\n  InvalidBigIntLiteral: \"Invalid BigIntLiteral\",\n  InvalidCodePoint: \"Code point out of bounds\",\n  InvalidDecimal: \"Invalid decimal\",\n  InvalidDigit: \"Expected number in radix %0\",\n  InvalidEscapeSequence: \"Bad character escape sequence\",\n  InvalidEscapeSequenceTemplate: \"Invalid escape sequence in template\",\n  InvalidEscapedReservedWord: \"Escape sequence in keyword %0\",\n  InvalidIdentifier: \"Invalid identifier %0\",\n  InvalidLhs: \"Invalid left-hand side in %0\",\n  InvalidLhsBinding: \"Binding invalid left-hand side in %0\",\n  InvalidNumber: \"Invalid number\",\n  InvalidOrMissingExponent: \"Floating-point numbers require a valid exponent after the 'e'\",\n  InvalidOrUnexpectedToken: \"Unexpected character '%0'\",\n  InvalidParenthesizedAssignment: \"Invalid parenthesized assignment pattern\",\n  InvalidPrivateFieldResolution: \"Private name #%0 is not defined\",\n  InvalidPropertyBindingPattern: \"Binding member expression\",\n  InvalidRecordProperty: \"Only properties and spread elements are allowed in record definitions\",\n  InvalidRestAssignmentPattern: \"Invalid rest operator's argument\",\n  LabelRedeclaration: \"Label '%0' is already declared\",\n  LetInLexicalBinding: \"'let' is not allowed to be used as a name in 'let' or 'const' declarations.\",\n  LineTerminatorBeforeArrow: \"No line break is allowed before '=>'\",\n  MalformedRegExpFlags: \"Invalid regular expression flag\",\n  MissingClassName: \"A class name is required\",\n  MissingEqInAssignment: \"Only '=' operator can be used for specifying default value.\",\n  MissingSemicolon: \"Missing semicolon\",\n  MissingUnicodeEscape: \"Expecting Unicode escape sequence \\\\uXXXX\",\n  MixingCoalesceWithLogical: \"Nullish coalescing operator(??) requires parens when mixing with logical operators\",\n  ModuleAttributeDifferentFromType: \"The only accepted module attribute is `type`\",\n  ModuleAttributeInvalidValue: \"Only string literals are allowed as module attribute values\",\n  ModuleAttributesWithDuplicateKeys: 'Duplicate key \"%0\" is not allowed in module attributes',\n  ModuleExportNameHasLoneSurrogate: \"An export name cannot include a lone surrogate, found '\\\\u%0'\",\n  ModuleExportUndefined: \"Export '%0' is not defined\",\n  MultipleDefaultsInSwitch: \"Multiple default clauses\",\n  NewlineAfterThrow: \"Illegal newline after throw\",\n  NoCatchOrFinally: \"Missing catch or finally clause\",\n  NumberIdentifier: \"Identifier directly after number\",\n  NumericSeparatorInEscapeSequence: \"Numeric separators are not allowed inside unicode escape sequences or hex escape sequences\",\n  ObsoleteAwaitStar: \"await* has been removed from the async functions proposal. Use Promise.all() instead.\",\n  OptionalChainingNoNew: \"constructors in/after an Optional Chain are not allowed\",\n  OptionalChainingNoTemplate: \"Tagged Template Literals are not allowed in optionalChain\",\n  ParamDupe: \"Argument name clash\",\n  PatternHasAccessor: \"Object pattern can't contain getter or setter\",\n  PatternHasMethod: \"Object pattern can't contain methods\",\n  PipelineBodyNoArrow: 'Unexpected arrow \"=>\" after pipeline body; arrow function in pipeline body must be parenthesized',\n  PipelineBodySequenceExpression: \"Pipeline body may not be a comma-separated sequence expression\",\n  PipelineHeadSequenceExpression: \"Pipeline head should not be a comma-separated sequence expression\",\n  PipelineTopicUnused: \"Pipeline is in topic style but does not use topic reference\",\n  PrimaryTopicNotAllowed: \"Topic reference was used in a lexical context without topic binding\",\n  PrimaryTopicRequiresSmartPipeline: \"Primary Topic Reference found but pipelineOperator not passed 'smart' for 'proposal' option.\",\n  PrivateInExpectedIn: \"Private names are only allowed in property accesses (`obj.#%0`) or in `in` expressions (`#%0 in obj`)\",\n  PrivateNameRedeclaration: \"Duplicate private name #%0\",\n  RecordExpressionBarIncorrectEndSyntaxType: \"Record expressions ending with '|}' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'\",\n  RecordExpressionBarIncorrectStartSyntaxType: \"Record expressions starting with '{|' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'\",\n  RecordExpressionHashIncorrectStartSyntaxType: \"Record expressions starting with '#{' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'hash'\",\n  RecordNoProto: \"'__proto__' is not allowed in Record expressions\",\n  RestTrailingComma: \"Unexpected trailing comma after rest element\",\n  SloppyFunction: \"In non-strict mode code, functions can only be declared at top level, inside a block, or as the body of an if statement\",\n  StaticPrototype: \"Classes may not have static property named prototype\",\n  StrictDelete: \"Deleting local variable in strict mode\",\n  StrictEvalArguments: \"Assigning to '%0' in strict mode\",\n  StrictEvalArgumentsBinding: \"Binding '%0' in strict mode\",\n  StrictFunction: \"In strict mode code, functions can only be declared at top level or inside a block\",\n  StrictNumericEscape: \"The only valid numeric escape in strict mode is '\\\\0'\",\n  StrictOctalLiteral: \"Legacy octal literals are not allowed in strict mode\",\n  StrictWith: \"'with' in strict mode\",\n  SuperNotAllowed: \"super() is only valid inside a class constructor of a subclass. Maybe a typo in the method name ('constructor') or not extending another class?\",\n  SuperPrivateField: \"Private fields can't be accessed on super\",\n  TrailingDecorator: \"Decorators must be attached to a class element\",\n  TupleExpressionBarIncorrectEndSyntaxType: \"Tuple expressions ending with '|]' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'\",\n  TupleExpressionBarIncorrectStartSyntaxType: \"Tuple expressions starting with '[|' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'\",\n  TupleExpressionHashIncorrectStartSyntaxType: \"Tuple expressions starting with '#[' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'hash'\",\n  UnexpectedArgumentPlaceholder: \"Unexpected argument placeholder\",\n  UnexpectedAwaitAfterPipelineBody: 'Unexpected \"await\" after pipeline body; await must have parentheses in minimal proposal',\n  UnexpectedDigitAfterHash: \"Unexpected digit after hash token\",\n  UnexpectedImportExport: \"'import' and 'export' may only appear at the top level\",\n  UnexpectedKeyword: \"Unexpected keyword '%0'\",\n  UnexpectedLeadingDecorator: \"Leading decorators must be attached to a class declaration\",\n  UnexpectedLexicalDeclaration: \"Lexical declaration cannot appear in a single-statement context\",\n  UnexpectedNewTarget: \"new.target can only be used in functions\",\n  UnexpectedNumericSeparator: \"A numeric separator is only allowed between two digits\",\n  UnexpectedPrivateField: \"Private names can only be used as the name of a class element (i.e. class C { #p = 42; #m() {} } )\\n or a property of member expression (i.e. this.#p).\",\n  UnexpectedReservedWord: \"Unexpected reserved word '%0'\",\n  UnexpectedSuper: \"super is only allowed in object methods and classes\",\n  UnexpectedToken: \"Unexpected token '%0'\",\n  UnexpectedTokenUnaryExponentiation: \"Illegal expression. Wrap left hand side or entire exponentiation in parentheses.\",\n  UnsupportedBind: \"Binding should be performed on object property.\",\n  UnsupportedDecoratorExport: \"A decorated export must export a class declaration\",\n  UnsupportedDefaultExport: \"Only expressions, functions or classes are allowed as the `default` export.\",\n  UnsupportedImport: \"import can only be used in import() or import.meta\",\n  UnsupportedMetaProperty: \"The only valid meta property for %0 is %0.%1\",\n  UnsupportedParameterDecorator: \"Decorators cannot be used to decorate parameters\",\n  UnsupportedPropertyDecorator: \"Decorators cannot be used to decorate object literal properties\",\n  UnsupportedSuper: \"super can only be used with function calls (i.e. super()) or in property accesses (i.e. super.prop or super[prop])\",\n  UnterminatedComment: \"Unterminated comment\",\n  UnterminatedRegExp: \"Unterminated regular expression\",\n  UnterminatedString: \"Unterminated string constant\",\n  UnterminatedTemplate: \"Unterminated template\",\n  VarRedeclaration: \"Identifier '%0' has already been declared\",\n  YieldBindingIdentifier: \"Can not use 'yield' as identifier inside a generator\",\n  YieldInParameter: \"Yield expression is not allowed in formal parameters\",\n  ZeroDigitNumericSeparator: \"Numeric separator can not be used after leading 0\"\n});\n\nclass ParserError extends CommentsParser {\n  getLocationForPosition(pos) {\n    let loc;\n    if (pos === this.state.start) loc = this.state.startLoc;else if (pos === this.state.lastTokStart) loc = this.state.lastTokStartLoc;else if (pos === this.state.end) loc = this.state.endLoc;else if (pos === this.state.lastTokEnd) loc = this.state.lastTokEndLoc;else loc = getLineInfo(this.input, pos);\n    return loc;\n  }\n\n  raise(pos, errorTemplate, ...params) {\n    return this.raiseWithData(pos, undefined, errorTemplate, ...params);\n  }\n\n  raiseOverwrite(pos, errorTemplate, ...params) {\n    const loc = this.getLocationForPosition(pos);\n    const message = errorTemplate.replace(/%(\\d+)/g, (_, i) => params[i]) + ` (${loc.line}:${loc.column})`;\n\n    if (this.options.errorRecovery) {\n      const errors = this.state.errors;\n\n      for (let i = errors.length - 1; i >= 0; i--) {\n        const error = errors[i];\n\n        if (error.pos === pos) {\n          return Object.assign(error, {\n            message\n          });\n        } else if (error.pos < pos) {\n          break;\n        }\n      }\n    }\n\n    return this._raise({\n      loc,\n      pos\n    }, message);\n  }\n\n  raiseWithData(pos, data, errorTemplate, ...params) {\n    const loc = this.getLocationForPosition(pos);\n    const message = errorTemplate.replace(/%(\\d+)/g, (_, i) => params[i]) + ` (${loc.line}:${loc.column})`;\n    return this._raise(Object.assign({\n      loc,\n      pos\n    }, data), message);\n  }\n\n  _raise(errorContext, message) {\n    const err = new SyntaxError(message);\n    Object.assign(err, errorContext);\n\n    if (this.options.errorRecovery) {\n      if (!this.isLookahead) this.state.errors.push(err);\n      return err;\n    } else {\n      throw err;\n    }\n  }\n\n}\n\nvar estree = (superClass => class extends superClass {\n  estreeParseRegExpLiteral({\n    pattern,\n    flags\n  }) {\n    let regex = null;\n\n    try {\n      regex = new RegExp(pattern, flags);\n    } catch (e) {}\n\n    const node = this.estreeParseLiteral(regex);\n    node.regex = {\n      pattern,\n      flags\n    };\n    return node;\n  }\n\n  estreeParseBigIntLiteral(value) {\n    let bigInt;\n\n    try {\n      bigInt = BigInt(value);\n    } catch (_unused) {\n      bigInt = null;\n    }\n\n    const node = this.estreeParseLiteral(bigInt);\n    node.bigint = String(node.value || value);\n    return node;\n  }\n\n  estreeParseDecimalLiteral(value) {\n    const decimal = null;\n    const node = this.estreeParseLiteral(decimal);\n    node.decimal = String(node.value || value);\n    return node;\n  }\n\n  estreeParseLiteral(value) {\n    return this.parseLiteral(value, \"Literal\");\n  }\n\n  directiveToStmt(directive) {\n    const directiveLiteral = directive.value;\n    const stmt = this.startNodeAt(directive.start, directive.loc.start);\n    const expression = this.startNodeAt(directiveLiteral.start, directiveLiteral.loc.start);\n    expression.value = directiveLiteral.extra.expressionValue;\n    expression.raw = directiveLiteral.extra.raw;\n    stmt.expression = this.finishNodeAt(expression, \"Literal\", directiveLiteral.end, directiveLiteral.loc.end);\n    stmt.directive = directiveLiteral.extra.raw.slice(1, -1);\n    return this.finishNodeAt(stmt, \"ExpressionStatement\", directive.end, directive.loc.end);\n  }\n\n  initFunction(node, isAsync) {\n    super.initFunction(node, isAsync);\n    node.expression = false;\n  }\n\n  checkDeclaration(node) {\n    if (node != null && this.isObjectProperty(node)) {\n      this.checkDeclaration(node.value);\n    } else {\n      super.checkDeclaration(node);\n    }\n  }\n\n  getObjectOrClassMethodParams(method) {\n    return method.value.params;\n  }\n\n  isValidDirective(stmt) {\n    var _stmt$expression$extr;\n\n    return stmt.type === \"ExpressionStatement\" && stmt.expression.type === \"Literal\" && typeof stmt.expression.value === \"string\" && !((_stmt$expression$extr = stmt.expression.extra) != null && _stmt$expression$extr.parenthesized);\n  }\n\n  stmtToDirective(stmt) {\n    const directive = super.stmtToDirective(stmt);\n    const value = stmt.expression.value;\n    this.addExtra(directive.value, \"expressionValue\", value);\n    return directive;\n  }\n\n  parseBlockBody(node, ...args) {\n    super.parseBlockBody(node, ...args);\n    const directiveStatements = node.directives.map(d => this.directiveToStmt(d));\n    node.body = directiveStatements.concat(node.body);\n    delete node.directives;\n  }\n\n  pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper) {\n    this.parseMethod(method, isGenerator, isAsync, isConstructor, allowsDirectSuper, \"ClassMethod\", true);\n\n    if (method.typeParameters) {\n      method.value.typeParameters = method.typeParameters;\n      delete method.typeParameters;\n    }\n\n    classBody.body.push(method);\n  }\n\n  parseExprAtom(refExpressionErrors) {\n    switch (this.state.type) {\n      case types.num:\n      case types.string:\n        return this.estreeParseLiteral(this.state.value);\n\n      case types.regexp:\n        return this.estreeParseRegExpLiteral(this.state.value);\n\n      case types.bigint:\n        return this.estreeParseBigIntLiteral(this.state.value);\n\n      case types.decimal:\n        return this.estreeParseDecimalLiteral(this.state.value);\n\n      case types._null:\n        return this.estreeParseLiteral(null);\n\n      case types._true:\n        return this.estreeParseLiteral(true);\n\n      case types._false:\n        return this.estreeParseLiteral(false);\n\n      default:\n        return super.parseExprAtom(refExpressionErrors);\n    }\n  }\n\n  parseMaybePrivateName(...args) {\n    const node = super.parseMaybePrivateName(...args);\n\n    if (node.type === \"PrivateName\" && this.getPluginOption(\"estree\", \"classFeatures\")) {\n      return this.convertPrivateNameToPrivateIdentifier(node);\n    }\n\n    return node;\n  }\n\n  convertPrivateNameToPrivateIdentifier(node) {\n    const name = super.getPrivateNameSV(node);\n    node = node;\n    delete node.id;\n    node.name = name;\n    node.type = \"PrivateIdentifier\";\n    return node;\n  }\n\n  isPrivateName(node) {\n    if (!this.getPluginOption(\"estree\", \"classFeatures\")) {\n      return super.isPrivateName(node);\n    }\n\n    return node.type === \"PrivateIdentifier\";\n  }\n\n  getPrivateNameSV(node) {\n    if (!this.getPluginOption(\"estree\", \"classFeatures\")) {\n      return super.getPrivateNameSV(node);\n    }\n\n    return node.name;\n  }\n\n  parseLiteral(value, type, startPos, startLoc) {\n    const node = super.parseLiteral(value, type, startPos, startLoc);\n    node.raw = node.extra.raw;\n    delete node.extra;\n    return node;\n  }\n\n  parseFunctionBody(node, allowExpression, isMethod = false) {\n    super.parseFunctionBody(node, allowExpression, isMethod);\n    node.expression = node.body.type !== \"BlockStatement\";\n  }\n\n  parseMethod(node, isGenerator, isAsync, isConstructor, allowDirectSuper, type, inClassScope = false) {\n    let funcNode = this.startNode();\n    funcNode.kind = node.kind;\n    funcNode = super.parseMethod(funcNode, isGenerator, isAsync, isConstructor, allowDirectSuper, type, inClassScope);\n    funcNode.type = \"FunctionExpression\";\n    delete funcNode.kind;\n    node.value = funcNode;\n\n    if (type === \"ClassPrivateMethod\") {\n      node.computed = false;\n    }\n\n    type = \"MethodDefinition\";\n    return this.finishNode(node, type);\n  }\n\n  parseClassProperty(...args) {\n    const propertyNode = super.parseClassProperty(...args);\n\n    if (this.getPluginOption(\"estree\", \"classFeatures\")) {\n      propertyNode.type = \"PropertyDefinition\";\n    }\n\n    return propertyNode;\n  }\n\n  parseClassPrivateProperty(...args) {\n    const propertyNode = super.parseClassPrivateProperty(...args);\n\n    if (this.getPluginOption(\"estree\", \"classFeatures\")) {\n      propertyNode.type = \"PropertyDefinition\";\n      propertyNode.computed = false;\n    }\n\n    return propertyNode;\n  }\n\n  parseObjectMethod(prop, isGenerator, isAsync, isPattern, isAccessor) {\n    const node = super.parseObjectMethod(prop, isGenerator, isAsync, isPattern, isAccessor);\n\n    if (node) {\n      node.type = \"Property\";\n      if (node.kind === \"method\") node.kind = \"init\";\n      node.shorthand = false;\n    }\n\n    return node;\n  }\n\n  parseObjectProperty(prop, startPos, startLoc, isPattern, refExpressionErrors) {\n    const node = super.parseObjectProperty(prop, startPos, startLoc, isPattern, refExpressionErrors);\n\n    if (node) {\n      node.kind = \"init\";\n      node.type = \"Property\";\n    }\n\n    return node;\n  }\n\n  toAssignable(node, isLHS = false) {\n    if (node != null && this.isObjectProperty(node)) {\n      this.toAssignable(node.value, isLHS);\n      return node;\n    }\n\n    return super.toAssignable(node, isLHS);\n  }\n\n  toAssignableObjectExpressionProp(prop, ...args) {\n    if (prop.kind === \"get\" || prop.kind === \"set\") {\n      this.raise(prop.key.start, ErrorMessages.PatternHasAccessor);\n    } else if (prop.method) {\n      this.raise(prop.key.start, ErrorMessages.PatternHasMethod);\n    } else {\n      super.toAssignableObjectExpressionProp(prop, ...args);\n    }\n  }\n\n  finishCallExpression(node, optional) {\n    super.finishCallExpression(node, optional);\n\n    if (node.callee.type === \"Import\") {\n      node.type = \"ImportExpression\";\n      node.source = node.arguments[0];\n      delete node.arguments;\n      delete node.callee;\n    }\n\n    return node;\n  }\n\n  toReferencedArguments(node) {\n    if (node.type === \"ImportExpression\") {\n      return;\n    }\n\n    super.toReferencedArguments(node);\n  }\n\n  parseExport(node) {\n    super.parseExport(node);\n\n    switch (node.type) {\n      case \"ExportAllDeclaration\":\n        node.exported = null;\n        break;\n\n      case \"ExportNamedDeclaration\":\n        if (node.specifiers.length === 1 && node.specifiers[0].type === \"ExportNamespaceSpecifier\") {\n          node.type = \"ExportAllDeclaration\";\n          node.exported = node.specifiers[0].exported;\n          delete node.specifiers;\n        }\n\n        break;\n    }\n\n    return node;\n  }\n\n  parseSubscript(base, startPos, startLoc, noCalls, state) {\n    const node = super.parseSubscript(base, startPos, startLoc, noCalls, state);\n\n    if (state.optionalChainMember) {\n      if (node.type === \"OptionalMemberExpression\" || node.type === \"OptionalCallExpression\") {\n        node.type = node.type.substring(8);\n      }\n\n      if (state.stop) {\n        const chain = this.startNodeAtNode(node);\n        chain.expression = node;\n        return this.finishNode(chain, \"ChainExpression\");\n      }\n    } else if (node.type === \"MemberExpression\" || node.type === \"CallExpression\") {\n      node.optional = false;\n    }\n\n    return node;\n  }\n\n  hasPropertyAsPrivateName(node) {\n    if (node.type === \"ChainExpression\") {\n      node = node.expression;\n    }\n\n    return super.hasPropertyAsPrivateName(node);\n  }\n\n  isOptionalChain(node) {\n    return node.type === \"ChainExpression\";\n  }\n\n  isObjectProperty(node) {\n    return node.type === \"Property\" && node.kind === \"init\" && !node.method;\n  }\n\n  isObjectMethod(node) {\n    return node.method || node.kind === \"get\" || node.kind === \"set\";\n  }\n\n});\n\nclass TokContext {\n  constructor(token, isExpr, preserveSpace, override) {\n    this.token = void 0;\n    this.isExpr = void 0;\n    this.preserveSpace = void 0;\n    this.override = void 0;\n    this.token = token;\n    this.isExpr = !!isExpr;\n    this.preserveSpace = !!preserveSpace;\n    this.override = override;\n  }\n\n}\nconst types$1 = {\n  braceStatement: new TokContext(\"{\", false),\n  braceExpression: new TokContext(\"{\", true),\n  recordExpression: new TokContext(\"#{\", true),\n  templateQuasi: new TokContext(\"${\", false),\n  parenStatement: new TokContext(\"(\", false),\n  parenExpression: new TokContext(\"(\", true),\n  template: new TokContext(\"`\", true, true, p => p.readTmplToken()),\n  functionExpression: new TokContext(\"function\", true),\n  functionStatement: new TokContext(\"function\", false)\n};\n\ntypes.parenR.updateContext = types.braceR.updateContext = function () {\n  if (this.state.context.length === 1) {\n    this.state.exprAllowed = true;\n    return;\n  }\n\n  let out = this.state.context.pop();\n\n  if (out === types$1.braceStatement && this.curContext().token === \"function\") {\n    out = this.state.context.pop();\n  }\n\n  this.state.exprAllowed = !out.isExpr;\n};\n\ntypes.name.updateContext = function (prevType) {\n  let allowed = false;\n\n  if (prevType !== types.dot) {\n    if (this.state.value === \"of\" && !this.state.exprAllowed && prevType !== types._function && prevType !== types._class) {\n      allowed = true;\n    }\n  }\n\n  this.state.exprAllowed = allowed;\n\n  if (this.state.isIterator) {\n    this.state.isIterator = false;\n  }\n};\n\ntypes.braceL.updateContext = function (prevType) {\n  this.state.context.push(this.braceIsBlock(prevType) ? types$1.braceStatement : types$1.braceExpression);\n  this.state.exprAllowed = true;\n};\n\ntypes.dollarBraceL.updateContext = function () {\n  this.state.context.push(types$1.templateQuasi);\n  this.state.exprAllowed = true;\n};\n\ntypes.parenL.updateContext = function (prevType) {\n  const statementParens = prevType === types._if || prevType === types._for || prevType === types._with || prevType === types._while;\n  this.state.context.push(statementParens ? types$1.parenStatement : types$1.parenExpression);\n  this.state.exprAllowed = true;\n};\n\ntypes.incDec.updateContext = function () {};\n\ntypes._function.updateContext = types._class.updateContext = function (prevType) {\n  if (prevType.beforeExpr && prevType !== types.semi && prevType !== types._else && !(prevType === types._return && this.hasPrecedingLineBreak()) && !((prevType === types.colon || prevType === types.braceL) && this.curContext() === types$1.b_stat)) {\n    this.state.context.push(types$1.functionExpression);\n  } else {\n    this.state.context.push(types$1.functionStatement);\n  }\n\n  this.state.exprAllowed = false;\n};\n\ntypes.backQuote.updateContext = function () {\n  if (this.curContext() === types$1.template) {\n    this.state.context.pop();\n  } else {\n    this.state.context.push(types$1.template);\n  }\n\n  this.state.exprAllowed = false;\n};\n\ntypes.braceHashL.updateContext = function () {\n  this.state.context.push(types$1.recordExpression);\n  this.state.exprAllowed = true;\n};\n\nlet nonASCIIidentifierStartChars = \"\\xaa\\xb5\\xba\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02c1\\u02c6-\\u02d1\\u02e0-\\u02e4\\u02ec\\u02ee\\u0370-\\u0374\\u0376\\u0377\\u037a-\\u037d\\u037f\\u0386\\u0388-\\u038a\\u038c\\u038e-\\u03a1\\u03a3-\\u03f5\\u03f7-\\u0481\\u048a-\\u052f\\u0531-\\u0556\\u0559\\u0560-\\u0588\\u05d0-\\u05ea\\u05ef-\\u05f2\\u0620-\\u064a\\u066e\\u066f\\u0671-\\u06d3\\u06d5\\u06e5\\u06e6\\u06ee\\u06ef\\u06fa-\\u06fc\\u06ff\\u0710\\u0712-\\u072f\\u074d-\\u07a5\\u07b1\\u07ca-\\u07ea\\u07f4\\u07f5\\u07fa\\u0800-\\u0815\\u081a\\u0824\\u0828\\u0840-\\u0858\\u0860-\\u086a\\u08a0-\\u08b4\\u08b6-\\u08c7\\u0904-\\u0939\\u093d\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098c\\u098f\\u0990\\u0993-\\u09a8\\u09aa-\\u09b0\\u09b2\\u09b6-\\u09b9\\u09bd\\u09ce\\u09dc\\u09dd\\u09df-\\u09e1\\u09f0\\u09f1\\u09fc\\u0a05-\\u0a0a\\u0a0f\\u0a10\\u0a13-\\u0a28\\u0a2a-\\u0a30\\u0a32\\u0a33\\u0a35\\u0a36\\u0a38\\u0a39\\u0a59-\\u0a5c\\u0a5e\\u0a72-\\u0a74\\u0a85-\\u0a8d\\u0a8f-\\u0a91\\u0a93-\\u0aa8\\u0aaa-\\u0ab0\\u0ab2\\u0ab3\\u0ab5-\\u0ab9\\u0abd\\u0ad0\\u0ae0\\u0ae1\\u0af9\\u0b05-\\u0b0c\\u0b0f\\u0b10\\u0b13-\\u0b28\\u0b2a-\\u0b30\\u0b32\\u0b33\\u0b35-\\u0b39\\u0b3d\\u0b5c\\u0b5d\\u0b5f-\\u0b61\\u0b71\\u0b83\\u0b85-\\u0b8a\\u0b8e-\\u0b90\\u0b92-\\u0b95\\u0b99\\u0b9a\\u0b9c\\u0b9e\\u0b9f\\u0ba3\\u0ba4\\u0ba8-\\u0baa\\u0bae-\\u0bb9\\u0bd0\\u0c05-\\u0c0c\\u0c0e-\\u0c10\\u0c12-\\u0c28\\u0c2a-\\u0c39\\u0c3d\\u0c58-\\u0c5a\\u0c60\\u0c61\\u0c80\\u0c85-\\u0c8c\\u0c8e-\\u0c90\\u0c92-\\u0ca8\\u0caa-\\u0cb3\\u0cb5-\\u0cb9\\u0cbd\\u0cde\\u0ce0\\u0ce1\\u0cf1\\u0cf2\\u0d04-\\u0d0c\\u0d0e-\\u0d10\\u0d12-\\u0d3a\\u0d3d\\u0d4e\\u0d54-\\u0d56\\u0d5f-\\u0d61\\u0d7a-\\u0d7f\\u0d85-\\u0d96\\u0d9a-\\u0db1\\u0db3-\\u0dbb\\u0dbd\\u0dc0-\\u0dc6\\u0e01-\\u0e30\\u0e32\\u0e33\\u0e40-\\u0e46\\u0e81\\u0e82\\u0e84\\u0e86-\\u0e8a\\u0e8c-\\u0ea3\\u0ea5\\u0ea7-\\u0eb0\\u0eb2\\u0eb3\\u0ebd\\u0ec0-\\u0ec4\\u0ec6\\u0edc-\\u0edf\\u0f00\\u0f40-\\u0f47\\u0f49-\\u0f6c\\u0f88-\\u0f8c\\u1000-\\u102a\\u103f\\u1050-\\u1055\\u105a-\\u105d\\u1061\\u1065\\u1066\\u106e-\\u1070\\u1075-\\u1081\\u108e\\u10a0-\\u10c5\\u10c7\\u10cd\\u10d0-\\u10fa\\u10fc-\\u1248\\u124a-\\u124d\\u1250-\\u1256\\u1258\\u125a-\\u125d\\u1260-\\u1288\\u128a-\\u128d\\u1290-\\u12b0\\u12b2-\\u12b5\\u12b8-\\u12be\\u12c0\\u12c2-\\u12c5\\u12c8-\\u12d6\\u12d8-\\u1310\\u1312-\\u1315\\u1318-\\u135a\\u1380-\\u138f\\u13a0-\\u13f5\\u13f8-\\u13fd\\u1401-\\u166c\\u166f-\\u167f\\u1681-\\u169a\\u16a0-\\u16ea\\u16ee-\\u16f8\\u1700-\\u170c\\u170e-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176c\\u176e-\\u1770\\u1780-\\u17b3\\u17d7\\u17dc\\u1820-\\u1878\\u1880-\\u18a8\\u18aa\\u18b0-\\u18f5\\u1900-\\u191e\\u1950-\\u196d\\u1970-\\u1974\\u1980-\\u19ab\\u19b0-\\u19c9\\u1a00-\\u1a16\\u1a20-\\u1a54\\u1aa7\\u1b05-\\u1b33\\u1b45-\\u1b4b\\u1b83-\\u1ba0\\u1bae\\u1baf\\u1bba-\\u1be5\\u1c00-\\u1c23\\u1c4d-\\u1c4f\\u1c5a-\\u1c7d\\u1c80-\\u1c88\\u1c90-\\u1cba\\u1cbd-\\u1cbf\\u1ce9-\\u1cec\\u1cee-\\u1cf3\\u1cf5\\u1cf6\\u1cfa\\u1d00-\\u1dbf\\u1e00-\\u1f15\\u1f18-\\u1f1d\\u1f20-\\u1f45\\u1f48-\\u1f4d\\u1f50-\\u1f57\\u1f59\\u1f5b\\u1f5d\\u1f5f-\\u1f7d\\u1f80-\\u1fb4\\u1fb6-\\u1fbc\\u1fbe\\u1fc2-\\u1fc4\\u1fc6-\\u1fcc\\u1fd0-\\u1fd3\\u1fd6-\\u1fdb\\u1fe0-\\u1fec\\u1ff2-\\u1ff4\\u1ff6-\\u1ffc\\u2071\\u207f\\u2090-\\u209c\\u2102\\u2107\\u210a-\\u2113\\u2115\\u2118-\\u211d\\u2124\\u2126\\u2128\\u212a-\\u2139\\u213c-\\u213f\\u2145-\\u2149\\u214e\\u2160-\\u2188\\u2c00-\\u2c2e\\u2c30-\\u2c5e\\u2c60-\\u2ce4\\u2ceb-\\u2cee\\u2cf2\\u2cf3\\u2d00-\\u2d25\\u2d27\\u2d2d\\u2d30-\\u2d67\\u2d6f\\u2d80-\\u2d96\\u2da0-\\u2da6\\u2da8-\\u2dae\\u2db0-\\u2db6\\u2db8-\\u2dbe\\u2dc0-\\u2dc6\\u2dc8-\\u2dce\\u2dd0-\\u2dd6\\u2dd8-\\u2dde\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303c\\u3041-\\u3096\\u309b-\\u309f\\u30a1-\\u30fa\\u30fc-\\u30ff\\u3105-\\u312f\\u3131-\\u318e\\u31a0-\\u31bf\\u31f0-\\u31ff\\u3400-\\u4dbf\\u4e00-\\u9ffc\\ua000-\\ua48c\\ua4d0-\\ua4fd\\ua500-\\ua60c\\ua610-\\ua61f\\ua62a\\ua62b\\ua640-\\ua66e\\ua67f-\\ua69d\\ua6a0-\\ua6ef\\ua717-\\ua71f\\ua722-\\ua788\\ua78b-\\ua7bf\\ua7c2-\\ua7ca\\ua7f5-\\ua801\\ua803-\\ua805\\ua807-\\ua80a\\ua80c-\\ua822\\ua840-\\ua873\\ua882-\\ua8b3\\ua8f2-\\ua8f7\\ua8fb\\ua8fd\\ua8fe\\ua90a-\\ua925\\ua930-\\ua946\\ua960-\\ua97c\\ua984-\\ua9b2\\ua9cf\\ua9e0-\\ua9e4\\ua9e6-\\ua9ef\\ua9fa-\\ua9fe\\uaa00-\\uaa28\\uaa40-\\uaa42\\uaa44-\\uaa4b\\uaa60-\\uaa76\\uaa7a\\uaa7e-\\uaaaf\\uaab1\\uaab5\\uaab6\\uaab9-\\uaabd\\uaac0\\uaac2\\uaadb-\\uaadd\\uaae0-\\uaaea\\uaaf2-\\uaaf4\\uab01-\\uab06\\uab09-\\uab0e\\uab11-\\uab16\\uab20-\\uab26\\uab28-\\uab2e\\uab30-\\uab5a\\uab5c-\\uab69\\uab70-\\uabe2\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\uf900-\\ufa6d\\ufa70-\\ufad9\\ufb00-\\ufb06\\ufb13-\\ufb17\\ufb1d\\ufb1f-\\ufb28\\ufb2a-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40\\ufb41\\ufb43\\ufb44\\ufb46-\\ufbb1\\ufbd3-\\ufd3d\\ufd50-\\ufd8f\\ufd92-\\ufdc7\\ufdf0-\\ufdfb\\ufe70-\\ufe74\\ufe76-\\ufefc\\uff21-\\uff3a\\uff41-\\uff5a\\uff66-\\uffbe\\uffc2-\\uffc7\\uffca-\\uffcf\\uffd2-\\uffd7\\uffda-\\uffdc\";\nlet nonASCIIidentifierChars = \"\\u200c\\u200d\\xb7\\u0300-\\u036f\\u0387\\u0483-\\u0487\\u0591-\\u05bd\\u05bf\\u05c1\\u05c2\\u05c4\\u05c5\\u05c7\\u0610-\\u061a\\u064b-\\u0669\\u0670\\u06d6-\\u06dc\\u06df-\\u06e4\\u06e7\\u06e8\\u06ea-\\u06ed\\u06f0-\\u06f9\\u0711\\u0730-\\u074a\\u07a6-\\u07b0\\u07c0-\\u07c9\\u07eb-\\u07f3\\u07fd\\u0816-\\u0819\\u081b-\\u0823\\u0825-\\u0827\\u0829-\\u082d\\u0859-\\u085b\\u08d3-\\u08e1\\u08e3-\\u0903\\u093a-\\u093c\\u093e-\\u094f\\u0951-\\u0957\\u0962\\u0963\\u0966-\\u096f\\u0981-\\u0983\\u09bc\\u09be-\\u09c4\\u09c7\\u09c8\\u09cb-\\u09cd\\u09d7\\u09e2\\u09e3\\u09e6-\\u09ef\\u09fe\\u0a01-\\u0a03\\u0a3c\\u0a3e-\\u0a42\\u0a47\\u0a48\\u0a4b-\\u0a4d\\u0a51\\u0a66-\\u0a71\\u0a75\\u0a81-\\u0a83\\u0abc\\u0abe-\\u0ac5\\u0ac7-\\u0ac9\\u0acb-\\u0acd\\u0ae2\\u0ae3\\u0ae6-\\u0aef\\u0afa-\\u0aff\\u0b01-\\u0b03\\u0b3c\\u0b3e-\\u0b44\\u0b47\\u0b48\\u0b4b-\\u0b4d\\u0b55-\\u0b57\\u0b62\\u0b63\\u0b66-\\u0b6f\\u0b82\\u0bbe-\\u0bc2\\u0bc6-\\u0bc8\\u0bca-\\u0bcd\\u0bd7\\u0be6-\\u0bef\\u0c00-\\u0c04\\u0c3e-\\u0c44\\u0c46-\\u0c48\\u0c4a-\\u0c4d\\u0c55\\u0c56\\u0c62\\u0c63\\u0c66-\\u0c6f\\u0c81-\\u0c83\\u0cbc\\u0cbe-\\u0cc4\\u0cc6-\\u0cc8\\u0cca-\\u0ccd\\u0cd5\\u0cd6\\u0ce2\\u0ce3\\u0ce6-\\u0cef\\u0d00-\\u0d03\\u0d3b\\u0d3c\\u0d3e-\\u0d44\\u0d46-\\u0d48\\u0d4a-\\u0d4d\\u0d57\\u0d62\\u0d63\\u0d66-\\u0d6f\\u0d81-\\u0d83\\u0dca\\u0dcf-\\u0dd4\\u0dd6\\u0dd8-\\u0ddf\\u0de6-\\u0def\\u0df2\\u0df3\\u0e31\\u0e34-\\u0e3a\\u0e47-\\u0e4e\\u0e50-\\u0e59\\u0eb1\\u0eb4-\\u0ebc\\u0ec8-\\u0ecd\\u0ed0-\\u0ed9\\u0f18\\u0f19\\u0f20-\\u0f29\\u0f35\\u0f37\\u0f39\\u0f3e\\u0f3f\\u0f71-\\u0f84\\u0f86\\u0f87\\u0f8d-\\u0f97\\u0f99-\\u0fbc\\u0fc6\\u102b-\\u103e\\u1040-\\u1049\\u1056-\\u1059\\u105e-\\u1060\\u1062-\\u1064\\u1067-\\u106d\\u1071-\\u1074\\u1082-\\u108d\\u108f-\\u109d\\u135d-\\u135f\\u1369-\\u1371\\u1712-\\u1714\\u1732-\\u1734\\u1752\\u1753\\u1772\\u1773\\u17b4-\\u17d3\\u17dd\\u17e0-\\u17e9\\u180b-\\u180d\\u1810-\\u1819\\u18a9\\u1920-\\u192b\\u1930-\\u193b\\u1946-\\u194f\\u19d0-\\u19da\\u1a17-\\u1a1b\\u1a55-\\u1a5e\\u1a60-\\u1a7c\\u1a7f-\\u1a89\\u1a90-\\u1a99\\u1ab0-\\u1abd\\u1abf\\u1ac0\\u1b00-\\u1b04\\u1b34-\\u1b44\\u1b50-\\u1b59\\u1b6b-\\u1b73\\u1b80-\\u1b82\\u1ba1-\\u1bad\\u1bb0-\\u1bb9\\u1be6-\\u1bf3\\u1c24-\\u1c37\\u1c40-\\u1c49\\u1c50-\\u1c59\\u1cd0-\\u1cd2\\u1cd4-\\u1ce8\\u1ced\\u1cf4\\u1cf7-\\u1cf9\\u1dc0-\\u1df9\\u1dfb-\\u1dff\\u203f\\u2040\\u2054\\u20d0-\\u20dc\\u20e1\\u20e5-\\u20f0\\u2cef-\\u2cf1\\u2d7f\\u2de0-\\u2dff\\u302a-\\u302f\\u3099\\u309a\\ua620-\\ua629\\ua66f\\ua674-\\ua67d\\ua69e\\ua69f\\ua6f0\\ua6f1\\ua802\\ua806\\ua80b\\ua823-\\ua827\\ua82c\\ua880\\ua881\\ua8b4-\\ua8c5\\ua8d0-\\ua8d9\\ua8e0-\\ua8f1\\ua8ff-\\ua909\\ua926-\\ua92d\\ua947-\\ua953\\ua980-\\ua983\\ua9b3-\\ua9c0\\ua9d0-\\ua9d9\\ua9e5\\ua9f0-\\ua9f9\\uaa29-\\uaa36\\uaa43\\uaa4c\\uaa4d\\uaa50-\\uaa59\\uaa7b-\\uaa7d\\uaab0\\uaab2-\\uaab4\\uaab7\\uaab8\\uaabe\\uaabf\\uaac1\\uaaeb-\\uaaef\\uaaf5\\uaaf6\\uabe3-\\uabea\\uabec\\uabed\\uabf0-\\uabf9\\ufb1e\\ufe00-\\ufe0f\\ufe20-\\ufe2f\\ufe33\\ufe34\\ufe4d-\\ufe4f\\uff10-\\uff19\\uff3f\";\nconst nonASCIIidentifierStart = new RegExp(\"[\" + nonASCIIidentifierStartChars + \"]\");\nconst nonASCIIidentifier = new RegExp(\"[\" + nonASCIIidentifierStartChars + nonASCIIidentifierChars + \"]\");\nnonASCIIidentifierStartChars = nonASCIIidentifierChars = null;\nconst astralIdentifierStartCodes = [0, 11, 2, 25, 2, 18, 2, 1, 2, 14, 3, 13, 35, 122, 70, 52, 268, 28, 4, 48, 48, 31, 14, 29, 6, 37, 11, 29, 3, 35, 5, 7, 2, 4, 43, 157, 19, 35, 5, 35, 5, 39, 9, 51, 157, 310, 10, 21, 11, 7, 153, 5, 3, 0, 2, 43, 2, 1, 4, 0, 3, 22, 11, 22, 10, 30, 66, 18, 2, 1, 11, 21, 11, 25, 71, 55, 7, 1, 65, 0, 16, 3, 2, 2, 2, 28, 43, 28, 4, 28, 36, 7, 2, 27, 28, 53, 11, 21, 11, 18, 14, 17, 111, 72, 56, 50, 14, 50, 14, 35, 349, 41, 7, 1, 79, 28, 11, 0, 9, 21, 107, 20, 28, 22, 13, 52, 76, 44, 33, 24, 27, 35, 30, 0, 3, 0, 9, 34, 4, 0, 13, 47, 15, 3, 22, 0, 2, 0, 36, 17, 2, 24, 85, 6, 2, 0, 2, 3, 2, 14, 2, 9, 8, 46, 39, 7, 3, 1, 3, 21, 2, 6, 2, 1, 2, 4, 4, 0, 19, 0, 13, 4, 159, 52, 19, 3, 21, 2, 31, 47, 21, 1, 2, 0, 185, 46, 42, 3, 37, 47, 21, 0, 60, 42, 14, 0, 72, 26, 230, 43, 117, 63, 32, 7, 3, 0, 3, 7, 2, 1, 2, 23, 16, 0, 2, 0, 95, 7, 3, 38, 17, 0, 2, 0, 29, 0, 11, 39, 8, 0, 22, 0, 12, 45, 20, 0, 35, 56, 264, 8, 2, 36, 18, 0, 50, 29, 113, 6, 2, 1, 2, 37, 22, 0, 26, 5, 2, 1, 2, 31, 15, 0, 328, 18, 190, 0, 80, 921, 103, 110, 18, 195, 2749, 1070, 4050, 582, 8634, 568, 8, 30, 114, 29, 19, 47, 17, 3, 32, 20, 6, 18, 689, 63, 129, 74, 6, 0, 67, 12, 65, 1, 2, 0, 29, 6135, 9, 1237, 43, 8, 8952, 286, 50, 2, 18, 3, 9, 395, 2309, 106, 6, 12, 4, 8, 8, 9, 5991, 84, 2, 70, 2, 1, 3, 0, 3, 1, 3, 3, 2, 11, 2, 0, 2, 6, 2, 64, 2, 3, 3, 7, 2, 6, 2, 27, 2, 3, 2, 4, 2, 0, 4, 6, 2, 339, 3, 24, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 7, 2357, 44, 11, 6, 17, 0, 370, 43, 1301, 196, 60, 67, 8, 0, 1205, 3, 2, 26, 2, 1, 2, 0, 3, 0, 2, 9, 2, 3, 2, 0, 2, 0, 7, 0, 5, 0, 2, 0, 2, 0, 2, 2, 2, 1, 2, 0, 3, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 1, 2, 0, 3, 3, 2, 6, 2, 3, 2, 3, 2, 0, 2, 9, 2, 16, 6, 2, 2, 4, 2, 16, 4421, 42717, 35, 4148, 12, 221, 3, 5761, 15, 7472, 3104, 541, 1507, 4938];\nconst astralIdentifierCodes = [509, 0, 227, 0, 150, 4, 294, 9, 1368, 2, 2, 1, 6, 3, 41, 2, 5, 0, 166, 1, 574, 3, 9, 9, 370, 1, 154, 10, 176, 2, 54, 14, 32, 9, 16, 3, 46, 10, 54, 9, 7, 2, 37, 13, 2, 9, 6, 1, 45, 0, 13, 2, 49, 13, 9, 3, 2, 11, 83, 11, 7, 0, 161, 11, 6, 9, 7, 3, 56, 1, 2, 6, 3, 1, 3, 2, 10, 0, 11, 1, 3, 6, 4, 4, 193, 17, 10, 9, 5, 0, 82, 19, 13, 9, 214, 6, 3, 8, 28, 1, 83, 16, 16, 9, 82, 12, 9, 9, 84, 14, 5, 9, 243, 14, 166, 9, 71, 5, 2, 1, 3, 3, 2, 0, 2, 1, 13, 9, 120, 6, 3, 6, 4, 0, 29, 9, 41, 6, 2, 3, 9, 0, 10, 10, 47, 15, 406, 7, 2, 7, 17, 9, 57, 21, 2, 13, 123, 5, 4, 0, 2, 1, 2, 6, 2, 0, 9, 9, 49, 4, 2, 1, 2, 4, 9, 9, 330, 3, 19306, 9, 135, 4, 60, 6, 26, 9, 1014, 0, 2, 54, 8, 3, 82, 0, 12, 1, 19628, 1, 5319, 4, 4, 5, 9, 7, 3, 6, 31, 3, 149, 2, 1418, 49, 513, 54, 5, 49, 9, 0, 15, 0, 23, 4, 2, 14, 1361, 6, 2, 16, 3, 6, 2, 1, 2, 4, 262, 6, 10, 9, 419, 13, 1495, 6, 110, 6, 6, 9, 4759, 9, 787719, 239];\n\nfunction isInAstralSet(code, set) {\n  let pos = 0x10000;\n\n  for (let i = 0, length = set.length; i < length; i += 2) {\n    pos += set[i];\n    if (pos > code) return false;\n    pos += set[i + 1];\n    if (pos >= code) return true;\n  }\n\n  return false;\n}\n\nfunction isIdentifierStart(code) {\n  if (code < 65) return code === 36;\n  if (code <= 90) return true;\n  if (code < 97) return code === 95;\n  if (code <= 122) return true;\n\n  if (code <= 0xffff) {\n    return code >= 0xaa && nonASCIIidentifierStart.test(String.fromCharCode(code));\n  }\n\n  return isInAstralSet(code, astralIdentifierStartCodes);\n}\nfunction isIdentifierChar(code) {\n  if (code < 48) return code === 36;\n  if (code < 58) return true;\n  if (code < 65) return false;\n  if (code <= 90) return true;\n  if (code < 97) return code === 95;\n  if (code <= 122) return true;\n\n  if (code <= 0xffff) {\n    return code >= 0xaa && nonASCIIidentifier.test(String.fromCharCode(code));\n  }\n\n  return isInAstralSet(code, astralIdentifierStartCodes) || isInAstralSet(code, astralIdentifierCodes);\n}\n\nconst reservedWords = {\n  keyword: [\"break\", \"case\", \"catch\", \"continue\", \"debugger\", \"default\", \"do\", \"else\", \"finally\", \"for\", \"function\", \"if\", \"return\", \"switch\", \"throw\", \"try\", \"var\", \"const\", \"while\", \"with\", \"new\", \"this\", \"super\", \"class\", \"extends\", \"export\", \"import\", \"null\", \"true\", \"false\", \"in\", \"instanceof\", \"typeof\", \"void\", \"delete\"],\n  strict: [\"implements\", \"interface\", \"let\", \"package\", \"private\", \"protected\", \"public\", \"static\", \"yield\"],\n  strictBind: [\"eval\", \"arguments\"]\n};\nconst keywords$1 = new Set(reservedWords.keyword);\nconst reservedWordsStrictSet = new Set(reservedWords.strict);\nconst reservedWordsStrictBindSet = new Set(reservedWords.strictBind);\nfunction isReservedWord(word, inModule) {\n  return inModule && word === \"await\" || word === \"enum\";\n}\nfunction isStrictReservedWord(word, inModule) {\n  return isReservedWord(word, inModule) || reservedWordsStrictSet.has(word);\n}\nfunction isStrictBindOnlyReservedWord(word) {\n  return reservedWordsStrictBindSet.has(word);\n}\nfunction isStrictBindReservedWord(word, inModule) {\n  return isStrictReservedWord(word, inModule) || isStrictBindOnlyReservedWord(word);\n}\nfunction isKeyword(word) {\n  return keywords$1.has(word);\n}\n\nconst keywordRelationalOperator = /^in(stanceof)?$/;\nfunction isIteratorStart(current, next) {\n  return current === 64 && next === 64;\n}\n\nconst SCOPE_OTHER = 0b000000000,\n      SCOPE_PROGRAM = 0b000000001,\n      SCOPE_FUNCTION = 0b000000010,\n      SCOPE_ARROW = 0b000000100,\n      SCOPE_SIMPLE_CATCH = 0b000001000,\n      SCOPE_SUPER = 0b000010000,\n      SCOPE_DIRECT_SUPER = 0b000100000,\n      SCOPE_CLASS = 0b001000000,\n      SCOPE_STATIC_BLOCK = 0b010000000,\n      SCOPE_TS_MODULE = 0b100000000,\n      SCOPE_VAR = SCOPE_PROGRAM | SCOPE_FUNCTION | SCOPE_TS_MODULE;\nconst BIND_KIND_VALUE = 0b000000000001,\n      BIND_KIND_TYPE = 0b000000000010,\n      BIND_SCOPE_VAR = 0b000000000100,\n      BIND_SCOPE_LEXICAL = 0b000000001000,\n      BIND_SCOPE_FUNCTION = 0b000000010000,\n      BIND_FLAGS_NONE = 0b000001000000,\n      BIND_FLAGS_CLASS = 0b000010000000,\n      BIND_FLAGS_TS_ENUM = 0b000100000000,\n      BIND_FLAGS_TS_CONST_ENUM = 0b001000000000,\n      BIND_FLAGS_TS_EXPORT_ONLY = 0b010000000000,\n      BIND_FLAGS_FLOW_DECLARE_FN = 0b100000000000;\nconst BIND_CLASS = BIND_KIND_VALUE | BIND_KIND_TYPE | BIND_SCOPE_LEXICAL | BIND_FLAGS_CLASS,\n      BIND_LEXICAL = BIND_KIND_VALUE | 0 | BIND_SCOPE_LEXICAL | 0,\n      BIND_VAR = BIND_KIND_VALUE | 0 | BIND_SCOPE_VAR | 0,\n      BIND_FUNCTION = BIND_KIND_VALUE | 0 | BIND_SCOPE_FUNCTION | 0,\n      BIND_TS_INTERFACE = 0 | BIND_KIND_TYPE | 0 | BIND_FLAGS_CLASS,\n      BIND_TS_TYPE = 0 | BIND_KIND_TYPE | 0 | 0,\n      BIND_TS_ENUM = BIND_KIND_VALUE | BIND_KIND_TYPE | BIND_SCOPE_LEXICAL | BIND_FLAGS_TS_ENUM,\n      BIND_TS_AMBIENT = 0 | 0 | 0 | BIND_FLAGS_TS_EXPORT_ONLY,\n      BIND_NONE = 0 | 0 | 0 | BIND_FLAGS_NONE,\n      BIND_OUTSIDE = BIND_KIND_VALUE | 0 | 0 | BIND_FLAGS_NONE,\n      BIND_TS_CONST_ENUM = BIND_TS_ENUM | BIND_FLAGS_TS_CONST_ENUM,\n      BIND_TS_NAMESPACE = 0 | 0 | 0 | BIND_FLAGS_TS_EXPORT_ONLY,\n      BIND_FLOW_DECLARE_FN = BIND_FLAGS_FLOW_DECLARE_FN;\nconst CLASS_ELEMENT_FLAG_STATIC = 0b100,\n      CLASS_ELEMENT_KIND_GETTER = 0b010,\n      CLASS_ELEMENT_KIND_SETTER = 0b001,\n      CLASS_ELEMENT_KIND_ACCESSOR = CLASS_ELEMENT_KIND_GETTER | CLASS_ELEMENT_KIND_SETTER;\nconst CLASS_ELEMENT_STATIC_GETTER = CLASS_ELEMENT_KIND_GETTER | CLASS_ELEMENT_FLAG_STATIC,\n      CLASS_ELEMENT_STATIC_SETTER = CLASS_ELEMENT_KIND_SETTER | CLASS_ELEMENT_FLAG_STATIC,\n      CLASS_ELEMENT_INSTANCE_GETTER = CLASS_ELEMENT_KIND_GETTER,\n      CLASS_ELEMENT_INSTANCE_SETTER = CLASS_ELEMENT_KIND_SETTER,\n      CLASS_ELEMENT_OTHER = 0;\n\nclass Scope {\n  constructor(flags) {\n    this.flags = void 0;\n    this.var = [];\n    this.lexical = [];\n    this.functions = [];\n    this.flags = flags;\n  }\n\n}\nclass ScopeHandler {\n  constructor(raise, inModule) {\n    this.scopeStack = [];\n    this.undefinedExports = new Map();\n    this.undefinedPrivateNames = new Map();\n    this.raise = raise;\n    this.inModule = inModule;\n  }\n\n  get inFunction() {\n    return (this.currentVarScope().flags & SCOPE_FUNCTION) > 0;\n  }\n\n  get allowSuper() {\n    return (this.currentThisScope().flags & SCOPE_SUPER) > 0;\n  }\n\n  get allowDirectSuper() {\n    return (this.currentThisScope().flags & SCOPE_DIRECT_SUPER) > 0;\n  }\n\n  get inClass() {\n    return (this.currentThisScope().flags & SCOPE_CLASS) > 0;\n  }\n\n  get inStaticBlock() {\n    return (this.currentThisScope().flags & SCOPE_STATIC_BLOCK) > 0;\n  }\n\n  get inNonArrowFunction() {\n    return (this.currentThisScope().flags & SCOPE_FUNCTION) > 0;\n  }\n\n  get treatFunctionsAsVar() {\n    return this.treatFunctionsAsVarInScope(this.currentScope());\n  }\n\n  createScope(flags) {\n    return new Scope(flags);\n  }\n\n  enter(flags) {\n    this.scopeStack.push(this.createScope(flags));\n  }\n\n  exit() {\n    this.scopeStack.pop();\n  }\n\n  treatFunctionsAsVarInScope(scope) {\n    return !!(scope.flags & SCOPE_FUNCTION || !this.inModule && scope.flags & SCOPE_PROGRAM);\n  }\n\n  declareName(name, bindingType, pos) {\n    let scope = this.currentScope();\n\n    if (bindingType & BIND_SCOPE_LEXICAL || bindingType & BIND_SCOPE_FUNCTION) {\n      this.checkRedeclarationInScope(scope, name, bindingType, pos);\n\n      if (bindingType & BIND_SCOPE_FUNCTION) {\n        scope.functions.push(name);\n      } else {\n        scope.lexical.push(name);\n      }\n\n      if (bindingType & BIND_SCOPE_LEXICAL) {\n        this.maybeExportDefined(scope, name);\n      }\n    } else if (bindingType & BIND_SCOPE_VAR) {\n      for (let i = this.scopeStack.length - 1; i >= 0; --i) {\n        scope = this.scopeStack[i];\n        this.checkRedeclarationInScope(scope, name, bindingType, pos);\n        scope.var.push(name);\n        this.maybeExportDefined(scope, name);\n        if (scope.flags & SCOPE_VAR) break;\n      }\n    }\n\n    if (this.inModule && scope.flags & SCOPE_PROGRAM) {\n      this.undefinedExports.delete(name);\n    }\n  }\n\n  maybeExportDefined(scope, name) {\n    if (this.inModule && scope.flags & SCOPE_PROGRAM) {\n      this.undefinedExports.delete(name);\n    }\n  }\n\n  checkRedeclarationInScope(scope, name, bindingType, pos) {\n    if (this.isRedeclaredInScope(scope, name, bindingType)) {\n      this.raise(pos, ErrorMessages.VarRedeclaration, name);\n    }\n  }\n\n  isRedeclaredInScope(scope, name, bindingType) {\n    if (!(bindingType & BIND_KIND_VALUE)) return false;\n\n    if (bindingType & BIND_SCOPE_LEXICAL) {\n      return scope.lexical.indexOf(name) > -1 || scope.functions.indexOf(name) > -1 || scope.var.indexOf(name) > -1;\n    }\n\n    if (bindingType & BIND_SCOPE_FUNCTION) {\n      return scope.lexical.indexOf(name) > -1 || !this.treatFunctionsAsVarInScope(scope) && scope.var.indexOf(name) > -1;\n    }\n\n    return scope.lexical.indexOf(name) > -1 && !(scope.flags & SCOPE_SIMPLE_CATCH && scope.lexical[0] === name) || !this.treatFunctionsAsVarInScope(scope) && scope.functions.indexOf(name) > -1;\n  }\n\n  checkLocalExport(id) {\n    if (this.scopeStack[0].lexical.indexOf(id.name) === -1 && this.scopeStack[0].var.indexOf(id.name) === -1 && this.scopeStack[0].functions.indexOf(id.name) === -1) {\n      this.undefinedExports.set(id.name, id.start);\n    }\n  }\n\n  currentScope() {\n    return this.scopeStack[this.scopeStack.length - 1];\n  }\n\n  currentVarScope() {\n    for (let i = this.scopeStack.length - 1;; i--) {\n      const scope = this.scopeStack[i];\n\n      if (scope.flags & SCOPE_VAR) {\n        return scope;\n      }\n    }\n  }\n\n  currentThisScope() {\n    for (let i = this.scopeStack.length - 1;; i--) {\n      const scope = this.scopeStack[i];\n\n      if ((scope.flags & SCOPE_VAR || scope.flags & SCOPE_CLASS) && !(scope.flags & SCOPE_ARROW)) {\n        return scope;\n      }\n    }\n  }\n\n}\n\nclass FlowScope extends Scope {\n  constructor(...args) {\n    super(...args);\n    this.declareFunctions = [];\n  }\n\n}\n\nclass FlowScopeHandler extends ScopeHandler {\n  createScope(flags) {\n    return new FlowScope(flags);\n  }\n\n  declareName(name, bindingType, pos) {\n    const scope = this.currentScope();\n\n    if (bindingType & BIND_FLAGS_FLOW_DECLARE_FN) {\n      this.checkRedeclarationInScope(scope, name, bindingType, pos);\n      this.maybeExportDefined(scope, name);\n      scope.declareFunctions.push(name);\n      return;\n    }\n\n    super.declareName(...arguments);\n  }\n\n  isRedeclaredInScope(scope, name, bindingType) {\n    if (super.isRedeclaredInScope(...arguments)) return true;\n\n    if (bindingType & BIND_FLAGS_FLOW_DECLARE_FN) {\n      return !scope.declareFunctions.includes(name) && (scope.lexical.includes(name) || scope.functions.includes(name));\n    }\n\n    return false;\n  }\n\n  checkLocalExport(id) {\n    if (this.scopeStack[0].declareFunctions.indexOf(id.name) === -1) {\n      super.checkLocalExport(id);\n    }\n  }\n\n}\n\nconst reservedTypes = new Set([\"_\", \"any\", \"bool\", \"boolean\", \"empty\", \"extends\", \"false\", \"interface\", \"mixed\", \"null\", \"number\", \"static\", \"string\", \"true\", \"typeof\", \"void\"]);\nconst FlowErrors = Object.freeze({\n  AmbiguousConditionalArrow: \"Ambiguous expression: wrap the arrow functions in parentheses to disambiguate.\",\n  AmbiguousDeclareModuleKind: \"Found both `declare module.exports` and `declare export` in the same module. Modules can only have 1 since they are either an ES module or they are a CommonJS module\",\n  AssignReservedType: \"Cannot overwrite reserved type %0\",\n  DeclareClassElement: \"The `declare` modifier can only appear on class fields.\",\n  DeclareClassFieldInitializer: \"Initializers are not allowed in fields with the `declare` modifier.\",\n  DuplicateDeclareModuleExports: \"Duplicate `declare module.exports` statement\",\n  EnumBooleanMemberNotInitialized: \"Boolean enum members need to be initialized. Use either `%0 = true,` or `%0 = false,` in enum `%1`.\",\n  EnumDuplicateMemberName: \"Enum member names need to be unique, but the name `%0` has already been used before in enum `%1`.\",\n  EnumInconsistentMemberValues: \"Enum `%0` has inconsistent member initializers. Either use no initializers, or consistently use literals (either booleans, numbers, or strings) for all member initializers.\",\n  EnumInvalidExplicitType: \"Enum type `%1` is not valid. Use one of `boolean`, `number`, `string`, or `symbol` in enum `%0`.\",\n  EnumInvalidExplicitTypeUnknownSupplied: \"Supplied enum type is not valid. Use one of `boolean`, `number`, `string`, or `symbol` in enum `%0`.\",\n  EnumInvalidMemberInitializerPrimaryType: \"Enum `%0` has type `%2`, so the initializer of `%1` needs to be a %2 literal.\",\n  EnumInvalidMemberInitializerSymbolType: \"Symbol enum members cannot be initialized. Use `%1,` in enum `%0`.\",\n  EnumInvalidMemberInitializerUnknownType: \"The enum member initializer for `%1` needs to be a literal (either a boolean, number, or string) in enum `%0`.\",\n  EnumInvalidMemberName: \"Enum member names cannot start with lowercase 'a' through 'z'. Instead of using `%0`, consider using `%1`, in enum `%2`.\",\n  EnumNumberMemberNotInitialized: \"Number enum members need to be initialized, e.g. `%1 = 1` in enum `%0`.\",\n  EnumStringMemberInconsistentlyInitailized: \"String enum members need to consistently either all use initializers, or use no initializers, in enum `%0`.\",\n  GetterMayNotHaveThisParam: \"A getter cannot have a `this` parameter.\",\n  ImportTypeShorthandOnlyInPureImport: \"The `type` and `typeof` keywords on named imports can only be used on regular `import` statements. It cannot be used with `import type` or `import typeof` statements\",\n  InexactInsideExact: \"Explicit inexact syntax cannot appear inside an explicit exact object type\",\n  InexactInsideNonObject: \"Explicit inexact syntax cannot appear in class or interface definitions\",\n  InexactVariance: \"Explicit inexact syntax cannot have variance\",\n  InvalidNonTypeImportInDeclareModule: \"Imports within a `declare module` body must always be `import type` or `import typeof`\",\n  MissingTypeParamDefault: \"Type parameter declaration needs a default, since a preceding type parameter declaration has a default.\",\n  NestedDeclareModule: \"`declare module` cannot be used inside another `declare module`\",\n  NestedFlowComment: \"Cannot have a flow comment inside another flow comment\",\n  OptionalBindingPattern: \"A binding pattern parameter cannot be optional in an implementation signature.\",\n  SetterMayNotHaveThisParam: \"A setter cannot have a `this` parameter.\",\n  SpreadVariance: \"Spread properties cannot have variance\",\n  ThisParamAnnotationRequired: \"A type annotation is required for the `this` parameter.\",\n  ThisParamBannedInConstructor: \"Constructors cannot have a `this` parameter; constructors don't bind `this` like other functions.\",\n  ThisParamMayNotBeOptional: \"The `this` parameter cannot be optional.\",\n  ThisParamMustBeFirst: \"The `this` parameter must be the first function parameter.\",\n  ThisParamNoDefault: \"The `this` parameter may not have a default value.\",\n  TypeBeforeInitializer: \"Type annotations must come before default assignments, e.g. instead of `age = 25: number` use `age: number = 25`\",\n  TypeCastInPattern: \"The type cast expression is expected to be wrapped with parenthesis\",\n  UnexpectedExplicitInexactInObject: \"Explicit inexact syntax must appear at the end of an inexact object\",\n  UnexpectedReservedType: \"Unexpected reserved type %0\",\n  UnexpectedReservedUnderscore: \"`_` is only allowed as a type argument to call or new\",\n  UnexpectedSpaceBetweenModuloChecks: \"Spaces between `%` and `checks` are not allowed here.\",\n  UnexpectedSpreadType: \"Spread operator cannot appear in class or interface definitions\",\n  UnexpectedSubtractionOperand: 'Unexpected token, expected \"number\" or \"bigint\"',\n  UnexpectedTokenAfterTypeParameter: \"Expected an arrow function after this type parameter declaration\",\n  UnexpectedTypeParameterBeforeAsyncArrowFunction: \"Type parameters must come after the async keyword, e.g. instead of `<T> async () => {}`, use `async <T>() => {}`\",\n  UnsupportedDeclareExportKind: \"`declare export %0` is not supported. Use `%1` instead\",\n  UnsupportedStatementInDeclareModule: \"Only declares and type imports are allowed inside declare module\",\n  UnterminatedFlowComment: \"Unterminated flow-comment\"\n});\n\nfunction isEsModuleType(bodyElement) {\n  return bodyElement.type === \"DeclareExportAllDeclaration\" || bodyElement.type === \"DeclareExportDeclaration\" && (!bodyElement.declaration || bodyElement.declaration.type !== \"TypeAlias\" && bodyElement.declaration.type !== \"InterfaceDeclaration\");\n}\n\nfunction hasTypeImportKind(node) {\n  return node.importKind === \"type\" || node.importKind === \"typeof\";\n}\n\nfunction isMaybeDefaultImport(state) {\n  return (state.type === types.name || !!state.type.keyword) && state.value !== \"from\";\n}\n\nconst exportSuggestions = {\n  const: \"declare export var\",\n  let: \"declare export var\",\n  type: \"export type\",\n  interface: \"export interface\"\n};\n\nfunction partition(list, test) {\n  const list1 = [];\n  const list2 = [];\n\n  for (let i = 0; i < list.length; i++) {\n    (test(list[i], i, list) ? list1 : list2).push(list[i]);\n  }\n\n  return [list1, list2];\n}\n\nconst FLOW_PRAGMA_REGEX = /\\*?\\s*@((?:no)?flow)\\b/;\nvar flow = (superClass => class extends superClass {\n  constructor(...args) {\n    super(...args);\n    this.flowPragma = undefined;\n  }\n\n  getScopeHandler() {\n    return FlowScopeHandler;\n  }\n\n  shouldParseTypes() {\n    return this.getPluginOption(\"flow\", \"all\") || this.flowPragma === \"flow\";\n  }\n\n  shouldParseEnums() {\n    return !!this.getPluginOption(\"flow\", \"enums\");\n  }\n\n  finishToken(type, val) {\n    if (type !== types.string && type !== types.semi && type !== types.interpreterDirective) {\n      if (this.flowPragma === undefined) {\n        this.flowPragma = null;\n      }\n    }\n\n    return super.finishToken(type, val);\n  }\n\n  addComment(comment) {\n    if (this.flowPragma === undefined) {\n      const matches = FLOW_PRAGMA_REGEX.exec(comment.value);\n\n      if (!matches) ; else if (matches[1] === \"flow\") {\n        this.flowPragma = \"flow\";\n      } else if (matches[1] === \"noflow\") {\n        this.flowPragma = \"noflow\";\n      } else {\n        throw new Error(\"Unexpected flow pragma\");\n      }\n    }\n\n    return super.addComment(comment);\n  }\n\n  flowParseTypeInitialiser(tok) {\n    const oldInType = this.state.inType;\n    this.state.inType = true;\n    this.expect(tok || types.colon);\n    const type = this.flowParseType();\n    this.state.inType = oldInType;\n    return type;\n  }\n\n  flowParsePredicate() {\n    const node = this.startNode();\n    const moduloLoc = this.state.startLoc;\n    const moduloPos = this.state.start;\n    this.expect(types.modulo);\n    const checksLoc = this.state.startLoc;\n    this.expectContextual(\"checks\");\n\n    if (moduloLoc.line !== checksLoc.line || moduloLoc.column !== checksLoc.column - 1) {\n      this.raise(moduloPos, FlowErrors.UnexpectedSpaceBetweenModuloChecks);\n    }\n\n    if (this.eat(types.parenL)) {\n      node.value = this.parseExpression();\n      this.expect(types.parenR);\n      return this.finishNode(node, \"DeclaredPredicate\");\n    } else {\n      return this.finishNode(node, \"InferredPredicate\");\n    }\n  }\n\n  flowParseTypeAndPredicateInitialiser() {\n    const oldInType = this.state.inType;\n    this.state.inType = true;\n    this.expect(types.colon);\n    let type = null;\n    let predicate = null;\n\n    if (this.match(types.modulo)) {\n      this.state.inType = oldInType;\n      predicate = this.flowParsePredicate();\n    } else {\n      type = this.flowParseType();\n      this.state.inType = oldInType;\n\n      if (this.match(types.modulo)) {\n        predicate = this.flowParsePredicate();\n      }\n    }\n\n    return [type, predicate];\n  }\n\n  flowParseDeclareClass(node) {\n    this.next();\n    this.flowParseInterfaceish(node, true);\n    return this.finishNode(node, \"DeclareClass\");\n  }\n\n  flowParseDeclareFunction(node) {\n    this.next();\n    const id = node.id = this.parseIdentifier();\n    const typeNode = this.startNode();\n    const typeContainer = this.startNode();\n\n    if (this.isRelational(\"<\")) {\n      typeNode.typeParameters = this.flowParseTypeParameterDeclaration();\n    } else {\n      typeNode.typeParameters = null;\n    }\n\n    this.expect(types.parenL);\n    const tmp = this.flowParseFunctionTypeParams();\n    typeNode.params = tmp.params;\n    typeNode.rest = tmp.rest;\n    typeNode.this = tmp._this;\n    this.expect(types.parenR);\n    [typeNode.returnType, node.predicate] = this.flowParseTypeAndPredicateInitialiser();\n    typeContainer.typeAnnotation = this.finishNode(typeNode, \"FunctionTypeAnnotation\");\n    id.typeAnnotation = this.finishNode(typeContainer, \"TypeAnnotation\");\n    this.resetEndLocation(id);\n    this.semicolon();\n    this.scope.declareName(node.id.name, BIND_FLOW_DECLARE_FN, node.id.start);\n    return this.finishNode(node, \"DeclareFunction\");\n  }\n\n  flowParseDeclare(node, insideModule) {\n    if (this.match(types._class)) {\n      return this.flowParseDeclareClass(node);\n    } else if (this.match(types._function)) {\n      return this.flowParseDeclareFunction(node);\n    } else if (this.match(types._var)) {\n      return this.flowParseDeclareVariable(node);\n    } else if (this.eatContextual(\"module\")) {\n      if (this.match(types.dot)) {\n        return this.flowParseDeclareModuleExports(node);\n      } else {\n        if (insideModule) {\n          this.raise(this.state.lastTokStart, FlowErrors.NestedDeclareModule);\n        }\n\n        return this.flowParseDeclareModule(node);\n      }\n    } else if (this.isContextual(\"type\")) {\n      return this.flowParseDeclareTypeAlias(node);\n    } else if (this.isContextual(\"opaque\")) {\n      return this.flowParseDeclareOpaqueType(node);\n    } else if (this.isContextual(\"interface\")) {\n      return this.flowParseDeclareInterface(node);\n    } else if (this.match(types._export)) {\n      return this.flowParseDeclareExportDeclaration(node, insideModule);\n    } else {\n      throw this.unexpected();\n    }\n  }\n\n  flowParseDeclareVariable(node) {\n    this.next();\n    node.id = this.flowParseTypeAnnotatableIdentifier(true);\n    this.scope.declareName(node.id.name, BIND_VAR, node.id.start);\n    this.semicolon();\n    return this.finishNode(node, \"DeclareVariable\");\n  }\n\n  flowParseDeclareModule(node) {\n    this.scope.enter(SCOPE_OTHER);\n\n    if (this.match(types.string)) {\n      node.id = this.parseExprAtom();\n    } else {\n      node.id = this.parseIdentifier();\n    }\n\n    const bodyNode = node.body = this.startNode();\n    const body = bodyNode.body = [];\n    this.expect(types.braceL);\n\n    while (!this.match(types.braceR)) {\n      let bodyNode = this.startNode();\n\n      if (this.match(types._import)) {\n        this.next();\n\n        if (!this.isContextual(\"type\") && !this.match(types._typeof)) {\n          this.raise(this.state.lastTokStart, FlowErrors.InvalidNonTypeImportInDeclareModule);\n        }\n\n        this.parseImport(bodyNode);\n      } else {\n        this.expectContextual(\"declare\", FlowErrors.UnsupportedStatementInDeclareModule);\n        bodyNode = this.flowParseDeclare(bodyNode, true);\n      }\n\n      body.push(bodyNode);\n    }\n\n    this.scope.exit();\n    this.expect(types.braceR);\n    this.finishNode(bodyNode, \"BlockStatement\");\n    let kind = null;\n    let hasModuleExport = false;\n    body.forEach(bodyElement => {\n      if (isEsModuleType(bodyElement)) {\n        if (kind === \"CommonJS\") {\n          this.raise(bodyElement.start, FlowErrors.AmbiguousDeclareModuleKind);\n        }\n\n        kind = \"ES\";\n      } else if (bodyElement.type === \"DeclareModuleExports\") {\n        if (hasModuleExport) {\n          this.raise(bodyElement.start, FlowErrors.DuplicateDeclareModuleExports);\n        }\n\n        if (kind === \"ES\") {\n          this.raise(bodyElement.start, FlowErrors.AmbiguousDeclareModuleKind);\n        }\n\n        kind = \"CommonJS\";\n        hasModuleExport = true;\n      }\n    });\n    node.kind = kind || \"CommonJS\";\n    return this.finishNode(node, \"DeclareModule\");\n  }\n\n  flowParseDeclareExportDeclaration(node, insideModule) {\n    this.expect(types._export);\n\n    if (this.eat(types._default)) {\n      if (this.match(types._function) || this.match(types._class)) {\n        node.declaration = this.flowParseDeclare(this.startNode());\n      } else {\n        node.declaration = this.flowParseType();\n        this.semicolon();\n      }\n\n      node.default = true;\n      return this.finishNode(node, \"DeclareExportDeclaration\");\n    } else {\n      if (this.match(types._const) || this.isLet() || (this.isContextual(\"type\") || this.isContextual(\"interface\")) && !insideModule) {\n        const label = this.state.value;\n        const suggestion = exportSuggestions[label];\n        throw this.raise(this.state.start, FlowErrors.UnsupportedDeclareExportKind, label, suggestion);\n      }\n\n      if (this.match(types._var) || this.match(types._function) || this.match(types._class) || this.isContextual(\"opaque\")) {\n          node.declaration = this.flowParseDeclare(this.startNode());\n          node.default = false;\n          return this.finishNode(node, \"DeclareExportDeclaration\");\n        } else if (this.match(types.star) || this.match(types.braceL) || this.isContextual(\"interface\") || this.isContextual(\"type\") || this.isContextual(\"opaque\")) {\n          node = this.parseExport(node);\n\n          if (node.type === \"ExportNamedDeclaration\") {\n            node.type = \"ExportDeclaration\";\n            node.default = false;\n            delete node.exportKind;\n          }\n\n          node.type = \"Declare\" + node.type;\n          return node;\n        }\n    }\n\n    throw this.unexpected();\n  }\n\n  flowParseDeclareModuleExports(node) {\n    this.next();\n    this.expectContextual(\"exports\");\n    node.typeAnnotation = this.flowParseTypeAnnotation();\n    this.semicolon();\n    return this.finishNode(node, \"DeclareModuleExports\");\n  }\n\n  flowParseDeclareTypeAlias(node) {\n    this.next();\n    this.flowParseTypeAlias(node);\n    node.type = \"DeclareTypeAlias\";\n    return node;\n  }\n\n  flowParseDeclareOpaqueType(node) {\n    this.next();\n    this.flowParseOpaqueType(node, true);\n    node.type = \"DeclareOpaqueType\";\n    return node;\n  }\n\n  flowParseDeclareInterface(node) {\n    this.next();\n    this.flowParseInterfaceish(node);\n    return this.finishNode(node, \"DeclareInterface\");\n  }\n\n  flowParseInterfaceish(node, isClass = false) {\n    node.id = this.flowParseRestrictedIdentifier(!isClass, true);\n    this.scope.declareName(node.id.name, isClass ? BIND_FUNCTION : BIND_LEXICAL, node.id.start);\n\n    if (this.isRelational(\"<\")) {\n      node.typeParameters = this.flowParseTypeParameterDeclaration();\n    } else {\n      node.typeParameters = null;\n    }\n\n    node.extends = [];\n    node.implements = [];\n    node.mixins = [];\n\n    if (this.eat(types._extends)) {\n      do {\n        node.extends.push(this.flowParseInterfaceExtends());\n      } while (!isClass && this.eat(types.comma));\n    }\n\n    if (this.isContextual(\"mixins\")) {\n      this.next();\n\n      do {\n        node.mixins.push(this.flowParseInterfaceExtends());\n      } while (this.eat(types.comma));\n    }\n\n    if (this.isContextual(\"implements\")) {\n      this.next();\n\n      do {\n        node.implements.push(this.flowParseInterfaceExtends());\n      } while (this.eat(types.comma));\n    }\n\n    node.body = this.flowParseObjectType({\n      allowStatic: isClass,\n      allowExact: false,\n      allowSpread: false,\n      allowProto: isClass,\n      allowInexact: false\n    });\n  }\n\n  flowParseInterfaceExtends() {\n    const node = this.startNode();\n    node.id = this.flowParseQualifiedTypeIdentifier();\n\n    if (this.isRelational(\"<\")) {\n      node.typeParameters = this.flowParseTypeParameterInstantiation();\n    } else {\n      node.typeParameters = null;\n    }\n\n    return this.finishNode(node, \"InterfaceExtends\");\n  }\n\n  flowParseInterface(node) {\n    this.flowParseInterfaceish(node);\n    return this.finishNode(node, \"InterfaceDeclaration\");\n  }\n\n  checkNotUnderscore(word) {\n    if (word === \"_\") {\n      this.raise(this.state.start, FlowErrors.UnexpectedReservedUnderscore);\n    }\n  }\n\n  checkReservedType(word, startLoc, declaration) {\n    if (!reservedTypes.has(word)) return;\n    this.raise(startLoc, declaration ? FlowErrors.AssignReservedType : FlowErrors.UnexpectedReservedType, word);\n  }\n\n  flowParseRestrictedIdentifier(liberal, declaration) {\n    this.checkReservedType(this.state.value, this.state.start, declaration);\n    return this.parseIdentifier(liberal);\n  }\n\n  flowParseTypeAlias(node) {\n    node.id = this.flowParseRestrictedIdentifier(false, true);\n    this.scope.declareName(node.id.name, BIND_LEXICAL, node.id.start);\n\n    if (this.isRelational(\"<\")) {\n      node.typeParameters = this.flowParseTypeParameterDeclaration();\n    } else {\n      node.typeParameters = null;\n    }\n\n    node.right = this.flowParseTypeInitialiser(types.eq);\n    this.semicolon();\n    return this.finishNode(node, \"TypeAlias\");\n  }\n\n  flowParseOpaqueType(node, declare) {\n    this.expectContextual(\"type\");\n    node.id = this.flowParseRestrictedIdentifier(true, true);\n    this.scope.declareName(node.id.name, BIND_LEXICAL, node.id.start);\n\n    if (this.isRelational(\"<\")) {\n      node.typeParameters = this.flowParseTypeParameterDeclaration();\n    } else {\n      node.typeParameters = null;\n    }\n\n    node.supertype = null;\n\n    if (this.match(types.colon)) {\n      node.supertype = this.flowParseTypeInitialiser(types.colon);\n    }\n\n    node.impltype = null;\n\n    if (!declare) {\n      node.impltype = this.flowParseTypeInitialiser(types.eq);\n    }\n\n    this.semicolon();\n    return this.finishNode(node, \"OpaqueType\");\n  }\n\n  flowParseTypeParameter(requireDefault = false) {\n    const nodeStart = this.state.start;\n    const node = this.startNode();\n    const variance = this.flowParseVariance();\n    const ident = this.flowParseTypeAnnotatableIdentifier();\n    node.name = ident.name;\n    node.variance = variance;\n    node.bound = ident.typeAnnotation;\n\n    if (this.match(types.eq)) {\n      this.eat(types.eq);\n      node.default = this.flowParseType();\n    } else {\n      if (requireDefault) {\n        this.raise(nodeStart, FlowErrors.MissingTypeParamDefault);\n      }\n    }\n\n    return this.finishNode(node, \"TypeParameter\");\n  }\n\n  flowParseTypeParameterDeclaration() {\n    const oldInType = this.state.inType;\n    const node = this.startNode();\n    node.params = [];\n    this.state.inType = true;\n\n    if (this.isRelational(\"<\") || this.match(types.jsxTagStart)) {\n      this.next();\n    } else {\n      this.unexpected();\n    }\n\n    let defaultRequired = false;\n\n    do {\n      const typeParameter = this.flowParseTypeParameter(defaultRequired);\n      node.params.push(typeParameter);\n\n      if (typeParameter.default) {\n        defaultRequired = true;\n      }\n\n      if (!this.isRelational(\">\")) {\n        this.expect(types.comma);\n      }\n    } while (!this.isRelational(\">\"));\n\n    this.expectRelational(\">\");\n    this.state.inType = oldInType;\n    return this.finishNode(node, \"TypeParameterDeclaration\");\n  }\n\n  flowParseTypeParameterInstantiation() {\n    const node = this.startNode();\n    const oldInType = this.state.inType;\n    node.params = [];\n    this.state.inType = true;\n    this.expectRelational(\"<\");\n    const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n    this.state.noAnonFunctionType = false;\n\n    while (!this.isRelational(\">\")) {\n      node.params.push(this.flowParseType());\n\n      if (!this.isRelational(\">\")) {\n        this.expect(types.comma);\n      }\n    }\n\n    this.state.noAnonFunctionType = oldNoAnonFunctionType;\n    this.expectRelational(\">\");\n    this.state.inType = oldInType;\n    return this.finishNode(node, \"TypeParameterInstantiation\");\n  }\n\n  flowParseTypeParameterInstantiationCallOrNew() {\n    const node = this.startNode();\n    const oldInType = this.state.inType;\n    node.params = [];\n    this.state.inType = true;\n    this.expectRelational(\"<\");\n\n    while (!this.isRelational(\">\")) {\n      node.params.push(this.flowParseTypeOrImplicitInstantiation());\n\n      if (!this.isRelational(\">\")) {\n        this.expect(types.comma);\n      }\n    }\n\n    this.expectRelational(\">\");\n    this.state.inType = oldInType;\n    return this.finishNode(node, \"TypeParameterInstantiation\");\n  }\n\n  flowParseInterfaceType() {\n    const node = this.startNode();\n    this.expectContextual(\"interface\");\n    node.extends = [];\n\n    if (this.eat(types._extends)) {\n      do {\n        node.extends.push(this.flowParseInterfaceExtends());\n      } while (this.eat(types.comma));\n    }\n\n    node.body = this.flowParseObjectType({\n      allowStatic: false,\n      allowExact: false,\n      allowSpread: false,\n      allowProto: false,\n      allowInexact: false\n    });\n    return this.finishNode(node, \"InterfaceTypeAnnotation\");\n  }\n\n  flowParseObjectPropertyKey() {\n    return this.match(types.num) || this.match(types.string) ? this.parseExprAtom() : this.parseIdentifier(true);\n  }\n\n  flowParseObjectTypeIndexer(node, isStatic, variance) {\n    node.static = isStatic;\n\n    if (this.lookahead().type === types.colon) {\n      node.id = this.flowParseObjectPropertyKey();\n      node.key = this.flowParseTypeInitialiser();\n    } else {\n      node.id = null;\n      node.key = this.flowParseType();\n    }\n\n    this.expect(types.bracketR);\n    node.value = this.flowParseTypeInitialiser();\n    node.variance = variance;\n    return this.finishNode(node, \"ObjectTypeIndexer\");\n  }\n\n  flowParseObjectTypeInternalSlot(node, isStatic) {\n    node.static = isStatic;\n    node.id = this.flowParseObjectPropertyKey();\n    this.expect(types.bracketR);\n    this.expect(types.bracketR);\n\n    if (this.isRelational(\"<\") || this.match(types.parenL)) {\n      node.method = true;\n      node.optional = false;\n      node.value = this.flowParseObjectTypeMethodish(this.startNodeAt(node.start, node.loc.start));\n    } else {\n      node.method = false;\n\n      if (this.eat(types.question)) {\n        node.optional = true;\n      }\n\n      node.value = this.flowParseTypeInitialiser();\n    }\n\n    return this.finishNode(node, \"ObjectTypeInternalSlot\");\n  }\n\n  flowParseObjectTypeMethodish(node) {\n    node.params = [];\n    node.rest = null;\n    node.typeParameters = null;\n    node.this = null;\n\n    if (this.isRelational(\"<\")) {\n      node.typeParameters = this.flowParseTypeParameterDeclaration();\n    }\n\n    this.expect(types.parenL);\n\n    if (this.match(types._this)) {\n      node.this = this.flowParseFunctionTypeParam(true);\n      node.this.name = null;\n\n      if (!this.match(types.parenR)) {\n        this.expect(types.comma);\n      }\n    }\n\n    while (!this.match(types.parenR) && !this.match(types.ellipsis)) {\n      node.params.push(this.flowParseFunctionTypeParam(false));\n\n      if (!this.match(types.parenR)) {\n        this.expect(types.comma);\n      }\n    }\n\n    if (this.eat(types.ellipsis)) {\n      node.rest = this.flowParseFunctionTypeParam(false);\n    }\n\n    this.expect(types.parenR);\n    node.returnType = this.flowParseTypeInitialiser();\n    return this.finishNode(node, \"FunctionTypeAnnotation\");\n  }\n\n  flowParseObjectTypeCallProperty(node, isStatic) {\n    const valueNode = this.startNode();\n    node.static = isStatic;\n    node.value = this.flowParseObjectTypeMethodish(valueNode);\n    return this.finishNode(node, \"ObjectTypeCallProperty\");\n  }\n\n  flowParseObjectType({\n    allowStatic,\n    allowExact,\n    allowSpread,\n    allowProto,\n    allowInexact\n  }) {\n    const oldInType = this.state.inType;\n    this.state.inType = true;\n    const nodeStart = this.startNode();\n    nodeStart.callProperties = [];\n    nodeStart.properties = [];\n    nodeStart.indexers = [];\n    nodeStart.internalSlots = [];\n    let endDelim;\n    let exact;\n    let inexact = false;\n\n    if (allowExact && this.match(types.braceBarL)) {\n      this.expect(types.braceBarL);\n      endDelim = types.braceBarR;\n      exact = true;\n    } else {\n      this.expect(types.braceL);\n      endDelim = types.braceR;\n      exact = false;\n    }\n\n    nodeStart.exact = exact;\n\n    while (!this.match(endDelim)) {\n      let isStatic = false;\n      let protoStart = null;\n      let inexactStart = null;\n      const node = this.startNode();\n\n      if (allowProto && this.isContextual(\"proto\")) {\n        const lookahead = this.lookahead();\n\n        if (lookahead.type !== types.colon && lookahead.type !== types.question) {\n          this.next();\n          protoStart = this.state.start;\n          allowStatic = false;\n        }\n      }\n\n      if (allowStatic && this.isContextual(\"static\")) {\n        const lookahead = this.lookahead();\n\n        if (lookahead.type !== types.colon && lookahead.type !== types.question) {\n          this.next();\n          isStatic = true;\n        }\n      }\n\n      const variance = this.flowParseVariance();\n\n      if (this.eat(types.bracketL)) {\n        if (protoStart != null) {\n          this.unexpected(protoStart);\n        }\n\n        if (this.eat(types.bracketL)) {\n          if (variance) {\n            this.unexpected(variance.start);\n          }\n\n          nodeStart.internalSlots.push(this.flowParseObjectTypeInternalSlot(node, isStatic));\n        } else {\n          nodeStart.indexers.push(this.flowParseObjectTypeIndexer(node, isStatic, variance));\n        }\n      } else if (this.match(types.parenL) || this.isRelational(\"<\")) {\n        if (protoStart != null) {\n          this.unexpected(protoStart);\n        }\n\n        if (variance) {\n          this.unexpected(variance.start);\n        }\n\n        nodeStart.callProperties.push(this.flowParseObjectTypeCallProperty(node, isStatic));\n      } else {\n        let kind = \"init\";\n\n        if (this.isContextual(\"get\") || this.isContextual(\"set\")) {\n          const lookahead = this.lookahead();\n\n          if (lookahead.type === types.name || lookahead.type === types.string || lookahead.type === types.num) {\n            kind = this.state.value;\n            this.next();\n          }\n        }\n\n        const propOrInexact = this.flowParseObjectTypeProperty(node, isStatic, protoStart, variance, kind, allowSpread, allowInexact != null ? allowInexact : !exact);\n\n        if (propOrInexact === null) {\n          inexact = true;\n          inexactStart = this.state.lastTokStart;\n        } else {\n          nodeStart.properties.push(propOrInexact);\n        }\n      }\n\n      this.flowObjectTypeSemicolon();\n\n      if (inexactStart && !this.match(types.braceR) && !this.match(types.braceBarR)) {\n        this.raise(inexactStart, FlowErrors.UnexpectedExplicitInexactInObject);\n      }\n    }\n\n    this.expect(endDelim);\n\n    if (allowSpread) {\n      nodeStart.inexact = inexact;\n    }\n\n    const out = this.finishNode(nodeStart, \"ObjectTypeAnnotation\");\n    this.state.inType = oldInType;\n    return out;\n  }\n\n  flowParseObjectTypeProperty(node, isStatic, protoStart, variance, kind, allowSpread, allowInexact) {\n    if (this.eat(types.ellipsis)) {\n      const isInexactToken = this.match(types.comma) || this.match(types.semi) || this.match(types.braceR) || this.match(types.braceBarR);\n\n      if (isInexactToken) {\n        if (!allowSpread) {\n          this.raise(this.state.lastTokStart, FlowErrors.InexactInsideNonObject);\n        } else if (!allowInexact) {\n          this.raise(this.state.lastTokStart, FlowErrors.InexactInsideExact);\n        }\n\n        if (variance) {\n          this.raise(variance.start, FlowErrors.InexactVariance);\n        }\n\n        return null;\n      }\n\n      if (!allowSpread) {\n        this.raise(this.state.lastTokStart, FlowErrors.UnexpectedSpreadType);\n      }\n\n      if (protoStart != null) {\n        this.unexpected(protoStart);\n      }\n\n      if (variance) {\n        this.raise(variance.start, FlowErrors.SpreadVariance);\n      }\n\n      node.argument = this.flowParseType();\n      return this.finishNode(node, \"ObjectTypeSpreadProperty\");\n    } else {\n      node.key = this.flowParseObjectPropertyKey();\n      node.static = isStatic;\n      node.proto = protoStart != null;\n      node.kind = kind;\n      let optional = false;\n\n      if (this.isRelational(\"<\") || this.match(types.parenL)) {\n        node.method = true;\n\n        if (protoStart != null) {\n          this.unexpected(protoStart);\n        }\n\n        if (variance) {\n          this.unexpected(variance.start);\n        }\n\n        node.value = this.flowParseObjectTypeMethodish(this.startNodeAt(node.start, node.loc.start));\n\n        if (kind === \"get\" || kind === \"set\") {\n          this.flowCheckGetterSetterParams(node);\n        }\n\n        if (!allowSpread && node.key.name === \"constructor\" && node.value.this) {\n          this.raise(node.value.this.start, FlowErrors.ThisParamBannedInConstructor);\n        }\n      } else {\n        if (kind !== \"init\") this.unexpected();\n        node.method = false;\n\n        if (this.eat(types.question)) {\n          optional = true;\n        }\n\n        node.value = this.flowParseTypeInitialiser();\n        node.variance = variance;\n      }\n\n      node.optional = optional;\n      return this.finishNode(node, \"ObjectTypeProperty\");\n    }\n  }\n\n  flowCheckGetterSetterParams(property) {\n    const paramCount = property.kind === \"get\" ? 0 : 1;\n    const start = property.start;\n    const length = property.value.params.length + (property.value.rest ? 1 : 0);\n\n    if (property.value.this) {\n      this.raise(property.value.this.start, property.kind === \"get\" ? FlowErrors.GetterMayNotHaveThisParam : FlowErrors.SetterMayNotHaveThisParam);\n    }\n\n    if (length !== paramCount) {\n      if (property.kind === \"get\") {\n        this.raise(start, ErrorMessages.BadGetterArity);\n      } else {\n        this.raise(start, ErrorMessages.BadSetterArity);\n      }\n    }\n\n    if (property.kind === \"set\" && property.value.rest) {\n      this.raise(start, ErrorMessages.BadSetterRestParameter);\n    }\n  }\n\n  flowObjectTypeSemicolon() {\n    if (!this.eat(types.semi) && !this.eat(types.comma) && !this.match(types.braceR) && !this.match(types.braceBarR)) {\n      this.unexpected();\n    }\n  }\n\n  flowParseQualifiedTypeIdentifier(startPos, startLoc, id) {\n    startPos = startPos || this.state.start;\n    startLoc = startLoc || this.state.startLoc;\n    let node = id || this.flowParseRestrictedIdentifier(true);\n\n    while (this.eat(types.dot)) {\n      const node2 = this.startNodeAt(startPos, startLoc);\n      node2.qualification = node;\n      node2.id = this.flowParseRestrictedIdentifier(true);\n      node = this.finishNode(node2, \"QualifiedTypeIdentifier\");\n    }\n\n    return node;\n  }\n\n  flowParseGenericType(startPos, startLoc, id) {\n    const node = this.startNodeAt(startPos, startLoc);\n    node.typeParameters = null;\n    node.id = this.flowParseQualifiedTypeIdentifier(startPos, startLoc, id);\n\n    if (this.isRelational(\"<\")) {\n      node.typeParameters = this.flowParseTypeParameterInstantiation();\n    }\n\n    return this.finishNode(node, \"GenericTypeAnnotation\");\n  }\n\n  flowParseTypeofType() {\n    const node = this.startNode();\n    this.expect(types._typeof);\n    node.argument = this.flowParsePrimaryType();\n    return this.finishNode(node, \"TypeofTypeAnnotation\");\n  }\n\n  flowParseTupleType() {\n    const node = this.startNode();\n    node.types = [];\n    this.expect(types.bracketL);\n\n    while (this.state.pos < this.length && !this.match(types.bracketR)) {\n      node.types.push(this.flowParseType());\n      if (this.match(types.bracketR)) break;\n      this.expect(types.comma);\n    }\n\n    this.expect(types.bracketR);\n    return this.finishNode(node, \"TupleTypeAnnotation\");\n  }\n\n  flowParseFunctionTypeParam(first) {\n    let name = null;\n    let optional = false;\n    let typeAnnotation = null;\n    const node = this.startNode();\n    const lh = this.lookahead();\n    const isThis = this.state.type === types._this;\n\n    if (lh.type === types.colon || lh.type === types.question) {\n      if (isThis && !first) {\n        this.raise(node.start, FlowErrors.ThisParamMustBeFirst);\n      }\n\n      name = this.parseIdentifier(isThis);\n\n      if (this.eat(types.question)) {\n        optional = true;\n\n        if (isThis) {\n          this.raise(node.start, FlowErrors.ThisParamMayNotBeOptional);\n        }\n      }\n\n      typeAnnotation = this.flowParseTypeInitialiser();\n    } else {\n      typeAnnotation = this.flowParseType();\n    }\n\n    node.name = name;\n    node.optional = optional;\n    node.typeAnnotation = typeAnnotation;\n    return this.finishNode(node, \"FunctionTypeParam\");\n  }\n\n  reinterpretTypeAsFunctionTypeParam(type) {\n    const node = this.startNodeAt(type.start, type.loc.start);\n    node.name = null;\n    node.optional = false;\n    node.typeAnnotation = type;\n    return this.finishNode(node, \"FunctionTypeParam\");\n  }\n\n  flowParseFunctionTypeParams(params = []) {\n    let rest = null;\n    let _this = null;\n\n    if (this.match(types._this)) {\n      _this = this.flowParseFunctionTypeParam(true);\n      _this.name = null;\n\n      if (!this.match(types.parenR)) {\n        this.expect(types.comma);\n      }\n    }\n\n    while (!this.match(types.parenR) && !this.match(types.ellipsis)) {\n      params.push(this.flowParseFunctionTypeParam(false));\n\n      if (!this.match(types.parenR)) {\n        this.expect(types.comma);\n      }\n    }\n\n    if (this.eat(types.ellipsis)) {\n      rest = this.flowParseFunctionTypeParam(false);\n    }\n\n    return {\n      params,\n      rest,\n      _this\n    };\n  }\n\n  flowIdentToTypeAnnotation(startPos, startLoc, node, id) {\n    switch (id.name) {\n      case \"any\":\n        return this.finishNode(node, \"AnyTypeAnnotation\");\n\n      case \"bool\":\n      case \"boolean\":\n        return this.finishNode(node, \"BooleanTypeAnnotation\");\n\n      case \"mixed\":\n        return this.finishNode(node, \"MixedTypeAnnotation\");\n\n      case \"empty\":\n        return this.finishNode(node, \"EmptyTypeAnnotation\");\n\n      case \"number\":\n        return this.finishNode(node, \"NumberTypeAnnotation\");\n\n      case \"string\":\n        return this.finishNode(node, \"StringTypeAnnotation\");\n\n      case \"symbol\":\n        return this.finishNode(node, \"SymbolTypeAnnotation\");\n\n      default:\n        this.checkNotUnderscore(id.name);\n        return this.flowParseGenericType(startPos, startLoc, id);\n    }\n  }\n\n  flowParsePrimaryType() {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const node = this.startNode();\n    let tmp;\n    let type;\n    let isGroupedType = false;\n    const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n\n    switch (this.state.type) {\n      case types.name:\n        if (this.isContextual(\"interface\")) {\n          return this.flowParseInterfaceType();\n        }\n\n        return this.flowIdentToTypeAnnotation(startPos, startLoc, node, this.parseIdentifier());\n\n      case types.braceL:\n        return this.flowParseObjectType({\n          allowStatic: false,\n          allowExact: false,\n          allowSpread: true,\n          allowProto: false,\n          allowInexact: true\n        });\n\n      case types.braceBarL:\n        return this.flowParseObjectType({\n          allowStatic: false,\n          allowExact: true,\n          allowSpread: true,\n          allowProto: false,\n          allowInexact: false\n        });\n\n      case types.bracketL:\n        this.state.noAnonFunctionType = false;\n        type = this.flowParseTupleType();\n        this.state.noAnonFunctionType = oldNoAnonFunctionType;\n        return type;\n\n      case types.relational:\n        if (this.state.value === \"<\") {\n          node.typeParameters = this.flowParseTypeParameterDeclaration();\n          this.expect(types.parenL);\n          tmp = this.flowParseFunctionTypeParams();\n          node.params = tmp.params;\n          node.rest = tmp.rest;\n          node.this = tmp._this;\n          this.expect(types.parenR);\n          this.expect(types.arrow);\n          node.returnType = this.flowParseType();\n          return this.finishNode(node, \"FunctionTypeAnnotation\");\n        }\n\n        break;\n\n      case types.parenL:\n        this.next();\n\n        if (!this.match(types.parenR) && !this.match(types.ellipsis)) {\n          if (this.match(types.name) || this.match(types._this)) {\n            const token = this.lookahead().type;\n            isGroupedType = token !== types.question && token !== types.colon;\n          } else {\n            isGroupedType = true;\n          }\n        }\n\n        if (isGroupedType) {\n          this.state.noAnonFunctionType = false;\n          type = this.flowParseType();\n          this.state.noAnonFunctionType = oldNoAnonFunctionType;\n\n          if (this.state.noAnonFunctionType || !(this.match(types.comma) || this.match(types.parenR) && this.lookahead().type === types.arrow)) {\n            this.expect(types.parenR);\n            return type;\n          } else {\n            this.eat(types.comma);\n          }\n        }\n\n        if (type) {\n          tmp = this.flowParseFunctionTypeParams([this.reinterpretTypeAsFunctionTypeParam(type)]);\n        } else {\n          tmp = this.flowParseFunctionTypeParams();\n        }\n\n        node.params = tmp.params;\n        node.rest = tmp.rest;\n        node.this = tmp._this;\n        this.expect(types.parenR);\n        this.expect(types.arrow);\n        node.returnType = this.flowParseType();\n        node.typeParameters = null;\n        return this.finishNode(node, \"FunctionTypeAnnotation\");\n\n      case types.string:\n        return this.parseLiteral(this.state.value, \"StringLiteralTypeAnnotation\");\n\n      case types._true:\n      case types._false:\n        node.value = this.match(types._true);\n        this.next();\n        return this.finishNode(node, \"BooleanLiteralTypeAnnotation\");\n\n      case types.plusMin:\n        if (this.state.value === \"-\") {\n          this.next();\n\n          if (this.match(types.num)) {\n            return this.parseLiteral(-this.state.value, \"NumberLiteralTypeAnnotation\", node.start, node.loc.start);\n          }\n\n          if (this.match(types.bigint)) {\n            return this.parseLiteral(-this.state.value, \"BigIntLiteralTypeAnnotation\", node.start, node.loc.start);\n          }\n\n          throw this.raise(this.state.start, FlowErrors.UnexpectedSubtractionOperand);\n        }\n\n        throw this.unexpected();\n\n      case types.num:\n        return this.parseLiteral(this.state.value, \"NumberLiteralTypeAnnotation\");\n\n      case types.bigint:\n        return this.parseLiteral(this.state.value, \"BigIntLiteralTypeAnnotation\");\n\n      case types._void:\n        this.next();\n        return this.finishNode(node, \"VoidTypeAnnotation\");\n\n      case types._null:\n        this.next();\n        return this.finishNode(node, \"NullLiteralTypeAnnotation\");\n\n      case types._this:\n        this.next();\n        return this.finishNode(node, \"ThisTypeAnnotation\");\n\n      case types.star:\n        this.next();\n        return this.finishNode(node, \"ExistsTypeAnnotation\");\n\n      default:\n        if (this.state.type.keyword === \"typeof\") {\n          return this.flowParseTypeofType();\n        } else if (this.state.type.keyword) {\n          const label = this.state.type.label;\n          this.next();\n          return super.createIdentifier(node, label);\n        }\n\n    }\n\n    throw this.unexpected();\n  }\n\n  flowParsePostfixType() {\n    const startPos = this.state.start,\n          startLoc = this.state.startLoc;\n    let type = this.flowParsePrimaryType();\n\n    while (this.match(types.bracketL) && !this.canInsertSemicolon()) {\n      const node = this.startNodeAt(startPos, startLoc);\n      node.elementType = type;\n      this.expect(types.bracketL);\n      this.expect(types.bracketR);\n      type = this.finishNode(node, \"ArrayTypeAnnotation\");\n    }\n\n    return type;\n  }\n\n  flowParsePrefixType() {\n    const node = this.startNode();\n\n    if (this.eat(types.question)) {\n      node.typeAnnotation = this.flowParsePrefixType();\n      return this.finishNode(node, \"NullableTypeAnnotation\");\n    } else {\n      return this.flowParsePostfixType();\n    }\n  }\n\n  flowParseAnonFunctionWithoutParens() {\n    const param = this.flowParsePrefixType();\n\n    if (!this.state.noAnonFunctionType && this.eat(types.arrow)) {\n      const node = this.startNodeAt(param.start, param.loc.start);\n      node.params = [this.reinterpretTypeAsFunctionTypeParam(param)];\n      node.rest = null;\n      node.this = null;\n      node.returnType = this.flowParseType();\n      node.typeParameters = null;\n      return this.finishNode(node, \"FunctionTypeAnnotation\");\n    }\n\n    return param;\n  }\n\n  flowParseIntersectionType() {\n    const node = this.startNode();\n    this.eat(types.bitwiseAND);\n    const type = this.flowParseAnonFunctionWithoutParens();\n    node.types = [type];\n\n    while (this.eat(types.bitwiseAND)) {\n      node.types.push(this.flowParseAnonFunctionWithoutParens());\n    }\n\n    return node.types.length === 1 ? type : this.finishNode(node, \"IntersectionTypeAnnotation\");\n  }\n\n  flowParseUnionType() {\n    const node = this.startNode();\n    this.eat(types.bitwiseOR);\n    const type = this.flowParseIntersectionType();\n    node.types = [type];\n\n    while (this.eat(types.bitwiseOR)) {\n      node.types.push(this.flowParseIntersectionType());\n    }\n\n    return node.types.length === 1 ? type : this.finishNode(node, \"UnionTypeAnnotation\");\n  }\n\n  flowParseType() {\n    const oldInType = this.state.inType;\n    this.state.inType = true;\n    const type = this.flowParseUnionType();\n    this.state.inType = oldInType;\n    this.state.exprAllowed = this.state.exprAllowed || this.state.noAnonFunctionType;\n    return type;\n  }\n\n  flowParseTypeOrImplicitInstantiation() {\n    if (this.state.type === types.name && this.state.value === \"_\") {\n      const startPos = this.state.start;\n      const startLoc = this.state.startLoc;\n      const node = this.parseIdentifier();\n      return this.flowParseGenericType(startPos, startLoc, node);\n    } else {\n      return this.flowParseType();\n    }\n  }\n\n  flowParseTypeAnnotation() {\n    const node = this.startNode();\n    node.typeAnnotation = this.flowParseTypeInitialiser();\n    return this.finishNode(node, \"TypeAnnotation\");\n  }\n\n  flowParseTypeAnnotatableIdentifier(allowPrimitiveOverride) {\n    const ident = allowPrimitiveOverride ? this.parseIdentifier() : this.flowParseRestrictedIdentifier();\n\n    if (this.match(types.colon)) {\n      ident.typeAnnotation = this.flowParseTypeAnnotation();\n      this.resetEndLocation(ident);\n    }\n\n    return ident;\n  }\n\n  typeCastToParameter(node) {\n    node.expression.typeAnnotation = node.typeAnnotation;\n    this.resetEndLocation(node.expression, node.typeAnnotation.end, node.typeAnnotation.loc.end);\n    return node.expression;\n  }\n\n  flowParseVariance() {\n    let variance = null;\n\n    if (this.match(types.plusMin)) {\n      variance = this.startNode();\n\n      if (this.state.value === \"+\") {\n        variance.kind = \"plus\";\n      } else {\n        variance.kind = \"minus\";\n      }\n\n      this.next();\n      this.finishNode(variance, \"Variance\");\n    }\n\n    return variance;\n  }\n\n  parseFunctionBody(node, allowExpressionBody, isMethod = false) {\n    if (allowExpressionBody) {\n      return this.forwardNoArrowParamsConversionAt(node, () => super.parseFunctionBody(node, true, isMethod));\n    }\n\n    return super.parseFunctionBody(node, false, isMethod);\n  }\n\n  parseFunctionBodyAndFinish(node, type, isMethod = false) {\n    if (this.match(types.colon)) {\n      const typeNode = this.startNode();\n      [typeNode.typeAnnotation, node.predicate] = this.flowParseTypeAndPredicateInitialiser();\n      node.returnType = typeNode.typeAnnotation ? this.finishNode(typeNode, \"TypeAnnotation\") : null;\n    }\n\n    super.parseFunctionBodyAndFinish(node, type, isMethod);\n  }\n\n  parseStatement(context, topLevel) {\n    if (this.state.strict && this.match(types.name) && this.state.value === \"interface\") {\n      const lookahead = this.lookahead();\n\n      if (lookahead.type === types.name || isKeyword(lookahead.value)) {\n        const node = this.startNode();\n        this.next();\n        return this.flowParseInterface(node);\n      }\n    } else if (this.shouldParseEnums() && this.isContextual(\"enum\")) {\n      const node = this.startNode();\n      this.next();\n      return this.flowParseEnumDeclaration(node);\n    }\n\n    const stmt = super.parseStatement(context, topLevel);\n\n    if (this.flowPragma === undefined && !this.isValidDirective(stmt)) {\n      this.flowPragma = null;\n    }\n\n    return stmt;\n  }\n\n  parseExpressionStatement(node, expr) {\n    if (expr.type === \"Identifier\") {\n      if (expr.name === \"declare\") {\n        if (this.match(types._class) || this.match(types.name) || this.match(types._function) || this.match(types._var) || this.match(types._export)) {\n          return this.flowParseDeclare(node);\n        }\n      } else if (this.match(types.name)) {\n        if (expr.name === \"interface\") {\n          return this.flowParseInterface(node);\n        } else if (expr.name === \"type\") {\n          return this.flowParseTypeAlias(node);\n        } else if (expr.name === \"opaque\") {\n          return this.flowParseOpaqueType(node, false);\n        }\n      }\n    }\n\n    return super.parseExpressionStatement(node, expr);\n  }\n\n  shouldParseExportDeclaration() {\n    return this.isContextual(\"type\") || this.isContextual(\"interface\") || this.isContextual(\"opaque\") || this.shouldParseEnums() && this.isContextual(\"enum\") || super.shouldParseExportDeclaration();\n  }\n\n  isExportDefaultSpecifier() {\n    if (this.match(types.name) && (this.state.value === \"type\" || this.state.value === \"interface\" || this.state.value === \"opaque\" || this.shouldParseEnums() && this.state.value === \"enum\")) {\n      return false;\n    }\n\n    return super.isExportDefaultSpecifier();\n  }\n\n  parseExportDefaultExpression() {\n    if (this.shouldParseEnums() && this.isContextual(\"enum\")) {\n      const node = this.startNode();\n      this.next();\n      return this.flowParseEnumDeclaration(node);\n    }\n\n    return super.parseExportDefaultExpression();\n  }\n\n  parseConditional(expr, startPos, startLoc, refNeedsArrowPos) {\n    if (!this.match(types.question)) return expr;\n\n    if (refNeedsArrowPos) {\n      const result = this.tryParse(() => super.parseConditional(expr, startPos, startLoc));\n\n      if (!result.node) {\n        refNeedsArrowPos.start = result.error.pos || this.state.start;\n        return expr;\n      }\n\n      if (result.error) this.state = result.failState;\n      return result.node;\n    }\n\n    this.expect(types.question);\n    const state = this.state.clone();\n    const originalNoArrowAt = this.state.noArrowAt;\n    const node = this.startNodeAt(startPos, startLoc);\n    let {\n      consequent,\n      failed\n    } = this.tryParseConditionalConsequent();\n    let [valid, invalid] = this.getArrowLikeExpressions(consequent);\n\n    if (failed || invalid.length > 0) {\n      const noArrowAt = [...originalNoArrowAt];\n\n      if (invalid.length > 0) {\n        this.state = state;\n        this.state.noArrowAt = noArrowAt;\n\n        for (let i = 0; i < invalid.length; i++) {\n          noArrowAt.push(invalid[i].start);\n        }\n\n        ({\n          consequent,\n          failed\n        } = this.tryParseConditionalConsequent());\n        [valid, invalid] = this.getArrowLikeExpressions(consequent);\n      }\n\n      if (failed && valid.length > 1) {\n        this.raise(state.start, FlowErrors.AmbiguousConditionalArrow);\n      }\n\n      if (failed && valid.length === 1) {\n        this.state = state;\n        this.state.noArrowAt = noArrowAt.concat(valid[0].start);\n        ({\n          consequent,\n          failed\n        } = this.tryParseConditionalConsequent());\n      }\n    }\n\n    this.getArrowLikeExpressions(consequent, true);\n    this.state.noArrowAt = originalNoArrowAt;\n    this.expect(types.colon);\n    node.test = expr;\n    node.consequent = consequent;\n    node.alternate = this.forwardNoArrowParamsConversionAt(node, () => this.parseMaybeAssign(undefined, undefined, undefined));\n    return this.finishNode(node, \"ConditionalExpression\");\n  }\n\n  tryParseConditionalConsequent() {\n    this.state.noArrowParamsConversionAt.push(this.state.start);\n    const consequent = this.parseMaybeAssignAllowIn();\n    const failed = !this.match(types.colon);\n    this.state.noArrowParamsConversionAt.pop();\n    return {\n      consequent,\n      failed\n    };\n  }\n\n  getArrowLikeExpressions(node, disallowInvalid) {\n    const stack = [node];\n    const arrows = [];\n\n    while (stack.length !== 0) {\n      const node = stack.pop();\n\n      if (node.type === \"ArrowFunctionExpression\") {\n        if (node.typeParameters || !node.returnType) {\n          this.finishArrowValidation(node);\n        } else {\n          arrows.push(node);\n        }\n\n        stack.push(node.body);\n      } else if (node.type === \"ConditionalExpression\") {\n        stack.push(node.consequent);\n        stack.push(node.alternate);\n      }\n    }\n\n    if (disallowInvalid) {\n      arrows.forEach(node => this.finishArrowValidation(node));\n      return [arrows, []];\n    }\n\n    return partition(arrows, node => node.params.every(param => this.isAssignable(param, true)));\n  }\n\n  finishArrowValidation(node) {\n    var _node$extra;\n\n    this.toAssignableList(node.params, (_node$extra = node.extra) == null ? void 0 : _node$extra.trailingComma, false);\n    this.scope.enter(SCOPE_FUNCTION | SCOPE_ARROW);\n    super.checkParams(node, false, true);\n    this.scope.exit();\n  }\n\n  forwardNoArrowParamsConversionAt(node, parse) {\n    let result;\n\n    if (this.state.noArrowParamsConversionAt.indexOf(node.start) !== -1) {\n      this.state.noArrowParamsConversionAt.push(this.state.start);\n      result = parse();\n      this.state.noArrowParamsConversionAt.pop();\n    } else {\n      result = parse();\n    }\n\n    return result;\n  }\n\n  parseParenItem(node, startPos, startLoc) {\n    node = super.parseParenItem(node, startPos, startLoc);\n\n    if (this.eat(types.question)) {\n      node.optional = true;\n      this.resetEndLocation(node);\n    }\n\n    if (this.match(types.colon)) {\n      const typeCastNode = this.startNodeAt(startPos, startLoc);\n      typeCastNode.expression = node;\n      typeCastNode.typeAnnotation = this.flowParseTypeAnnotation();\n      return this.finishNode(typeCastNode, \"TypeCastExpression\");\n    }\n\n    return node;\n  }\n\n  assertModuleNodeAllowed(node) {\n    if (node.type === \"ImportDeclaration\" && (node.importKind === \"type\" || node.importKind === \"typeof\") || node.type === \"ExportNamedDeclaration\" && node.exportKind === \"type\" || node.type === \"ExportAllDeclaration\" && node.exportKind === \"type\") {\n      return;\n    }\n\n    super.assertModuleNodeAllowed(node);\n  }\n\n  parseExport(node) {\n    const decl = super.parseExport(node);\n\n    if (decl.type === \"ExportNamedDeclaration\" || decl.type === \"ExportAllDeclaration\") {\n      decl.exportKind = decl.exportKind || \"value\";\n    }\n\n    return decl;\n  }\n\n  parseExportDeclaration(node) {\n    if (this.isContextual(\"type\")) {\n      node.exportKind = \"type\";\n      const declarationNode = this.startNode();\n      this.next();\n\n      if (this.match(types.braceL)) {\n        node.specifiers = this.parseExportSpecifiers();\n        this.parseExportFrom(node);\n        return null;\n      } else {\n        return this.flowParseTypeAlias(declarationNode);\n      }\n    } else if (this.isContextual(\"opaque\")) {\n      node.exportKind = \"type\";\n      const declarationNode = this.startNode();\n      this.next();\n      return this.flowParseOpaqueType(declarationNode, false);\n    } else if (this.isContextual(\"interface\")) {\n      node.exportKind = \"type\";\n      const declarationNode = this.startNode();\n      this.next();\n      return this.flowParseInterface(declarationNode);\n    } else if (this.shouldParseEnums() && this.isContextual(\"enum\")) {\n      node.exportKind = \"value\";\n      const declarationNode = this.startNode();\n      this.next();\n      return this.flowParseEnumDeclaration(declarationNode);\n    } else {\n      return super.parseExportDeclaration(node);\n    }\n  }\n\n  eatExportStar(node) {\n    if (super.eatExportStar(...arguments)) return true;\n\n    if (this.isContextual(\"type\") && this.lookahead().type === types.star) {\n      node.exportKind = \"type\";\n      this.next();\n      this.next();\n      return true;\n    }\n\n    return false;\n  }\n\n  maybeParseExportNamespaceSpecifier(node) {\n    const pos = this.state.start;\n    const hasNamespace = super.maybeParseExportNamespaceSpecifier(node);\n\n    if (hasNamespace && node.exportKind === \"type\") {\n      this.unexpected(pos);\n    }\n\n    return hasNamespace;\n  }\n\n  parseClassId(node, isStatement, optionalId) {\n    super.parseClassId(node, isStatement, optionalId);\n\n    if (this.isRelational(\"<\")) {\n      node.typeParameters = this.flowParseTypeParameterDeclaration();\n    }\n  }\n\n  parseClassMember(classBody, member, state) {\n    const pos = this.state.start;\n\n    if (this.isContextual(\"declare\")) {\n      if (this.parseClassMemberFromModifier(classBody, member)) {\n        return;\n      }\n\n      member.declare = true;\n    }\n\n    super.parseClassMember(classBody, member, state);\n\n    if (member.declare) {\n      if (member.type !== \"ClassProperty\" && member.type !== \"ClassPrivateProperty\" && member.type !== \"PropertyDefinition\") {\n          this.raise(pos, FlowErrors.DeclareClassElement);\n        } else if (member.value) {\n        this.raise(member.value.start, FlowErrors.DeclareClassFieldInitializer);\n      }\n    }\n  }\n\n  getTokenFromCode(code) {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (code === 123 && next === 124) {\n      return this.finishOp(types.braceBarL, 2);\n    } else if (this.state.inType && (code === 62 || code === 60)) {\n      return this.finishOp(types.relational, 1);\n    } else if (this.state.inType && code === 63) {\n      return this.finishOp(types.question, 1);\n    } else if (isIteratorStart(code, next)) {\n      this.state.isIterator = true;\n      return super.readWord();\n    } else {\n      return super.getTokenFromCode(code);\n    }\n  }\n\n  isAssignable(node, isBinding) {\n    switch (node.type) {\n      case \"Identifier\":\n      case \"ObjectPattern\":\n      case \"ArrayPattern\":\n      case \"AssignmentPattern\":\n        return true;\n\n      case \"ObjectExpression\":\n        {\n          const last = node.properties.length - 1;\n          return node.properties.every((prop, i) => {\n            return prop.type !== \"ObjectMethod\" && (i === last || prop.type === \"SpreadElement\") && this.isAssignable(prop);\n          });\n        }\n\n      case \"ObjectProperty\":\n        return this.isAssignable(node.value);\n\n      case \"SpreadElement\":\n        return this.isAssignable(node.argument);\n\n      case \"ArrayExpression\":\n        return node.elements.every(element => this.isAssignable(element));\n\n      case \"AssignmentExpression\":\n        return node.operator === \"=\";\n\n      case \"ParenthesizedExpression\":\n      case \"TypeCastExpression\":\n        return this.isAssignable(node.expression);\n\n      case \"MemberExpression\":\n      case \"OptionalMemberExpression\":\n        return !isBinding;\n\n      default:\n        return false;\n    }\n  }\n\n  toAssignable(node, isLHS = false) {\n    if (node.type === \"TypeCastExpression\") {\n      return super.toAssignable(this.typeCastToParameter(node), isLHS);\n    } else {\n      return super.toAssignable(node, isLHS);\n    }\n  }\n\n  toAssignableList(exprList, trailingCommaPos, isLHS) {\n    for (let i = 0; i < exprList.length; i++) {\n      const expr = exprList[i];\n\n      if ((expr == null ? void 0 : expr.type) === \"TypeCastExpression\") {\n        exprList[i] = this.typeCastToParameter(expr);\n      }\n    }\n\n    return super.toAssignableList(exprList, trailingCommaPos, isLHS);\n  }\n\n  toReferencedList(exprList, isParenthesizedExpr) {\n    for (let i = 0; i < exprList.length; i++) {\n      var _expr$extra;\n\n      const expr = exprList[i];\n\n      if (expr && expr.type === \"TypeCastExpression\" && !((_expr$extra = expr.extra) != null && _expr$extra.parenthesized) && (exprList.length > 1 || !isParenthesizedExpr)) {\n        this.raise(expr.typeAnnotation.start, FlowErrors.TypeCastInPattern);\n      }\n    }\n\n    return exprList;\n  }\n\n  parseArrayLike(close, canBePattern, isTuple, refExpressionErrors) {\n    const node = super.parseArrayLike(close, canBePattern, isTuple, refExpressionErrors);\n\n    if (canBePattern && !this.state.maybeInArrowParameters) {\n      this.toReferencedList(node.elements);\n    }\n\n    return node;\n  }\n\n  checkLVal(expr, ...args) {\n    if (expr.type !== \"TypeCastExpression\") {\n      return super.checkLVal(expr, ...args);\n    }\n  }\n\n  parseClassProperty(node) {\n    if (this.match(types.colon)) {\n      node.typeAnnotation = this.flowParseTypeAnnotation();\n    }\n\n    return super.parseClassProperty(node);\n  }\n\n  parseClassPrivateProperty(node) {\n    if (this.match(types.colon)) {\n      node.typeAnnotation = this.flowParseTypeAnnotation();\n    }\n\n    return super.parseClassPrivateProperty(node);\n  }\n\n  isClassMethod() {\n    return this.isRelational(\"<\") || super.isClassMethod();\n  }\n\n  isClassProperty() {\n    return this.match(types.colon) || super.isClassProperty();\n  }\n\n  isNonstaticConstructor(method) {\n    return !this.match(types.colon) && super.isNonstaticConstructor(method);\n  }\n\n  isThisParam(param) {\n    return param.type === \"Identifier\" && param.name === \"this\";\n  }\n\n  pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper) {\n    if (method.variance) {\n      this.unexpected(method.variance.start);\n    }\n\n    delete method.variance;\n\n    if (this.isRelational(\"<\")) {\n      method.typeParameters = this.flowParseTypeParameterDeclaration();\n    }\n\n    super.pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper);\n\n    if (method.params && isConstructor) {\n      const params = method.params;\n\n      if (params.length > 0 && this.isThisParam(params[0])) {\n        this.raise(method.start, FlowErrors.ThisParamBannedInConstructor);\n      }\n    } else if (method.type === \"MethodDefinition\" && isConstructor && method.value.params) {\n      const params = method.value.params;\n\n      if (params.length > 0 && this.isThisParam(params[0])) {\n        this.raise(method.start, FlowErrors.ThisParamBannedInConstructor);\n      }\n    }\n  }\n\n  pushClassPrivateMethod(classBody, method, isGenerator, isAsync) {\n    if (method.variance) {\n      this.unexpected(method.variance.start);\n    }\n\n    delete method.variance;\n\n    if (this.isRelational(\"<\")) {\n      method.typeParameters = this.flowParseTypeParameterDeclaration();\n    }\n\n    super.pushClassPrivateMethod(classBody, method, isGenerator, isAsync);\n  }\n\n  parseClassSuper(node) {\n    super.parseClassSuper(node);\n\n    if (node.superClass && this.isRelational(\"<\")) {\n      node.superTypeParameters = this.flowParseTypeParameterInstantiation();\n    }\n\n    if (this.isContextual(\"implements\")) {\n      this.next();\n      const implemented = node.implements = [];\n\n      do {\n        const node = this.startNode();\n        node.id = this.flowParseRestrictedIdentifier(true);\n\n        if (this.isRelational(\"<\")) {\n          node.typeParameters = this.flowParseTypeParameterInstantiation();\n        } else {\n          node.typeParameters = null;\n        }\n\n        implemented.push(this.finishNode(node, \"ClassImplements\"));\n      } while (this.eat(types.comma));\n    }\n  }\n\n  checkGetterSetterParams(method) {\n    super.checkGetterSetterParams(method);\n    const params = this.getObjectOrClassMethodParams(method);\n\n    if (params.length > 0) {\n      const param = params[0];\n\n      if (this.isThisParam(param) && method.kind === \"get\") {\n        this.raise(param.start, FlowErrors.GetterMayNotHaveThisParam);\n      } else if (this.isThisParam(param)) {\n        this.raise(param.start, FlowErrors.SetterMayNotHaveThisParam);\n      }\n    }\n  }\n\n  parsePropertyName(node, isPrivateNameAllowed) {\n    const variance = this.flowParseVariance();\n    const key = super.parsePropertyName(node, isPrivateNameAllowed);\n    node.variance = variance;\n    return key;\n  }\n\n  parseObjPropValue(prop, startPos, startLoc, isGenerator, isAsync, isPattern, isAccessor, refExpressionErrors) {\n    if (prop.variance) {\n      this.unexpected(prop.variance.start);\n    }\n\n    delete prop.variance;\n    let typeParameters;\n\n    if (this.isRelational(\"<\") && !isAccessor) {\n      typeParameters = this.flowParseTypeParameterDeclaration();\n      if (!this.match(types.parenL)) this.unexpected();\n    }\n\n    super.parseObjPropValue(prop, startPos, startLoc, isGenerator, isAsync, isPattern, isAccessor, refExpressionErrors);\n\n    if (typeParameters) {\n      (prop.value || prop).typeParameters = typeParameters;\n    }\n  }\n\n  parseAssignableListItemTypes(param) {\n    if (this.eat(types.question)) {\n      if (param.type !== \"Identifier\") {\n        this.raise(param.start, FlowErrors.OptionalBindingPattern);\n      }\n\n      if (this.isThisParam(param)) {\n        this.raise(param.start, FlowErrors.ThisParamMayNotBeOptional);\n      }\n\n      param.optional = true;\n    }\n\n    if (this.match(types.colon)) {\n      param.typeAnnotation = this.flowParseTypeAnnotation();\n    } else if (this.isThisParam(param)) {\n      this.raise(param.start, FlowErrors.ThisParamAnnotationRequired);\n    }\n\n    if (this.match(types.eq) && this.isThisParam(param)) {\n      this.raise(param.start, FlowErrors.ThisParamNoDefault);\n    }\n\n    this.resetEndLocation(param);\n    return param;\n  }\n\n  parseMaybeDefault(startPos, startLoc, left) {\n    const node = super.parseMaybeDefault(startPos, startLoc, left);\n\n    if (node.type === \"AssignmentPattern\" && node.typeAnnotation && node.right.start < node.typeAnnotation.start) {\n      this.raise(node.typeAnnotation.start, FlowErrors.TypeBeforeInitializer);\n    }\n\n    return node;\n  }\n\n  shouldParseDefaultImport(node) {\n    if (!hasTypeImportKind(node)) {\n      return super.shouldParseDefaultImport(node);\n    }\n\n    return isMaybeDefaultImport(this.state);\n  }\n\n  parseImportSpecifierLocal(node, specifier, type, contextDescription) {\n    specifier.local = hasTypeImportKind(node) ? this.flowParseRestrictedIdentifier(true, true) : this.parseIdentifier();\n    this.checkLVal(specifier.local, contextDescription, BIND_LEXICAL);\n    node.specifiers.push(this.finishNode(specifier, type));\n  }\n\n  maybeParseDefaultImportSpecifier(node) {\n    node.importKind = \"value\";\n    let kind = null;\n\n    if (this.match(types._typeof)) {\n      kind = \"typeof\";\n    } else if (this.isContextual(\"type\")) {\n      kind = \"type\";\n    }\n\n    if (kind) {\n      const lh = this.lookahead();\n\n      if (kind === \"type\" && lh.type === types.star) {\n        this.unexpected(lh.start);\n      }\n\n      if (isMaybeDefaultImport(lh) || lh.type === types.braceL || lh.type === types.star) {\n        this.next();\n        node.importKind = kind;\n      }\n    }\n\n    return super.maybeParseDefaultImportSpecifier(node);\n  }\n\n  parseImportSpecifier(node) {\n    const specifier = this.startNode();\n    const firstIdentLoc = this.state.start;\n    const firstIdent = this.parseModuleExportName();\n    let specifierTypeKind = null;\n\n    if (firstIdent.type === \"Identifier\") {\n      if (firstIdent.name === \"type\") {\n        specifierTypeKind = \"type\";\n      } else if (firstIdent.name === \"typeof\") {\n        specifierTypeKind = \"typeof\";\n      }\n    }\n\n    let isBinding = false;\n\n    if (this.isContextual(\"as\") && !this.isLookaheadContextual(\"as\")) {\n      const as_ident = this.parseIdentifier(true);\n\n      if (specifierTypeKind !== null && !this.match(types.name) && !this.state.type.keyword) {\n        specifier.imported = as_ident;\n        specifier.importKind = specifierTypeKind;\n        specifier.local = as_ident.__clone();\n      } else {\n        specifier.imported = firstIdent;\n        specifier.importKind = null;\n        specifier.local = this.parseIdentifier();\n      }\n    } else if (specifierTypeKind !== null && (this.match(types.name) || this.state.type.keyword)) {\n      specifier.imported = this.parseIdentifier(true);\n      specifier.importKind = specifierTypeKind;\n\n      if (this.eatContextual(\"as\")) {\n        specifier.local = this.parseIdentifier();\n      } else {\n        isBinding = true;\n        specifier.local = specifier.imported.__clone();\n      }\n    } else {\n      if (firstIdent.type === \"StringLiteral\") {\n        throw this.raise(specifier.start, ErrorMessages.ImportBindingIsString, firstIdent.value);\n      }\n\n      isBinding = true;\n      specifier.imported = firstIdent;\n      specifier.importKind = null;\n      specifier.local = specifier.imported.__clone();\n    }\n\n    const nodeIsTypeImport = hasTypeImportKind(node);\n    const specifierIsTypeImport = hasTypeImportKind(specifier);\n\n    if (nodeIsTypeImport && specifierIsTypeImport) {\n      this.raise(firstIdentLoc, FlowErrors.ImportTypeShorthandOnlyInPureImport);\n    }\n\n    if (nodeIsTypeImport || specifierIsTypeImport) {\n      this.checkReservedType(specifier.local.name, specifier.local.start, true);\n    }\n\n    if (isBinding && !nodeIsTypeImport && !specifierIsTypeImport) {\n      this.checkReservedWord(specifier.local.name, specifier.start, true, true);\n    }\n\n    this.checkLVal(specifier.local, \"import specifier\", BIND_LEXICAL);\n    node.specifiers.push(this.finishNode(specifier, \"ImportSpecifier\"));\n  }\n\n  parseBindingAtom() {\n    switch (this.state.type) {\n      case types._this:\n        return this.parseIdentifier(true);\n\n      default:\n        return super.parseBindingAtom();\n    }\n  }\n\n  parseFunctionParams(node, allowModifiers) {\n    const kind = node.kind;\n\n    if (kind !== \"get\" && kind !== \"set\" && this.isRelational(\"<\")) {\n      node.typeParameters = this.flowParseTypeParameterDeclaration();\n    }\n\n    super.parseFunctionParams(node, allowModifiers);\n  }\n\n  parseVarId(decl, kind) {\n    super.parseVarId(decl, kind);\n\n    if (this.match(types.colon)) {\n      decl.id.typeAnnotation = this.flowParseTypeAnnotation();\n      this.resetEndLocation(decl.id);\n    }\n  }\n\n  parseAsyncArrowFromCallExpression(node, call) {\n    if (this.match(types.colon)) {\n      const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n      this.state.noAnonFunctionType = true;\n      node.returnType = this.flowParseTypeAnnotation();\n      this.state.noAnonFunctionType = oldNoAnonFunctionType;\n    }\n\n    return super.parseAsyncArrowFromCallExpression(node, call);\n  }\n\n  shouldParseAsyncArrow() {\n    return this.match(types.colon) || super.shouldParseAsyncArrow();\n  }\n\n  parseMaybeAssign(refExpressionErrors, afterLeftParse, refNeedsArrowPos) {\n    var _jsx;\n\n    let state = null;\n    let jsx;\n\n    if (this.hasPlugin(\"jsx\") && (this.match(types.jsxTagStart) || this.isRelational(\"<\"))) {\n      state = this.state.clone();\n      jsx = this.tryParse(() => super.parseMaybeAssign(refExpressionErrors, afterLeftParse, refNeedsArrowPos), state);\n      if (!jsx.error) return jsx.node;\n      const {\n        context\n      } = this.state;\n\n      if (context[context.length - 1] === types$1.j_oTag) {\n        context.length -= 2;\n      } else if (context[context.length - 1] === types$1.j_expr) {\n        context.length -= 1;\n      }\n    }\n\n    if ((_jsx = jsx) != null && _jsx.error || this.isRelational(\"<\")) {\n      var _jsx2, _jsx3;\n\n      state = state || this.state.clone();\n      let typeParameters;\n      const arrow = this.tryParse(abort => {\n        var _arrowExpression$extr;\n\n        typeParameters = this.flowParseTypeParameterDeclaration();\n        const arrowExpression = this.forwardNoArrowParamsConversionAt(typeParameters, () => {\n          const result = super.parseMaybeAssign(refExpressionErrors, afterLeftParse, refNeedsArrowPos);\n          this.resetStartLocationFromNode(result, typeParameters);\n          return result;\n        });\n\n        if (arrowExpression.type !== \"ArrowFunctionExpression\" && (_arrowExpression$extr = arrowExpression.extra) != null && _arrowExpression$extr.parenthesized) {\n          abort();\n        }\n\n        const expr = this.maybeUnwrapTypeCastExpression(arrowExpression);\n        expr.typeParameters = typeParameters;\n        this.resetStartLocationFromNode(expr, typeParameters);\n        return arrowExpression;\n      }, state);\n      let arrowExpression = null;\n\n      if (arrow.node && this.maybeUnwrapTypeCastExpression(arrow.node).type === \"ArrowFunctionExpression\") {\n        if (!arrow.error && !arrow.aborted) {\n          if (arrow.node.async) {\n            this.raise(typeParameters.start, FlowErrors.UnexpectedTypeParameterBeforeAsyncArrowFunction);\n          }\n\n          return arrow.node;\n        }\n\n        arrowExpression = arrow.node;\n      }\n\n      if ((_jsx2 = jsx) != null && _jsx2.node) {\n        this.state = jsx.failState;\n        return jsx.node;\n      }\n\n      if (arrowExpression) {\n        this.state = arrow.failState;\n        return arrowExpression;\n      }\n\n      if ((_jsx3 = jsx) != null && _jsx3.thrown) throw jsx.error;\n      if (arrow.thrown) throw arrow.error;\n      throw this.raise(typeParameters.start, FlowErrors.UnexpectedTokenAfterTypeParameter);\n    }\n\n    return super.parseMaybeAssign(refExpressionErrors, afterLeftParse, refNeedsArrowPos);\n  }\n\n  parseArrow(node) {\n    if (this.match(types.colon)) {\n      const result = this.tryParse(() => {\n        const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n        this.state.noAnonFunctionType = true;\n        const typeNode = this.startNode();\n        [typeNode.typeAnnotation, node.predicate] = this.flowParseTypeAndPredicateInitialiser();\n        this.state.noAnonFunctionType = oldNoAnonFunctionType;\n        if (this.canInsertSemicolon()) this.unexpected();\n        if (!this.match(types.arrow)) this.unexpected();\n        return typeNode;\n      });\n      if (result.thrown) return null;\n      if (result.error) this.state = result.failState;\n      node.returnType = result.node.typeAnnotation ? this.finishNode(result.node, \"TypeAnnotation\") : null;\n    }\n\n    return super.parseArrow(node);\n  }\n\n  shouldParseArrow() {\n    return this.match(types.colon) || super.shouldParseArrow();\n  }\n\n  setArrowFunctionParameters(node, params) {\n    if (this.state.noArrowParamsConversionAt.indexOf(node.start) !== -1) {\n      node.params = params;\n    } else {\n      super.setArrowFunctionParameters(node, params);\n    }\n  }\n\n  checkParams(node, allowDuplicates, isArrowFunction) {\n    if (isArrowFunction && this.state.noArrowParamsConversionAt.indexOf(node.start) !== -1) {\n      return;\n    }\n\n    for (let i = 0; i < node.params.length; i++) {\n      if (this.isThisParam(node.params[i]) && i > 0) {\n        this.raise(node.params[i].start, FlowErrors.ThisParamMustBeFirst);\n      }\n    }\n\n    return super.checkParams(...arguments);\n  }\n\n  parseParenAndDistinguishExpression(canBeArrow) {\n    return super.parseParenAndDistinguishExpression(canBeArrow && this.state.noArrowAt.indexOf(this.state.start) === -1);\n  }\n\n  parseSubscripts(base, startPos, startLoc, noCalls) {\n    if (base.type === \"Identifier\" && base.name === \"async\" && this.state.noArrowAt.indexOf(startPos) !== -1) {\n      this.next();\n      const node = this.startNodeAt(startPos, startLoc);\n      node.callee = base;\n      node.arguments = this.parseCallExpressionArguments(types.parenR, false);\n      base = this.finishNode(node, \"CallExpression\");\n    } else if (base.type === \"Identifier\" && base.name === \"async\" && this.isRelational(\"<\")) {\n      const state = this.state.clone();\n      const arrow = this.tryParse(abort => this.parseAsyncArrowWithTypeParameters(startPos, startLoc) || abort(), state);\n      if (!arrow.error && !arrow.aborted) return arrow.node;\n      const result = this.tryParse(() => super.parseSubscripts(base, startPos, startLoc, noCalls), state);\n      if (result.node && !result.error) return result.node;\n\n      if (arrow.node) {\n        this.state = arrow.failState;\n        return arrow.node;\n      }\n\n      if (result.node) {\n        this.state = result.failState;\n        return result.node;\n      }\n\n      throw arrow.error || result.error;\n    }\n\n    return super.parseSubscripts(base, startPos, startLoc, noCalls);\n  }\n\n  parseSubscript(base, startPos, startLoc, noCalls, subscriptState) {\n    if (this.match(types.questionDot) && this.isLookaheadToken_lt()) {\n      subscriptState.optionalChainMember = true;\n\n      if (noCalls) {\n        subscriptState.stop = true;\n        return base;\n      }\n\n      this.next();\n      const node = this.startNodeAt(startPos, startLoc);\n      node.callee = base;\n      node.typeArguments = this.flowParseTypeParameterInstantiation();\n      this.expect(types.parenL);\n      node.arguments = this.parseCallExpressionArguments(types.parenR, false);\n      node.optional = true;\n      return this.finishCallExpression(node, true);\n    } else if (!noCalls && this.shouldParseTypes() && this.isRelational(\"<\")) {\n      const node = this.startNodeAt(startPos, startLoc);\n      node.callee = base;\n      const result = this.tryParse(() => {\n        node.typeArguments = this.flowParseTypeParameterInstantiationCallOrNew();\n        this.expect(types.parenL);\n        node.arguments = this.parseCallExpressionArguments(types.parenR, false);\n        if (subscriptState.optionalChainMember) node.optional = false;\n        return this.finishCallExpression(node, subscriptState.optionalChainMember);\n      });\n\n      if (result.node) {\n        if (result.error) this.state = result.failState;\n        return result.node;\n      }\n    }\n\n    return super.parseSubscript(base, startPos, startLoc, noCalls, subscriptState);\n  }\n\n  parseNewArguments(node) {\n    let targs = null;\n\n    if (this.shouldParseTypes() && this.isRelational(\"<\")) {\n      targs = this.tryParse(() => this.flowParseTypeParameterInstantiationCallOrNew()).node;\n    }\n\n    node.typeArguments = targs;\n    super.parseNewArguments(node);\n  }\n\n  parseAsyncArrowWithTypeParameters(startPos, startLoc) {\n    const node = this.startNodeAt(startPos, startLoc);\n    this.parseFunctionParams(node);\n    if (!this.parseArrow(node)) return;\n    return this.parseArrowExpression(node, undefined, true);\n  }\n\n  readToken_mult_modulo(code) {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (code === 42 && next === 47 && this.state.hasFlowComment) {\n      this.state.hasFlowComment = false;\n      this.state.pos += 2;\n      this.nextToken();\n      return;\n    }\n\n    super.readToken_mult_modulo(code);\n  }\n\n  readToken_pipe_amp(code) {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (code === 124 && next === 125) {\n      this.finishOp(types.braceBarR, 2);\n      return;\n    }\n\n    super.readToken_pipe_amp(code);\n  }\n\n  parseTopLevel(file, program) {\n    const fileNode = super.parseTopLevel(file, program);\n\n    if (this.state.hasFlowComment) {\n      this.raise(this.state.pos, FlowErrors.UnterminatedFlowComment);\n    }\n\n    return fileNode;\n  }\n\n  skipBlockComment() {\n    if (this.hasPlugin(\"flowComments\") && this.skipFlowComment()) {\n      if (this.state.hasFlowComment) {\n        this.unexpected(null, FlowErrors.NestedFlowComment);\n      }\n\n      this.hasFlowCommentCompletion();\n      this.state.pos += this.skipFlowComment();\n      this.state.hasFlowComment = true;\n      return;\n    }\n\n    if (this.state.hasFlowComment) {\n      const end = this.input.indexOf(\"*-/\", this.state.pos += 2);\n\n      if (end === -1) {\n        throw this.raise(this.state.pos - 2, ErrorMessages.UnterminatedComment);\n      }\n\n      this.state.pos = end + 3;\n      return;\n    }\n\n    super.skipBlockComment();\n  }\n\n  skipFlowComment() {\n    const {\n      pos\n    } = this.state;\n    let shiftToFirstNonWhiteSpace = 2;\n\n    while ([32, 9].includes(this.input.charCodeAt(pos + shiftToFirstNonWhiteSpace))) {\n      shiftToFirstNonWhiteSpace++;\n    }\n\n    const ch2 = this.input.charCodeAt(shiftToFirstNonWhiteSpace + pos);\n    const ch3 = this.input.charCodeAt(shiftToFirstNonWhiteSpace + pos + 1);\n\n    if (ch2 === 58 && ch3 === 58) {\n      return shiftToFirstNonWhiteSpace + 2;\n    }\n\n    if (this.input.slice(shiftToFirstNonWhiteSpace + pos, shiftToFirstNonWhiteSpace + pos + 12) === \"flow-include\") {\n      return shiftToFirstNonWhiteSpace + 12;\n    }\n\n    if (ch2 === 58 && ch3 !== 58) {\n      return shiftToFirstNonWhiteSpace;\n    }\n\n    return false;\n  }\n\n  hasFlowCommentCompletion() {\n    const end = this.input.indexOf(\"*/\", this.state.pos);\n\n    if (end === -1) {\n      throw this.raise(this.state.pos, ErrorMessages.UnterminatedComment);\n    }\n  }\n\n  flowEnumErrorBooleanMemberNotInitialized(pos, {\n    enumName,\n    memberName\n  }) {\n    this.raise(pos, FlowErrors.EnumBooleanMemberNotInitialized, memberName, enumName);\n  }\n\n  flowEnumErrorInvalidMemberName(pos, {\n    enumName,\n    memberName\n  }) {\n    const suggestion = memberName[0].toUpperCase() + memberName.slice(1);\n    this.raise(pos, FlowErrors.EnumInvalidMemberName, memberName, suggestion, enumName);\n  }\n\n  flowEnumErrorDuplicateMemberName(pos, {\n    enumName,\n    memberName\n  }) {\n    this.raise(pos, FlowErrors.EnumDuplicateMemberName, memberName, enumName);\n  }\n\n  flowEnumErrorInconsistentMemberValues(pos, {\n    enumName\n  }) {\n    this.raise(pos, FlowErrors.EnumInconsistentMemberValues, enumName);\n  }\n\n  flowEnumErrorInvalidExplicitType(pos, {\n    enumName,\n    suppliedType\n  }) {\n    return this.raise(pos, suppliedType === null ? FlowErrors.EnumInvalidExplicitTypeUnknownSupplied : FlowErrors.EnumInvalidExplicitType, enumName, suppliedType);\n  }\n\n  flowEnumErrorInvalidMemberInitializer(pos, {\n    enumName,\n    explicitType,\n    memberName\n  }) {\n    let message = null;\n\n    switch (explicitType) {\n      case \"boolean\":\n      case \"number\":\n      case \"string\":\n        message = FlowErrors.EnumInvalidMemberInitializerPrimaryType;\n        break;\n\n      case \"symbol\":\n        message = FlowErrors.EnumInvalidMemberInitializerSymbolType;\n        break;\n\n      default:\n        message = FlowErrors.EnumInvalidMemberInitializerUnknownType;\n    }\n\n    return this.raise(pos, message, enumName, memberName, explicitType);\n  }\n\n  flowEnumErrorNumberMemberNotInitialized(pos, {\n    enumName,\n    memberName\n  }) {\n    this.raise(pos, FlowErrors.EnumNumberMemberNotInitialized, enumName, memberName);\n  }\n\n  flowEnumErrorStringMemberInconsistentlyInitailized(pos, {\n    enumName\n  }) {\n    this.raise(pos, FlowErrors.EnumStringMemberInconsistentlyInitailized, enumName);\n  }\n\n  flowEnumMemberInit() {\n    const startPos = this.state.start;\n\n    const endOfInit = () => this.match(types.comma) || this.match(types.braceR);\n\n    switch (this.state.type) {\n      case types.num:\n        {\n          const literal = this.parseLiteral(this.state.value, \"NumericLiteral\");\n\n          if (endOfInit()) {\n            return {\n              type: \"number\",\n              pos: literal.start,\n              value: literal\n            };\n          }\n\n          return {\n            type: \"invalid\",\n            pos: startPos\n          };\n        }\n\n      case types.string:\n        {\n          const literal = this.parseLiteral(this.state.value, \"StringLiteral\");\n\n          if (endOfInit()) {\n            return {\n              type: \"string\",\n              pos: literal.start,\n              value: literal\n            };\n          }\n\n          return {\n            type: \"invalid\",\n            pos: startPos\n          };\n        }\n\n      case types._true:\n      case types._false:\n        {\n          const literal = this.parseBooleanLiteral();\n\n          if (endOfInit()) {\n            return {\n              type: \"boolean\",\n              pos: literal.start,\n              value: literal\n            };\n          }\n\n          return {\n            type: \"invalid\",\n            pos: startPos\n          };\n        }\n\n      default:\n        return {\n          type: \"invalid\",\n          pos: startPos\n        };\n    }\n  }\n\n  flowEnumMemberRaw() {\n    const pos = this.state.start;\n    const id = this.parseIdentifier(true);\n    const init = this.eat(types.eq) ? this.flowEnumMemberInit() : {\n      type: \"none\",\n      pos\n    };\n    return {\n      id,\n      init\n    };\n  }\n\n  flowEnumCheckExplicitTypeMismatch(pos, context, expectedType) {\n    const {\n      explicitType\n    } = context;\n\n    if (explicitType === null) {\n      return;\n    }\n\n    if (explicitType !== expectedType) {\n      this.flowEnumErrorInvalidMemberInitializer(pos, context);\n    }\n  }\n\n  flowEnumMembers({\n    enumName,\n    explicitType\n  }) {\n    const seenNames = new Set();\n    const members = {\n      booleanMembers: [],\n      numberMembers: [],\n      stringMembers: [],\n      defaultedMembers: []\n    };\n    let hasUnknownMembers = false;\n\n    while (!this.match(types.braceR)) {\n      if (this.eat(types.ellipsis)) {\n        hasUnknownMembers = true;\n        break;\n      }\n\n      const memberNode = this.startNode();\n      const {\n        id,\n        init\n      } = this.flowEnumMemberRaw();\n      const memberName = id.name;\n\n      if (memberName === \"\") {\n        continue;\n      }\n\n      if (/^[a-z]/.test(memberName)) {\n        this.flowEnumErrorInvalidMemberName(id.start, {\n          enumName,\n          memberName\n        });\n      }\n\n      if (seenNames.has(memberName)) {\n        this.flowEnumErrorDuplicateMemberName(id.start, {\n          enumName,\n          memberName\n        });\n      }\n\n      seenNames.add(memberName);\n      const context = {\n        enumName,\n        explicitType,\n        memberName\n      };\n      memberNode.id = id;\n\n      switch (init.type) {\n        case \"boolean\":\n          {\n            this.flowEnumCheckExplicitTypeMismatch(init.pos, context, \"boolean\");\n            memberNode.init = init.value;\n            members.booleanMembers.push(this.finishNode(memberNode, \"EnumBooleanMember\"));\n            break;\n          }\n\n        case \"number\":\n          {\n            this.flowEnumCheckExplicitTypeMismatch(init.pos, context, \"number\");\n            memberNode.init = init.value;\n            members.numberMembers.push(this.finishNode(memberNode, \"EnumNumberMember\"));\n            break;\n          }\n\n        case \"string\":\n          {\n            this.flowEnumCheckExplicitTypeMismatch(init.pos, context, \"string\");\n            memberNode.init = init.value;\n            members.stringMembers.push(this.finishNode(memberNode, \"EnumStringMember\"));\n            break;\n          }\n\n        case \"invalid\":\n          {\n            throw this.flowEnumErrorInvalidMemberInitializer(init.pos, context);\n          }\n\n        case \"none\":\n          {\n            switch (explicitType) {\n              case \"boolean\":\n                this.flowEnumErrorBooleanMemberNotInitialized(init.pos, context);\n                break;\n\n              case \"number\":\n                this.flowEnumErrorNumberMemberNotInitialized(init.pos, context);\n                break;\n\n              default:\n                members.defaultedMembers.push(this.finishNode(memberNode, \"EnumDefaultedMember\"));\n            }\n          }\n      }\n\n      if (!this.match(types.braceR)) {\n        this.expect(types.comma);\n      }\n    }\n\n    return {\n      members,\n      hasUnknownMembers\n    };\n  }\n\n  flowEnumStringMembers(initializedMembers, defaultedMembers, {\n    enumName\n  }) {\n    if (initializedMembers.length === 0) {\n      return defaultedMembers;\n    } else if (defaultedMembers.length === 0) {\n      return initializedMembers;\n    } else if (defaultedMembers.length > initializedMembers.length) {\n      for (const member of initializedMembers) {\n        this.flowEnumErrorStringMemberInconsistentlyInitailized(member.start, {\n          enumName\n        });\n      }\n\n      return defaultedMembers;\n    } else {\n      for (const member of defaultedMembers) {\n        this.flowEnumErrorStringMemberInconsistentlyInitailized(member.start, {\n          enumName\n        });\n      }\n\n      return initializedMembers;\n    }\n  }\n\n  flowEnumParseExplicitType({\n    enumName\n  }) {\n    if (this.eatContextual(\"of\")) {\n      if (!this.match(types.name)) {\n        throw this.flowEnumErrorInvalidExplicitType(this.state.start, {\n          enumName,\n          suppliedType: null\n        });\n      }\n\n      const {\n        value\n      } = this.state;\n      this.next();\n\n      if (value !== \"boolean\" && value !== \"number\" && value !== \"string\" && value !== \"symbol\") {\n        this.flowEnumErrorInvalidExplicitType(this.state.start, {\n          enumName,\n          suppliedType: value\n        });\n      }\n\n      return value;\n    }\n\n    return null;\n  }\n\n  flowEnumBody(node, {\n    enumName,\n    nameLoc\n  }) {\n    const explicitType = this.flowEnumParseExplicitType({\n      enumName\n    });\n    this.expect(types.braceL);\n    const {\n      members,\n      hasUnknownMembers\n    } = this.flowEnumMembers({\n      enumName,\n      explicitType\n    });\n    node.hasUnknownMembers = hasUnknownMembers;\n\n    switch (explicitType) {\n      case \"boolean\":\n        node.explicitType = true;\n        node.members = members.booleanMembers;\n        this.expect(types.braceR);\n        return this.finishNode(node, \"EnumBooleanBody\");\n\n      case \"number\":\n        node.explicitType = true;\n        node.members = members.numberMembers;\n        this.expect(types.braceR);\n        return this.finishNode(node, \"EnumNumberBody\");\n\n      case \"string\":\n        node.explicitType = true;\n        node.members = this.flowEnumStringMembers(members.stringMembers, members.defaultedMembers, {\n          enumName\n        });\n        this.expect(types.braceR);\n        return this.finishNode(node, \"EnumStringBody\");\n\n      case \"symbol\":\n        node.members = members.defaultedMembers;\n        this.expect(types.braceR);\n        return this.finishNode(node, \"EnumSymbolBody\");\n\n      default:\n        {\n          const empty = () => {\n            node.members = [];\n            this.expect(types.braceR);\n            return this.finishNode(node, \"EnumStringBody\");\n          };\n\n          node.explicitType = false;\n          const boolsLen = members.booleanMembers.length;\n          const numsLen = members.numberMembers.length;\n          const strsLen = members.stringMembers.length;\n          const defaultedLen = members.defaultedMembers.length;\n\n          if (!boolsLen && !numsLen && !strsLen && !defaultedLen) {\n            return empty();\n          } else if (!boolsLen && !numsLen) {\n            node.members = this.flowEnumStringMembers(members.stringMembers, members.defaultedMembers, {\n              enumName\n            });\n            this.expect(types.braceR);\n            return this.finishNode(node, \"EnumStringBody\");\n          } else if (!numsLen && !strsLen && boolsLen >= defaultedLen) {\n            for (const member of members.defaultedMembers) {\n              this.flowEnumErrorBooleanMemberNotInitialized(member.start, {\n                enumName,\n                memberName: member.id.name\n              });\n            }\n\n            node.members = members.booleanMembers;\n            this.expect(types.braceR);\n            return this.finishNode(node, \"EnumBooleanBody\");\n          } else if (!boolsLen && !strsLen && numsLen >= defaultedLen) {\n            for (const member of members.defaultedMembers) {\n              this.flowEnumErrorNumberMemberNotInitialized(member.start, {\n                enumName,\n                memberName: member.id.name\n              });\n            }\n\n            node.members = members.numberMembers;\n            this.expect(types.braceR);\n            return this.finishNode(node, \"EnumNumberBody\");\n          } else {\n            this.flowEnumErrorInconsistentMemberValues(nameLoc, {\n              enumName\n            });\n            return empty();\n          }\n        }\n    }\n  }\n\n  flowParseEnumDeclaration(node) {\n    const id = this.parseIdentifier();\n    node.id = id;\n    node.body = this.flowEnumBody(this.startNode(), {\n      enumName: id.name,\n      nameLoc: id.start\n    });\n    return this.finishNode(node, \"EnumDeclaration\");\n  }\n\n  updateContext(prevType) {\n    if (this.match(types.name) && this.state.value === \"of\" && prevType === types.name && this.input.slice(this.state.lastTokStart, this.state.lastTokEnd) === \"interface\") {\n      this.state.exprAllowed = false;\n    } else {\n      super.updateContext(prevType);\n    }\n  }\n\n  isLookaheadToken_lt() {\n    const next = this.nextTokenStart();\n\n    if (this.input.charCodeAt(next) === 60) {\n      const afterNext = this.input.charCodeAt(next + 1);\n      return afterNext !== 60 && afterNext !== 61;\n    }\n\n    return false;\n  }\n\n  maybeUnwrapTypeCastExpression(node) {\n    return node.type === \"TypeCastExpression\" ? node.expression : node;\n  }\n\n});\n\nconst entities = {\n  quot: \"\\u0022\",\n  amp: \"&\",\n  apos: \"\\u0027\",\n  lt: \"<\",\n  gt: \">\",\n  nbsp: \"\\u00A0\",\n  iexcl: \"\\u00A1\",\n  cent: \"\\u00A2\",\n  pound: \"\\u00A3\",\n  curren: \"\\u00A4\",\n  yen: \"\\u00A5\",\n  brvbar: \"\\u00A6\",\n  sect: \"\\u00A7\",\n  uml: \"\\u00A8\",\n  copy: \"\\u00A9\",\n  ordf: \"\\u00AA\",\n  laquo: \"\\u00AB\",\n  not: \"\\u00AC\",\n  shy: \"\\u00AD\",\n  reg: \"\\u00AE\",\n  macr: \"\\u00AF\",\n  deg: \"\\u00B0\",\n  plusmn: \"\\u00B1\",\n  sup2: \"\\u00B2\",\n  sup3: \"\\u00B3\",\n  acute: \"\\u00B4\",\n  micro: \"\\u00B5\",\n  para: \"\\u00B6\",\n  middot: \"\\u00B7\",\n  cedil: \"\\u00B8\",\n  sup1: \"\\u00B9\",\n  ordm: \"\\u00BA\",\n  raquo: \"\\u00BB\",\n  frac14: \"\\u00BC\",\n  frac12: \"\\u00BD\",\n  frac34: \"\\u00BE\",\n  iquest: \"\\u00BF\",\n  Agrave: \"\\u00C0\",\n  Aacute: \"\\u00C1\",\n  Acirc: \"\\u00C2\",\n  Atilde: \"\\u00C3\",\n  Auml: \"\\u00C4\",\n  Aring: \"\\u00C5\",\n  AElig: \"\\u00C6\",\n  Ccedil: \"\\u00C7\",\n  Egrave: \"\\u00C8\",\n  Eacute: \"\\u00C9\",\n  Ecirc: \"\\u00CA\",\n  Euml: \"\\u00CB\",\n  Igrave: \"\\u00CC\",\n  Iacute: \"\\u00CD\",\n  Icirc: \"\\u00CE\",\n  Iuml: \"\\u00CF\",\n  ETH: \"\\u00D0\",\n  Ntilde: \"\\u00D1\",\n  Ograve: \"\\u00D2\",\n  Oacute: \"\\u00D3\",\n  Ocirc: \"\\u00D4\",\n  Otilde: \"\\u00D5\",\n  Ouml: \"\\u00D6\",\n  times: \"\\u00D7\",\n  Oslash: \"\\u00D8\",\n  Ugrave: \"\\u00D9\",\n  Uacute: \"\\u00DA\",\n  Ucirc: \"\\u00DB\",\n  Uuml: \"\\u00DC\",\n  Yacute: \"\\u00DD\",\n  THORN: \"\\u00DE\",\n  szlig: \"\\u00DF\",\n  agrave: \"\\u00E0\",\n  aacute: \"\\u00E1\",\n  acirc: \"\\u00E2\",\n  atilde: \"\\u00E3\",\n  auml: \"\\u00E4\",\n  aring: \"\\u00E5\",\n  aelig: \"\\u00E6\",\n  ccedil: \"\\u00E7\",\n  egrave: \"\\u00E8\",\n  eacute: \"\\u00E9\",\n  ecirc: \"\\u00EA\",\n  euml: \"\\u00EB\",\n  igrave: \"\\u00EC\",\n  iacute: \"\\u00ED\",\n  icirc: \"\\u00EE\",\n  iuml: \"\\u00EF\",\n  eth: \"\\u00F0\",\n  ntilde: \"\\u00F1\",\n  ograve: \"\\u00F2\",\n  oacute: \"\\u00F3\",\n  ocirc: \"\\u00F4\",\n  otilde: \"\\u00F5\",\n  ouml: \"\\u00F6\",\n  divide: \"\\u00F7\",\n  oslash: \"\\u00F8\",\n  ugrave: \"\\u00F9\",\n  uacute: \"\\u00FA\",\n  ucirc: \"\\u00FB\",\n  uuml: \"\\u00FC\",\n  yacute: \"\\u00FD\",\n  thorn: \"\\u00FE\",\n  yuml: \"\\u00FF\",\n  OElig: \"\\u0152\",\n  oelig: \"\\u0153\",\n  Scaron: \"\\u0160\",\n  scaron: \"\\u0161\",\n  Yuml: \"\\u0178\",\n  fnof: \"\\u0192\",\n  circ: \"\\u02C6\",\n  tilde: \"\\u02DC\",\n  Alpha: \"\\u0391\",\n  Beta: \"\\u0392\",\n  Gamma: \"\\u0393\",\n  Delta: \"\\u0394\",\n  Epsilon: \"\\u0395\",\n  Zeta: \"\\u0396\",\n  Eta: \"\\u0397\",\n  Theta: \"\\u0398\",\n  Iota: \"\\u0399\",\n  Kappa: \"\\u039A\",\n  Lambda: \"\\u039B\",\n  Mu: \"\\u039C\",\n  Nu: \"\\u039D\",\n  Xi: \"\\u039E\",\n  Omicron: \"\\u039F\",\n  Pi: \"\\u03A0\",\n  Rho: \"\\u03A1\",\n  Sigma: \"\\u03A3\",\n  Tau: \"\\u03A4\",\n  Upsilon: \"\\u03A5\",\n  Phi: \"\\u03A6\",\n  Chi: \"\\u03A7\",\n  Psi: \"\\u03A8\",\n  Omega: \"\\u03A9\",\n  alpha: \"\\u03B1\",\n  beta: \"\\u03B2\",\n  gamma: \"\\u03B3\",\n  delta: \"\\u03B4\",\n  epsilon: \"\\u03B5\",\n  zeta: \"\\u03B6\",\n  eta: \"\\u03B7\",\n  theta: \"\\u03B8\",\n  iota: \"\\u03B9\",\n  kappa: \"\\u03BA\",\n  lambda: \"\\u03BB\",\n  mu: \"\\u03BC\",\n  nu: \"\\u03BD\",\n  xi: \"\\u03BE\",\n  omicron: \"\\u03BF\",\n  pi: \"\\u03C0\",\n  rho: \"\\u03C1\",\n  sigmaf: \"\\u03C2\",\n  sigma: \"\\u03C3\",\n  tau: \"\\u03C4\",\n  upsilon: \"\\u03C5\",\n  phi: \"\\u03C6\",\n  chi: \"\\u03C7\",\n  psi: \"\\u03C8\",\n  omega: \"\\u03C9\",\n  thetasym: \"\\u03D1\",\n  upsih: \"\\u03D2\",\n  piv: \"\\u03D6\",\n  ensp: \"\\u2002\",\n  emsp: \"\\u2003\",\n  thinsp: \"\\u2009\",\n  zwnj: \"\\u200C\",\n  zwj: \"\\u200D\",\n  lrm: \"\\u200E\",\n  rlm: \"\\u200F\",\n  ndash: \"\\u2013\",\n  mdash: \"\\u2014\",\n  lsquo: \"\\u2018\",\n  rsquo: \"\\u2019\",\n  sbquo: \"\\u201A\",\n  ldquo: \"\\u201C\",\n  rdquo: \"\\u201D\",\n  bdquo: \"\\u201E\",\n  dagger: \"\\u2020\",\n  Dagger: \"\\u2021\",\n  bull: \"\\u2022\",\n  hellip: \"\\u2026\",\n  permil: \"\\u2030\",\n  prime: \"\\u2032\",\n  Prime: \"\\u2033\",\n  lsaquo: \"\\u2039\",\n  rsaquo: \"\\u203A\",\n  oline: \"\\u203E\",\n  frasl: \"\\u2044\",\n  euro: \"\\u20AC\",\n  image: \"\\u2111\",\n  weierp: \"\\u2118\",\n  real: \"\\u211C\",\n  trade: \"\\u2122\",\n  alefsym: \"\\u2135\",\n  larr: \"\\u2190\",\n  uarr: \"\\u2191\",\n  rarr: \"\\u2192\",\n  darr: \"\\u2193\",\n  harr: \"\\u2194\",\n  crarr: \"\\u21B5\",\n  lArr: \"\\u21D0\",\n  uArr: \"\\u21D1\",\n  rArr: \"\\u21D2\",\n  dArr: \"\\u21D3\",\n  hArr: \"\\u21D4\",\n  forall: \"\\u2200\",\n  part: \"\\u2202\",\n  exist: \"\\u2203\",\n  empty: \"\\u2205\",\n  nabla: \"\\u2207\",\n  isin: \"\\u2208\",\n  notin: \"\\u2209\",\n  ni: \"\\u220B\",\n  prod: \"\\u220F\",\n  sum: \"\\u2211\",\n  minus: \"\\u2212\",\n  lowast: \"\\u2217\",\n  radic: \"\\u221A\",\n  prop: \"\\u221D\",\n  infin: \"\\u221E\",\n  ang: \"\\u2220\",\n  and: \"\\u2227\",\n  or: \"\\u2228\",\n  cap: \"\\u2229\",\n  cup: \"\\u222A\",\n  int: \"\\u222B\",\n  there4: \"\\u2234\",\n  sim: \"\\u223C\",\n  cong: \"\\u2245\",\n  asymp: \"\\u2248\",\n  ne: \"\\u2260\",\n  equiv: \"\\u2261\",\n  le: \"\\u2264\",\n  ge: \"\\u2265\",\n  sub: \"\\u2282\",\n  sup: \"\\u2283\",\n  nsub: \"\\u2284\",\n  sube: \"\\u2286\",\n  supe: \"\\u2287\",\n  oplus: \"\\u2295\",\n  otimes: \"\\u2297\",\n  perp: \"\\u22A5\",\n  sdot: \"\\u22C5\",\n  lceil: \"\\u2308\",\n  rceil: \"\\u2309\",\n  lfloor: \"\\u230A\",\n  rfloor: \"\\u230B\",\n  lang: \"\\u2329\",\n  rang: \"\\u232A\",\n  loz: \"\\u25CA\",\n  spades: \"\\u2660\",\n  clubs: \"\\u2663\",\n  hearts: \"\\u2665\",\n  diams: \"\\u2666\"\n};\n\nconst HEX_NUMBER = /^[\\da-fA-F]+$/;\nconst DECIMAL_NUMBER = /^\\d+$/;\nconst JsxErrors = Object.freeze({\n  AttributeIsEmpty: \"JSX attributes must only be assigned a non-empty expression\",\n  MissingClosingTagElement: \"Expected corresponding JSX closing tag for <%0>\",\n  MissingClosingTagFragment: \"Expected corresponding JSX closing tag for <>\",\n  UnexpectedSequenceExpression: \"Sequence expressions cannot be directly nested inside JSX. Did you mean to wrap it in parentheses (...)?\",\n  UnsupportedJsxValue: \"JSX value should be either an expression or a quoted JSX text\",\n  UnterminatedJsxContent: \"Unterminated JSX contents\",\n  UnwrappedAdjacentJSXElements: \"Adjacent JSX elements must be wrapped in an enclosing tag. Did you want a JSX fragment <>...</>?\"\n});\ntypes$1.j_oTag = new TokContext(\"<tag\", false);\ntypes$1.j_cTag = new TokContext(\"</tag\", false);\ntypes$1.j_expr = new TokContext(\"<tag>...</tag>\", true, true);\ntypes.jsxName = new TokenType(\"jsxName\");\ntypes.jsxText = new TokenType(\"jsxText\", {\n  beforeExpr: true\n});\ntypes.jsxTagStart = new TokenType(\"jsxTagStart\", {\n  startsExpr: true\n});\ntypes.jsxTagEnd = new TokenType(\"jsxTagEnd\");\n\ntypes.jsxTagStart.updateContext = function () {\n  this.state.context.push(types$1.j_expr);\n  this.state.context.push(types$1.j_oTag);\n  this.state.exprAllowed = false;\n};\n\ntypes.jsxTagEnd.updateContext = function (prevType) {\n  const out = this.state.context.pop();\n\n  if (out === types$1.j_oTag && prevType === types.slash || out === types$1.j_cTag) {\n    this.state.context.pop();\n    this.state.exprAllowed = this.curContext() === types$1.j_expr;\n  } else {\n    this.state.exprAllowed = true;\n  }\n};\n\nfunction isFragment(object) {\n  return object ? object.type === \"JSXOpeningFragment\" || object.type === \"JSXClosingFragment\" : false;\n}\n\nfunction getQualifiedJSXName(object) {\n  if (object.type === \"JSXIdentifier\") {\n    return object.name;\n  }\n\n  if (object.type === \"JSXNamespacedName\") {\n    return object.namespace.name + \":\" + object.name.name;\n  }\n\n  if (object.type === \"JSXMemberExpression\") {\n    return getQualifiedJSXName(object.object) + \".\" + getQualifiedJSXName(object.property);\n  }\n\n  throw new Error(\"Node had unexpected type: \" + object.type);\n}\n\nvar jsx = (superClass => class extends superClass {\n  jsxReadToken() {\n    let out = \"\";\n    let chunkStart = this.state.pos;\n\n    for (;;) {\n      if (this.state.pos >= this.length) {\n        throw this.raise(this.state.start, JsxErrors.UnterminatedJsxContent);\n      }\n\n      const ch = this.input.charCodeAt(this.state.pos);\n\n      switch (ch) {\n        case 60:\n        case 123:\n          if (this.state.pos === this.state.start) {\n            if (ch === 60 && this.state.exprAllowed) {\n              ++this.state.pos;\n              return this.finishToken(types.jsxTagStart);\n            }\n\n            return super.getTokenFromCode(ch);\n          }\n\n          out += this.input.slice(chunkStart, this.state.pos);\n          return this.finishToken(types.jsxText, out);\n\n        case 38:\n          out += this.input.slice(chunkStart, this.state.pos);\n          out += this.jsxReadEntity();\n          chunkStart = this.state.pos;\n          break;\n\n        case 62:\n        case 125:\n\n        default:\n          if (isNewLine(ch)) {\n            out += this.input.slice(chunkStart, this.state.pos);\n            out += this.jsxReadNewLine(true);\n            chunkStart = this.state.pos;\n          } else {\n            ++this.state.pos;\n          }\n\n      }\n    }\n  }\n\n  jsxReadNewLine(normalizeCRLF) {\n    const ch = this.input.charCodeAt(this.state.pos);\n    let out;\n    ++this.state.pos;\n\n    if (ch === 13 && this.input.charCodeAt(this.state.pos) === 10) {\n      ++this.state.pos;\n      out = normalizeCRLF ? \"\\n\" : \"\\r\\n\";\n    } else {\n      out = String.fromCharCode(ch);\n    }\n\n    ++this.state.curLine;\n    this.state.lineStart = this.state.pos;\n    return out;\n  }\n\n  jsxReadString(quote) {\n    let out = \"\";\n    let chunkStart = ++this.state.pos;\n\n    for (;;) {\n      if (this.state.pos >= this.length) {\n        throw this.raise(this.state.start, ErrorMessages.UnterminatedString);\n      }\n\n      const ch = this.input.charCodeAt(this.state.pos);\n      if (ch === quote) break;\n\n      if (ch === 38) {\n        out += this.input.slice(chunkStart, this.state.pos);\n        out += this.jsxReadEntity();\n        chunkStart = this.state.pos;\n      } else if (isNewLine(ch)) {\n        out += this.input.slice(chunkStart, this.state.pos);\n        out += this.jsxReadNewLine(false);\n        chunkStart = this.state.pos;\n      } else {\n        ++this.state.pos;\n      }\n    }\n\n    out += this.input.slice(chunkStart, this.state.pos++);\n    return this.finishToken(types.string, out);\n  }\n\n  jsxReadEntity() {\n    let str = \"\";\n    let count = 0;\n    let entity;\n    let ch = this.input[this.state.pos];\n    const startPos = ++this.state.pos;\n\n    while (this.state.pos < this.length && count++ < 10) {\n      ch = this.input[this.state.pos++];\n\n      if (ch === \";\") {\n        if (str[0] === \"#\") {\n          if (str[1] === \"x\") {\n            str = str.substr(2);\n\n            if (HEX_NUMBER.test(str)) {\n              entity = String.fromCodePoint(parseInt(str, 16));\n            }\n          } else {\n            str = str.substr(1);\n\n            if (DECIMAL_NUMBER.test(str)) {\n              entity = String.fromCodePoint(parseInt(str, 10));\n            }\n          }\n        } else {\n          entity = entities[str];\n        }\n\n        break;\n      }\n\n      str += ch;\n    }\n\n    if (!entity) {\n      this.state.pos = startPos;\n      return \"&\";\n    }\n\n    return entity;\n  }\n\n  jsxReadWord() {\n    let ch;\n    const start = this.state.pos;\n\n    do {\n      ch = this.input.charCodeAt(++this.state.pos);\n    } while (isIdentifierChar(ch) || ch === 45);\n\n    return this.finishToken(types.jsxName, this.input.slice(start, this.state.pos));\n  }\n\n  jsxParseIdentifier() {\n    const node = this.startNode();\n\n    if (this.match(types.jsxName)) {\n      node.name = this.state.value;\n    } else if (this.state.type.keyword) {\n      node.name = this.state.type.keyword;\n    } else {\n      this.unexpected();\n    }\n\n    this.next();\n    return this.finishNode(node, \"JSXIdentifier\");\n  }\n\n  jsxParseNamespacedName() {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const name = this.jsxParseIdentifier();\n    if (!this.eat(types.colon)) return name;\n    const node = this.startNodeAt(startPos, startLoc);\n    node.namespace = name;\n    node.name = this.jsxParseIdentifier();\n    return this.finishNode(node, \"JSXNamespacedName\");\n  }\n\n  jsxParseElementName() {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    let node = this.jsxParseNamespacedName();\n\n    if (node.type === \"JSXNamespacedName\") {\n      return node;\n    }\n\n    while (this.eat(types.dot)) {\n      const newNode = this.startNodeAt(startPos, startLoc);\n      newNode.object = node;\n      newNode.property = this.jsxParseIdentifier();\n      node = this.finishNode(newNode, \"JSXMemberExpression\");\n    }\n\n    return node;\n  }\n\n  jsxParseAttributeValue() {\n    let node;\n\n    switch (this.state.type) {\n      case types.braceL:\n        node = this.startNode();\n        this.next();\n        node = this.jsxParseExpressionContainer(node);\n\n        if (node.expression.type === \"JSXEmptyExpression\") {\n          this.raise(node.start, JsxErrors.AttributeIsEmpty);\n        }\n\n        return node;\n\n      case types.jsxTagStart:\n      case types.string:\n        return this.parseExprAtom();\n\n      default:\n        throw this.raise(this.state.start, JsxErrors.UnsupportedJsxValue);\n    }\n  }\n\n  jsxParseEmptyExpression() {\n    const node = this.startNodeAt(this.state.lastTokEnd, this.state.lastTokEndLoc);\n    return this.finishNodeAt(node, \"JSXEmptyExpression\", this.state.start, this.state.startLoc);\n  }\n\n  jsxParseSpreadChild(node) {\n    this.next();\n    node.expression = this.parseExpression();\n    this.expect(types.braceR);\n    return this.finishNode(node, \"JSXSpreadChild\");\n  }\n\n  jsxParseExpressionContainer(node) {\n    if (this.match(types.braceR)) {\n      node.expression = this.jsxParseEmptyExpression();\n    } else {\n      const expression = this.parseExpression();\n      node.expression = expression;\n    }\n\n    this.expect(types.braceR);\n    return this.finishNode(node, \"JSXExpressionContainer\");\n  }\n\n  jsxParseAttribute() {\n    const node = this.startNode();\n\n    if (this.eat(types.braceL)) {\n      this.expect(types.ellipsis);\n      node.argument = this.parseMaybeAssignAllowIn();\n      this.expect(types.braceR);\n      return this.finishNode(node, \"JSXSpreadAttribute\");\n    }\n\n    node.name = this.jsxParseNamespacedName();\n    node.value = this.eat(types.eq) ? this.jsxParseAttributeValue() : null;\n    return this.finishNode(node, \"JSXAttribute\");\n  }\n\n  jsxParseOpeningElementAt(startPos, startLoc) {\n    const node = this.startNodeAt(startPos, startLoc);\n\n    if (this.match(types.jsxTagEnd)) {\n      this.expect(types.jsxTagEnd);\n      return this.finishNode(node, \"JSXOpeningFragment\");\n    }\n\n    node.name = this.jsxParseElementName();\n    return this.jsxParseOpeningElementAfterName(node);\n  }\n\n  jsxParseOpeningElementAfterName(node) {\n    const attributes = [];\n\n    while (!this.match(types.slash) && !this.match(types.jsxTagEnd)) {\n      attributes.push(this.jsxParseAttribute());\n    }\n\n    node.attributes = attributes;\n    node.selfClosing = this.eat(types.slash);\n    this.expect(types.jsxTagEnd);\n    return this.finishNode(node, \"JSXOpeningElement\");\n  }\n\n  jsxParseClosingElementAt(startPos, startLoc) {\n    const node = this.startNodeAt(startPos, startLoc);\n\n    if (this.match(types.jsxTagEnd)) {\n      this.expect(types.jsxTagEnd);\n      return this.finishNode(node, \"JSXClosingFragment\");\n    }\n\n    node.name = this.jsxParseElementName();\n    this.expect(types.jsxTagEnd);\n    return this.finishNode(node, \"JSXClosingElement\");\n  }\n\n  jsxParseElementAt(startPos, startLoc) {\n    const node = this.startNodeAt(startPos, startLoc);\n    const children = [];\n    const openingElement = this.jsxParseOpeningElementAt(startPos, startLoc);\n    let closingElement = null;\n\n    if (!openingElement.selfClosing) {\n      contents: for (;;) {\n        switch (this.state.type) {\n          case types.jsxTagStart:\n            startPos = this.state.start;\n            startLoc = this.state.startLoc;\n            this.next();\n\n            if (this.eat(types.slash)) {\n              closingElement = this.jsxParseClosingElementAt(startPos, startLoc);\n              break contents;\n            }\n\n            children.push(this.jsxParseElementAt(startPos, startLoc));\n            break;\n\n          case types.jsxText:\n            children.push(this.parseExprAtom());\n            break;\n\n          case types.braceL:\n            {\n              const node = this.startNode();\n              this.next();\n\n              if (this.match(types.ellipsis)) {\n                children.push(this.jsxParseSpreadChild(node));\n              } else {\n                children.push(this.jsxParseExpressionContainer(node));\n              }\n\n              break;\n            }\n\n          default:\n            throw this.unexpected();\n        }\n      }\n\n      if (isFragment(openingElement) && !isFragment(closingElement)) {\n        this.raise(closingElement.start, JsxErrors.MissingClosingTagFragment);\n      } else if (!isFragment(openingElement) && isFragment(closingElement)) {\n        this.raise(closingElement.start, JsxErrors.MissingClosingTagElement, getQualifiedJSXName(openingElement.name));\n      } else if (!isFragment(openingElement) && !isFragment(closingElement)) {\n        if (getQualifiedJSXName(closingElement.name) !== getQualifiedJSXName(openingElement.name)) {\n          this.raise(closingElement.start, JsxErrors.MissingClosingTagElement, getQualifiedJSXName(openingElement.name));\n        }\n      }\n    }\n\n    if (isFragment(openingElement)) {\n      node.openingFragment = openingElement;\n      node.closingFragment = closingElement;\n    } else {\n      node.openingElement = openingElement;\n      node.closingElement = closingElement;\n    }\n\n    node.children = children;\n\n    if (this.isRelational(\"<\")) {\n      throw this.raise(this.state.start, JsxErrors.UnwrappedAdjacentJSXElements);\n    }\n\n    return isFragment(openingElement) ? this.finishNode(node, \"JSXFragment\") : this.finishNode(node, \"JSXElement\");\n  }\n\n  jsxParseElement() {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    this.next();\n    return this.jsxParseElementAt(startPos, startLoc);\n  }\n\n  parseExprAtom(refExpressionErrors) {\n    if (this.match(types.jsxText)) {\n      return this.parseLiteral(this.state.value, \"JSXText\");\n    } else if (this.match(types.jsxTagStart)) {\n      return this.jsxParseElement();\n    } else if (this.isRelational(\"<\") && this.input.charCodeAt(this.state.pos) !== 33) {\n      this.finishToken(types.jsxTagStart);\n      return this.jsxParseElement();\n    } else {\n      return super.parseExprAtom(refExpressionErrors);\n    }\n  }\n\n  getTokenFromCode(code) {\n    if (this.state.inPropertyName) return super.getTokenFromCode(code);\n    const context = this.curContext();\n\n    if (context === types$1.j_expr) {\n      return this.jsxReadToken();\n    }\n\n    if (context === types$1.j_oTag || context === types$1.j_cTag) {\n      if (isIdentifierStart(code)) {\n        return this.jsxReadWord();\n      }\n\n      if (code === 62) {\n        ++this.state.pos;\n        return this.finishToken(types.jsxTagEnd);\n      }\n\n      if ((code === 34 || code === 39) && context === types$1.j_oTag) {\n        return this.jsxReadString(code);\n      }\n    }\n\n    if (code === 60 && this.state.exprAllowed && this.input.charCodeAt(this.state.pos + 1) !== 33) {\n      ++this.state.pos;\n      return this.finishToken(types.jsxTagStart);\n    }\n\n    return super.getTokenFromCode(code);\n  }\n\n  updateContext(prevType) {\n    if (this.match(types.braceL)) {\n      const curContext = this.curContext();\n\n      if (curContext === types$1.j_oTag) {\n        this.state.context.push(types$1.braceExpression);\n      } else if (curContext === types$1.j_expr) {\n        this.state.context.push(types$1.templateQuasi);\n      } else {\n        super.updateContext(prevType);\n      }\n\n      this.state.exprAllowed = true;\n    } else if (this.match(types.slash) && prevType === types.jsxTagStart) {\n      this.state.context.length -= 2;\n      this.state.context.push(types$1.j_cTag);\n      this.state.exprAllowed = false;\n    } else {\n      return super.updateContext(prevType);\n    }\n  }\n\n});\n\nclass TypeScriptScope extends Scope {\n  constructor(...args) {\n    super(...args);\n    this.types = [];\n    this.enums = [];\n    this.constEnums = [];\n    this.classes = [];\n    this.exportOnlyBindings = [];\n  }\n\n}\n\nclass TypeScriptScopeHandler extends ScopeHandler {\n  createScope(flags) {\n    return new TypeScriptScope(flags);\n  }\n\n  declareName(name, bindingType, pos) {\n    const scope = this.currentScope();\n\n    if (bindingType & BIND_FLAGS_TS_EXPORT_ONLY) {\n      this.maybeExportDefined(scope, name);\n      scope.exportOnlyBindings.push(name);\n      return;\n    }\n\n    super.declareName(...arguments);\n\n    if (bindingType & BIND_KIND_TYPE) {\n      if (!(bindingType & BIND_KIND_VALUE)) {\n        this.checkRedeclarationInScope(scope, name, bindingType, pos);\n        this.maybeExportDefined(scope, name);\n      }\n\n      scope.types.push(name);\n    }\n\n    if (bindingType & BIND_FLAGS_TS_ENUM) scope.enums.push(name);\n    if (bindingType & BIND_FLAGS_TS_CONST_ENUM) scope.constEnums.push(name);\n    if (bindingType & BIND_FLAGS_CLASS) scope.classes.push(name);\n  }\n\n  isRedeclaredInScope(scope, name, bindingType) {\n    if (scope.enums.indexOf(name) > -1) {\n      if (bindingType & BIND_FLAGS_TS_ENUM) {\n        const isConst = !!(bindingType & BIND_FLAGS_TS_CONST_ENUM);\n        const wasConst = scope.constEnums.indexOf(name) > -1;\n        return isConst !== wasConst;\n      }\n\n      return true;\n    }\n\n    if (bindingType & BIND_FLAGS_CLASS && scope.classes.indexOf(name) > -1) {\n      if (scope.lexical.indexOf(name) > -1) {\n        return !!(bindingType & BIND_KIND_VALUE);\n      } else {\n        return false;\n      }\n    }\n\n    if (bindingType & BIND_KIND_TYPE && scope.types.indexOf(name) > -1) {\n      return true;\n    }\n\n    return super.isRedeclaredInScope(...arguments);\n  }\n\n  checkLocalExport(id) {\n    if (this.scopeStack[0].types.indexOf(id.name) === -1 && this.scopeStack[0].exportOnlyBindings.indexOf(id.name) === -1) {\n      super.checkLocalExport(id);\n    }\n  }\n\n}\n\nconst PARAM = 0b0000,\n      PARAM_YIELD = 0b0001,\n      PARAM_AWAIT = 0b0010,\n      PARAM_RETURN = 0b0100,\n      PARAM_IN = 0b1000;\nclass ProductionParameterHandler {\n  constructor() {\n    this.stacks = [];\n  }\n\n  enter(flags) {\n    this.stacks.push(flags);\n  }\n\n  exit() {\n    this.stacks.pop();\n  }\n\n  currentFlags() {\n    return this.stacks[this.stacks.length - 1];\n  }\n\n  get hasAwait() {\n    return (this.currentFlags() & PARAM_AWAIT) > 0;\n  }\n\n  get hasYield() {\n    return (this.currentFlags() & PARAM_YIELD) > 0;\n  }\n\n  get hasReturn() {\n    return (this.currentFlags() & PARAM_RETURN) > 0;\n  }\n\n  get hasIn() {\n    return (this.currentFlags() & PARAM_IN) > 0;\n  }\n\n}\nfunction functionFlags(isAsync, isGenerator) {\n  return (isAsync ? PARAM_AWAIT : 0) | (isGenerator ? PARAM_YIELD : 0);\n}\n\nfunction nonNull(x) {\n  if (x == null) {\n    throw new Error(`Unexpected ${x} value.`);\n  }\n\n  return x;\n}\n\nfunction assert(x) {\n  if (!x) {\n    throw new Error(\"Assert fail\");\n  }\n}\n\nconst TSErrors = Object.freeze({\n  AbstractMethodHasImplementation: \"Method '%0' cannot have an implementation because it is marked abstract.\",\n  ClassMethodHasDeclare: \"Class methods cannot have the 'declare' modifier\",\n  ClassMethodHasReadonly: \"Class methods cannot have the 'readonly' modifier\",\n  ConstructorHasTypeParameters: \"Type parameters cannot appear on a constructor declaration.\",\n  DeclareAccessor: \"'declare' is not allowed in %0ters.\",\n  DeclareClassFieldHasInitializer: \"Initializers are not allowed in ambient contexts.\",\n  DeclareFunctionHasImplementation: \"An implementation cannot be declared in ambient contexts.\",\n  DuplicateAccessibilityModifier: \"Accessibility modifier already seen.\",\n  DuplicateModifier: \"Duplicate modifier: '%0'\",\n  EmptyHeritageClauseType: \"'%0' list cannot be empty.\",\n  EmptyTypeArguments: \"Type argument list cannot be empty.\",\n  EmptyTypeParameters: \"Type parameter list cannot be empty.\",\n  ExpectedAmbientAfterExportDeclare: \"'export declare' must be followed by an ambient declaration.\",\n  ImportAliasHasImportType: \"An import alias can not use 'import type'\",\n  IndexSignatureHasAbstract: \"Index signatures cannot have the 'abstract' modifier\",\n  IndexSignatureHasAccessibility: \"Index signatures cannot have an accessibility modifier ('%0')\",\n  IndexSignatureHasDeclare: \"Index signatures cannot have the 'declare' modifier\",\n  IndexSignatureHasStatic: \"Index signatures cannot have the 'static' modifier\",\n  InvalidModifierOnTypeMember: \"'%0' modifier cannot appear on a type member.\",\n  InvalidTupleMemberLabel: \"Tuple members must be labeled with a simple identifier.\",\n  MixedLabeledAndUnlabeledElements: \"Tuple members must all have names or all not have names.\",\n  NonAbstractClassHasAbstractMethod: \"Abstract methods can only appear within an abstract class.\",\n  NonClassMethodPropertyHasAbstractModifer: \"'abstract' modifier can only appear on a class, method, or property declaration.\",\n  OptionalTypeBeforeRequired: \"A required element cannot follow an optional element.\",\n  PatternIsOptional: \"A binding pattern parameter cannot be optional in an implementation signature.\",\n  PrivateElementHasAbstract: \"Private elements cannot have the 'abstract' modifier.\",\n  PrivateElementHasAccessibility: \"Private elements cannot have an accessibility modifier ('%0')\",\n  ReadonlyForMethodSignature: \"'readonly' modifier can only appear on a property declaration or index signature.\",\n  TypeAnnotationAfterAssign: \"Type annotations must come before default assignments, e.g. instead of `age = 25: number` use `age: number = 25`\",\n  UnexpectedParameterModifier: \"A parameter property is only allowed in a constructor implementation.\",\n  UnexpectedReadonly: \"'readonly' type modifier is only permitted on array and tuple literal types.\",\n  UnexpectedTypeAnnotation: \"Did not expect a type annotation here.\",\n  UnexpectedTypeCastInParameter: \"Unexpected type cast in parameter position.\",\n  UnsupportedImportTypeArgument: \"Argument in a type import must be a string literal\",\n  UnsupportedParameterPropertyKind: \"A parameter property may not be declared using a binding pattern.\",\n  UnsupportedSignatureParameterKind: \"Name in a signature must be an Identifier, ObjectPattern or ArrayPattern, instead got %0\"\n});\n\nfunction keywordTypeFromName(value) {\n  switch (value) {\n    case \"any\":\n      return \"TSAnyKeyword\";\n\n    case \"boolean\":\n      return \"TSBooleanKeyword\";\n\n    case \"bigint\":\n      return \"TSBigIntKeyword\";\n\n    case \"never\":\n      return \"TSNeverKeyword\";\n\n    case \"number\":\n      return \"TSNumberKeyword\";\n\n    case \"object\":\n      return \"TSObjectKeyword\";\n\n    case \"string\":\n      return \"TSStringKeyword\";\n\n    case \"symbol\":\n      return \"TSSymbolKeyword\";\n\n    case \"undefined\":\n      return \"TSUndefinedKeyword\";\n\n    case \"unknown\":\n      return \"TSUnknownKeyword\";\n\n    default:\n      return undefined;\n  }\n}\n\nfunction tsIsAccessModifier(modifier) {\n  return modifier === \"private\" || modifier === \"public\" || modifier === \"protected\";\n}\n\nvar typescript = (superClass => class extends superClass {\n  getScopeHandler() {\n    return TypeScriptScopeHandler;\n  }\n\n  tsIsIdentifier() {\n    return this.match(types.name);\n  }\n\n  tsNextTokenCanFollowModifier() {\n    this.next();\n    return (this.match(types.bracketL) || this.match(types.braceL) || this.match(types.star) || this.match(types.ellipsis) || this.match(types.hash) || this.isLiteralPropertyName()) && !this.hasPrecedingLineBreak();\n  }\n\n  tsParseModifier(allowedModifiers) {\n    if (!this.match(types.name)) {\n      return undefined;\n    }\n\n    const modifier = this.state.value;\n\n    if (allowedModifiers.indexOf(modifier) !== -1 && this.tsTryParse(this.tsNextTokenCanFollowModifier.bind(this))) {\n      return modifier;\n    }\n\n    return undefined;\n  }\n\n  tsParseModifiers(modified, allowedModifiers, disallowedModifiers, errorTemplate) {\n    for (;;) {\n      const startPos = this.state.start;\n      const modifier = this.tsParseModifier(allowedModifiers.concat(disallowedModifiers != null ? disallowedModifiers : []));\n      if (!modifier) break;\n\n      if (tsIsAccessModifier(modifier)) {\n        if (modified.accessibility) {\n          this.raise(startPos, TSErrors.DuplicateAccessibilityModifier);\n        } else {\n          modified.accessibility = modifier;\n        }\n      } else {\n        if (Object.hasOwnProperty.call(modified, modifier)) {\n          this.raise(startPos, TSErrors.DuplicateModifier, modifier);\n        }\n\n        modified[modifier] = true;\n      }\n\n      if (disallowedModifiers != null && disallowedModifiers.includes(modifier)) {\n        this.raise(startPos, errorTemplate, modifier);\n      }\n    }\n  }\n\n  tsIsListTerminator(kind) {\n    switch (kind) {\n      case \"EnumMembers\":\n      case \"TypeMembers\":\n        return this.match(types.braceR);\n\n      case \"HeritageClauseElement\":\n        return this.match(types.braceL);\n\n      case \"TupleElementTypes\":\n        return this.match(types.bracketR);\n\n      case \"TypeParametersOrArguments\":\n        return this.isRelational(\">\");\n    }\n\n    throw new Error(\"Unreachable\");\n  }\n\n  tsParseList(kind, parseElement) {\n    const result = [];\n\n    while (!this.tsIsListTerminator(kind)) {\n      result.push(parseElement());\n    }\n\n    return result;\n  }\n\n  tsParseDelimitedList(kind, parseElement) {\n    return nonNull(this.tsParseDelimitedListWorker(kind, parseElement, true));\n  }\n\n  tsParseDelimitedListWorker(kind, parseElement, expectSuccess) {\n    const result = [];\n\n    for (;;) {\n      if (this.tsIsListTerminator(kind)) {\n        break;\n      }\n\n      const element = parseElement();\n\n      if (element == null) {\n        return undefined;\n      }\n\n      result.push(element);\n\n      if (this.eat(types.comma)) {\n        continue;\n      }\n\n      if (this.tsIsListTerminator(kind)) {\n        break;\n      }\n\n      if (expectSuccess) {\n        this.expect(types.comma);\n      }\n\n      return undefined;\n    }\n\n    return result;\n  }\n\n  tsParseBracketedList(kind, parseElement, bracket, skipFirstToken) {\n    if (!skipFirstToken) {\n      if (bracket) {\n        this.expect(types.bracketL);\n      } else {\n        this.expectRelational(\"<\");\n      }\n    }\n\n    const result = this.tsParseDelimitedList(kind, parseElement);\n\n    if (bracket) {\n      this.expect(types.bracketR);\n    } else {\n      this.expectRelational(\">\");\n    }\n\n    return result;\n  }\n\n  tsParseImportType() {\n    const node = this.startNode();\n    this.expect(types._import);\n    this.expect(types.parenL);\n\n    if (!this.match(types.string)) {\n      this.raise(this.state.start, TSErrors.UnsupportedImportTypeArgument);\n    }\n\n    node.argument = this.parseExprAtom();\n    this.expect(types.parenR);\n\n    if (this.eat(types.dot)) {\n      node.qualifier = this.tsParseEntityName(true);\n    }\n\n    if (this.isRelational(\"<\")) {\n      node.typeParameters = this.tsParseTypeArguments();\n    }\n\n    return this.finishNode(node, \"TSImportType\");\n  }\n\n  tsParseEntityName(allowReservedWords) {\n    let entity = this.parseIdentifier();\n\n    while (this.eat(types.dot)) {\n      const node = this.startNodeAtNode(entity);\n      node.left = entity;\n      node.right = this.parseIdentifier(allowReservedWords);\n      entity = this.finishNode(node, \"TSQualifiedName\");\n    }\n\n    return entity;\n  }\n\n  tsParseTypeReference() {\n    const node = this.startNode();\n    node.typeName = this.tsParseEntityName(false);\n\n    if (!this.hasPrecedingLineBreak() && this.isRelational(\"<\")) {\n      node.typeParameters = this.tsParseTypeArguments();\n    }\n\n    return this.finishNode(node, \"TSTypeReference\");\n  }\n\n  tsParseThisTypePredicate(lhs) {\n    this.next();\n    const node = this.startNodeAtNode(lhs);\n    node.parameterName = lhs;\n    node.typeAnnotation = this.tsParseTypeAnnotation(false);\n    node.asserts = false;\n    return this.finishNode(node, \"TSTypePredicate\");\n  }\n\n  tsParseThisTypeNode() {\n    const node = this.startNode();\n    this.next();\n    return this.finishNode(node, \"TSThisType\");\n  }\n\n  tsParseTypeQuery() {\n    const node = this.startNode();\n    this.expect(types._typeof);\n\n    if (this.match(types._import)) {\n      node.exprName = this.tsParseImportType();\n    } else {\n      node.exprName = this.tsParseEntityName(true);\n    }\n\n    return this.finishNode(node, \"TSTypeQuery\");\n  }\n\n  tsParseTypeParameter() {\n    const node = this.startNode();\n    node.name = this.parseIdentifierName(node.start);\n    node.constraint = this.tsEatThenParseType(types._extends);\n    node.default = this.tsEatThenParseType(types.eq);\n    return this.finishNode(node, \"TSTypeParameter\");\n  }\n\n  tsTryParseTypeParameters() {\n    if (this.isRelational(\"<\")) {\n      return this.tsParseTypeParameters();\n    }\n  }\n\n  tsParseTypeParameters() {\n    const node = this.startNode();\n\n    if (this.isRelational(\"<\") || this.match(types.jsxTagStart)) {\n      this.next();\n    } else {\n      this.unexpected();\n    }\n\n    node.params = this.tsParseBracketedList(\"TypeParametersOrArguments\", this.tsParseTypeParameter.bind(this), false, true);\n\n    if (node.params.length === 0) {\n      this.raise(node.start, TSErrors.EmptyTypeParameters);\n    }\n\n    return this.finishNode(node, \"TSTypeParameterDeclaration\");\n  }\n\n  tsTryNextParseConstantContext() {\n    if (this.lookahead().type === types._const) {\n      this.next();\n      return this.tsParseTypeReference();\n    }\n\n    return null;\n  }\n\n  tsFillSignature(returnToken, signature) {\n    const returnTokenRequired = returnToken === types.arrow;\n    signature.typeParameters = this.tsTryParseTypeParameters();\n    this.expect(types.parenL);\n    signature.parameters = this.tsParseBindingListForSignature();\n\n    if (returnTokenRequired) {\n      signature.typeAnnotation = this.tsParseTypeOrTypePredicateAnnotation(returnToken);\n    } else if (this.match(returnToken)) {\n      signature.typeAnnotation = this.tsParseTypeOrTypePredicateAnnotation(returnToken);\n    }\n  }\n\n  tsParseBindingListForSignature() {\n    return this.parseBindingList(types.parenR, 41).map(pattern => {\n      if (pattern.type !== \"Identifier\" && pattern.type !== \"RestElement\" && pattern.type !== \"ObjectPattern\" && pattern.type !== \"ArrayPattern\") {\n        this.raise(pattern.start, TSErrors.UnsupportedSignatureParameterKind, pattern.type);\n      }\n\n      return pattern;\n    });\n  }\n\n  tsParseTypeMemberSemicolon() {\n    if (!this.eat(types.comma)) {\n      this.semicolon();\n    }\n  }\n\n  tsParseSignatureMember(kind, node) {\n    this.tsFillSignature(types.colon, node);\n    this.tsParseTypeMemberSemicolon();\n    return this.finishNode(node, kind);\n  }\n\n  tsIsUnambiguouslyIndexSignature() {\n    this.next();\n    return this.eat(types.name) && this.match(types.colon);\n  }\n\n  tsTryParseIndexSignature(node) {\n    if (!(this.match(types.bracketL) && this.tsLookAhead(this.tsIsUnambiguouslyIndexSignature.bind(this)))) {\n      return undefined;\n    }\n\n    this.expect(types.bracketL);\n    const id = this.parseIdentifier();\n    id.typeAnnotation = this.tsParseTypeAnnotation();\n    this.resetEndLocation(id);\n    this.expect(types.bracketR);\n    node.parameters = [id];\n    const type = this.tsTryParseTypeAnnotation();\n    if (type) node.typeAnnotation = type;\n    this.tsParseTypeMemberSemicolon();\n    return this.finishNode(node, \"TSIndexSignature\");\n  }\n\n  tsParsePropertyOrMethodSignature(node, readonly) {\n    if (this.eat(types.question)) node.optional = true;\n    const nodeAny = node;\n\n    if (this.match(types.parenL) || this.isRelational(\"<\")) {\n      if (readonly) {\n        this.raise(node.start, TSErrors.ReadonlyForMethodSignature);\n      }\n\n      const method = nodeAny;\n      this.tsFillSignature(types.colon, method);\n      this.tsParseTypeMemberSemicolon();\n      return this.finishNode(method, \"TSMethodSignature\");\n    } else {\n      const property = nodeAny;\n      if (readonly) property.readonly = true;\n      const type = this.tsTryParseTypeAnnotation();\n      if (type) property.typeAnnotation = type;\n      this.tsParseTypeMemberSemicolon();\n      return this.finishNode(property, \"TSPropertySignature\");\n    }\n  }\n\n  tsParseTypeMember() {\n    const node = this.startNode();\n\n    if (this.match(types.parenL) || this.isRelational(\"<\")) {\n      return this.tsParseSignatureMember(\"TSCallSignatureDeclaration\", node);\n    }\n\n    if (this.match(types._new)) {\n      const id = this.startNode();\n      this.next();\n\n      if (this.match(types.parenL) || this.isRelational(\"<\")) {\n        return this.tsParseSignatureMember(\"TSConstructSignatureDeclaration\", node);\n      } else {\n        node.key = this.createIdentifier(id, \"new\");\n        return this.tsParsePropertyOrMethodSignature(node, false);\n      }\n    }\n\n    this.tsParseModifiers(node, [\"readonly\"], [\"declare\", \"abstract\", \"private\", \"protected\", \"public\", \"static\"], TSErrors.InvalidModifierOnTypeMember);\n    const idx = this.tsTryParseIndexSignature(node);\n\n    if (idx) {\n      return idx;\n    }\n\n    this.parsePropertyName(node, false);\n    return this.tsParsePropertyOrMethodSignature(node, !!node.readonly);\n  }\n\n  tsParseTypeLiteral() {\n    const node = this.startNode();\n    node.members = this.tsParseObjectTypeMembers();\n    return this.finishNode(node, \"TSTypeLiteral\");\n  }\n\n  tsParseObjectTypeMembers() {\n    this.expect(types.braceL);\n    const members = this.tsParseList(\"TypeMembers\", this.tsParseTypeMember.bind(this));\n    this.expect(types.braceR);\n    return members;\n  }\n\n  tsIsStartOfMappedType() {\n    this.next();\n\n    if (this.eat(types.plusMin)) {\n      return this.isContextual(\"readonly\");\n    }\n\n    if (this.isContextual(\"readonly\")) {\n      this.next();\n    }\n\n    if (!this.match(types.bracketL)) {\n      return false;\n    }\n\n    this.next();\n\n    if (!this.tsIsIdentifier()) {\n      return false;\n    }\n\n    this.next();\n    return this.match(types._in);\n  }\n\n  tsParseMappedTypeParameter() {\n    const node = this.startNode();\n    node.name = this.parseIdentifierName(node.start);\n    node.constraint = this.tsExpectThenParseType(types._in);\n    return this.finishNode(node, \"TSTypeParameter\");\n  }\n\n  tsParseMappedType() {\n    const node = this.startNode();\n    this.expect(types.braceL);\n\n    if (this.match(types.plusMin)) {\n      node.readonly = this.state.value;\n      this.next();\n      this.expectContextual(\"readonly\");\n    } else if (this.eatContextual(\"readonly\")) {\n      node.readonly = true;\n    }\n\n    this.expect(types.bracketL);\n    node.typeParameter = this.tsParseMappedTypeParameter();\n    node.nameType = this.eatContextual(\"as\") ? this.tsParseType() : null;\n    this.expect(types.bracketR);\n\n    if (this.match(types.plusMin)) {\n      node.optional = this.state.value;\n      this.next();\n      this.expect(types.question);\n    } else if (this.eat(types.question)) {\n      node.optional = true;\n    }\n\n    node.typeAnnotation = this.tsTryParseType();\n    this.semicolon();\n    this.expect(types.braceR);\n    return this.finishNode(node, \"TSMappedType\");\n  }\n\n  tsParseTupleType() {\n    const node = this.startNode();\n    node.elementTypes = this.tsParseBracketedList(\"TupleElementTypes\", this.tsParseTupleElementType.bind(this), true, false);\n    let seenOptionalElement = false;\n    let labeledElements = null;\n    node.elementTypes.forEach(elementNode => {\n      var _labeledElements;\n\n      let {\n        type\n      } = elementNode;\n\n      if (seenOptionalElement && type !== \"TSRestType\" && type !== \"TSOptionalType\" && !(type === \"TSNamedTupleMember\" && elementNode.optional)) {\n        this.raise(elementNode.start, TSErrors.OptionalTypeBeforeRequired);\n      }\n\n      seenOptionalElement = seenOptionalElement || type === \"TSNamedTupleMember\" && elementNode.optional || type === \"TSOptionalType\";\n\n      if (type === \"TSRestType\") {\n        elementNode = elementNode.typeAnnotation;\n        type = elementNode.type;\n      }\n\n      const isLabeled = type === \"TSNamedTupleMember\";\n      labeledElements = (_labeledElements = labeledElements) != null ? _labeledElements : isLabeled;\n\n      if (labeledElements !== isLabeled) {\n        this.raise(elementNode.start, TSErrors.MixedLabeledAndUnlabeledElements);\n      }\n    });\n    return this.finishNode(node, \"TSTupleType\");\n  }\n\n  tsParseTupleElementType() {\n    const {\n      start: startPos,\n      startLoc\n    } = this.state;\n    const rest = this.eat(types.ellipsis);\n    let type = this.tsParseType();\n    const optional = this.eat(types.question);\n    const labeled = this.eat(types.colon);\n\n    if (labeled) {\n      const labeledNode = this.startNodeAtNode(type);\n      labeledNode.optional = optional;\n\n      if (type.type === \"TSTypeReference\" && !type.typeParameters && type.typeName.type === \"Identifier\") {\n        labeledNode.label = type.typeName;\n      } else {\n        this.raise(type.start, TSErrors.InvalidTupleMemberLabel);\n        labeledNode.label = type;\n      }\n\n      labeledNode.elementType = this.tsParseType();\n      type = this.finishNode(labeledNode, \"TSNamedTupleMember\");\n    } else if (optional) {\n      const optionalTypeNode = this.startNodeAtNode(type);\n      optionalTypeNode.typeAnnotation = type;\n      type = this.finishNode(optionalTypeNode, \"TSOptionalType\");\n    }\n\n    if (rest) {\n      const restNode = this.startNodeAt(startPos, startLoc);\n      restNode.typeAnnotation = type;\n      type = this.finishNode(restNode, \"TSRestType\");\n    }\n\n    return type;\n  }\n\n  tsParseParenthesizedType() {\n    const node = this.startNode();\n    this.expect(types.parenL);\n    node.typeAnnotation = this.tsParseType();\n    this.expect(types.parenR);\n    return this.finishNode(node, \"TSParenthesizedType\");\n  }\n\n  tsParseFunctionOrConstructorType(type, abstract) {\n    const node = this.startNode();\n\n    if (type === \"TSConstructorType\") {\n      node.abstract = !!abstract;\n      if (abstract) this.next();\n      this.next();\n    }\n\n    this.tsFillSignature(types.arrow, node);\n    return this.finishNode(node, type);\n  }\n\n  tsParseLiteralTypeNode() {\n    const node = this.startNode();\n\n    node.literal = (() => {\n      switch (this.state.type) {\n        case types.num:\n        case types.bigint:\n        case types.string:\n        case types._true:\n        case types._false:\n          return this.parseExprAtom();\n\n        default:\n          throw this.unexpected();\n      }\n    })();\n\n    return this.finishNode(node, \"TSLiteralType\");\n  }\n\n  tsParseTemplateLiteralType() {\n    const node = this.startNode();\n    node.literal = this.parseTemplate(false);\n    return this.finishNode(node, \"TSLiteralType\");\n  }\n\n  parseTemplateSubstitution() {\n    if (this.state.inType) return this.tsParseType();\n    return super.parseTemplateSubstitution();\n  }\n\n  tsParseThisTypeOrThisTypePredicate() {\n    const thisKeyword = this.tsParseThisTypeNode();\n\n    if (this.isContextual(\"is\") && !this.hasPrecedingLineBreak()) {\n      return this.tsParseThisTypePredicate(thisKeyword);\n    } else {\n      return thisKeyword;\n    }\n  }\n\n  tsParseNonArrayType() {\n    switch (this.state.type) {\n      case types.name:\n      case types._void:\n      case types._null:\n        {\n          const type = this.match(types._void) ? \"TSVoidKeyword\" : this.match(types._null) ? \"TSNullKeyword\" : keywordTypeFromName(this.state.value);\n\n          if (type !== undefined && this.lookaheadCharCode() !== 46) {\n            const node = this.startNode();\n            this.next();\n            return this.finishNode(node, type);\n          }\n\n          return this.tsParseTypeReference();\n        }\n\n      case types.string:\n      case types.num:\n      case types.bigint:\n      case types._true:\n      case types._false:\n        return this.tsParseLiteralTypeNode();\n\n      case types.plusMin:\n        if (this.state.value === \"-\") {\n          const node = this.startNode();\n          const nextToken = this.lookahead();\n\n          if (nextToken.type !== types.num && nextToken.type !== types.bigint) {\n            throw this.unexpected();\n          }\n\n          node.literal = this.parseMaybeUnary();\n          return this.finishNode(node, \"TSLiteralType\");\n        }\n\n        break;\n\n      case types._this:\n        return this.tsParseThisTypeOrThisTypePredicate();\n\n      case types._typeof:\n        return this.tsParseTypeQuery();\n\n      case types._import:\n        return this.tsParseImportType();\n\n      case types.braceL:\n        return this.tsLookAhead(this.tsIsStartOfMappedType.bind(this)) ? this.tsParseMappedType() : this.tsParseTypeLiteral();\n\n      case types.bracketL:\n        return this.tsParseTupleType();\n\n      case types.parenL:\n        return this.tsParseParenthesizedType();\n\n      case types.backQuote:\n        return this.tsParseTemplateLiteralType();\n    }\n\n    throw this.unexpected();\n  }\n\n  tsParseArrayTypeOrHigher() {\n    let type = this.tsParseNonArrayType();\n\n    while (!this.hasPrecedingLineBreak() && this.eat(types.bracketL)) {\n      if (this.match(types.bracketR)) {\n        const node = this.startNodeAtNode(type);\n        node.elementType = type;\n        this.expect(types.bracketR);\n        type = this.finishNode(node, \"TSArrayType\");\n      } else {\n        const node = this.startNodeAtNode(type);\n        node.objectType = type;\n        node.indexType = this.tsParseType();\n        this.expect(types.bracketR);\n        type = this.finishNode(node, \"TSIndexedAccessType\");\n      }\n    }\n\n    return type;\n  }\n\n  tsParseTypeOperator(operator) {\n    const node = this.startNode();\n    this.expectContextual(operator);\n    node.operator = operator;\n    node.typeAnnotation = this.tsParseTypeOperatorOrHigher();\n\n    if (operator === \"readonly\") {\n      this.tsCheckTypeAnnotationForReadOnly(node);\n    }\n\n    return this.finishNode(node, \"TSTypeOperator\");\n  }\n\n  tsCheckTypeAnnotationForReadOnly(node) {\n    switch (node.typeAnnotation.type) {\n      case \"TSTupleType\":\n      case \"TSArrayType\":\n        return;\n\n      default:\n        this.raise(node.start, TSErrors.UnexpectedReadonly);\n    }\n  }\n\n  tsParseInferType() {\n    const node = this.startNode();\n    this.expectContextual(\"infer\");\n    const typeParameter = this.startNode();\n    typeParameter.name = this.parseIdentifierName(typeParameter.start);\n    node.typeParameter = this.finishNode(typeParameter, \"TSTypeParameter\");\n    return this.finishNode(node, \"TSInferType\");\n  }\n\n  tsParseTypeOperatorOrHigher() {\n    const operator = [\"keyof\", \"unique\", \"readonly\"].find(kw => this.isContextual(kw));\n    return operator ? this.tsParseTypeOperator(operator) : this.isContextual(\"infer\") ? this.tsParseInferType() : this.tsParseArrayTypeOrHigher();\n  }\n\n  tsParseUnionOrIntersectionType(kind, parseConstituentType, operator) {\n    const node = this.startNode();\n    const hasLeadingOperator = this.eat(operator);\n    const types = [];\n\n    do {\n      types.push(parseConstituentType());\n    } while (this.eat(operator));\n\n    if (types.length === 1 && !hasLeadingOperator) {\n      return types[0];\n    }\n\n    node.types = types;\n    return this.finishNode(node, kind);\n  }\n\n  tsParseIntersectionTypeOrHigher() {\n    return this.tsParseUnionOrIntersectionType(\"TSIntersectionType\", this.tsParseTypeOperatorOrHigher.bind(this), types.bitwiseAND);\n  }\n\n  tsParseUnionTypeOrHigher() {\n    return this.tsParseUnionOrIntersectionType(\"TSUnionType\", this.tsParseIntersectionTypeOrHigher.bind(this), types.bitwiseOR);\n  }\n\n  tsIsStartOfFunctionType() {\n    if (this.isRelational(\"<\")) {\n      return true;\n    }\n\n    return this.match(types.parenL) && this.tsLookAhead(this.tsIsUnambiguouslyStartOfFunctionType.bind(this));\n  }\n\n  tsSkipParameterStart() {\n    if (this.match(types.name) || this.match(types._this)) {\n      this.next();\n      return true;\n    }\n\n    if (this.match(types.braceL)) {\n      let braceStackCounter = 1;\n      this.next();\n\n      while (braceStackCounter > 0) {\n        if (this.match(types.braceL)) {\n          ++braceStackCounter;\n        } else if (this.match(types.braceR)) {\n          --braceStackCounter;\n        }\n\n        this.next();\n      }\n\n      return true;\n    }\n\n    if (this.match(types.bracketL)) {\n      let braceStackCounter = 1;\n      this.next();\n\n      while (braceStackCounter > 0) {\n        if (this.match(types.bracketL)) {\n          ++braceStackCounter;\n        } else if (this.match(types.bracketR)) {\n          --braceStackCounter;\n        }\n\n        this.next();\n      }\n\n      return true;\n    }\n\n    return false;\n  }\n\n  tsIsUnambiguouslyStartOfFunctionType() {\n    this.next();\n\n    if (this.match(types.parenR) || this.match(types.ellipsis)) {\n      return true;\n    }\n\n    if (this.tsSkipParameterStart()) {\n      if (this.match(types.colon) || this.match(types.comma) || this.match(types.question) || this.match(types.eq)) {\n        return true;\n      }\n\n      if (this.match(types.parenR)) {\n        this.next();\n\n        if (this.match(types.arrow)) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  }\n\n  tsParseTypeOrTypePredicateAnnotation(returnToken) {\n    return this.tsInType(() => {\n      const t = this.startNode();\n      this.expect(returnToken);\n      const node = this.startNode();\n      const asserts = !!this.tsTryParse(this.tsParseTypePredicateAsserts.bind(this));\n\n      if (asserts && this.match(types._this)) {\n        let thisTypePredicate = this.tsParseThisTypeOrThisTypePredicate();\n\n        if (thisTypePredicate.type === \"TSThisType\") {\n          node.parameterName = thisTypePredicate;\n          node.asserts = true;\n          thisTypePredicate = this.finishNode(node, \"TSTypePredicate\");\n        } else {\n          this.resetStartLocationFromNode(thisTypePredicate, node);\n          thisTypePredicate.asserts = true;\n        }\n\n        t.typeAnnotation = thisTypePredicate;\n        return this.finishNode(t, \"TSTypeAnnotation\");\n      }\n\n      const typePredicateVariable = this.tsIsIdentifier() && this.tsTryParse(this.tsParseTypePredicatePrefix.bind(this));\n\n      if (!typePredicateVariable) {\n        if (!asserts) {\n          return this.tsParseTypeAnnotation(false, t);\n        }\n\n        node.parameterName = this.parseIdentifier();\n        node.asserts = asserts;\n        t.typeAnnotation = this.finishNode(node, \"TSTypePredicate\");\n        return this.finishNode(t, \"TSTypeAnnotation\");\n      }\n\n      const type = this.tsParseTypeAnnotation(false);\n      node.parameterName = typePredicateVariable;\n      node.typeAnnotation = type;\n      node.asserts = asserts;\n      t.typeAnnotation = this.finishNode(node, \"TSTypePredicate\");\n      return this.finishNode(t, \"TSTypeAnnotation\");\n    });\n  }\n\n  tsTryParseTypeOrTypePredicateAnnotation() {\n    return this.match(types.colon) ? this.tsParseTypeOrTypePredicateAnnotation(types.colon) : undefined;\n  }\n\n  tsTryParseTypeAnnotation() {\n    return this.match(types.colon) ? this.tsParseTypeAnnotation() : undefined;\n  }\n\n  tsTryParseType() {\n    return this.tsEatThenParseType(types.colon);\n  }\n\n  tsParseTypePredicatePrefix() {\n    const id = this.parseIdentifier();\n\n    if (this.isContextual(\"is\") && !this.hasPrecedingLineBreak()) {\n      this.next();\n      return id;\n    }\n  }\n\n  tsParseTypePredicateAsserts() {\n    if (!this.match(types.name) || this.state.value !== \"asserts\" || this.hasPrecedingLineBreak()) {\n      return false;\n    }\n\n    const containsEsc = this.state.containsEsc;\n    this.next();\n\n    if (!this.match(types.name) && !this.match(types._this)) {\n      return false;\n    }\n\n    if (containsEsc) {\n      this.raise(this.state.lastTokStart, ErrorMessages.InvalidEscapedReservedWord, \"asserts\");\n    }\n\n    return true;\n  }\n\n  tsParseTypeAnnotation(eatColon = true, t = this.startNode()) {\n    this.tsInType(() => {\n      if (eatColon) this.expect(types.colon);\n      t.typeAnnotation = this.tsParseType();\n    });\n    return this.finishNode(t, \"TSTypeAnnotation\");\n  }\n\n  tsParseType() {\n    assert(this.state.inType);\n    const type = this.tsParseNonConditionalType();\n\n    if (this.hasPrecedingLineBreak() || !this.eat(types._extends)) {\n      return type;\n    }\n\n    const node = this.startNodeAtNode(type);\n    node.checkType = type;\n    node.extendsType = this.tsParseNonConditionalType();\n    this.expect(types.question);\n    node.trueType = this.tsParseType();\n    this.expect(types.colon);\n    node.falseType = this.tsParseType();\n    return this.finishNode(node, \"TSConditionalType\");\n  }\n\n  isAbstractConstructorSignature() {\n    return this.isContextual(\"abstract\") && this.lookahead().type === types._new;\n  }\n\n  tsParseNonConditionalType() {\n    if (this.tsIsStartOfFunctionType()) {\n      return this.tsParseFunctionOrConstructorType(\"TSFunctionType\");\n    }\n\n    if (this.match(types._new)) {\n      return this.tsParseFunctionOrConstructorType(\"TSConstructorType\");\n    } else if (this.isAbstractConstructorSignature()) {\n      return this.tsParseFunctionOrConstructorType(\"TSConstructorType\", true);\n    }\n\n    return this.tsParseUnionTypeOrHigher();\n  }\n\n  tsParseTypeAssertion() {\n    const node = this.startNode();\n\n    const _const = this.tsTryNextParseConstantContext();\n\n    node.typeAnnotation = _const || this.tsNextThenParseType();\n    this.expectRelational(\">\");\n    node.expression = this.parseMaybeUnary();\n    return this.finishNode(node, \"TSTypeAssertion\");\n  }\n\n  tsParseHeritageClause(descriptor) {\n    const originalStart = this.state.start;\n    const delimitedList = this.tsParseDelimitedList(\"HeritageClauseElement\", this.tsParseExpressionWithTypeArguments.bind(this));\n\n    if (!delimitedList.length) {\n      this.raise(originalStart, TSErrors.EmptyHeritageClauseType, descriptor);\n    }\n\n    return delimitedList;\n  }\n\n  tsParseExpressionWithTypeArguments() {\n    const node = this.startNode();\n    node.expression = this.tsParseEntityName(false);\n\n    if (this.isRelational(\"<\")) {\n      node.typeParameters = this.tsParseTypeArguments();\n    }\n\n    return this.finishNode(node, \"TSExpressionWithTypeArguments\");\n  }\n\n  tsParseInterfaceDeclaration(node) {\n    node.id = this.parseIdentifier();\n    this.checkLVal(node.id, \"typescript interface declaration\", BIND_TS_INTERFACE);\n    node.typeParameters = this.tsTryParseTypeParameters();\n\n    if (this.eat(types._extends)) {\n      node.extends = this.tsParseHeritageClause(\"extends\");\n    }\n\n    const body = this.startNode();\n    body.body = this.tsInType(this.tsParseObjectTypeMembers.bind(this));\n    node.body = this.finishNode(body, \"TSInterfaceBody\");\n    return this.finishNode(node, \"TSInterfaceDeclaration\");\n  }\n\n  tsParseTypeAliasDeclaration(node) {\n    node.id = this.parseIdentifier();\n    this.checkLVal(node.id, \"typescript type alias\", BIND_TS_TYPE);\n    node.typeParameters = this.tsTryParseTypeParameters();\n    node.typeAnnotation = this.tsInType(() => {\n      this.expect(types.eq);\n\n      if (this.isContextual(\"intrinsic\") && this.lookahead().type !== types.dot) {\n        const node = this.startNode();\n        this.next();\n        return this.finishNode(node, \"TSIntrinsicKeyword\");\n      }\n\n      return this.tsParseType();\n    });\n    this.semicolon();\n    return this.finishNode(node, \"TSTypeAliasDeclaration\");\n  }\n\n  tsInNoContext(cb) {\n    const oldContext = this.state.context;\n    this.state.context = [oldContext[0]];\n\n    try {\n      return cb();\n    } finally {\n      this.state.context = oldContext;\n    }\n  }\n\n  tsInType(cb) {\n    const oldInType = this.state.inType;\n    this.state.inType = true;\n\n    try {\n      return cb();\n    } finally {\n      this.state.inType = oldInType;\n    }\n  }\n\n  tsEatThenParseType(token) {\n    return !this.match(token) ? undefined : this.tsNextThenParseType();\n  }\n\n  tsExpectThenParseType(token) {\n    return this.tsDoThenParseType(() => this.expect(token));\n  }\n\n  tsNextThenParseType() {\n    return this.tsDoThenParseType(() => this.next());\n  }\n\n  tsDoThenParseType(cb) {\n    return this.tsInType(() => {\n      cb();\n      return this.tsParseType();\n    });\n  }\n\n  tsParseEnumMember() {\n    const node = this.startNode();\n    node.id = this.match(types.string) ? this.parseExprAtom() : this.parseIdentifier(true);\n\n    if (this.eat(types.eq)) {\n      node.initializer = this.parseMaybeAssignAllowIn();\n    }\n\n    return this.finishNode(node, \"TSEnumMember\");\n  }\n\n  tsParseEnumDeclaration(node, isConst) {\n    if (isConst) node.const = true;\n    node.id = this.parseIdentifier();\n    this.checkLVal(node.id, \"typescript enum declaration\", isConst ? BIND_TS_CONST_ENUM : BIND_TS_ENUM);\n    this.expect(types.braceL);\n    node.members = this.tsParseDelimitedList(\"EnumMembers\", this.tsParseEnumMember.bind(this));\n    this.expect(types.braceR);\n    return this.finishNode(node, \"TSEnumDeclaration\");\n  }\n\n  tsParseModuleBlock() {\n    const node = this.startNode();\n    this.scope.enter(SCOPE_OTHER);\n    this.expect(types.braceL);\n    this.parseBlockOrModuleBlockBody(node.body = [], undefined, true, types.braceR);\n    this.scope.exit();\n    return this.finishNode(node, \"TSModuleBlock\");\n  }\n\n  tsParseModuleOrNamespaceDeclaration(node, nested = false) {\n    node.id = this.parseIdentifier();\n\n    if (!nested) {\n      this.checkLVal(node.id, \"module or namespace declaration\", BIND_TS_NAMESPACE);\n    }\n\n    if (this.eat(types.dot)) {\n      const inner = this.startNode();\n      this.tsParseModuleOrNamespaceDeclaration(inner, true);\n      node.body = inner;\n    } else {\n      this.scope.enter(SCOPE_TS_MODULE);\n      this.prodParam.enter(PARAM);\n      node.body = this.tsParseModuleBlock();\n      this.prodParam.exit();\n      this.scope.exit();\n    }\n\n    return this.finishNode(node, \"TSModuleDeclaration\");\n  }\n\n  tsParseAmbientExternalModuleDeclaration(node) {\n    if (this.isContextual(\"global\")) {\n      node.global = true;\n      node.id = this.parseIdentifier();\n    } else if (this.match(types.string)) {\n      node.id = this.parseExprAtom();\n    } else {\n      this.unexpected();\n    }\n\n    if (this.match(types.braceL)) {\n      this.scope.enter(SCOPE_TS_MODULE);\n      this.prodParam.enter(PARAM);\n      node.body = this.tsParseModuleBlock();\n      this.prodParam.exit();\n      this.scope.exit();\n    } else {\n      this.semicolon();\n    }\n\n    return this.finishNode(node, \"TSModuleDeclaration\");\n  }\n\n  tsParseImportEqualsDeclaration(node, isExport) {\n    node.isExport = isExport || false;\n    node.id = this.parseIdentifier();\n    this.checkLVal(node.id, \"import equals declaration\", BIND_LEXICAL);\n    this.expect(types.eq);\n    const moduleReference = this.tsParseModuleReference();\n\n    if (node.importKind === \"type\" && moduleReference.type !== \"TSExternalModuleReference\") {\n      this.raise(moduleReference.start, TSErrors.ImportAliasHasImportType);\n    }\n\n    node.moduleReference = moduleReference;\n    this.semicolon();\n    return this.finishNode(node, \"TSImportEqualsDeclaration\");\n  }\n\n  tsIsExternalModuleReference() {\n    return this.isContextual(\"require\") && this.lookaheadCharCode() === 40;\n  }\n\n  tsParseModuleReference() {\n    return this.tsIsExternalModuleReference() ? this.tsParseExternalModuleReference() : this.tsParseEntityName(false);\n  }\n\n  tsParseExternalModuleReference() {\n    const node = this.startNode();\n    this.expectContextual(\"require\");\n    this.expect(types.parenL);\n\n    if (!this.match(types.string)) {\n      throw this.unexpected();\n    }\n\n    node.expression = this.parseExprAtom();\n    this.expect(types.parenR);\n    return this.finishNode(node, \"TSExternalModuleReference\");\n  }\n\n  tsLookAhead(f) {\n    const state = this.state.clone();\n    const res = f();\n    this.state = state;\n    return res;\n  }\n\n  tsTryParseAndCatch(f) {\n    const result = this.tryParse(abort => f() || abort());\n    if (result.aborted || !result.node) return undefined;\n    if (result.error) this.state = result.failState;\n    return result.node;\n  }\n\n  tsTryParse(f) {\n    const state = this.state.clone();\n    const result = f();\n\n    if (result !== undefined && result !== false) {\n      return result;\n    } else {\n      this.state = state;\n      return undefined;\n    }\n  }\n\n  tsTryParseDeclare(nany) {\n    if (this.isLineTerminator()) {\n      return;\n    }\n\n    let starttype = this.state.type;\n    let kind;\n\n    if (this.isContextual(\"let\")) {\n      starttype = types._var;\n      kind = \"let\";\n    }\n\n    return this.tsInDeclareContext(() => {\n      switch (starttype) {\n        case types._function:\n          nany.declare = true;\n          return this.parseFunctionStatement(nany, false, true);\n\n        case types._class:\n          nany.declare = true;\n          return this.parseClass(nany, true, false);\n\n        case types._const:\n          if (this.match(types._const) && this.isLookaheadContextual(\"enum\")) {\n            this.expect(types._const);\n            this.expectContextual(\"enum\");\n            return this.tsParseEnumDeclaration(nany, true);\n          }\n\n        case types._var:\n          kind = kind || this.state.value;\n          return this.parseVarStatement(nany, kind);\n\n        case types.name:\n          {\n            const value = this.state.value;\n\n            if (value === \"global\") {\n              return this.tsParseAmbientExternalModuleDeclaration(nany);\n            } else {\n              return this.tsParseDeclaration(nany, value, true);\n            }\n          }\n      }\n    });\n  }\n\n  tsTryParseExportDeclaration() {\n    return this.tsParseDeclaration(this.startNode(), this.state.value, true);\n  }\n\n  tsParseExpressionStatement(node, expr) {\n    switch (expr.name) {\n      case \"declare\":\n        {\n          const declaration = this.tsTryParseDeclare(node);\n\n          if (declaration) {\n            declaration.declare = true;\n            return declaration;\n          }\n\n          break;\n        }\n\n      case \"global\":\n        if (this.match(types.braceL)) {\n          this.scope.enter(SCOPE_TS_MODULE);\n          this.prodParam.enter(PARAM);\n          const mod = node;\n          mod.global = true;\n          mod.id = expr;\n          mod.body = this.tsParseModuleBlock();\n          this.scope.exit();\n          this.prodParam.exit();\n          return this.finishNode(mod, \"TSModuleDeclaration\");\n        }\n\n        break;\n\n      default:\n        return this.tsParseDeclaration(node, expr.name, false);\n    }\n  }\n\n  tsParseDeclaration(node, value, next) {\n    switch (value) {\n      case \"abstract\":\n        if (this.tsCheckLineTerminator(next) && (this.match(types._class) || this.match(types.name))) {\n          return this.tsParseAbstractDeclaration(node);\n        }\n\n        break;\n\n      case \"enum\":\n        if (next || this.match(types.name)) {\n          if (next) this.next();\n          return this.tsParseEnumDeclaration(node, false);\n        }\n\n        break;\n\n      case \"interface\":\n        if (this.tsCheckLineTerminator(next) && this.match(types.name)) {\n          return this.tsParseInterfaceDeclaration(node);\n        }\n\n        break;\n\n      case \"module\":\n        if (this.tsCheckLineTerminator(next)) {\n          if (this.match(types.string)) {\n            return this.tsParseAmbientExternalModuleDeclaration(node);\n          } else if (this.match(types.name)) {\n            return this.tsParseModuleOrNamespaceDeclaration(node);\n          }\n        }\n\n        break;\n\n      case \"namespace\":\n        if (this.tsCheckLineTerminator(next) && this.match(types.name)) {\n          return this.tsParseModuleOrNamespaceDeclaration(node);\n        }\n\n        break;\n\n      case \"type\":\n        if (this.tsCheckLineTerminator(next) && this.match(types.name)) {\n          return this.tsParseTypeAliasDeclaration(node);\n        }\n\n        break;\n    }\n  }\n\n  tsCheckLineTerminator(next) {\n    if (next) {\n      if (this.hasFollowingLineBreak()) return false;\n      this.next();\n      return true;\n    }\n\n    return !this.isLineTerminator();\n  }\n\n  tsTryParseGenericAsyncArrowFunction(startPos, startLoc) {\n    if (!this.isRelational(\"<\")) {\n      return undefined;\n    }\n\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n    this.state.maybeInArrowParameters = true;\n    const res = this.tsTryParseAndCatch(() => {\n      const node = this.startNodeAt(startPos, startLoc);\n      node.typeParameters = this.tsParseTypeParameters();\n      super.parseFunctionParams(node);\n      node.returnType = this.tsTryParseTypeOrTypePredicateAnnotation();\n      this.expect(types.arrow);\n      return node;\n    });\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n\n    if (!res) {\n      return undefined;\n    }\n\n    return this.parseArrowExpression(res, null, true);\n  }\n\n  tsParseTypeArguments() {\n    const node = this.startNode();\n    node.params = this.tsInType(() => this.tsInNoContext(() => {\n      this.expectRelational(\"<\");\n      return this.tsParseDelimitedList(\"TypeParametersOrArguments\", this.tsParseType.bind(this));\n    }));\n\n    if (node.params.length === 0) {\n      this.raise(node.start, TSErrors.EmptyTypeArguments);\n    }\n\n    this.state.exprAllowed = false;\n    this.expectRelational(\">\");\n    return this.finishNode(node, \"TSTypeParameterInstantiation\");\n  }\n\n  tsIsDeclarationStart() {\n    if (this.match(types.name)) {\n      switch (this.state.value) {\n        case \"abstract\":\n        case \"declare\":\n        case \"enum\":\n        case \"interface\":\n        case \"module\":\n        case \"namespace\":\n        case \"type\":\n          return true;\n      }\n    }\n\n    return false;\n  }\n\n  isExportDefaultSpecifier() {\n    if (this.tsIsDeclarationStart()) return false;\n    return super.isExportDefaultSpecifier();\n  }\n\n  parseAssignableListItem(allowModifiers, decorators) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    let accessibility;\n    let readonly = false;\n\n    if (allowModifiers !== undefined) {\n      accessibility = this.parseAccessModifier();\n      readonly = !!this.tsParseModifier([\"readonly\"]);\n\n      if (allowModifiers === false && (accessibility || readonly)) {\n        this.raise(startPos, TSErrors.UnexpectedParameterModifier);\n      }\n    }\n\n    const left = this.parseMaybeDefault();\n    this.parseAssignableListItemTypes(left);\n    const elt = this.parseMaybeDefault(left.start, left.loc.start, left);\n\n    if (accessibility || readonly) {\n      const pp = this.startNodeAt(startPos, startLoc);\n\n      if (decorators.length) {\n        pp.decorators = decorators;\n      }\n\n      if (accessibility) pp.accessibility = accessibility;\n      if (readonly) pp.readonly = readonly;\n\n      if (elt.type !== \"Identifier\" && elt.type !== \"AssignmentPattern\") {\n        this.raise(pp.start, TSErrors.UnsupportedParameterPropertyKind);\n      }\n\n      pp.parameter = elt;\n      return this.finishNode(pp, \"TSParameterProperty\");\n    }\n\n    if (decorators.length) {\n      left.decorators = decorators;\n    }\n\n    return elt;\n  }\n\n  parseFunctionBodyAndFinish(node, type, isMethod = false) {\n    if (this.match(types.colon)) {\n      node.returnType = this.tsParseTypeOrTypePredicateAnnotation(types.colon);\n    }\n\n    const bodilessType = type === \"FunctionDeclaration\" ? \"TSDeclareFunction\" : type === \"ClassMethod\" ? \"TSDeclareMethod\" : undefined;\n\n    if (bodilessType && !this.match(types.braceL) && this.isLineTerminator()) {\n      this.finishNode(node, bodilessType);\n      return;\n    }\n\n    if (bodilessType === \"TSDeclareFunction\" && this.state.isDeclareContext) {\n      this.raise(node.start, TSErrors.DeclareFunctionHasImplementation);\n\n      if (node.declare) {\n        super.parseFunctionBodyAndFinish(node, bodilessType, isMethod);\n        return;\n      }\n    }\n\n    super.parseFunctionBodyAndFinish(node, type, isMethod);\n  }\n\n  registerFunctionStatementId(node) {\n    if (!node.body && node.id) {\n      this.checkLVal(node.id, \"function name\", BIND_TS_AMBIENT);\n    } else {\n      super.registerFunctionStatementId(...arguments);\n    }\n  }\n\n  tsCheckForInvalidTypeCasts(items) {\n    items.forEach(node => {\n      if ((node == null ? void 0 : node.type) === \"TSTypeCastExpression\") {\n        this.raise(node.typeAnnotation.start, TSErrors.UnexpectedTypeAnnotation);\n      }\n    });\n  }\n\n  toReferencedList(exprList, isInParens) {\n    this.tsCheckForInvalidTypeCasts(exprList);\n    return exprList;\n  }\n\n  parseArrayLike(...args) {\n    const node = super.parseArrayLike(...args);\n\n    if (node.type === \"ArrayExpression\") {\n      this.tsCheckForInvalidTypeCasts(node.elements);\n    }\n\n    return node;\n  }\n\n  parseSubscript(base, startPos, startLoc, noCalls, state) {\n    if (!this.hasPrecedingLineBreak() && this.match(types.bang)) {\n      this.state.exprAllowed = false;\n      this.next();\n      const nonNullExpression = this.startNodeAt(startPos, startLoc);\n      nonNullExpression.expression = base;\n      return this.finishNode(nonNullExpression, \"TSNonNullExpression\");\n    }\n\n    if (this.isRelational(\"<\")) {\n      const result = this.tsTryParseAndCatch(() => {\n        if (!noCalls && this.atPossibleAsyncArrow(base)) {\n          const asyncArrowFn = this.tsTryParseGenericAsyncArrowFunction(startPos, startLoc);\n\n          if (asyncArrowFn) {\n            return asyncArrowFn;\n          }\n        }\n\n        const node = this.startNodeAt(startPos, startLoc);\n        node.callee = base;\n        const typeArguments = this.tsParseTypeArguments();\n\n        if (typeArguments) {\n          if (!noCalls && this.eat(types.parenL)) {\n            node.arguments = this.parseCallExpressionArguments(types.parenR, false);\n            this.tsCheckForInvalidTypeCasts(node.arguments);\n            node.typeParameters = typeArguments;\n\n            if (state.optionalChainMember) {\n              node.optional = false;\n            }\n\n            return this.finishCallExpression(node, state.optionalChainMember);\n          } else if (this.match(types.backQuote)) {\n            const result = this.parseTaggedTemplateExpression(base, startPos, startLoc, state);\n            result.typeParameters = typeArguments;\n            return result;\n          }\n        }\n\n        this.unexpected();\n      });\n      if (result) return result;\n    }\n\n    return super.parseSubscript(base, startPos, startLoc, noCalls, state);\n  }\n\n  parseNewArguments(node) {\n    if (this.isRelational(\"<\")) {\n      const typeParameters = this.tsTryParseAndCatch(() => {\n        const args = this.tsParseTypeArguments();\n        if (!this.match(types.parenL)) this.unexpected();\n        return args;\n      });\n\n      if (typeParameters) {\n        node.typeParameters = typeParameters;\n      }\n    }\n\n    super.parseNewArguments(node);\n  }\n\n  parseExprOp(left, leftStartPos, leftStartLoc, minPrec) {\n    if (nonNull(types._in.binop) > minPrec && !this.hasPrecedingLineBreak() && this.isContextual(\"as\")) {\n      const node = this.startNodeAt(leftStartPos, leftStartLoc);\n      node.expression = left;\n\n      const _const = this.tsTryNextParseConstantContext();\n\n      if (_const) {\n        node.typeAnnotation = _const;\n      } else {\n        node.typeAnnotation = this.tsNextThenParseType();\n      }\n\n      this.finishNode(node, \"TSAsExpression\");\n      this.reScan_lt_gt();\n      return this.parseExprOp(node, leftStartPos, leftStartLoc, minPrec);\n    }\n\n    return super.parseExprOp(left, leftStartPos, leftStartLoc, minPrec);\n  }\n\n  checkReservedWord(word, startLoc, checkKeywords, isBinding) {}\n\n  checkDuplicateExports() {}\n\n  parseImport(node) {\n    node.importKind = \"value\";\n\n    if (this.match(types.name) || this.match(types.star) || this.match(types.braceL)) {\n      let ahead = this.lookahead();\n\n      if (this.isContextual(\"type\") && ahead.type !== types.comma && !(ahead.type === types.name && ahead.value === \"from\") && ahead.type !== types.eq) {\n        node.importKind = \"type\";\n        this.next();\n        ahead = this.lookahead();\n      }\n\n      if (this.match(types.name) && ahead.type === types.eq) {\n        return this.tsParseImportEqualsDeclaration(node);\n      }\n    }\n\n    const importNode = super.parseImport(node);\n\n    if (importNode.importKind === \"type\" && importNode.specifiers.length > 1 && importNode.specifiers[0].type === \"ImportDefaultSpecifier\") {\n      this.raise(importNode.start, \"A type-only import can specify a default import or named bindings, but not both.\");\n    }\n\n    return importNode;\n  }\n\n  parseExport(node) {\n    if (this.match(types._import)) {\n      this.next();\n\n      if (this.isContextual(\"type\") && this.lookaheadCharCode() !== 61) {\n        node.importKind = \"type\";\n        this.next();\n      } else {\n        node.importKind = \"value\";\n      }\n\n      return this.tsParseImportEqualsDeclaration(node, true);\n    } else if (this.eat(types.eq)) {\n      const assign = node;\n      assign.expression = this.parseExpression();\n      this.semicolon();\n      return this.finishNode(assign, \"TSExportAssignment\");\n    } else if (this.eatContextual(\"as\")) {\n      const decl = node;\n      this.expectContextual(\"namespace\");\n      decl.id = this.parseIdentifier();\n      this.semicolon();\n      return this.finishNode(decl, \"TSNamespaceExportDeclaration\");\n    } else {\n      if (this.isContextual(\"type\") && this.lookahead().type === types.braceL) {\n        this.next();\n        node.exportKind = \"type\";\n      } else {\n        node.exportKind = \"value\";\n      }\n\n      return super.parseExport(node);\n    }\n  }\n\n  isAbstractClass() {\n    return this.isContextual(\"abstract\") && this.lookahead().type === types._class;\n  }\n\n  parseExportDefaultExpression() {\n    if (this.isAbstractClass()) {\n      const cls = this.startNode();\n      this.next();\n      cls.abstract = true;\n      this.parseClass(cls, true, true);\n      return cls;\n    }\n\n    if (this.state.value === \"interface\") {\n      const result = this.tsParseDeclaration(this.startNode(), this.state.value, true);\n      if (result) return result;\n    }\n\n    return super.parseExportDefaultExpression();\n  }\n\n  parseStatementContent(context, topLevel) {\n    if (this.state.type === types._const) {\n      const ahead = this.lookahead();\n\n      if (ahead.type === types.name && ahead.value === \"enum\") {\n        const node = this.startNode();\n        this.expect(types._const);\n        this.expectContextual(\"enum\");\n        return this.tsParseEnumDeclaration(node, true);\n      }\n    }\n\n    return super.parseStatementContent(context, topLevel);\n  }\n\n  parseAccessModifier() {\n    return this.tsParseModifier([\"public\", \"protected\", \"private\"]);\n  }\n\n  parseClassMember(classBody, member, state) {\n    this.tsParseModifiers(member, [\"declare\", \"private\", \"public\", \"protected\"]);\n\n    const callParseClassMember = () => {\n      super.parseClassMember(classBody, member, state);\n    };\n\n    if (member.declare) {\n      this.tsInDeclareContext(callParseClassMember);\n    } else {\n      callParseClassMember();\n    }\n  }\n\n  parseClassMemberWithIsStatic(classBody, member, state, isStatic) {\n    this.tsParseModifiers(member, [\"abstract\", \"readonly\", \"declare\"]);\n    const idx = this.tsTryParseIndexSignature(member);\n\n    if (idx) {\n      classBody.body.push(idx);\n\n      if (member.abstract) {\n        this.raise(member.start, TSErrors.IndexSignatureHasAbstract);\n      }\n\n      if (isStatic) {\n        this.raise(member.start, TSErrors.IndexSignatureHasStatic);\n      }\n\n      if (member.accessibility) {\n        this.raise(member.start, TSErrors.IndexSignatureHasAccessibility, member.accessibility);\n      }\n\n      if (member.declare) {\n        this.raise(member.start, TSErrors.IndexSignatureHasDeclare);\n      }\n\n      return;\n    }\n\n    if (!this.state.inAbstractClass && member.abstract) {\n      this.raise(member.start, TSErrors.NonAbstractClassHasAbstractMethod);\n    }\n\n    super.parseClassMemberWithIsStatic(classBody, member, state, isStatic);\n  }\n\n  parsePostMemberNameModifiers(methodOrProp) {\n    const optional = this.eat(types.question);\n    if (optional) methodOrProp.optional = true;\n\n    if (methodOrProp.readonly && this.match(types.parenL)) {\n      this.raise(methodOrProp.start, TSErrors.ClassMethodHasReadonly);\n    }\n\n    if (methodOrProp.declare && this.match(types.parenL)) {\n      this.raise(methodOrProp.start, TSErrors.ClassMethodHasDeclare);\n    }\n  }\n\n  parseExpressionStatement(node, expr) {\n    const decl = expr.type === \"Identifier\" ? this.tsParseExpressionStatement(node, expr) : undefined;\n    return decl || super.parseExpressionStatement(node, expr);\n  }\n\n  shouldParseExportDeclaration() {\n    if (this.tsIsDeclarationStart()) return true;\n    return super.shouldParseExportDeclaration();\n  }\n\n  parseConditional(expr, startPos, startLoc, refNeedsArrowPos) {\n    if (!refNeedsArrowPos || !this.match(types.question)) {\n      return super.parseConditional(expr, startPos, startLoc, refNeedsArrowPos);\n    }\n\n    const result = this.tryParse(() => super.parseConditional(expr, startPos, startLoc));\n\n    if (!result.node) {\n      refNeedsArrowPos.start = result.error.pos || this.state.start;\n      return expr;\n    }\n\n    if (result.error) this.state = result.failState;\n    return result.node;\n  }\n\n  parseParenItem(node, startPos, startLoc) {\n    node = super.parseParenItem(node, startPos, startLoc);\n\n    if (this.eat(types.question)) {\n      node.optional = true;\n      this.resetEndLocation(node);\n    }\n\n    if (this.match(types.colon)) {\n      const typeCastNode = this.startNodeAt(startPos, startLoc);\n      typeCastNode.expression = node;\n      typeCastNode.typeAnnotation = this.tsParseTypeAnnotation();\n      return this.finishNode(typeCastNode, \"TSTypeCastExpression\");\n    }\n\n    return node;\n  }\n\n  parseExportDeclaration(node) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const isDeclare = this.eatContextual(\"declare\");\n\n    if (isDeclare && (this.isContextual(\"declare\") || !this.shouldParseExportDeclaration())) {\n      throw this.raise(this.state.start, TSErrors.ExpectedAmbientAfterExportDeclare);\n    }\n\n    let declaration;\n\n    if (this.match(types.name)) {\n      declaration = this.tsTryParseExportDeclaration();\n    }\n\n    if (!declaration) {\n      declaration = super.parseExportDeclaration(node);\n    }\n\n    if (declaration && (declaration.type === \"TSInterfaceDeclaration\" || declaration.type === \"TSTypeAliasDeclaration\" || isDeclare)) {\n      node.exportKind = \"type\";\n    }\n\n    if (declaration && isDeclare) {\n      this.resetStartLocation(declaration, startPos, startLoc);\n      declaration.declare = true;\n    }\n\n    return declaration;\n  }\n\n  parseClassId(node, isStatement, optionalId) {\n    if ((!isStatement || optionalId) && this.isContextual(\"implements\")) {\n      return;\n    }\n\n    super.parseClassId(node, isStatement, optionalId, node.declare ? BIND_TS_AMBIENT : BIND_CLASS);\n    const typeParameters = this.tsTryParseTypeParameters();\n    if (typeParameters) node.typeParameters = typeParameters;\n  }\n\n  parseClassPropertyAnnotation(node) {\n    if (!node.optional && this.eat(types.bang)) {\n      node.definite = true;\n    }\n\n    const type = this.tsTryParseTypeAnnotation();\n    if (type) node.typeAnnotation = type;\n  }\n\n  parseClassProperty(node) {\n    this.parseClassPropertyAnnotation(node);\n\n    if (this.state.isDeclareContext && this.match(types.eq)) {\n      this.raise(this.state.start, TSErrors.DeclareClassFieldHasInitializer);\n    }\n\n    return super.parseClassProperty(node);\n  }\n\n  parseClassPrivateProperty(node) {\n    if (node.abstract) {\n      this.raise(node.start, TSErrors.PrivateElementHasAbstract);\n    }\n\n    if (node.accessibility) {\n      this.raise(node.start, TSErrors.PrivateElementHasAccessibility, node.accessibility);\n    }\n\n    this.parseClassPropertyAnnotation(node);\n    return super.parseClassPrivateProperty(node);\n  }\n\n  pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper) {\n    const typeParameters = this.tsTryParseTypeParameters();\n\n    if (typeParameters && isConstructor) {\n      this.raise(typeParameters.start, TSErrors.ConstructorHasTypeParameters);\n    }\n\n    if (method.declare && (method.kind === \"get\" || method.kind === \"set\")) {\n      this.raise(method.start, TSErrors.DeclareAccessor, method.kind);\n    }\n\n    if (typeParameters) method.typeParameters = typeParameters;\n    super.pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper);\n  }\n\n  pushClassPrivateMethod(classBody, method, isGenerator, isAsync) {\n    const typeParameters = this.tsTryParseTypeParameters();\n    if (typeParameters) method.typeParameters = typeParameters;\n    super.pushClassPrivateMethod(classBody, method, isGenerator, isAsync);\n  }\n\n  parseClassSuper(node) {\n    super.parseClassSuper(node);\n\n    if (node.superClass && this.isRelational(\"<\")) {\n      node.superTypeParameters = this.tsParseTypeArguments();\n    }\n\n    if (this.eatContextual(\"implements\")) {\n      node.implements = this.tsParseHeritageClause(\"implements\");\n    }\n  }\n\n  parseObjPropValue(prop, ...args) {\n    const typeParameters = this.tsTryParseTypeParameters();\n    if (typeParameters) prop.typeParameters = typeParameters;\n    super.parseObjPropValue(prop, ...args);\n  }\n\n  parseFunctionParams(node, allowModifiers) {\n    const typeParameters = this.tsTryParseTypeParameters();\n    if (typeParameters) node.typeParameters = typeParameters;\n    super.parseFunctionParams(node, allowModifiers);\n  }\n\n  parseVarId(decl, kind) {\n    super.parseVarId(decl, kind);\n\n    if (decl.id.type === \"Identifier\" && this.eat(types.bang)) {\n      decl.definite = true;\n    }\n\n    const type = this.tsTryParseTypeAnnotation();\n\n    if (type) {\n      decl.id.typeAnnotation = type;\n      this.resetEndLocation(decl.id);\n    }\n  }\n\n  parseAsyncArrowFromCallExpression(node, call) {\n    if (this.match(types.colon)) {\n      node.returnType = this.tsParseTypeAnnotation();\n    }\n\n    return super.parseAsyncArrowFromCallExpression(node, call);\n  }\n\n  parseMaybeAssign(...args) {\n    var _jsx, _jsx2, _typeCast, _jsx3, _typeCast2, _jsx4, _typeCast3;\n\n    let state;\n    let jsx;\n    let typeCast;\n\n    if (this.hasPlugin(\"jsx\") && (this.match(types.jsxTagStart) || this.isRelational(\"<\"))) {\n      state = this.state.clone();\n      jsx = this.tryParse(() => super.parseMaybeAssign(...args), state);\n      if (!jsx.error) return jsx.node;\n      const {\n        context\n      } = this.state;\n\n      if (context[context.length - 1] === types$1.j_oTag) {\n        context.length -= 2;\n      } else if (context[context.length - 1] === types$1.j_expr) {\n        context.length -= 1;\n      }\n    }\n\n    if (!((_jsx = jsx) != null && _jsx.error) && !this.isRelational(\"<\")) {\n      return super.parseMaybeAssign(...args);\n    }\n\n    let typeParameters;\n    state = state || this.state.clone();\n    const arrow = this.tryParse(abort => {\n      var _expr$extra, _typeParameters;\n\n      typeParameters = this.tsParseTypeParameters();\n      const expr = super.parseMaybeAssign(...args);\n\n      if (expr.type !== \"ArrowFunctionExpression\" || (_expr$extra = expr.extra) != null && _expr$extra.parenthesized) {\n        abort();\n      }\n\n      if (((_typeParameters = typeParameters) == null ? void 0 : _typeParameters.params.length) !== 0) {\n        this.resetStartLocationFromNode(expr, typeParameters);\n      }\n\n      expr.typeParameters = typeParameters;\n      return expr;\n    }, state);\n    if (!arrow.error && !arrow.aborted) return arrow.node;\n\n    if (!jsx) {\n      assert(!this.hasPlugin(\"jsx\"));\n      typeCast = this.tryParse(() => super.parseMaybeAssign(...args), state);\n      if (!typeCast.error) return typeCast.node;\n    }\n\n    if ((_jsx2 = jsx) != null && _jsx2.node) {\n      this.state = jsx.failState;\n      return jsx.node;\n    }\n\n    if (arrow.node) {\n      this.state = arrow.failState;\n      return arrow.node;\n    }\n\n    if ((_typeCast = typeCast) != null && _typeCast.node) {\n      this.state = typeCast.failState;\n      return typeCast.node;\n    }\n\n    if ((_jsx3 = jsx) != null && _jsx3.thrown) throw jsx.error;\n    if (arrow.thrown) throw arrow.error;\n    if ((_typeCast2 = typeCast) != null && _typeCast2.thrown) throw typeCast.error;\n    throw ((_jsx4 = jsx) == null ? void 0 : _jsx4.error) || arrow.error || ((_typeCast3 = typeCast) == null ? void 0 : _typeCast3.error);\n  }\n\n  parseMaybeUnary(refExpressionErrors) {\n    if (!this.hasPlugin(\"jsx\") && this.isRelational(\"<\")) {\n      return this.tsParseTypeAssertion();\n    } else {\n      return super.parseMaybeUnary(refExpressionErrors);\n    }\n  }\n\n  parseArrow(node) {\n    if (this.match(types.colon)) {\n      const result = this.tryParse(abort => {\n        const returnType = this.tsParseTypeOrTypePredicateAnnotation(types.colon);\n        if (this.canInsertSemicolon() || !this.match(types.arrow)) abort();\n        return returnType;\n      });\n      if (result.aborted) return;\n\n      if (!result.thrown) {\n        if (result.error) this.state = result.failState;\n        node.returnType = result.node;\n      }\n    }\n\n    return super.parseArrow(node);\n  }\n\n  parseAssignableListItemTypes(param) {\n    if (this.eat(types.question)) {\n      if (param.type !== \"Identifier\" && !this.state.isDeclareContext && !this.state.inType) {\n        this.raise(param.start, TSErrors.PatternIsOptional);\n      }\n\n      param.optional = true;\n    }\n\n    const type = this.tsTryParseTypeAnnotation();\n    if (type) param.typeAnnotation = type;\n    this.resetEndLocation(param);\n    return param;\n  }\n\n  toAssignable(node, isLHS = false) {\n    switch (node.type) {\n      case \"TSTypeCastExpression\":\n        return super.toAssignable(this.typeCastToParameter(node), isLHS);\n\n      case \"TSParameterProperty\":\n        return super.toAssignable(node, isLHS);\n\n      case \"ParenthesizedExpression\":\n        return this.toAssignableParenthesizedExpression(node, isLHS);\n\n      case \"TSAsExpression\":\n      case \"TSNonNullExpression\":\n      case \"TSTypeAssertion\":\n        node.expression = this.toAssignable(node.expression, isLHS);\n        return node;\n\n      default:\n        return super.toAssignable(node, isLHS);\n    }\n  }\n\n  toAssignableParenthesizedExpression(node, isLHS) {\n    switch (node.expression.type) {\n      case \"TSAsExpression\":\n      case \"TSNonNullExpression\":\n      case \"TSTypeAssertion\":\n      case \"ParenthesizedExpression\":\n        node.expression = this.toAssignable(node.expression, isLHS);\n        return node;\n\n      default:\n        return super.toAssignable(node, isLHS);\n    }\n  }\n\n  checkLVal(expr, contextDescription, ...args) {\n    var _expr$extra2;\n\n    switch (expr.type) {\n      case \"TSTypeCastExpression\":\n        return;\n\n      case \"TSParameterProperty\":\n        this.checkLVal(expr.parameter, \"parameter property\", ...args);\n        return;\n\n      case \"TSAsExpression\":\n      case \"TSTypeAssertion\":\n        if (!args[0] && contextDescription !== \"parenthesized expression\" && !((_expr$extra2 = expr.extra) != null && _expr$extra2.parenthesized)) {\n          this.raise(expr.start, ErrorMessages.InvalidLhs, contextDescription);\n          break;\n        }\n\n        this.checkLVal(expr.expression, \"parenthesized expression\", ...args);\n        return;\n\n      case \"TSNonNullExpression\":\n        this.checkLVal(expr.expression, contextDescription, ...args);\n        return;\n\n      default:\n        super.checkLVal(expr, contextDescription, ...args);\n        return;\n    }\n  }\n\n  parseBindingAtom() {\n    switch (this.state.type) {\n      case types._this:\n        return this.parseIdentifier(true);\n\n      default:\n        return super.parseBindingAtom();\n    }\n  }\n\n  parseMaybeDecoratorArguments(expr) {\n    if (this.isRelational(\"<\")) {\n      const typeArguments = this.tsParseTypeArguments();\n\n      if (this.match(types.parenL)) {\n        const call = super.parseMaybeDecoratorArguments(expr);\n        call.typeParameters = typeArguments;\n        return call;\n      }\n\n      this.unexpected(this.state.start, types.parenL);\n    }\n\n    return super.parseMaybeDecoratorArguments(expr);\n  }\n\n  checkCommaAfterRest(close) {\n    if (this.state.isDeclareContext && this.match(types.comma) && this.lookaheadCharCode() === close) {\n      this.next();\n    } else {\n      super.checkCommaAfterRest(close);\n    }\n  }\n\n  isClassMethod() {\n    return this.isRelational(\"<\") || super.isClassMethod();\n  }\n\n  isClassProperty() {\n    return this.match(types.bang) || this.match(types.colon) || super.isClassProperty();\n  }\n\n  parseMaybeDefault(...args) {\n    const node = super.parseMaybeDefault(...args);\n\n    if (node.type === \"AssignmentPattern\" && node.typeAnnotation && node.right.start < node.typeAnnotation.start) {\n      this.raise(node.typeAnnotation.start, TSErrors.TypeAnnotationAfterAssign);\n    }\n\n    return node;\n  }\n\n  getTokenFromCode(code) {\n    if (this.state.inType && (code === 62 || code === 60)) {\n      return this.finishOp(types.relational, 1);\n    } else {\n      return super.getTokenFromCode(code);\n    }\n  }\n\n  reScan_lt_gt() {\n    if (this.match(types.relational)) {\n      const code = this.input.charCodeAt(this.state.start);\n\n      if (code === 60 || code === 62) {\n        this.state.pos -= 1;\n        this.readToken_lt_gt(code);\n      }\n    }\n  }\n\n  toAssignableList(exprList) {\n    for (let i = 0; i < exprList.length; i++) {\n      const expr = exprList[i];\n      if (!expr) continue;\n\n      switch (expr.type) {\n        case \"TSTypeCastExpression\":\n          exprList[i] = this.typeCastToParameter(expr);\n          break;\n\n        case \"TSAsExpression\":\n        case \"TSTypeAssertion\":\n          if (!this.state.maybeInArrowParameters) {\n            exprList[i] = this.typeCastToParameter(expr);\n          } else {\n            this.raise(expr.start, TSErrors.UnexpectedTypeCastInParameter);\n          }\n\n          break;\n      }\n    }\n\n    return super.toAssignableList(...arguments);\n  }\n\n  typeCastToParameter(node) {\n    node.expression.typeAnnotation = node.typeAnnotation;\n    this.resetEndLocation(node.expression, node.typeAnnotation.end, node.typeAnnotation.loc.end);\n    return node.expression;\n  }\n\n  shouldParseArrow() {\n    return this.match(types.colon) || super.shouldParseArrow();\n  }\n\n  shouldParseAsyncArrow() {\n    return this.match(types.colon) || super.shouldParseAsyncArrow();\n  }\n\n  canHaveLeadingDecorator() {\n    return super.canHaveLeadingDecorator() || this.isAbstractClass();\n  }\n\n  jsxParseOpeningElementAfterName(node) {\n    if (this.isRelational(\"<\")) {\n      const typeArguments = this.tsTryParseAndCatch(() => this.tsParseTypeArguments());\n      if (typeArguments) node.typeParameters = typeArguments;\n    }\n\n    return super.jsxParseOpeningElementAfterName(node);\n  }\n\n  getGetterSetterExpectedParamCount(method) {\n    const baseCount = super.getGetterSetterExpectedParamCount(method);\n    const params = this.getObjectOrClassMethodParams(method);\n    const firstParam = params[0];\n    const hasContextParam = firstParam && firstParam.type === \"Identifier\" && firstParam.name === \"this\";\n    return hasContextParam ? baseCount + 1 : baseCount;\n  }\n\n  parseCatchClauseParam() {\n    const param = super.parseCatchClauseParam();\n    const type = this.tsTryParseTypeAnnotation();\n\n    if (type) {\n      param.typeAnnotation = type;\n      this.resetEndLocation(param);\n    }\n\n    return param;\n  }\n\n  tsInDeclareContext(cb) {\n    const oldIsDeclareContext = this.state.isDeclareContext;\n    this.state.isDeclareContext = true;\n\n    try {\n      return cb();\n    } finally {\n      this.state.isDeclareContext = oldIsDeclareContext;\n    }\n  }\n\n  parseClass(node, ...args) {\n    const oldInAbstractClass = this.state.inAbstractClass;\n    this.state.inAbstractClass = !!node.abstract;\n\n    try {\n      return super.parseClass(node, ...args);\n    } finally {\n      this.state.inAbstractClass = oldInAbstractClass;\n    }\n  }\n\n  tsParseAbstractDeclaration(node) {\n    if (this.match(types._class)) {\n      node.abstract = true;\n      return this.parseClass(node, true, false);\n    } else if (this.isContextual(\"interface\")) {\n      if (!this.hasFollowingLineBreak()) {\n        node.abstract = true;\n        this.raise(node.start, TSErrors.NonClassMethodPropertyHasAbstractModifer);\n        this.next();\n        return this.tsParseInterfaceDeclaration(node);\n      }\n    } else {\n      this.unexpected(null, types._class);\n    }\n  }\n\n  parseMethod(...args) {\n    const method = super.parseMethod(...args);\n\n    if (method.abstract) {\n      const hasBody = this.hasPlugin(\"estree\") ? !!method.value.body : !!method.body;\n\n      if (hasBody) {\n        const {\n          key\n        } = method;\n        this.raise(method.start, TSErrors.AbstractMethodHasImplementation, key.type === \"Identifier\" ? key.name : `[${this.input.slice(key.start, key.end)}]`);\n      }\n    }\n\n    return method;\n  }\n\n});\n\ntypes.placeholder = new TokenType(\"%%\", {\n  startsExpr: true\n});\nvar placeholders = (superClass => class extends superClass {\n  parsePlaceholder(expectedNode) {\n    if (this.match(types.placeholder)) {\n      const node = this.startNode();\n      this.next();\n      this.assertNoSpace(\"Unexpected space in placeholder.\");\n      node.name = super.parseIdentifier(true);\n      this.assertNoSpace(\"Unexpected space in placeholder.\");\n      this.expect(types.placeholder);\n      return this.finishPlaceholder(node, expectedNode);\n    }\n  }\n\n  finishPlaceholder(node, expectedNode) {\n    const isFinished = !!(node.expectedNode && node.type === \"Placeholder\");\n    node.expectedNode = expectedNode;\n    return isFinished ? node : this.finishNode(node, \"Placeholder\");\n  }\n\n  getTokenFromCode(code) {\n    if (code === 37 && this.input.charCodeAt(this.state.pos + 1) === 37) {\n      return this.finishOp(types.placeholder, 2);\n    }\n\n    return super.getTokenFromCode(...arguments);\n  }\n\n  parseExprAtom() {\n    return this.parsePlaceholder(\"Expression\") || super.parseExprAtom(...arguments);\n  }\n\n  parseIdentifier() {\n    return this.parsePlaceholder(\"Identifier\") || super.parseIdentifier(...arguments);\n  }\n\n  checkReservedWord(word) {\n    if (word !== undefined) super.checkReservedWord(...arguments);\n  }\n\n  parseBindingAtom() {\n    return this.parsePlaceholder(\"Pattern\") || super.parseBindingAtom(...arguments);\n  }\n\n  checkLVal(expr) {\n    if (expr.type !== \"Placeholder\") super.checkLVal(...arguments);\n  }\n\n  toAssignable(node) {\n    if (node && node.type === \"Placeholder\" && node.expectedNode === \"Expression\") {\n      node.expectedNode = \"Pattern\";\n      return node;\n    }\n\n    return super.toAssignable(...arguments);\n  }\n\n  isLet(context) {\n    if (super.isLet(context)) {\n      return true;\n    }\n\n    if (!this.isContextual(\"let\")) {\n      return false;\n    }\n\n    if (context) return false;\n    const nextToken = this.lookahead();\n\n    if (nextToken.type === types.placeholder) {\n      return true;\n    }\n\n    return false;\n  }\n\n  verifyBreakContinue(node) {\n    if (node.label && node.label.type === \"Placeholder\") return;\n    super.verifyBreakContinue(...arguments);\n  }\n\n  parseExpressionStatement(node, expr) {\n    if (expr.type !== \"Placeholder\" || expr.extra && expr.extra.parenthesized) {\n      return super.parseExpressionStatement(...arguments);\n    }\n\n    if (this.match(types.colon)) {\n      const stmt = node;\n      stmt.label = this.finishPlaceholder(expr, \"Identifier\");\n      this.next();\n      stmt.body = this.parseStatement(\"label\");\n      return this.finishNode(stmt, \"LabeledStatement\");\n    }\n\n    this.semicolon();\n    node.name = expr.name;\n    return this.finishPlaceholder(node, \"Statement\");\n  }\n\n  parseBlock() {\n    return this.parsePlaceholder(\"BlockStatement\") || super.parseBlock(...arguments);\n  }\n\n  parseFunctionId() {\n    return this.parsePlaceholder(\"Identifier\") || super.parseFunctionId(...arguments);\n  }\n\n  parseClass(node, isStatement, optionalId) {\n    const type = isStatement ? \"ClassDeclaration\" : \"ClassExpression\";\n    this.next();\n    this.takeDecorators(node);\n    const oldStrict = this.state.strict;\n    const placeholder = this.parsePlaceholder(\"Identifier\");\n\n    if (placeholder) {\n      if (this.match(types._extends) || this.match(types.placeholder) || this.match(types.braceL)) {\n        node.id = placeholder;\n      } else if (optionalId || !isStatement) {\n        node.id = null;\n        node.body = this.finishPlaceholder(placeholder, \"ClassBody\");\n        return this.finishNode(node, type);\n      } else {\n        this.unexpected(null, \"A class name is required\");\n      }\n    } else {\n      this.parseClassId(node, isStatement, optionalId);\n    }\n\n    this.parseClassSuper(node);\n    node.body = this.parsePlaceholder(\"ClassBody\") || this.parseClassBody(!!node.superClass, oldStrict);\n    return this.finishNode(node, type);\n  }\n\n  parseExport(node) {\n    const placeholder = this.parsePlaceholder(\"Identifier\");\n    if (!placeholder) return super.parseExport(...arguments);\n\n    if (!this.isContextual(\"from\") && !this.match(types.comma)) {\n      node.specifiers = [];\n      node.source = null;\n      node.declaration = this.finishPlaceholder(placeholder, \"Declaration\");\n      return this.finishNode(node, \"ExportNamedDeclaration\");\n    }\n\n    this.expectPlugin(\"exportDefaultFrom\");\n    const specifier = this.startNode();\n    specifier.exported = placeholder;\n    node.specifiers = [this.finishNode(specifier, \"ExportDefaultSpecifier\")];\n    return super.parseExport(node);\n  }\n\n  isExportDefaultSpecifier() {\n    if (this.match(types._default)) {\n      const next = this.nextTokenStart();\n\n      if (this.isUnparsedContextual(next, \"from\")) {\n        if (this.input.startsWith(types.placeholder.label, this.nextTokenStartSince(next + 4))) {\n          return true;\n        }\n      }\n    }\n\n    return super.isExportDefaultSpecifier();\n  }\n\n  maybeParseExportDefaultSpecifier(node) {\n    if (node.specifiers && node.specifiers.length > 0) {\n      return true;\n    }\n\n    return super.maybeParseExportDefaultSpecifier(...arguments);\n  }\n\n  checkExport(node) {\n    const {\n      specifiers\n    } = node;\n\n    if (specifiers != null && specifiers.length) {\n      node.specifiers = specifiers.filter(node => node.exported.type === \"Placeholder\");\n    }\n\n    super.checkExport(node);\n    node.specifiers = specifiers;\n  }\n\n  parseImport(node) {\n    const placeholder = this.parsePlaceholder(\"Identifier\");\n    if (!placeholder) return super.parseImport(...arguments);\n    node.specifiers = [];\n\n    if (!this.isContextual(\"from\") && !this.match(types.comma)) {\n      node.source = this.finishPlaceholder(placeholder, \"StringLiteral\");\n      this.semicolon();\n      return this.finishNode(node, \"ImportDeclaration\");\n    }\n\n    const specifier = this.startNodeAtNode(placeholder);\n    specifier.local = placeholder;\n    this.finishNode(specifier, \"ImportDefaultSpecifier\");\n    node.specifiers.push(specifier);\n\n    if (this.eat(types.comma)) {\n      const hasStarImport = this.maybeParseStarImportSpecifier(node);\n      if (!hasStarImport) this.parseNamedImportSpecifiers(node);\n    }\n\n    this.expectContextual(\"from\");\n    node.source = this.parseImportSource();\n    this.semicolon();\n    return this.finishNode(node, \"ImportDeclaration\");\n  }\n\n  parseImportSource() {\n    return this.parsePlaceholder(\"StringLiteral\") || super.parseImportSource(...arguments);\n  }\n\n});\n\nvar v8intrinsic = (superClass => class extends superClass {\n  parseV8Intrinsic() {\n    if (this.match(types.modulo)) {\n      const v8IntrinsicStart = this.state.start;\n      const node = this.startNode();\n      this.eat(types.modulo);\n\n      if (this.match(types.name)) {\n        const name = this.parseIdentifierName(this.state.start);\n        const identifier = this.createIdentifier(node, name);\n        identifier.type = \"V8IntrinsicIdentifier\";\n\n        if (this.match(types.parenL)) {\n          return identifier;\n        }\n      }\n\n      this.unexpected(v8IntrinsicStart);\n    }\n  }\n\n  parseExprAtom() {\n    return this.parseV8Intrinsic() || super.parseExprAtom(...arguments);\n  }\n\n});\n\nfunction hasPlugin(plugins, name) {\n  return plugins.some(plugin => {\n    if (Array.isArray(plugin)) {\n      return plugin[0] === name;\n    } else {\n      return plugin === name;\n    }\n  });\n}\nfunction getPluginOption(plugins, name, option) {\n  const plugin = plugins.find(plugin => {\n    if (Array.isArray(plugin)) {\n      return plugin[0] === name;\n    } else {\n      return plugin === name;\n    }\n  });\n\n  if (plugin && Array.isArray(plugin)) {\n    return plugin[1][option];\n  }\n\n  return null;\n}\nconst PIPELINE_PROPOSALS = [\"minimal\", \"smart\", \"fsharp\"];\nconst RECORD_AND_TUPLE_SYNTAX_TYPES = [\"hash\", \"bar\"];\nfunction validatePlugins(plugins) {\n  if (hasPlugin(plugins, \"decorators\")) {\n    if (hasPlugin(plugins, \"decorators-legacy\")) {\n      throw new Error(\"Cannot use the decorators and decorators-legacy plugin together\");\n    }\n\n    const decoratorsBeforeExport = getPluginOption(plugins, \"decorators\", \"decoratorsBeforeExport\");\n\n    if (decoratorsBeforeExport == null) {\n      throw new Error(\"The 'decorators' plugin requires a 'decoratorsBeforeExport' option,\" + \" whose value must be a boolean. If you are migrating from\" + \" Babylon/Babel 6 or want to use the old decorators proposal, you\" + \" should use the 'decorators-legacy' plugin instead of 'decorators'.\");\n    } else if (typeof decoratorsBeforeExport !== \"boolean\") {\n      throw new Error(\"'decoratorsBeforeExport' must be a boolean.\");\n    }\n  }\n\n  if (hasPlugin(plugins, \"flow\") && hasPlugin(plugins, \"typescript\")) {\n    throw new Error(\"Cannot combine flow and typescript plugins.\");\n  }\n\n  if (hasPlugin(plugins, \"placeholders\") && hasPlugin(plugins, \"v8intrinsic\")) {\n    throw new Error(\"Cannot combine placeholders and v8intrinsic plugins.\");\n  }\n\n  if (hasPlugin(plugins, \"pipelineOperator\") && !PIPELINE_PROPOSALS.includes(getPluginOption(plugins, \"pipelineOperator\", \"proposal\"))) {\n    throw new Error(\"'pipelineOperator' requires 'proposal' option whose value should be one of: \" + PIPELINE_PROPOSALS.map(p => `'${p}'`).join(\", \"));\n  }\n\n  if (hasPlugin(plugins, \"moduleAttributes\")) {\n    if (hasPlugin(plugins, \"importAssertions\")) {\n      throw new Error(\"Cannot combine importAssertions and moduleAttributes plugins.\");\n    }\n\n    const moduleAttributesVerionPluginOption = getPluginOption(plugins, \"moduleAttributes\", \"version\");\n\n    if (moduleAttributesVerionPluginOption !== \"may-2020\") {\n      throw new Error(\"The 'moduleAttributes' plugin requires a 'version' option,\" + \" representing the last proposal update. Currently, the\" + \" only supported value is 'may-2020'.\");\n    }\n  }\n\n  if (hasPlugin(plugins, \"recordAndTuple\") && !RECORD_AND_TUPLE_SYNTAX_TYPES.includes(getPluginOption(plugins, \"recordAndTuple\", \"syntaxType\"))) {\n    throw new Error(\"'recordAndTuple' requires 'syntaxType' option whose value should be one of: \" + RECORD_AND_TUPLE_SYNTAX_TYPES.map(p => `'${p}'`).join(\", \"));\n  }\n}\nconst mixinPlugins = {\n  estree,\n  jsx,\n  flow,\n  typescript,\n  v8intrinsic,\n  placeholders\n};\nconst mixinPluginNames = Object.keys(mixinPlugins);\n\nconst defaultOptions = {\n  sourceType: \"script\",\n  sourceFilename: undefined,\n  startLine: 1,\n  allowAwaitOutsideFunction: false,\n  allowReturnOutsideFunction: false,\n  allowImportExportEverywhere: false,\n  allowSuperOutsideMethod: false,\n  allowUndeclaredExports: false,\n  plugins: [],\n  strictMode: null,\n  ranges: false,\n  tokens: false,\n  createParenthesizedExpressions: false,\n  errorRecovery: false\n};\nfunction getOptions(opts) {\n  const options = {};\n\n  for (const key of Object.keys(defaultOptions)) {\n    options[key] = opts && opts[key] != null ? opts[key] : defaultOptions[key];\n  }\n\n  return options;\n}\n\nclass State {\n  constructor() {\n    this.strict = void 0;\n    this.curLine = void 0;\n    this.startLoc = void 0;\n    this.endLoc = void 0;\n    this.errors = [];\n    this.potentialArrowAt = -1;\n    this.noArrowAt = [];\n    this.noArrowParamsConversionAt = [];\n    this.maybeInArrowParameters = false;\n    this.inPipeline = false;\n    this.inType = false;\n    this.noAnonFunctionType = false;\n    this.inPropertyName = false;\n    this.hasFlowComment = false;\n    this.isIterator = false;\n    this.isDeclareContext = false;\n    this.inAbstractClass = false;\n    this.topicContext = {\n      maxNumOfResolvableTopics: 0,\n      maxTopicIndex: null\n    };\n    this.soloAwait = false;\n    this.inFSharpPipelineDirectBody = false;\n    this.labels = [];\n    this.decoratorStack = [[]];\n    this.comments = [];\n    this.trailingComments = [];\n    this.leadingComments = [];\n    this.commentStack = [];\n    this.commentPreviousNode = null;\n    this.pos = 0;\n    this.lineStart = 0;\n    this.type = types.eof;\n    this.value = null;\n    this.start = 0;\n    this.end = 0;\n    this.lastTokEndLoc = null;\n    this.lastTokStartLoc = null;\n    this.lastTokStart = 0;\n    this.lastTokEnd = 0;\n    this.context = [types$1.braceStatement];\n    this.exprAllowed = true;\n    this.containsEsc = false;\n    this.strictErrors = new Map();\n    this.exportedIdentifiers = [];\n    this.tokensLength = 0;\n  }\n\n  init(options) {\n    this.strict = options.strictMode === false ? false : options.sourceType === \"module\";\n    this.curLine = options.startLine;\n    this.startLoc = this.endLoc = this.curPosition();\n  }\n\n  curPosition() {\n    return new Position(this.curLine, this.pos - this.lineStart);\n  }\n\n  clone(skipArrays) {\n    const state = new State();\n    const keys = Object.keys(this);\n\n    for (let i = 0, length = keys.length; i < length; i++) {\n      const key = keys[i];\n      let val = this[key];\n\n      if (!skipArrays && Array.isArray(val)) {\n        val = val.slice();\n      }\n\n      state[key] = val;\n    }\n\n    return state;\n  }\n\n}\n\nvar _isDigit = function isDigit(code) {\n  return code >= 48 && code <= 57;\n};\nconst VALID_REGEX_FLAGS = new Set([\"g\", \"m\", \"s\", \"i\", \"y\", \"u\"]);\nconst forbiddenNumericSeparatorSiblings = {\n  decBinOct: [46, 66, 69, 79, 95, 98, 101, 111],\n  hex: [46, 88, 95, 120]\n};\nconst allowedNumericSeparatorSiblings = {};\nallowedNumericSeparatorSiblings.bin = [48, 49];\nallowedNumericSeparatorSiblings.oct = [...allowedNumericSeparatorSiblings.bin, 50, 51, 52, 53, 54, 55];\nallowedNumericSeparatorSiblings.dec = [...allowedNumericSeparatorSiblings.oct, 56, 57];\nallowedNumericSeparatorSiblings.hex = [...allowedNumericSeparatorSiblings.dec, 65, 66, 67, 68, 69, 70, 97, 98, 99, 100, 101, 102];\nclass Token {\n  constructor(state) {\n    this.type = state.type;\n    this.value = state.value;\n    this.start = state.start;\n    this.end = state.end;\n    this.loc = new SourceLocation(state.startLoc, state.endLoc);\n  }\n\n}\nclass Tokenizer extends ParserError {\n  constructor(options, input) {\n    super();\n    this.isLookahead = void 0;\n    this.tokens = [];\n    this.state = new State();\n    this.state.init(options);\n    this.input = input;\n    this.length = input.length;\n    this.isLookahead = false;\n  }\n\n  pushToken(token) {\n    this.tokens.length = this.state.tokensLength;\n    this.tokens.push(token);\n    ++this.state.tokensLength;\n  }\n\n  next() {\n    if (!this.isLookahead) {\n      this.checkKeywordEscapes();\n\n      if (this.options.tokens) {\n        this.pushToken(new Token(this.state));\n      }\n    }\n\n    this.state.lastTokEnd = this.state.end;\n    this.state.lastTokStart = this.state.start;\n    this.state.lastTokEndLoc = this.state.endLoc;\n    this.state.lastTokStartLoc = this.state.startLoc;\n    this.nextToken();\n  }\n\n  eat(type) {\n    if (this.match(type)) {\n      this.next();\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  match(type) {\n    return this.state.type === type;\n  }\n\n  lookahead() {\n    const old = this.state;\n    this.state = old.clone(true);\n    this.isLookahead = true;\n    this.next();\n    this.isLookahead = false;\n    const curr = this.state;\n    this.state = old;\n    return curr;\n  }\n\n  nextTokenStart() {\n    return this.nextTokenStartSince(this.state.pos);\n  }\n\n  nextTokenStartSince(pos) {\n    skipWhiteSpace.lastIndex = pos;\n    const skip = skipWhiteSpace.exec(this.input);\n    return pos + skip[0].length;\n  }\n\n  lookaheadCharCode() {\n    return this.input.charCodeAt(this.nextTokenStart());\n  }\n\n  setStrict(strict) {\n    this.state.strict = strict;\n\n    if (strict) {\n      this.state.strictErrors.forEach((message, pos) => this.raise(pos, message));\n      this.state.strictErrors.clear();\n    }\n  }\n\n  curContext() {\n    return this.state.context[this.state.context.length - 1];\n  }\n\n  nextToken() {\n    const curContext = this.curContext();\n    if (!(curContext != null && curContext.preserveSpace)) this.skipSpace();\n    this.state.start = this.state.pos;\n    this.state.startLoc = this.state.curPosition();\n\n    if (this.state.pos >= this.length) {\n      this.finishToken(types.eof);\n      return;\n    }\n\n    const override = curContext == null ? void 0 : curContext.override;\n\n    if (override) {\n      override(this);\n    } else {\n      this.getTokenFromCode(this.input.codePointAt(this.state.pos));\n    }\n  }\n\n  pushComment(block, text, start, end, startLoc, endLoc) {\n    const comment = {\n      type: block ? \"CommentBlock\" : \"CommentLine\",\n      value: text,\n      start: start,\n      end: end,\n      loc: new SourceLocation(startLoc, endLoc)\n    };\n    if (this.options.tokens) this.pushToken(comment);\n    this.state.comments.push(comment);\n    this.addComment(comment);\n  }\n\n  skipBlockComment() {\n    const startLoc = this.state.curPosition();\n    const start = this.state.pos;\n    const end = this.input.indexOf(\"*/\", this.state.pos + 2);\n    if (end === -1) throw this.raise(start, ErrorMessages.UnterminatedComment);\n    this.state.pos = end + 2;\n    lineBreakG.lastIndex = start;\n    let match;\n\n    while ((match = lineBreakG.exec(this.input)) && match.index < this.state.pos) {\n      ++this.state.curLine;\n      this.state.lineStart = match.index + match[0].length;\n    }\n\n    if (this.isLookahead) return;\n    this.pushComment(true, this.input.slice(start + 2, end), start, this.state.pos, startLoc, this.state.curPosition());\n  }\n\n  skipLineComment(startSkip) {\n    const start = this.state.pos;\n    const startLoc = this.state.curPosition();\n    let ch = this.input.charCodeAt(this.state.pos += startSkip);\n\n    if (this.state.pos < this.length) {\n      while (!isNewLine(ch) && ++this.state.pos < this.length) {\n        ch = this.input.charCodeAt(this.state.pos);\n      }\n    }\n\n    if (this.isLookahead) return;\n    this.pushComment(false, this.input.slice(start + startSkip, this.state.pos), start, this.state.pos, startLoc, this.state.curPosition());\n  }\n\n  skipSpace() {\n    loop: while (this.state.pos < this.length) {\n      const ch = this.input.charCodeAt(this.state.pos);\n\n      switch (ch) {\n        case 32:\n        case 160:\n        case 9:\n          ++this.state.pos;\n          break;\n\n        case 13:\n          if (this.input.charCodeAt(this.state.pos + 1) === 10) {\n            ++this.state.pos;\n          }\n\n        case 10:\n        case 8232:\n        case 8233:\n          ++this.state.pos;\n          ++this.state.curLine;\n          this.state.lineStart = this.state.pos;\n          break;\n\n        case 47:\n          switch (this.input.charCodeAt(this.state.pos + 1)) {\n            case 42:\n              this.skipBlockComment();\n              break;\n\n            case 47:\n              this.skipLineComment(2);\n              break;\n\n            default:\n              break loop;\n          }\n\n          break;\n\n        default:\n          if (isWhitespace(ch)) {\n            ++this.state.pos;\n          } else {\n            break loop;\n          }\n\n      }\n    }\n  }\n\n  finishToken(type, val) {\n    this.state.end = this.state.pos;\n    this.state.endLoc = this.state.curPosition();\n    const prevType = this.state.type;\n    this.state.type = type;\n    this.state.value = val;\n    if (!this.isLookahead) this.updateContext(prevType);\n  }\n\n  readToken_numberSign() {\n    if (this.state.pos === 0 && this.readToken_interpreter()) {\n      return;\n    }\n\n    const nextPos = this.state.pos + 1;\n    const next = this.input.charCodeAt(nextPos);\n\n    if (next >= 48 && next <= 57) {\n      throw this.raise(this.state.pos, ErrorMessages.UnexpectedDigitAfterHash);\n    }\n\n    if (next === 123 || next === 91 && this.hasPlugin(\"recordAndTuple\")) {\n      this.expectPlugin(\"recordAndTuple\");\n\n      if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"hash\") {\n        throw this.raise(this.state.pos, next === 123 ? ErrorMessages.RecordExpressionHashIncorrectStartSyntaxType : ErrorMessages.TupleExpressionHashIncorrectStartSyntaxType);\n      }\n\n      if (next === 123) {\n        this.finishToken(types.braceHashL);\n      } else {\n        this.finishToken(types.bracketHashL);\n      }\n\n      this.state.pos += 2;\n    } else {\n      this.finishOp(types.hash, 1);\n    }\n  }\n\n  readToken_dot() {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next >= 48 && next <= 57) {\n      this.readNumber(true);\n      return;\n    }\n\n    if (next === 46 && this.input.charCodeAt(this.state.pos + 2) === 46) {\n      this.state.pos += 3;\n      this.finishToken(types.ellipsis);\n    } else {\n      ++this.state.pos;\n      this.finishToken(types.dot);\n    }\n  }\n\n  readToken_slash() {\n    if (this.state.exprAllowed && !this.state.inType) {\n      ++this.state.pos;\n      this.readRegexp();\n      return;\n    }\n\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next === 61) {\n      this.finishOp(types.assign, 2);\n    } else {\n      this.finishOp(types.slash, 1);\n    }\n  }\n\n  readToken_interpreter() {\n    if (this.state.pos !== 0 || this.length < 2) return false;\n    let ch = this.input.charCodeAt(this.state.pos + 1);\n    if (ch !== 33) return false;\n    const start = this.state.pos;\n    this.state.pos += 1;\n\n    while (!isNewLine(ch) && ++this.state.pos < this.length) {\n      ch = this.input.charCodeAt(this.state.pos);\n    }\n\n    const value = this.input.slice(start + 2, this.state.pos);\n    this.finishToken(types.interpreterDirective, value);\n    return true;\n  }\n\n  readToken_mult_modulo(code) {\n    let type = code === 42 ? types.star : types.modulo;\n    let width = 1;\n    let next = this.input.charCodeAt(this.state.pos + 1);\n    const exprAllowed = this.state.exprAllowed;\n\n    if (code === 42 && next === 42) {\n      width++;\n      next = this.input.charCodeAt(this.state.pos + 2);\n      type = types.exponent;\n    }\n\n    if (next === 61 && !exprAllowed) {\n      width++;\n      type = types.assign;\n    }\n\n    this.finishOp(type, width);\n  }\n\n  readToken_pipe_amp(code) {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next === code) {\n      if (this.input.charCodeAt(this.state.pos + 2) === 61) {\n        this.finishOp(types.assign, 3);\n      } else {\n        this.finishOp(code === 124 ? types.logicalOR : types.logicalAND, 2);\n      }\n\n      return;\n    }\n\n    if (code === 124) {\n      if (next === 62) {\n        this.finishOp(types.pipeline, 2);\n        return;\n      }\n\n      if (this.hasPlugin(\"recordAndTuple\") && next === 125) {\n        if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n          throw this.raise(this.state.pos, ErrorMessages.RecordExpressionBarIncorrectEndSyntaxType);\n        }\n\n        this.finishOp(types.braceBarR, 2);\n        return;\n      }\n\n      if (this.hasPlugin(\"recordAndTuple\") && next === 93) {\n        if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n          throw this.raise(this.state.pos, ErrorMessages.TupleExpressionBarIncorrectEndSyntaxType);\n        }\n\n        this.finishOp(types.bracketBarR, 2);\n        return;\n      }\n    }\n\n    if (next === 61) {\n      this.finishOp(types.assign, 2);\n      return;\n    }\n\n    this.finishOp(code === 124 ? types.bitwiseOR : types.bitwiseAND, 1);\n  }\n\n  readToken_caret() {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next === 61) {\n      this.finishOp(types.assign, 2);\n    } else {\n      this.finishOp(types.bitwiseXOR, 1);\n    }\n  }\n\n  readToken_plus_min(code) {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next === code) {\n      if (next === 45 && !this.inModule && this.input.charCodeAt(this.state.pos + 2) === 62 && (this.state.lastTokEnd === 0 || this.hasPrecedingLineBreak())) {\n        this.skipLineComment(3);\n        this.skipSpace();\n        this.nextToken();\n        return;\n      }\n\n      this.finishOp(types.incDec, 2);\n      return;\n    }\n\n    if (next === 61) {\n      this.finishOp(types.assign, 2);\n    } else {\n      this.finishOp(types.plusMin, 1);\n    }\n  }\n\n  readToken_lt_gt(code) {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n    let size = 1;\n\n    if (next === code) {\n      size = code === 62 && this.input.charCodeAt(this.state.pos + 2) === 62 ? 3 : 2;\n\n      if (this.input.charCodeAt(this.state.pos + size) === 61) {\n        this.finishOp(types.assign, size + 1);\n        return;\n      }\n\n      this.finishOp(types.bitShift, size);\n      return;\n    }\n\n    if (next === 33 && code === 60 && !this.inModule && this.input.charCodeAt(this.state.pos + 2) === 45 && this.input.charCodeAt(this.state.pos + 3) === 45) {\n      this.skipLineComment(4);\n      this.skipSpace();\n      this.nextToken();\n      return;\n    }\n\n    if (next === 61) {\n      size = 2;\n    }\n\n    this.finishOp(types.relational, size);\n  }\n\n  readToken_eq_excl(code) {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next === 61) {\n      this.finishOp(types.equality, this.input.charCodeAt(this.state.pos + 2) === 61 ? 3 : 2);\n      return;\n    }\n\n    if (code === 61 && next === 62) {\n      this.state.pos += 2;\n      this.finishToken(types.arrow);\n      return;\n    }\n\n    this.finishOp(code === 61 ? types.eq : types.bang, 1);\n  }\n\n  readToken_question() {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n    const next2 = this.input.charCodeAt(this.state.pos + 2);\n\n    if (next === 63) {\n      if (next2 === 61) {\n        this.finishOp(types.assign, 3);\n      } else {\n        this.finishOp(types.nullishCoalescing, 2);\n      }\n    } else if (next === 46 && !(next2 >= 48 && next2 <= 57)) {\n      this.state.pos += 2;\n      this.finishToken(types.questionDot);\n    } else {\n      ++this.state.pos;\n      this.finishToken(types.question);\n    }\n  }\n\n  getTokenFromCode(code) {\n    switch (code) {\n      case 46:\n        this.readToken_dot();\n        return;\n\n      case 40:\n        ++this.state.pos;\n        this.finishToken(types.parenL);\n        return;\n\n      case 41:\n        ++this.state.pos;\n        this.finishToken(types.parenR);\n        return;\n\n      case 59:\n        ++this.state.pos;\n        this.finishToken(types.semi);\n        return;\n\n      case 44:\n        ++this.state.pos;\n        this.finishToken(types.comma);\n        return;\n\n      case 91:\n        if (this.hasPlugin(\"recordAndTuple\") && this.input.charCodeAt(this.state.pos + 1) === 124) {\n          if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n            throw this.raise(this.state.pos, ErrorMessages.TupleExpressionBarIncorrectStartSyntaxType);\n          }\n\n          this.finishToken(types.bracketBarL);\n          this.state.pos += 2;\n        } else {\n          ++this.state.pos;\n          this.finishToken(types.bracketL);\n        }\n\n        return;\n\n      case 93:\n        ++this.state.pos;\n        this.finishToken(types.bracketR);\n        return;\n\n      case 123:\n        if (this.hasPlugin(\"recordAndTuple\") && this.input.charCodeAt(this.state.pos + 1) === 124) {\n          if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n            throw this.raise(this.state.pos, ErrorMessages.RecordExpressionBarIncorrectStartSyntaxType);\n          }\n\n          this.finishToken(types.braceBarL);\n          this.state.pos += 2;\n        } else {\n          ++this.state.pos;\n          this.finishToken(types.braceL);\n        }\n\n        return;\n\n      case 125:\n        ++this.state.pos;\n        this.finishToken(types.braceR);\n        return;\n\n      case 58:\n        if (this.hasPlugin(\"functionBind\") && this.input.charCodeAt(this.state.pos + 1) === 58) {\n          this.finishOp(types.doubleColon, 2);\n        } else {\n          ++this.state.pos;\n          this.finishToken(types.colon);\n        }\n\n        return;\n\n      case 63:\n        this.readToken_question();\n        return;\n\n      case 96:\n        ++this.state.pos;\n        this.finishToken(types.backQuote);\n        return;\n\n      case 48:\n        {\n          const next = this.input.charCodeAt(this.state.pos + 1);\n\n          if (next === 120 || next === 88) {\n            this.readRadixNumber(16);\n            return;\n          }\n\n          if (next === 111 || next === 79) {\n            this.readRadixNumber(8);\n            return;\n          }\n\n          if (next === 98 || next === 66) {\n            this.readRadixNumber(2);\n            return;\n          }\n        }\n\n      case 49:\n      case 50:\n      case 51:\n      case 52:\n      case 53:\n      case 54:\n      case 55:\n      case 56:\n      case 57:\n        this.readNumber(false);\n        return;\n\n      case 34:\n      case 39:\n        this.readString(code);\n        return;\n\n      case 47:\n        this.readToken_slash();\n        return;\n\n      case 37:\n      case 42:\n        this.readToken_mult_modulo(code);\n        return;\n\n      case 124:\n      case 38:\n        this.readToken_pipe_amp(code);\n        return;\n\n      case 94:\n        this.readToken_caret();\n        return;\n\n      case 43:\n      case 45:\n        this.readToken_plus_min(code);\n        return;\n\n      case 60:\n      case 62:\n        this.readToken_lt_gt(code);\n        return;\n\n      case 61:\n      case 33:\n        this.readToken_eq_excl(code);\n        return;\n\n      case 126:\n        this.finishOp(types.tilde, 1);\n        return;\n\n      case 64:\n        ++this.state.pos;\n        this.finishToken(types.at);\n        return;\n\n      case 35:\n        this.readToken_numberSign();\n        return;\n\n      case 92:\n        this.readWord();\n        return;\n\n      default:\n        if (isIdentifierStart(code)) {\n          this.readWord();\n          return;\n        }\n\n    }\n\n    throw this.raise(this.state.pos, ErrorMessages.InvalidOrUnexpectedToken, String.fromCodePoint(code));\n  }\n\n  finishOp(type, size) {\n    const str = this.input.slice(this.state.pos, this.state.pos + size);\n    this.state.pos += size;\n    this.finishToken(type, str);\n  }\n\n  readRegexp() {\n    const start = this.state.pos;\n    let escaped, inClass;\n\n    for (;;) {\n      if (this.state.pos >= this.length) {\n        throw this.raise(start, ErrorMessages.UnterminatedRegExp);\n      }\n\n      const ch = this.input.charAt(this.state.pos);\n\n      if (lineBreak.test(ch)) {\n        throw this.raise(start, ErrorMessages.UnterminatedRegExp);\n      }\n\n      if (escaped) {\n        escaped = false;\n      } else {\n        if (ch === \"[\") {\n          inClass = true;\n        } else if (ch === \"]\" && inClass) {\n          inClass = false;\n        } else if (ch === \"/\" && !inClass) {\n          break;\n        }\n\n        escaped = ch === \"\\\\\";\n      }\n\n      ++this.state.pos;\n    }\n\n    const content = this.input.slice(start, this.state.pos);\n    ++this.state.pos;\n    let mods = \"\";\n\n    while (this.state.pos < this.length) {\n      const char = this.input[this.state.pos];\n      const charCode = this.input.codePointAt(this.state.pos);\n\n      if (VALID_REGEX_FLAGS.has(char)) {\n        if (mods.indexOf(char) > -1) {\n          this.raise(this.state.pos + 1, ErrorMessages.DuplicateRegExpFlags);\n        }\n      } else if (isIdentifierChar(charCode) || charCode === 92) {\n        this.raise(this.state.pos + 1, ErrorMessages.MalformedRegExpFlags);\n      } else {\n        break;\n      }\n\n      ++this.state.pos;\n      mods += char;\n    }\n\n    this.finishToken(types.regexp, {\n      pattern: content,\n      flags: mods\n    });\n  }\n\n  readInt(radix, len, forceLen, allowNumSeparator = true) {\n    const start = this.state.pos;\n    const forbiddenSiblings = radix === 16 ? forbiddenNumericSeparatorSiblings.hex : forbiddenNumericSeparatorSiblings.decBinOct;\n    const allowedSiblings = radix === 16 ? allowedNumericSeparatorSiblings.hex : radix === 10 ? allowedNumericSeparatorSiblings.dec : radix === 8 ? allowedNumericSeparatorSiblings.oct : allowedNumericSeparatorSiblings.bin;\n    let invalid = false;\n    let total = 0;\n\n    for (let i = 0, e = len == null ? Infinity : len; i < e; ++i) {\n      const code = this.input.charCodeAt(this.state.pos);\n      let val;\n\n      if (code === 95) {\n        const prev = this.input.charCodeAt(this.state.pos - 1);\n        const next = this.input.charCodeAt(this.state.pos + 1);\n\n        if (allowedSiblings.indexOf(next) === -1) {\n          this.raise(this.state.pos, ErrorMessages.UnexpectedNumericSeparator);\n        } else if (forbiddenSiblings.indexOf(prev) > -1 || forbiddenSiblings.indexOf(next) > -1 || Number.isNaN(next)) {\n          this.raise(this.state.pos, ErrorMessages.UnexpectedNumericSeparator);\n        }\n\n        if (!allowNumSeparator) {\n          this.raise(this.state.pos, ErrorMessages.NumericSeparatorInEscapeSequence);\n        }\n\n        ++this.state.pos;\n        continue;\n      }\n\n      if (code >= 97) {\n        val = code - 97 + 10;\n      } else if (code >= 65) {\n        val = code - 65 + 10;\n      } else if (_isDigit(code)) {\n        val = code - 48;\n      } else {\n        val = Infinity;\n      }\n\n      if (val >= radix) {\n        if (this.options.errorRecovery && val <= 9) {\n          val = 0;\n          this.raise(this.state.start + i + 2, ErrorMessages.InvalidDigit, radix);\n        } else if (forceLen) {\n          val = 0;\n          invalid = true;\n        } else {\n          break;\n        }\n      }\n\n      ++this.state.pos;\n      total = total * radix + val;\n    }\n\n    if (this.state.pos === start || len != null && this.state.pos - start !== len || invalid) {\n      return null;\n    }\n\n    return total;\n  }\n\n  readRadixNumber(radix) {\n    const start = this.state.pos;\n    let isBigInt = false;\n    this.state.pos += 2;\n    const val = this.readInt(radix);\n\n    if (val == null) {\n      this.raise(this.state.start + 2, ErrorMessages.InvalidDigit, radix);\n    }\n\n    const next = this.input.charCodeAt(this.state.pos);\n\n    if (next === 110) {\n      ++this.state.pos;\n      isBigInt = true;\n    } else if (next === 109) {\n      throw this.raise(start, ErrorMessages.InvalidDecimal);\n    }\n\n    if (isIdentifierStart(this.input.codePointAt(this.state.pos))) {\n      throw this.raise(this.state.pos, ErrorMessages.NumberIdentifier);\n    }\n\n    if (isBigInt) {\n      const str = this.input.slice(start, this.state.pos).replace(/[_n]/g, \"\");\n      this.finishToken(types.bigint, str);\n      return;\n    }\n\n    this.finishToken(types.num, val);\n  }\n\n  readNumber(startsWithDot) {\n    const start = this.state.pos;\n    let isFloat = false;\n    let isBigInt = false;\n    let isDecimal = false;\n    let hasExponent = false;\n    let isOctal = false;\n\n    if (!startsWithDot && this.readInt(10) === null) {\n      this.raise(start, ErrorMessages.InvalidNumber);\n    }\n\n    const hasLeadingZero = this.state.pos - start >= 2 && this.input.charCodeAt(start) === 48;\n\n    if (hasLeadingZero) {\n      const integer = this.input.slice(start, this.state.pos);\n      this.recordStrictModeErrors(start, ErrorMessages.StrictOctalLiteral);\n\n      if (!this.state.strict) {\n        const underscorePos = integer.indexOf(\"_\");\n\n        if (underscorePos > 0) {\n          this.raise(underscorePos + start, ErrorMessages.ZeroDigitNumericSeparator);\n        }\n      }\n\n      isOctal = hasLeadingZero && !/[89]/.test(integer);\n    }\n\n    let next = this.input.charCodeAt(this.state.pos);\n\n    if (next === 46 && !isOctal) {\n      ++this.state.pos;\n      this.readInt(10);\n      isFloat = true;\n      next = this.input.charCodeAt(this.state.pos);\n    }\n\n    if ((next === 69 || next === 101) && !isOctal) {\n      next = this.input.charCodeAt(++this.state.pos);\n\n      if (next === 43 || next === 45) {\n        ++this.state.pos;\n      }\n\n      if (this.readInt(10) === null) {\n        this.raise(start, ErrorMessages.InvalidOrMissingExponent);\n      }\n\n      isFloat = true;\n      hasExponent = true;\n      next = this.input.charCodeAt(this.state.pos);\n    }\n\n    if (next === 110) {\n      if (isFloat || hasLeadingZero) {\n        this.raise(start, ErrorMessages.InvalidBigIntLiteral);\n      }\n\n      ++this.state.pos;\n      isBigInt = true;\n    }\n\n    if (next === 109) {\n      this.expectPlugin(\"decimal\", this.state.pos);\n\n      if (hasExponent || hasLeadingZero) {\n        this.raise(start, ErrorMessages.InvalidDecimal);\n      }\n\n      ++this.state.pos;\n      isDecimal = true;\n    }\n\n    if (isIdentifierStart(this.input.codePointAt(this.state.pos))) {\n      throw this.raise(this.state.pos, ErrorMessages.NumberIdentifier);\n    }\n\n    const str = this.input.slice(start, this.state.pos).replace(/[_mn]/g, \"\");\n\n    if (isBigInt) {\n      this.finishToken(types.bigint, str);\n      return;\n    }\n\n    if (isDecimal) {\n      this.finishToken(types.decimal, str);\n      return;\n    }\n\n    const val = isOctal ? parseInt(str, 8) : parseFloat(str);\n    this.finishToken(types.num, val);\n  }\n\n  readCodePoint(throwOnInvalid) {\n    const ch = this.input.charCodeAt(this.state.pos);\n    let code;\n\n    if (ch === 123) {\n      const codePos = ++this.state.pos;\n      code = this.readHexChar(this.input.indexOf(\"}\", this.state.pos) - this.state.pos, true, throwOnInvalid);\n      ++this.state.pos;\n\n      if (code !== null && code > 0x10ffff) {\n        if (throwOnInvalid) {\n          this.raise(codePos, ErrorMessages.InvalidCodePoint);\n        } else {\n          return null;\n        }\n      }\n    } else {\n      code = this.readHexChar(4, false, throwOnInvalid);\n    }\n\n    return code;\n  }\n\n  readString(quote) {\n    let out = \"\",\n        chunkStart = ++this.state.pos;\n\n    for (;;) {\n      if (this.state.pos >= this.length) {\n        throw this.raise(this.state.start, ErrorMessages.UnterminatedString);\n      }\n\n      const ch = this.input.charCodeAt(this.state.pos);\n      if (ch === quote) break;\n\n      if (ch === 92) {\n        out += this.input.slice(chunkStart, this.state.pos);\n        out += this.readEscapedChar(false);\n        chunkStart = this.state.pos;\n      } else if (ch === 8232 || ch === 8233) {\n        ++this.state.pos;\n        ++this.state.curLine;\n        this.state.lineStart = this.state.pos;\n      } else if (isNewLine(ch)) {\n        throw this.raise(this.state.start, ErrorMessages.UnterminatedString);\n      } else {\n        ++this.state.pos;\n      }\n    }\n\n    out += this.input.slice(chunkStart, this.state.pos++);\n    this.finishToken(types.string, out);\n  }\n\n  readTmplToken() {\n    let out = \"\",\n        chunkStart = this.state.pos,\n        containsInvalid = false;\n\n    for (;;) {\n      if (this.state.pos >= this.length) {\n        throw this.raise(this.state.start, ErrorMessages.UnterminatedTemplate);\n      }\n\n      const ch = this.input.charCodeAt(this.state.pos);\n\n      if (ch === 96 || ch === 36 && this.input.charCodeAt(this.state.pos + 1) === 123) {\n        if (this.state.pos === this.state.start && this.match(types.template)) {\n          if (ch === 36) {\n            this.state.pos += 2;\n            this.finishToken(types.dollarBraceL);\n            return;\n          } else {\n            ++this.state.pos;\n            this.finishToken(types.backQuote);\n            return;\n          }\n        }\n\n        out += this.input.slice(chunkStart, this.state.pos);\n        this.finishToken(types.template, containsInvalid ? null : out);\n        return;\n      }\n\n      if (ch === 92) {\n        out += this.input.slice(chunkStart, this.state.pos);\n        const escaped = this.readEscapedChar(true);\n\n        if (escaped === null) {\n          containsInvalid = true;\n        } else {\n          out += escaped;\n        }\n\n        chunkStart = this.state.pos;\n      } else if (isNewLine(ch)) {\n        out += this.input.slice(chunkStart, this.state.pos);\n        ++this.state.pos;\n\n        switch (ch) {\n          case 13:\n            if (this.input.charCodeAt(this.state.pos) === 10) {\n              ++this.state.pos;\n            }\n\n          case 10:\n            out += \"\\n\";\n            break;\n\n          default:\n            out += String.fromCharCode(ch);\n            break;\n        }\n\n        ++this.state.curLine;\n        this.state.lineStart = this.state.pos;\n        chunkStart = this.state.pos;\n      } else {\n        ++this.state.pos;\n      }\n    }\n  }\n\n  recordStrictModeErrors(pos, message) {\n    if (this.state.strict && !this.state.strictErrors.has(pos)) {\n      this.raise(pos, message);\n    } else {\n      this.state.strictErrors.set(pos, message);\n    }\n  }\n\n  readEscapedChar(inTemplate) {\n    const throwOnInvalid = !inTemplate;\n    const ch = this.input.charCodeAt(++this.state.pos);\n    ++this.state.pos;\n\n    switch (ch) {\n      case 110:\n        return \"\\n\";\n\n      case 114:\n        return \"\\r\";\n\n      case 120:\n        {\n          const code = this.readHexChar(2, false, throwOnInvalid);\n          return code === null ? null : String.fromCharCode(code);\n        }\n\n      case 117:\n        {\n          const code = this.readCodePoint(throwOnInvalid);\n          return code === null ? null : String.fromCodePoint(code);\n        }\n\n      case 116:\n        return \"\\t\";\n\n      case 98:\n        return \"\\b\";\n\n      case 118:\n        return \"\\u000b\";\n\n      case 102:\n        return \"\\f\";\n\n      case 13:\n        if (this.input.charCodeAt(this.state.pos) === 10) {\n          ++this.state.pos;\n        }\n\n      case 10:\n        this.state.lineStart = this.state.pos;\n        ++this.state.curLine;\n\n      case 8232:\n      case 8233:\n        return \"\";\n\n      case 56:\n      case 57:\n        if (inTemplate) {\n          return null;\n        } else {\n          this.recordStrictModeErrors(this.state.pos - 1, ErrorMessages.StrictNumericEscape);\n        }\n\n      default:\n        if (ch >= 48 && ch <= 55) {\n          const codePos = this.state.pos - 1;\n          const match = this.input.substr(this.state.pos - 1, 3).match(/^[0-7]+/);\n          let octalStr = match[0];\n          let octal = parseInt(octalStr, 8);\n\n          if (octal > 255) {\n            octalStr = octalStr.slice(0, -1);\n            octal = parseInt(octalStr, 8);\n          }\n\n          this.state.pos += octalStr.length - 1;\n          const next = this.input.charCodeAt(this.state.pos);\n\n          if (octalStr !== \"0\" || next === 56 || next === 57) {\n            if (inTemplate) {\n              return null;\n            } else {\n              this.recordStrictModeErrors(codePos, ErrorMessages.StrictNumericEscape);\n            }\n          }\n\n          return String.fromCharCode(octal);\n        }\n\n        return String.fromCharCode(ch);\n    }\n  }\n\n  readHexChar(len, forceLen, throwOnInvalid) {\n    const codePos = this.state.pos;\n    const n = this.readInt(16, len, forceLen, false);\n\n    if (n === null) {\n      if (throwOnInvalid) {\n        this.raise(codePos, ErrorMessages.InvalidEscapeSequence);\n      } else {\n        this.state.pos = codePos - 1;\n      }\n    }\n\n    return n;\n  }\n\n  readWord1() {\n    let word = \"\";\n    this.state.containsEsc = false;\n    const start = this.state.pos;\n    let chunkStart = this.state.pos;\n\n    while (this.state.pos < this.length) {\n      const ch = this.input.codePointAt(this.state.pos);\n\n      if (isIdentifierChar(ch)) {\n        this.state.pos += ch <= 0xffff ? 1 : 2;\n      } else if (this.state.isIterator && ch === 64) {\n        ++this.state.pos;\n      } else if (ch === 92) {\n        this.state.containsEsc = true;\n        word += this.input.slice(chunkStart, this.state.pos);\n        const escStart = this.state.pos;\n        const identifierCheck = this.state.pos === start ? isIdentifierStart : isIdentifierChar;\n\n        if (this.input.charCodeAt(++this.state.pos) !== 117) {\n          this.raise(this.state.pos, ErrorMessages.MissingUnicodeEscape);\n          continue;\n        }\n\n        ++this.state.pos;\n        const esc = this.readCodePoint(true);\n\n        if (esc !== null) {\n          if (!identifierCheck(esc)) {\n            this.raise(escStart, ErrorMessages.EscapedCharNotAnIdentifier);\n          }\n\n          word += String.fromCodePoint(esc);\n        }\n\n        chunkStart = this.state.pos;\n      } else {\n        break;\n      }\n    }\n\n    return word + this.input.slice(chunkStart, this.state.pos);\n  }\n\n  isIterator(word) {\n    return word === \"@@iterator\" || word === \"@@asyncIterator\";\n  }\n\n  readWord() {\n    const word = this.readWord1();\n    const type = keywords.get(word) || types.name;\n\n    if (this.state.isIterator && (!this.isIterator(word) || !this.state.inType)) {\n      this.raise(this.state.pos, ErrorMessages.InvalidIdentifier, word);\n    }\n\n    this.finishToken(type, word);\n  }\n\n  checkKeywordEscapes() {\n    const kw = this.state.type.keyword;\n\n    if (kw && this.state.containsEsc) {\n      this.raise(this.state.start, ErrorMessages.InvalidEscapedReservedWord, kw);\n    }\n  }\n\n  braceIsBlock(prevType) {\n    const parent = this.curContext();\n\n    if (parent === types$1.functionExpression || parent === types$1.functionStatement) {\n      return true;\n    }\n\n    if (prevType === types.colon && (parent === types$1.braceStatement || parent === types$1.braceExpression)) {\n      return !parent.isExpr;\n    }\n\n    if (prevType === types._return || prevType === types.name && this.state.exprAllowed) {\n      return this.hasPrecedingLineBreak();\n    }\n\n    if (prevType === types._else || prevType === types.semi || prevType === types.eof || prevType === types.parenR || prevType === types.arrow) {\n      return true;\n    }\n\n    if (prevType === types.braceL) {\n      return parent === types$1.braceStatement;\n    }\n\n    if (prevType === types._var || prevType === types._const || prevType === types.name) {\n      return false;\n    }\n\n    if (prevType === types.relational) {\n      return true;\n    }\n\n    return !this.state.exprAllowed;\n  }\n\n  updateContext(prevType) {\n    const type = this.state.type;\n    let update;\n\n    if (type.keyword && (prevType === types.dot || prevType === types.questionDot)) {\n      this.state.exprAllowed = false;\n    } else if (update = type.updateContext) {\n      update.call(this, prevType);\n    } else {\n      this.state.exprAllowed = type.beforeExpr;\n    }\n  }\n\n}\n\nclass ClassScope {\n  constructor() {\n    this.privateNames = new Set();\n    this.loneAccessors = new Map();\n    this.undefinedPrivateNames = new Map();\n  }\n\n}\nclass ClassScopeHandler {\n  constructor(raise) {\n    this.stack = [];\n    this.undefinedPrivateNames = new Map();\n    this.raise = raise;\n  }\n\n  current() {\n    return this.stack[this.stack.length - 1];\n  }\n\n  enter() {\n    this.stack.push(new ClassScope());\n  }\n\n  exit() {\n    const oldClassScope = this.stack.pop();\n    const current = this.current();\n\n    for (const [name, pos] of Array.from(oldClassScope.undefinedPrivateNames)) {\n      if (current) {\n        if (!current.undefinedPrivateNames.has(name)) {\n          current.undefinedPrivateNames.set(name, pos);\n        }\n      } else {\n        this.raise(pos, ErrorMessages.InvalidPrivateFieldResolution, name);\n      }\n    }\n  }\n\n  declarePrivateName(name, elementType, pos) {\n    const classScope = this.current();\n    let redefined = classScope.privateNames.has(name);\n\n    if (elementType & CLASS_ELEMENT_KIND_ACCESSOR) {\n      const accessor = redefined && classScope.loneAccessors.get(name);\n\n      if (accessor) {\n        const oldStatic = accessor & CLASS_ELEMENT_FLAG_STATIC;\n        const newStatic = elementType & CLASS_ELEMENT_FLAG_STATIC;\n        const oldKind = accessor & CLASS_ELEMENT_KIND_ACCESSOR;\n        const newKind = elementType & CLASS_ELEMENT_KIND_ACCESSOR;\n        redefined = oldKind === newKind || oldStatic !== newStatic;\n        if (!redefined) classScope.loneAccessors.delete(name);\n      } else if (!redefined) {\n        classScope.loneAccessors.set(name, elementType);\n      }\n    }\n\n    if (redefined) {\n      this.raise(pos, ErrorMessages.PrivateNameRedeclaration, name);\n    }\n\n    classScope.privateNames.add(name);\n    classScope.undefinedPrivateNames.delete(name);\n  }\n\n  usePrivateName(name, pos) {\n    let classScope;\n\n    for (classScope of this.stack) {\n      if (classScope.privateNames.has(name)) return;\n    }\n\n    if (classScope) {\n      classScope.undefinedPrivateNames.set(name, pos);\n    } else {\n      this.raise(pos, ErrorMessages.InvalidPrivateFieldResolution, name);\n    }\n  }\n\n}\n\nconst kExpression = 0,\n      kMaybeArrowParameterDeclaration = 1,\n      kMaybeAsyncArrowParameterDeclaration = 2,\n      kParameterDeclaration = 3;\n\nclass ExpressionScope {\n  constructor(type = kExpression) {\n    this.type = void 0;\n    this.type = type;\n  }\n\n  canBeArrowParameterDeclaration() {\n    return this.type === kMaybeAsyncArrowParameterDeclaration || this.type === kMaybeArrowParameterDeclaration;\n  }\n\n  isCertainlyParameterDeclaration() {\n    return this.type === kParameterDeclaration;\n  }\n\n}\n\nclass ArrowHeadParsingScope extends ExpressionScope {\n  constructor(type) {\n    super(type);\n    this.errors = new Map();\n  }\n\n  recordDeclarationError(pos, message) {\n    this.errors.set(pos, message);\n  }\n\n  clearDeclarationError(pos) {\n    this.errors.delete(pos);\n  }\n\n  iterateErrors(iterator) {\n    this.errors.forEach(iterator);\n  }\n\n}\n\nclass ExpressionScopeHandler {\n  constructor(raise) {\n    this.stack = [new ExpressionScope()];\n    this.raise = raise;\n  }\n\n  enter(scope) {\n    this.stack.push(scope);\n  }\n\n  exit() {\n    this.stack.pop();\n  }\n\n  recordParameterInitializerError(pos, message) {\n    const {\n      stack\n    } = this;\n    let i = stack.length - 1;\n    let scope = stack[i];\n\n    while (!scope.isCertainlyParameterDeclaration()) {\n      if (scope.canBeArrowParameterDeclaration()) {\n        scope.recordDeclarationError(pos, message);\n      } else {\n        return;\n      }\n\n      scope = stack[--i];\n    }\n\n    this.raise(pos, message);\n  }\n\n  recordParenthesizedIdentifierError(pos, message) {\n    const {\n      stack\n    } = this;\n    const scope = stack[stack.length - 1];\n\n    if (scope.isCertainlyParameterDeclaration()) {\n      this.raise(pos, message);\n    } else if (scope.canBeArrowParameterDeclaration()) {\n      scope.recordDeclarationError(pos, message);\n    } else {\n      return;\n    }\n  }\n\n  recordAsyncArrowParametersError(pos, message) {\n    const {\n      stack\n    } = this;\n    let i = stack.length - 1;\n    let scope = stack[i];\n\n    while (scope.canBeArrowParameterDeclaration()) {\n      if (scope.type === kMaybeAsyncArrowParameterDeclaration) {\n        scope.recordDeclarationError(pos, message);\n      }\n\n      scope = stack[--i];\n    }\n  }\n\n  validateAsPattern() {\n    const {\n      stack\n    } = this;\n    const currentScope = stack[stack.length - 1];\n    if (!currentScope.canBeArrowParameterDeclaration()) return;\n    currentScope.iterateErrors((message, pos) => {\n      this.raise(pos, message);\n      let i = stack.length - 2;\n      let scope = stack[i];\n\n      while (scope.canBeArrowParameterDeclaration()) {\n        scope.clearDeclarationError(pos);\n        scope = stack[--i];\n      }\n    });\n  }\n\n}\nfunction newParameterDeclarationScope() {\n  return new ExpressionScope(kParameterDeclaration);\n}\nfunction newArrowHeadScope() {\n  return new ArrowHeadParsingScope(kMaybeArrowParameterDeclaration);\n}\nfunction newAsyncArrowScope() {\n  return new ArrowHeadParsingScope(kMaybeAsyncArrowParameterDeclaration);\n}\nfunction newExpressionScope() {\n  return new ExpressionScope();\n}\n\nclass UtilParser extends Tokenizer {\n  addExtra(node, key, val) {\n    if (!node) return;\n    const extra = node.extra = node.extra || {};\n    extra[key] = val;\n  }\n\n  isRelational(op) {\n    return this.match(types.relational) && this.state.value === op;\n  }\n\n  expectRelational(op) {\n    if (this.isRelational(op)) {\n      this.next();\n    } else {\n      this.unexpected(null, types.relational);\n    }\n  }\n\n  isContextual(name) {\n    return this.match(types.name) && this.state.value === name && !this.state.containsEsc;\n  }\n\n  isUnparsedContextual(nameStart, name) {\n    const nameEnd = nameStart + name.length;\n    return this.input.slice(nameStart, nameEnd) === name && (nameEnd === this.input.length || !isIdentifierChar(this.input.charCodeAt(nameEnd)));\n  }\n\n  isLookaheadContextual(name) {\n    const next = this.nextTokenStart();\n    return this.isUnparsedContextual(next, name);\n  }\n\n  eatContextual(name) {\n    return this.isContextual(name) && this.eat(types.name);\n  }\n\n  expectContextual(name, message) {\n    if (!this.eatContextual(name)) this.unexpected(null, message);\n  }\n\n  canInsertSemicolon() {\n    return this.match(types.eof) || this.match(types.braceR) || this.hasPrecedingLineBreak();\n  }\n\n  hasPrecedingLineBreak() {\n    return lineBreak.test(this.input.slice(this.state.lastTokEnd, this.state.start));\n  }\n\n  hasFollowingLineBreak() {\n    return lineBreak.test(this.input.slice(this.state.end, this.nextTokenStart()));\n  }\n\n  isLineTerminator() {\n    return this.eat(types.semi) || this.canInsertSemicolon();\n  }\n\n  semicolon(allowAsi = true) {\n    if (allowAsi ? this.isLineTerminator() : this.eat(types.semi)) return;\n    this.raise(this.state.lastTokEnd, ErrorMessages.MissingSemicolon);\n  }\n\n  expect(type, pos) {\n    this.eat(type) || this.unexpected(pos, type);\n  }\n\n  assertNoSpace(message = \"Unexpected space.\") {\n    if (this.state.start > this.state.lastTokEnd) {\n      this.raise(this.state.lastTokEnd, message);\n    }\n  }\n\n  unexpected(pos, messageOrType = \"Unexpected token\") {\n    if (typeof messageOrType !== \"string\") {\n      messageOrType = `Unexpected token, expected \"${messageOrType.label}\"`;\n    }\n\n    throw this.raise(pos != null ? pos : this.state.start, messageOrType);\n  }\n\n  expectPlugin(name, pos) {\n    if (!this.hasPlugin(name)) {\n      throw this.raiseWithData(pos != null ? pos : this.state.start, {\n        missingPlugin: [name]\n      }, `This experimental syntax requires enabling the parser plugin: '${name}'`);\n    }\n\n    return true;\n  }\n\n  expectOnePlugin(names, pos) {\n    if (!names.some(n => this.hasPlugin(n))) {\n      throw this.raiseWithData(pos != null ? pos : this.state.start, {\n        missingPlugin: names\n      }, `This experimental syntax requires enabling one of the following parser plugin(s): '${names.join(\", \")}'`);\n    }\n  }\n\n  tryParse(fn, oldState = this.state.clone()) {\n    const abortSignal = {\n      node: null\n    };\n\n    try {\n      const node = fn((node = null) => {\n        abortSignal.node = node;\n        throw abortSignal;\n      });\n\n      if (this.state.errors.length > oldState.errors.length) {\n        const failState = this.state;\n        this.state = oldState;\n        return {\n          node,\n          error: failState.errors[oldState.errors.length],\n          thrown: false,\n          aborted: false,\n          failState\n        };\n      }\n\n      return {\n        node,\n        error: null,\n        thrown: false,\n        aborted: false,\n        failState: null\n      };\n    } catch (error) {\n      const failState = this.state;\n      this.state = oldState;\n\n      if (error instanceof SyntaxError) {\n        return {\n          node: null,\n          error,\n          thrown: true,\n          aborted: false,\n          failState\n        };\n      }\n\n      if (error === abortSignal) {\n        return {\n          node: abortSignal.node,\n          error: null,\n          thrown: false,\n          aborted: true,\n          failState\n        };\n      }\n\n      throw error;\n    }\n  }\n\n  checkExpressionErrors(refExpressionErrors, andThrow) {\n    if (!refExpressionErrors) return false;\n    const {\n      shorthandAssign,\n      doubleProto\n    } = refExpressionErrors;\n    if (!andThrow) return shorthandAssign >= 0 || doubleProto >= 0;\n\n    if (shorthandAssign >= 0) {\n      this.unexpected(shorthandAssign);\n    }\n\n    if (doubleProto >= 0) {\n      this.raise(doubleProto, ErrorMessages.DuplicateProto);\n    }\n  }\n\n  isLiteralPropertyName() {\n    return this.match(types.name) || !!this.state.type.keyword || this.match(types.string) || this.match(types.num) || this.match(types.bigint) || this.match(types.decimal);\n  }\n\n  isPrivateName(node) {\n    return node.type === \"PrivateName\";\n  }\n\n  getPrivateNameSV(node) {\n    return node.id.name;\n  }\n\n  hasPropertyAsPrivateName(node) {\n    return (node.type === \"MemberExpression\" || node.type === \"OptionalMemberExpression\") && this.isPrivateName(node.property);\n  }\n\n  isOptionalChain(node) {\n    return node.type === \"OptionalMemberExpression\" || node.type === \"OptionalCallExpression\";\n  }\n\n  isObjectProperty(node) {\n    return node.type === \"ObjectProperty\";\n  }\n\n  isObjectMethod(node) {\n    return node.type === \"ObjectMethod\";\n  }\n\n  initializeScopes(inModule = this.options.sourceType === \"module\") {\n    const oldLabels = this.state.labels;\n    this.state.labels = [];\n    const oldExportedIdentifiers = this.state.exportedIdentifiers;\n    this.state.exportedIdentifiers = [];\n    const oldInModule = this.inModule;\n    this.inModule = inModule;\n    const oldScope = this.scope;\n    const ScopeHandler = this.getScopeHandler();\n    this.scope = new ScopeHandler(this.raise.bind(this), this.inModule);\n    const oldProdParam = this.prodParam;\n    this.prodParam = new ProductionParameterHandler();\n    const oldClassScope = this.classScope;\n    this.classScope = new ClassScopeHandler(this.raise.bind(this));\n    const oldExpressionScope = this.expressionScope;\n    this.expressionScope = new ExpressionScopeHandler(this.raise.bind(this));\n    return () => {\n      this.state.labels = oldLabels;\n      this.state.exportedIdentifiers = oldExportedIdentifiers;\n      this.inModule = oldInModule;\n      this.scope = oldScope;\n      this.prodParam = oldProdParam;\n      this.classScope = oldClassScope;\n      this.expressionScope = oldExpressionScope;\n    };\n  }\n\n  enterInitialScopes() {\n    let paramFlags = PARAM;\n\n    if (this.hasPlugin(\"topLevelAwait\") && this.inModule) {\n      paramFlags |= PARAM_AWAIT;\n    }\n\n    this.scope.enter(SCOPE_PROGRAM);\n    this.prodParam.enter(paramFlags);\n  }\n\n}\nclass ExpressionErrors {\n  constructor() {\n    this.shorthandAssign = -1;\n    this.doubleProto = -1;\n  }\n\n}\n\nclass Node {\n  constructor(parser, pos, loc) {\n    this.type = void 0;\n    this.start = void 0;\n    this.end = void 0;\n    this.loc = void 0;\n    this.range = void 0;\n    this.leadingComments = void 0;\n    this.trailingComments = void 0;\n    this.innerComments = void 0;\n    this.extra = void 0;\n    this.type = \"\";\n    this.start = pos;\n    this.end = 0;\n    this.loc = new SourceLocation(loc);\n    if (parser != null && parser.options.ranges) this.range = [pos, 0];\n    if (parser != null && parser.filename) this.loc.filename = parser.filename;\n  }\n\n  __clone() {\n    const newNode = new Node();\n    const keys = Object.keys(this);\n\n    for (let i = 0, length = keys.length; i < length; i++) {\n      const key = keys[i];\n\n      if (key !== \"leadingComments\" && key !== \"trailingComments\" && key !== \"innerComments\") {\n        newNode[key] = this[key];\n      }\n    }\n\n    return newNode;\n  }\n\n}\n\nclass NodeUtils extends UtilParser {\n  startNode() {\n    return new Node(this, this.state.start, this.state.startLoc);\n  }\n\n  startNodeAt(pos, loc) {\n    return new Node(this, pos, loc);\n  }\n\n  startNodeAtNode(type) {\n    return this.startNodeAt(type.start, type.loc.start);\n  }\n\n  finishNode(node, type) {\n    return this.finishNodeAt(node, type, this.state.lastTokEnd, this.state.lastTokEndLoc);\n  }\n\n  finishNodeAt(node, type, pos, loc) {\n\n    node.type = type;\n    node.end = pos;\n    node.loc.end = loc;\n    if (this.options.ranges) node.range[1] = pos;\n    this.processComment(node);\n    return node;\n  }\n\n  resetStartLocation(node, start, startLoc) {\n    node.start = start;\n    node.loc.start = startLoc;\n    if (this.options.ranges) node.range[0] = start;\n  }\n\n  resetEndLocation(node, end = this.state.lastTokEnd, endLoc = this.state.lastTokEndLoc) {\n    node.end = end;\n    node.loc.end = endLoc;\n    if (this.options.ranges) node.range[1] = end;\n  }\n\n  resetStartLocationFromNode(node, locationNode) {\n    this.resetStartLocation(node, locationNode.start, locationNode.loc.start);\n  }\n\n}\n\nconst unwrapParenthesizedExpression = node => {\n  return node.type === \"ParenthesizedExpression\" ? unwrapParenthesizedExpression(node.expression) : node;\n};\n\nclass LValParser extends NodeUtils {\n  toAssignable(node, isLHS = false) {\n    var _node$extra, _node$extra3;\n\n    let parenthesized = undefined;\n\n    if (node.type === \"ParenthesizedExpression\" || (_node$extra = node.extra) != null && _node$extra.parenthesized) {\n      parenthesized = unwrapParenthesizedExpression(node);\n\n      if (isLHS) {\n        if (parenthesized.type === \"Identifier\") {\n          this.expressionScope.recordParenthesizedIdentifierError(node.start, ErrorMessages.InvalidParenthesizedAssignment);\n        } else if (parenthesized.type !== \"MemberExpression\") {\n          this.raise(node.start, ErrorMessages.InvalidParenthesizedAssignment);\n        }\n      } else {\n        this.raise(node.start, ErrorMessages.InvalidParenthesizedAssignment);\n      }\n    }\n\n    switch (node.type) {\n      case \"Identifier\":\n      case \"ObjectPattern\":\n      case \"ArrayPattern\":\n      case \"AssignmentPattern\":\n        break;\n\n      case \"ObjectExpression\":\n        node.type = \"ObjectPattern\";\n\n        for (let i = 0, length = node.properties.length, last = length - 1; i < length; i++) {\n          var _node$extra2;\n\n          const prop = node.properties[i];\n          const isLast = i === last;\n          this.toAssignableObjectExpressionProp(prop, isLast, isLHS);\n\n          if (isLast && prop.type === \"RestElement\" && (_node$extra2 = node.extra) != null && _node$extra2.trailingComma) {\n            this.raiseRestNotLast(node.extra.trailingComma);\n          }\n        }\n\n        break;\n\n      case \"ObjectProperty\":\n        this.toAssignable(node.value, isLHS);\n        break;\n\n      case \"SpreadElement\":\n        {\n          this.checkToRestConversion(node);\n          node.type = \"RestElement\";\n          const arg = node.argument;\n          this.toAssignable(arg, isLHS);\n          break;\n        }\n\n      case \"ArrayExpression\":\n        node.type = \"ArrayPattern\";\n        this.toAssignableList(node.elements, (_node$extra3 = node.extra) == null ? void 0 : _node$extra3.trailingComma, isLHS);\n        break;\n\n      case \"AssignmentExpression\":\n        if (node.operator !== \"=\") {\n          this.raise(node.left.end, ErrorMessages.MissingEqInAssignment);\n        }\n\n        node.type = \"AssignmentPattern\";\n        delete node.operator;\n        this.toAssignable(node.left, isLHS);\n        break;\n\n      case \"ParenthesizedExpression\":\n        this.toAssignable(parenthesized, isLHS);\n        break;\n    }\n\n    return node;\n  }\n\n  toAssignableObjectExpressionProp(prop, isLast, isLHS) {\n    if (prop.type === \"ObjectMethod\") {\n      const error = prop.kind === \"get\" || prop.kind === \"set\" ? ErrorMessages.PatternHasAccessor : ErrorMessages.PatternHasMethod;\n      this.raise(prop.key.start, error);\n    } else if (prop.type === \"SpreadElement\" && !isLast) {\n      this.raiseRestNotLast(prop.start);\n    } else {\n      this.toAssignable(prop, isLHS);\n    }\n  }\n\n  toAssignableList(exprList, trailingCommaPos, isLHS) {\n    let end = exprList.length;\n\n    if (end) {\n      const last = exprList[end - 1];\n\n      if ((last == null ? void 0 : last.type) === \"RestElement\") {\n        --end;\n      } else if ((last == null ? void 0 : last.type) === \"SpreadElement\") {\n        last.type = \"RestElement\";\n        let arg = last.argument;\n        this.toAssignable(arg, isLHS);\n        arg = unwrapParenthesizedExpression(arg);\n\n        if (arg.type !== \"Identifier\" && arg.type !== \"MemberExpression\" && arg.type !== \"ArrayPattern\" && arg.type !== \"ObjectPattern\") {\n          this.unexpected(arg.start);\n        }\n\n        if (trailingCommaPos) {\n          this.raiseTrailingCommaAfterRest(trailingCommaPos);\n        }\n\n        --end;\n      }\n    }\n\n    for (let i = 0; i < end; i++) {\n      const elt = exprList[i];\n\n      if (elt) {\n        this.toAssignable(elt, isLHS);\n\n        if (elt.type === \"RestElement\") {\n          this.raiseRestNotLast(elt.start);\n        }\n      }\n    }\n\n    return exprList;\n  }\n\n  toReferencedList(exprList, isParenthesizedExpr) {\n    return exprList;\n  }\n\n  toReferencedListDeep(exprList, isParenthesizedExpr) {\n    this.toReferencedList(exprList, isParenthesizedExpr);\n\n    for (const expr of exprList) {\n      if ((expr == null ? void 0 : expr.type) === \"ArrayExpression\") {\n        this.toReferencedListDeep(expr.elements);\n      }\n    }\n  }\n\n  parseSpread(refExpressionErrors, refNeedsArrowPos) {\n    const node = this.startNode();\n    this.next();\n    node.argument = this.parseMaybeAssignAllowIn(refExpressionErrors, undefined, refNeedsArrowPos);\n    return this.finishNode(node, \"SpreadElement\");\n  }\n\n  parseRestBinding() {\n    const node = this.startNode();\n    this.next();\n    node.argument = this.parseBindingAtom();\n    return this.finishNode(node, \"RestElement\");\n  }\n\n  parseBindingAtom() {\n    switch (this.state.type) {\n      case types.bracketL:\n        {\n          const node = this.startNode();\n          this.next();\n          node.elements = this.parseBindingList(types.bracketR, 93, true);\n          return this.finishNode(node, \"ArrayPattern\");\n        }\n\n      case types.braceL:\n        return this.parseObjectLike(types.braceR, true);\n    }\n\n    return this.parseIdentifier();\n  }\n\n  parseBindingList(close, closeCharCode, allowEmpty, allowModifiers) {\n    const elts = [];\n    let first = true;\n\n    while (!this.eat(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(types.comma);\n      }\n\n      if (allowEmpty && this.match(types.comma)) {\n        elts.push(null);\n      } else if (this.eat(close)) {\n        break;\n      } else if (this.match(types.ellipsis)) {\n        elts.push(this.parseAssignableListItemTypes(this.parseRestBinding()));\n        this.checkCommaAfterRest(closeCharCode);\n        this.expect(close);\n        break;\n      } else {\n        const decorators = [];\n\n        if (this.match(types.at) && this.hasPlugin(\"decorators\")) {\n          this.raise(this.state.start, ErrorMessages.UnsupportedParameterDecorator);\n        }\n\n        while (this.match(types.at)) {\n          decorators.push(this.parseDecorator());\n        }\n\n        elts.push(this.parseAssignableListItem(allowModifiers, decorators));\n      }\n    }\n\n    return elts;\n  }\n\n  parseAssignableListItem(allowModifiers, decorators) {\n    const left = this.parseMaybeDefault();\n    this.parseAssignableListItemTypes(left);\n    const elt = this.parseMaybeDefault(left.start, left.loc.start, left);\n\n    if (decorators.length) {\n      left.decorators = decorators;\n    }\n\n    return elt;\n  }\n\n  parseAssignableListItemTypes(param) {\n    return param;\n  }\n\n  parseMaybeDefault(startPos, startLoc, left) {\n    var _startLoc, _startPos, _left;\n\n    startLoc = (_startLoc = startLoc) != null ? _startLoc : this.state.startLoc;\n    startPos = (_startPos = startPos) != null ? _startPos : this.state.start;\n    left = (_left = left) != null ? _left : this.parseBindingAtom();\n    if (!this.eat(types.eq)) return left;\n    const node = this.startNodeAt(startPos, startLoc);\n    node.left = left;\n    node.right = this.parseMaybeAssignAllowIn();\n    return this.finishNode(node, \"AssignmentPattern\");\n  }\n\n  checkLVal(expr, contextDescription, bindingType = BIND_NONE, checkClashes, disallowLetBinding, strictModeChanged = false) {\n    switch (expr.type) {\n      case \"Identifier\":\n        {\n          const {\n            name\n          } = expr;\n\n          if (this.state.strict && (strictModeChanged ? isStrictBindReservedWord(name, this.inModule) : isStrictBindOnlyReservedWord(name))) {\n            this.raise(expr.start, bindingType === BIND_NONE ? ErrorMessages.StrictEvalArguments : ErrorMessages.StrictEvalArgumentsBinding, name);\n          }\n\n          if (checkClashes) {\n            if (checkClashes.has(name)) {\n              this.raise(expr.start, ErrorMessages.ParamDupe);\n            } else {\n              checkClashes.add(name);\n            }\n          }\n\n          if (disallowLetBinding && name === \"let\") {\n            this.raise(expr.start, ErrorMessages.LetInLexicalBinding);\n          }\n\n          if (!(bindingType & BIND_NONE)) {\n            this.scope.declareName(name, bindingType, expr.start);\n          }\n\n          break;\n        }\n\n      case \"MemberExpression\":\n        if (bindingType !== BIND_NONE) {\n          this.raise(expr.start, ErrorMessages.InvalidPropertyBindingPattern);\n        }\n\n        break;\n\n      case \"ObjectPattern\":\n        for (let prop of expr.properties) {\n          if (this.isObjectProperty(prop)) prop = prop.value;else if (this.isObjectMethod(prop)) continue;\n          this.checkLVal(prop, \"object destructuring pattern\", bindingType, checkClashes, disallowLetBinding);\n        }\n\n        break;\n\n      case \"ArrayPattern\":\n        for (const elem of expr.elements) {\n          if (elem) {\n            this.checkLVal(elem, \"array destructuring pattern\", bindingType, checkClashes, disallowLetBinding);\n          }\n        }\n\n        break;\n\n      case \"AssignmentPattern\":\n        this.checkLVal(expr.left, \"assignment pattern\", bindingType, checkClashes);\n        break;\n\n      case \"RestElement\":\n        this.checkLVal(expr.argument, \"rest element\", bindingType, checkClashes);\n        break;\n\n      case \"ParenthesizedExpression\":\n        this.checkLVal(expr.expression, \"parenthesized expression\", bindingType, checkClashes);\n        break;\n\n      default:\n        {\n          this.raise(expr.start, bindingType === BIND_NONE ? ErrorMessages.InvalidLhs : ErrorMessages.InvalidLhsBinding, contextDescription);\n        }\n    }\n  }\n\n  checkToRestConversion(node) {\n    if (node.argument.type !== \"Identifier\" && node.argument.type !== \"MemberExpression\") {\n      this.raise(node.argument.start, ErrorMessages.InvalidRestAssignmentPattern);\n    }\n  }\n\n  checkCommaAfterRest(close) {\n    if (this.match(types.comma)) {\n      if (this.lookaheadCharCode() === close) {\n        this.raiseTrailingCommaAfterRest(this.state.start);\n      } else {\n        this.raiseRestNotLast(this.state.start);\n      }\n    }\n  }\n\n  raiseRestNotLast(pos) {\n    throw this.raise(pos, ErrorMessages.ElementAfterRest);\n  }\n\n  raiseTrailingCommaAfterRest(pos) {\n    this.raise(pos, ErrorMessages.RestTrailingComma);\n  }\n\n}\n\nclass ExpressionParser extends LValParser {\n  checkProto(prop, isRecord, protoRef, refExpressionErrors) {\n    if (prop.type === \"SpreadElement\" || this.isObjectMethod(prop) || prop.computed || prop.shorthand) {\n      return;\n    }\n\n    const key = prop.key;\n    const name = key.type === \"Identifier\" ? key.name : key.value;\n\n    if (name === \"__proto__\") {\n      if (isRecord) {\n        this.raise(key.start, ErrorMessages.RecordNoProto);\n        return;\n      }\n\n      if (protoRef.used) {\n        if (refExpressionErrors) {\n          if (refExpressionErrors.doubleProto === -1) {\n            refExpressionErrors.doubleProto = key.start;\n          }\n        } else {\n          this.raise(key.start, ErrorMessages.DuplicateProto);\n        }\n      }\n\n      protoRef.used = true;\n    }\n  }\n\n  shouldExitDescending(expr, potentialArrowAt) {\n    return expr.type === \"ArrowFunctionExpression\" && expr.start === potentialArrowAt;\n  }\n\n  getExpression() {\n    let paramFlags = PARAM;\n\n    if (this.hasPlugin(\"topLevelAwait\") && this.inModule) {\n      paramFlags |= PARAM_AWAIT;\n    }\n\n    this.scope.enter(SCOPE_PROGRAM);\n    this.prodParam.enter(paramFlags);\n    this.nextToken();\n    const expr = this.parseExpression();\n\n    if (!this.match(types.eof)) {\n      this.unexpected();\n    }\n\n    expr.comments = this.state.comments;\n    expr.errors = this.state.errors;\n\n    if (this.options.tokens) {\n      expr.tokens = this.tokens;\n    }\n\n    return expr;\n  }\n\n  parseExpression(disallowIn, refExpressionErrors) {\n    if (disallowIn) {\n      return this.disallowInAnd(() => this.parseExpressionBase(refExpressionErrors));\n    }\n\n    return this.allowInAnd(() => this.parseExpressionBase(refExpressionErrors));\n  }\n\n  parseExpressionBase(refExpressionErrors) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const expr = this.parseMaybeAssign(refExpressionErrors);\n\n    if (this.match(types.comma)) {\n      const node = this.startNodeAt(startPos, startLoc);\n      node.expressions = [expr];\n\n      while (this.eat(types.comma)) {\n        node.expressions.push(this.parseMaybeAssign(refExpressionErrors));\n      }\n\n      this.toReferencedList(node.expressions);\n      return this.finishNode(node, \"SequenceExpression\");\n    }\n\n    return expr;\n  }\n\n  parseMaybeAssignDisallowIn(refExpressionErrors, afterLeftParse, refNeedsArrowPos) {\n    return this.disallowInAnd(() => this.parseMaybeAssign(refExpressionErrors, afterLeftParse, refNeedsArrowPos));\n  }\n\n  parseMaybeAssignAllowIn(refExpressionErrors, afterLeftParse, refNeedsArrowPos) {\n    return this.allowInAnd(() => this.parseMaybeAssign(refExpressionErrors, afterLeftParse, refNeedsArrowPos));\n  }\n\n  parseMaybeAssign(refExpressionErrors, afterLeftParse, refNeedsArrowPos) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n\n    if (this.isContextual(\"yield\")) {\n      if (this.prodParam.hasYield) {\n        this.state.exprAllowed = true;\n        let left = this.parseYield();\n\n        if (afterLeftParse) {\n          left = afterLeftParse.call(this, left, startPos, startLoc);\n        }\n\n        return left;\n      }\n    }\n\n    let ownExpressionErrors;\n\n    if (refExpressionErrors) {\n      ownExpressionErrors = false;\n    } else {\n      refExpressionErrors = new ExpressionErrors();\n      ownExpressionErrors = true;\n    }\n\n    if (this.match(types.parenL) || this.match(types.name)) {\n      this.state.potentialArrowAt = this.state.start;\n    }\n\n    let left = this.parseMaybeConditional(refExpressionErrors, refNeedsArrowPos);\n\n    if (afterLeftParse) {\n      left = afterLeftParse.call(this, left, startPos, startLoc);\n    }\n\n    if (this.state.type.isAssign) {\n      const node = this.startNodeAt(startPos, startLoc);\n      const operator = this.state.value;\n      node.operator = operator;\n\n      if (this.match(types.eq)) {\n        node.left = this.toAssignable(left, true);\n        refExpressionErrors.doubleProto = -1;\n      } else {\n        node.left = left;\n      }\n\n      if (refExpressionErrors.shorthandAssign >= node.left.start) {\n        refExpressionErrors.shorthandAssign = -1;\n      }\n\n      this.checkLVal(left, \"assignment expression\");\n      this.next();\n      node.right = this.parseMaybeAssign();\n      return this.finishNode(node, \"AssignmentExpression\");\n    } else if (ownExpressionErrors) {\n      this.checkExpressionErrors(refExpressionErrors, true);\n    }\n\n    return left;\n  }\n\n  parseMaybeConditional(refExpressionErrors, refNeedsArrowPos) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const potentialArrowAt = this.state.potentialArrowAt;\n    const expr = this.parseExprOps(refExpressionErrors);\n\n    if (this.shouldExitDescending(expr, potentialArrowAt)) {\n      return expr;\n    }\n\n    return this.parseConditional(expr, startPos, startLoc, refNeedsArrowPos);\n  }\n\n  parseConditional(expr, startPos, startLoc, refNeedsArrowPos) {\n    if (this.eat(types.question)) {\n      const node = this.startNodeAt(startPos, startLoc);\n      node.test = expr;\n      node.consequent = this.parseMaybeAssignAllowIn();\n      this.expect(types.colon);\n      node.alternate = this.parseMaybeAssign();\n      return this.finishNode(node, \"ConditionalExpression\");\n    }\n\n    return expr;\n  }\n\n  parseExprOps(refExpressionErrors) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const potentialArrowAt = this.state.potentialArrowAt;\n    const expr = this.parseMaybeUnary(refExpressionErrors);\n\n    if (this.shouldExitDescending(expr, potentialArrowAt)) {\n      return expr;\n    }\n\n    return this.parseExprOp(expr, startPos, startLoc, -1);\n  }\n\n  parseExprOp(left, leftStartPos, leftStartLoc, minPrec) {\n    let prec = this.state.type.binop;\n\n    if (prec != null && (this.prodParam.hasIn || !this.match(types._in))) {\n      if (prec > minPrec) {\n        const op = this.state.type;\n\n        if (op === types.pipeline) {\n          this.expectPlugin(\"pipelineOperator\");\n\n          if (this.state.inFSharpPipelineDirectBody) {\n            return left;\n          }\n\n          this.state.inPipeline = true;\n          this.checkPipelineAtInfixOperator(left, leftStartPos);\n        }\n\n        const node = this.startNodeAt(leftStartPos, leftStartLoc);\n        node.left = left;\n        node.operator = this.state.value;\n        const logical = op === types.logicalOR || op === types.logicalAND;\n        const coalesce = op === types.nullishCoalescing;\n\n        if (coalesce) {\n          prec = types.logicalAND.binop;\n        }\n\n        this.next();\n\n        if (op === types.pipeline && this.getPluginOption(\"pipelineOperator\", \"proposal\") === \"minimal\") {\n          if (this.match(types.name) && this.state.value === \"await\" && this.prodParam.hasAwait) {\n            throw this.raise(this.state.start, ErrorMessages.UnexpectedAwaitAfterPipelineBody);\n          }\n        }\n\n        node.right = this.parseExprOpRightExpr(op, prec);\n        this.finishNode(node, logical || coalesce ? \"LogicalExpression\" : \"BinaryExpression\");\n        const nextOp = this.state.type;\n\n        if (coalesce && (nextOp === types.logicalOR || nextOp === types.logicalAND) || logical && nextOp === types.nullishCoalescing) {\n          throw this.raise(this.state.start, ErrorMessages.MixingCoalesceWithLogical);\n        }\n\n        return this.parseExprOp(node, leftStartPos, leftStartLoc, minPrec);\n      }\n    }\n\n    return left;\n  }\n\n  parseExprOpRightExpr(op, prec) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n\n    switch (op) {\n      case types.pipeline:\n        switch (this.getPluginOption(\"pipelineOperator\", \"proposal\")) {\n          case \"smart\":\n            return this.withTopicPermittingContext(() => {\n              return this.parseSmartPipelineBody(this.parseExprOpBaseRightExpr(op, prec), startPos, startLoc);\n            });\n\n          case \"fsharp\":\n            return this.withSoloAwaitPermittingContext(() => {\n              return this.parseFSharpPipelineBody(prec);\n            });\n        }\n\n      default:\n        return this.parseExprOpBaseRightExpr(op, prec);\n    }\n  }\n\n  parseExprOpBaseRightExpr(op, prec) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    return this.parseExprOp(this.parseMaybeUnary(), startPos, startLoc, op.rightAssociative ? prec - 1 : prec);\n  }\n\n  checkExponentialAfterUnary(node) {\n    if (this.match(types.exponent)) {\n      this.raise(node.argument.start, ErrorMessages.UnexpectedTokenUnaryExponentiation);\n    }\n  }\n\n  parseMaybeUnary(refExpressionErrors, sawUnary) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const isAwait = this.isContextual(\"await\");\n\n    if (isAwait && this.isAwaitAllowed()) {\n      this.next();\n      const expr = this.parseAwait(startPos, startLoc);\n      if (!sawUnary) this.checkExponentialAfterUnary(expr);\n      return expr;\n    }\n\n    if (this.isContextual(\"module\") && this.lookaheadCharCode() === 123 && !this.hasFollowingLineBreak()) {\n      return this.parseModuleExpression();\n    }\n\n    const update = this.match(types.incDec);\n    const node = this.startNode();\n\n    if (this.state.type.prefix) {\n      node.operator = this.state.value;\n      node.prefix = true;\n\n      if (this.match(types._throw)) {\n        this.expectPlugin(\"throwExpressions\");\n      }\n\n      const isDelete = this.match(types._delete);\n      this.next();\n      node.argument = this.parseMaybeUnary(null, true);\n      this.checkExpressionErrors(refExpressionErrors, true);\n\n      if (this.state.strict && isDelete) {\n        const arg = node.argument;\n\n        if (arg.type === \"Identifier\") {\n          this.raise(node.start, ErrorMessages.StrictDelete);\n        } else if (this.hasPropertyAsPrivateName(arg)) {\n          this.raise(node.start, ErrorMessages.DeletePrivateField);\n        }\n      }\n\n      if (!update) {\n        if (!sawUnary) this.checkExponentialAfterUnary(node);\n        return this.finishNode(node, \"UnaryExpression\");\n      }\n    }\n\n    const expr = this.parseUpdate(node, update, refExpressionErrors);\n\n    if (isAwait) {\n      const startsExpr = this.hasPlugin(\"v8intrinsic\") ? this.state.type.startsExpr : this.state.type.startsExpr && !this.match(types.modulo);\n\n      if (startsExpr && !this.isAmbiguousAwait()) {\n        this.raiseOverwrite(startPos, this.hasPlugin(\"topLevelAwait\") ? ErrorMessages.AwaitNotInAsyncContext : ErrorMessages.AwaitNotInAsyncFunction);\n        return this.parseAwait(startPos, startLoc);\n      }\n    }\n\n    return expr;\n  }\n\n  parseUpdate(node, update, refExpressionErrors) {\n    if (update) {\n      this.checkLVal(node.argument, \"prefix operation\");\n      return this.finishNode(node, \"UpdateExpression\");\n    }\n\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    let expr = this.parseExprSubscripts(refExpressionErrors);\n    if (this.checkExpressionErrors(refExpressionErrors, false)) return expr;\n\n    while (this.state.type.postfix && !this.canInsertSemicolon()) {\n      const node = this.startNodeAt(startPos, startLoc);\n      node.operator = this.state.value;\n      node.prefix = false;\n      node.argument = expr;\n      this.checkLVal(expr, \"postfix operation\");\n      this.next();\n      expr = this.finishNode(node, \"UpdateExpression\");\n    }\n\n    return expr;\n  }\n\n  parseExprSubscripts(refExpressionErrors) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const potentialArrowAt = this.state.potentialArrowAt;\n    const expr = this.parseExprAtom(refExpressionErrors);\n\n    if (this.shouldExitDescending(expr, potentialArrowAt)) {\n      return expr;\n    }\n\n    return this.parseSubscripts(expr, startPos, startLoc);\n  }\n\n  parseSubscripts(base, startPos, startLoc, noCalls) {\n    const state = {\n      optionalChainMember: false,\n      maybeAsyncArrow: this.atPossibleAsyncArrow(base),\n      stop: false\n    };\n\n    do {\n      base = this.parseSubscript(base, startPos, startLoc, noCalls, state);\n      state.maybeAsyncArrow = false;\n    } while (!state.stop);\n\n    return base;\n  }\n\n  parseSubscript(base, startPos, startLoc, noCalls, state) {\n    if (!noCalls && this.eat(types.doubleColon)) {\n      return this.parseBind(base, startPos, startLoc, noCalls, state);\n    } else if (this.match(types.backQuote)) {\n      return this.parseTaggedTemplateExpression(base, startPos, startLoc, state);\n    }\n\n    let optional = false;\n\n    if (this.match(types.questionDot)) {\n      if (noCalls && this.lookaheadCharCode() === 40) {\n        state.stop = true;\n        return base;\n      }\n\n      state.optionalChainMember = optional = true;\n      this.next();\n    }\n\n    if (!noCalls && this.match(types.parenL)) {\n      return this.parseCoverCallAndAsyncArrowHead(base, startPos, startLoc, state, optional);\n    } else if (optional || this.match(types.bracketL) || this.eat(types.dot)) {\n      return this.parseMember(base, startPos, startLoc, state, optional);\n    } else {\n      state.stop = true;\n      return base;\n    }\n  }\n\n  parseMember(base, startPos, startLoc, state, optional) {\n    const node = this.startNodeAt(startPos, startLoc);\n    const computed = this.eat(types.bracketL);\n    node.object = base;\n    node.computed = computed;\n    const property = computed ? this.parseExpression() : this.parseMaybePrivateName(true);\n\n    if (this.isPrivateName(property)) {\n      if (node.object.type === \"Super\") {\n        this.raise(startPos, ErrorMessages.SuperPrivateField);\n      }\n\n      this.classScope.usePrivateName(this.getPrivateNameSV(property), property.start);\n    }\n\n    node.property = property;\n\n    if (computed) {\n      this.expect(types.bracketR);\n    }\n\n    if (state.optionalChainMember) {\n      node.optional = optional;\n      return this.finishNode(node, \"OptionalMemberExpression\");\n    } else {\n      return this.finishNode(node, \"MemberExpression\");\n    }\n  }\n\n  parseBind(base, startPos, startLoc, noCalls, state) {\n    const node = this.startNodeAt(startPos, startLoc);\n    node.object = base;\n    node.callee = this.parseNoCallExpr();\n    state.stop = true;\n    return this.parseSubscripts(this.finishNode(node, \"BindExpression\"), startPos, startLoc, noCalls);\n  }\n\n  parseCoverCallAndAsyncArrowHead(base, startPos, startLoc, state, optional) {\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n    this.state.maybeInArrowParameters = true;\n    this.next();\n    let node = this.startNodeAt(startPos, startLoc);\n    node.callee = base;\n\n    if (state.maybeAsyncArrow) {\n      this.expressionScope.enter(newAsyncArrowScope());\n    }\n\n    if (state.optionalChainMember) {\n      node.optional = optional;\n    }\n\n    if (optional) {\n      node.arguments = this.parseCallExpressionArguments(types.parenR, false);\n    } else {\n      node.arguments = this.parseCallExpressionArguments(types.parenR, state.maybeAsyncArrow, base.type === \"Import\", base.type !== \"Super\", node);\n    }\n\n    this.finishCallExpression(node, state.optionalChainMember);\n\n    if (state.maybeAsyncArrow && this.shouldParseAsyncArrow() && !optional) {\n      state.stop = true;\n      this.expressionScope.validateAsPattern();\n      this.expressionScope.exit();\n      node = this.parseAsyncArrowFromCallExpression(this.startNodeAt(startPos, startLoc), node);\n    } else {\n      if (state.maybeAsyncArrow) {\n        this.expressionScope.exit();\n      }\n\n      this.toReferencedArguments(node);\n    }\n\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n    return node;\n  }\n\n  toReferencedArguments(node, isParenthesizedExpr) {\n    this.toReferencedListDeep(node.arguments, isParenthesizedExpr);\n  }\n\n  parseTaggedTemplateExpression(base, startPos, startLoc, state) {\n    const node = this.startNodeAt(startPos, startLoc);\n    node.tag = base;\n    node.quasi = this.parseTemplate(true);\n\n    if (state.optionalChainMember) {\n      this.raise(startPos, ErrorMessages.OptionalChainingNoTemplate);\n    }\n\n    return this.finishNode(node, \"TaggedTemplateExpression\");\n  }\n\n  atPossibleAsyncArrow(base) {\n    return base.type === \"Identifier\" && base.name === \"async\" && this.state.lastTokEnd === base.end && !this.canInsertSemicolon() && base.end - base.start === 5 && base.start === this.state.potentialArrowAt;\n  }\n\n  finishCallExpression(node, optional) {\n    if (node.callee.type === \"Import\") {\n      if (node.arguments.length === 2) {\n        if (!this.hasPlugin(\"moduleAttributes\")) {\n          this.expectPlugin(\"importAssertions\");\n        }\n      }\n\n      if (node.arguments.length === 0 || node.arguments.length > 2) {\n        this.raise(node.start, ErrorMessages.ImportCallArity, this.hasPlugin(\"importAssertions\") || this.hasPlugin(\"moduleAttributes\") ? \"one or two arguments\" : \"one argument\");\n      } else {\n        for (const arg of node.arguments) {\n          if (arg.type === \"SpreadElement\") {\n            this.raise(arg.start, ErrorMessages.ImportCallSpreadArgument);\n          }\n        }\n      }\n    }\n\n    return this.finishNode(node, optional ? \"OptionalCallExpression\" : \"CallExpression\");\n  }\n\n  parseCallExpressionArguments(close, possibleAsyncArrow, dynamicImport, allowPlaceholder, nodeForExtra) {\n    const elts = [];\n    let first = true;\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = false;\n\n    while (!this.eat(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(types.comma);\n\n        if (this.match(close)) {\n          if (dynamicImport && !this.hasPlugin(\"importAssertions\") && !this.hasPlugin(\"moduleAttributes\")) {\n            this.raise(this.state.lastTokStart, ErrorMessages.ImportCallArgumentTrailingComma);\n          }\n\n          if (nodeForExtra) {\n            this.addExtra(nodeForExtra, \"trailingComma\", this.state.lastTokStart);\n          }\n\n          this.next();\n          break;\n        }\n      }\n\n      elts.push(this.parseExprListItem(false, possibleAsyncArrow ? new ExpressionErrors() : undefined, possibleAsyncArrow ? {\n        start: 0\n      } : undefined, allowPlaceholder));\n    }\n\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n    return elts;\n  }\n\n  shouldParseAsyncArrow() {\n    return this.match(types.arrow) && !this.canInsertSemicolon();\n  }\n\n  parseAsyncArrowFromCallExpression(node, call) {\n    var _call$extra;\n\n    this.expect(types.arrow);\n    this.parseArrowExpression(node, call.arguments, true, (_call$extra = call.extra) == null ? void 0 : _call$extra.trailingComma);\n    return node;\n  }\n\n  parseNoCallExpr() {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    return this.parseSubscripts(this.parseExprAtom(), startPos, startLoc, true);\n  }\n\n  parseExprAtom(refExpressionErrors) {\n    if (this.state.type === types.slash) this.readRegexp();\n    const canBeArrow = this.state.potentialArrowAt === this.state.start;\n    let node;\n\n    switch (this.state.type) {\n      case types._super:\n        return this.parseSuper();\n\n      case types._import:\n        node = this.startNode();\n        this.next();\n\n        if (this.match(types.dot)) {\n          return this.parseImportMetaProperty(node);\n        }\n\n        if (!this.match(types.parenL)) {\n          this.raise(this.state.lastTokStart, ErrorMessages.UnsupportedImport);\n        }\n\n        return this.finishNode(node, \"Import\");\n\n      case types._this:\n        node = this.startNode();\n        this.next();\n        return this.finishNode(node, \"ThisExpression\");\n\n      case types.name:\n        {\n          const containsEsc = this.state.containsEsc;\n          const id = this.parseIdentifier();\n\n          if (!containsEsc && id.name === \"async\" && !this.canInsertSemicolon()) {\n            if (this.match(types._function)) {\n              const last = this.state.context.length - 1;\n\n              if (this.state.context[last] !== types$1.functionStatement) {\n                throw new Error(\"Internal error\");\n              }\n\n              this.state.context[last] = types$1.functionExpression;\n              this.next();\n              return this.parseFunction(this.startNodeAtNode(id), undefined, true);\n            } else if (this.match(types.name)) {\n              return this.parseAsyncArrowUnaryFunction(id);\n            }\n          }\n\n          if (canBeArrow && this.match(types.arrow) && !this.canInsertSemicolon()) {\n            this.next();\n            return this.parseArrowExpression(this.startNodeAtNode(id), [id], false);\n          }\n\n          return id;\n        }\n\n      case types._do:\n        {\n          return this.parseDo();\n        }\n\n      case types.regexp:\n        {\n          const value = this.state.value;\n          node = this.parseLiteral(value.value, \"RegExpLiteral\");\n          node.pattern = value.pattern;\n          node.flags = value.flags;\n          return node;\n        }\n\n      case types.num:\n        return this.parseLiteral(this.state.value, \"NumericLiteral\");\n\n      case types.bigint:\n        return this.parseLiteral(this.state.value, \"BigIntLiteral\");\n\n      case types.decimal:\n        return this.parseLiteral(this.state.value, \"DecimalLiteral\");\n\n      case types.string:\n        return this.parseLiteral(this.state.value, \"StringLiteral\");\n\n      case types._null:\n        node = this.startNode();\n        this.next();\n        return this.finishNode(node, \"NullLiteral\");\n\n      case types._true:\n      case types._false:\n        return this.parseBooleanLiteral();\n\n      case types.parenL:\n        return this.parseParenAndDistinguishExpression(canBeArrow);\n\n      case types.bracketBarL:\n      case types.bracketHashL:\n        {\n          return this.parseArrayLike(this.state.type === types.bracketBarL ? types.bracketBarR : types.bracketR, false, true, refExpressionErrors);\n        }\n\n      case types.bracketL:\n        {\n          return this.parseArrayLike(types.bracketR, true, false, refExpressionErrors);\n        }\n\n      case types.braceBarL:\n      case types.braceHashL:\n        {\n          return this.parseObjectLike(this.state.type === types.braceBarL ? types.braceBarR : types.braceR, false, true, refExpressionErrors);\n        }\n\n      case types.braceL:\n        {\n          return this.parseObjectLike(types.braceR, false, false, refExpressionErrors);\n        }\n\n      case types._function:\n        return this.parseFunctionOrFunctionSent();\n\n      case types.at:\n        this.parseDecorators();\n\n      case types._class:\n        node = this.startNode();\n        this.takeDecorators(node);\n        return this.parseClass(node, false);\n\n      case types._new:\n        return this.parseNewOrNewTarget();\n\n      case types.backQuote:\n        return this.parseTemplate(false);\n\n      case types.doubleColon:\n        {\n          node = this.startNode();\n          this.next();\n          node.object = null;\n          const callee = node.callee = this.parseNoCallExpr();\n\n          if (callee.type === \"MemberExpression\") {\n            return this.finishNode(node, \"BindExpression\");\n          } else {\n            throw this.raise(callee.start, ErrorMessages.UnsupportedBind);\n          }\n        }\n\n      case types.hash:\n        {\n          if (this.state.inPipeline) {\n            node = this.startNode();\n\n            if (this.getPluginOption(\"pipelineOperator\", \"proposal\") !== \"smart\") {\n              this.raise(node.start, ErrorMessages.PrimaryTopicRequiresSmartPipeline);\n            }\n\n            this.next();\n\n            if (!this.primaryTopicReferenceIsAllowedInCurrentTopicContext()) {\n              this.raise(node.start, ErrorMessages.PrimaryTopicNotAllowed);\n            }\n\n            this.registerTopicReference();\n            return this.finishNode(node, \"PipelinePrimaryTopicReference\");\n          }\n\n          const nextCh = this.input.codePointAt(this.state.end);\n\n          if (isIdentifierStart(nextCh) || nextCh === 92) {\n            const start = this.state.start;\n            node = this.parseMaybePrivateName(true);\n\n            if (this.match(types._in)) {\n              this.expectPlugin(\"privateIn\");\n              this.classScope.usePrivateName(this.getPrivateNameSV(node), node.start);\n            } else if (this.hasPlugin(\"privateIn\")) {\n              this.raise(this.state.start, ErrorMessages.PrivateInExpectedIn, this.getPrivateNameSV(node));\n            } else {\n              throw this.unexpected(start);\n            }\n\n            return node;\n          }\n        }\n\n      case types.relational:\n        {\n          if (this.state.value === \"<\") {\n            const lookaheadCh = this.input.codePointAt(this.nextTokenStart());\n\n            if (isIdentifierStart(lookaheadCh) || lookaheadCh === 62) {\n                this.expectOnePlugin([\"jsx\", \"flow\", \"typescript\"]);\n              }\n          }\n        }\n\n      default:\n        throw this.unexpected();\n    }\n  }\n\n  parseAsyncArrowUnaryFunction(id) {\n    const node = this.startNodeAtNode(id);\n    this.prodParam.enter(functionFlags(true, this.prodParam.hasYield));\n    const params = [this.parseIdentifier()];\n    this.prodParam.exit();\n\n    if (this.hasPrecedingLineBreak()) {\n      this.raise(this.state.pos, ErrorMessages.LineTerminatorBeforeArrow);\n    }\n\n    this.expect(types.arrow);\n    this.parseArrowExpression(node, params, true);\n    return node;\n  }\n\n  parseDo() {\n    this.expectPlugin(\"doExpressions\");\n    const node = this.startNode();\n    this.next();\n    const oldLabels = this.state.labels;\n    this.state.labels = [];\n    node.body = this.parseBlock();\n    this.state.labels = oldLabels;\n    return this.finishNode(node, \"DoExpression\");\n  }\n\n  parseSuper() {\n    const node = this.startNode();\n    this.next();\n\n    if (this.match(types.parenL) && !this.scope.allowDirectSuper && !this.options.allowSuperOutsideMethod) {\n      this.raise(node.start, ErrorMessages.SuperNotAllowed);\n    } else if (!this.scope.allowSuper && !this.options.allowSuperOutsideMethod) {\n      this.raise(node.start, ErrorMessages.UnexpectedSuper);\n    }\n\n    if (!this.match(types.parenL) && !this.match(types.bracketL) && !this.match(types.dot)) {\n      this.raise(node.start, ErrorMessages.UnsupportedSuper);\n    }\n\n    return this.finishNode(node, \"Super\");\n  }\n\n  parseBooleanLiteral() {\n    const node = this.startNode();\n    node.value = this.match(types._true);\n    this.next();\n    return this.finishNode(node, \"BooleanLiteral\");\n  }\n\n  parseMaybePrivateName(isPrivateNameAllowed) {\n    const isPrivate = this.match(types.hash);\n\n    if (isPrivate) {\n      this.expectOnePlugin([\"classPrivateProperties\", \"classPrivateMethods\"]);\n\n      if (!isPrivateNameAllowed) {\n        this.raise(this.state.pos, ErrorMessages.UnexpectedPrivateField);\n      }\n\n      const node = this.startNode();\n      this.next();\n      this.assertNoSpace(\"Unexpected space between # and identifier\");\n      node.id = this.parseIdentifier(true);\n      return this.finishNode(node, \"PrivateName\");\n    } else {\n      return this.parseIdentifier(true);\n    }\n  }\n\n  parseFunctionOrFunctionSent() {\n    const node = this.startNode();\n    this.next();\n\n    if (this.prodParam.hasYield && this.match(types.dot)) {\n      const meta = this.createIdentifier(this.startNodeAtNode(node), \"function\");\n      this.next();\n      return this.parseMetaProperty(node, meta, \"sent\");\n    }\n\n    return this.parseFunction(node);\n  }\n\n  parseMetaProperty(node, meta, propertyName) {\n    node.meta = meta;\n\n    if (meta.name === \"function\" && propertyName === \"sent\") {\n      if (this.isContextual(propertyName)) {\n        this.expectPlugin(\"functionSent\");\n      } else if (!this.hasPlugin(\"functionSent\")) {\n        this.unexpected();\n      }\n    }\n\n    const containsEsc = this.state.containsEsc;\n    node.property = this.parseIdentifier(true);\n\n    if (node.property.name !== propertyName || containsEsc) {\n      this.raise(node.property.start, ErrorMessages.UnsupportedMetaProperty, meta.name, propertyName);\n    }\n\n    return this.finishNode(node, \"MetaProperty\");\n  }\n\n  parseImportMetaProperty(node) {\n    const id = this.createIdentifier(this.startNodeAtNode(node), \"import\");\n    this.next();\n\n    if (this.isContextual(\"meta\")) {\n      if (!this.inModule) {\n        this.raiseWithData(id.start, {\n          code: \"BABEL_PARSER_SOURCETYPE_MODULE_REQUIRED\"\n        }, ErrorMessages.ImportMetaOutsideModule);\n      }\n\n      this.sawUnambiguousESM = true;\n    }\n\n    return this.parseMetaProperty(node, id, \"meta\");\n  }\n\n  parseLiteral(value, type, startPos, startLoc) {\n    startPos = startPos || this.state.start;\n    startLoc = startLoc || this.state.startLoc;\n    const node = this.startNodeAt(startPos, startLoc);\n    this.addExtra(node, \"rawValue\", value);\n    this.addExtra(node, \"raw\", this.input.slice(startPos, this.state.end));\n    node.value = value;\n    this.next();\n    return this.finishNode(node, type);\n  }\n\n  parseParenAndDistinguishExpression(canBeArrow) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    let val;\n    this.next();\n    this.expressionScope.enter(newArrowHeadScope());\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.maybeInArrowParameters = true;\n    this.state.inFSharpPipelineDirectBody = false;\n    const innerStartPos = this.state.start;\n    const innerStartLoc = this.state.startLoc;\n    const exprList = [];\n    const refExpressionErrors = new ExpressionErrors();\n    const refNeedsArrowPos = {\n      start: 0\n    };\n    let first = true;\n    let spreadStart;\n    let optionalCommaStart;\n\n    while (!this.match(types.parenR)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(types.comma, refNeedsArrowPos.start || null);\n\n        if (this.match(types.parenR)) {\n          optionalCommaStart = this.state.start;\n          break;\n        }\n      }\n\n      if (this.match(types.ellipsis)) {\n        const spreadNodeStartPos = this.state.start;\n        const spreadNodeStartLoc = this.state.startLoc;\n        spreadStart = this.state.start;\n        exprList.push(this.parseParenItem(this.parseRestBinding(), spreadNodeStartPos, spreadNodeStartLoc));\n        this.checkCommaAfterRest(41);\n        break;\n      } else {\n        exprList.push(this.parseMaybeAssignAllowIn(refExpressionErrors, this.parseParenItem, refNeedsArrowPos));\n      }\n    }\n\n    const innerEndPos = this.state.lastTokEnd;\n    const innerEndLoc = this.state.lastTokEndLoc;\n    this.expect(types.parenR);\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n    let arrowNode = this.startNodeAt(startPos, startLoc);\n\n    if (canBeArrow && this.shouldParseArrow() && (arrowNode = this.parseArrow(arrowNode))) {\n      this.expressionScope.validateAsPattern();\n      this.expressionScope.exit();\n      this.parseArrowExpression(arrowNode, exprList, false);\n      return arrowNode;\n    }\n\n    this.expressionScope.exit();\n\n    if (!exprList.length) {\n      this.unexpected(this.state.lastTokStart);\n    }\n\n    if (optionalCommaStart) this.unexpected(optionalCommaStart);\n    if (spreadStart) this.unexpected(spreadStart);\n    this.checkExpressionErrors(refExpressionErrors, true);\n    if (refNeedsArrowPos.start) this.unexpected(refNeedsArrowPos.start);\n    this.toReferencedListDeep(exprList, true);\n\n    if (exprList.length > 1) {\n      val = this.startNodeAt(innerStartPos, innerStartLoc);\n      val.expressions = exprList;\n      this.finishNodeAt(val, \"SequenceExpression\", innerEndPos, innerEndLoc);\n    } else {\n      val = exprList[0];\n    }\n\n    if (!this.options.createParenthesizedExpressions) {\n      this.addExtra(val, \"parenthesized\", true);\n      this.addExtra(val, \"parenStart\", startPos);\n      return val;\n    }\n\n    const parenExpression = this.startNodeAt(startPos, startLoc);\n    parenExpression.expression = val;\n    this.finishNode(parenExpression, \"ParenthesizedExpression\");\n    return parenExpression;\n  }\n\n  shouldParseArrow() {\n    return !this.canInsertSemicolon();\n  }\n\n  parseArrow(node) {\n    if (this.eat(types.arrow)) {\n      return node;\n    }\n  }\n\n  parseParenItem(node, startPos, startLoc) {\n    return node;\n  }\n\n  parseNewOrNewTarget() {\n    const node = this.startNode();\n    this.next();\n\n    if (this.match(types.dot)) {\n      const meta = this.createIdentifier(this.startNodeAtNode(node), \"new\");\n      this.next();\n      const metaProp = this.parseMetaProperty(node, meta, \"target\");\n\n      if (!this.scope.inNonArrowFunction && !this.scope.inClass) {\n        let error = ErrorMessages.UnexpectedNewTarget;\n\n        if (this.hasPlugin(\"classProperties\")) {\n          error += \" or class properties\";\n        }\n\n        this.raise(metaProp.start, error);\n      }\n\n      return metaProp;\n    }\n\n    return this.parseNew(node);\n  }\n\n  parseNew(node) {\n    node.callee = this.parseNoCallExpr();\n\n    if (node.callee.type === \"Import\") {\n      this.raise(node.callee.start, ErrorMessages.ImportCallNotNewExpression);\n    } else if (this.isOptionalChain(node.callee)) {\n      this.raise(this.state.lastTokEnd, ErrorMessages.OptionalChainingNoNew);\n    } else if (this.eat(types.questionDot)) {\n      this.raise(this.state.start, ErrorMessages.OptionalChainingNoNew);\n    }\n\n    this.parseNewArguments(node);\n    return this.finishNode(node, \"NewExpression\");\n  }\n\n  parseNewArguments(node) {\n    if (this.eat(types.parenL)) {\n      const args = this.parseExprList(types.parenR);\n      this.toReferencedList(args);\n      node.arguments = args;\n    } else {\n      node.arguments = [];\n    }\n  }\n\n  parseTemplateElement(isTagged) {\n    const elem = this.startNode();\n\n    if (this.state.value === null) {\n      if (!isTagged) {\n        this.raise(this.state.start + 1, ErrorMessages.InvalidEscapeSequenceTemplate);\n      }\n    }\n\n    elem.value = {\n      raw: this.input.slice(this.state.start, this.state.end).replace(/\\r\\n?/g, \"\\n\"),\n      cooked: this.state.value\n    };\n    this.next();\n    elem.tail = this.match(types.backQuote);\n    return this.finishNode(elem, \"TemplateElement\");\n  }\n\n  parseTemplate(isTagged) {\n    const node = this.startNode();\n    this.next();\n    node.expressions = [];\n    let curElt = this.parseTemplateElement(isTagged);\n    node.quasis = [curElt];\n\n    while (!curElt.tail) {\n      this.expect(types.dollarBraceL);\n      node.expressions.push(this.parseTemplateSubstitution());\n      this.expect(types.braceR);\n      node.quasis.push(curElt = this.parseTemplateElement(isTagged));\n    }\n\n    this.next();\n    return this.finishNode(node, \"TemplateLiteral\");\n  }\n\n  parseTemplateSubstitution() {\n    return this.parseExpression();\n  }\n\n  parseObjectLike(close, isPattern, isRecord, refExpressionErrors) {\n    if (isRecord) {\n      this.expectPlugin(\"recordAndTuple\");\n    }\n\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = false;\n    const propHash = Object.create(null);\n    let first = true;\n    const node = this.startNode();\n    node.properties = [];\n    this.next();\n\n    while (!this.match(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(types.comma);\n\n        if (this.match(close)) {\n          this.addExtra(node, \"trailingComma\", this.state.lastTokStart);\n          break;\n        }\n      }\n\n      const prop = this.parsePropertyDefinition(isPattern, refExpressionErrors);\n\n      if (!isPattern) {\n        this.checkProto(prop, isRecord, propHash, refExpressionErrors);\n      }\n\n      if (isRecord && !this.isObjectProperty(prop) && prop.type !== \"SpreadElement\") {\n        this.raise(prop.start, ErrorMessages.InvalidRecordProperty);\n      }\n\n      if (prop.shorthand) {\n        this.addExtra(prop, \"shorthand\", true);\n      }\n\n      node.properties.push(prop);\n    }\n\n    this.state.exprAllowed = false;\n    this.next();\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n    let type = \"ObjectExpression\";\n\n    if (isPattern) {\n      type = \"ObjectPattern\";\n    } else if (isRecord) {\n      type = \"RecordExpression\";\n    }\n\n    return this.finishNode(node, type);\n  }\n\n  maybeAsyncOrAccessorProp(prop) {\n    return !prop.computed && prop.key.type === \"Identifier\" && (this.isLiteralPropertyName() || this.match(types.bracketL) || this.match(types.star));\n  }\n\n  parsePropertyDefinition(isPattern, refExpressionErrors) {\n    let decorators = [];\n\n    if (this.match(types.at)) {\n      if (this.hasPlugin(\"decorators\")) {\n        this.raise(this.state.start, ErrorMessages.UnsupportedPropertyDecorator);\n      }\n\n      while (this.match(types.at)) {\n        decorators.push(this.parseDecorator());\n      }\n    }\n\n    const prop = this.startNode();\n    let isGenerator = false;\n    let isAsync = false;\n    let isAccessor = false;\n    let startPos;\n    let startLoc;\n\n    if (this.match(types.ellipsis)) {\n      if (decorators.length) this.unexpected();\n\n      if (isPattern) {\n        this.next();\n        prop.argument = this.parseIdentifier();\n        this.checkCommaAfterRest(125);\n        return this.finishNode(prop, \"RestElement\");\n      }\n\n      return this.parseSpread();\n    }\n\n    if (decorators.length) {\n      prop.decorators = decorators;\n      decorators = [];\n    }\n\n    prop.method = false;\n\n    if (isPattern || refExpressionErrors) {\n      startPos = this.state.start;\n      startLoc = this.state.startLoc;\n    }\n\n    if (!isPattern) {\n      isGenerator = this.eat(types.star);\n    }\n\n    const containsEsc = this.state.containsEsc;\n    const key = this.parsePropertyName(prop, false);\n\n    if (!isPattern && !isGenerator && !containsEsc && this.maybeAsyncOrAccessorProp(prop)) {\n      const keyName = key.name;\n\n      if (keyName === \"async\" && !this.hasPrecedingLineBreak()) {\n        isAsync = true;\n        isGenerator = this.eat(types.star);\n        this.parsePropertyName(prop, false);\n      }\n\n      if (keyName === \"get\" || keyName === \"set\") {\n        isAccessor = true;\n        prop.kind = keyName;\n\n        if (this.match(types.star)) {\n          isGenerator = true;\n          this.raise(this.state.pos, ErrorMessages.AccessorIsGenerator, keyName);\n          this.next();\n        }\n\n        this.parsePropertyName(prop, false);\n      }\n    }\n\n    this.parseObjPropValue(prop, startPos, startLoc, isGenerator, isAsync, isPattern, isAccessor, refExpressionErrors);\n    return prop;\n  }\n\n  getGetterSetterExpectedParamCount(method) {\n    return method.kind === \"get\" ? 0 : 1;\n  }\n\n  getObjectOrClassMethodParams(method) {\n    return method.params;\n  }\n\n  checkGetterSetterParams(method) {\n    var _params;\n\n    const paramCount = this.getGetterSetterExpectedParamCount(method);\n    const params = this.getObjectOrClassMethodParams(method);\n    const start = method.start;\n\n    if (params.length !== paramCount) {\n      if (method.kind === \"get\") {\n        this.raise(start, ErrorMessages.BadGetterArity);\n      } else {\n        this.raise(start, ErrorMessages.BadSetterArity);\n      }\n    }\n\n    if (method.kind === \"set\" && ((_params = params[params.length - 1]) == null ? void 0 : _params.type) === \"RestElement\") {\n      this.raise(start, ErrorMessages.BadSetterRestParameter);\n    }\n  }\n\n  parseObjectMethod(prop, isGenerator, isAsync, isPattern, isAccessor) {\n    if (isAccessor) {\n      this.parseMethod(prop, isGenerator, false, false, false, \"ObjectMethod\");\n      this.checkGetterSetterParams(prop);\n      return prop;\n    }\n\n    if (isAsync || isGenerator || this.match(types.parenL)) {\n      if (isPattern) this.unexpected();\n      prop.kind = \"method\";\n      prop.method = true;\n      return this.parseMethod(prop, isGenerator, isAsync, false, false, \"ObjectMethod\");\n    }\n  }\n\n  parseObjectProperty(prop, startPos, startLoc, isPattern, refExpressionErrors) {\n    prop.shorthand = false;\n\n    if (this.eat(types.colon)) {\n      prop.value = isPattern ? this.parseMaybeDefault(this.state.start, this.state.startLoc) : this.parseMaybeAssignAllowIn(refExpressionErrors);\n      return this.finishNode(prop, \"ObjectProperty\");\n    }\n\n    if (!prop.computed && prop.key.type === \"Identifier\") {\n      this.checkReservedWord(prop.key.name, prop.key.start, true, false);\n\n      if (isPattern) {\n        prop.value = this.parseMaybeDefault(startPos, startLoc, prop.key.__clone());\n      } else if (this.match(types.eq) && refExpressionErrors) {\n        if (refExpressionErrors.shorthandAssign === -1) {\n          refExpressionErrors.shorthandAssign = this.state.start;\n        }\n\n        prop.value = this.parseMaybeDefault(startPos, startLoc, prop.key.__clone());\n      } else {\n        prop.value = prop.key.__clone();\n      }\n\n      prop.shorthand = true;\n      return this.finishNode(prop, \"ObjectProperty\");\n    }\n  }\n\n  parseObjPropValue(prop, startPos, startLoc, isGenerator, isAsync, isPattern, isAccessor, refExpressionErrors) {\n    const node = this.parseObjectMethod(prop, isGenerator, isAsync, isPattern, isAccessor) || this.parseObjectProperty(prop, startPos, startLoc, isPattern, refExpressionErrors);\n    if (!node) this.unexpected();\n    return node;\n  }\n\n  parsePropertyName(prop, isPrivateNameAllowed) {\n    if (this.eat(types.bracketL)) {\n      prop.computed = true;\n      prop.key = this.parseMaybeAssignAllowIn();\n      this.expect(types.bracketR);\n    } else {\n      const oldInPropertyName = this.state.inPropertyName;\n      this.state.inPropertyName = true;\n      prop.key = this.match(types.num) || this.match(types.string) || this.match(types.bigint) || this.match(types.decimal) ? this.parseExprAtom() : this.parseMaybePrivateName(isPrivateNameAllowed);\n\n      if (!this.isPrivateName(prop.key)) {\n        prop.computed = false;\n      }\n\n      this.state.inPropertyName = oldInPropertyName;\n    }\n\n    return prop.key;\n  }\n\n  initFunction(node, isAsync) {\n    node.id = null;\n    node.generator = false;\n    node.async = !!isAsync;\n  }\n\n  parseMethod(node, isGenerator, isAsync, isConstructor, allowDirectSuper, type, inClassScope = false) {\n    this.initFunction(node, isAsync);\n    node.generator = !!isGenerator;\n    const allowModifiers = isConstructor;\n    this.scope.enter(SCOPE_FUNCTION | SCOPE_SUPER | (inClassScope ? SCOPE_CLASS : 0) | (allowDirectSuper ? SCOPE_DIRECT_SUPER : 0));\n    this.prodParam.enter(functionFlags(isAsync, node.generator));\n    this.parseFunctionParams(node, allowModifiers);\n    this.parseFunctionBodyAndFinish(node, type, true);\n    this.prodParam.exit();\n    this.scope.exit();\n    return node;\n  }\n\n  parseArrayLike(close, canBePattern, isTuple, refExpressionErrors) {\n    if (isTuple) {\n      this.expectPlugin(\"recordAndTuple\");\n    }\n\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = false;\n    const node = this.startNode();\n    this.next();\n    node.elements = this.parseExprList(close, !isTuple, refExpressionErrors, node);\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n    return this.finishNode(node, isTuple ? \"TupleExpression\" : \"ArrayExpression\");\n  }\n\n  parseArrowExpression(node, params, isAsync, trailingCommaPos) {\n    this.scope.enter(SCOPE_FUNCTION | SCOPE_ARROW);\n    let flags = functionFlags(isAsync, false);\n\n    if (!this.match(types.bracketL) && this.prodParam.hasIn) {\n      flags |= PARAM_IN;\n    }\n\n    this.prodParam.enter(flags);\n    this.initFunction(node, isAsync);\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n\n    if (params) {\n      this.state.maybeInArrowParameters = true;\n      this.setArrowFunctionParameters(node, params, trailingCommaPos);\n    }\n\n    this.state.maybeInArrowParameters = false;\n    this.parseFunctionBody(node, true);\n    this.prodParam.exit();\n    this.scope.exit();\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n    return this.finishNode(node, \"ArrowFunctionExpression\");\n  }\n\n  setArrowFunctionParameters(node, params, trailingCommaPos) {\n    node.params = this.toAssignableList(params, trailingCommaPos, false);\n  }\n\n  parseFunctionBodyAndFinish(node, type, isMethod = false) {\n    this.parseFunctionBody(node, false, isMethod);\n    this.finishNode(node, type);\n  }\n\n  parseFunctionBody(node, allowExpression, isMethod = false) {\n    const isExpression = allowExpression && !this.match(types.braceL);\n    this.expressionScope.enter(newExpressionScope());\n\n    if (isExpression) {\n      node.body = this.parseMaybeAssign();\n      this.checkParams(node, false, allowExpression, false);\n    } else {\n      const oldStrict = this.state.strict;\n      const oldLabels = this.state.labels;\n      this.state.labels = [];\n      this.prodParam.enter(this.prodParam.currentFlags() | PARAM_RETURN);\n      node.body = this.parseBlock(true, false, hasStrictModeDirective => {\n        const nonSimple = !this.isSimpleParamList(node.params);\n\n        if (hasStrictModeDirective && nonSimple) {\n          const errorPos = (node.kind === \"method\" || node.kind === \"constructor\") && !!node.key ? node.key.end : node.start;\n          this.raise(errorPos, ErrorMessages.IllegalLanguageModeDirective);\n        }\n\n        const strictModeChanged = !oldStrict && this.state.strict;\n        this.checkParams(node, !this.state.strict && !allowExpression && !isMethod && !nonSimple, allowExpression, strictModeChanged);\n\n        if (this.state.strict && node.id) {\n          this.checkLVal(node.id, \"function name\", BIND_OUTSIDE, undefined, undefined, strictModeChanged);\n        }\n      });\n      this.prodParam.exit();\n      this.expressionScope.exit();\n      this.state.labels = oldLabels;\n    }\n  }\n\n  isSimpleParamList(params) {\n    for (let i = 0, len = params.length; i < len; i++) {\n      if (params[i].type !== \"Identifier\") return false;\n    }\n\n    return true;\n  }\n\n  checkParams(node, allowDuplicates, isArrowFunction, strictModeChanged = true) {\n    const checkClashes = new Set();\n\n    for (const param of node.params) {\n      this.checkLVal(param, \"function parameter list\", BIND_VAR, allowDuplicates ? null : checkClashes, undefined, strictModeChanged);\n    }\n  }\n\n  parseExprList(close, allowEmpty, refExpressionErrors, nodeForExtra) {\n    const elts = [];\n    let first = true;\n\n    while (!this.eat(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(types.comma);\n\n        if (this.match(close)) {\n          if (nodeForExtra) {\n            this.addExtra(nodeForExtra, \"trailingComma\", this.state.lastTokStart);\n          }\n\n          this.next();\n          break;\n        }\n      }\n\n      elts.push(this.parseExprListItem(allowEmpty, refExpressionErrors));\n    }\n\n    return elts;\n  }\n\n  parseExprListItem(allowEmpty, refExpressionErrors, refNeedsArrowPos, allowPlaceholder) {\n    let elt;\n\n    if (this.match(types.comma)) {\n      if (!allowEmpty) {\n        this.raise(this.state.pos, ErrorMessages.UnexpectedToken, \",\");\n      }\n\n      elt = null;\n    } else if (this.match(types.ellipsis)) {\n      const spreadNodeStartPos = this.state.start;\n      const spreadNodeStartLoc = this.state.startLoc;\n      elt = this.parseParenItem(this.parseSpread(refExpressionErrors, refNeedsArrowPos), spreadNodeStartPos, spreadNodeStartLoc);\n    } else if (this.match(types.question)) {\n      this.expectPlugin(\"partialApplication\");\n\n      if (!allowPlaceholder) {\n        this.raise(this.state.start, ErrorMessages.UnexpectedArgumentPlaceholder);\n      }\n\n      const node = this.startNode();\n      this.next();\n      elt = this.finishNode(node, \"ArgumentPlaceholder\");\n    } else {\n      elt = this.parseMaybeAssignAllowIn(refExpressionErrors, this.parseParenItem, refNeedsArrowPos);\n    }\n\n    return elt;\n  }\n\n  parseIdentifier(liberal) {\n    const node = this.startNode();\n    const name = this.parseIdentifierName(node.start, liberal);\n    return this.createIdentifier(node, name);\n  }\n\n  createIdentifier(node, name) {\n    node.name = name;\n    node.loc.identifierName = name;\n    return this.finishNode(node, \"Identifier\");\n  }\n\n  parseIdentifierName(pos, liberal) {\n    let name;\n    const {\n      start,\n      type\n    } = this.state;\n\n    if (type === types.name) {\n      name = this.state.value;\n    } else if (type.keyword) {\n      name = type.keyword;\n      const curContext = this.curContext();\n\n      if ((type === types._class || type === types._function) && (curContext === types$1.functionStatement || curContext === types$1.functionExpression)) {\n        this.state.context.pop();\n      }\n    } else {\n      throw this.unexpected();\n    }\n\n    if (liberal) {\n      this.state.type = types.name;\n    } else {\n      this.checkReservedWord(name, start, !!type.keyword, false);\n    }\n\n    this.next();\n    return name;\n  }\n\n  checkReservedWord(word, startLoc, checkKeywords, isBinding) {\n    if (this.prodParam.hasYield && word === \"yield\") {\n      this.raise(startLoc, ErrorMessages.YieldBindingIdentifier);\n      return;\n    }\n\n    if (word === \"await\") {\n      if (this.prodParam.hasAwait) {\n        this.raise(startLoc, ErrorMessages.AwaitBindingIdentifier);\n        return;\n      } else if (this.scope.inStaticBlock && !this.scope.inNonArrowFunction) {\n        this.raise(startLoc, ErrorMessages.AwaitBindingIdentifierInStaticBlock);\n        return;\n      } else {\n        this.expressionScope.recordAsyncArrowParametersError(startLoc, ErrorMessages.AwaitBindingIdentifier);\n      }\n    }\n\n    if (this.scope.inClass && !this.scope.inNonArrowFunction && word === \"arguments\") {\n      this.raise(startLoc, ErrorMessages.ArgumentsInClass);\n      return;\n    }\n\n    if (checkKeywords && isKeyword(word)) {\n      this.raise(startLoc, ErrorMessages.UnexpectedKeyword, word);\n      return;\n    }\n\n    const reservedTest = !this.state.strict ? isReservedWord : isBinding ? isStrictBindReservedWord : isStrictReservedWord;\n\n    if (reservedTest(word, this.inModule)) {\n      this.raise(startLoc, ErrorMessages.UnexpectedReservedWord, word);\n    }\n  }\n\n  isAwaitAllowed() {\n    if (this.prodParam.hasAwait) return true;\n\n    if (this.options.allowAwaitOutsideFunction && !this.scope.inFunction) {\n      return true;\n    }\n\n    return false;\n  }\n\n  parseAwait(startPos, startLoc) {\n    const node = this.startNodeAt(startPos, startLoc);\n    this.expressionScope.recordParameterInitializerError(node.start, ErrorMessages.AwaitExpressionFormalParameter);\n\n    if (this.eat(types.star)) {\n      this.raise(node.start, ErrorMessages.ObsoleteAwaitStar);\n    }\n\n    if (!this.scope.inFunction && !this.options.allowAwaitOutsideFunction) {\n      if (this.isAmbiguousAwait()) {\n        this.ambiguousScriptDifferentAst = true;\n      } else {\n        this.sawUnambiguousESM = true;\n      }\n    }\n\n    if (!this.state.soloAwait) {\n      node.argument = this.parseMaybeUnary(null, true);\n    }\n\n    return this.finishNode(node, \"AwaitExpression\");\n  }\n\n  isAmbiguousAwait() {\n    return this.hasPrecedingLineBreak() || this.match(types.plusMin) || this.match(types.parenL) || this.match(types.bracketL) || this.match(types.backQuote) || this.match(types.regexp) || this.match(types.slash) || this.hasPlugin(\"v8intrinsic\") && this.match(types.modulo);\n  }\n\n  parseYield() {\n    const node = this.startNode();\n    this.expressionScope.recordParameterInitializerError(node.start, ErrorMessages.YieldInParameter);\n    this.next();\n\n    if (this.match(types.semi) || !this.match(types.star) && !this.state.type.startsExpr || this.hasPrecedingLineBreak()) {\n      node.delegate = false;\n      node.argument = null;\n    } else {\n      node.delegate = this.eat(types.star);\n      node.argument = this.parseMaybeAssign();\n    }\n\n    return this.finishNode(node, \"YieldExpression\");\n  }\n\n  checkPipelineAtInfixOperator(left, leftStartPos) {\n    if (this.getPluginOption(\"pipelineOperator\", \"proposal\") === \"smart\") {\n      if (left.type === \"SequenceExpression\") {\n        this.raise(leftStartPos, ErrorMessages.PipelineHeadSequenceExpression);\n      }\n    }\n  }\n\n  parseSmartPipelineBody(childExpression, startPos, startLoc) {\n    this.checkSmartPipelineBodyEarlyErrors(childExpression, startPos);\n    return this.parseSmartPipelineBodyInStyle(childExpression, startPos, startLoc);\n  }\n\n  checkSmartPipelineBodyEarlyErrors(childExpression, startPos) {\n    if (this.match(types.arrow)) {\n      throw this.raise(this.state.start, ErrorMessages.PipelineBodyNoArrow);\n    } else if (childExpression.type === \"SequenceExpression\") {\n      this.raise(startPos, ErrorMessages.PipelineBodySequenceExpression);\n    }\n  }\n\n  parseSmartPipelineBodyInStyle(childExpression, startPos, startLoc) {\n    const bodyNode = this.startNodeAt(startPos, startLoc);\n    const isSimpleReference = this.isSimpleReference(childExpression);\n\n    if (isSimpleReference) {\n      bodyNode.callee = childExpression;\n    } else {\n      if (!this.topicReferenceWasUsedInCurrentTopicContext()) {\n        this.raise(startPos, ErrorMessages.PipelineTopicUnused);\n      }\n\n      bodyNode.expression = childExpression;\n    }\n\n    return this.finishNode(bodyNode, isSimpleReference ? \"PipelineBareFunction\" : \"PipelineTopicExpression\");\n  }\n\n  isSimpleReference(expression) {\n    switch (expression.type) {\n      case \"MemberExpression\":\n        return !expression.computed && this.isSimpleReference(expression.object);\n\n      case \"Identifier\":\n        return true;\n\n      default:\n        return false;\n    }\n  }\n\n  withTopicPermittingContext(callback) {\n    const outerContextTopicState = this.state.topicContext;\n    this.state.topicContext = {\n      maxNumOfResolvableTopics: 1,\n      maxTopicIndex: null\n    };\n\n    try {\n      return callback();\n    } finally {\n      this.state.topicContext = outerContextTopicState;\n    }\n  }\n\n  withTopicForbiddingContext(callback) {\n    const outerContextTopicState = this.state.topicContext;\n    this.state.topicContext = {\n      maxNumOfResolvableTopics: 0,\n      maxTopicIndex: null\n    };\n\n    try {\n      return callback();\n    } finally {\n      this.state.topicContext = outerContextTopicState;\n    }\n  }\n\n  withSoloAwaitPermittingContext(callback) {\n    const outerContextSoloAwaitState = this.state.soloAwait;\n    this.state.soloAwait = true;\n\n    try {\n      return callback();\n    } finally {\n      this.state.soloAwait = outerContextSoloAwaitState;\n    }\n  }\n\n  allowInAnd(callback) {\n    const flags = this.prodParam.currentFlags();\n    const prodParamToSet = PARAM_IN & ~flags;\n\n    if (prodParamToSet) {\n      this.prodParam.enter(flags | PARAM_IN);\n\n      try {\n        return callback();\n      } finally {\n        this.prodParam.exit();\n      }\n    }\n\n    return callback();\n  }\n\n  disallowInAnd(callback) {\n    const flags = this.prodParam.currentFlags();\n    const prodParamToClear = PARAM_IN & flags;\n\n    if (prodParamToClear) {\n      this.prodParam.enter(flags & ~PARAM_IN);\n\n      try {\n        return callback();\n      } finally {\n        this.prodParam.exit();\n      }\n    }\n\n    return callback();\n  }\n\n  registerTopicReference() {\n    this.state.topicContext.maxTopicIndex = 0;\n  }\n\n  primaryTopicReferenceIsAllowedInCurrentTopicContext() {\n    return this.state.topicContext.maxNumOfResolvableTopics >= 1;\n  }\n\n  topicReferenceWasUsedInCurrentTopicContext() {\n    return this.state.topicContext.maxTopicIndex != null && this.state.topicContext.maxTopicIndex >= 0;\n  }\n\n  parseFSharpPipelineBody(prec) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    this.state.potentialArrowAt = this.state.start;\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = true;\n    const ret = this.parseExprOp(this.parseMaybeUnary(), startPos, startLoc, prec);\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n    return ret;\n  }\n\n  parseModuleExpression() {\n    this.expectPlugin(\"moduleBlocks\");\n    const node = this.startNode();\n    this.next();\n    this.eat(types.braceL);\n    const revertScopes = this.initializeScopes(true);\n    this.enterInitialScopes();\n    const program = this.startNode();\n\n    try {\n      node.body = this.parseProgram(program, types.braceR, \"module\");\n    } finally {\n      revertScopes();\n    }\n\n    this.eat(types.braceR);\n    return this.finishNode(node, \"ModuleExpression\");\n  }\n\n}\n\nconst loopLabel = {\n  kind: \"loop\"\n},\n      switchLabel = {\n  kind: \"switch\"\n};\nconst FUNC_NO_FLAGS = 0b000,\n      FUNC_STATEMENT = 0b001,\n      FUNC_HANGING_STATEMENT = 0b010,\n      FUNC_NULLABLE_ID = 0b100;\nconst loneSurrogate = /[\\uD800-\\uDFFF]/u;\nclass StatementParser extends ExpressionParser {\n  parseTopLevel(file, program) {\n    file.program = this.parseProgram(program);\n    file.comments = this.state.comments;\n    if (this.options.tokens) file.tokens = this.tokens;\n    return this.finishNode(file, \"File\");\n  }\n\n  parseProgram(program, end = types.eof, sourceType = this.options.sourceType) {\n    program.sourceType = sourceType;\n    program.interpreter = this.parseInterpreterDirective();\n    this.parseBlockBody(program, true, true, end);\n\n    if (this.inModule && !this.options.allowUndeclaredExports && this.scope.undefinedExports.size > 0) {\n      for (const [name] of Array.from(this.scope.undefinedExports)) {\n        const pos = this.scope.undefinedExports.get(name);\n        this.raise(pos, ErrorMessages.ModuleExportUndefined, name);\n      }\n    }\n\n    return this.finishNode(program, \"Program\");\n  }\n\n  stmtToDirective(stmt) {\n    const expr = stmt.expression;\n    const directiveLiteral = this.startNodeAt(expr.start, expr.loc.start);\n    const directive = this.startNodeAt(stmt.start, stmt.loc.start);\n    const raw = this.input.slice(expr.start, expr.end);\n    const val = directiveLiteral.value = raw.slice(1, -1);\n    this.addExtra(directiveLiteral, \"raw\", raw);\n    this.addExtra(directiveLiteral, \"rawValue\", val);\n    directive.value = this.finishNodeAt(directiveLiteral, \"DirectiveLiteral\", expr.end, expr.loc.end);\n    return this.finishNodeAt(directive, \"Directive\", stmt.end, stmt.loc.end);\n  }\n\n  parseInterpreterDirective() {\n    if (!this.match(types.interpreterDirective)) {\n      return null;\n    }\n\n    const node = this.startNode();\n    node.value = this.state.value;\n    this.next();\n    return this.finishNode(node, \"InterpreterDirective\");\n  }\n\n  isLet(context) {\n    if (!this.isContextual(\"let\")) {\n      return false;\n    }\n\n    return this.isLetKeyword(context);\n  }\n\n  isLetKeyword(context) {\n    const next = this.nextTokenStart();\n    const nextCh = this.input.charCodeAt(next);\n    if (nextCh === 91) return true;\n    if (context) return false;\n    if (nextCh === 123) return true;\n\n    if (isIdentifierStart(nextCh)) {\n      let pos = next + 1;\n\n      while (isIdentifierChar(this.input.charCodeAt(pos))) {\n        ++pos;\n      }\n\n      const ident = this.input.slice(next, pos);\n      if (!keywordRelationalOperator.test(ident)) return true;\n    }\n\n    return false;\n  }\n\n  parseStatement(context, topLevel) {\n    if (this.match(types.at)) {\n      this.parseDecorators(true);\n    }\n\n    return this.parseStatementContent(context, topLevel);\n  }\n\n  parseStatementContent(context, topLevel) {\n    let starttype = this.state.type;\n    const node = this.startNode();\n    let kind;\n\n    if (this.isLet(context)) {\n      starttype = types._var;\n      kind = \"let\";\n    }\n\n    switch (starttype) {\n      case types._break:\n      case types._continue:\n        return this.parseBreakContinueStatement(node, starttype.keyword);\n\n      case types._debugger:\n        return this.parseDebuggerStatement(node);\n\n      case types._do:\n        return this.parseDoStatement(node);\n\n      case types._for:\n        return this.parseForStatement(node);\n\n      case types._function:\n        if (this.lookaheadCharCode() === 46) break;\n\n        if (context) {\n          if (this.state.strict) {\n            this.raise(this.state.start, ErrorMessages.StrictFunction);\n          } else if (context !== \"if\" && context !== \"label\") {\n            this.raise(this.state.start, ErrorMessages.SloppyFunction);\n          }\n        }\n\n        return this.parseFunctionStatement(node, false, !context);\n\n      case types._class:\n        if (context) this.unexpected();\n        return this.parseClass(node, true);\n\n      case types._if:\n        return this.parseIfStatement(node);\n\n      case types._return:\n        return this.parseReturnStatement(node);\n\n      case types._switch:\n        return this.parseSwitchStatement(node);\n\n      case types._throw:\n        return this.parseThrowStatement(node);\n\n      case types._try:\n        return this.parseTryStatement(node);\n\n      case types._const:\n      case types._var:\n        kind = kind || this.state.value;\n\n        if (context && kind !== \"var\") {\n          this.raise(this.state.start, ErrorMessages.UnexpectedLexicalDeclaration);\n        }\n\n        return this.parseVarStatement(node, kind);\n\n      case types._while:\n        return this.parseWhileStatement(node);\n\n      case types._with:\n        return this.parseWithStatement(node);\n\n      case types.braceL:\n        return this.parseBlock();\n\n      case types.semi:\n        return this.parseEmptyStatement(node);\n\n      case types._import:\n        {\n          const nextTokenCharCode = this.lookaheadCharCode();\n\n          if (nextTokenCharCode === 40 || nextTokenCharCode === 46) {\n              break;\n            }\n        }\n\n      case types._export:\n        {\n          if (!this.options.allowImportExportEverywhere && !topLevel) {\n            this.raise(this.state.start, ErrorMessages.UnexpectedImportExport);\n          }\n\n          this.next();\n          let result;\n\n          if (starttype === types._import) {\n            result = this.parseImport(node);\n\n            if (result.type === \"ImportDeclaration\" && (!result.importKind || result.importKind === \"value\")) {\n              this.sawUnambiguousESM = true;\n            }\n          } else {\n            result = this.parseExport(node);\n\n            if (result.type === \"ExportNamedDeclaration\" && (!result.exportKind || result.exportKind === \"value\") || result.type === \"ExportAllDeclaration\" && (!result.exportKind || result.exportKind === \"value\") || result.type === \"ExportDefaultDeclaration\") {\n              this.sawUnambiguousESM = true;\n            }\n          }\n\n          this.assertModuleNodeAllowed(node);\n          return result;\n        }\n\n      default:\n        {\n          if (this.isAsyncFunction()) {\n            if (context) {\n              this.raise(this.state.start, ErrorMessages.AsyncFunctionInSingleStatementContext);\n            }\n\n            this.next();\n            return this.parseFunctionStatement(node, true, !context);\n          }\n        }\n    }\n\n    const maybeName = this.state.value;\n    const expr = this.parseExpression();\n\n    if (starttype === types.name && expr.type === \"Identifier\" && this.eat(types.colon)) {\n      return this.parseLabeledStatement(node, maybeName, expr, context);\n    } else {\n      return this.parseExpressionStatement(node, expr);\n    }\n  }\n\n  assertModuleNodeAllowed(node) {\n    if (!this.options.allowImportExportEverywhere && !this.inModule) {\n      this.raiseWithData(node.start, {\n        code: \"BABEL_PARSER_SOURCETYPE_MODULE_REQUIRED\"\n      }, ErrorMessages.ImportOutsideModule);\n    }\n  }\n\n  takeDecorators(node) {\n    const decorators = this.state.decoratorStack[this.state.decoratorStack.length - 1];\n\n    if (decorators.length) {\n      node.decorators = decorators;\n      this.resetStartLocationFromNode(node, decorators[0]);\n      this.state.decoratorStack[this.state.decoratorStack.length - 1] = [];\n    }\n  }\n\n  canHaveLeadingDecorator() {\n    return this.match(types._class);\n  }\n\n  parseDecorators(allowExport) {\n    const currentContextDecorators = this.state.decoratorStack[this.state.decoratorStack.length - 1];\n\n    while (this.match(types.at)) {\n      const decorator = this.parseDecorator();\n      currentContextDecorators.push(decorator);\n    }\n\n    if (this.match(types._export)) {\n      if (!allowExport) {\n        this.unexpected();\n      }\n\n      if (this.hasPlugin(\"decorators\") && !this.getPluginOption(\"decorators\", \"decoratorsBeforeExport\")) {\n        this.raise(this.state.start, ErrorMessages.DecoratorExportClass);\n      }\n    } else if (!this.canHaveLeadingDecorator()) {\n      throw this.raise(this.state.start, ErrorMessages.UnexpectedLeadingDecorator);\n    }\n  }\n\n  parseDecorator() {\n    this.expectOnePlugin([\"decorators-legacy\", \"decorators\"]);\n    const node = this.startNode();\n    this.next();\n\n    if (this.hasPlugin(\"decorators\")) {\n      this.state.decoratorStack.push([]);\n      const startPos = this.state.start;\n      const startLoc = this.state.startLoc;\n      let expr;\n\n      if (this.eat(types.parenL)) {\n        expr = this.parseExpression();\n        this.expect(types.parenR);\n      } else {\n        expr = this.parseIdentifier(false);\n\n        while (this.eat(types.dot)) {\n          const node = this.startNodeAt(startPos, startLoc);\n          node.object = expr;\n          node.property = this.parseIdentifier(true);\n          node.computed = false;\n          expr = this.finishNode(node, \"MemberExpression\");\n        }\n      }\n\n      node.expression = this.parseMaybeDecoratorArguments(expr);\n      this.state.decoratorStack.pop();\n    } else {\n      node.expression = this.parseExprSubscripts();\n    }\n\n    return this.finishNode(node, \"Decorator\");\n  }\n\n  parseMaybeDecoratorArguments(expr) {\n    if (this.eat(types.parenL)) {\n      const node = this.startNodeAtNode(expr);\n      node.callee = expr;\n      node.arguments = this.parseCallExpressionArguments(types.parenR, false);\n      this.toReferencedList(node.arguments);\n      return this.finishNode(node, \"CallExpression\");\n    }\n\n    return expr;\n  }\n\n  parseBreakContinueStatement(node, keyword) {\n    const isBreak = keyword === \"break\";\n    this.next();\n\n    if (this.isLineTerminator()) {\n      node.label = null;\n    } else {\n      node.label = this.parseIdentifier();\n      this.semicolon();\n    }\n\n    this.verifyBreakContinue(node, keyword);\n    return this.finishNode(node, isBreak ? \"BreakStatement\" : \"ContinueStatement\");\n  }\n\n  verifyBreakContinue(node, keyword) {\n    const isBreak = keyword === \"break\";\n    let i;\n\n    for (i = 0; i < this.state.labels.length; ++i) {\n      const lab = this.state.labels[i];\n\n      if (node.label == null || lab.name === node.label.name) {\n        if (lab.kind != null && (isBreak || lab.kind === \"loop\")) break;\n        if (node.label && isBreak) break;\n      }\n    }\n\n    if (i === this.state.labels.length) {\n      this.raise(node.start, ErrorMessages.IllegalBreakContinue, keyword);\n    }\n  }\n\n  parseDebuggerStatement(node) {\n    this.next();\n    this.semicolon();\n    return this.finishNode(node, \"DebuggerStatement\");\n  }\n\n  parseHeaderExpression() {\n    this.expect(types.parenL);\n    const val = this.parseExpression();\n    this.expect(types.parenR);\n    return val;\n  }\n\n  parseDoStatement(node) {\n    this.next();\n    this.state.labels.push(loopLabel);\n    node.body = this.withTopicForbiddingContext(() => this.parseStatement(\"do\"));\n    this.state.labels.pop();\n    this.expect(types._while);\n    node.test = this.parseHeaderExpression();\n    this.eat(types.semi);\n    return this.finishNode(node, \"DoWhileStatement\");\n  }\n\n  parseForStatement(node) {\n    this.next();\n    this.state.labels.push(loopLabel);\n    let awaitAt = -1;\n\n    if (this.isAwaitAllowed() && this.eatContextual(\"await\")) {\n      awaitAt = this.state.lastTokStart;\n    }\n\n    this.scope.enter(SCOPE_OTHER);\n    this.expect(types.parenL);\n\n    if (this.match(types.semi)) {\n      if (awaitAt > -1) {\n        this.unexpected(awaitAt);\n      }\n\n      return this.parseFor(node, null);\n    }\n\n    const startsWithLet = this.isContextual(\"let\");\n    const isLet = startsWithLet && this.isLetKeyword();\n\n    if (this.match(types._var) || this.match(types._const) || isLet) {\n      const init = this.startNode();\n      const kind = isLet ? \"let\" : this.state.value;\n      this.next();\n      this.parseVar(init, true, kind);\n      this.finishNode(init, \"VariableDeclaration\");\n\n      if ((this.match(types._in) || this.isContextual(\"of\")) && init.declarations.length === 1) {\n        return this.parseForIn(node, init, awaitAt);\n      }\n\n      if (awaitAt > -1) {\n        this.unexpected(awaitAt);\n      }\n\n      return this.parseFor(node, init);\n    }\n\n    const refExpressionErrors = new ExpressionErrors();\n    const init = this.parseExpression(true, refExpressionErrors);\n    const isForOf = this.isContextual(\"of\");\n\n    if (isForOf || this.match(types._in)) {\n      if (isForOf && startsWithLet) {\n        this.raise(init.start, ErrorMessages.ForOfLet);\n      }\n\n      this.toAssignable(init, true);\n      const description = isForOf ? \"for-of statement\" : \"for-in statement\";\n      this.checkLVal(init, description);\n      return this.parseForIn(node, init, awaitAt);\n    } else {\n      this.checkExpressionErrors(refExpressionErrors, true);\n    }\n\n    if (awaitAt > -1) {\n      this.unexpected(awaitAt);\n    }\n\n    return this.parseFor(node, init);\n  }\n\n  parseFunctionStatement(node, isAsync, declarationPosition) {\n    this.next();\n    return this.parseFunction(node, FUNC_STATEMENT | (declarationPosition ? 0 : FUNC_HANGING_STATEMENT), isAsync);\n  }\n\n  parseIfStatement(node) {\n    this.next();\n    node.test = this.parseHeaderExpression();\n    node.consequent = this.parseStatement(\"if\");\n    node.alternate = this.eat(types._else) ? this.parseStatement(\"if\") : null;\n    return this.finishNode(node, \"IfStatement\");\n  }\n\n  parseReturnStatement(node) {\n    if (!this.prodParam.hasReturn && !this.options.allowReturnOutsideFunction) {\n      this.raise(this.state.start, ErrorMessages.IllegalReturn);\n    }\n\n    this.next();\n\n    if (this.isLineTerminator()) {\n      node.argument = null;\n    } else {\n      node.argument = this.parseExpression();\n      this.semicolon();\n    }\n\n    return this.finishNode(node, \"ReturnStatement\");\n  }\n\n  parseSwitchStatement(node) {\n    this.next();\n    node.discriminant = this.parseHeaderExpression();\n    const cases = node.cases = [];\n    this.expect(types.braceL);\n    this.state.labels.push(switchLabel);\n    this.scope.enter(SCOPE_OTHER);\n    let cur;\n\n    for (let sawDefault; !this.match(types.braceR);) {\n      if (this.match(types._case) || this.match(types._default)) {\n        const isCase = this.match(types._case);\n        if (cur) this.finishNode(cur, \"SwitchCase\");\n        cases.push(cur = this.startNode());\n        cur.consequent = [];\n        this.next();\n\n        if (isCase) {\n          cur.test = this.parseExpression();\n        } else {\n          if (sawDefault) {\n            this.raise(this.state.lastTokStart, ErrorMessages.MultipleDefaultsInSwitch);\n          }\n\n          sawDefault = true;\n          cur.test = null;\n        }\n\n        this.expect(types.colon);\n      } else {\n        if (cur) {\n          cur.consequent.push(this.parseStatement(null));\n        } else {\n          this.unexpected();\n        }\n      }\n    }\n\n    this.scope.exit();\n    if (cur) this.finishNode(cur, \"SwitchCase\");\n    this.next();\n    this.state.labels.pop();\n    return this.finishNode(node, \"SwitchStatement\");\n  }\n\n  parseThrowStatement(node) {\n    this.next();\n\n    if (this.hasPrecedingLineBreak()) {\n      this.raise(this.state.lastTokEnd, ErrorMessages.NewlineAfterThrow);\n    }\n\n    node.argument = this.parseExpression();\n    this.semicolon();\n    return this.finishNode(node, \"ThrowStatement\");\n  }\n\n  parseCatchClauseParam() {\n    const param = this.parseBindingAtom();\n    const simple = param.type === \"Identifier\";\n    this.scope.enter(simple ? SCOPE_SIMPLE_CATCH : 0);\n    this.checkLVal(param, \"catch clause\", BIND_LEXICAL);\n    return param;\n  }\n\n  parseTryStatement(node) {\n    this.next();\n    node.block = this.parseBlock();\n    node.handler = null;\n\n    if (this.match(types._catch)) {\n      const clause = this.startNode();\n      this.next();\n\n      if (this.match(types.parenL)) {\n        this.expect(types.parenL);\n        clause.param = this.parseCatchClauseParam();\n        this.expect(types.parenR);\n      } else {\n        clause.param = null;\n        this.scope.enter(SCOPE_OTHER);\n      }\n\n      clause.body = this.withTopicForbiddingContext(() => this.parseBlock(false, false));\n      this.scope.exit();\n      node.handler = this.finishNode(clause, \"CatchClause\");\n    }\n\n    node.finalizer = this.eat(types._finally) ? this.parseBlock() : null;\n\n    if (!node.handler && !node.finalizer) {\n      this.raise(node.start, ErrorMessages.NoCatchOrFinally);\n    }\n\n    return this.finishNode(node, \"TryStatement\");\n  }\n\n  parseVarStatement(node, kind) {\n    this.next();\n    this.parseVar(node, false, kind);\n    this.semicolon();\n    return this.finishNode(node, \"VariableDeclaration\");\n  }\n\n  parseWhileStatement(node) {\n    this.next();\n    node.test = this.parseHeaderExpression();\n    this.state.labels.push(loopLabel);\n    node.body = this.withTopicForbiddingContext(() => this.parseStatement(\"while\"));\n    this.state.labels.pop();\n    return this.finishNode(node, \"WhileStatement\");\n  }\n\n  parseWithStatement(node) {\n    if (this.state.strict) {\n      this.raise(this.state.start, ErrorMessages.StrictWith);\n    }\n\n    this.next();\n    node.object = this.parseHeaderExpression();\n    node.body = this.withTopicForbiddingContext(() => this.parseStatement(\"with\"));\n    return this.finishNode(node, \"WithStatement\");\n  }\n\n  parseEmptyStatement(node) {\n    this.next();\n    return this.finishNode(node, \"EmptyStatement\");\n  }\n\n  parseLabeledStatement(node, maybeName, expr, context) {\n    for (const label of this.state.labels) {\n      if (label.name === maybeName) {\n        this.raise(expr.start, ErrorMessages.LabelRedeclaration, maybeName);\n      }\n    }\n\n    const kind = this.state.type.isLoop ? \"loop\" : this.match(types._switch) ? \"switch\" : null;\n\n    for (let i = this.state.labels.length - 1; i >= 0; i--) {\n      const label = this.state.labels[i];\n\n      if (label.statementStart === node.start) {\n        label.statementStart = this.state.start;\n        label.kind = kind;\n      } else {\n        break;\n      }\n    }\n\n    this.state.labels.push({\n      name: maybeName,\n      kind: kind,\n      statementStart: this.state.start\n    });\n    node.body = this.parseStatement(context ? context.indexOf(\"label\") === -1 ? context + \"label\" : context : \"label\");\n    this.state.labels.pop();\n    node.label = expr;\n    return this.finishNode(node, \"LabeledStatement\");\n  }\n\n  parseExpressionStatement(node, expr) {\n    node.expression = expr;\n    this.semicolon();\n    return this.finishNode(node, \"ExpressionStatement\");\n  }\n\n  parseBlock(allowDirectives = false, createNewLexicalScope = true, afterBlockParse) {\n    const node = this.startNode();\n\n    if (allowDirectives) {\n      this.state.strictErrors.clear();\n    }\n\n    this.expect(types.braceL);\n\n    if (createNewLexicalScope) {\n      this.scope.enter(SCOPE_OTHER);\n    }\n\n    this.parseBlockBody(node, allowDirectives, false, types.braceR, afterBlockParse);\n\n    if (createNewLexicalScope) {\n      this.scope.exit();\n    }\n\n    return this.finishNode(node, \"BlockStatement\");\n  }\n\n  isValidDirective(stmt) {\n    return stmt.type === \"ExpressionStatement\" && stmt.expression.type === \"StringLiteral\" && !stmt.expression.extra.parenthesized;\n  }\n\n  parseBlockBody(node, allowDirectives, topLevel, end, afterBlockParse) {\n    const body = node.body = [];\n    const directives = node.directives = [];\n    this.parseBlockOrModuleBlockBody(body, allowDirectives ? directives : undefined, topLevel, end, afterBlockParse);\n  }\n\n  parseBlockOrModuleBlockBody(body, directives, topLevel, end, afterBlockParse) {\n    const oldStrict = this.state.strict;\n    let hasStrictModeDirective = false;\n    let parsedNonDirective = false;\n\n    while (!this.match(end)) {\n      const stmt = this.parseStatement(null, topLevel);\n\n      if (directives && !parsedNonDirective) {\n        if (this.isValidDirective(stmt)) {\n          const directive = this.stmtToDirective(stmt);\n          directives.push(directive);\n\n          if (!hasStrictModeDirective && directive.value.value === \"use strict\") {\n            hasStrictModeDirective = true;\n            this.setStrict(true);\n          }\n\n          continue;\n        }\n\n        parsedNonDirective = true;\n        this.state.strictErrors.clear();\n      }\n\n      body.push(stmt);\n    }\n\n    if (afterBlockParse) {\n      afterBlockParse.call(this, hasStrictModeDirective);\n    }\n\n    if (!oldStrict) {\n      this.setStrict(false);\n    }\n\n    this.next();\n  }\n\n  parseFor(node, init) {\n    node.init = init;\n    this.semicolon(false);\n    node.test = this.match(types.semi) ? null : this.parseExpression();\n    this.semicolon(false);\n    node.update = this.match(types.parenR) ? null : this.parseExpression();\n    this.expect(types.parenR);\n    node.body = this.withTopicForbiddingContext(() => this.parseStatement(\"for\"));\n    this.scope.exit();\n    this.state.labels.pop();\n    return this.finishNode(node, \"ForStatement\");\n  }\n\n  parseForIn(node, init, awaitAt) {\n    const isForIn = this.match(types._in);\n    this.next();\n\n    if (isForIn) {\n      if (awaitAt > -1) this.unexpected(awaitAt);\n    } else {\n      node.await = awaitAt > -1;\n    }\n\n    if (init.type === \"VariableDeclaration\" && init.declarations[0].init != null && (!isForIn || this.state.strict || init.kind !== \"var\" || init.declarations[0].id.type !== \"Identifier\")) {\n      this.raise(init.start, ErrorMessages.ForInOfLoopInitializer, isForIn ? \"for-in\" : \"for-of\");\n    } else if (init.type === \"AssignmentPattern\") {\n      this.raise(init.start, ErrorMessages.InvalidLhs, \"for-loop\");\n    }\n\n    node.left = init;\n    node.right = isForIn ? this.parseExpression() : this.parseMaybeAssignAllowIn();\n    this.expect(types.parenR);\n    node.body = this.withTopicForbiddingContext(() => this.parseStatement(\"for\"));\n    this.scope.exit();\n    this.state.labels.pop();\n    return this.finishNode(node, isForIn ? \"ForInStatement\" : \"ForOfStatement\");\n  }\n\n  parseVar(node, isFor, kind) {\n    const declarations = node.declarations = [];\n    const isTypescript = this.hasPlugin(\"typescript\");\n    node.kind = kind;\n\n    for (;;) {\n      const decl = this.startNode();\n      this.parseVarId(decl, kind);\n\n      if (this.eat(types.eq)) {\n        decl.init = isFor ? this.parseMaybeAssignDisallowIn() : this.parseMaybeAssignAllowIn();\n      } else {\n        if (kind === \"const\" && !(this.match(types._in) || this.isContextual(\"of\"))) {\n          if (!isTypescript) {\n            this.raise(this.state.lastTokEnd, ErrorMessages.DeclarationMissingInitializer, \"Const declarations\");\n          }\n        } else if (decl.id.type !== \"Identifier\" && !(isFor && (this.match(types._in) || this.isContextual(\"of\")))) {\n          this.raise(this.state.lastTokEnd, ErrorMessages.DeclarationMissingInitializer, \"Complex binding patterns\");\n        }\n\n        decl.init = null;\n      }\n\n      declarations.push(this.finishNode(decl, \"VariableDeclarator\"));\n      if (!this.eat(types.comma)) break;\n    }\n\n    return node;\n  }\n\n  parseVarId(decl, kind) {\n    decl.id = this.parseBindingAtom();\n    this.checkLVal(decl.id, \"variable declaration\", kind === \"var\" ? BIND_VAR : BIND_LEXICAL, undefined, kind !== \"var\");\n  }\n\n  parseFunction(node, statement = FUNC_NO_FLAGS, isAsync = false) {\n    const isStatement = statement & FUNC_STATEMENT;\n    const isHangingStatement = statement & FUNC_HANGING_STATEMENT;\n    const requireId = !!isStatement && !(statement & FUNC_NULLABLE_ID);\n    this.initFunction(node, isAsync);\n\n    if (this.match(types.star) && isHangingStatement) {\n      this.raise(this.state.start, ErrorMessages.GeneratorInSingleStatementContext);\n    }\n\n    node.generator = this.eat(types.star);\n\n    if (isStatement) {\n      node.id = this.parseFunctionId(requireId);\n    }\n\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n    this.state.maybeInArrowParameters = false;\n    this.scope.enter(SCOPE_FUNCTION);\n    this.prodParam.enter(functionFlags(isAsync, node.generator));\n\n    if (!isStatement) {\n      node.id = this.parseFunctionId();\n    }\n\n    this.parseFunctionParams(node, false);\n    this.withTopicForbiddingContext(() => {\n      this.parseFunctionBodyAndFinish(node, isStatement ? \"FunctionDeclaration\" : \"FunctionExpression\");\n    });\n    this.prodParam.exit();\n    this.scope.exit();\n\n    if (isStatement && !isHangingStatement) {\n      this.registerFunctionStatementId(node);\n    }\n\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n    return node;\n  }\n\n  parseFunctionId(requireId) {\n    return requireId || this.match(types.name) ? this.parseIdentifier() : null;\n  }\n\n  parseFunctionParams(node, allowModifiers) {\n    this.expect(types.parenL);\n    this.expressionScope.enter(newParameterDeclarationScope());\n    node.params = this.parseBindingList(types.parenR, 41, false, allowModifiers);\n    this.expressionScope.exit();\n  }\n\n  registerFunctionStatementId(node) {\n    if (!node.id) return;\n    this.scope.declareName(node.id.name, this.state.strict || node.generator || node.async ? this.scope.treatFunctionsAsVar ? BIND_VAR : BIND_LEXICAL : BIND_FUNCTION, node.id.start);\n  }\n\n  parseClass(node, isStatement, optionalId) {\n    this.next();\n    this.takeDecorators(node);\n    const oldStrict = this.state.strict;\n    this.state.strict = true;\n    this.parseClassId(node, isStatement, optionalId);\n    this.parseClassSuper(node);\n    node.body = this.parseClassBody(!!node.superClass, oldStrict);\n    return this.finishNode(node, isStatement ? \"ClassDeclaration\" : \"ClassExpression\");\n  }\n\n  isClassProperty() {\n    return this.match(types.eq) || this.match(types.semi) || this.match(types.braceR);\n  }\n\n  isClassMethod() {\n    return this.match(types.parenL);\n  }\n\n  isNonstaticConstructor(method) {\n    return !method.computed && !method.static && (method.key.name === \"constructor\" || method.key.value === \"constructor\");\n  }\n\n  parseClassBody(constructorAllowsSuper, oldStrict) {\n    this.classScope.enter();\n    const state = {\n      constructorAllowsSuper,\n      hadConstructor: false\n    };\n    let decorators = [];\n    const classBody = this.startNode();\n    classBody.body = [];\n    this.expect(types.braceL);\n    this.withTopicForbiddingContext(() => {\n      while (!this.match(types.braceR)) {\n        if (this.eat(types.semi)) {\n          if (decorators.length > 0) {\n            throw this.raise(this.state.lastTokEnd, ErrorMessages.DecoratorSemicolon);\n          }\n\n          continue;\n        }\n\n        if (this.match(types.at)) {\n          decorators.push(this.parseDecorator());\n          continue;\n        }\n\n        const member = this.startNode();\n\n        if (decorators.length) {\n          member.decorators = decorators;\n          this.resetStartLocationFromNode(member, decorators[0]);\n          decorators = [];\n        }\n\n        this.parseClassMember(classBody, member, state);\n\n        if (member.kind === \"constructor\" && member.decorators && member.decorators.length > 0) {\n          this.raise(member.start, ErrorMessages.DecoratorConstructor);\n        }\n      }\n    });\n    this.state.strict = oldStrict;\n    this.next();\n\n    if (decorators.length) {\n      throw this.raise(this.state.start, ErrorMessages.TrailingDecorator);\n    }\n\n    this.classScope.exit();\n    return this.finishNode(classBody, \"ClassBody\");\n  }\n\n  parseClassMemberFromModifier(classBody, member) {\n    const key = this.parseIdentifier(true);\n\n    if (this.isClassMethod()) {\n      const method = member;\n      method.kind = \"method\";\n      method.computed = false;\n      method.key = key;\n      method.static = false;\n      this.pushClassMethod(classBody, method, false, false, false, false);\n      return true;\n    } else if (this.isClassProperty()) {\n      const prop = member;\n      prop.computed = false;\n      prop.key = key;\n      prop.static = false;\n      classBody.body.push(this.parseClassProperty(prop));\n      return true;\n    }\n\n    return false;\n  }\n\n  parseClassMember(classBody, member, state) {\n    const isStatic = this.isContextual(\"static\");\n\n    if (isStatic) {\n      if (this.parseClassMemberFromModifier(classBody, member)) {\n        return;\n      }\n\n      if (this.eat(types.braceL)) {\n        this.parseClassStaticBlock(classBody, member);\n        return;\n      }\n    }\n\n    this.parseClassMemberWithIsStatic(classBody, member, state, isStatic);\n  }\n\n  parseClassMemberWithIsStatic(classBody, member, state, isStatic) {\n    const publicMethod = member;\n    const privateMethod = member;\n    const publicProp = member;\n    const privateProp = member;\n    const method = publicMethod;\n    const publicMember = publicMethod;\n    member.static = isStatic;\n\n    if (this.eat(types.star)) {\n      method.kind = \"method\";\n      this.parseClassElementName(method);\n\n      if (this.isPrivateName(method.key)) {\n        this.pushClassPrivateMethod(classBody, privateMethod, true, false);\n        return;\n      }\n\n      if (this.isNonstaticConstructor(publicMethod)) {\n        this.raise(publicMethod.key.start, ErrorMessages.ConstructorIsGenerator);\n      }\n\n      this.pushClassMethod(classBody, publicMethod, true, false, false, false);\n      return;\n    }\n\n    const containsEsc = this.state.containsEsc;\n    const key = this.parseClassElementName(member);\n    const isPrivate = this.isPrivateName(key);\n    const isSimple = key.type === \"Identifier\";\n    const maybeQuestionTokenStart = this.state.start;\n    this.parsePostMemberNameModifiers(publicMember);\n\n    if (this.isClassMethod()) {\n      method.kind = \"method\";\n\n      if (isPrivate) {\n        this.pushClassPrivateMethod(classBody, privateMethod, false, false);\n        return;\n      }\n\n      const isConstructor = this.isNonstaticConstructor(publicMethod);\n      let allowsDirectSuper = false;\n\n      if (isConstructor) {\n        publicMethod.kind = \"constructor\";\n\n        if (state.hadConstructor && !this.hasPlugin(\"typescript\")) {\n          this.raise(key.start, ErrorMessages.DuplicateConstructor);\n        }\n\n        state.hadConstructor = true;\n        allowsDirectSuper = state.constructorAllowsSuper;\n      }\n\n      this.pushClassMethod(classBody, publicMethod, false, false, isConstructor, allowsDirectSuper);\n    } else if (this.isClassProperty()) {\n      if (isPrivate) {\n        this.pushClassPrivateProperty(classBody, privateProp);\n      } else {\n        this.pushClassProperty(classBody, publicProp);\n      }\n    } else if (isSimple && key.name === \"async\" && !containsEsc && !this.isLineTerminator()) {\n      const isGenerator = this.eat(types.star);\n\n      if (publicMember.optional) {\n        this.unexpected(maybeQuestionTokenStart);\n      }\n\n      method.kind = \"method\";\n      this.parseClassElementName(method);\n      this.parsePostMemberNameModifiers(publicMember);\n\n      if (this.isPrivateName(method.key)) {\n        this.pushClassPrivateMethod(classBody, privateMethod, isGenerator, true);\n      } else {\n        if (this.isNonstaticConstructor(publicMethod)) {\n          this.raise(publicMethod.key.start, ErrorMessages.ConstructorIsAsync);\n        }\n\n        this.pushClassMethod(classBody, publicMethod, isGenerator, true, false, false);\n      }\n    } else if (isSimple && (key.name === \"get\" || key.name === \"set\") && !containsEsc && !(this.match(types.star) && this.isLineTerminator())) {\n      method.kind = key.name;\n      this.parseClassElementName(publicMethod);\n\n      if (this.isPrivateName(method.key)) {\n        this.pushClassPrivateMethod(classBody, privateMethod, false, false);\n      } else {\n        if (this.isNonstaticConstructor(publicMethod)) {\n          this.raise(publicMethod.key.start, ErrorMessages.ConstructorIsAccessor);\n        }\n\n        this.pushClassMethod(classBody, publicMethod, false, false, false, false);\n      }\n\n      this.checkGetterSetterParams(publicMethod);\n    } else if (this.isLineTerminator()) {\n      if (isPrivate) {\n        this.pushClassPrivateProperty(classBody, privateProp);\n      } else {\n        this.pushClassProperty(classBody, publicProp);\n      }\n    } else {\n      this.unexpected();\n    }\n  }\n\n  parseClassElementName(member) {\n    const key = this.parsePropertyName(member, true);\n\n    if (!member.computed && member.static && (key.name === \"prototype\" || key.value === \"prototype\")) {\n      this.raise(key.start, ErrorMessages.StaticPrototype);\n    }\n\n    if (this.isPrivateName(key) && this.getPrivateNameSV(key) === \"constructor\") {\n      this.raise(key.start, ErrorMessages.ConstructorClassPrivateField);\n    }\n\n    return key;\n  }\n\n  parseClassStaticBlock(classBody, member) {\n    var _member$decorators;\n\n    this.expectPlugin(\"classStaticBlock\", member.start);\n    this.scope.enter(SCOPE_CLASS | SCOPE_STATIC_BLOCK | SCOPE_SUPER);\n    const oldLabels = this.state.labels;\n    this.state.labels = [];\n    this.prodParam.enter(PARAM);\n    const body = member.body = [];\n    this.parseBlockOrModuleBlockBody(body, undefined, false, types.braceR);\n    this.prodParam.exit();\n    this.scope.exit();\n    this.state.labels = oldLabels;\n    classBody.body.push(this.finishNode(member, \"StaticBlock\"));\n\n    if ((_member$decorators = member.decorators) != null && _member$decorators.length) {\n      this.raise(member.start, ErrorMessages.DecoratorStaticBlock);\n    }\n  }\n\n  pushClassProperty(classBody, prop) {\n    if (!prop.computed && (prop.key.name === \"constructor\" || prop.key.value === \"constructor\")) {\n      this.raise(prop.key.start, ErrorMessages.ConstructorClassField);\n    }\n\n    classBody.body.push(this.parseClassProperty(prop));\n  }\n\n  pushClassPrivateProperty(classBody, prop) {\n    this.expectPlugin(\"classPrivateProperties\", prop.key.start);\n    const node = this.parseClassPrivateProperty(prop);\n    classBody.body.push(node);\n    this.classScope.declarePrivateName(this.getPrivateNameSV(node.key), CLASS_ELEMENT_OTHER, node.key.start);\n  }\n\n  pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper) {\n    classBody.body.push(this.parseMethod(method, isGenerator, isAsync, isConstructor, allowsDirectSuper, \"ClassMethod\", true));\n  }\n\n  pushClassPrivateMethod(classBody, method, isGenerator, isAsync) {\n    this.expectPlugin(\"classPrivateMethods\", method.key.start);\n    const node = this.parseMethod(method, isGenerator, isAsync, false, false, \"ClassPrivateMethod\", true);\n    classBody.body.push(node);\n    const kind = node.kind === \"get\" ? node.static ? CLASS_ELEMENT_STATIC_GETTER : CLASS_ELEMENT_INSTANCE_GETTER : node.kind === \"set\" ? node.static ? CLASS_ELEMENT_STATIC_SETTER : CLASS_ELEMENT_INSTANCE_SETTER : CLASS_ELEMENT_OTHER;\n    this.classScope.declarePrivateName(this.getPrivateNameSV(node.key), kind, node.key.start);\n  }\n\n  parsePostMemberNameModifiers(methodOrProp) {}\n\n  parseClassPrivateProperty(node) {\n    this.parseInitializer(node);\n    this.semicolon();\n    return this.finishNode(node, \"ClassPrivateProperty\");\n  }\n\n  parseClassProperty(node) {\n    if (!node.typeAnnotation || this.match(types.eq)) {\n      this.expectPlugin(\"classProperties\");\n    }\n\n    this.parseInitializer(node);\n    this.semicolon();\n    return this.finishNode(node, \"ClassProperty\");\n  }\n\n  parseInitializer(node) {\n    this.scope.enter(SCOPE_CLASS | SCOPE_SUPER);\n    this.expressionScope.enter(newExpressionScope());\n    this.prodParam.enter(PARAM);\n    node.value = this.eat(types.eq) ? this.parseMaybeAssignAllowIn() : null;\n    this.expressionScope.exit();\n    this.prodParam.exit();\n    this.scope.exit();\n  }\n\n  parseClassId(node, isStatement, optionalId, bindingType = BIND_CLASS) {\n    if (this.match(types.name)) {\n      node.id = this.parseIdentifier();\n\n      if (isStatement) {\n        this.checkLVal(node.id, \"class name\", bindingType);\n      }\n    } else {\n      if (optionalId || !isStatement) {\n        node.id = null;\n      } else {\n        this.unexpected(null, ErrorMessages.MissingClassName);\n      }\n    }\n  }\n\n  parseClassSuper(node) {\n    node.superClass = this.eat(types._extends) ? this.parseExprSubscripts() : null;\n  }\n\n  parseExport(node) {\n    const hasDefault = this.maybeParseExportDefaultSpecifier(node);\n    const parseAfterDefault = !hasDefault || this.eat(types.comma);\n    const hasStar = parseAfterDefault && this.eatExportStar(node);\n    const hasNamespace = hasStar && this.maybeParseExportNamespaceSpecifier(node);\n    const parseAfterNamespace = parseAfterDefault && (!hasNamespace || this.eat(types.comma));\n    const isFromRequired = hasDefault || hasStar;\n\n    if (hasStar && !hasNamespace) {\n      if (hasDefault) this.unexpected();\n      this.parseExportFrom(node, true);\n      return this.finishNode(node, \"ExportAllDeclaration\");\n    }\n\n    const hasSpecifiers = this.maybeParseExportNamedSpecifiers(node);\n\n    if (hasDefault && parseAfterDefault && !hasStar && !hasSpecifiers || hasNamespace && parseAfterNamespace && !hasSpecifiers) {\n      throw this.unexpected(null, types.braceL);\n    }\n\n    let hasDeclaration;\n\n    if (isFromRequired || hasSpecifiers) {\n      hasDeclaration = false;\n      this.parseExportFrom(node, isFromRequired);\n    } else {\n      hasDeclaration = this.maybeParseExportDeclaration(node);\n    }\n\n    if (isFromRequired || hasSpecifiers || hasDeclaration) {\n      this.checkExport(node, true, false, !!node.source);\n      return this.finishNode(node, \"ExportNamedDeclaration\");\n    }\n\n    if (this.eat(types._default)) {\n      node.declaration = this.parseExportDefaultExpression();\n      this.checkExport(node, true, true);\n      return this.finishNode(node, \"ExportDefaultDeclaration\");\n    }\n\n    throw this.unexpected(null, types.braceL);\n  }\n\n  eatExportStar(node) {\n    return this.eat(types.star);\n  }\n\n  maybeParseExportDefaultSpecifier(node) {\n    if (this.isExportDefaultSpecifier()) {\n      this.expectPlugin(\"exportDefaultFrom\");\n      const specifier = this.startNode();\n      specifier.exported = this.parseIdentifier(true);\n      node.specifiers = [this.finishNode(specifier, \"ExportDefaultSpecifier\")];\n      return true;\n    }\n\n    return false;\n  }\n\n  maybeParseExportNamespaceSpecifier(node) {\n    if (this.isContextual(\"as\")) {\n      if (!node.specifiers) node.specifiers = [];\n      const specifier = this.startNodeAt(this.state.lastTokStart, this.state.lastTokStartLoc);\n      this.next();\n      specifier.exported = this.parseModuleExportName();\n      node.specifiers.push(this.finishNode(specifier, \"ExportNamespaceSpecifier\"));\n      return true;\n    }\n\n    return false;\n  }\n\n  maybeParseExportNamedSpecifiers(node) {\n    if (this.match(types.braceL)) {\n      if (!node.specifiers) node.specifiers = [];\n      node.specifiers.push(...this.parseExportSpecifiers());\n      node.source = null;\n      node.declaration = null;\n      return true;\n    }\n\n    return false;\n  }\n\n  maybeParseExportDeclaration(node) {\n    if (this.shouldParseExportDeclaration()) {\n      node.specifiers = [];\n      node.source = null;\n      node.declaration = this.parseExportDeclaration(node);\n      return true;\n    }\n\n    return false;\n  }\n\n  isAsyncFunction() {\n    if (!this.isContextual(\"async\")) return false;\n    const next = this.nextTokenStart();\n    return !lineBreak.test(this.input.slice(this.state.pos, next)) && this.isUnparsedContextual(next, \"function\");\n  }\n\n  parseExportDefaultExpression() {\n    const expr = this.startNode();\n    const isAsync = this.isAsyncFunction();\n\n    if (this.match(types._function) || isAsync) {\n      this.next();\n\n      if (isAsync) {\n        this.next();\n      }\n\n      return this.parseFunction(expr, FUNC_STATEMENT | FUNC_NULLABLE_ID, isAsync);\n    } else if (this.match(types._class)) {\n      return this.parseClass(expr, true, true);\n    } else if (this.match(types.at)) {\n      if (this.hasPlugin(\"decorators\") && this.getPluginOption(\"decorators\", \"decoratorsBeforeExport\")) {\n        this.raise(this.state.start, ErrorMessages.DecoratorBeforeExport);\n      }\n\n      this.parseDecorators(false);\n      return this.parseClass(expr, true, true);\n    } else if (this.match(types._const) || this.match(types._var) || this.isLet()) {\n      throw this.raise(this.state.start, ErrorMessages.UnsupportedDefaultExport);\n    } else {\n      const res = this.parseMaybeAssignAllowIn();\n      this.semicolon();\n      return res;\n    }\n  }\n\n  parseExportDeclaration(node) {\n    return this.parseStatement(null);\n  }\n\n  isExportDefaultSpecifier() {\n    if (this.match(types.name)) {\n      const value = this.state.value;\n\n      if (value === \"async\" && !this.state.containsEsc || value === \"let\") {\n        return false;\n      }\n\n      if ((value === \"type\" || value === \"interface\") && !this.state.containsEsc) {\n        const l = this.lookahead();\n\n        if (l.type === types.name && l.value !== \"from\" || l.type === types.braceL) {\n          this.expectOnePlugin([\"flow\", \"typescript\"]);\n          return false;\n        }\n      }\n    } else if (!this.match(types._default)) {\n      return false;\n    }\n\n    const next = this.nextTokenStart();\n    const hasFrom = this.isUnparsedContextual(next, \"from\");\n\n    if (this.input.charCodeAt(next) === 44 || this.match(types.name) && hasFrom) {\n      return true;\n    }\n\n    if (this.match(types._default) && hasFrom) {\n      const nextAfterFrom = this.input.charCodeAt(this.nextTokenStartSince(next + 4));\n      return nextAfterFrom === 34 || nextAfterFrom === 39;\n    }\n\n    return false;\n  }\n\n  parseExportFrom(node, expect) {\n    if (this.eatContextual(\"from\")) {\n      node.source = this.parseImportSource();\n      this.checkExport(node);\n      const assertions = this.maybeParseImportAssertions();\n\n      if (assertions) {\n        node.assertions = assertions;\n      }\n    } else {\n      if (expect) {\n        this.unexpected();\n      } else {\n        node.source = null;\n      }\n    }\n\n    this.semicolon();\n  }\n\n  shouldParseExportDeclaration() {\n    if (this.match(types.at)) {\n      this.expectOnePlugin([\"decorators\", \"decorators-legacy\"]);\n\n      if (this.hasPlugin(\"decorators\")) {\n        if (this.getPluginOption(\"decorators\", \"decoratorsBeforeExport\")) {\n          this.unexpected(this.state.start, ErrorMessages.DecoratorBeforeExport);\n        } else {\n          return true;\n        }\n      }\n    }\n\n    return this.state.type.keyword === \"var\" || this.state.type.keyword === \"const\" || this.state.type.keyword === \"function\" || this.state.type.keyword === \"class\" || this.isLet() || this.isAsyncFunction();\n  }\n\n  checkExport(node, checkNames, isDefault, isFrom) {\n    if (checkNames) {\n      if (isDefault) {\n        this.checkDuplicateExports(node, \"default\");\n\n        if (this.hasPlugin(\"exportDefaultFrom\")) {\n          var _declaration$extra;\n\n          const declaration = node.declaration;\n\n          if (declaration.type === \"Identifier\" && declaration.name === \"from\" && declaration.end - declaration.start === 4 && !((_declaration$extra = declaration.extra) != null && _declaration$extra.parenthesized)) {\n            this.raise(declaration.start, ErrorMessages.ExportDefaultFromAsIdentifier);\n          }\n        }\n      } else if (node.specifiers && node.specifiers.length) {\n        for (const specifier of node.specifiers) {\n          const {\n            exported\n          } = specifier;\n          const exportedName = exported.type === \"Identifier\" ? exported.name : exported.value;\n          this.checkDuplicateExports(specifier, exportedName);\n\n          if (!isFrom && specifier.local) {\n            const {\n              local\n            } = specifier;\n\n            if (local.type === \"StringLiteral\") {\n              this.raise(specifier.start, ErrorMessages.ExportBindingIsString, local.value, exportedName);\n            } else {\n              this.checkReservedWord(local.name, local.start, true, false);\n              this.scope.checkLocalExport(local);\n            }\n          }\n        }\n      } else if (node.declaration) {\n        if (node.declaration.type === \"FunctionDeclaration\" || node.declaration.type === \"ClassDeclaration\") {\n          const id = node.declaration.id;\n          if (!id) throw new Error(\"Assertion failure\");\n          this.checkDuplicateExports(node, id.name);\n        } else if (node.declaration.type === \"VariableDeclaration\") {\n          for (const declaration of node.declaration.declarations) {\n            this.checkDeclaration(declaration.id);\n          }\n        }\n      }\n    }\n\n    const currentContextDecorators = this.state.decoratorStack[this.state.decoratorStack.length - 1];\n\n    if (currentContextDecorators.length) {\n      throw this.raise(node.start, ErrorMessages.UnsupportedDecoratorExport);\n    }\n  }\n\n  checkDeclaration(node) {\n    if (node.type === \"Identifier\") {\n      this.checkDuplicateExports(node, node.name);\n    } else if (node.type === \"ObjectPattern\") {\n      for (const prop of node.properties) {\n        this.checkDeclaration(prop);\n      }\n    } else if (node.type === \"ArrayPattern\") {\n      for (const elem of node.elements) {\n        if (elem) {\n          this.checkDeclaration(elem);\n        }\n      }\n    } else if (node.type === \"ObjectProperty\") {\n      this.checkDeclaration(node.value);\n    } else if (node.type === \"RestElement\") {\n      this.checkDeclaration(node.argument);\n    } else if (node.type === \"AssignmentPattern\") {\n      this.checkDeclaration(node.left);\n    }\n  }\n\n  checkDuplicateExports(node, name) {\n    if (this.state.exportedIdentifiers.indexOf(name) > -1) {\n      this.raise(node.start, name === \"default\" ? ErrorMessages.DuplicateDefaultExport : ErrorMessages.DuplicateExport, name);\n    }\n\n    this.state.exportedIdentifiers.push(name);\n  }\n\n  parseExportSpecifiers() {\n    const nodes = [];\n    let first = true;\n    this.expect(types.braceL);\n\n    while (!this.eat(types.braceR)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(types.comma);\n        if (this.eat(types.braceR)) break;\n      }\n\n      const node = this.startNode();\n      node.local = this.parseModuleExportName();\n      node.exported = this.eatContextual(\"as\") ? this.parseModuleExportName() : node.local.__clone();\n      nodes.push(this.finishNode(node, \"ExportSpecifier\"));\n    }\n\n    return nodes;\n  }\n\n  parseModuleExportName() {\n    if (this.match(types.string)) {\n      this.expectPlugin(\"moduleStringNames\");\n      const result = this.parseLiteral(this.state.value, \"StringLiteral\");\n      const surrogate = result.value.match(loneSurrogate);\n\n      if (surrogate) {\n        this.raise(result.start, ErrorMessages.ModuleExportNameHasLoneSurrogate, surrogate[0].charCodeAt(0).toString(16));\n      }\n\n      return result;\n    }\n\n    return this.parseIdentifier(true);\n  }\n\n  parseImport(node) {\n    node.specifiers = [];\n\n    if (!this.match(types.string)) {\n      const hasDefault = this.maybeParseDefaultImportSpecifier(node);\n      const parseNext = !hasDefault || this.eat(types.comma);\n      const hasStar = parseNext && this.maybeParseStarImportSpecifier(node);\n      if (parseNext && !hasStar) this.parseNamedImportSpecifiers(node);\n      this.expectContextual(\"from\");\n    }\n\n    node.source = this.parseImportSource();\n    const assertions = this.maybeParseImportAssertions();\n\n    if (assertions) {\n      node.assertions = assertions;\n    } else {\n        const attributes = this.maybeParseModuleAttributes();\n\n        if (attributes) {\n          node.attributes = attributes;\n        }\n      }\n\n    this.semicolon();\n    return this.finishNode(node, \"ImportDeclaration\");\n  }\n\n  parseImportSource() {\n    if (!this.match(types.string)) this.unexpected();\n    return this.parseExprAtom();\n  }\n\n  shouldParseDefaultImport(node) {\n    return this.match(types.name);\n  }\n\n  parseImportSpecifierLocal(node, specifier, type, contextDescription) {\n    specifier.local = this.parseIdentifier();\n    this.checkLVal(specifier.local, contextDescription, BIND_LEXICAL);\n    node.specifiers.push(this.finishNode(specifier, type));\n  }\n\n  parseAssertEntries() {\n    const attrs = [];\n    const attrNames = new Set();\n\n    do {\n      if (this.match(types.braceR)) {\n        break;\n      }\n\n      const node = this.startNode();\n      const keyName = this.state.value;\n\n      if (this.match(types.string)) {\n        node.key = this.parseLiteral(keyName, \"StringLiteral\");\n      } else {\n        node.key = this.parseIdentifier(true);\n      }\n\n      this.expect(types.colon);\n\n      if (keyName !== \"type\") {\n        this.raise(node.key.start, ErrorMessages.ModuleAttributeDifferentFromType, keyName);\n      }\n\n      if (attrNames.has(keyName)) {\n        this.raise(node.key.start, ErrorMessages.ModuleAttributesWithDuplicateKeys, keyName);\n      }\n\n      attrNames.add(keyName);\n\n      if (!this.match(types.string)) {\n        throw this.unexpected(this.state.start, ErrorMessages.ModuleAttributeInvalidValue);\n      }\n\n      node.value = this.parseLiteral(this.state.value, \"StringLiteral\");\n      this.finishNode(node, \"ImportAttribute\");\n      attrs.push(node);\n    } while (this.eat(types.comma));\n\n    return attrs;\n  }\n\n  maybeParseModuleAttributes() {\n    if (this.match(types._with) && !this.hasPrecedingLineBreak()) {\n      this.expectPlugin(\"moduleAttributes\");\n      this.next();\n    } else {\n      if (this.hasPlugin(\"moduleAttributes\")) return [];\n      return null;\n    }\n\n    const attrs = [];\n    const attributes = new Set();\n\n    do {\n      const node = this.startNode();\n      node.key = this.parseIdentifier(true);\n\n      if (node.key.name !== \"type\") {\n        this.raise(node.key.start, ErrorMessages.ModuleAttributeDifferentFromType, node.key.name);\n      }\n\n      if (attributes.has(node.key.name)) {\n        this.raise(node.key.start, ErrorMessages.ModuleAttributesWithDuplicateKeys, node.key.name);\n      }\n\n      attributes.add(node.key.name);\n      this.expect(types.colon);\n\n      if (!this.match(types.string)) {\n        throw this.unexpected(this.state.start, ErrorMessages.ModuleAttributeInvalidValue);\n      }\n\n      node.value = this.parseLiteral(this.state.value, \"StringLiteral\");\n      this.finishNode(node, \"ImportAttribute\");\n      attrs.push(node);\n    } while (this.eat(types.comma));\n\n    return attrs;\n  }\n\n  maybeParseImportAssertions() {\n    if (this.isContextual(\"assert\") && !this.hasPrecedingLineBreak()) {\n      this.expectPlugin(\"importAssertions\");\n      this.next();\n    } else {\n      if (this.hasPlugin(\"importAssertions\")) return [];\n      return null;\n    }\n\n    this.eat(types.braceL);\n    const attrs = this.parseAssertEntries();\n    this.eat(types.braceR);\n    return attrs;\n  }\n\n  maybeParseDefaultImportSpecifier(node) {\n    if (this.shouldParseDefaultImport(node)) {\n      this.parseImportSpecifierLocal(node, this.startNode(), \"ImportDefaultSpecifier\", \"default import specifier\");\n      return true;\n    }\n\n    return false;\n  }\n\n  maybeParseStarImportSpecifier(node) {\n    if (this.match(types.star)) {\n      const specifier = this.startNode();\n      this.next();\n      this.expectContextual(\"as\");\n      this.parseImportSpecifierLocal(node, specifier, \"ImportNamespaceSpecifier\", \"import namespace specifier\");\n      return true;\n    }\n\n    return false;\n  }\n\n  parseNamedImportSpecifiers(node) {\n    let first = true;\n    this.expect(types.braceL);\n\n    while (!this.eat(types.braceR)) {\n      if (first) {\n        first = false;\n      } else {\n        if (this.eat(types.colon)) {\n          throw this.raise(this.state.start, ErrorMessages.DestructureNamedImport);\n        }\n\n        this.expect(types.comma);\n        if (this.eat(types.braceR)) break;\n      }\n\n      this.parseImportSpecifier(node);\n    }\n  }\n\n  parseImportSpecifier(node) {\n    const specifier = this.startNode();\n    specifier.imported = this.parseModuleExportName();\n\n    if (this.eatContextual(\"as\")) {\n      specifier.local = this.parseIdentifier();\n    } else {\n      const {\n        imported\n      } = specifier;\n\n      if (imported.type === \"StringLiteral\") {\n        throw this.raise(specifier.start, ErrorMessages.ImportBindingIsString, imported.value);\n      }\n\n      this.checkReservedWord(imported.name, specifier.start, true, true);\n      specifier.local = imported.__clone();\n    }\n\n    this.checkLVal(specifier.local, \"import specifier\", BIND_LEXICAL);\n    node.specifiers.push(this.finishNode(specifier, \"ImportSpecifier\"));\n  }\n\n}\n\nclass Parser extends StatementParser {\n  constructor(options, input) {\n    options = getOptions(options);\n    super(options, input);\n    this.options = options;\n    this.initializeScopes();\n    this.plugins = pluginsMap(this.options.plugins);\n    this.filename = options.sourceFilename;\n  }\n\n  getScopeHandler() {\n    return ScopeHandler;\n  }\n\n  parse() {\n    this.enterInitialScopes();\n    const file = this.startNode();\n    const program = this.startNode();\n    this.nextToken();\n    file.errors = null;\n    this.parseTopLevel(file, program);\n    file.errors = this.state.errors;\n    return file;\n  }\n\n}\n\nfunction pluginsMap(plugins) {\n  const pluginMap = new Map();\n\n  for (const plugin of plugins) {\n    const [name, options] = Array.isArray(plugin) ? plugin : [plugin, {}];\n    if (!pluginMap.has(name)) pluginMap.set(name, options || {});\n  }\n\n  return pluginMap;\n}\n\nfunction parse(input, options) {\n  var _options;\n\n  if (((_options = options) == null ? void 0 : _options.sourceType) === \"unambiguous\") {\n    options = Object.assign({}, options);\n\n    try {\n      options.sourceType = \"module\";\n      const parser = getParser(options, input);\n      const ast = parser.parse();\n\n      if (parser.sawUnambiguousESM) {\n        return ast;\n      }\n\n      if (parser.ambiguousScriptDifferentAst) {\n        try {\n          options.sourceType = \"script\";\n          return getParser(options, input).parse();\n        } catch (_unused) {}\n      } else {\n        ast.program.sourceType = \"script\";\n      }\n\n      return ast;\n    } catch (moduleError) {\n      try {\n        options.sourceType = \"script\";\n        return getParser(options, input).parse();\n      } catch (_unused2) {}\n\n      throw moduleError;\n    }\n  } else {\n    return getParser(options, input).parse();\n  }\n}\nfunction parseExpression(input, options) {\n  const parser = getParser(options, input);\n\n  if (parser.options.strictMode) {\n    parser.state.strict = true;\n  }\n\n  return parser.getExpression();\n}\n\nfunction getParser(options, input) {\n  let cls = Parser;\n\n  if (options != null && options.plugins) {\n    validatePlugins(options.plugins);\n    cls = getParserClass(options.plugins);\n  }\n\n  return new cls(options, input);\n}\n\nconst parserClassCache = {};\n\nfunction getParserClass(pluginsFromOptions) {\n  const pluginList = mixinPluginNames.filter(name => hasPlugin(pluginsFromOptions, name));\n  const key = pluginList.join(\"/\");\n  let cls = parserClassCache[key];\n\n  if (!cls) {\n    cls = Parser;\n\n    for (const plugin of pluginList) {\n      cls = mixinPlugins[plugin](cls);\n    }\n\n    parserClassCache[key] = cls;\n  }\n\n  return cls;\n}\n\nexports.parse = parse;\nexports.parseExpression = parseExpression;\nexports.tokTypes = types;\n//# sourceMappingURL=index.js.map\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.codeFrameColumns = codeFrameColumns;\nexports.default = _default;\n\nvar _highlight = _interopRequireWildcard(require(\"@babel/highlight\"));\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nlet deprecationWarningShown = false;\n\nfunction getDefs(chalk) {\n  return {\n    gutter: chalk.grey,\n    marker: chalk.red.bold,\n    message: chalk.red.bold\n  };\n}\n\nconst NEWLINE = /\\r\\n|[\\n\\r\\u2028\\u2029]/;\n\nfunction getMarkerLines(loc, source, opts) {\n  const startLoc = Object.assign({\n    column: 0,\n    line: -1\n  }, loc.start);\n  const endLoc = Object.assign({}, startLoc, loc.end);\n  const {\n    linesAbove = 2,\n    linesBelow = 3\n  } = opts || {};\n  const startLine = startLoc.line;\n  const startColumn = startLoc.column;\n  const endLine = endLoc.line;\n  const endColumn = endLoc.column;\n  let start = Math.max(startLine - (linesAbove + 1), 0);\n  let end = Math.min(source.length, endLine + linesBelow);\n\n  if (startLine === -1) {\n    start = 0;\n  }\n\n  if (endLine === -1) {\n    end = source.length;\n  }\n\n  const lineDiff = endLine - startLine;\n  const markerLines = {};\n\n  if (lineDiff) {\n    for (let i = 0; i <= lineDiff; i++) {\n      const lineNumber = i + startLine;\n\n      if (!startColumn) {\n        markerLines[lineNumber] = true;\n      } else if (i === 0) {\n        const sourceLength = source[lineNumber - 1].length;\n        markerLines[lineNumber] = [startColumn, sourceLength - startColumn + 1];\n      } else if (i === lineDiff) {\n        markerLines[lineNumber] = [0, endColumn];\n      } else {\n        const sourceLength = source[lineNumber - i].length;\n        markerLines[lineNumber] = [0, sourceLength];\n      }\n    }\n  } else {\n    if (startColumn === endColumn) {\n      if (startColumn) {\n        markerLines[startLine] = [startColumn, 0];\n      } else {\n        markerLines[startLine] = true;\n      }\n    } else {\n      markerLines[startLine] = [startColumn, endColumn - startColumn];\n    }\n  }\n\n  return {\n    start,\n    end,\n    markerLines\n  };\n}\n\nfunction codeFrameColumns(rawLines, loc, opts = {}) {\n  const highlighted = (opts.highlightCode || opts.forceColor) && (0, _highlight.shouldHighlight)(opts);\n  const chalk = (0, _highlight.getChalk)(opts);\n  const defs = getDefs(chalk);\n\n  const maybeHighlight = (chalkFn, string) => {\n    return highlighted ? chalkFn(string) : string;\n  };\n\n  const lines = rawLines.split(NEWLINE);\n  const {\n    start,\n    end,\n    markerLines\n  } = getMarkerLines(loc, lines, opts);\n  const hasColumns = loc.start && typeof loc.start.column === \"number\";\n  const numberMaxWidth = String(end).length;\n  const highlightedLines = highlighted ? (0, _highlight.default)(rawLines, opts) : rawLines;\n  let frame = highlightedLines.split(NEWLINE).slice(start, end).map((line, index) => {\n    const number = start + 1 + index;\n    const paddedNumber = ` ${number}`.slice(-numberMaxWidth);\n    const gutter = ` ${paddedNumber} |`;\n    const hasMarker = markerLines[number];\n    const lastMarkerLine = !markerLines[number + 1];\n\n    if (hasMarker) {\n      let markerLine = \"\";\n\n      if (Array.isArray(hasMarker)) {\n        const markerSpacing = line.slice(0, Math.max(hasMarker[0] - 1, 0)).replace(/[^\\t]/g, \" \");\n        const numberOfMarkers = hasMarker[1] || 1;\n        markerLine = [\"\\n \", maybeHighlight(defs.gutter, gutter.replace(/\\d/g, \" \")), \" \", markerSpacing, maybeHighlight(defs.marker, \"^\").repeat(numberOfMarkers)].join(\"\");\n\n        if (lastMarkerLine && opts.message) {\n          markerLine += \" \" + maybeHighlight(defs.message, opts.message);\n        }\n      }\n\n      return [maybeHighlight(defs.marker, \">\"), maybeHighlight(defs.gutter, gutter), line.length > 0 ? ` ${line}` : \"\", markerLine].join(\"\");\n    } else {\n      return ` ${maybeHighlight(defs.gutter, gutter)}${line.length > 0 ? ` ${line}` : \"\"}`;\n    }\n  }).join(\"\\n\");\n\n  if (opts.message && !hasColumns) {\n    frame = `${\" \".repeat(numberMaxWidth + 1)}${opts.message}\\n${frame}`;\n  }\n\n  if (highlighted) {\n    return chalk.reset(frame);\n  } else {\n    return frame;\n  }\n}\n\nfunction _default(rawLines, lineNumber, colNumber, opts = {}) {\n  if (!deprecationWarningShown) {\n    deprecationWarningShown = true;\n    const message = \"Passing lineNumber and colNumber is deprecated to @babel/code-frame. Please use `codeFrameColumns`.\";\n\n    if (process.emitWarning) {\n      process.emitWarning(message, \"DeprecationWarning\");\n    } else {\n      const deprecationError = new Error(message);\n      deprecationError.name = \"DeprecationWarning\";\n      console.warn(new Error(message));\n    }\n  }\n\n  colNumber = Math.max(colNumber, 0);\n  const location = {\n    start: {\n      column: colNumber,\n      line: lineNumber\n    }\n  };\n  return codeFrameColumns(rawLines, location, opts);\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.merge = merge;\nexports.validate = validate;\nexports.normalizeReplacements = normalizeReplacements;\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction merge(a, b) {\n  const {\n    placeholderWhitelist = a.placeholderWhitelist,\n    placeholderPattern = a.placeholderPattern,\n    preserveComments = a.preserveComments,\n    syntacticPlaceholders = a.syntacticPlaceholders\n  } = b;\n  return {\n    parser: Object.assign({}, a.parser, b.parser),\n    placeholderWhitelist,\n    placeholderPattern,\n    preserveComments,\n    syntacticPlaceholders\n  };\n}\n\nfunction validate(opts) {\n  if (opts != null && typeof opts !== \"object\") {\n    throw new Error(\"Unknown template options.\");\n  }\n\n  const _ref = opts || {},\n        {\n    placeholderWhitelist,\n    placeholderPattern,\n    preserveComments,\n    syntacticPlaceholders\n  } = _ref,\n        parser = _objectWithoutPropertiesLoose(_ref, [\"placeholderWhitelist\", \"placeholderPattern\", \"preserveComments\", \"syntacticPlaceholders\"]);\n\n  if (placeholderWhitelist != null && !(placeholderWhitelist instanceof Set)) {\n    throw new Error(\"'.placeholderWhitelist' must be a Set, null, or undefined\");\n  }\n\n  if (placeholderPattern != null && !(placeholderPattern instanceof RegExp) && placeholderPattern !== false) {\n    throw new Error(\"'.placeholderPattern' must be a RegExp, false, null, or undefined\");\n  }\n\n  if (preserveComments != null && typeof preserveComments !== \"boolean\") {\n    throw new Error(\"'.preserveComments' must be a boolean, null, or undefined\");\n  }\n\n  if (syntacticPlaceholders != null && typeof syntacticPlaceholders !== \"boolean\") {\n    throw new Error(\"'.syntacticPlaceholders' must be a boolean, null, or undefined\");\n  }\n\n  if (syntacticPlaceholders === true && (placeholderWhitelist != null || placeholderPattern != null)) {\n    throw new Error(\"'.placeholderWhitelist' and '.placeholderPattern' aren't compatible\" + \" with '.syntacticPlaceholders: true'\");\n  }\n\n  return {\n    parser,\n    placeholderWhitelist: placeholderWhitelist || undefined,\n    placeholderPattern: placeholderPattern == null ? undefined : placeholderPattern,\n    preserveComments: preserveComments == null ? undefined : preserveComments,\n    syntacticPlaceholders: syntacticPlaceholders == null ? undefined : syntacticPlaceholders\n  };\n}\n\nfunction normalizeReplacements(replacements) {\n  if (Array.isArray(replacements)) {\n    return replacements.reduce((acc, replacement, i) => {\n      acc[\"$\" + i] = replacement;\n      return acc;\n    }, {});\n  } else if (typeof replacements === \"object\" || replacements == null) {\n    return replacements || undefined;\n  }\n\n  throw new Error(\"Template replacements must be an array, object, null, or undefined\");\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = parseAndBuildMetadata;\n\nvar t = _interopRequireWildcard(require(\"@babel/types\"));\n\nvar _parser = require(\"@babel/parser\");\n\nvar _codeFrame = require(\"@babel/code-frame\");\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nconst PATTERN = /^[_$A-Z0-9]+$/;\n\nfunction parseAndBuildMetadata(formatter, code, opts) {\n  const {\n    placeholderWhitelist,\n    placeholderPattern,\n    preserveComments,\n    syntacticPlaceholders\n  } = opts;\n  const ast = parseWithCodeFrame(code, opts.parser, syntacticPlaceholders);\n  t.removePropertiesDeep(ast, {\n    preserveComments\n  });\n  formatter.validate(ast);\n  const syntactic = {\n    placeholders: [],\n    placeholderNames: new Set()\n  };\n  const legacy = {\n    placeholders: [],\n    placeholderNames: new Set()\n  };\n  const isLegacyRef = {\n    value: undefined\n  };\n  t.traverse(ast, placeholderVisitorHandler, {\n    syntactic,\n    legacy,\n    isLegacyRef,\n    placeholderWhitelist,\n    placeholderPattern,\n    syntacticPlaceholders\n  });\n  return Object.assign({\n    ast\n  }, isLegacyRef.value ? legacy : syntactic);\n}\n\nfunction placeholderVisitorHandler(node, ancestors, state) {\n  var _state$placeholderWhi;\n\n  let name;\n\n  if (t.isPlaceholder(node)) {\n    if (state.syntacticPlaceholders === false) {\n      throw new Error(\"%%foo%%-style placeholders can't be used when \" + \"'.syntacticPlaceholders' is false.\");\n    } else {\n      name = node.name.name;\n      state.isLegacyRef.value = false;\n    }\n  } else if (state.isLegacyRef.value === false || state.syntacticPlaceholders) {\n    return;\n  } else if (t.isIdentifier(node) || t.isJSXIdentifier(node)) {\n    name = node.name;\n    state.isLegacyRef.value = true;\n  } else if (t.isStringLiteral(node)) {\n    name = node.value;\n    state.isLegacyRef.value = true;\n  } else {\n    return;\n  }\n\n  if (!state.isLegacyRef.value && (state.placeholderPattern != null || state.placeholderWhitelist != null)) {\n    throw new Error(\"'.placeholderWhitelist' and '.placeholderPattern' aren't compatible\" + \" with '.syntacticPlaceholders: true'\");\n  }\n\n  if (state.isLegacyRef.value && (state.placeholderPattern === false || !(state.placeholderPattern || PATTERN).test(name)) && !((_state$placeholderWhi = state.placeholderWhitelist) == null ? void 0 : _state$placeholderWhi.has(name))) {\n    return;\n  }\n\n  ancestors = ancestors.slice();\n  const {\n    node: parent,\n    key\n  } = ancestors[ancestors.length - 1];\n  let type;\n\n  if (t.isStringLiteral(node) || t.isPlaceholder(node, {\n    expectedNode: \"StringLiteral\"\n  })) {\n    type = \"string\";\n  } else if (t.isNewExpression(parent) && key === \"arguments\" || t.isCallExpression(parent) && key === \"arguments\" || t.isFunction(parent) && key === \"params\") {\n    type = \"param\";\n  } else if (t.isExpressionStatement(parent) && !t.isPlaceholder(node)) {\n    type = \"statement\";\n    ancestors = ancestors.slice(0, -1);\n  } else if (t.isStatement(node) && t.isPlaceholder(node)) {\n    type = \"statement\";\n  } else {\n    type = \"other\";\n  }\n\n  const {\n    placeholders,\n    placeholderNames\n  } = state.isLegacyRef.value ? state.legacy : state.syntactic;\n  placeholders.push({\n    name,\n    type,\n    resolve: ast => resolveAncestors(ast, ancestors),\n    isDuplicate: placeholderNames.has(name)\n  });\n  placeholderNames.add(name);\n}\n\nfunction resolveAncestors(ast, ancestors) {\n  let parent = ast;\n\n  for (let i = 0; i < ancestors.length - 1; i++) {\n    const {\n      key,\n      index\n    } = ancestors[i];\n\n    if (index === undefined) {\n      parent = parent[key];\n    } else {\n      parent = parent[key][index];\n    }\n  }\n\n  const {\n    key,\n    index\n  } = ancestors[ancestors.length - 1];\n  return {\n    parent,\n    key,\n    index\n  };\n}\n\nfunction parseWithCodeFrame(code, parserOpts, syntacticPlaceholders) {\n  const plugins = (parserOpts.plugins || []).slice();\n\n  if (syntacticPlaceholders !== false) {\n    plugins.push(\"placeholders\");\n  }\n\n  parserOpts = Object.assign({\n    allowReturnOutsideFunction: true,\n    allowSuperOutsideMethod: true,\n    sourceType: \"module\"\n  }, parserOpts, {\n    plugins\n  });\n\n  try {\n    return (0, _parser.parse)(code, parserOpts);\n  } catch (err) {\n    const loc = err.loc;\n\n    if (loc) {\n      err.message += \"\\n\" + (0, _codeFrame.codeFrameColumns)(code, {\n        start: loc\n      });\n      err.code = \"BABEL_TEMPLATE_PARSE_ERROR\";\n    }\n\n    throw err;\n  }\n}","/* MIT license */\nvar cssKeywords = require('color-name');\n\n// NOTE: conversions should only return primitive values (i.e. arrays, or\n//       values that give correct `typeof` results).\n//       do not use box values types (i.e. Number(), String(), etc.)\n\nvar reverseKeywords = {};\nfor (var key in cssKeywords) {\n\tif (cssKeywords.hasOwnProperty(key)) {\n\t\treverseKeywords[cssKeywords[key]] = key;\n\t}\n}\n\nvar convert = module.exports = {\n\trgb: {channels: 3, labels: 'rgb'},\n\thsl: {channels: 3, labels: 'hsl'},\n\thsv: {channels: 3, labels: 'hsv'},\n\thwb: {channels: 3, labels: 'hwb'},\n\tcmyk: {channels: 4, labels: 'cmyk'},\n\txyz: {channels: 3, labels: 'xyz'},\n\tlab: {channels: 3, labels: 'lab'},\n\tlch: {channels: 3, labels: 'lch'},\n\thex: {channels: 1, labels: ['hex']},\n\tkeyword: {channels: 1, labels: ['keyword']},\n\tansi16: {channels: 1, labels: ['ansi16']},\n\tansi256: {channels: 1, labels: ['ansi256']},\n\thcg: {channels: 3, labels: ['h', 'c', 'g']},\n\tapple: {channels: 3, labels: ['r16', 'g16', 'b16']},\n\tgray: {channels: 1, labels: ['gray']}\n};\n\n// hide .channels and .labels properties\nfor (var model in convert) {\n\tif (convert.hasOwnProperty(model)) {\n\t\tif (!('channels' in convert[model])) {\n\t\t\tthrow new Error('missing channels property: ' + model);\n\t\t}\n\n\t\tif (!('labels' in convert[model])) {\n\t\t\tthrow new Error('missing channel labels property: ' + model);\n\t\t}\n\n\t\tif (convert[model].labels.length !== convert[model].channels) {\n\t\t\tthrow new Error('channel and label counts mismatch: ' + model);\n\t\t}\n\n\t\tvar channels = convert[model].channels;\n\t\tvar labels = convert[model].labels;\n\t\tdelete convert[model].channels;\n\t\tdelete convert[model].labels;\n\t\tObject.defineProperty(convert[model], 'channels', {value: channels});\n\t\tObject.defineProperty(convert[model], 'labels', {value: labels});\n\t}\n}\n\nconvert.rgb.hsl = function (rgb) {\n\tvar r = rgb[0] / 255;\n\tvar g = rgb[1] / 255;\n\tvar b = rgb[2] / 255;\n\tvar min = Math.min(r, g, b);\n\tvar max = Math.max(r, g, b);\n\tvar delta = max - min;\n\tvar h;\n\tvar s;\n\tvar l;\n\n\tif (max === min) {\n\t\th = 0;\n\t} else if (r === max) {\n\t\th = (g - b) / delta;\n\t} else if (g === max) {\n\t\th = 2 + (b - r) / delta;\n\t} else if (b === max) {\n\t\th = 4 + (r - g) / delta;\n\t}\n\n\th = Math.min(h * 60, 360);\n\n\tif (h < 0) {\n\t\th += 360;\n\t}\n\n\tl = (min + max) / 2;\n\n\tif (max === min) {\n\t\ts = 0;\n\t} else if (l <= 0.5) {\n\t\ts = delta / (max + min);\n\t} else {\n\t\ts = delta / (2 - max - min);\n\t}\n\n\treturn [h, s * 100, l * 100];\n};\n\nconvert.rgb.hsv = function (rgb) {\n\tvar rdif;\n\tvar gdif;\n\tvar bdif;\n\tvar h;\n\tvar s;\n\n\tvar r = rgb[0] / 255;\n\tvar g = rgb[1] / 255;\n\tvar b = rgb[2] / 255;\n\tvar v = Math.max(r, g, b);\n\tvar diff = v - Math.min(r, g, b);\n\tvar diffc = function (c) {\n\t\treturn (v - c) / 6 / diff + 1 / 2;\n\t};\n\n\tif (diff === 0) {\n\t\th = s = 0;\n\t} else {\n\t\ts = diff / v;\n\t\trdif = diffc(r);\n\t\tgdif = diffc(g);\n\t\tbdif = diffc(b);\n\n\t\tif (r === v) {\n\t\t\th = bdif - gdif;\n\t\t} else if (g === v) {\n\t\t\th = (1 / 3) + rdif - bdif;\n\t\t} else if (b === v) {\n\t\t\th = (2 / 3) + gdif - rdif;\n\t\t}\n\t\tif (h < 0) {\n\t\t\th += 1;\n\t\t} else if (h > 1) {\n\t\t\th -= 1;\n\t\t}\n\t}\n\n\treturn [\n\t\th * 360,\n\t\ts * 100,\n\t\tv * 100\n\t];\n};\n\nconvert.rgb.hwb = function (rgb) {\n\tvar r = rgb[0];\n\tvar g = rgb[1];\n\tvar b = rgb[2];\n\tvar h = convert.rgb.hsl(rgb)[0];\n\tvar w = 1 / 255 * Math.min(r, Math.min(g, b));\n\n\tb = 1 - 1 / 255 * Math.max(r, Math.max(g, b));\n\n\treturn [h, w * 100, b * 100];\n};\n\nconvert.rgb.cmyk = function (rgb) {\n\tvar r = rgb[0] / 255;\n\tvar g = rgb[1] / 255;\n\tvar b = rgb[2] / 255;\n\tvar c;\n\tvar m;\n\tvar y;\n\tvar k;\n\n\tk = Math.min(1 - r, 1 - g, 1 - b);\n\tc = (1 - r - k) / (1 - k) || 0;\n\tm = (1 - g - k) / (1 - k) || 0;\n\ty = (1 - b - k) / (1 - k) || 0;\n\n\treturn [c * 100, m * 100, y * 100, k * 100];\n};\n\n/**\n * See https://en.m.wikipedia.org/wiki/Euclidean_distance#Squared_Euclidean_distance\n * */\nfunction comparativeDistance(x, y) {\n\treturn (\n\t\tMath.pow(x[0] - y[0], 2) +\n\t\tMath.pow(x[1] - y[1], 2) +\n\t\tMath.pow(x[2] - y[2], 2)\n\t);\n}\n\nconvert.rgb.keyword = function (rgb) {\n\tvar reversed = reverseKeywords[rgb];\n\tif (reversed) {\n\t\treturn reversed;\n\t}\n\n\tvar currentClosestDistance = Infinity;\n\tvar currentClosestKeyword;\n\n\tfor (var keyword in cssKeywords) {\n\t\tif (cssKeywords.hasOwnProperty(keyword)) {\n\t\t\tvar value = cssKeywords[keyword];\n\n\t\t\t// Compute comparative distance\n\t\t\tvar distance = comparativeDistance(rgb, value);\n\n\t\t\t// Check if its less, if so set as closest\n\t\t\tif (distance < currentClosestDistance) {\n\t\t\t\tcurrentClosestDistance = distance;\n\t\t\t\tcurrentClosestKeyword = keyword;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn currentClosestKeyword;\n};\n\nconvert.keyword.rgb = function (keyword) {\n\treturn cssKeywords[keyword];\n};\n\nconvert.rgb.xyz = function (rgb) {\n\tvar r = rgb[0] / 255;\n\tvar g = rgb[1] / 255;\n\tvar b = rgb[2] / 255;\n\n\t// assume sRGB\n\tr = r > 0.04045 ? Math.pow(((r + 0.055) / 1.055), 2.4) : (r / 12.92);\n\tg = g > 0.04045 ? Math.pow(((g + 0.055) / 1.055), 2.4) : (g / 12.92);\n\tb = b > 0.04045 ? Math.pow(((b + 0.055) / 1.055), 2.4) : (b / 12.92);\n\n\tvar x = (r * 0.4124) + (g * 0.3576) + (b * 0.1805);\n\tvar y = (r * 0.2126) + (g * 0.7152) + (b * 0.0722);\n\tvar z = (r * 0.0193) + (g * 0.1192) + (b * 0.9505);\n\n\treturn [x * 100, y * 100, z * 100];\n};\n\nconvert.rgb.lab = function (rgb) {\n\tvar xyz = convert.rgb.xyz(rgb);\n\tvar x = xyz[0];\n\tvar y = xyz[1];\n\tvar z = xyz[2];\n\tvar l;\n\tvar a;\n\tvar b;\n\n\tx /= 95.047;\n\ty /= 100;\n\tz /= 108.883;\n\n\tx = x > 0.008856 ? Math.pow(x, 1 / 3) : (7.787 * x) + (16 / 116);\n\ty = y > 0.008856 ? Math.pow(y, 1 / 3) : (7.787 * y) + (16 / 116);\n\tz = z > 0.008856 ? Math.pow(z, 1 / 3) : (7.787 * z) + (16 / 116);\n\n\tl = (116 * y) - 16;\n\ta = 500 * (x - y);\n\tb = 200 * (y - z);\n\n\treturn [l, a, b];\n};\n\nconvert.hsl.rgb = function (hsl) {\n\tvar h = hsl[0] / 360;\n\tvar s = hsl[1] / 100;\n\tvar l = hsl[2] / 100;\n\tvar t1;\n\tvar t2;\n\tvar t3;\n\tvar rgb;\n\tvar val;\n\n\tif (s === 0) {\n\t\tval = l * 255;\n\t\treturn [val, val, val];\n\t}\n\n\tif (l < 0.5) {\n\t\tt2 = l * (1 + s);\n\t} else {\n\t\tt2 = l + s - l * s;\n\t}\n\n\tt1 = 2 * l - t2;\n\n\trgb = [0, 0, 0];\n\tfor (var i = 0; i < 3; i++) {\n\t\tt3 = h + 1 / 3 * -(i - 1);\n\t\tif (t3 < 0) {\n\t\t\tt3++;\n\t\t}\n\t\tif (t3 > 1) {\n\t\t\tt3--;\n\t\t}\n\n\t\tif (6 * t3 < 1) {\n\t\t\tval = t1 + (t2 - t1) * 6 * t3;\n\t\t} else if (2 * t3 < 1) {\n\t\t\tval = t2;\n\t\t} else if (3 * t3 < 2) {\n\t\t\tval = t1 + (t2 - t1) * (2 / 3 - t3) * 6;\n\t\t} else {\n\t\t\tval = t1;\n\t\t}\n\n\t\trgb[i] = val * 255;\n\t}\n\n\treturn rgb;\n};\n\nconvert.hsl.hsv = function (hsl) {\n\tvar h = hsl[0];\n\tvar s = hsl[1] / 100;\n\tvar l = hsl[2] / 100;\n\tvar smin = s;\n\tvar lmin = Math.max(l, 0.01);\n\tvar sv;\n\tvar v;\n\n\tl *= 2;\n\ts *= (l <= 1) ? l : 2 - l;\n\tsmin *= lmin <= 1 ? lmin : 2 - lmin;\n\tv = (l + s) / 2;\n\tsv = l === 0 ? (2 * smin) / (lmin + smin) : (2 * s) / (l + s);\n\n\treturn [h, sv * 100, v * 100];\n};\n\nconvert.hsv.rgb = function (hsv) {\n\tvar h = hsv[0] / 60;\n\tvar s = hsv[1] / 100;\n\tvar v = hsv[2] / 100;\n\tvar hi = Math.floor(h) % 6;\n\n\tvar f = h - Math.floor(h);\n\tvar p = 255 * v * (1 - s);\n\tvar q = 255 * v * (1 - (s * f));\n\tvar t = 255 * v * (1 - (s * (1 - f)));\n\tv *= 255;\n\n\tswitch (hi) {\n\t\tcase 0:\n\t\t\treturn [v, t, p];\n\t\tcase 1:\n\t\t\treturn [q, v, p];\n\t\tcase 2:\n\t\t\treturn [p, v, t];\n\t\tcase 3:\n\t\t\treturn [p, q, v];\n\t\tcase 4:\n\t\t\treturn [t, p, v];\n\t\tcase 5:\n\t\t\treturn [v, p, q];\n\t}\n};\n\nconvert.hsv.hsl = function (hsv) {\n\tvar h = hsv[0];\n\tvar s = hsv[1] / 100;\n\tvar v = hsv[2] / 100;\n\tvar vmin = Math.max(v, 0.01);\n\tvar lmin;\n\tvar sl;\n\tvar l;\n\n\tl = (2 - s) * v;\n\tlmin = (2 - s) * vmin;\n\tsl = s * vmin;\n\tsl /= (lmin <= 1) ? lmin : 2 - lmin;\n\tsl = sl || 0;\n\tl /= 2;\n\n\treturn [h, sl * 100, l * 100];\n};\n\n// http://dev.w3.org/csswg/css-color/#hwb-to-rgb\nconvert.hwb.rgb = function (hwb) {\n\tvar h = hwb[0] / 360;\n\tvar wh = hwb[1] / 100;\n\tvar bl = hwb[2] / 100;\n\tvar ratio = wh + bl;\n\tvar i;\n\tvar v;\n\tvar f;\n\tvar n;\n\n\t// wh + bl cant be > 1\n\tif (ratio > 1) {\n\t\twh /= ratio;\n\t\tbl /= ratio;\n\t}\n\n\ti = Math.floor(6 * h);\n\tv = 1 - bl;\n\tf = 6 * h - i;\n\n\tif ((i & 0x01) !== 0) {\n\t\tf = 1 - f;\n\t}\n\n\tn = wh + f * (v - wh); // linear interpolation\n\n\tvar r;\n\tvar g;\n\tvar b;\n\tswitch (i) {\n\t\tdefault:\n\t\tcase 6:\n\t\tcase 0: r = v; g = n; b = wh; break;\n\t\tcase 1: r = n; g = v; b = wh; break;\n\t\tcase 2: r = wh; g = v; b = n; break;\n\t\tcase 3: r = wh; g = n; b = v; break;\n\t\tcase 4: r = n; g = wh; b = v; break;\n\t\tcase 5: r = v; g = wh; b = n; break;\n\t}\n\n\treturn [r * 255, g * 255, b * 255];\n};\n\nconvert.cmyk.rgb = function (cmyk) {\n\tvar c = cmyk[0] / 100;\n\tvar m = cmyk[1] / 100;\n\tvar y = cmyk[2] / 100;\n\tvar k = cmyk[3] / 100;\n\tvar r;\n\tvar g;\n\tvar b;\n\n\tr = 1 - Math.min(1, c * (1 - k) + k);\n\tg = 1 - Math.min(1, m * (1 - k) + k);\n\tb = 1 - Math.min(1, y * (1 - k) + k);\n\n\treturn [r * 255, g * 255, b * 255];\n};\n\nconvert.xyz.rgb = function (xyz) {\n\tvar x = xyz[0] / 100;\n\tvar y = xyz[1] / 100;\n\tvar z = xyz[2] / 100;\n\tvar r;\n\tvar g;\n\tvar b;\n\n\tr = (x * 3.2406) + (y * -1.5372) + (z * -0.4986);\n\tg = (x * -0.9689) + (y * 1.8758) + (z * 0.0415);\n\tb = (x * 0.0557) + (y * -0.2040) + (z * 1.0570);\n\n\t// assume sRGB\n\tr = r > 0.0031308\n\t\t? ((1.055 * Math.pow(r, 1.0 / 2.4)) - 0.055)\n\t\t: r * 12.92;\n\n\tg = g > 0.0031308\n\t\t? ((1.055 * Math.pow(g, 1.0 / 2.4)) - 0.055)\n\t\t: g * 12.92;\n\n\tb = b > 0.0031308\n\t\t? ((1.055 * Math.pow(b, 1.0 / 2.4)) - 0.055)\n\t\t: b * 12.92;\n\n\tr = Math.min(Math.max(0, r), 1);\n\tg = Math.min(Math.max(0, g), 1);\n\tb = Math.min(Math.max(0, b), 1);\n\n\treturn [r * 255, g * 255, b * 255];\n};\n\nconvert.xyz.lab = function (xyz) {\n\tvar x = xyz[0];\n\tvar y = xyz[1];\n\tvar z = xyz[2];\n\tvar l;\n\tvar a;\n\tvar b;\n\n\tx /= 95.047;\n\ty /= 100;\n\tz /= 108.883;\n\n\tx = x > 0.008856 ? Math.pow(x, 1 / 3) : (7.787 * x) + (16 / 116);\n\ty = y > 0.008856 ? Math.pow(y, 1 / 3) : (7.787 * y) + (16 / 116);\n\tz = z > 0.008856 ? Math.pow(z, 1 / 3) : (7.787 * z) + (16 / 116);\n\n\tl = (116 * y) - 16;\n\ta = 500 * (x - y);\n\tb = 200 * (y - z);\n\n\treturn [l, a, b];\n};\n\nconvert.lab.xyz = function (lab) {\n\tvar l = lab[0];\n\tvar a = lab[1];\n\tvar b = lab[2];\n\tvar x;\n\tvar y;\n\tvar z;\n\n\ty = (l + 16) / 116;\n\tx = a / 500 + y;\n\tz = y - b / 200;\n\n\tvar y2 = Math.pow(y, 3);\n\tvar x2 = Math.pow(x, 3);\n\tvar z2 = Math.pow(z, 3);\n\ty = y2 > 0.008856 ? y2 : (y - 16 / 116) / 7.787;\n\tx = x2 > 0.008856 ? x2 : (x - 16 / 116) / 7.787;\n\tz = z2 > 0.008856 ? z2 : (z - 16 / 116) / 7.787;\n\n\tx *= 95.047;\n\ty *= 100;\n\tz *= 108.883;\n\n\treturn [x, y, z];\n};\n\nconvert.lab.lch = function (lab) {\n\tvar l = lab[0];\n\tvar a = lab[1];\n\tvar b = lab[2];\n\tvar hr;\n\tvar h;\n\tvar c;\n\n\thr = Math.atan2(b, a);\n\th = hr * 360 / 2 / Math.PI;\n\n\tif (h < 0) {\n\t\th += 360;\n\t}\n\n\tc = Math.sqrt(a * a + b * b);\n\n\treturn [l, c, h];\n};\n\nconvert.lch.lab = function (lch) {\n\tvar l = lch[0];\n\tvar c = lch[1];\n\tvar h = lch[2];\n\tvar a;\n\tvar b;\n\tvar hr;\n\n\thr = h / 360 * 2 * Math.PI;\n\ta = c * Math.cos(hr);\n\tb = c * Math.sin(hr);\n\n\treturn [l, a, b];\n};\n\nconvert.rgb.ansi16 = function (args) {\n\tvar r = args[0];\n\tvar g = args[1];\n\tvar b = args[2];\n\tvar value = 1 in arguments ? arguments[1] : convert.rgb.hsv(args)[2]; // hsv -> ansi16 optimization\n\n\tvalue = Math.round(value / 50);\n\n\tif (value === 0) {\n\t\treturn 30;\n\t}\n\n\tvar ansi = 30\n\t\t+ ((Math.round(b / 255) << 2)\n\t\t| (Math.round(g / 255) << 1)\n\t\t| Math.round(r / 255));\n\n\tif (value === 2) {\n\t\tansi += 60;\n\t}\n\n\treturn ansi;\n};\n\nconvert.hsv.ansi16 = function (args) {\n\t// optimization here; we already know the value and don't need to get\n\t// it converted for us.\n\treturn convert.rgb.ansi16(convert.hsv.rgb(args), args[2]);\n};\n\nconvert.rgb.ansi256 = function (args) {\n\tvar r = args[0];\n\tvar g = args[1];\n\tvar b = args[2];\n\n\t// we use the extended greyscale palette here, with the exception of\n\t// black and white. normal palette only has 4 greyscale shades.\n\tif (r === g && g === b) {\n\t\tif (r < 8) {\n\t\t\treturn 16;\n\t\t}\n\n\t\tif (r > 248) {\n\t\t\treturn 231;\n\t\t}\n\n\t\treturn Math.round(((r - 8) / 247) * 24) + 232;\n\t}\n\n\tvar ansi = 16\n\t\t+ (36 * Math.round(r / 255 * 5))\n\t\t+ (6 * Math.round(g / 255 * 5))\n\t\t+ Math.round(b / 255 * 5);\n\n\treturn ansi;\n};\n\nconvert.ansi16.rgb = function (args) {\n\tvar color = args % 10;\n\n\t// handle greyscale\n\tif (color === 0 || color === 7) {\n\t\tif (args > 50) {\n\t\t\tcolor += 3.5;\n\t\t}\n\n\t\tcolor = color / 10.5 * 255;\n\n\t\treturn [color, color, color];\n\t}\n\n\tvar mult = (~~(args > 50) + 1) * 0.5;\n\tvar r = ((color & 1) * mult) * 255;\n\tvar g = (((color >> 1) & 1) * mult) * 255;\n\tvar b = (((color >> 2) & 1) * mult) * 255;\n\n\treturn [r, g, b];\n};\n\nconvert.ansi256.rgb = function (args) {\n\t// handle greyscale\n\tif (args >= 232) {\n\t\tvar c = (args - 232) * 10 + 8;\n\t\treturn [c, c, c];\n\t}\n\n\targs -= 16;\n\n\tvar rem;\n\tvar r = Math.floor(args / 36) / 5 * 255;\n\tvar g = Math.floor((rem = args % 36) / 6) / 5 * 255;\n\tvar b = (rem % 6) / 5 * 255;\n\n\treturn [r, g, b];\n};\n\nconvert.rgb.hex = function (args) {\n\tvar integer = ((Math.round(args[0]) & 0xFF) << 16)\n\t\t+ ((Math.round(args[1]) & 0xFF) << 8)\n\t\t+ (Math.round(args[2]) & 0xFF);\n\n\tvar string = integer.toString(16).toUpperCase();\n\treturn '000000'.substring(string.length) + string;\n};\n\nconvert.hex.rgb = function (args) {\n\tvar match = args.toString(16).match(/[a-f0-9]{6}|[a-f0-9]{3}/i);\n\tif (!match) {\n\t\treturn [0, 0, 0];\n\t}\n\n\tvar colorString = match[0];\n\n\tif (match[0].length === 3) {\n\t\tcolorString = colorString.split('').map(function (char) {\n\t\t\treturn char + char;\n\t\t}).join('');\n\t}\n\n\tvar integer = parseInt(colorString, 16);\n\tvar r = (integer >> 16) & 0xFF;\n\tvar g = (integer >> 8) & 0xFF;\n\tvar b = integer & 0xFF;\n\n\treturn [r, g, b];\n};\n\nconvert.rgb.hcg = function (rgb) {\n\tvar r = rgb[0] / 255;\n\tvar g = rgb[1] / 255;\n\tvar b = rgb[2] / 255;\n\tvar max = Math.max(Math.max(r, g), b);\n\tvar min = Math.min(Math.min(r, g), b);\n\tvar chroma = (max - min);\n\tvar grayscale;\n\tvar hue;\n\n\tif (chroma < 1) {\n\t\tgrayscale = min / (1 - chroma);\n\t} else {\n\t\tgrayscale = 0;\n\t}\n\n\tif (chroma <= 0) {\n\t\thue = 0;\n\t} else\n\tif (max === r) {\n\t\thue = ((g - b) / chroma) % 6;\n\t} else\n\tif (max === g) {\n\t\thue = 2 + (b - r) / chroma;\n\t} else {\n\t\thue = 4 + (r - g) / chroma + 4;\n\t}\n\n\thue /= 6;\n\thue %= 1;\n\n\treturn [hue * 360, chroma * 100, grayscale * 100];\n};\n\nconvert.hsl.hcg = function (hsl) {\n\tvar s = hsl[1] / 100;\n\tvar l = hsl[2] / 100;\n\tvar c = 1;\n\tvar f = 0;\n\n\tif (l < 0.5) {\n\t\tc = 2.0 * s * l;\n\t} else {\n\t\tc = 2.0 * s * (1.0 - l);\n\t}\n\n\tif (c < 1.0) {\n\t\tf = (l - 0.5 * c) / (1.0 - c);\n\t}\n\n\treturn [hsl[0], c * 100, f * 100];\n};\n\nconvert.hsv.hcg = function (hsv) {\n\tvar s = hsv[1] / 100;\n\tvar v = hsv[2] / 100;\n\n\tvar c = s * v;\n\tvar f = 0;\n\n\tif (c < 1.0) {\n\t\tf = (v - c) / (1 - c);\n\t}\n\n\treturn [hsv[0], c * 100, f * 100];\n};\n\nconvert.hcg.rgb = function (hcg) {\n\tvar h = hcg[0] / 360;\n\tvar c = hcg[1] / 100;\n\tvar g = hcg[2] / 100;\n\n\tif (c === 0.0) {\n\t\treturn [g * 255, g * 255, g * 255];\n\t}\n\n\tvar pure = [0, 0, 0];\n\tvar hi = (h % 1) * 6;\n\tvar v = hi % 1;\n\tvar w = 1 - v;\n\tvar mg = 0;\n\n\tswitch (Math.floor(hi)) {\n\t\tcase 0:\n\t\t\tpure[0] = 1; pure[1] = v; pure[2] = 0; break;\n\t\tcase 1:\n\t\t\tpure[0] = w; pure[1] = 1; pure[2] = 0; break;\n\t\tcase 2:\n\t\t\tpure[0] = 0; pure[1] = 1; pure[2] = v; break;\n\t\tcase 3:\n\t\t\tpure[0] = 0; pure[1] = w; pure[2] = 1; break;\n\t\tcase 4:\n\t\t\tpure[0] = v; pure[1] = 0; pure[2] = 1; break;\n\t\tdefault:\n\t\t\tpure[0] = 1; pure[1] = 0; pure[2] = w;\n\t}\n\n\tmg = (1.0 - c) * g;\n\n\treturn [\n\t\t(c * pure[0] + mg) * 255,\n\t\t(c * pure[1] + mg) * 255,\n\t\t(c * pure[2] + mg) * 255\n\t];\n};\n\nconvert.hcg.hsv = function (hcg) {\n\tvar c = hcg[1] / 100;\n\tvar g = hcg[2] / 100;\n\n\tvar v = c + g * (1.0 - c);\n\tvar f = 0;\n\n\tif (v > 0.0) {\n\t\tf = c / v;\n\t}\n\n\treturn [hcg[0], f * 100, v * 100];\n};\n\nconvert.hcg.hsl = function (hcg) {\n\tvar c = hcg[1] / 100;\n\tvar g = hcg[2] / 100;\n\n\tvar l = g * (1.0 - c) + 0.5 * c;\n\tvar s = 0;\n\n\tif (l > 0.0 && l < 0.5) {\n\t\ts = c / (2 * l);\n\t} else\n\tif (l >= 0.5 && l < 1.0) {\n\t\ts = c / (2 * (1 - l));\n\t}\n\n\treturn [hcg[0], s * 100, l * 100];\n};\n\nconvert.hcg.hwb = function (hcg) {\n\tvar c = hcg[1] / 100;\n\tvar g = hcg[2] / 100;\n\tvar v = c + g * (1.0 - c);\n\treturn [hcg[0], (v - c) * 100, (1 - v) * 100];\n};\n\nconvert.hwb.hcg = function (hwb) {\n\tvar w = hwb[1] / 100;\n\tvar b = hwb[2] / 100;\n\tvar v = 1 - b;\n\tvar c = v - w;\n\tvar g = 0;\n\n\tif (c < 1) {\n\t\tg = (v - c) / (1 - c);\n\t}\n\n\treturn [hwb[0], c * 100, g * 100];\n};\n\nconvert.apple.rgb = function (apple) {\n\treturn [(apple[0] / 65535) * 255, (apple[1] / 65535) * 255, (apple[2] / 65535) * 255];\n};\n\nconvert.rgb.apple = function (rgb) {\n\treturn [(rgb[0] / 255) * 65535, (rgb[1] / 255) * 65535, (rgb[2] / 255) * 65535];\n};\n\nconvert.gray.rgb = function (args) {\n\treturn [args[0] / 100 * 255, args[0] / 100 * 255, args[0] / 100 * 255];\n};\n\nconvert.gray.hsl = convert.gray.hsv = function (args) {\n\treturn [0, 0, args[0]];\n};\n\nconvert.gray.hwb = function (gray) {\n\treturn [0, 100, gray[0]];\n};\n\nconvert.gray.cmyk = function (gray) {\n\treturn [0, 0, 0, gray[0]];\n};\n\nconvert.gray.lab = function (gray) {\n\treturn [gray[0], 0, 0];\n};\n\nconvert.gray.hex = function (gray) {\n\tvar val = Math.round(gray[0] / 100 * 255) & 0xFF;\n\tvar integer = (val << 16) + (val << 8) + val;\n\n\tvar string = integer.toString(16).toUpperCase();\n\treturn '000000'.substring(string.length) + string;\n};\n\nconvert.rgb.gray = function (rgb) {\n\tvar val = (rgb[0] + rgb[1] + rgb[2]) / 3;\n\treturn [val / 255 * 100];\n};\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = populatePlaceholders;\n\nvar t = _interopRequireWildcard(require(\"@babel/types\"));\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction populatePlaceholders(metadata, replacements) {\n  const ast = t.cloneNode(metadata.ast);\n\n  if (replacements) {\n    metadata.placeholders.forEach(placeholder => {\n      if (!Object.prototype.hasOwnProperty.call(replacements, placeholder.name)) {\n        const placeholderName = placeholder.name;\n        throw new Error(`Error: No substitution given for \"${placeholderName}\". If this is not meant to be a\n            placeholder you may want to consider passing one of the following options to @babel/template:\n            - { placeholderPattern: false, placeholderWhitelist: new Set(['${placeholderName}'])}\n            - { placeholderPattern: /^${placeholderName}$/ }`);\n      }\n    });\n    Object.keys(replacements).forEach(key => {\n      if (!metadata.placeholderNames.has(key)) {\n        throw new Error(`Unknown substitution \"${key}\" given`);\n      }\n    });\n  }\n\n  metadata.placeholders.slice().reverse().forEach(placeholder => {\n    try {\n      applyReplacement(placeholder, ast, replacements && replacements[placeholder.name] || null);\n    } catch (e) {\n      e.message = `@babel/template placeholder \"${placeholder.name}\": ${e.message}`;\n      throw e;\n    }\n  });\n  return ast;\n}\n\nfunction applyReplacement(placeholder, ast, replacement) {\n  if (placeholder.isDuplicate) {\n    if (Array.isArray(replacement)) {\n      replacement = replacement.map(node => t.cloneNode(node));\n    } else if (typeof replacement === \"object\") {\n      replacement = t.cloneNode(replacement);\n    }\n  }\n\n  const {\n    parent,\n    key,\n    index\n  } = placeholder.resolve(ast);\n\n  if (placeholder.type === \"string\") {\n    if (typeof replacement === \"string\") {\n      replacement = t.stringLiteral(replacement);\n    }\n\n    if (!replacement || !t.isStringLiteral(replacement)) {\n      throw new Error(\"Expected string substitution\");\n    }\n  } else if (placeholder.type === \"statement\") {\n    if (index === undefined) {\n      if (!replacement) {\n        replacement = t.emptyStatement();\n      } else if (Array.isArray(replacement)) {\n        replacement = t.blockStatement(replacement);\n      } else if (typeof replacement === \"string\") {\n        replacement = t.expressionStatement(t.identifier(replacement));\n      } else if (!t.isStatement(replacement)) {\n        replacement = t.expressionStatement(replacement);\n      }\n    } else {\n      if (replacement && !Array.isArray(replacement)) {\n        if (typeof replacement === \"string\") {\n          replacement = t.identifier(replacement);\n        }\n\n        if (!t.isStatement(replacement)) {\n          replacement = t.expressionStatement(replacement);\n        }\n      }\n    }\n  } else if (placeholder.type === \"param\") {\n    if (typeof replacement === \"string\") {\n      replacement = t.identifier(replacement);\n    }\n\n    if (index === undefined) throw new Error(\"Assertion failure.\");\n  } else {\n    if (typeof replacement === \"string\") {\n      replacement = t.identifier(replacement);\n    }\n\n    if (Array.isArray(replacement)) {\n      throw new Error(\"Cannot replace single expression with an array.\");\n    }\n  }\n\n  if (index === undefined) {\n    t.validate(parent, key, replacement);\n    parent[key] = replacement;\n  } else {\n    const items = parent[key].slice();\n\n    if (placeholder.type === \"statement\" || placeholder.type === \"param\") {\n      if (replacement == null) {\n        items.splice(index, 1);\n      } else if (Array.isArray(replacement)) {\n        items.splice(index, 1, ...replacement);\n      } else {\n        items[index] = replacement;\n      }\n    } else {\n      items[index] = replacement;\n    }\n\n    t.validate(parent, key, items);\n    parent[key] = items;\n  }\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _helperPluginUtils = require(\"@babel/helper-plugin-utils\");\n\nvar _helperAnnotateAsPure = _interopRequireDefault(require(\"@babel/helper-annotate-as-pure\"));\n\nvar _helperFunctionName = _interopRequireDefault(require(\"@babel/helper-function-name\"));\n\nvar _helperSplitExportDeclaration = _interopRequireDefault(require(\"@babel/helper-split-export-declaration\"));\n\nvar _core = require(\"@babel/core\");\n\nvar _globals = _interopRequireDefault(require(\"globals\"));\n\nvar _transformClass = _interopRequireDefault(require(\"./transformClass\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst getBuiltinClasses = category => Object.keys(_globals.default[category]).filter(name => /^[A-Z]/.test(name));\n\nconst builtinClasses = new Set([...getBuiltinClasses(\"builtin\"), ...getBuiltinClasses(\"browser\")]);\n\nvar _default = (0, _helperPluginUtils.declare)((api, options) => {\n  var _api$assumption, _api$assumption2, _api$assumption3, _api$assumption4;\n\n  api.assertVersion(7);\n  const {\n    loose\n  } = options;\n  const setClassMethods = (_api$assumption = api.assumption(\"setClassMethods\")) != null ? _api$assumption : options.loose;\n  const constantSuper = (_api$assumption2 = api.assumption(\"constantSuper\")) != null ? _api$assumption2 : options.loose;\n  const superIsCallableConstructor = (_api$assumption3 = api.assumption(\"superIsCallableConstructor\")) != null ? _api$assumption3 : options.loose;\n  const noClassCalls = (_api$assumption4 = api.assumption(\"noClassCalls\")) != null ? _api$assumption4 : options.loose;\n  const VISITED = Symbol();\n  return {\n    name: \"transform-classes\",\n    visitor: {\n      ExportDefaultDeclaration(path) {\n        if (!path.get(\"declaration\").isClassDeclaration()) return;\n        (0, _helperSplitExportDeclaration.default)(path);\n      },\n\n      ClassDeclaration(path) {\n        const {\n          node\n        } = path;\n        const ref = node.id || path.scope.generateUidIdentifier(\"class\");\n        path.replaceWith(_core.types.variableDeclaration(\"let\", [_core.types.variableDeclarator(ref, _core.types.toExpression(node))]));\n      },\n\n      ClassExpression(path, state) {\n        const {\n          node\n        } = path;\n        if (node[VISITED]) return;\n        const inferred = (0, _helperFunctionName.default)(path);\n\n        if (inferred && inferred !== node) {\n          path.replaceWith(inferred);\n          return;\n        }\n\n        node[VISITED] = true;\n        path.replaceWith((0, _transformClass.default)(path, state.file, builtinClasses, loose, {\n          setClassMethods,\n          constantSuper,\n          superIsCallableConstructor,\n          noClassCalls\n        }));\n\n        if (path.isCallExpression()) {\n          (0, _helperAnnotateAsPure.default)(path);\n\n          if (path.get(\"callee\").isArrowFunctionExpression()) {\n            path.get(\"callee\").arrowFunctionToExpression();\n          }\n        }\n      }\n\n    }\n  };\n});\n\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.program = exports.expression = exports.statement = exports.statements = exports.smart = void 0;\n\nvar t = _interopRequireWildcard(require(\"@babel/types\"));\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction makeStatementFormatter(fn) {\n  return {\n    code: str => `/* @babel/template */;\\n${str}`,\n    validate: () => {},\n    unwrap: ast => {\n      return fn(ast.program.body.slice(1));\n    }\n  };\n}\n\nconst smart = makeStatementFormatter(body => {\n  if (body.length > 1) {\n    return body;\n  } else {\n    return body[0];\n  }\n});\nexports.smart = smart;\nconst statements = makeStatementFormatter(body => body);\nexports.statements = statements;\nconst statement = makeStatementFormatter(body => {\n  if (body.length === 0) {\n    throw new Error(\"Found nothing to return.\");\n  }\n\n  if (body.length > 1) {\n    throw new Error(\"Found multiple statements but wanted one\");\n  }\n\n  return body[0];\n});\nexports.statement = statement;\nconst expression = {\n  code: str => `(\\n${str}\\n)`,\n  validate: ast => {\n    if (ast.program.body.length > 1) {\n      throw new Error(\"Found multiple statements but wanted one\");\n    }\n\n    if (expression.unwrap(ast).start === 0) {\n      throw new Error(\"Parse result included parens.\");\n    }\n  },\n  unwrap: ({\n    program\n  }) => {\n    const [stmt] = program.body;\n    t.assertExpressionStatement(stmt);\n    return stmt.expression;\n  }\n};\nexports.expression = expression;\nconst program = {\n  code: str => str,\n  validate: () => {},\n  unwrap: ast => ast.program\n};\nexports.program = program;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = createTemplateBuilder;\n\nvar _options = require(\"./options\");\n\nvar _string = _interopRequireDefault(require(\"./string\"));\n\nvar _literal = _interopRequireDefault(require(\"./literal\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst NO_PLACEHOLDER = (0, _options.validate)({\n  placeholderPattern: false\n});\n\nfunction createTemplateBuilder(formatter, defaultOpts) {\n  const templateFnCache = new WeakMap();\n  const templateAstCache = new WeakMap();\n  const cachedOpts = defaultOpts || (0, _options.validate)(null);\n  return Object.assign((tpl, ...args) => {\n    if (typeof tpl === \"string\") {\n      if (args.length > 1) throw new Error(\"Unexpected extra params.\");\n      return extendedTrace((0, _string.default)(formatter, tpl, (0, _options.merge)(cachedOpts, (0, _options.validate)(args[0]))));\n    } else if (Array.isArray(tpl)) {\n      let builder = templateFnCache.get(tpl);\n\n      if (!builder) {\n        builder = (0, _literal.default)(formatter, tpl, cachedOpts);\n        templateFnCache.set(tpl, builder);\n      }\n\n      return extendedTrace(builder(args));\n    } else if (typeof tpl === \"object\" && tpl) {\n      if (args.length > 0) throw new Error(\"Unexpected extra params.\");\n      return createTemplateBuilder(formatter, (0, _options.merge)(cachedOpts, (0, _options.validate)(tpl)));\n    }\n\n    throw new Error(`Unexpected template param ${typeof tpl}`);\n  }, {\n    ast: (tpl, ...args) => {\n      if (typeof tpl === \"string\") {\n        if (args.length > 1) throw new Error(\"Unexpected extra params.\");\n        return (0, _string.default)(formatter, tpl, (0, _options.merge)((0, _options.merge)(cachedOpts, (0, _options.validate)(args[0])), NO_PLACEHOLDER))();\n      } else if (Array.isArray(tpl)) {\n        let builder = templateAstCache.get(tpl);\n\n        if (!builder) {\n          builder = (0, _literal.default)(formatter, tpl, (0, _options.merge)(cachedOpts, NO_PLACEHOLDER));\n          templateAstCache.set(tpl, builder);\n        }\n\n        return builder(args)();\n      }\n\n      throw new Error(`Unexpected template param ${typeof tpl}`);\n    }\n  });\n}\n\nfunction extendedTrace(fn) {\n  let rootStack = \"\";\n\n  try {\n    throw new Error();\n  } catch (error) {\n    if (error.stack) {\n      rootStack = error.stack.split(\"\\n\").slice(3).join(\"\\n\");\n    }\n  }\n\n  return arg => {\n    try {\n      return fn(arg);\n    } catch (err) {\n      err.stack += `\\n    =============\\n${rootStack}`;\n      throw err;\n    }\n  };\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = stringTemplate;\n\nvar _options = require(\"./options\");\n\nvar _parse = _interopRequireDefault(require(\"./parse\"));\n\nvar _populate = _interopRequireDefault(require(\"./populate\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction stringTemplate(formatter, code, opts) {\n  code = formatter.code(code);\n  let metadata;\n  return arg => {\n    const replacements = (0, _options.normalizeReplacements)(arg);\n    if (!metadata) metadata = (0, _parse.default)(formatter, code, opts);\n    return formatter.unwrap((0, _populate.default)(metadata, replacements));\n  };\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.shouldHighlight = shouldHighlight;\nexports.getChalk = getChalk;\nexports.default = highlight;\n\nvar _helperValidatorIdentifier = require(\"@babel/helper-validator-identifier\");\n\nconst jsTokens = require(\"js-tokens\");\n\nconst Chalk = require(\"chalk\");\n\nconst sometimesKeywords = new Set([\"as\", \"async\", \"from\", \"get\", \"of\", \"set\"]);\n\nfunction getDefs(chalk) {\n  return {\n    keyword: chalk.cyan,\n    capitalized: chalk.yellow,\n    jsxIdentifier: chalk.yellow,\n    punctuator: chalk.yellow,\n    number: chalk.magenta,\n    string: chalk.green,\n    regex: chalk.magenta,\n    comment: chalk.grey,\n    invalid: chalk.white.bgRed.bold\n  };\n}\n\nconst NEWLINE = /\\r\\n|[\\n\\r\\u2028\\u2029]/;\nconst BRACKET = /^[()[\\]{}]$/;\nlet tokenize;\n{\n  const JSX_TAG = /^[a-z][\\w-]*$/i;\n\n  const getTokenType = function (token, offset, text) {\n    if (token.type === \"name\") {\n      if ((0, _helperValidatorIdentifier.isKeyword)(token.value) || (0, _helperValidatorIdentifier.isStrictReservedWord)(token.value, true) || sometimesKeywords.has(token.value)) {\n        return \"keyword\";\n      }\n\n      if (JSX_TAG.test(token.value) && (text[offset - 1] === \"<\" || text.substr(offset - 2, 2) == \"</\")) {\n        return \"jsxIdentifier\";\n      }\n\n      if (token.value[0] !== token.value[0].toLowerCase()) {\n        return \"capitalized\";\n      }\n    }\n\n    if (token.type === \"punctuator\" && BRACKET.test(token.value)) {\n      return \"bracket\";\n    }\n\n    if (token.type === \"invalid\" && (token.value === \"@\" || token.value === \"#\")) {\n      return \"punctuator\";\n    }\n\n    return token.type;\n  };\n\n  tokenize = function* (text) {\n    let match;\n\n    while (match = jsTokens.default.exec(text)) {\n      const token = jsTokens.matchToToken(match);\n      yield {\n        type: getTokenType(token, match.index, text),\n        value: token.value\n      };\n    }\n  };\n}\n\nfunction highlightTokens(defs, text) {\n  let highlighted = \"\";\n\n  for (const {\n    type,\n    value\n  } of tokenize(text)) {\n    const colorize = defs[type];\n\n    if (colorize) {\n      highlighted += value.split(NEWLINE).map(str => colorize(str)).join(\"\\n\");\n    } else {\n      highlighted += value;\n    }\n  }\n\n  return highlighted;\n}\n\nfunction shouldHighlight(options) {\n  return !!Chalk.supportsColor || options.forceColor;\n}\n\nfunction getChalk(options) {\n  return options.forceColor ? new Chalk.constructor({\n    enabled: true,\n    level: 1\n  }) : Chalk;\n}\n\nfunction highlight(code, options = {}) {\n  if (shouldHighlight(options)) {\n    const chalk = getChalk(options);\n    const defs = getDefs(chalk);\n    return highlightTokens(defs, code);\n  } else {\n    return code;\n  }\n}","'use strict';\nconst escapeStringRegexp = require('escape-string-regexp');\nconst ansiStyles = require('ansi-styles');\nconst stdoutColor = require('supports-color').stdout;\n\nconst template = require('./templates.js');\n\nconst isSimpleWindowsTerm = process.platform === 'win32' && !(process.env.TERM || '').toLowerCase().startsWith('xterm');\n\n// `supportsColor.level` → `ansiStyles.color[name]` mapping\nconst levelMapping = ['ansi', 'ansi', 'ansi256', 'ansi16m'];\n\n// `color-convert` models to exclude from the Chalk API due to conflicts and such\nconst skipModels = new Set(['gray']);\n\nconst styles = Object.create(null);\n\nfunction applyOptions(obj, options) {\n\toptions = options || {};\n\n\t// Detect level if not set manually\n\tconst scLevel = stdoutColor ? stdoutColor.level : 0;\n\tobj.level = options.level === undefined ? scLevel : options.level;\n\tobj.enabled = 'enabled' in options ? options.enabled : obj.level > 0;\n}\n\nfunction Chalk(options) {\n\t// We check for this.template here since calling `chalk.constructor()`\n\t// by itself will have a `this` of a previously constructed chalk object\n\tif (!this || !(this instanceof Chalk) || this.template) {\n\t\tconst chalk = {};\n\t\tapplyOptions(chalk, options);\n\n\t\tchalk.template = function () {\n\t\t\tconst args = [].slice.call(arguments);\n\t\t\treturn chalkTag.apply(null, [chalk.template].concat(args));\n\t\t};\n\n\t\tObject.setPrototypeOf(chalk, Chalk.prototype);\n\t\tObject.setPrototypeOf(chalk.template, chalk);\n\n\t\tchalk.template.constructor = Chalk;\n\n\t\treturn chalk.template;\n\t}\n\n\tapplyOptions(this, options);\n}\n\n// Use bright blue on Windows as the normal blue color is illegible\nif (isSimpleWindowsTerm) {\n\tansiStyles.blue.open = '\\u001B[94m';\n}\n\nfor (const key of Object.keys(ansiStyles)) {\n\tansiStyles[key].closeRe = new RegExp(escapeStringRegexp(ansiStyles[key].close), 'g');\n\n\tstyles[key] = {\n\t\tget() {\n\t\t\tconst codes = ansiStyles[key];\n\t\t\treturn build.call(this, this._styles ? this._styles.concat(codes) : [codes], this._empty, key);\n\t\t}\n\t};\n}\n\nstyles.visible = {\n\tget() {\n\t\treturn build.call(this, this._styles || [], true, 'visible');\n\t}\n};\n\nansiStyles.color.closeRe = new RegExp(escapeStringRegexp(ansiStyles.color.close), 'g');\nfor (const model of Object.keys(ansiStyles.color.ansi)) {\n\tif (skipModels.has(model)) {\n\t\tcontinue;\n\t}\n\n\tstyles[model] = {\n\t\tget() {\n\t\t\tconst level = this.level;\n\t\t\treturn function () {\n\t\t\t\tconst open = ansiStyles.color[levelMapping[level]][model].apply(null, arguments);\n\t\t\t\tconst codes = {\n\t\t\t\t\topen,\n\t\t\t\t\tclose: ansiStyles.color.close,\n\t\t\t\t\tcloseRe: ansiStyles.color.closeRe\n\t\t\t\t};\n\t\t\t\treturn build.call(this, this._styles ? this._styles.concat(codes) : [codes], this._empty, model);\n\t\t\t};\n\t\t}\n\t};\n}\n\nansiStyles.bgColor.closeRe = new RegExp(escapeStringRegexp(ansiStyles.bgColor.close), 'g');\nfor (const model of Object.keys(ansiStyles.bgColor.ansi)) {\n\tif (skipModels.has(model)) {\n\t\tcontinue;\n\t}\n\n\tconst bgModel = 'bg' + model[0].toUpperCase() + model.slice(1);\n\tstyles[bgModel] = {\n\t\tget() {\n\t\t\tconst level = this.level;\n\t\t\treturn function () {\n\t\t\t\tconst open = ansiStyles.bgColor[levelMapping[level]][model].apply(null, arguments);\n\t\t\t\tconst codes = {\n\t\t\t\t\topen,\n\t\t\t\t\tclose: ansiStyles.bgColor.close,\n\t\t\t\t\tcloseRe: ansiStyles.bgColor.closeRe\n\t\t\t\t};\n\t\t\t\treturn build.call(this, this._styles ? this._styles.concat(codes) : [codes], this._empty, model);\n\t\t\t};\n\t\t}\n\t};\n}\n\nconst proto = Object.defineProperties(() => {}, styles);\n\nfunction build(_styles, _empty, key) {\n\tconst builder = function () {\n\t\treturn applyStyle.apply(builder, arguments);\n\t};\n\n\tbuilder._styles = _styles;\n\tbuilder._empty = _empty;\n\n\tconst self = this;\n\n\tObject.defineProperty(builder, 'level', {\n\t\tenumerable: true,\n\t\tget() {\n\t\t\treturn self.level;\n\t\t},\n\t\tset(level) {\n\t\t\tself.level = level;\n\t\t}\n\t});\n\n\tObject.defineProperty(builder, 'enabled', {\n\t\tenumerable: true,\n\t\tget() {\n\t\t\treturn self.enabled;\n\t\t},\n\t\tset(enabled) {\n\t\t\tself.enabled = enabled;\n\t\t}\n\t});\n\n\t// See below for fix regarding invisible grey/dim combination on Windows\n\tbuilder.hasGrey = this.hasGrey || key === 'gray' || key === 'grey';\n\n\t// `__proto__` is used because we must return a function, but there is\n\t// no way to create a function with a different prototype\n\tbuilder.__proto__ = proto; // eslint-disable-line no-proto\n\n\treturn builder;\n}\n\nfunction applyStyle() {\n\t// Support varags, but simply cast to string in case there's only one arg\n\tconst args = arguments;\n\tconst argsLen = args.length;\n\tlet str = String(arguments[0]);\n\n\tif (argsLen === 0) {\n\t\treturn '';\n\t}\n\n\tif (argsLen > 1) {\n\t\t// Don't slice `arguments`, it prevents V8 optimizations\n\t\tfor (let a = 1; a < argsLen; a++) {\n\t\t\tstr += ' ' + args[a];\n\t\t}\n\t}\n\n\tif (!this.enabled || this.level <= 0 || !str) {\n\t\treturn this._empty ? '' : str;\n\t}\n\n\t// Turns out that on Windows dimmed gray text becomes invisible in cmd.exe,\n\t// see https://github.com/chalk/chalk/issues/58\n\t// If we're on Windows and we're dealing with a gray color, temporarily make 'dim' a noop.\n\tconst originalDim = ansiStyles.dim.open;\n\tif (isSimpleWindowsTerm && this.hasGrey) {\n\t\tansiStyles.dim.open = '';\n\t}\n\n\tfor (const code of this._styles.slice().reverse()) {\n\t\t// Replace any instances already present with a re-opening code\n\t\t// otherwise only the part of the string until said closing code\n\t\t// will be colored, and the rest will simply be 'plain'.\n\t\tstr = code.open + str.replace(code.closeRe, code.open) + code.close;\n\n\t\t// Close the styling before a linebreak and reopen\n\t\t// after next line to fix a bleed issue on macOS\n\t\t// https://github.com/chalk/chalk/pull/92\n\t\tstr = str.replace(/\\r?\\n/g, `${code.close}$&${code.open}`);\n\t}\n\n\t// Reset the original `dim` if we changed it to work around the Windows dimmed gray issue\n\tansiStyles.dim.open = originalDim;\n\n\treturn str;\n}\n\nfunction chalkTag(chalk, strings) {\n\tif (!Array.isArray(strings)) {\n\t\t// If chalk() was called by itself or with a string,\n\t\t// return the string itself as a string.\n\t\treturn [].slice.call(arguments, 1).join(' ');\n\t}\n\n\tconst args = [].slice.call(arguments, 2);\n\tconst parts = [strings.raw[0]];\n\n\tfor (let i = 1; i < strings.length; i++) {\n\t\tparts.push(String(args[i - 1]).replace(/[{}\\\\]/g, '\\\\$&'));\n\t\tparts.push(String(strings.raw[i]));\n\t}\n\n\treturn template(chalk, parts.join(''));\n}\n\nObject.defineProperties(Chalk.prototype, styles);\n\nmodule.exports = Chalk(); // eslint-disable-line new-cap\nmodule.exports.supportsColor = stdoutColor;\nmodule.exports.default = module.exports; // For TypeScript\n","'use strict';\nconst colorConvert = require('color-convert');\n\nconst wrapAnsi16 = (fn, offset) => function () {\n\tconst code = fn.apply(colorConvert, arguments);\n\treturn `\\u001B[${code + offset}m`;\n};\n\nconst wrapAnsi256 = (fn, offset) => function () {\n\tconst code = fn.apply(colorConvert, arguments);\n\treturn `\\u001B[${38 + offset};5;${code}m`;\n};\n\nconst wrapAnsi16m = (fn, offset) => function () {\n\tconst rgb = fn.apply(colorConvert, arguments);\n\treturn `\\u001B[${38 + offset};2;${rgb[0]};${rgb[1]};${rgb[2]}m`;\n};\n\nfunction assembleStyles() {\n\tconst codes = new Map();\n\tconst styles = {\n\t\tmodifier: {\n\t\t\treset: [0, 0],\n\t\t\t// 21 isn't widely supported and 22 does the same thing\n\t\t\tbold: [1, 22],\n\t\t\tdim: [2, 22],\n\t\t\titalic: [3, 23],\n\t\t\tunderline: [4, 24],\n\t\t\tinverse: [7, 27],\n\t\t\thidden: [8, 28],\n\t\t\tstrikethrough: [9, 29]\n\t\t},\n\t\tcolor: {\n\t\t\tblack: [30, 39],\n\t\t\tred: [31, 39],\n\t\t\tgreen: [32, 39],\n\t\t\tyellow: [33, 39],\n\t\t\tblue: [34, 39],\n\t\t\tmagenta: [35, 39],\n\t\t\tcyan: [36, 39],\n\t\t\twhite: [37, 39],\n\t\t\tgray: [90, 39],\n\n\t\t\t// Bright color\n\t\t\tredBright: [91, 39],\n\t\t\tgreenBright: [92, 39],\n\t\t\tyellowBright: [93, 39],\n\t\t\tblueBright: [94, 39],\n\t\t\tmagentaBright: [95, 39],\n\t\t\tcyanBright: [96, 39],\n\t\t\twhiteBright: [97, 39]\n\t\t},\n\t\tbgColor: {\n\t\t\tbgBlack: [40, 49],\n\t\t\tbgRed: [41, 49],\n\t\t\tbgGreen: [42, 49],\n\t\t\tbgYellow: [43, 49],\n\t\t\tbgBlue: [44, 49],\n\t\t\tbgMagenta: [45, 49],\n\t\t\tbgCyan: [46, 49],\n\t\t\tbgWhite: [47, 49],\n\n\t\t\t// Bright color\n\t\t\tbgBlackBright: [100, 49],\n\t\t\tbgRedBright: [101, 49],\n\t\t\tbgGreenBright: [102, 49],\n\t\t\tbgYellowBright: [103, 49],\n\t\t\tbgBlueBright: [104, 49],\n\t\t\tbgMagentaBright: [105, 49],\n\t\t\tbgCyanBright: [106, 49],\n\t\t\tbgWhiteBright: [107, 49]\n\t\t}\n\t};\n\n\t// Fix humans\n\tstyles.color.grey = styles.color.gray;\n\n\tfor (const groupName of Object.keys(styles)) {\n\t\tconst group = styles[groupName];\n\n\t\tfor (const styleName of Object.keys(group)) {\n\t\t\tconst style = group[styleName];\n\n\t\t\tstyles[styleName] = {\n\t\t\t\topen: `\\u001B[${style[0]}m`,\n\t\t\t\tclose: `\\u001B[${style[1]}m`\n\t\t\t};\n\n\t\t\tgroup[styleName] = styles[styleName];\n\n\t\t\tcodes.set(style[0], style[1]);\n\t\t}\n\n\t\tObject.defineProperty(styles, groupName, {\n\t\t\tvalue: group,\n\t\t\tenumerable: false\n\t\t});\n\n\t\tObject.defineProperty(styles, 'codes', {\n\t\t\tvalue: codes,\n\t\t\tenumerable: false\n\t\t});\n\t}\n\n\tconst ansi2ansi = n => n;\n\tconst rgb2rgb = (r, g, b) => [r, g, b];\n\n\tstyles.color.close = '\\u001B[39m';\n\tstyles.bgColor.close = '\\u001B[49m';\n\n\tstyles.color.ansi = {\n\t\tansi: wrapAnsi16(ansi2ansi, 0)\n\t};\n\tstyles.color.ansi256 = {\n\t\tansi256: wrapAnsi256(ansi2ansi, 0)\n\t};\n\tstyles.color.ansi16m = {\n\t\trgb: wrapAnsi16m(rgb2rgb, 0)\n\t};\n\n\tstyles.bgColor.ansi = {\n\t\tansi: wrapAnsi16(ansi2ansi, 10)\n\t};\n\tstyles.bgColor.ansi256 = {\n\t\tansi256: wrapAnsi256(ansi2ansi, 10)\n\t};\n\tstyles.bgColor.ansi16m = {\n\t\trgb: wrapAnsi16m(rgb2rgb, 10)\n\t};\n\n\tfor (let key of Object.keys(colorConvert)) {\n\t\tif (typeof colorConvert[key] !== 'object') {\n\t\t\tcontinue;\n\t\t}\n\n\t\tconst suite = colorConvert[key];\n\n\t\tif (key === 'ansi16') {\n\t\t\tkey = 'ansi';\n\t\t}\n\n\t\tif ('ansi16' in suite) {\n\t\t\tstyles.color.ansi[key] = wrapAnsi16(suite.ansi16, 0);\n\t\t\tstyles.bgColor.ansi[key] = wrapAnsi16(suite.ansi16, 10);\n\t\t}\n\n\t\tif ('ansi256' in suite) {\n\t\t\tstyles.color.ansi256[key] = wrapAnsi256(suite.ansi256, 0);\n\t\t\tstyles.bgColor.ansi256[key] = wrapAnsi256(suite.ansi256, 10);\n\t\t}\n\n\t\tif ('rgb' in suite) {\n\t\t\tstyles.color.ansi16m[key] = wrapAnsi16m(suite.rgb, 0);\n\t\t\tstyles.bgColor.ansi16m[key] = wrapAnsi16m(suite.rgb, 10);\n\t\t}\n\t}\n\n\treturn styles;\n}\n\n// Make the export immutable\nObject.defineProperty(module, 'exports', {\n\tenumerable: true,\n\tget: assembleStyles\n});\n","var conversions = require('./conversions');\nvar route = require('./route');\n\nvar convert = {};\n\nvar models = Object.keys(conversions);\n\nfunction wrapRaw(fn) {\n\tvar wrappedFn = function (args) {\n\t\tif (args === undefined || args === null) {\n\t\t\treturn args;\n\t\t}\n\n\t\tif (arguments.length > 1) {\n\t\t\targs = Array.prototype.slice.call(arguments);\n\t\t}\n\n\t\treturn fn(args);\n\t};\n\n\t// preserve .conversion property if there is one\n\tif ('conversion' in fn) {\n\t\twrappedFn.conversion = fn.conversion;\n\t}\n\n\treturn wrappedFn;\n}\n\nfunction wrapRounded(fn) {\n\tvar wrappedFn = function (args) {\n\t\tif (args === undefined || args === null) {\n\t\t\treturn args;\n\t\t}\n\n\t\tif (arguments.length > 1) {\n\t\t\targs = Array.prototype.slice.call(arguments);\n\t\t}\n\n\t\tvar result = fn(args);\n\n\t\t// we're assuming the result is an array here.\n\t\t// see notice in conversions.js; don't use box types\n\t\t// in conversion functions.\n\t\tif (typeof result === 'object') {\n\t\t\tfor (var len = result.length, i = 0; i < len; i++) {\n\t\t\t\tresult[i] = Math.round(result[i]);\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t};\n\n\t// preserve .conversion property if there is one\n\tif ('conversion' in fn) {\n\t\twrappedFn.conversion = fn.conversion;\n\t}\n\n\treturn wrappedFn;\n}\n\nmodels.forEach(function (fromModel) {\n\tconvert[fromModel] = {};\n\n\tObject.defineProperty(convert[fromModel], 'channels', {value: conversions[fromModel].channels});\n\tObject.defineProperty(convert[fromModel], 'labels', {value: conversions[fromModel].labels});\n\n\tvar routes = route(fromModel);\n\tvar routeModels = Object.keys(routes);\n\n\trouteModels.forEach(function (toModel) {\n\t\tvar fn = routes[toModel];\n\n\t\tconvert[fromModel][toModel] = wrapRounded(fn);\n\t\tconvert[fromModel][toModel].raw = wrapRaw(fn);\n\t});\n});\n\nmodule.exports = convert;\n","'use strict'\r\n\r\nmodule.exports = {\r\n\t\"aliceblue\": [240, 248, 255],\r\n\t\"antiquewhite\": [250, 235, 215],\r\n\t\"aqua\": [0, 255, 255],\r\n\t\"aquamarine\": [127, 255, 212],\r\n\t\"azure\": [240, 255, 255],\r\n\t\"beige\": [245, 245, 220],\r\n\t\"bisque\": [255, 228, 196],\r\n\t\"black\": [0, 0, 0],\r\n\t\"blanchedalmond\": [255, 235, 205],\r\n\t\"blue\": [0, 0, 255],\r\n\t\"blueviolet\": [138, 43, 226],\r\n\t\"brown\": [165, 42, 42],\r\n\t\"burlywood\": [222, 184, 135],\r\n\t\"cadetblue\": [95, 158, 160],\r\n\t\"chartreuse\": [127, 255, 0],\r\n\t\"chocolate\": [210, 105, 30],\r\n\t\"coral\": [255, 127, 80],\r\n\t\"cornflowerblue\": [100, 149, 237],\r\n\t\"cornsilk\": [255, 248, 220],\r\n\t\"crimson\": [220, 20, 60],\r\n\t\"cyan\": [0, 255, 255],\r\n\t\"darkblue\": [0, 0, 139],\r\n\t\"darkcyan\": [0, 139, 139],\r\n\t\"darkgoldenrod\": [184, 134, 11],\r\n\t\"darkgray\": [169, 169, 169],\r\n\t\"darkgreen\": [0, 100, 0],\r\n\t\"darkgrey\": [169, 169, 169],\r\n\t\"darkkhaki\": [189, 183, 107],\r\n\t\"darkmagenta\": [139, 0, 139],\r\n\t\"darkolivegreen\": [85, 107, 47],\r\n\t\"darkorange\": [255, 140, 0],\r\n\t\"darkorchid\": [153, 50, 204],\r\n\t\"darkred\": [139, 0, 0],\r\n\t\"darksalmon\": [233, 150, 122],\r\n\t\"darkseagreen\": [143, 188, 143],\r\n\t\"darkslateblue\": [72, 61, 139],\r\n\t\"darkslategray\": [47, 79, 79],\r\n\t\"darkslategrey\": [47, 79, 79],\r\n\t\"darkturquoise\": [0, 206, 209],\r\n\t\"darkviolet\": [148, 0, 211],\r\n\t\"deeppink\": [255, 20, 147],\r\n\t\"deepskyblue\": [0, 191, 255],\r\n\t\"dimgray\": [105, 105, 105],\r\n\t\"dimgrey\": [105, 105, 105],\r\n\t\"dodgerblue\": [30, 144, 255],\r\n\t\"firebrick\": [178, 34, 34],\r\n\t\"floralwhite\": [255, 250, 240],\r\n\t\"forestgreen\": [34, 139, 34],\r\n\t\"fuchsia\": [255, 0, 255],\r\n\t\"gainsboro\": [220, 220, 220],\r\n\t\"ghostwhite\": [248, 248, 255],\r\n\t\"gold\": [255, 215, 0],\r\n\t\"goldenrod\": [218, 165, 32],\r\n\t\"gray\": [128, 128, 128],\r\n\t\"green\": [0, 128, 0],\r\n\t\"greenyellow\": [173, 255, 47],\r\n\t\"grey\": [128, 128, 128],\r\n\t\"honeydew\": [240, 255, 240],\r\n\t\"hotpink\": [255, 105, 180],\r\n\t\"indianred\": [205, 92, 92],\r\n\t\"indigo\": [75, 0, 130],\r\n\t\"ivory\": [255, 255, 240],\r\n\t\"khaki\": [240, 230, 140],\r\n\t\"lavender\": [230, 230, 250],\r\n\t\"lavenderblush\": [255, 240, 245],\r\n\t\"lawngreen\": [124, 252, 0],\r\n\t\"lemonchiffon\": [255, 250, 205],\r\n\t\"lightblue\": [173, 216, 230],\r\n\t\"lightcoral\": [240, 128, 128],\r\n\t\"lightcyan\": [224, 255, 255],\r\n\t\"lightgoldenrodyellow\": [250, 250, 210],\r\n\t\"lightgray\": [211, 211, 211],\r\n\t\"lightgreen\": [144, 238, 144],\r\n\t\"lightgrey\": [211, 211, 211],\r\n\t\"lightpink\": [255, 182, 193],\r\n\t\"lightsalmon\": [255, 160, 122],\r\n\t\"lightseagreen\": [32, 178, 170],\r\n\t\"lightskyblue\": [135, 206, 250],\r\n\t\"lightslategray\": [119, 136, 153],\r\n\t\"lightslategrey\": [119, 136, 153],\r\n\t\"lightsteelblue\": [176, 196, 222],\r\n\t\"lightyellow\": [255, 255, 224],\r\n\t\"lime\": [0, 255, 0],\r\n\t\"limegreen\": [50, 205, 50],\r\n\t\"linen\": [250, 240, 230],\r\n\t\"magenta\": [255, 0, 255],\r\n\t\"maroon\": [128, 0, 0],\r\n\t\"mediumaquamarine\": [102, 205, 170],\r\n\t\"mediumblue\": [0, 0, 205],\r\n\t\"mediumorchid\": [186, 85, 211],\r\n\t\"mediumpurple\": [147, 112, 219],\r\n\t\"mediumseagreen\": [60, 179, 113],\r\n\t\"mediumslateblue\": [123, 104, 238],\r\n\t\"mediumspringgreen\": [0, 250, 154],\r\n\t\"mediumturquoise\": [72, 209, 204],\r\n\t\"mediumvioletred\": [199, 21, 133],\r\n\t\"midnightblue\": [25, 25, 112],\r\n\t\"mintcream\": [245, 255, 250],\r\n\t\"mistyrose\": [255, 228, 225],\r\n\t\"moccasin\": [255, 228, 181],\r\n\t\"navajowhite\": [255, 222, 173],\r\n\t\"navy\": [0, 0, 128],\r\n\t\"oldlace\": [253, 245, 230],\r\n\t\"olive\": [128, 128, 0],\r\n\t\"olivedrab\": [107, 142, 35],\r\n\t\"orange\": [255, 165, 0],\r\n\t\"orangered\": [255, 69, 0],\r\n\t\"orchid\": [218, 112, 214],\r\n\t\"palegoldenrod\": [238, 232, 170],\r\n\t\"palegreen\": [152, 251, 152],\r\n\t\"paleturquoise\": [175, 238, 238],\r\n\t\"palevioletred\": [219, 112, 147],\r\n\t\"papayawhip\": [255, 239, 213],\r\n\t\"peachpuff\": [255, 218, 185],\r\n\t\"peru\": [205, 133, 63],\r\n\t\"pink\": [255, 192, 203],\r\n\t\"plum\": [221, 160, 221],\r\n\t\"powderblue\": [176, 224, 230],\r\n\t\"purple\": [128, 0, 128],\r\n\t\"rebeccapurple\": [102, 51, 153],\r\n\t\"red\": [255, 0, 0],\r\n\t\"rosybrown\": [188, 143, 143],\r\n\t\"royalblue\": [65, 105, 225],\r\n\t\"saddlebrown\": [139, 69, 19],\r\n\t\"salmon\": [250, 128, 114],\r\n\t\"sandybrown\": [244, 164, 96],\r\n\t\"seagreen\": [46, 139, 87],\r\n\t\"seashell\": [255, 245, 238],\r\n\t\"sienna\": [160, 82, 45],\r\n\t\"silver\": [192, 192, 192],\r\n\t\"skyblue\": [135, 206, 235],\r\n\t\"slateblue\": [106, 90, 205],\r\n\t\"slategray\": [112, 128, 144],\r\n\t\"slategrey\": [112, 128, 144],\r\n\t\"snow\": [255, 250, 250],\r\n\t\"springgreen\": [0, 255, 127],\r\n\t\"steelblue\": [70, 130, 180],\r\n\t\"tan\": [210, 180, 140],\r\n\t\"teal\": [0, 128, 128],\r\n\t\"thistle\": [216, 191, 216],\r\n\t\"tomato\": [255, 99, 71],\r\n\t\"turquoise\": [64, 224, 208],\r\n\t\"violet\": [238, 130, 238],\r\n\t\"wheat\": [245, 222, 179],\r\n\t\"white\": [255, 255, 255],\r\n\t\"whitesmoke\": [245, 245, 245],\r\n\t\"yellow\": [255, 255, 0],\r\n\t\"yellowgreen\": [154, 205, 50]\r\n};\r\n","var conversions = require('./conversions');\n\n/*\n\tthis function routes a model to all other models.\n\n\tall functions that are routed have a property `.conversion` attached\n\tto the returned synthetic function. This property is an array\n\tof strings, each with the steps in between the 'from' and 'to'\n\tcolor models (inclusive).\n\n\tconversions that are not possible simply are not included.\n*/\n\nfunction buildGraph() {\n\tvar graph = {};\n\t// https://jsperf.com/object-keys-vs-for-in-with-closure/3\n\tvar models = Object.keys(conversions);\n\n\tfor (var len = models.length, i = 0; i < len; i++) {\n\t\tgraph[models[i]] = {\n\t\t\t// http://jsperf.com/1-vs-infinity\n\t\t\t// micro-opt, but this is simple.\n\t\t\tdistance: -1,\n\t\t\tparent: null\n\t\t};\n\t}\n\n\treturn graph;\n}\n\n// https://en.wikipedia.org/wiki/Breadth-first_search\nfunction deriveBFS(fromModel) {\n\tvar graph = buildGraph();\n\tvar queue = [fromModel]; // unshift -> queue -> pop\n\n\tgraph[fromModel].distance = 0;\n\n\twhile (queue.length) {\n\t\tvar current = queue.pop();\n\t\tvar adjacents = Object.keys(conversions[current]);\n\n\t\tfor (var len = adjacents.length, i = 0; i < len; i++) {\n\t\t\tvar adjacent = adjacents[i];\n\t\t\tvar node = graph[adjacent];\n\n\t\t\tif (node.distance === -1) {\n\t\t\t\tnode.distance = graph[current].distance + 1;\n\t\t\t\tnode.parent = current;\n\t\t\t\tqueue.unshift(adjacent);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn graph;\n}\n\nfunction link(from, to) {\n\treturn function (args) {\n\t\treturn to(from(args));\n\t};\n}\n\nfunction wrapConversion(toModel, graph) {\n\tvar path = [graph[toModel].parent, toModel];\n\tvar fn = conversions[graph[toModel].parent][toModel];\n\n\tvar cur = graph[toModel].parent;\n\twhile (graph[cur].parent) {\n\t\tpath.unshift(graph[cur].parent);\n\t\tfn = link(conversions[graph[cur].parent][cur], fn);\n\t\tcur = graph[cur].parent;\n\t}\n\n\tfn.conversion = path;\n\treturn fn;\n}\n\nmodule.exports = function (fromModel) {\n\tvar graph = deriveBFS(fromModel);\n\tvar conversion = {};\n\n\tvar models = Object.keys(graph);\n\tfor (var len = models.length, i = 0; i < len; i++) {\n\t\tvar toModel = models[i];\n\t\tvar node = graph[toModel];\n\n\t\tif (node.parent === null) {\n\t\t\t// no possible conversion, or this node is the source model.\n\t\t\tcontinue;\n\t\t}\n\n\t\tconversion[toModel] = wrapConversion(toModel, graph);\n\t}\n\n\treturn conversion;\n};\n\n","'use strict';\nmodule.exports = {\n\tstdout: false,\n\tstderr: false\n};\n","'use strict';\nconst TEMPLATE_REGEX = /(?:\\\\(u[a-f\\d]{4}|x[a-f\\d]{2}|.))|(?:\\{(~)?(\\w+(?:\\([^)]*\\))?(?:\\.\\w+(?:\\([^)]*\\))?)*)(?:[ \\t]|(?=\\r?\\n)))|(\\})|((?:.|[\\r\\n\\f])+?)/gi;\nconst STYLE_REGEX = /(?:^|\\.)(\\w+)(?:\\(([^)]*)\\))?/g;\nconst STRING_REGEX = /^(['\"])((?:\\\\.|(?!\\1)[^\\\\])*)\\1$/;\nconst ESCAPE_REGEX = /\\\\(u[a-f\\d]{4}|x[a-f\\d]{2}|.)|([^\\\\])/gi;\n\nconst ESCAPES = new Map([\n\t['n', '\\n'],\n\t['r', '\\r'],\n\t['t', '\\t'],\n\t['b', '\\b'],\n\t['f', '\\f'],\n\t['v', '\\v'],\n\t['0', '\\0'],\n\t['\\\\', '\\\\'],\n\t['e', '\\u001B'],\n\t['a', '\\u0007']\n]);\n\nfunction unescape(c) {\n\tif ((c[0] === 'u' && c.length === 5) || (c[0] === 'x' && c.length === 3)) {\n\t\treturn String.fromCharCode(parseInt(c.slice(1), 16));\n\t}\n\n\treturn ESCAPES.get(c) || c;\n}\n\nfunction parseArguments(name, args) {\n\tconst results = [];\n\tconst chunks = args.trim().split(/\\s*,\\s*/g);\n\tlet matches;\n\n\tfor (const chunk of chunks) {\n\t\tif (!isNaN(chunk)) {\n\t\t\tresults.push(Number(chunk));\n\t\t} else if ((matches = chunk.match(STRING_REGEX))) {\n\t\t\tresults.push(matches[2].replace(ESCAPE_REGEX, (m, escape, chr) => escape ? unescape(escape) : chr));\n\t\t} else {\n\t\t\tthrow new Error(`Invalid Chalk template style argument: ${chunk} (in style '${name}')`);\n\t\t}\n\t}\n\n\treturn results;\n}\n\nfunction parseStyle(style) {\n\tSTYLE_REGEX.lastIndex = 0;\n\n\tconst results = [];\n\tlet matches;\n\n\twhile ((matches = STYLE_REGEX.exec(style)) !== null) {\n\t\tconst name = matches[1];\n\n\t\tif (matches[2]) {\n\t\t\tconst args = parseArguments(name, matches[2]);\n\t\t\tresults.push([name].concat(args));\n\t\t} else {\n\t\t\tresults.push([name]);\n\t\t}\n\t}\n\n\treturn results;\n}\n\nfunction buildStyle(chalk, styles) {\n\tconst enabled = {};\n\n\tfor (const layer of styles) {\n\t\tfor (const style of layer.styles) {\n\t\t\tenabled[style[0]] = layer.inverse ? null : style.slice(1);\n\t\t}\n\t}\n\n\tlet current = chalk;\n\tfor (const styleName of Object.keys(enabled)) {\n\t\tif (Array.isArray(enabled[styleName])) {\n\t\t\tif (!(styleName in current)) {\n\t\t\t\tthrow new Error(`Unknown Chalk style: ${styleName}`);\n\t\t\t}\n\n\t\t\tif (enabled[styleName].length > 0) {\n\t\t\t\tcurrent = current[styleName].apply(current, enabled[styleName]);\n\t\t\t} else {\n\t\t\t\tcurrent = current[styleName];\n\t\t\t}\n\t\t}\n\t}\n\n\treturn current;\n}\n\nmodule.exports = (chalk, tmp) => {\n\tconst styles = [];\n\tconst chunks = [];\n\tlet chunk = [];\n\n\t// eslint-disable-next-line max-params\n\ttmp.replace(TEMPLATE_REGEX, (m, escapeChar, inverse, style, close, chr) => {\n\t\tif (escapeChar) {\n\t\t\tchunk.push(unescape(escapeChar));\n\t\t} else if (style) {\n\t\t\tconst str = chunk.join('');\n\t\t\tchunk = [];\n\t\t\tchunks.push(styles.length === 0 ? str : buildStyle(chalk, styles)(str));\n\t\t\tstyles.push({inverse, styles: parseStyle(style)});\n\t\t} else if (close) {\n\t\t\tif (styles.length === 0) {\n\t\t\t\tthrow new Error('Found extraneous } in Chalk template literal');\n\t\t\t}\n\n\t\t\tchunks.push(buildStyle(chalk, styles)(chunk.join('')));\n\t\t\tchunk = [];\n\t\t\tstyles.pop();\n\t\t} else {\n\t\t\tchunk.push(chr);\n\t\t}\n\t});\n\n\tchunks.push(chunk.join(''));\n\n\tif (styles.length > 0) {\n\t\tconst errMsg = `Chalk template literal is missing ${styles.length} closing bracket${styles.length === 1 ? '' : 's'} (\\`}\\`)`;\n\t\tthrow new Error(errMsg);\n\t}\n\n\treturn chunks.join('');\n};\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = literalTemplate;\n\nvar _options = require(\"./options\");\n\nvar _parse = _interopRequireDefault(require(\"./parse\"));\n\nvar _populate = _interopRequireDefault(require(\"./populate\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction literalTemplate(formatter, tpl, opts) {\n  const {\n    metadata,\n    names\n  } = buildLiteralData(formatter, tpl, opts);\n  return arg => {\n    const defaultReplacements = {};\n    arg.forEach((replacement, i) => {\n      defaultReplacements[names[i]] = replacement;\n    });\n    return arg => {\n      const replacements = (0, _options.normalizeReplacements)(arg);\n\n      if (replacements) {\n        Object.keys(replacements).forEach(key => {\n          if (Object.prototype.hasOwnProperty.call(defaultReplacements, key)) {\n            throw new Error(\"Unexpected replacement overlap.\");\n          }\n        });\n      }\n\n      return formatter.unwrap((0, _populate.default)(metadata, replacements ? Object.assign(replacements, defaultReplacements) : defaultReplacements));\n    };\n  };\n}\n\nfunction buildLiteralData(formatter, tpl, opts) {\n  let names;\n  let nameSet;\n  let metadata;\n  let prefix = \"\";\n\n  do {\n    prefix += \"$\";\n    const result = buildTemplateCode(tpl, prefix);\n    names = result.names;\n    nameSet = new Set(names);\n    metadata = (0, _parse.default)(formatter, formatter.code(result.code), {\n      parser: opts.parser,\n      placeholderWhitelist: new Set(result.names.concat(opts.placeholderWhitelist ? Array.from(opts.placeholderWhitelist) : [])),\n      placeholderPattern: opts.placeholderPattern,\n      preserveComments: opts.preserveComments,\n      syntacticPlaceholders: opts.syntacticPlaceholders\n    });\n  } while (metadata.placeholders.some(placeholder => placeholder.isDuplicate && nameSet.has(placeholder.name)));\n\n  return {\n    metadata,\n    names\n  };\n}\n\nfunction buildTemplateCode(tpl, prefix) {\n  const names = [];\n  let code = tpl[0];\n\n  for (let i = 1; i < tpl.length; i++) {\n    const value = `${prefix}${i - 1}`;\n    names.push(value);\n    code += value + tpl[i];\n  }\n\n  return {\n    names,\n    code\n  };\n}"],"sourceRoot":""}