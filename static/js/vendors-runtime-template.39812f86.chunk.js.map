{"version":3,"sources":["../node_modules/@babel/template/lib/index.js","../node_modules/@babel/plugin-transform-classes/lib/transformClass.js","../node_modules/@babel/plugin-transform-classes/lib/inline-createSuper-helpers.js","../node_modules/@babel/parser/lib/index.js","../node_modules/@babel/code-frame/lib/index.js","../node_modules/@babel/template/lib/options.js","../node_modules/@babel/template/lib/parse.js","../node_modules/@babel/highlight/node_modules/color-convert/conversions.js","../node_modules/@babel/template/lib/populate.js","../node_modules/@babel/plugin-transform-classes/lib/index.js","../node_modules/@babel/template/lib/formatters.js","../node_modules/@babel/template/lib/builder.js","../node_modules/@babel/template/lib/string.js","../node_modules/@babel/highlight/lib/index.js","../node_modules/@babel/highlight/node_modules/chalk/index.js","../node_modules/@babel/highlight/node_modules/ansi-styles/index.js","../node_modules/@babel/highlight/node_modules/color-convert/index.js","../node_modules/@babel/highlight/node_modules/color-name/index.js","../node_modules/@babel/highlight/node_modules/color-convert/route.js","../node_modules/@babel/highlight/node_modules/supports-color/browser.js","../node_modules/@babel/highlight/node_modules/chalk/templates.js","../node_modules/@babel/template/lib/literal.js"],"names":["Object","defineProperty","exports","value","default","program","expression","statements","statement","smart","obj","formatters","__esModule","cache","_getRequireWildcardCache","has","get","newObj","hasPropertyDescriptor","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","_interopRequireWildcard","require","_builder","WeakMap","_default","assign","bind","undefined","ast","path","file","builtinClasses","isLoose","classState","parent","scope","node","classId","classRef","superFnId","superName","superReturns","isDerived","extendsNative","construct","constructorBody","userConstructor","userConstructorPath","hasConstructor","instancePropBody","instancePropRefs","staticPropBody","body","superThises","pushedConstructor","pushedInherits","protoAlias","hasInstanceDescriptors","hasStaticDescriptors","instanceMutatorMap","staticMutatorMap","setState","newState","findThisesVisitor","_core","traverse","visitors","merge","_helperReplaceSupers","environmentVisitor","ThisExpression","push","buildBody","paths","equals","params","constructor","template","types","blockStatement","unshiftContainer","classMethod","identifier","maybeCreateConstructor","classBodyPaths","isClassProperty","buildCodeFrameError","decorators","isClassMethod","isConstructor","kind","methodPath","objectRef","superRef","replace","ReturnStatement","getFunctionParent","isArrowFunctionExpression","pushConstructor","pushMethod","pushBody","thisRef","ref","generateDeclaredUidIdentifier","cloneNode","thisPath","parentPath","isMemberExpression","object","replaceWith","callExpression","addHelper","bareSupers","Set","Super","isCallExpression","callee","add","wrapReturn","guaranteedSuperBeforeFinish","size","bareSuper","wrapSuperCall","find","isLoop","isConditional","returnArg","thisExpr","logicalExpression","concat","bodyPaths","length","pop","isReturnStatement","pushContainer","returnStatement","returnPath","argument","verifyConstructor","inherits","pushDescriptors","pushInheritsToBody","instanceProps","staticProps","defineMap","toClassObject","toComputedObjectFromClass","args","nullLiteral","lastNonNullIndex","i","isNullLiteral","slice","expressionStatement","bareSuperNode","arguments","unshift","thisExpression","isSpreadElement","isIdentifier","name","memberExpression","_helperOptimiseCallExpression","isExpressionStatement","container","assignmentExpression","static","generateUidIdentifier","classProto","protoDeclaration","variableDeclaration","variableDeclarator","insertProtoAliasOnce","methodName","computed","isLiteral","func","functionExpression","generator","async","toComputedKey","isStringLiteral","_helperFunctionName","id","expr","inheritsComments","processMethod","enumerable","mutatorMap","map","booleanLiteral","pushToMap","method","hasOwnBinding","rename","directives","pushConstructorToBody","_inlineCreateSuperHelpers","superClass","hasBinding","buildConstructor","closureParams","closureArgs","arg","_helperAnnotateAsPure","param","generateUidIdentifierBasedOnNode","setupClosureParamsArgs","fn","isStrict","isInStrictMode","constructorOnly","directive","directiveLiteral","toExpression","arrowFunctionExpression","classTransformer","_interopRequireDefault","functionDeclaration","helperIDs","clone","_unused","helper","CREATE_SUPER","GET_PROTOTYPE_OF","POSSIBLE_CONSTRUCTOR_RETURN","registerDeclaration","beforeExpr","startsExpr","prefix","TokenType","label","conf","this","keyword","rightAssociative","isAssign","postfix","binop","updateContext","keywords","Map","createKeyword","options","token","createBinop","num","bigint","decimal","regexp","string","eof","bracketL","bracketHashL","bracketBarL","bracketR","bracketBarR","braceL","braceBarL","braceHashL","braceR","braceBarR","parenL","parenR","comma","semi","colon","doubleColon","dot","question","questionDot","arrow","ellipsis","backQuote","dollarBraceL","at","hash","interpreterDirective","eq","incDec","bang","tilde","pipeline","nullishCoalescing","logicalOR","logicalAND","bitwiseOR","bitwiseXOR","bitwiseAND","equality","relational","bitShift","plusMin","modulo","star","slash","exponent","_break","_case","_catch","_continue","_debugger","_do","_else","_finally","_for","_function","_if","_return","_switch","_throw","_try","_var","_const","_while","_with","_new","_this","_super","_class","_extends","_export","_import","_null","_true","_false","_in","_instanceof","_typeof","_void","_delete","lineBreak","lineBreakG","RegExp","source","isNewLine","code","skipWhiteSpace","isWhitespace","Position","line","col","column","SourceLocation","start","end","filename","identifierName","last","stack","CommentsParser","comment","loc","state","trailingComments","leadingComments","elements","takeAllComments","lastElement","j","commentPreviousNode","splice","newTrailingComments","leadingComment","type","firstChild","lastChild","commentStack","lastInStack","adjustCommentsAfterTrailingComma","properties","innerComments","firstTrailingCommentIndex","findIndex","sawUnambiguousESM","ambiguousScriptDifferentAst","plugins","plugin","hasPlugin","ErrorMessages","freeze","AccessorIsGenerator","ArgumentsInClass","AsyncFunctionInSingleStatementContext","AwaitBindingIdentifier","AwaitBindingIdentifierInStaticBlock","AwaitExpressionFormalParameter","AwaitNotInAsyncContext","AwaitNotInAsyncFunction","BadGetterArity","BadSetterArity","BadSetterRestParameter","ConstructorClassField","ConstructorClassPrivateField","ConstructorIsAccessor","ConstructorIsAsync","ConstructorIsGenerator","DeclarationMissingInitializer","DecoratorBeforeExport","DecoratorConstructor","DecoratorExportClass","DecoratorSemicolon","DecoratorStaticBlock","DeletePrivateField","DestructureNamedImport","DuplicateConstructor","DuplicateDefaultExport","DuplicateExport","DuplicateProto","DuplicateRegExpFlags","DuplicateStaticBlock","ElementAfterRest","EscapedCharNotAnIdentifier","ExportBindingIsString","ExportDefaultFromAsIdentifier","ForInOfLoopInitializer","GeneratorInSingleStatementContext","IllegalBreakContinue","IllegalLanguageModeDirective","IllegalReturn","ImportBindingIsString","ImportCallArgumentTrailingComma","ImportCallArity","ImportCallNotNewExpression","ImportCallSpreadArgument","ImportMetaOutsideModule","ImportOutsideModule","InvalidBigIntLiteral","InvalidCodePoint","InvalidDecimal","InvalidDigit","InvalidEscapeSequence","InvalidEscapeSequenceTemplate","InvalidEscapedReservedWord","InvalidIdentifier","InvalidLhs","InvalidLhsBinding","InvalidNumber","InvalidOrMissingExponent","InvalidOrUnexpectedToken","InvalidParenthesizedAssignment","InvalidPrivateFieldResolution","InvalidPropertyBindingPattern","InvalidRecordProperty","InvalidRestAssignmentPattern","LabelRedeclaration","LetInLexicalBinding","LineTerminatorBeforeArrow","MalformedRegExpFlags","MissingClassName","MissingEqInAssignment","MissingSemicolon","MissingUnicodeEscape","MixingCoalesceWithLogical","ModuleAttributeDifferentFromType","ModuleAttributeInvalidValue","ModuleAttributesWithDuplicateKeys","ModuleExportNameHasLoneSurrogate","ModuleExportUndefined","MultipleDefaultsInSwitch","NewlineAfterThrow","NoCatchOrFinally","NumberIdentifier","NumericSeparatorInEscapeSequence","ObsoleteAwaitStar","OptionalChainingNoNew","OptionalChainingNoTemplate","ParamDupe","PatternHasAccessor","PatternHasMethod","PipelineBodyNoArrow","PipelineBodySequenceExpression","PipelineHeadSequenceExpression","PipelineTopicUnused","PrimaryTopicNotAllowed","PrimaryTopicRequiresSmartPipeline","PrivateInExpectedIn","PrivateNameRedeclaration","RecordExpressionBarIncorrectEndSyntaxType","RecordExpressionBarIncorrectStartSyntaxType","RecordExpressionHashIncorrectStartSyntaxType","RecordNoProto","RestTrailingComma","SloppyFunction","StaticPrototype","StrictDelete","StrictEvalArguments","StrictEvalArgumentsBinding","StrictFunction","StrictNumericEscape","StrictOctalLiteral","StrictWith","SuperNotAllowed","SuperPrivateField","TrailingDecorator","TupleExpressionBarIncorrectEndSyntaxType","TupleExpressionBarIncorrectStartSyntaxType","TupleExpressionHashIncorrectStartSyntaxType","UnexpectedArgumentPlaceholder","UnexpectedAwaitAfterPipelineBody","UnexpectedDigitAfterHash","UnexpectedImportExport","UnexpectedKeyword","UnexpectedLeadingDecorator","UnexpectedLexicalDeclaration","UnexpectedNewTarget","UnexpectedNumericSeparator","UnexpectedPrivateField","UnexpectedReservedWord","UnexpectedSuper","UnexpectedToken","UnexpectedTokenUnaryExponentiation","UnsupportedBind","UnsupportedDecoratorExport","UnsupportedDefaultExport","UnsupportedImport","UnsupportedMetaProperty","UnsupportedParameterDecorator","UnsupportedPropertyDecorator","UnsupportedSuper","UnterminatedComment","UnterminatedRegExp","UnterminatedString","UnterminatedTemplate","VarRedeclaration","YieldBindingIdentifier","YieldInParameter","ZeroDigitNumericSeparator","ParserError","pos","startLoc","lastTokStart","lastTokStartLoc","endLoc","lastTokEnd","lastTokEndLoc","input","offset","match","lineStart","lastIndex","exec","index","getLineInfo","errorTemplate","raiseWithData","getLocationForPosition","message","_","errorRecovery","errors","error","_raise","data","errorContext","err","SyntaxError","isLookahead","TokContext","isExpr","preserveSpace","override","types$1","braceStatement","braceExpression","recordExpression","templateQuasi","parenStatement","parenExpression","p","readTmplToken","functionStatement","context","out","curContext","exprAllowed","prevType","allowed","isIterator","braceIsBlock","statementParens","hasPrecedingLineBreak","b_stat","nonASCIIidentifierStartChars","nonASCIIidentifierChars","nonASCIIidentifierStart","nonASCIIidentifier","astralIdentifierStartCodes","astralIdentifierCodes","isInAstralSet","isIdentifierStart","test","String","fromCharCode","isIdentifierChar","reservedWords","keywords$1","reservedWordsStrictSet","reservedWordsStrictBindSet","isReservedWord","word","inModule","isStrictReservedWord","isStrictBindOnlyReservedWord","isStrictBindReservedWord","isKeyword","keywordRelationalOperator","SCOPE_CLASS","SCOPE_TS_MODULE","BIND_FLAGS_CLASS","BIND_FLAGS_TS_ENUM","BIND_FLAGS_TS_CONST_ENUM","BIND_FLAGS_TS_EXPORT_ONLY","BIND_FLAGS_FLOW_DECLARE_FN","BIND_TS_AMBIENT","BIND_NONE","Scope","flags","var","lexical","functions","ScopeHandler","raise","scopeStack","undefinedExports","undefinedPrivateNames","createScope","bindingType","currentScope","checkRedeclarationInScope","maybeExportDefined","SCOPE_PROGRAM","delete","isRedeclaredInScope","indexOf","treatFunctionsAsVarInScope","currentVarScope","currentThisScope","FlowScope","declareFunctions","FlowScopeHandler","includes","reservedTypes","FlowErrors","AmbiguousConditionalArrow","AmbiguousDeclareModuleKind","AssignReservedType","DeclareClassElement","DeclareClassFieldInitializer","DuplicateDeclareModuleExports","EnumBooleanMemberNotInitialized","EnumDuplicateMemberName","EnumInconsistentMemberValues","EnumInvalidExplicitType","EnumInvalidExplicitTypeUnknownSupplied","EnumInvalidMemberInitializerPrimaryType","EnumInvalidMemberInitializerSymbolType","EnumInvalidMemberInitializerUnknownType","EnumInvalidMemberName","EnumNumberMemberNotInitialized","EnumStringMemberInconsistentlyInitailized","ImportTypeShorthandOnlyInPureImport","InexactInsideExact","InexactInsideNonObject","InexactVariance","InvalidNonTypeImportInDeclareModule","MissingTypeParamDefault","NestedDeclareModule","NestedFlowComment","OptionalBindingPattern","SpreadVariance","TypeBeforeInitializer","TypeCastInPattern","UnexpectedExplicitInexactInObject","UnexpectedReservedType","UnexpectedReservedUnderscore","UnexpectedSpaceBetweenModuloChecks","UnexpectedSpreadType","UnexpectedSubtractionOperand","UnexpectedTokenAfterTypeParameter","UnexpectedTypeParameterBeforeAsyncArrowFunction","UnsupportedDeclareExportKind","UnsupportedStatementInDeclareModule","UnterminatedFlowComment","hasTypeImportKind","importKind","isMaybeDefaultImport","exportSuggestions","const","let","interface","FLOW_PRAGMA_REGEX","entities","quot","amp","apos","lt","gt","nbsp","iexcl","cent","pound","curren","yen","brvbar","sect","uml","copy","ordf","laquo","not","shy","reg","macr","deg","plusmn","sup2","sup3","acute","micro","para","middot","cedil","sup1","ordm","raquo","frac14","frac12","frac34","iquest","Agrave","Aacute","Acirc","Atilde","Auml","Aring","AElig","Ccedil","Egrave","Eacute","Ecirc","Euml","Igrave","Iacute","Icirc","Iuml","ETH","Ntilde","Ograve","Oacute","Ocirc","Otilde","Ouml","times","Oslash","Ugrave","Uacute","Ucirc","Uuml","Yacute","THORN","szlig","agrave","aacute","acirc","atilde","auml","aring","aelig","ccedil","egrave","eacute","ecirc","euml","igrave","iacute","icirc","iuml","eth","ntilde","ograve","oacute","ocirc","otilde","ouml","divide","oslash","ugrave","uacute","ucirc","uuml","yacute","thorn","yuml","OElig","oelig","Scaron","scaron","Yuml","fnof","circ","Alpha","Beta","Gamma","Delta","Epsilon","Zeta","Eta","Theta","Iota","Kappa","Lambda","Mu","Nu","Xi","Omicron","Pi","Rho","Sigma","Tau","Upsilon","Phi","Chi","Psi","Omega","alpha","beta","gamma","delta","epsilon","zeta","eta","theta","iota","kappa","lambda","mu","nu","xi","omicron","pi","rho","sigmaf","sigma","tau","upsilon","phi","chi","psi","omega","thetasym","upsih","piv","ensp","emsp","thinsp","zwnj","zwj","lrm","rlm","ndash","mdash","lsquo","rsquo","sbquo","ldquo","rdquo","bdquo","dagger","Dagger","bull","hellip","permil","prime","Prime","lsaquo","rsaquo","oline","frasl","euro","image","weierp","real","trade","alefsym","larr","uarr","rarr","darr","harr","crarr","lArr","uArr","rArr","dArr","hArr","forall","part","exist","empty","nabla","isin","notin","ni","prod","sum","minus","lowast","radic","prop","infin","ang","and","or","cap","cup","int","there4","sim","cong","asymp","ne","equiv","le","ge","sub","sup","nsub","sube","supe","oplus","otimes","perp","sdot","lceil","rceil","lfloor","rfloor","lang","rang","loz","spades","clubs","hearts","diams","HEX_NUMBER","DECIMAL_NUMBER","JsxErrors","AttributeIsEmpty","MissingClosingTagFragment","MissingClosingTagElement","UnexpectedSequenceExpression","UnsupportedJsxValue","UnterminatedJsxContent","UnwrappedAdjacentJSXElements","isFragment","getQualifiedJSXName","namespace","property","Error","j_oTag","j_cTag","j_expr","jsxName","jsxText","jsxTagStart","jsxTagEnd","TypeScriptScope","enums","constEnums","classes","exportOnlyBindings","TypeScriptScopeHandler","isConst","wasConst","ProductionParameterHandler","stacks","currentFlags","functionFlags","isAsync","isGenerator","nonNull","x","assert","TSErrors","ClassMethodHasDeclare","ClassMethodHasReadonly","ConstructorHasTypeParameters","DeclareClassFieldHasInitializer","DeclareFunctionHasImplementation","DuplicateModifier","DuplicateAccessibilityModifier","EmptyHeritageClauseType","EmptyTypeArguments","EmptyTypeParameters","ExpectedAmbientAfterExportDeclare","IndexSignatureHasAbstract","IndexSignatureHasAccessibility","IndexSignatureHasStatic","IndexSignatureHasDeclare","InvalidTupleMemberLabel","MixedLabeledAndUnlabeledElements","NonAbstractClassHasAbstractMethod","NonClassMethodPropertyHasAbstractModifer","OptionalTypeBeforeRequired","PatternIsOptional","PrivateElementHasAbstract","PrivateElementHasAccessibility","TypeAnnotationAfterAssign","UnexpectedParameterModifier","UnexpectedReadonly","UnexpectedTypeAnnotation","UnexpectedTypeCastInParameter","UnsupportedImportTypeArgument","UnsupportedParameterPropertyKind","UnsupportedSignatureParameterKind","tsIsAccessModifier","modifier","placeholder","some","Array","isArray","getPluginOption","option","PIPELINE_PROPOSALS","RECORD_AND_TUPLE_SYNTAX_TYPES","mixinPlugins","estree","pattern","regex","e","estreeParseLiteral","bigInt","BigInt","parseLiteral","stmt","startNodeAt","extra","expressionValue","raw","finishNodeAt","isObjectProperty","checkDeclaration","_stmt$expression$extr","parenthesized","addExtra","directiveStatements","d","directiveToStmt","classBody","allowsDirectSuper","parseMethod","typeParameters","refExpressionErrors","estreeParseRegExpLiteral","estreeParseBigIntLiteral","estreeParseDecimalLiteral","startPos","allowExpression","isMethod","allowDirectSuper","inClassScope","funcNode","startNode","finishNode","isPattern","isAccessor","shorthand","isLHS","toAssignable","optional","exported","specifiers","base","noCalls","optionalChainMember","substring","stop","chain","startNodeAtNode","jsx","chunkStart","ch","charCodeAt","finishToken","jsxReadEntity","jsxReadNewLine","normalizeCRLF","curLine","quote","entity","str","count","substr","fromCodePoint","parseInt","unexpected","next","jsxParseIdentifier","eat","jsxParseNamespacedName","newNode","jsxParseExpressionContainer","parseExprAtom","parseExpression","expect","jsxParseEmptyExpression","parseMaybeAssignAllowIn","jsxParseAttributeValue","jsxParseElementName","jsxParseOpeningElementAfterName","attributes","jsxParseAttribute","selfClosing","children","openingElement","jsxParseOpeningElementAt","closingElement","contents","jsxParseClosingElementAt","jsxParseElementAt","jsxParseSpreadChild","openingFragment","closingFragment","isRelational","jsxParseElement","inPropertyName","jsxReadToken","jsxReadWord","jsxReadString","flow","flowPragma","val","matches","tok","oldInType","inType","flowParseType","moduloLoc","moduloPos","checksLoc","expectContextual","predicate","flowParsePredicate","flowParseInterfaceish","parseIdentifier","typeNode","typeContainer","flowParseTypeParameterDeclaration","tmp","flowParseFunctionTypeParams","rest","flowParseTypeAndPredicateInitialiser","returnType","typeAnnotation","resetEndLocation","semicolon","declareName","insideModule","flowParseDeclareClass","flowParseDeclareFunction","flowParseDeclareVariable","eatContextual","flowParseDeclareModuleExports","flowParseDeclareModule","isContextual","flowParseDeclareTypeAlias","flowParseDeclareOpaqueType","flowParseDeclareInterface","flowParseDeclareExportDeclaration","flowParseTypeAnnotatableIdentifier","BIND_KIND_VALUE","enter","bodyNode","parseImport","flowParseDeclare","exit","hasModuleExport","forEach","bodyElement","declaration","isEsModuleType","isLet","suggestion","parseExport","exportKind","flowParseTypeAnnotation","flowParseTypeAlias","flowParseOpaqueType","isClass","flowParseRestrictedIdentifier","extends","implements","mixins","flowParseInterfaceExtends","flowParseObjectType","allowStatic","allowExact","allowSpread","allowProto","allowInexact","flowParseQualifiedTypeIdentifier","flowParseTypeParameterInstantiation","liberal","checkReservedType","right","flowParseTypeInitialiser","declare","supertype","impltype","requireDefault","nodeStart","variance","flowParseVariance","ident","bound","defaultRequired","typeParameter","flowParseTypeParameter","expectRelational","oldNoAnonFunctionType","noAnonFunctionType","flowParseTypeOrImplicitInstantiation","isStatic","lookahead","flowParseObjectPropertyKey","flowParseObjectTypeMethodish","flowParseFunctionTypeParam","valueNode","endDelim","exact","callProperties","indexers","internalSlots","inexact","protoStart","inexactStart","flowParseObjectTypeInternalSlot","flowParseObjectTypeIndexer","flowParseObjectTypeCallProperty","propOrInexact","flowParseObjectTypeProperty","flowObjectTypeSemicolon","proto","flowCheckGetterSetterParams","paramCount","node2","qualification","flowParsePrimaryType","lh","checkNotUnderscore","flowParseGenericType","isGroupedType","flowParseInterfaceType","flowIdentToTypeAnnotation","flowParseTupleType","reinterpretTypeAsFunctionTypeParam","flowParseTypeofType","canInsertSemicolon","elementType","flowParsePrefixType","flowParsePostfixType","flowParseAnonFunctionWithoutParens","flowParseIntersectionType","flowParseUnionType","allowPrimitiveOverride","allowExpressionBody","forwardNoArrowParamsConversionAt","topLevel","strict","flowParseInterface","shouldParseEnums","flowParseEnumDeclaration","isValidDirective","refNeedsArrowPos","result","tryParse","failState","originalNoArrowAt","noArrowAt","tryParseConditionalConsequent","consequent","failed","getArrowLikeExpressions","valid","invalid","alternate","parseMaybeAssign","noArrowParamsConversionAt","disallowInvalid","arrows","finishArrowValidation","list","list1","list2","partition","every","isAssignable","_node$extra","toAssignableList","trailingComma","SCOPE_FUNCTION","parse","typeCastNode","decl","declarationNode","parseExportSpecifiers","parseExportFrom","hasNamespace","isStatement","optionalId","member","parseClassMemberFromModifier","finishOp","current","isIteratorStart","isBinding","element","operator","typeCastToParameter","exprList","trailingCommaPos","isParenthesizedExpr","_expr$extra","close","canBePattern","isTuple","maybeInArrowParameters","toReferencedList","superTypeParameters","implemented","isPrivateNameAllowed","left","specifier","contextDescription","local","checkLVal","firstIdentLoc","firstIdent","parseModuleExportName","specifierTypeKind","isLookaheadContextual","as_ident","imported","__clone","nodeIsTypeImport","specifierIsTypeImport","checkReservedWord","allowModifiers","afterLeftParse","_jsx","_jsx2","_jsx3","abort","_arrowExpression$extr","arrowExpression","resetStartLocationFromNode","maybeUnwrapTypeCastExpression","aborted","thrown","allowDuplicates","isArrowFunction","canBeArrow","parseCallExpressionArguments","parseAsyncArrowWithTypeParameters","subscriptState","isLookaheadToken_lt","typeArguments","finishCallExpression","shouldParseTypes","flowParseTypeParameterInstantiationCallOrNew","targs","parseFunctionParams","parseArrow","parseArrowExpression","hasFlowComment","nextToken","fileNode","skipFlowComment","hasFlowCommentCompletion","shiftToFirstNonWhiteSpace","ch2","ch3","enumName","memberName","toUpperCase","suppliedType","explicitType","endOfInit","literal","parseBooleanLiteral","init","flowEnumMemberInit","expectedType","flowEnumErrorInvalidMemberInitializer","seenNames","members","booleanMembers","numberMembers","stringMembers","defaultedMembers","memberNode","flowEnumMemberRaw","flowEnumErrorInvalidMemberName","flowEnumErrorDuplicateMemberName","flowEnumCheckExplicitTypeMismatch","flowEnumErrorBooleanMemberNotInitialized","flowEnumErrorNumberMemberNotInitialized","initializedMembers","_i","flowEnumErrorStringMemberInconsistentlyInitailized","_i2","flowEnumErrorInvalidExplicitType","nameLoc","flowEnumParseExplicitType","flowEnumMembers","flowEnumStringMembers","boolsLen","numsLen","strsLen","defaultedLen","_i3","_members$defaultedMem","_i4","_members$defaultedMem2","flowEnumErrorInconsistentMemberValues","flowEnumBody","nextTokenStart","afterNext","typescript","isLiteralPropertyName","allowedModifiers","tsTryParse","tsNextTokenCanFollowModifier","modified","tsParseModifier","accessibility","parseElement","tsIsListTerminator","tsParseDelimitedListWorker","expectSuccess","bracket","skipFirstToken","tsParseDelimitedList","qualifier","tsParseEntityName","tsParseTypeArguments","allowReservedWords","typeName","lhs","parameterName","tsParseTypeAnnotation","asserts","exprName","tsParseImportType","parseIdentifierName","constraint","tsEatThenParseType","tsParseTypeParameters","tsParseBracketedList","tsParseTypeParameter","tsParseTypeReference","returnToken","signature","returnTokenRequired","tsTryParseTypeParameters","parameters","tsParseBindingListForSignature","tsParseTypeOrTypePredicateAnnotation","parseBindingList","tsFillSignature","tsParseTypeMemberSemicolon","tsLookAhead","tsIsUnambiguouslyIndexSignature","tsTryParseTypeAnnotation","readonly","nodeAny","tsParseSignatureMember","createIdentifier","tsParsePropertyOrMethodSignature","idx","tsTryParseIndexSignature","parsePropertyName","tsParseObjectTypeMembers","tsParseList","tsParseTypeMember","tsIsIdentifier","tsExpectThenParseType","tsParseMappedTypeParameter","nameType","tsParseType","tsTryParseType","elementTypes","tsParseTupleElementType","seenOptionalElement","labeledElements","elementNode","_labeledElements","isLabeled","labeledNode","optionalTypeNode","restNode","parseTemplate","thisKeyword","tsParseThisTypeNode","tsParseThisTypePredicate","keywordTypeFromName","lookaheadCharCode","tsParseLiteralTypeNode","parseMaybeUnary","tsParseThisTypeOrThisTypePredicate","tsParseTypeQuery","tsIsStartOfMappedType","tsParseMappedType","tsParseTypeLiteral","tsParseTupleType","tsParseParenthesizedType","tsParseTemplateLiteralType","tsParseNonArrayType","objectType","indexType","tsParseTypeOperatorOrHigher","tsCheckTypeAnnotationForReadOnly","kw","tsParseTypeOperator","tsParseInferType","tsParseArrayTypeOrHigher","parseConstituentType","hasLeadingOperator","tsParseUnionOrIntersectionType","tsParseIntersectionTypeOrHigher","tsIsUnambiguouslyStartOfFunctionType","braceStackCounter","tsSkipParameterStart","tsInType","t","tsParseTypePredicateAsserts","thisTypePredicate","typePredicateVariable","tsParseTypePredicatePrefix","containsEsc","eatColon","tsParseNonConditionalType","checkType","extendsType","trueType","falseType","tsIsStartOfFunctionType","tsParseFunctionOrConstructorType","tsParseUnionTypeOrHigher","tsTryNextParseConstantContext","tsNextThenParseType","descriptor","originalStart","delimitedList","tsParseExpressionWithTypeArguments","tsParseHeritageClause","cb","oldContext","tsDoThenParseType","initializer","BIND_TS_ENUM","tsParseEnumMember","parseBlockOrModuleBlockBody","nested","inner","tsParseModuleOrNamespaceDeclaration","prodParam","tsParseModuleBlock","global","isExport","moduleReference","tsParseModuleReference","tsIsExternalModuleReference","tsParseExternalModuleReference","f","res","nany","isLineTerminator","starttype","tsInDeclareContext","parseFunctionStatement","parseClass","tsParseEnumDeclaration","parseVarStatement","tsParseAmbientExternalModuleDeclaration","tsParseDeclaration","tsTryParseDeclare","mod","tsCheckLineTerminatorAndMatch","tsParseAbstractDeclaration","tsParseInterfaceDeclaration","tsParseTypeAliasDeclaration","tokenType","oldMaybeInArrowParameters","tsTryParseAndCatch","tsTryParseTypeOrTypePredicateAnnotation","tsInNoContext","tsIsDeclarationStart","parseAccessModifier","parseMaybeDefault","parseAssignableListItemTypes","elt","pp","parameter","bodilessType","isDeclareContext","items","isInParens","tsCheckForInvalidTypeCasts","nonNullExpression","atPossibleAsyncArrow","asyncArrowFn","tsTryParseGenericAsyncArrowFunction","parseTaggedTemplateExpression","leftStartPos","leftStartLoc","minPrec","reScan_lt_gt","parseExprOp","checkKeywords","ahead","tsParseImportEqualsDeclaration","importNode","isAbstractClass","cls","abstract","tsParseModifiers","callParseClassMember","inAbstractClass","methodOrProp","tsParseExpressionStatement","isDeclare","shouldParseExportDeclaration","tsTryParseExportDeclaration","resetStartLocation","definite","parseClassPropertyAnnotation","_typeCast","_typeCast2","_jsx4","_typeCast3","typeCast","_typeParameters","tsParseTypeAssertion","readToken_lt_gt","baseCount","firstParam","getObjectOrClassMethodParams","oldIsDeclareContext","oldInAbstractClass","hasFollowingLineBreak","v8intrinsic","v8IntrinsicStart","parseV8Intrinsic","placeholders","expectedNode","assertNoSpace","finishPlaceholder","isFinished","parsePlaceholder","parseStatement","takeDecorators","oldStrict","parseClassId","parseClassSuper","parseClassBody","expectPlugin","isUnparsedContextual","startsWith","nextTokenStartSince","filter","hasStarImport","maybeParseStarImportSpecifier","parseNamedImportSpecifiers","parseImportSource","mixinPluginNames","keys","defaultOptions","sourceType","sourceFilename","startLine","allowAwaitOutsideFunction","allowReturnOutsideFunction","allowImportExportEverywhere","allowSuperOutsideMethod","allowUndeclaredExports","strictMode","ranges","tokens","createParenthesizedExpressions","State","potentialArrowAt","inPipeline","topicContext","maxNumOfResolvableTopics","maxTopicIndex","soloAwait","inFSharpPipelineDirectBody","labels","decoratorStack","comments","strictErrors","exportedIdentifiers","tokensLength","curPosition","skipArrays","_isDigit","VALID_REGEX_FLAGS","forbiddenNumericSeparatorSiblings","decBinOct","hex","allowedNumericSeparatorSiblings","oct","bin","dec","Token","UtilParser","op","nameStart","nameEnd","allowAsi","messageOrType","missingPlugin","names","n","join","oldState","abortSignal","andThrow","shorthandAssign","doubleProto","isPrivateName","checkKeywordEscapes","pushToken","old","curr","clear","skipSpace","getTokenFromCode","codePointAt","block","text","addComment","pushComment","startSkip","loop","skipBlockComment","skipLineComment","readToken_interpreter","nextPos","readNumber","readRegexp","width","next2","readToken_dot","readToken_question","readRadixNumber","readString","readToken_slash","readToken_mult_modulo","readToken_pipe_amp","readToken_caret","readToken_plus_min","readToken_eq_excl","readToken_numberSign","readWord","escaped","inClass","charAt","content","mods","char","charCode","radix","len","forceLen","allowNumSeparator","forbiddenSiblings","allowedSiblings","total","Infinity","prev","Number","isNaN","isBigInt","readInt","startsWithDot","isFloat","isDecimal","hasExponent","isOctal","hasLeadingZero","integer","recordStrictModeErrors","underscorePos","parseFloat","throwOnInvalid","codePos","readHexChar","readEscapedChar","containsInvalid","inTemplate","readCodePoint","octalStr","octal","escStart","identifierCheck","esc","readWord1","update","ExpressionErrors","Node","parser","range","unwrapParenthesizedExpression","LValParser","_node$extra3","expressionScope","recordParenthesizedIdentifierError","_node$extra2","isLast","toAssignableObjectExpressionProp","raiseRestNotLast","checkToRestConversion","raiseTrailingCommaAfterRest","toReferencedListDeep","parseBindingAtom","parseObjectLike","closeCharCode","allowEmpty","elts","first","parseRestBinding","checkCommaAfterRest","parseDecorator","parseAssignableListItem","_startLoc","_startPos","_left","checkClashes","disallowLetBinding","strictModeChanged","_expr$properties","isObjectMethod","_expr$elements","elem","processComment","locationNode","ExpressionScope","ArrowHeadParsingScope","iterator","ExpressionScopeHandler","isCertainlyParameterDeclaration","canBeArrowParameterDeclaration","recordDeclarationError","iterateErrors","clearDeclarationError","newExpressionScope","loopLabel","switchLabel","loneSurrogate","StatementParser","interpreter","parseInterpreterDirective","parseBlockBody","_Array$from","from","nextCh","parseDecorators","parseStatementContent","parseBreakContinueStatement","parseDebuggerStatement","parseDoStatement","parseForStatement","parseIfStatement","parseReturnStatement","parseSwitchStatement","parseThrowStatement","parseTryStatement","parseWhileStatement","parseWithStatement","parseBlock","parseEmptyStatement","nextTokenCharCode","assertModuleNodeAllowed","isAsyncFunction","maybeName","parseLabeledStatement","parseExpressionStatement","allowExport","currentContextDecorators","decorator","canHaveLeadingDecorator","expectOnePlugin","parseMaybeDecoratorArguments","parseExprSubscripts","isBreak","verifyBreakContinue","lab","withTopicForbiddingContext","parseHeaderExpression","awaitAt","isAwaitAllowed","parseFor","parseVar","declarations","parseForIn","description","checkExpressionErrors","declarationPosition","parseFunction","hasReturn","discriminant","cur","sawDefault","cases","isCase","simple","handler","clause","parseCatchClauseParam","finalizer","_this$state$labels","statementStart","allowDirectives","createNewLexicalScope","afterBlockParse","hasStrictModeDirective","parsedNonDirective","stmtToDirective","setStrict","isForIn","await","isFor","isTypescript","parseVarId","parseMaybeAssignDisallowIn","isHangingStatement","requireId","initFunction","parseFunctionId","parseFunctionBodyAndFinish","registerFunctionStatementId","treatFunctionsAsVar","constructorAllowsSuper","classScope","hadConstructor","hadStaticBlock","parseClassMember","pushClassMethod","parseClassProperty","parseClassStaticBlock","parseClassMemberWithIsStatic","publicMethod","privateMethod","publicProp","privateProp","publicMember","parseClassElementName","pushClassPrivateMethod","isNonstaticConstructor","isPrivate","isSimple","maybeQuestionTokenStart","parsePostMemberNameModifiers","pushClassPrivateProperty","pushClassProperty","checkGetterSetterParams","getPrivateNameSV","_member$decorators","oldLabels","parseClassPrivateProperty","declarePrivateName","CLASS_ELEMENT_KIND_GETTER","CLASS_ELEMENT_KIND_SETTER","parseInitializer","hasDefault","maybeParseExportDefaultSpecifier","parseAfterDefault","hasStar","eatExportStar","maybeParseExportNamespaceSpecifier","parseAfterNamespace","isFromRequired","hasDeclaration","hasSpecifiers","maybeParseExportNamedSpecifiers","maybeParseExportDeclaration","checkExport","parseExportDefaultExpression","isExportDefaultSpecifier","parseExportDeclaration","FUNC_STATEMENT","l","hasFrom","nextAfterFrom","assertions","maybeParseImportAssertions","checkNames","isDefault","isFrom","checkDuplicateExports","_declaration$extra","_node$specifiers","exportedName","checkLocalExport","_node$declaration$dec","_i5","_node$properties","_i6","_node$elements","nodes","surrogate","toString","parseNext","maybeParseDefaultImportSpecifier","maybeParseModuleAttributes","attrs","attrNames","keyName","parseAssertEntries","shouldParseDefaultImport","parseImportSpecifierLocal","parseImportSpecifier","isRecord","protoRef","used","paramFlags","disallowIn","disallowInAnd","parseExpressionBase","allowInAnd","expressions","ownExpressionErrors","hasYield","parseYield","parseMaybeConditional","parseExprOps","shouldExitDescending","parseConditional","prec","hasIn","checkPipelineAtInfixOperator","logical","coalesce","hasAwait","parseExprOpRightExpr","nextOp","withTopicPermittingContext","parseSmartPipelineBody","parseExprOpBaseRightExpr","withSoloAwaitPermittingContext","parseFSharpPipelineBody","isAwait","parseAwait","isDelete","hasPropertyAsPrivateName","parseUpdate","isAmbiguousAwait","raiseOverwrite","parseSubscripts","maybeAsyncArrow","parseSubscript","parseBind","parseCoverCallAndAsyncArrowHead","parseMember","parseMaybePrivateName","usePrivateName","parseNoCallExpr","shouldParseAsyncArrow","validateAsPattern","parseAsyncArrowFromCallExpression","toReferencedArguments","tag","quasi","_node$arguments","possibleAsyncArrow","dynamicImport","allowPlaceholder","nodeForExtra","oldInFSharpPipelineDirectBody","parseExprListItem","_call$extra","parseSuper","parseImportMetaProperty","parseAsyncArrowUnaryFunction","parseDo","parseParenAndDistinguishExpression","parseArrayLike","parseFunctionOrFunctionSent","parseNewOrNewTarget","primaryTopicReferenceIsAllowedInCurrentTopicContext","registerTopicReference","lookaheadCh","allowSuper","meta","parseMetaProperty","propertyName","spreadStart","optionalCommaStart","innerStartPos","innerStartLoc","spreadNodeStartPos","spreadNodeStartLoc","parseParenItem","innerEndPos","innerEndLoc","arrowNode","shouldParseArrow","metaProp","inNonArrowFunction","parseNew","isOptionalChain","parseNewArguments","parseExprList","isTagged","cooked","tail","curElt","parseTemplateElement","quasis","parseTemplateSubstitution","propHash","create","parsePropertyDefinition","checkProto","parseSpread","maybeAsyncOrAccessorProp","parseObjPropValue","_params","getGetterSetterExpectedParamCount","parseObjectMethod","parseObjectProperty","oldInPropertyName","setArrowFunctionParameters","parseFunctionBody","isExpression","checkParams","nonSimple","isSimpleParamList","errorPos","_node$params","inStaticBlock","recordAsyncArrowParametersError","inFunction","recordParameterInitializerError","delegate","childExpression","checkSmartPipelineBodyEarlyErrors","parseSmartPipelineBodyInStyle","isSimpleReference","topicReferenceWasUsedInCurrentTopicContext","callback","outerContextTopicState","outerContextSoloAwaitState","ret","ClassScope","privateNames","loneAccessors","ClassScopeHandler","oldClassScope","redefined","accessor","_this$stack","Parser","opts","_Object$keys","getOptions","getScopeHandler","pluginMap","pluginsMap","parseTopLevel","getParser","decoratorsBeforeExport","validatePlugins","pluginsFromOptions","pluginList","parserClassCache","getParserClass","_options","moduleError","_unused2","getExpression","tokTypes","codeFrameColumns","rawLines","lineNumber","colNumber","deprecationWarningShown","process","emitWarning","deprecationError","console","warn","location","Math","max","_highlight","getDefs","chalk","gutter","grey","marker","red","bold","NEWLINE","getMarkerLines","linesAbove","linesBelow","startColumn","endLine","endColumn","min","lineDiff","markerLines","sourceLength","highlighted","highlightCode","forceColor","shouldHighlight","getChalk","defs","maybeHighlight","chalkFn","lines","split","hasColumns","numberMaxWidth","highlightedLines","frame","number","paddedNumber","hasMarker","lastMarkerLine","markerLine","markerSpacing","numberOfMarkers","repeat","reset","a","b","placeholderWhitelist","placeholderPattern","preserveComments","syntacticPlaceholders","validate","_ref","excluded","target","sourceKeys","_objectWithoutPropertiesLoose","normalizeReplacements","replacements","reduce","acc","replacement","formatter","parserOpts","_parser","_codeFrame","parseWithCodeFrame","removePropertiesDeep","syntactic","placeholderNames","legacy","isLegacyRef","placeholderVisitorHandler","PATTERN","ancestors","_state$placeholderWhi","isPlaceholder","isJSXIdentifier","isNewExpression","isFunction","resolve","resolveAncestors","isDuplicate","cssKeywords","reverseKeywords","convert","module","rgb","channels","hsl","hsv","hwb","cmyk","xyz","lch","ansi16","ansi256","hcg","apple","gray","model","h","r","g","rdif","gdif","bdif","s","v","diff","diffc","c","k","reversed","currentClosestKeyword","y","currentClosestDistance","distance","pow","z","t1","t2","t3","smin","lmin","hi","floor","q","sl","vmin","wh","bl","ratio","m","y2","x2","z2","atan2","PI","sqrt","hr","cos","sin","round","ansi","color","mult","rem","colorString","hue","chroma","mg","pure","w","metadata","placeholderName","reverse","stringLiteral","emptyStatement","applyReplacement","_helperPluginUtils","_helperSplitExportDeclaration","_globals","_transformClass","getBuiltinClasses","category","api","assertVersion","loose","VISITED","Symbol","visitor","ExportDefaultDeclaration","isClassDeclaration","ClassDeclaration","ClassExpression","inferred","arrowFunctionToExpression","makeStatementFormatter","unwrap","assertExpressionStatement","createTemplateBuilder","defaultOpts","templateFnCache","templateAstCache","cachedOpts","tpl","extendedTrace","_string","builder","_literal","NO_PLACEHOLDER","rootStack","_parse","_populate","highlightTokens","jsTokensNs","_helperValidatorIdentifier","_chalk","sometimesKeywords","cyan","capitalized","yellow","jsxIdentifier","punctuator","magenta","green","white","bgRed","tokenize","BRACKET","matchToToken","JSX_TAG","getTokenType","toLowerCase","colorize","supportsColor","enabled","level","escapeStringRegexp","ansiStyles","stdoutColor","stdout","isSimpleWindowsTerm","platform","TERM","levelMapping","skipModels","styles","applyOptions","scLevel","Chalk","chalkTag","apply","setPrototypeOf","blue","open","closeRe","codes","build","_styles","_empty","visible","bgColor","bgModel","defineProperties","applyStyle","self","hasGrey","__proto__","argsLen","originalDim","dim","strings","parts","colorConvert","wrapAnsi16","wrapAnsi256","wrapAnsi16m","italic","underline","inverse","hidden","strikethrough","black","redBright","greenBright","yellowBright","blueBright","magentaBright","cyanBright","whiteBright","bgBlack","bgGreen","bgYellow","bgBlue","bgMagenta","bgCyan","bgWhite","bgBlackBright","bgRedBright","bgGreenBright","bgYellowBright","bgBlueBright","bgMagentaBright","bgCyanBright","bgWhiteBright","groupName","group","styleName","style","ansi2ansi","rgb2rgb","ansi16m","suite","conversions","route","fromModel","routes","toModel","wrappedFn","conversion","wrapRounded","wrapRaw","deriveBFS","graph","models","buildGraph","queue","adjacents","adjacent","link","to","wrapConversion","stderr","TEMPLATE_REGEX","STYLE_REGEX","STRING_REGEX","ESCAPE_REGEX","ESCAPES","unescape","parseArguments","results","chunks","trim","chunk","escape","chr","parseStyle","buildStyle","layer","escapeChar","errMsg","nameSet","buildTemplateCode","buildLiteralData","defaultReplacements"],"mappings":"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","file":"static/js/vendors-runtime-template.39812f86.chunk.js","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports.program = exports.expression = exports.statements = exports.statement = exports.smart = void 0;\n\nvar formatters = _interopRequireWildcard(require(\"./formatters\"));\n\nvar _builder = _interopRequireDefault(require(\"./builder\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nconst smart = (0, _builder.default)(formatters.smart);\nexports.smart = smart;\nconst statement = (0, _builder.default)(formatters.statement);\nexports.statement = statement;\nconst statements = (0, _builder.default)(formatters.statements);\nexports.statements = statements;\nconst expression = (0, _builder.default)(formatters.expression);\nexports.expression = expression;\nconst program = (0, _builder.default)(formatters.program);\nexports.program = program;\n\nvar _default = Object.assign(smart.bind(undefined), {\n  smart,\n  statement,\n  statements,\n  expression,\n  program,\n  ast: smart.ast\n});\n\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = transformClass;\n\nvar _helperFunctionName = _interopRequireDefault(require(\"@babel/helper-function-name\"));\n\nvar _helperReplaceSupers = _interopRequireWildcard(require(\"@babel/helper-replace-supers\"));\n\nvar _helperOptimiseCallExpression = _interopRequireDefault(require(\"@babel/helper-optimise-call-expression\"));\n\nvar defineMap = _interopRequireWildcard(require(\"@babel/helper-define-map\"));\n\nvar _core = require(\"@babel/core\");\n\nvar _helperAnnotateAsPure = _interopRequireDefault(require(\"@babel/helper-annotate-as-pure\"));\n\nvar _inlineCreateSuperHelpers = _interopRequireDefault(require(\"./inline-createSuper-helpers\"));\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction buildConstructor(classRef, constructorBody, node) {\n  const func = _core.types.functionDeclaration(_core.types.cloneNode(classRef), [], constructorBody);\n\n  _core.types.inherits(func, node);\n\n  return func;\n}\n\nfunction transformClass(path, file, builtinClasses, isLoose) {\n  const classState = {\n    parent: undefined,\n    scope: undefined,\n    node: undefined,\n    path: undefined,\n    file: undefined,\n    classId: undefined,\n    classRef: undefined,\n    superFnId: undefined,\n    superName: undefined,\n    superReturns: [],\n    isDerived: false,\n    extendsNative: false,\n    construct: undefined,\n    constructorBody: undefined,\n    userConstructor: undefined,\n    userConstructorPath: undefined,\n    hasConstructor: false,\n    instancePropBody: [],\n    instancePropRefs: {},\n    staticPropBody: [],\n    body: [],\n    superThises: [],\n    pushedConstructor: false,\n    pushedInherits: false,\n    protoAlias: null,\n    isLoose: false,\n    hasInstanceDescriptors: false,\n    hasStaticDescriptors: false,\n    instanceMutatorMap: {},\n    staticMutatorMap: {}\n  };\n\n  const setState = newState => {\n    Object.assign(classState, newState);\n  };\n\n  const findThisesVisitor = _core.traverse.visitors.merge([_helperReplaceSupers.environmentVisitor, {\n    ThisExpression(path) {\n      classState.superThises.push(path);\n    }\n\n  }]);\n\n  function pushToMap(node, enumerable, kind = \"value\", scope) {\n    let mutatorMap;\n\n    if (node.static) {\n      setState({\n        hasStaticDescriptors: true\n      });\n      mutatorMap = classState.staticMutatorMap;\n    } else {\n      setState({\n        hasInstanceDescriptors: true\n      });\n      mutatorMap = classState.instanceMutatorMap;\n    }\n\n    const map = defineMap.push(mutatorMap, node, kind, classState.file, scope);\n\n    if (enumerable) {\n      map.enumerable = _core.types.booleanLiteral(true);\n    }\n\n    return map;\n  }\n\n  function maybeCreateConstructor() {\n    let hasConstructor = false;\n    const paths = classState.path.get(\"body.body\");\n\n    for (const path of paths) {\n      hasConstructor = path.equals(\"kind\", \"constructor\");\n      if (hasConstructor) break;\n    }\n\n    if (hasConstructor) return;\n    let params, body;\n\n    if (classState.isDerived) {\n      const constructor = _core.template.expression.ast`\n        (function () {\n          super(...arguments);\n        })\n      `;\n      params = constructor.params;\n      body = constructor.body;\n    } else {\n      params = [];\n      body = _core.types.blockStatement([]);\n    }\n\n    classState.path.get(\"body\").unshiftContainer(\"body\", _core.types.classMethod(\"constructor\", _core.types.identifier(\"constructor\"), params, body));\n  }\n\n  function buildBody() {\n    maybeCreateConstructor();\n    pushBody();\n    verifyConstructor();\n\n    if (classState.userConstructor) {\n      const {\n        constructorBody,\n        userConstructor,\n        construct\n      } = classState;\n      constructorBody.body = constructorBody.body.concat(userConstructor.body.body);\n\n      _core.types.inherits(construct, userConstructor);\n\n      _core.types.inherits(constructorBody, userConstructor.body);\n    }\n\n    pushDescriptors();\n  }\n\n  function pushBody() {\n    const classBodyPaths = classState.path.get(\"body.body\");\n\n    for (const path of classBodyPaths) {\n      const node = path.node;\n\n      if (path.isClassProperty()) {\n        throw path.buildCodeFrameError(\"Missing class properties transform.\");\n      }\n\n      if (node.decorators) {\n        throw path.buildCodeFrameError(\"Method has decorators, put the decorator plugin before the classes one.\");\n      }\n\n      if (_core.types.isClassMethod(node)) {\n        const isConstructor = node.kind === \"constructor\";\n        const replaceSupers = new _helperReplaceSupers.default({\n          methodPath: path,\n          objectRef: classState.classRef,\n          superRef: classState.superName,\n          isLoose: classState.isLoose,\n          file: classState.file\n        });\n        replaceSupers.replace();\n        const superReturns = [];\n        path.traverse(_core.traverse.visitors.merge([_helperReplaceSupers.environmentVisitor, {\n          ReturnStatement(path) {\n            if (!path.getFunctionParent().isArrowFunctionExpression()) {\n              superReturns.push(path);\n            }\n          }\n\n        }]));\n\n        if (isConstructor) {\n          pushConstructor(superReturns, node, path);\n        } else {\n          pushMethod(node, path);\n        }\n      }\n    }\n  }\n\n  function clearDescriptors() {\n    setState({\n      hasInstanceDescriptors: false,\n      hasStaticDescriptors: false,\n      instanceMutatorMap: {},\n      staticMutatorMap: {}\n    });\n  }\n\n  function pushDescriptors() {\n    pushInheritsToBody();\n    const {\n      body\n    } = classState;\n    let instanceProps;\n    let staticProps;\n\n    if (classState.hasInstanceDescriptors) {\n      instanceProps = defineMap.toClassObject(classState.instanceMutatorMap);\n    }\n\n    if (classState.hasStaticDescriptors) {\n      staticProps = defineMap.toClassObject(classState.staticMutatorMap);\n    }\n\n    if (instanceProps || staticProps) {\n      if (instanceProps) {\n        instanceProps = defineMap.toComputedObjectFromClass(instanceProps);\n      }\n\n      if (staticProps) {\n        staticProps = defineMap.toComputedObjectFromClass(staticProps);\n      }\n\n      let args = [_core.types.cloneNode(classState.classRef), _core.types.nullLiteral(), _core.types.nullLiteral()];\n      if (instanceProps) args[1] = instanceProps;\n      if (staticProps) args[2] = staticProps;\n      let lastNonNullIndex = 0;\n\n      for (let i = 0; i < args.length; i++) {\n        if (!_core.types.isNullLiteral(args[i])) lastNonNullIndex = i;\n      }\n\n      args = args.slice(0, lastNonNullIndex + 1);\n      body.push(_core.types.expressionStatement(_core.types.callExpression(classState.file.addHelper(\"createClass\"), args)));\n    }\n\n    clearDescriptors();\n  }\n\n  function wrapSuperCall(bareSuper, superRef, thisRef, body) {\n    const bareSuperNode = bareSuper.node;\n    let call;\n\n    if (classState.isLoose) {\n      bareSuperNode.arguments.unshift(_core.types.thisExpression());\n\n      if (bareSuperNode.arguments.length === 2 && _core.types.isSpreadElement(bareSuperNode.arguments[1]) && _core.types.isIdentifier(bareSuperNode.arguments[1].argument, {\n        name: \"arguments\"\n      })) {\n        bareSuperNode.arguments[1] = bareSuperNode.arguments[1].argument;\n        bareSuperNode.callee = _core.types.memberExpression(_core.types.cloneNode(superRef), _core.types.identifier(\"apply\"));\n      } else {\n        bareSuperNode.callee = _core.types.memberExpression(_core.types.cloneNode(superRef), _core.types.identifier(\"call\"));\n      }\n\n      call = _core.types.logicalExpression(\"||\", bareSuperNode, _core.types.thisExpression());\n    } else {\n      call = (0, _helperOptimiseCallExpression.default)(_core.types.cloneNode(classState.superFnId), _core.types.thisExpression(), bareSuperNode.arguments);\n    }\n\n    if (bareSuper.parentPath.isExpressionStatement() && bareSuper.parentPath.container === body.node.body && body.node.body.length - 1 === bareSuper.parentPath.key) {\n      if (classState.superThises.length) {\n        call = _core.types.assignmentExpression(\"=\", thisRef(), call);\n      }\n\n      bareSuper.parentPath.replaceWith(_core.types.returnStatement(call));\n    } else {\n      bareSuper.replaceWith(_core.types.assignmentExpression(\"=\", thisRef(), call));\n    }\n  }\n\n  function verifyConstructor() {\n    if (!classState.isDerived) return;\n    const path = classState.userConstructorPath;\n    const body = path.get(\"body\");\n    path.traverse(findThisesVisitor);\n\n    let thisRef = function () {\n      const ref = path.scope.generateDeclaredUidIdentifier(\"this\");\n\n      thisRef = () => _core.types.cloneNode(ref);\n\n      return ref;\n    };\n\n    for (const thisPath of classState.superThises) {\n      const {\n        node,\n        parentPath\n      } = thisPath;\n\n      if (parentPath.isMemberExpression({\n        object: node\n      })) {\n        thisPath.replaceWith(thisRef());\n        continue;\n      }\n\n      thisPath.replaceWith(_core.types.callExpression(classState.file.addHelper(\"assertThisInitialized\"), [thisRef()]));\n    }\n\n    const bareSupers = new Set();\n    path.traverse(_core.traverse.visitors.merge([_helperReplaceSupers.environmentVisitor, {\n      Super(path) {\n        const {\n          node,\n          parentPath\n        } = path;\n\n        if (parentPath.isCallExpression({\n          callee: node\n        })) {\n          bareSupers.add(parentPath);\n        }\n      }\n\n    }]));\n    let guaranteedSuperBeforeFinish = !!bareSupers.size;\n\n    for (const bareSuper of bareSupers) {\n      wrapSuperCall(bareSuper, classState.superName, thisRef, body);\n\n      if (guaranteedSuperBeforeFinish) {\n        bareSuper.find(function (parentPath) {\n          if (parentPath === path) {\n            return true;\n          }\n\n          if (parentPath.isLoop() || parentPath.isConditional() || parentPath.isArrowFunctionExpression()) {\n            guaranteedSuperBeforeFinish = false;\n            return true;\n          }\n        });\n      }\n    }\n\n    let wrapReturn;\n\n    if (classState.isLoose) {\n      wrapReturn = returnArg => {\n        const thisExpr = _core.types.callExpression(classState.file.addHelper(\"assertThisInitialized\"), [thisRef()]);\n\n        return returnArg ? _core.types.logicalExpression(\"||\", returnArg, thisExpr) : thisExpr;\n      };\n    } else {\n      wrapReturn = returnArg => _core.types.callExpression(classState.file.addHelper(\"possibleConstructorReturn\"), [thisRef()].concat(returnArg || []));\n    }\n\n    const bodyPaths = body.get(\"body\");\n\n    if (!bodyPaths.length || !bodyPaths.pop().isReturnStatement()) {\n      body.pushContainer(\"body\", _core.types.returnStatement(guaranteedSuperBeforeFinish ? thisRef() : wrapReturn()));\n    }\n\n    for (const returnPath of classState.superReturns) {\n      returnPath.get(\"argument\").replaceWith(wrapReturn(returnPath.node.argument));\n    }\n  }\n\n  function pushMethod(node, path) {\n    const scope = path ? path.scope : classState.scope;\n\n    if (node.kind === \"method\") {\n      if (processMethod(node, scope)) return;\n    }\n\n    pushToMap(node, false, null, scope);\n  }\n\n  function processMethod(node, scope) {\n    if (classState.isLoose && !node.decorators) {\n      let {\n        classRef\n      } = classState;\n\n      if (!node.static) {\n        insertProtoAliasOnce();\n        classRef = classState.protoAlias;\n      }\n\n      const methodName = _core.types.memberExpression(_core.types.cloneNode(classRef), node.key, node.computed || _core.types.isLiteral(node.key));\n\n      let func = _core.types.functionExpression(null, node.params, node.body, node.generator, node.async);\n\n      _core.types.inherits(func, node);\n\n      const key = _core.types.toComputedKey(node, node.key);\n\n      if (_core.types.isStringLiteral(key)) {\n        func = (0, _helperFunctionName.default)({\n          node: func,\n          id: key,\n          scope\n        });\n      }\n\n      const expr = _core.types.expressionStatement(_core.types.assignmentExpression(\"=\", methodName, func));\n\n      _core.types.inheritsComments(expr, node);\n\n      classState.body.push(expr);\n      return true;\n    }\n\n    return false;\n  }\n\n  function insertProtoAliasOnce() {\n    if (classState.protoAlias === null) {\n      setState({\n        protoAlias: classState.scope.generateUidIdentifier(\"proto\")\n      });\n\n      const classProto = _core.types.memberExpression(classState.classRef, _core.types.identifier(\"prototype\"));\n\n      const protoDeclaration = _core.types.variableDeclaration(\"var\", [_core.types.variableDeclarator(classState.protoAlias, classProto)]);\n\n      classState.body.push(protoDeclaration);\n    }\n  }\n\n  function pushConstructor(superReturns, method, path) {\n    if (path.scope.hasOwnBinding(classState.classRef.name)) {\n      path.scope.rename(classState.classRef.name);\n    }\n\n    setState({\n      userConstructorPath: path,\n      userConstructor: method,\n      hasConstructor: true,\n      superReturns\n    });\n    const {\n      construct\n    } = classState;\n\n    _core.types.inheritsComments(construct, method);\n\n    construct.params = method.params;\n\n    _core.types.inherits(construct.body, method.body);\n\n    construct.body.directives = method.body.directives;\n    pushConstructorToBody();\n  }\n\n  function pushConstructorToBody() {\n    if (classState.pushedConstructor) return;\n    classState.pushedConstructor = true;\n\n    if (classState.hasInstanceDescriptors || classState.hasStaticDescriptors) {\n      pushDescriptors();\n    }\n\n    classState.body.push(classState.construct);\n    pushInheritsToBody();\n  }\n\n  function pushInheritsToBody() {\n    if (!classState.isDerived || classState.pushedInherits) return;\n    const superFnId = path.scope.generateUidIdentifier(\"super\");\n    setState({\n      pushedInherits: true,\n      superFnId\n    });\n\n    if (!classState.isLoose) {\n      classState.body.unshift(_core.types.variableDeclaration(\"var\", [_core.types.variableDeclarator(superFnId, _core.types.callExpression((0, _inlineCreateSuperHelpers.default)(classState.file), [_core.types.cloneNode(classState.classRef)]))]));\n    }\n\n    classState.body.unshift(_core.types.expressionStatement(_core.types.callExpression(classState.file.addHelper(classState.isLoose ? \"inheritsLoose\" : \"inherits\"), [_core.types.cloneNode(classState.classRef), _core.types.cloneNode(classState.superName)])));\n  }\n\n  function setupClosureParamsArgs() {\n    const {\n      superName\n    } = classState;\n    const closureParams = [];\n    const closureArgs = [];\n\n    if (classState.isDerived) {\n      let arg = _core.types.cloneNode(superName);\n\n      if (classState.extendsNative) {\n        arg = _core.types.callExpression(classState.file.addHelper(\"wrapNativeSuper\"), [arg]);\n        (0, _helperAnnotateAsPure.default)(arg);\n      }\n\n      const param = classState.scope.generateUidIdentifierBasedOnNode(superName);\n      closureParams.push(param);\n      closureArgs.push(arg);\n      setState({\n        superName: _core.types.cloneNode(param)\n      });\n    }\n\n    return {\n      closureParams,\n      closureArgs\n    };\n  }\n\n  function classTransformer(path, file, builtinClasses, isLoose) {\n    setState({\n      parent: path.parent,\n      scope: path.scope,\n      node: path.node,\n      path,\n      file,\n      isLoose\n    });\n    setState({\n      classId: classState.node.id,\n      classRef: classState.node.id ? _core.types.identifier(classState.node.id.name) : classState.scope.generateUidIdentifier(\"class\"),\n      superName: classState.node.superClass,\n      isDerived: !!classState.node.superClass,\n      constructorBody: _core.types.blockStatement([])\n    });\n    setState({\n      extendsNative: classState.isDerived && builtinClasses.has(classState.superName.name) && !classState.scope.hasBinding(classState.superName.name, true)\n    });\n    const {\n      classRef,\n      node,\n      constructorBody\n    } = classState;\n    setState({\n      construct: buildConstructor(classRef, constructorBody, node)\n    });\n    let {\n      body\n    } = classState;\n    const {\n      closureParams,\n      closureArgs\n    } = setupClosureParamsArgs();\n    buildBody();\n\n    if (!classState.isLoose) {\n      constructorBody.body.unshift(_core.types.expressionStatement(_core.types.callExpression(classState.file.addHelper(\"classCallCheck\"), [_core.types.thisExpression(), _core.types.cloneNode(classState.classRef)])));\n    }\n\n    body = body.concat(classState.staticPropBody.map(fn => fn(_core.types.cloneNode(classState.classRef))));\n    const isStrict = path.isInStrictMode();\n    let constructorOnly = classState.classId && body.length === 1;\n\n    if (constructorOnly && !isStrict) {\n      for (const param of classState.construct.params) {\n        if (!_core.types.isIdentifier(param)) {\n          constructorOnly = false;\n          break;\n        }\n      }\n    }\n\n    const directives = constructorOnly ? body[0].body.directives : [];\n\n    if (!isStrict) {\n      directives.push(_core.types.directive(_core.types.directiveLiteral(\"use strict\")));\n    }\n\n    if (constructorOnly) {\n      return _core.types.toExpression(body[0]);\n    }\n\n    body.push(_core.types.returnStatement(_core.types.cloneNode(classState.classRef)));\n\n    const container = _core.types.arrowFunctionExpression(closureParams, _core.types.blockStatement(body, directives));\n\n    return _core.types.callExpression(container, closureArgs);\n  }\n\n  return classTransformer(path, file, builtinClasses, isLoose);\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = addCreateSuperHelper;\n\nvar _core = require(\"@babel/core\");\n\nconst helperIDs = new WeakMap();\n\nfunction addCreateSuperHelper(file) {\n  if (helperIDs.has(file)) {\n    return (_core.types.cloneNode || _core.types.clone)(helperIDs.get(file));\n  }\n\n  try {\n    return file.addHelper(\"createSuper\");\n  } catch (_unused) {}\n\n  const id = file.scope.generateUidIdentifier(\"createSuper\");\n  helperIDs.set(file, id);\n  const fn = helper({\n    CREATE_SUPER: id,\n    GET_PROTOTYPE_OF: file.addHelper(\"getPrototypeOf\"),\n    POSSIBLE_CONSTRUCTOR_RETURN: file.addHelper(\"possibleConstructorReturn\")\n  });\n  file.path.unshiftContainer(\"body\", [fn]);\n  file.scope.registerDeclaration(file.path.get(\"body.0\"));\n  return _core.types.cloneNode(id);\n}\n\nconst helper = _core.template.statement`\n  function CREATE_SUPER(Derived) {\n    function isNativeReflectConstruct() {\n      if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n\n      // core-js@3\n      if (Reflect.construct.sham) return false;\n\n      // Proxy can't be polyfilled. Every browser implemented\n      // proxies before or at the same time as Reflect.construct,\n      // so if they support Proxy they also support Reflect.construct.\n      if (typeof Proxy === \"function\") return true;\n\n      // Since Reflect.construct can't be properly polyfilled, some\n      // implementations (e.g. core-js@2) don't set the correct internal slots.\n      // Those polyfills don't allow us to subclass built-ins, so we need to\n      // use our fallback implementation.\n      try {\n        // If the internal slots aren't set, this throws an error similar to\n        //   TypeError: this is not a Date object.\n        Date.prototype.toString.call(Reflect.construct(Date, [], function() {}));\n        return true;\n      } catch (e) {\n        return false;\n      }\n    }\n\n    return function () {\n      var Super = GET_PROTOTYPE_OF(Derived), result;\n      if (isNativeReflectConstruct()) {\n        // NOTE: This doesn't work if this.__proto__.constructor has been modified.\n        var NewTarget = GET_PROTOTYPE_OF(this).constructor;\n        result = Reflect.construct(Super, arguments, NewTarget);\n      } else {\n        result = Super.apply(this, arguments);\n      }\n      return POSSIBLE_CONSTRUCTOR_RETURN(this, result);\n    }\n  }\n`;","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nconst beforeExpr = true;\nconst startsExpr = true;\nconst isLoop = true;\nconst isAssign = true;\nconst prefix = true;\nconst postfix = true;\nclass TokenType {\n  constructor(label, conf = {}) {\n    this.label = void 0;\n    this.keyword = void 0;\n    this.beforeExpr = void 0;\n    this.startsExpr = void 0;\n    this.rightAssociative = void 0;\n    this.isLoop = void 0;\n    this.isAssign = void 0;\n    this.prefix = void 0;\n    this.postfix = void 0;\n    this.binop = void 0;\n    this.updateContext = void 0;\n    this.label = label;\n    this.keyword = conf.keyword;\n    this.beforeExpr = !!conf.beforeExpr;\n    this.startsExpr = !!conf.startsExpr;\n    this.rightAssociative = !!conf.rightAssociative;\n    this.isLoop = !!conf.isLoop;\n    this.isAssign = !!conf.isAssign;\n    this.prefix = !!conf.prefix;\n    this.postfix = !!conf.postfix;\n    this.binop = conf.binop != null ? conf.binop : null;\n    this.updateContext = null;\n  }\n\n}\nconst keywords = new Map();\n\nfunction createKeyword(name, options = {}) {\n  options.keyword = name;\n  const token = new TokenType(name, options);\n  keywords.set(name, token);\n  return token;\n}\n\nfunction createBinop(name, binop) {\n  return new TokenType(name, {\n    beforeExpr,\n    binop\n  });\n}\n\nconst types = {\n  num: new TokenType(\"num\", {\n    startsExpr\n  }),\n  bigint: new TokenType(\"bigint\", {\n    startsExpr\n  }),\n  decimal: new TokenType(\"decimal\", {\n    startsExpr\n  }),\n  regexp: new TokenType(\"regexp\", {\n    startsExpr\n  }),\n  string: new TokenType(\"string\", {\n    startsExpr\n  }),\n  name: new TokenType(\"name\", {\n    startsExpr\n  }),\n  eof: new TokenType(\"eof\"),\n  bracketL: new TokenType(\"[\", {\n    beforeExpr,\n    startsExpr\n  }),\n  bracketHashL: new TokenType(\"#[\", {\n    beforeExpr,\n    startsExpr\n  }),\n  bracketBarL: new TokenType(\"[|\", {\n    beforeExpr,\n    startsExpr\n  }),\n  bracketR: new TokenType(\"]\"),\n  bracketBarR: new TokenType(\"|]\"),\n  braceL: new TokenType(\"{\", {\n    beforeExpr,\n    startsExpr\n  }),\n  braceBarL: new TokenType(\"{|\", {\n    beforeExpr,\n    startsExpr\n  }),\n  braceHashL: new TokenType(\"#{\", {\n    beforeExpr,\n    startsExpr\n  }),\n  braceR: new TokenType(\"}\"),\n  braceBarR: new TokenType(\"|}\"),\n  parenL: new TokenType(\"(\", {\n    beforeExpr,\n    startsExpr\n  }),\n  parenR: new TokenType(\")\"),\n  comma: new TokenType(\",\", {\n    beforeExpr\n  }),\n  semi: new TokenType(\";\", {\n    beforeExpr\n  }),\n  colon: new TokenType(\":\", {\n    beforeExpr\n  }),\n  doubleColon: new TokenType(\"::\", {\n    beforeExpr\n  }),\n  dot: new TokenType(\".\"),\n  question: new TokenType(\"?\", {\n    beforeExpr\n  }),\n  questionDot: new TokenType(\"?.\"),\n  arrow: new TokenType(\"=>\", {\n    beforeExpr\n  }),\n  template: new TokenType(\"template\"),\n  ellipsis: new TokenType(\"...\", {\n    beforeExpr\n  }),\n  backQuote: new TokenType(\"`\", {\n    startsExpr\n  }),\n  dollarBraceL: new TokenType(\"${\", {\n    beforeExpr,\n    startsExpr\n  }),\n  at: new TokenType(\"@\"),\n  hash: new TokenType(\"#\", {\n    startsExpr\n  }),\n  interpreterDirective: new TokenType(\"#!...\"),\n  eq: new TokenType(\"=\", {\n    beforeExpr,\n    isAssign\n  }),\n  assign: new TokenType(\"_=\", {\n    beforeExpr,\n    isAssign\n  }),\n  incDec: new TokenType(\"++/--\", {\n    prefix,\n    postfix,\n    startsExpr\n  }),\n  bang: new TokenType(\"!\", {\n    beforeExpr,\n    prefix,\n    startsExpr\n  }),\n  tilde: new TokenType(\"~\", {\n    beforeExpr,\n    prefix,\n    startsExpr\n  }),\n  pipeline: createBinop(\"|>\", 0),\n  nullishCoalescing: createBinop(\"??\", 1),\n  logicalOR: createBinop(\"||\", 1),\n  logicalAND: createBinop(\"&&\", 2),\n  bitwiseOR: createBinop(\"|\", 3),\n  bitwiseXOR: createBinop(\"^\", 4),\n  bitwiseAND: createBinop(\"&\", 5),\n  equality: createBinop(\"==/!=/===/!==\", 6),\n  relational: createBinop(\"</>/<=/>=\", 7),\n  bitShift: createBinop(\"<</>>/>>>\", 8),\n  plusMin: new TokenType(\"+/-\", {\n    beforeExpr,\n    binop: 9,\n    prefix,\n    startsExpr\n  }),\n  modulo: new TokenType(\"%\", {\n    beforeExpr,\n    binop: 10,\n    startsExpr\n  }),\n  star: new TokenType(\"*\", {\n    binop: 10\n  }),\n  slash: createBinop(\"/\", 10),\n  exponent: new TokenType(\"**\", {\n    beforeExpr,\n    binop: 11,\n    rightAssociative: true\n  }),\n  _break: createKeyword(\"break\"),\n  _case: createKeyword(\"case\", {\n    beforeExpr\n  }),\n  _catch: createKeyword(\"catch\"),\n  _continue: createKeyword(\"continue\"),\n  _debugger: createKeyword(\"debugger\"),\n  _default: createKeyword(\"default\", {\n    beforeExpr\n  }),\n  _do: createKeyword(\"do\", {\n    isLoop,\n    beforeExpr\n  }),\n  _else: createKeyword(\"else\", {\n    beforeExpr\n  }),\n  _finally: createKeyword(\"finally\"),\n  _for: createKeyword(\"for\", {\n    isLoop\n  }),\n  _function: createKeyword(\"function\", {\n    startsExpr\n  }),\n  _if: createKeyword(\"if\"),\n  _return: createKeyword(\"return\", {\n    beforeExpr\n  }),\n  _switch: createKeyword(\"switch\"),\n  _throw: createKeyword(\"throw\", {\n    beforeExpr,\n    prefix,\n    startsExpr\n  }),\n  _try: createKeyword(\"try\"),\n  _var: createKeyword(\"var\"),\n  _const: createKeyword(\"const\"),\n  _while: createKeyword(\"while\", {\n    isLoop\n  }),\n  _with: createKeyword(\"with\"),\n  _new: createKeyword(\"new\", {\n    beforeExpr,\n    startsExpr\n  }),\n  _this: createKeyword(\"this\", {\n    startsExpr\n  }),\n  _super: createKeyword(\"super\", {\n    startsExpr\n  }),\n  _class: createKeyword(\"class\", {\n    startsExpr\n  }),\n  _extends: createKeyword(\"extends\", {\n    beforeExpr\n  }),\n  _export: createKeyword(\"export\"),\n  _import: createKeyword(\"import\", {\n    startsExpr\n  }),\n  _null: createKeyword(\"null\", {\n    startsExpr\n  }),\n  _true: createKeyword(\"true\", {\n    startsExpr\n  }),\n  _false: createKeyword(\"false\", {\n    startsExpr\n  }),\n  _in: createKeyword(\"in\", {\n    beforeExpr,\n    binop: 7\n  }),\n  _instanceof: createKeyword(\"instanceof\", {\n    beforeExpr,\n    binop: 7\n  }),\n  _typeof: createKeyword(\"typeof\", {\n    beforeExpr,\n    prefix,\n    startsExpr\n  }),\n  _void: createKeyword(\"void\", {\n    beforeExpr,\n    prefix,\n    startsExpr\n  }),\n  _delete: createKeyword(\"delete\", {\n    beforeExpr,\n    prefix,\n    startsExpr\n  })\n};\n\nconst lineBreak = /\\r\\n?|[\\n\\u2028\\u2029]/;\nconst lineBreakG = new RegExp(lineBreak.source, \"g\");\nfunction isNewLine(code) {\n  switch (code) {\n    case 10:\n    case 13:\n    case 8232:\n    case 8233:\n      return true;\n\n    default:\n      return false;\n  }\n}\nconst skipWhiteSpace = /(?:\\s|\\/\\/.*|\\/\\*[^]*?\\*\\/)*/g;\nfunction isWhitespace(code) {\n  switch (code) {\n    case 0x0009:\n    case 0x000b:\n    case 0x000c:\n    case 32:\n    case 160:\n    case 5760:\n    case 0x2000:\n    case 0x2001:\n    case 0x2002:\n    case 0x2003:\n    case 0x2004:\n    case 0x2005:\n    case 0x2006:\n    case 0x2007:\n    case 0x2008:\n    case 0x2009:\n    case 0x200a:\n    case 0x202f:\n    case 0x205f:\n    case 0x3000:\n    case 0xfeff:\n      return true;\n\n    default:\n      return false;\n  }\n}\n\nclass Position {\n  constructor(line, col) {\n    this.line = void 0;\n    this.column = void 0;\n    this.line = line;\n    this.column = col;\n  }\n\n}\nclass SourceLocation {\n  constructor(start, end) {\n    this.start = void 0;\n    this.end = void 0;\n    this.filename = void 0;\n    this.identifierName = void 0;\n    this.start = start;\n    this.end = end;\n  }\n\n}\nfunction getLineInfo(input, offset) {\n  let line = 1;\n  let lineStart = 0;\n  let match;\n  lineBreakG.lastIndex = 0;\n\n  while ((match = lineBreakG.exec(input)) && match.index < offset) {\n    line++;\n    lineStart = lineBreakG.lastIndex;\n  }\n\n  return new Position(line, offset - lineStart);\n}\n\nclass BaseParser {\n  constructor() {\n    this.sawUnambiguousESM = false;\n    this.ambiguousScriptDifferentAst = false;\n  }\n\n  hasPlugin(name) {\n    return this.plugins.has(name);\n  }\n\n  getPluginOption(plugin, name) {\n    if (this.hasPlugin(plugin)) return this.plugins.get(plugin)[name];\n  }\n\n}\n\nfunction last(stack) {\n  return stack[stack.length - 1];\n}\n\nclass CommentsParser extends BaseParser {\n  addComment(comment) {\n    if (this.filename) comment.loc.filename = this.filename;\n    this.state.trailingComments.push(comment);\n    this.state.leadingComments.push(comment);\n  }\n\n  adjustCommentsAfterTrailingComma(node, elements, takeAllComments) {\n    if (this.state.leadingComments.length === 0) {\n      return;\n    }\n\n    let lastElement = null;\n    let i = elements.length;\n\n    while (lastElement === null && i > 0) {\n      lastElement = elements[--i];\n    }\n\n    if (lastElement === null) {\n      return;\n    }\n\n    for (let j = 0; j < this.state.leadingComments.length; j++) {\n      if (this.state.leadingComments[j].end < this.state.commentPreviousNode.end) {\n        this.state.leadingComments.splice(j, 1);\n        j--;\n      }\n    }\n\n    const newTrailingComments = [];\n\n    for (let i = 0; i < this.state.leadingComments.length; i++) {\n      const leadingComment = this.state.leadingComments[i];\n\n      if (leadingComment.end < node.end) {\n        newTrailingComments.push(leadingComment);\n\n        if (!takeAllComments) {\n          this.state.leadingComments.splice(i, 1);\n          i--;\n        }\n      } else {\n        if (node.trailingComments === undefined) {\n          node.trailingComments = [];\n        }\n\n        node.trailingComments.push(leadingComment);\n      }\n    }\n\n    if (takeAllComments) this.state.leadingComments = [];\n\n    if (newTrailingComments.length > 0) {\n      lastElement.trailingComments = newTrailingComments;\n    } else if (lastElement.trailingComments !== undefined) {\n      lastElement.trailingComments = [];\n    }\n  }\n\n  processComment(node) {\n    if (node.type === \"Program\" && node.body.length > 0) return;\n    const stack = this.state.commentStack;\n    let firstChild, lastChild, trailingComments, i, j;\n\n    if (this.state.trailingComments.length > 0) {\n      if (this.state.trailingComments[0].start >= node.end) {\n        trailingComments = this.state.trailingComments;\n        this.state.trailingComments = [];\n      } else {\n        this.state.trailingComments.length = 0;\n      }\n    } else if (stack.length > 0) {\n      const lastInStack = last(stack);\n\n      if (lastInStack.trailingComments && lastInStack.trailingComments[0].start >= node.end) {\n        trailingComments = lastInStack.trailingComments;\n        delete lastInStack.trailingComments;\n      }\n    }\n\n    if (stack.length > 0 && last(stack).start >= node.start) {\n      firstChild = stack.pop();\n    }\n\n    while (stack.length > 0 && last(stack).start >= node.start) {\n      lastChild = stack.pop();\n    }\n\n    if (!lastChild && firstChild) lastChild = firstChild;\n\n    if (firstChild) {\n      switch (node.type) {\n        case \"ObjectExpression\":\n          this.adjustCommentsAfterTrailingComma(node, node.properties);\n          break;\n\n        case \"ObjectPattern\":\n          this.adjustCommentsAfterTrailingComma(node, node.properties, true);\n          break;\n\n        case \"CallExpression\":\n          this.adjustCommentsAfterTrailingComma(node, node.arguments);\n          break;\n\n        case \"ArrayExpression\":\n          this.adjustCommentsAfterTrailingComma(node, node.elements);\n          break;\n\n        case \"ArrayPattern\":\n          this.adjustCommentsAfterTrailingComma(node, node.elements, true);\n          break;\n      }\n    } else if (this.state.commentPreviousNode && (this.state.commentPreviousNode.type === \"ImportSpecifier\" && node.type !== \"ImportSpecifier\" || this.state.commentPreviousNode.type === \"ExportSpecifier\" && node.type !== \"ExportSpecifier\")) {\n      this.adjustCommentsAfterTrailingComma(node, [this.state.commentPreviousNode]);\n    }\n\n    if (lastChild) {\n      if (lastChild.leadingComments) {\n        if (lastChild !== node && lastChild.leadingComments.length > 0 && last(lastChild.leadingComments).end <= node.start) {\n          node.leadingComments = lastChild.leadingComments;\n          delete lastChild.leadingComments;\n        } else {\n          for (i = lastChild.leadingComments.length - 2; i >= 0; --i) {\n            if (lastChild.leadingComments[i].end <= node.start) {\n              node.leadingComments = lastChild.leadingComments.splice(0, i + 1);\n              break;\n            }\n          }\n        }\n      }\n    } else if (this.state.leadingComments.length > 0) {\n      if (last(this.state.leadingComments).end <= node.start) {\n        if (this.state.commentPreviousNode) {\n          for (j = 0; j < this.state.leadingComments.length; j++) {\n            if (this.state.leadingComments[j].end < this.state.commentPreviousNode.end) {\n              this.state.leadingComments.splice(j, 1);\n              j--;\n            }\n          }\n        }\n\n        if (this.state.leadingComments.length > 0) {\n          node.leadingComments = this.state.leadingComments;\n          this.state.leadingComments = [];\n        }\n      } else {\n        for (i = 0; i < this.state.leadingComments.length; i++) {\n          if (this.state.leadingComments[i].end > node.start) {\n            break;\n          }\n        }\n\n        const leadingComments = this.state.leadingComments.slice(0, i);\n\n        if (leadingComments.length) {\n          node.leadingComments = leadingComments;\n        }\n\n        trailingComments = this.state.leadingComments.slice(i);\n\n        if (trailingComments.length === 0) {\n          trailingComments = null;\n        }\n      }\n    }\n\n    this.state.commentPreviousNode = node;\n\n    if (trailingComments) {\n      if (trailingComments.length && trailingComments[0].start >= node.start && last(trailingComments).end <= node.end) {\n        node.innerComments = trailingComments;\n      } else {\n        const firstTrailingCommentIndex = trailingComments.findIndex(comment => comment.end >= node.end);\n\n        if (firstTrailingCommentIndex > 0) {\n          node.innerComments = trailingComments.slice(0, firstTrailingCommentIndex);\n          node.trailingComments = trailingComments.slice(firstTrailingCommentIndex);\n        } else {\n          node.trailingComments = trailingComments;\n        }\n      }\n    }\n\n    stack.push(node);\n  }\n\n}\n\nconst ErrorMessages = Object.freeze({\n  AccessorIsGenerator: \"A %0ter cannot be a generator\",\n  ArgumentsInClass: \"'arguments' is only allowed in functions and class methods\",\n  AsyncFunctionInSingleStatementContext: \"Async functions can only be declared at the top level or inside a block\",\n  AwaitBindingIdentifier: \"Can not use 'await' as identifier inside an async function\",\n  AwaitBindingIdentifierInStaticBlock: \"Can not use 'await' as identifier inside a static block\",\n  AwaitExpressionFormalParameter: \"await is not allowed in async function parameters\",\n  AwaitNotInAsyncContext: \"'await' is only allowed within async functions and at the top levels of modules\",\n  AwaitNotInAsyncFunction: \"'await' is only allowed within async functions\",\n  BadGetterArity: \"getter must not have any formal parameters\",\n  BadSetterArity: \"setter must have exactly one formal parameter\",\n  BadSetterRestParameter: \"setter function argument must not be a rest parameter\",\n  ConstructorClassField: \"Classes may not have a field named 'constructor'\",\n  ConstructorClassPrivateField: \"Classes may not have a private field named '#constructor'\",\n  ConstructorIsAccessor: \"Class constructor may not be an accessor\",\n  ConstructorIsAsync: \"Constructor can't be an async function\",\n  ConstructorIsGenerator: \"Constructor can't be a generator\",\n  DeclarationMissingInitializer: \"%0 require an initialization value\",\n  DecoratorBeforeExport: \"Decorators must be placed *before* the 'export' keyword. You can set the 'decoratorsBeforeExport' option to false to use the 'export @decorator class {}' syntax\",\n  DecoratorConstructor: \"Decorators can't be used with a constructor. Did you mean '@dec class { ... }'?\",\n  DecoratorExportClass: \"Using the export keyword between a decorator and a class is not allowed. Please use `export @dec class` instead.\",\n  DecoratorSemicolon: \"Decorators must not be followed by a semicolon\",\n  DecoratorStaticBlock: \"Decorators can't be used with a static block\",\n  DeletePrivateField: \"Deleting a private field is not allowed\",\n  DestructureNamedImport: \"ES2015 named imports do not destructure. Use another statement for destructuring after the import.\",\n  DuplicateConstructor: \"Duplicate constructor in the same class\",\n  DuplicateDefaultExport: \"Only one default export allowed per module.\",\n  DuplicateExport: \"`%0` has already been exported. Exported identifiers must be unique.\",\n  DuplicateProto: \"Redefinition of __proto__ property\",\n  DuplicateRegExpFlags: \"Duplicate regular expression flag\",\n  DuplicateStaticBlock: \"Duplicate static block in the same class\",\n  ElementAfterRest: \"Rest element must be last element\",\n  EscapedCharNotAnIdentifier: \"Invalid Unicode escape\",\n  ExportBindingIsString: \"A string literal cannot be used as an exported binding without `from`.\\n- Did you mean `export { '%0' as '%1' } from 'some-module'`?\",\n  ExportDefaultFromAsIdentifier: \"'from' is not allowed as an identifier after 'export default'\",\n  ForInOfLoopInitializer: \"%0 loop variable declaration may not have an initializer\",\n  GeneratorInSingleStatementContext: \"Generators can only be declared at the top level or inside a block\",\n  IllegalBreakContinue: \"Unsyntactic %0\",\n  IllegalLanguageModeDirective: \"Illegal 'use strict' directive in function with non-simple parameter list\",\n  IllegalReturn: \"'return' outside of function\",\n  ImportBindingIsString: 'A string literal cannot be used as an imported binding.\\n- Did you mean `import { \"%0\" as foo }`?',\n  ImportCallArgumentTrailingComma: \"Trailing comma is disallowed inside import(...) arguments\",\n  ImportCallArity: \"import() requires exactly %0\",\n  ImportCallNotNewExpression: \"Cannot use new with import(...)\",\n  ImportCallSpreadArgument: \"... is not allowed in import()\",\n  ImportMetaOutsideModule: `import.meta may appear only with 'sourceType: \"module\"'`,\n  ImportOutsideModule: `'import' and 'export' may appear only with 'sourceType: \"module\"'`,\n  InvalidBigIntLiteral: \"Invalid BigIntLiteral\",\n  InvalidCodePoint: \"Code point out of bounds\",\n  InvalidDecimal: \"Invalid decimal\",\n  InvalidDigit: \"Expected number in radix %0\",\n  InvalidEscapeSequence: \"Bad character escape sequence\",\n  InvalidEscapeSequenceTemplate: \"Invalid escape sequence in template\",\n  InvalidEscapedReservedWord: \"Escape sequence in keyword %0\",\n  InvalidIdentifier: \"Invalid identifier %0\",\n  InvalidLhs: \"Invalid left-hand side in %0\",\n  InvalidLhsBinding: \"Binding invalid left-hand side in %0\",\n  InvalidNumber: \"Invalid number\",\n  InvalidOrMissingExponent: \"Floating-point numbers require a valid exponent after the 'e'\",\n  InvalidOrUnexpectedToken: \"Unexpected character '%0'\",\n  InvalidParenthesizedAssignment: \"Invalid parenthesized assignment pattern\",\n  InvalidPrivateFieldResolution: \"Private name #%0 is not defined\",\n  InvalidPropertyBindingPattern: \"Binding member expression\",\n  InvalidRecordProperty: \"Only properties and spread elements are allowed in record definitions\",\n  InvalidRestAssignmentPattern: \"Invalid rest operator's argument\",\n  LabelRedeclaration: \"Label '%0' is already declared\",\n  LetInLexicalBinding: \"'let' is not allowed to be used as a name in 'let' or 'const' declarations.\",\n  LineTerminatorBeforeArrow: \"No line break is allowed before '=>'\",\n  MalformedRegExpFlags: \"Invalid regular expression flag\",\n  MissingClassName: \"A class name is required\",\n  MissingEqInAssignment: \"Only '=' operator can be used for specifying default value.\",\n  MissingSemicolon: \"Missing semicolon\",\n  MissingUnicodeEscape: \"Expecting Unicode escape sequence \\\\uXXXX\",\n  MixingCoalesceWithLogical: \"Nullish coalescing operator(??) requires parens when mixing with logical operators\",\n  ModuleAttributeDifferentFromType: \"The only accepted module attribute is `type`\",\n  ModuleAttributeInvalidValue: \"Only string literals are allowed as module attribute values\",\n  ModuleAttributesWithDuplicateKeys: 'Duplicate key \"%0\" is not allowed in module attributes',\n  ModuleExportNameHasLoneSurrogate: \"An export name cannot include a lone surrogate, found '\\\\u%0'\",\n  ModuleExportUndefined: \"Export '%0' is not defined\",\n  MultipleDefaultsInSwitch: \"Multiple default clauses\",\n  NewlineAfterThrow: \"Illegal newline after throw\",\n  NoCatchOrFinally: \"Missing catch or finally clause\",\n  NumberIdentifier: \"Identifier directly after number\",\n  NumericSeparatorInEscapeSequence: \"Numeric separators are not allowed inside unicode escape sequences or hex escape sequences\",\n  ObsoleteAwaitStar: \"await* has been removed from the async functions proposal. Use Promise.all() instead.\",\n  OptionalChainingNoNew: \"constructors in/after an Optional Chain are not allowed\",\n  OptionalChainingNoTemplate: \"Tagged Template Literals are not allowed in optionalChain\",\n  ParamDupe: \"Argument name clash\",\n  PatternHasAccessor: \"Object pattern can't contain getter or setter\",\n  PatternHasMethod: \"Object pattern can't contain methods\",\n  PipelineBodyNoArrow: 'Unexpected arrow \"=>\" after pipeline body; arrow function in pipeline body must be parenthesized',\n  PipelineBodySequenceExpression: \"Pipeline body may not be a comma-separated sequence expression\",\n  PipelineHeadSequenceExpression: \"Pipeline head should not be a comma-separated sequence expression\",\n  PipelineTopicUnused: \"Pipeline is in topic style but does not use topic reference\",\n  PrimaryTopicNotAllowed: \"Topic reference was used in a lexical context without topic binding\",\n  PrimaryTopicRequiresSmartPipeline: \"Primary Topic Reference found but pipelineOperator not passed 'smart' for 'proposal' option.\",\n  PrivateInExpectedIn: \"Private names are only allowed in property accesses (`obj.#%0`) or in `in` expressions (`#%0 in obj`)\",\n  PrivateNameRedeclaration: \"Duplicate private name #%0\",\n  RecordExpressionBarIncorrectEndSyntaxType: \"Record expressions ending with '|}' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'\",\n  RecordExpressionBarIncorrectStartSyntaxType: \"Record expressions starting with '{|' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'\",\n  RecordExpressionHashIncorrectStartSyntaxType: \"Record expressions starting with '#{' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'hash'\",\n  RecordNoProto: \"'__proto__' is not allowed in Record expressions\",\n  RestTrailingComma: \"Unexpected trailing comma after rest element\",\n  SloppyFunction: \"In non-strict mode code, functions can only be declared at top level, inside a block, or as the body of an if statement\",\n  StaticPrototype: \"Classes may not have static property named prototype\",\n  StrictDelete: \"Deleting local variable in strict mode\",\n  StrictEvalArguments: \"Assigning to '%0' in strict mode\",\n  StrictEvalArgumentsBinding: \"Binding '%0' in strict mode\",\n  StrictFunction: \"In strict mode code, functions can only be declared at top level or inside a block\",\n  StrictNumericEscape: \"The only valid numeric escape in strict mode is '\\\\0'\",\n  StrictOctalLiteral: \"Legacy octal literals are not allowed in strict mode\",\n  StrictWith: \"'with' in strict mode\",\n  SuperNotAllowed: \"super() is only valid inside a class constructor of a subclass. Maybe a typo in the method name ('constructor') or not extending another class?\",\n  SuperPrivateField: \"Private fields can't be accessed on super\",\n  TrailingDecorator: \"Decorators must be attached to a class element\",\n  TupleExpressionBarIncorrectEndSyntaxType: \"Tuple expressions ending with '|]' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'\",\n  TupleExpressionBarIncorrectStartSyntaxType: \"Tuple expressions starting with '[|' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'\",\n  TupleExpressionHashIncorrectStartSyntaxType: \"Tuple expressions starting with '#[' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'hash'\",\n  UnexpectedArgumentPlaceholder: \"Unexpected argument placeholder\",\n  UnexpectedAwaitAfterPipelineBody: 'Unexpected \"await\" after pipeline body; await must have parentheses in minimal proposal',\n  UnexpectedDigitAfterHash: \"Unexpected digit after hash token\",\n  UnexpectedImportExport: \"'import' and 'export' may only appear at the top level\",\n  UnexpectedKeyword: \"Unexpected keyword '%0'\",\n  UnexpectedLeadingDecorator: \"Leading decorators must be attached to a class declaration\",\n  UnexpectedLexicalDeclaration: \"Lexical declaration cannot appear in a single-statement context\",\n  UnexpectedNewTarget: \"new.target can only be used in functions\",\n  UnexpectedNumericSeparator: \"A numeric separator is only allowed between two digits\",\n  UnexpectedPrivateField: \"Private names can only be used as the name of a class element (i.e. class C { #p = 42; #m() {} } )\\n or a property of member expression (i.e. this.#p).\",\n  UnexpectedReservedWord: \"Unexpected reserved word '%0'\",\n  UnexpectedSuper: \"super is only allowed in object methods and classes\",\n  UnexpectedToken: \"Unexpected token '%0'\",\n  UnexpectedTokenUnaryExponentiation: \"Illegal expression. Wrap left hand side or entire exponentiation in parentheses.\",\n  UnsupportedBind: \"Binding should be performed on object property.\",\n  UnsupportedDecoratorExport: \"A decorated export must export a class declaration\",\n  UnsupportedDefaultExport: \"Only expressions, functions or classes are allowed as the `default` export.\",\n  UnsupportedImport: \"import can only be used in import() or import.meta\",\n  UnsupportedMetaProperty: \"The only valid meta property for %0 is %0.%1\",\n  UnsupportedParameterDecorator: \"Decorators cannot be used to decorate parameters\",\n  UnsupportedPropertyDecorator: \"Decorators cannot be used to decorate object literal properties\",\n  UnsupportedSuper: \"super can only be used with function calls (i.e. super()) or in property accesses (i.e. super.prop or super[prop])\",\n  UnterminatedComment: \"Unterminated comment\",\n  UnterminatedRegExp: \"Unterminated regular expression\",\n  UnterminatedString: \"Unterminated string constant\",\n  UnterminatedTemplate: \"Unterminated template\",\n  VarRedeclaration: \"Identifier '%0' has already been declared\",\n  YieldBindingIdentifier: \"Can not use 'yield' as identifier inside a generator\",\n  YieldInParameter: \"Yield expression is not allowed in formal parameters\",\n  ZeroDigitNumericSeparator: \"Numeric separator can not be used after leading 0\"\n});\n\nclass ParserError extends CommentsParser {\n  getLocationForPosition(pos) {\n    let loc;\n    if (pos === this.state.start) loc = this.state.startLoc;else if (pos === this.state.lastTokStart) loc = this.state.lastTokStartLoc;else if (pos === this.state.end) loc = this.state.endLoc;else if (pos === this.state.lastTokEnd) loc = this.state.lastTokEndLoc;else loc = getLineInfo(this.input, pos);\n    return loc;\n  }\n\n  raise(pos, errorTemplate, ...params) {\n    return this.raiseWithData(pos, undefined, errorTemplate, ...params);\n  }\n\n  raiseOverwrite(pos, errorTemplate, ...params) {\n    const loc = this.getLocationForPosition(pos);\n    const message = errorTemplate.replace(/%(\\d+)/g, (_, i) => params[i]) + ` (${loc.line}:${loc.column})`;\n\n    if (this.options.errorRecovery) {\n      const errors = this.state.errors;\n\n      for (let i = errors.length - 1; i >= 0; i--) {\n        const error = errors[i];\n\n        if (error.pos === pos) {\n          return Object.assign(error, {\n            message\n          });\n        } else if (error.pos < pos) {\n          break;\n        }\n      }\n    }\n\n    return this._raise({\n      loc,\n      pos\n    }, message);\n  }\n\n  raiseWithData(pos, data, errorTemplate, ...params) {\n    const loc = this.getLocationForPosition(pos);\n    const message = errorTemplate.replace(/%(\\d+)/g, (_, i) => params[i]) + ` (${loc.line}:${loc.column})`;\n    return this._raise(Object.assign({\n      loc,\n      pos\n    }, data), message);\n  }\n\n  _raise(errorContext, message) {\n    const err = new SyntaxError(message);\n    Object.assign(err, errorContext);\n\n    if (this.options.errorRecovery) {\n      if (!this.isLookahead) this.state.errors.push(err);\n      return err;\n    } else {\n      throw err;\n    }\n  }\n\n}\n\nvar estree = (superClass => class extends superClass {\n  estreeParseRegExpLiteral({\n    pattern,\n    flags\n  }) {\n    let regex = null;\n\n    try {\n      regex = new RegExp(pattern, flags);\n    } catch (e) {}\n\n    const node = this.estreeParseLiteral(regex);\n    node.regex = {\n      pattern,\n      flags\n    };\n    return node;\n  }\n\n  estreeParseBigIntLiteral(value) {\n    let bigInt;\n\n    try {\n      bigInt = BigInt(value);\n    } catch (_unused) {\n      bigInt = null;\n    }\n\n    const node = this.estreeParseLiteral(bigInt);\n    node.bigint = String(node.value || value);\n    return node;\n  }\n\n  estreeParseDecimalLiteral(value) {\n    const decimal = null;\n    const node = this.estreeParseLiteral(decimal);\n    node.decimal = String(node.value || value);\n    return node;\n  }\n\n  estreeParseLiteral(value) {\n    return this.parseLiteral(value, \"Literal\");\n  }\n\n  directiveToStmt(directive) {\n    const directiveLiteral = directive.value;\n    const stmt = this.startNodeAt(directive.start, directive.loc.start);\n    const expression = this.startNodeAt(directiveLiteral.start, directiveLiteral.loc.start);\n    expression.value = directiveLiteral.extra.expressionValue;\n    expression.raw = directiveLiteral.extra.raw;\n    stmt.expression = this.finishNodeAt(expression, \"Literal\", directiveLiteral.end, directiveLiteral.loc.end);\n    stmt.directive = directiveLiteral.extra.raw.slice(1, -1);\n    return this.finishNodeAt(stmt, \"ExpressionStatement\", directive.end, directive.loc.end);\n  }\n\n  initFunction(node, isAsync) {\n    super.initFunction(node, isAsync);\n    node.expression = false;\n  }\n\n  checkDeclaration(node) {\n    if (node != null && this.isObjectProperty(node)) {\n      this.checkDeclaration(node.value);\n    } else {\n      super.checkDeclaration(node);\n    }\n  }\n\n  getObjectOrClassMethodParams(method) {\n    return method.value.params;\n  }\n\n  isValidDirective(stmt) {\n    var _stmt$expression$extr;\n\n    return stmt.type === \"ExpressionStatement\" && stmt.expression.type === \"Literal\" && typeof stmt.expression.value === \"string\" && !((_stmt$expression$extr = stmt.expression.extra) == null ? void 0 : _stmt$expression$extr.parenthesized);\n  }\n\n  stmtToDirective(stmt) {\n    const directive = super.stmtToDirective(stmt);\n    const value = stmt.expression.value;\n    this.addExtra(directive.value, \"expressionValue\", value);\n    return directive;\n  }\n\n  parseBlockBody(node, ...args) {\n    super.parseBlockBody(node, ...args);\n    const directiveStatements = node.directives.map(d => this.directiveToStmt(d));\n    node.body = directiveStatements.concat(node.body);\n    delete node.directives;\n  }\n\n  pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper) {\n    this.parseMethod(method, isGenerator, isAsync, isConstructor, allowsDirectSuper, \"ClassMethod\", true);\n\n    if (method.typeParameters) {\n      method.value.typeParameters = method.typeParameters;\n      delete method.typeParameters;\n    }\n\n    classBody.body.push(method);\n  }\n\n  parseExprAtom(refExpressionErrors) {\n    switch (this.state.type) {\n      case types.num:\n      case types.string:\n        return this.estreeParseLiteral(this.state.value);\n\n      case types.regexp:\n        return this.estreeParseRegExpLiteral(this.state.value);\n\n      case types.bigint:\n        return this.estreeParseBigIntLiteral(this.state.value);\n\n      case types.decimal:\n        return this.estreeParseDecimalLiteral(this.state.value);\n\n      case types._null:\n        return this.estreeParseLiteral(null);\n\n      case types._true:\n        return this.estreeParseLiteral(true);\n\n      case types._false:\n        return this.estreeParseLiteral(false);\n\n      default:\n        return super.parseExprAtom(refExpressionErrors);\n    }\n  }\n\n  parseLiteral(value, type, startPos, startLoc) {\n    const node = super.parseLiteral(value, type, startPos, startLoc);\n    node.raw = node.extra.raw;\n    delete node.extra;\n    return node;\n  }\n\n  parseFunctionBody(node, allowExpression, isMethod = false) {\n    super.parseFunctionBody(node, allowExpression, isMethod);\n    node.expression = node.body.type !== \"BlockStatement\";\n  }\n\n  parseMethod(node, isGenerator, isAsync, isConstructor, allowDirectSuper, type, inClassScope = false) {\n    let funcNode = this.startNode();\n    funcNode.kind = node.kind;\n    funcNode = super.parseMethod(funcNode, isGenerator, isAsync, isConstructor, allowDirectSuper, type, inClassScope);\n    funcNode.type = \"FunctionExpression\";\n    delete funcNode.kind;\n    node.value = funcNode;\n    type = type === \"ClassMethod\" ? \"MethodDefinition\" : type;\n    return this.finishNode(node, type);\n  }\n\n  parseObjectMethod(prop, isGenerator, isAsync, isPattern, isAccessor) {\n    const node = super.parseObjectMethod(prop, isGenerator, isAsync, isPattern, isAccessor);\n\n    if (node) {\n      node.type = \"Property\";\n      if (node.kind === \"method\") node.kind = \"init\";\n      node.shorthand = false;\n    }\n\n    return node;\n  }\n\n  parseObjectProperty(prop, startPos, startLoc, isPattern, refExpressionErrors) {\n    const node = super.parseObjectProperty(prop, startPos, startLoc, isPattern, refExpressionErrors);\n\n    if (node) {\n      node.kind = \"init\";\n      node.type = \"Property\";\n    }\n\n    return node;\n  }\n\n  toAssignable(node, isLHS = false) {\n    if (node != null && this.isObjectProperty(node)) {\n      this.toAssignable(node.value, isLHS);\n      return node;\n    }\n\n    return super.toAssignable(node, isLHS);\n  }\n\n  toAssignableObjectExpressionProp(prop, ...args) {\n    if (prop.kind === \"get\" || prop.kind === \"set\") {\n      this.raise(prop.key.start, ErrorMessages.PatternHasAccessor);\n    } else if (prop.method) {\n      this.raise(prop.key.start, ErrorMessages.PatternHasMethod);\n    } else {\n      super.toAssignableObjectExpressionProp(prop, ...args);\n    }\n  }\n\n  finishCallExpression(node, optional) {\n    super.finishCallExpression(node, optional);\n\n    if (node.callee.type === \"Import\") {\n      node.type = \"ImportExpression\";\n      node.source = node.arguments[0];\n      delete node.arguments;\n      delete node.callee;\n    }\n\n    return node;\n  }\n\n  toReferencedArguments(node) {\n    if (node.type === \"ImportExpression\") {\n      return;\n    }\n\n    super.toReferencedArguments(node);\n  }\n\n  parseExport(node) {\n    super.parseExport(node);\n\n    switch (node.type) {\n      case \"ExportAllDeclaration\":\n        node.exported = null;\n        break;\n\n      case \"ExportNamedDeclaration\":\n        if (node.specifiers.length === 1 && node.specifiers[0].type === \"ExportNamespaceSpecifier\") {\n          node.type = \"ExportAllDeclaration\";\n          node.exported = node.specifiers[0].exported;\n          delete node.specifiers;\n        }\n\n        break;\n    }\n\n    return node;\n  }\n\n  parseSubscript(base, startPos, startLoc, noCalls, state) {\n    const node = super.parseSubscript(base, startPos, startLoc, noCalls, state);\n\n    if (state.optionalChainMember) {\n      if (node.type === \"OptionalMemberExpression\" || node.type === \"OptionalCallExpression\") {\n        node.type = node.type.substring(8);\n      }\n\n      if (state.stop) {\n        const chain = this.startNodeAtNode(node);\n        chain.expression = node;\n        return this.finishNode(chain, \"ChainExpression\");\n      }\n    } else if (node.type === \"MemberExpression\" || node.type === \"CallExpression\") {\n      node.optional = false;\n    }\n\n    return node;\n  }\n\n  hasPropertyAsPrivateName(node) {\n    if (node.type === \"ChainExpression\") {\n      node = node.expression;\n    }\n\n    return super.hasPropertyAsPrivateName(node);\n  }\n\n  isOptionalChain(node) {\n    return node.type === \"ChainExpression\";\n  }\n\n  isObjectProperty(node) {\n    return node.type === \"Property\" && node.kind === \"init\" && !node.method;\n  }\n\n  isObjectMethod(node) {\n    return node.method || node.kind === \"get\" || node.kind === \"set\";\n  }\n\n});\n\nclass TokContext {\n  constructor(token, isExpr, preserveSpace, override) {\n    this.token = void 0;\n    this.isExpr = void 0;\n    this.preserveSpace = void 0;\n    this.override = void 0;\n    this.token = token;\n    this.isExpr = !!isExpr;\n    this.preserveSpace = !!preserveSpace;\n    this.override = override;\n  }\n\n}\nconst types$1 = {\n  braceStatement: new TokContext(\"{\", false),\n  braceExpression: new TokContext(\"{\", true),\n  recordExpression: new TokContext(\"#{\", true),\n  templateQuasi: new TokContext(\"${\", false),\n  parenStatement: new TokContext(\"(\", false),\n  parenExpression: new TokContext(\"(\", true),\n  template: new TokContext(\"`\", true, true, p => p.readTmplToken()),\n  functionExpression: new TokContext(\"function\", true),\n  functionStatement: new TokContext(\"function\", false)\n};\n\ntypes.parenR.updateContext = types.braceR.updateContext = function () {\n  if (this.state.context.length === 1) {\n    this.state.exprAllowed = true;\n    return;\n  }\n\n  let out = this.state.context.pop();\n\n  if (out === types$1.braceStatement && this.curContext().token === \"function\") {\n    out = this.state.context.pop();\n  }\n\n  this.state.exprAllowed = !out.isExpr;\n};\n\ntypes.name.updateContext = function (prevType) {\n  let allowed = false;\n\n  if (prevType !== types.dot) {\n    if (this.state.value === \"of\" && !this.state.exprAllowed && prevType !== types._function && prevType !== types._class) {\n      allowed = true;\n    }\n  }\n\n  this.state.exprAllowed = allowed;\n\n  if (this.state.isIterator) {\n    this.state.isIterator = false;\n  }\n};\n\ntypes.braceL.updateContext = function (prevType) {\n  this.state.context.push(this.braceIsBlock(prevType) ? types$1.braceStatement : types$1.braceExpression);\n  this.state.exprAllowed = true;\n};\n\ntypes.dollarBraceL.updateContext = function () {\n  this.state.context.push(types$1.templateQuasi);\n  this.state.exprAllowed = true;\n};\n\ntypes.parenL.updateContext = function (prevType) {\n  const statementParens = prevType === types._if || prevType === types._for || prevType === types._with || prevType === types._while;\n  this.state.context.push(statementParens ? types$1.parenStatement : types$1.parenExpression);\n  this.state.exprAllowed = true;\n};\n\ntypes.incDec.updateContext = function () {};\n\ntypes._function.updateContext = types._class.updateContext = function (prevType) {\n  if (prevType.beforeExpr && prevType !== types.semi && prevType !== types._else && !(prevType === types._return && this.hasPrecedingLineBreak()) && !((prevType === types.colon || prevType === types.braceL) && this.curContext() === types$1.b_stat)) {\n    this.state.context.push(types$1.functionExpression);\n  } else {\n    this.state.context.push(types$1.functionStatement);\n  }\n\n  this.state.exprAllowed = false;\n};\n\ntypes.backQuote.updateContext = function () {\n  if (this.curContext() === types$1.template) {\n    this.state.context.pop();\n  } else {\n    this.state.context.push(types$1.template);\n  }\n\n  this.state.exprAllowed = false;\n};\n\ntypes.braceHashL.updateContext = function () {\n  this.state.context.push(types$1.recordExpression);\n  this.state.exprAllowed = true;\n};\n\nlet nonASCIIidentifierStartChars = \"\\xaa\\xb5\\xba\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02c1\\u02c6-\\u02d1\\u02e0-\\u02e4\\u02ec\\u02ee\\u0370-\\u0374\\u0376\\u0377\\u037a-\\u037d\\u037f\\u0386\\u0388-\\u038a\\u038c\\u038e-\\u03a1\\u03a3-\\u03f5\\u03f7-\\u0481\\u048a-\\u052f\\u0531-\\u0556\\u0559\\u0560-\\u0588\\u05d0-\\u05ea\\u05ef-\\u05f2\\u0620-\\u064a\\u066e\\u066f\\u0671-\\u06d3\\u06d5\\u06e5\\u06e6\\u06ee\\u06ef\\u06fa-\\u06fc\\u06ff\\u0710\\u0712-\\u072f\\u074d-\\u07a5\\u07b1\\u07ca-\\u07ea\\u07f4\\u07f5\\u07fa\\u0800-\\u0815\\u081a\\u0824\\u0828\\u0840-\\u0858\\u0860-\\u086a\\u08a0-\\u08b4\\u08b6-\\u08c7\\u0904-\\u0939\\u093d\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098c\\u098f\\u0990\\u0993-\\u09a8\\u09aa-\\u09b0\\u09b2\\u09b6-\\u09b9\\u09bd\\u09ce\\u09dc\\u09dd\\u09df-\\u09e1\\u09f0\\u09f1\\u09fc\\u0a05-\\u0a0a\\u0a0f\\u0a10\\u0a13-\\u0a28\\u0a2a-\\u0a30\\u0a32\\u0a33\\u0a35\\u0a36\\u0a38\\u0a39\\u0a59-\\u0a5c\\u0a5e\\u0a72-\\u0a74\\u0a85-\\u0a8d\\u0a8f-\\u0a91\\u0a93-\\u0aa8\\u0aaa-\\u0ab0\\u0ab2\\u0ab3\\u0ab5-\\u0ab9\\u0abd\\u0ad0\\u0ae0\\u0ae1\\u0af9\\u0b05-\\u0b0c\\u0b0f\\u0b10\\u0b13-\\u0b28\\u0b2a-\\u0b30\\u0b32\\u0b33\\u0b35-\\u0b39\\u0b3d\\u0b5c\\u0b5d\\u0b5f-\\u0b61\\u0b71\\u0b83\\u0b85-\\u0b8a\\u0b8e-\\u0b90\\u0b92-\\u0b95\\u0b99\\u0b9a\\u0b9c\\u0b9e\\u0b9f\\u0ba3\\u0ba4\\u0ba8-\\u0baa\\u0bae-\\u0bb9\\u0bd0\\u0c05-\\u0c0c\\u0c0e-\\u0c10\\u0c12-\\u0c28\\u0c2a-\\u0c39\\u0c3d\\u0c58-\\u0c5a\\u0c60\\u0c61\\u0c80\\u0c85-\\u0c8c\\u0c8e-\\u0c90\\u0c92-\\u0ca8\\u0caa-\\u0cb3\\u0cb5-\\u0cb9\\u0cbd\\u0cde\\u0ce0\\u0ce1\\u0cf1\\u0cf2\\u0d04-\\u0d0c\\u0d0e-\\u0d10\\u0d12-\\u0d3a\\u0d3d\\u0d4e\\u0d54-\\u0d56\\u0d5f-\\u0d61\\u0d7a-\\u0d7f\\u0d85-\\u0d96\\u0d9a-\\u0db1\\u0db3-\\u0dbb\\u0dbd\\u0dc0-\\u0dc6\\u0e01-\\u0e30\\u0e32\\u0e33\\u0e40-\\u0e46\\u0e81\\u0e82\\u0e84\\u0e86-\\u0e8a\\u0e8c-\\u0ea3\\u0ea5\\u0ea7-\\u0eb0\\u0eb2\\u0eb3\\u0ebd\\u0ec0-\\u0ec4\\u0ec6\\u0edc-\\u0edf\\u0f00\\u0f40-\\u0f47\\u0f49-\\u0f6c\\u0f88-\\u0f8c\\u1000-\\u102a\\u103f\\u1050-\\u1055\\u105a-\\u105d\\u1061\\u1065\\u1066\\u106e-\\u1070\\u1075-\\u1081\\u108e\\u10a0-\\u10c5\\u10c7\\u10cd\\u10d0-\\u10fa\\u10fc-\\u1248\\u124a-\\u124d\\u1250-\\u1256\\u1258\\u125a-\\u125d\\u1260-\\u1288\\u128a-\\u128d\\u1290-\\u12b0\\u12b2-\\u12b5\\u12b8-\\u12be\\u12c0\\u12c2-\\u12c5\\u12c8-\\u12d6\\u12d8-\\u1310\\u1312-\\u1315\\u1318-\\u135a\\u1380-\\u138f\\u13a0-\\u13f5\\u13f8-\\u13fd\\u1401-\\u166c\\u166f-\\u167f\\u1681-\\u169a\\u16a0-\\u16ea\\u16ee-\\u16f8\\u1700-\\u170c\\u170e-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176c\\u176e-\\u1770\\u1780-\\u17b3\\u17d7\\u17dc\\u1820-\\u1878\\u1880-\\u18a8\\u18aa\\u18b0-\\u18f5\\u1900-\\u191e\\u1950-\\u196d\\u1970-\\u1974\\u1980-\\u19ab\\u19b0-\\u19c9\\u1a00-\\u1a16\\u1a20-\\u1a54\\u1aa7\\u1b05-\\u1b33\\u1b45-\\u1b4b\\u1b83-\\u1ba0\\u1bae\\u1baf\\u1bba-\\u1be5\\u1c00-\\u1c23\\u1c4d-\\u1c4f\\u1c5a-\\u1c7d\\u1c80-\\u1c88\\u1c90-\\u1cba\\u1cbd-\\u1cbf\\u1ce9-\\u1cec\\u1cee-\\u1cf3\\u1cf5\\u1cf6\\u1cfa\\u1d00-\\u1dbf\\u1e00-\\u1f15\\u1f18-\\u1f1d\\u1f20-\\u1f45\\u1f48-\\u1f4d\\u1f50-\\u1f57\\u1f59\\u1f5b\\u1f5d\\u1f5f-\\u1f7d\\u1f80-\\u1fb4\\u1fb6-\\u1fbc\\u1fbe\\u1fc2-\\u1fc4\\u1fc6-\\u1fcc\\u1fd0-\\u1fd3\\u1fd6-\\u1fdb\\u1fe0-\\u1fec\\u1ff2-\\u1ff4\\u1ff6-\\u1ffc\\u2071\\u207f\\u2090-\\u209c\\u2102\\u2107\\u210a-\\u2113\\u2115\\u2118-\\u211d\\u2124\\u2126\\u2128\\u212a-\\u2139\\u213c-\\u213f\\u2145-\\u2149\\u214e\\u2160-\\u2188\\u2c00-\\u2c2e\\u2c30-\\u2c5e\\u2c60-\\u2ce4\\u2ceb-\\u2cee\\u2cf2\\u2cf3\\u2d00-\\u2d25\\u2d27\\u2d2d\\u2d30-\\u2d67\\u2d6f\\u2d80-\\u2d96\\u2da0-\\u2da6\\u2da8-\\u2dae\\u2db0-\\u2db6\\u2db8-\\u2dbe\\u2dc0-\\u2dc6\\u2dc8-\\u2dce\\u2dd0-\\u2dd6\\u2dd8-\\u2dde\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303c\\u3041-\\u3096\\u309b-\\u309f\\u30a1-\\u30fa\\u30fc-\\u30ff\\u3105-\\u312f\\u3131-\\u318e\\u31a0-\\u31bf\\u31f0-\\u31ff\\u3400-\\u4dbf\\u4e00-\\u9ffc\\ua000-\\ua48c\\ua4d0-\\ua4fd\\ua500-\\ua60c\\ua610-\\ua61f\\ua62a\\ua62b\\ua640-\\ua66e\\ua67f-\\ua69d\\ua6a0-\\ua6ef\\ua717-\\ua71f\\ua722-\\ua788\\ua78b-\\ua7bf\\ua7c2-\\ua7ca\\ua7f5-\\ua801\\ua803-\\ua805\\ua807-\\ua80a\\ua80c-\\ua822\\ua840-\\ua873\\ua882-\\ua8b3\\ua8f2-\\ua8f7\\ua8fb\\ua8fd\\ua8fe\\ua90a-\\ua925\\ua930-\\ua946\\ua960-\\ua97c\\ua984-\\ua9b2\\ua9cf\\ua9e0-\\ua9e4\\ua9e6-\\ua9ef\\ua9fa-\\ua9fe\\uaa00-\\uaa28\\uaa40-\\uaa42\\uaa44-\\uaa4b\\uaa60-\\uaa76\\uaa7a\\uaa7e-\\uaaaf\\uaab1\\uaab5\\uaab6\\uaab9-\\uaabd\\uaac0\\uaac2\\uaadb-\\uaadd\\uaae0-\\uaaea\\uaaf2-\\uaaf4\\uab01-\\uab06\\uab09-\\uab0e\\uab11-\\uab16\\uab20-\\uab26\\uab28-\\uab2e\\uab30-\\uab5a\\uab5c-\\uab69\\uab70-\\uabe2\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\uf900-\\ufa6d\\ufa70-\\ufad9\\ufb00-\\ufb06\\ufb13-\\ufb17\\ufb1d\\ufb1f-\\ufb28\\ufb2a-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40\\ufb41\\ufb43\\ufb44\\ufb46-\\ufbb1\\ufbd3-\\ufd3d\\ufd50-\\ufd8f\\ufd92-\\ufdc7\\ufdf0-\\ufdfb\\ufe70-\\ufe74\\ufe76-\\ufefc\\uff21-\\uff3a\\uff41-\\uff5a\\uff66-\\uffbe\\uffc2-\\uffc7\\uffca-\\uffcf\\uffd2-\\uffd7\\uffda-\\uffdc\";\nlet nonASCIIidentifierChars = \"\\u200c\\u200d\\xb7\\u0300-\\u036f\\u0387\\u0483-\\u0487\\u0591-\\u05bd\\u05bf\\u05c1\\u05c2\\u05c4\\u05c5\\u05c7\\u0610-\\u061a\\u064b-\\u0669\\u0670\\u06d6-\\u06dc\\u06df-\\u06e4\\u06e7\\u06e8\\u06ea-\\u06ed\\u06f0-\\u06f9\\u0711\\u0730-\\u074a\\u07a6-\\u07b0\\u07c0-\\u07c9\\u07eb-\\u07f3\\u07fd\\u0816-\\u0819\\u081b-\\u0823\\u0825-\\u0827\\u0829-\\u082d\\u0859-\\u085b\\u08d3-\\u08e1\\u08e3-\\u0903\\u093a-\\u093c\\u093e-\\u094f\\u0951-\\u0957\\u0962\\u0963\\u0966-\\u096f\\u0981-\\u0983\\u09bc\\u09be-\\u09c4\\u09c7\\u09c8\\u09cb-\\u09cd\\u09d7\\u09e2\\u09e3\\u09e6-\\u09ef\\u09fe\\u0a01-\\u0a03\\u0a3c\\u0a3e-\\u0a42\\u0a47\\u0a48\\u0a4b-\\u0a4d\\u0a51\\u0a66-\\u0a71\\u0a75\\u0a81-\\u0a83\\u0abc\\u0abe-\\u0ac5\\u0ac7-\\u0ac9\\u0acb-\\u0acd\\u0ae2\\u0ae3\\u0ae6-\\u0aef\\u0afa-\\u0aff\\u0b01-\\u0b03\\u0b3c\\u0b3e-\\u0b44\\u0b47\\u0b48\\u0b4b-\\u0b4d\\u0b55-\\u0b57\\u0b62\\u0b63\\u0b66-\\u0b6f\\u0b82\\u0bbe-\\u0bc2\\u0bc6-\\u0bc8\\u0bca-\\u0bcd\\u0bd7\\u0be6-\\u0bef\\u0c00-\\u0c04\\u0c3e-\\u0c44\\u0c46-\\u0c48\\u0c4a-\\u0c4d\\u0c55\\u0c56\\u0c62\\u0c63\\u0c66-\\u0c6f\\u0c81-\\u0c83\\u0cbc\\u0cbe-\\u0cc4\\u0cc6-\\u0cc8\\u0cca-\\u0ccd\\u0cd5\\u0cd6\\u0ce2\\u0ce3\\u0ce6-\\u0cef\\u0d00-\\u0d03\\u0d3b\\u0d3c\\u0d3e-\\u0d44\\u0d46-\\u0d48\\u0d4a-\\u0d4d\\u0d57\\u0d62\\u0d63\\u0d66-\\u0d6f\\u0d81-\\u0d83\\u0dca\\u0dcf-\\u0dd4\\u0dd6\\u0dd8-\\u0ddf\\u0de6-\\u0def\\u0df2\\u0df3\\u0e31\\u0e34-\\u0e3a\\u0e47-\\u0e4e\\u0e50-\\u0e59\\u0eb1\\u0eb4-\\u0ebc\\u0ec8-\\u0ecd\\u0ed0-\\u0ed9\\u0f18\\u0f19\\u0f20-\\u0f29\\u0f35\\u0f37\\u0f39\\u0f3e\\u0f3f\\u0f71-\\u0f84\\u0f86\\u0f87\\u0f8d-\\u0f97\\u0f99-\\u0fbc\\u0fc6\\u102b-\\u103e\\u1040-\\u1049\\u1056-\\u1059\\u105e-\\u1060\\u1062-\\u1064\\u1067-\\u106d\\u1071-\\u1074\\u1082-\\u108d\\u108f-\\u109d\\u135d-\\u135f\\u1369-\\u1371\\u1712-\\u1714\\u1732-\\u1734\\u1752\\u1753\\u1772\\u1773\\u17b4-\\u17d3\\u17dd\\u17e0-\\u17e9\\u180b-\\u180d\\u1810-\\u1819\\u18a9\\u1920-\\u192b\\u1930-\\u193b\\u1946-\\u194f\\u19d0-\\u19da\\u1a17-\\u1a1b\\u1a55-\\u1a5e\\u1a60-\\u1a7c\\u1a7f-\\u1a89\\u1a90-\\u1a99\\u1ab0-\\u1abd\\u1abf\\u1ac0\\u1b00-\\u1b04\\u1b34-\\u1b44\\u1b50-\\u1b59\\u1b6b-\\u1b73\\u1b80-\\u1b82\\u1ba1-\\u1bad\\u1bb0-\\u1bb9\\u1be6-\\u1bf3\\u1c24-\\u1c37\\u1c40-\\u1c49\\u1c50-\\u1c59\\u1cd0-\\u1cd2\\u1cd4-\\u1ce8\\u1ced\\u1cf4\\u1cf7-\\u1cf9\\u1dc0-\\u1df9\\u1dfb-\\u1dff\\u203f\\u2040\\u2054\\u20d0-\\u20dc\\u20e1\\u20e5-\\u20f0\\u2cef-\\u2cf1\\u2d7f\\u2de0-\\u2dff\\u302a-\\u302f\\u3099\\u309a\\ua620-\\ua629\\ua66f\\ua674-\\ua67d\\ua69e\\ua69f\\ua6f0\\ua6f1\\ua802\\ua806\\ua80b\\ua823-\\ua827\\ua82c\\ua880\\ua881\\ua8b4-\\ua8c5\\ua8d0-\\ua8d9\\ua8e0-\\ua8f1\\ua8ff-\\ua909\\ua926-\\ua92d\\ua947-\\ua953\\ua980-\\ua983\\ua9b3-\\ua9c0\\ua9d0-\\ua9d9\\ua9e5\\ua9f0-\\ua9f9\\uaa29-\\uaa36\\uaa43\\uaa4c\\uaa4d\\uaa50-\\uaa59\\uaa7b-\\uaa7d\\uaab0\\uaab2-\\uaab4\\uaab7\\uaab8\\uaabe\\uaabf\\uaac1\\uaaeb-\\uaaef\\uaaf5\\uaaf6\\uabe3-\\uabea\\uabec\\uabed\\uabf0-\\uabf9\\ufb1e\\ufe00-\\ufe0f\\ufe20-\\ufe2f\\ufe33\\ufe34\\ufe4d-\\ufe4f\\uff10-\\uff19\\uff3f\";\nconst nonASCIIidentifierStart = new RegExp(\"[\" + nonASCIIidentifierStartChars + \"]\");\nconst nonASCIIidentifier = new RegExp(\"[\" + nonASCIIidentifierStartChars + nonASCIIidentifierChars + \"]\");\nnonASCIIidentifierStartChars = nonASCIIidentifierChars = null;\nconst astralIdentifierStartCodes = [0, 11, 2, 25, 2, 18, 2, 1, 2, 14, 3, 13, 35, 122, 70, 52, 268, 28, 4, 48, 48, 31, 14, 29, 6, 37, 11, 29, 3, 35, 5, 7, 2, 4, 43, 157, 19, 35, 5, 35, 5, 39, 9, 51, 157, 310, 10, 21, 11, 7, 153, 5, 3, 0, 2, 43, 2, 1, 4, 0, 3, 22, 11, 22, 10, 30, 66, 18, 2, 1, 11, 21, 11, 25, 71, 55, 7, 1, 65, 0, 16, 3, 2, 2, 2, 28, 43, 28, 4, 28, 36, 7, 2, 27, 28, 53, 11, 21, 11, 18, 14, 17, 111, 72, 56, 50, 14, 50, 14, 35, 349, 41, 7, 1, 79, 28, 11, 0, 9, 21, 107, 20, 28, 22, 13, 52, 76, 44, 33, 24, 27, 35, 30, 0, 3, 0, 9, 34, 4, 0, 13, 47, 15, 3, 22, 0, 2, 0, 36, 17, 2, 24, 85, 6, 2, 0, 2, 3, 2, 14, 2, 9, 8, 46, 39, 7, 3, 1, 3, 21, 2, 6, 2, 1, 2, 4, 4, 0, 19, 0, 13, 4, 159, 52, 19, 3, 21, 2, 31, 47, 21, 1, 2, 0, 185, 46, 42, 3, 37, 47, 21, 0, 60, 42, 14, 0, 72, 26, 230, 43, 117, 63, 32, 7, 3, 0, 3, 7, 2, 1, 2, 23, 16, 0, 2, 0, 95, 7, 3, 38, 17, 0, 2, 0, 29, 0, 11, 39, 8, 0, 22, 0, 12, 45, 20, 0, 35, 56, 264, 8, 2, 36, 18, 0, 50, 29, 113, 6, 2, 1, 2, 37, 22, 0, 26, 5, 2, 1, 2, 31, 15, 0, 328, 18, 190, 0, 80, 921, 103, 110, 18, 195, 2749, 1070, 4050, 582, 8634, 568, 8, 30, 114, 29, 19, 47, 17, 3, 32, 20, 6, 18, 689, 63, 129, 74, 6, 0, 67, 12, 65, 1, 2, 0, 29, 6135, 9, 1237, 43, 8, 8952, 286, 50, 2, 18, 3, 9, 395, 2309, 106, 6, 12, 4, 8, 8, 9, 5991, 84, 2, 70, 2, 1, 3, 0, 3, 1, 3, 3, 2, 11, 2, 0, 2, 6, 2, 64, 2, 3, 3, 7, 2, 6, 2, 27, 2, 3, 2, 4, 2, 0, 4, 6, 2, 339, 3, 24, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 7, 2357, 44, 11, 6, 17, 0, 370, 43, 1301, 196, 60, 67, 8, 0, 1205, 3, 2, 26, 2, 1, 2, 0, 3, 0, 2, 9, 2, 3, 2, 0, 2, 0, 7, 0, 5, 0, 2, 0, 2, 0, 2, 2, 2, 1, 2, 0, 3, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 1, 2, 0, 3, 3, 2, 6, 2, 3, 2, 3, 2, 0, 2, 9, 2, 16, 6, 2, 2, 4, 2, 16, 4421, 42717, 35, 4148, 12, 221, 3, 5761, 15, 7472, 3104, 541, 1507, 4938];\nconst astralIdentifierCodes = [509, 0, 227, 0, 150, 4, 294, 9, 1368, 2, 2, 1, 6, 3, 41, 2, 5, 0, 166, 1, 574, 3, 9, 9, 370, 1, 154, 10, 176, 2, 54, 14, 32, 9, 16, 3, 46, 10, 54, 9, 7, 2, 37, 13, 2, 9, 6, 1, 45, 0, 13, 2, 49, 13, 9, 3, 2, 11, 83, 11, 7, 0, 161, 11, 6, 9, 7, 3, 56, 1, 2, 6, 3, 1, 3, 2, 10, 0, 11, 1, 3, 6, 4, 4, 193, 17, 10, 9, 5, 0, 82, 19, 13, 9, 214, 6, 3, 8, 28, 1, 83, 16, 16, 9, 82, 12, 9, 9, 84, 14, 5, 9, 243, 14, 166, 9, 71, 5, 2, 1, 3, 3, 2, 0, 2, 1, 13, 9, 120, 6, 3, 6, 4, 0, 29, 9, 41, 6, 2, 3, 9, 0, 10, 10, 47, 15, 406, 7, 2, 7, 17, 9, 57, 21, 2, 13, 123, 5, 4, 0, 2, 1, 2, 6, 2, 0, 9, 9, 49, 4, 2, 1, 2, 4, 9, 9, 330, 3, 19306, 9, 135, 4, 60, 6, 26, 9, 1014, 0, 2, 54, 8, 3, 82, 0, 12, 1, 19628, 1, 5319, 4, 4, 5, 9, 7, 3, 6, 31, 3, 149, 2, 1418, 49, 513, 54, 5, 49, 9, 0, 15, 0, 23, 4, 2, 14, 1361, 6, 2, 16, 3, 6, 2, 1, 2, 4, 262, 6, 10, 9, 419, 13, 1495, 6, 110, 6, 6, 9, 4759, 9, 787719, 239];\n\nfunction isInAstralSet(code, set) {\n  let pos = 0x10000;\n\n  for (let i = 0, length = set.length; i < length; i += 2) {\n    pos += set[i];\n    if (pos > code) return false;\n    pos += set[i + 1];\n    if (pos >= code) return true;\n  }\n\n  return false;\n}\n\nfunction isIdentifierStart(code) {\n  if (code < 65) return code === 36;\n  if (code <= 90) return true;\n  if (code < 97) return code === 95;\n  if (code <= 122) return true;\n\n  if (code <= 0xffff) {\n    return code >= 0xaa && nonASCIIidentifierStart.test(String.fromCharCode(code));\n  }\n\n  return isInAstralSet(code, astralIdentifierStartCodes);\n}\nfunction isIdentifierChar(code) {\n  if (code < 48) return code === 36;\n  if (code < 58) return true;\n  if (code < 65) return false;\n  if (code <= 90) return true;\n  if (code < 97) return code === 95;\n  if (code <= 122) return true;\n\n  if (code <= 0xffff) {\n    return code >= 0xaa && nonASCIIidentifier.test(String.fromCharCode(code));\n  }\n\n  return isInAstralSet(code, astralIdentifierStartCodes) || isInAstralSet(code, astralIdentifierCodes);\n}\n\nconst reservedWords = {\n  keyword: [\"break\", \"case\", \"catch\", \"continue\", \"debugger\", \"default\", \"do\", \"else\", \"finally\", \"for\", \"function\", \"if\", \"return\", \"switch\", \"throw\", \"try\", \"var\", \"const\", \"while\", \"with\", \"new\", \"this\", \"super\", \"class\", \"extends\", \"export\", \"import\", \"null\", \"true\", \"false\", \"in\", \"instanceof\", \"typeof\", \"void\", \"delete\"],\n  strict: [\"implements\", \"interface\", \"let\", \"package\", \"private\", \"protected\", \"public\", \"static\", \"yield\"],\n  strictBind: [\"eval\", \"arguments\"]\n};\nconst keywords$1 = new Set(reservedWords.keyword);\nconst reservedWordsStrictSet = new Set(reservedWords.strict);\nconst reservedWordsStrictBindSet = new Set(reservedWords.strictBind);\nfunction isReservedWord(word, inModule) {\n  return inModule && word === \"await\" || word === \"enum\";\n}\nfunction isStrictReservedWord(word, inModule) {\n  return isReservedWord(word, inModule) || reservedWordsStrictSet.has(word);\n}\nfunction isStrictBindOnlyReservedWord(word) {\n  return reservedWordsStrictBindSet.has(word);\n}\nfunction isStrictBindReservedWord(word, inModule) {\n  return isStrictReservedWord(word, inModule) || isStrictBindOnlyReservedWord(word);\n}\nfunction isKeyword(word) {\n  return keywords$1.has(word);\n}\n\nconst keywordRelationalOperator = /^in(stanceof)?$/;\nfunction isIteratorStart(current, next) {\n  return current === 64 && next === 64;\n}\n\nconst SCOPE_OTHER = 0b000000000,\n      SCOPE_PROGRAM = 0b000000001,\n      SCOPE_FUNCTION = 0b000000010,\n      SCOPE_ARROW = 0b000000100,\n      SCOPE_SIMPLE_CATCH = 0b000001000,\n      SCOPE_SUPER = 0b000010000,\n      SCOPE_DIRECT_SUPER = 0b000100000,\n      SCOPE_CLASS = 0b001000000,\n      SCOPE_STATIC_BLOCK = 0b010000000,\n      SCOPE_TS_MODULE = 0b100000000,\n      SCOPE_VAR = SCOPE_PROGRAM | SCOPE_FUNCTION | SCOPE_TS_MODULE;\nconst BIND_KIND_VALUE = 0b000000000001,\n      BIND_KIND_TYPE = 0b000000000010,\n      BIND_SCOPE_VAR = 0b000000000100,\n      BIND_SCOPE_LEXICAL = 0b000000001000,\n      BIND_SCOPE_FUNCTION = 0b000000010000,\n      BIND_FLAGS_NONE = 0b000001000000,\n      BIND_FLAGS_CLASS = 0b000010000000,\n      BIND_FLAGS_TS_ENUM = 0b000100000000,\n      BIND_FLAGS_TS_CONST_ENUM = 0b001000000000,\n      BIND_FLAGS_TS_EXPORT_ONLY = 0b010000000000,\n      BIND_FLAGS_FLOW_DECLARE_FN = 0b100000000000;\nconst BIND_CLASS = BIND_KIND_VALUE | BIND_KIND_TYPE | BIND_SCOPE_LEXICAL | BIND_FLAGS_CLASS,\n      BIND_LEXICAL = BIND_KIND_VALUE | 0 | BIND_SCOPE_LEXICAL | 0,\n      BIND_VAR = BIND_KIND_VALUE | 0 | BIND_SCOPE_VAR | 0,\n      BIND_FUNCTION = BIND_KIND_VALUE | 0 | BIND_SCOPE_FUNCTION | 0,\n      BIND_TS_INTERFACE = 0 | BIND_KIND_TYPE | 0 | BIND_FLAGS_CLASS,\n      BIND_TS_TYPE = 0 | BIND_KIND_TYPE | 0 | 0,\n      BIND_TS_ENUM = BIND_KIND_VALUE | BIND_KIND_TYPE | BIND_SCOPE_LEXICAL | BIND_FLAGS_TS_ENUM,\n      BIND_TS_AMBIENT = 0 | 0 | 0 | BIND_FLAGS_TS_EXPORT_ONLY,\n      BIND_NONE = 0 | 0 | 0 | BIND_FLAGS_NONE,\n      BIND_OUTSIDE = BIND_KIND_VALUE | 0 | 0 | BIND_FLAGS_NONE,\n      BIND_TS_CONST_ENUM = BIND_TS_ENUM | BIND_FLAGS_TS_CONST_ENUM,\n      BIND_TS_NAMESPACE = 0 | 0 | 0 | BIND_FLAGS_TS_EXPORT_ONLY,\n      BIND_FLOW_DECLARE_FN = BIND_FLAGS_FLOW_DECLARE_FN;\nconst CLASS_ELEMENT_FLAG_STATIC = 0b100,\n      CLASS_ELEMENT_KIND_GETTER = 0b010,\n      CLASS_ELEMENT_KIND_SETTER = 0b001,\n      CLASS_ELEMENT_KIND_ACCESSOR = CLASS_ELEMENT_KIND_GETTER | CLASS_ELEMENT_KIND_SETTER;\nconst CLASS_ELEMENT_STATIC_GETTER = CLASS_ELEMENT_KIND_GETTER | CLASS_ELEMENT_FLAG_STATIC,\n      CLASS_ELEMENT_STATIC_SETTER = CLASS_ELEMENT_KIND_SETTER | CLASS_ELEMENT_FLAG_STATIC,\n      CLASS_ELEMENT_INSTANCE_GETTER = CLASS_ELEMENT_KIND_GETTER,\n      CLASS_ELEMENT_INSTANCE_SETTER = CLASS_ELEMENT_KIND_SETTER,\n      CLASS_ELEMENT_OTHER = 0;\n\nclass Scope {\n  constructor(flags) {\n    this.flags = void 0;\n    this.var = [];\n    this.lexical = [];\n    this.functions = [];\n    this.flags = flags;\n  }\n\n}\nclass ScopeHandler {\n  constructor(raise, inModule) {\n    this.scopeStack = [];\n    this.undefinedExports = new Map();\n    this.undefinedPrivateNames = new Map();\n    this.raise = raise;\n    this.inModule = inModule;\n  }\n\n  get inFunction() {\n    return (this.currentVarScope().flags & SCOPE_FUNCTION) > 0;\n  }\n\n  get allowSuper() {\n    return (this.currentThisScope().flags & SCOPE_SUPER) > 0;\n  }\n\n  get allowDirectSuper() {\n    return (this.currentThisScope().flags & SCOPE_DIRECT_SUPER) > 0;\n  }\n\n  get inClass() {\n    return (this.currentThisScope().flags & SCOPE_CLASS) > 0;\n  }\n\n  get inStaticBlock() {\n    return (this.currentThisScope().flags & SCOPE_STATIC_BLOCK) > 0;\n  }\n\n  get inNonArrowFunction() {\n    return (this.currentThisScope().flags & SCOPE_FUNCTION) > 0;\n  }\n\n  get treatFunctionsAsVar() {\n    return this.treatFunctionsAsVarInScope(this.currentScope());\n  }\n\n  createScope(flags) {\n    return new Scope(flags);\n  }\n\n  enter(flags) {\n    this.scopeStack.push(this.createScope(flags));\n  }\n\n  exit() {\n    this.scopeStack.pop();\n  }\n\n  treatFunctionsAsVarInScope(scope) {\n    return !!(scope.flags & SCOPE_FUNCTION || !this.inModule && scope.flags & SCOPE_PROGRAM);\n  }\n\n  declareName(name, bindingType, pos) {\n    let scope = this.currentScope();\n\n    if (bindingType & BIND_SCOPE_LEXICAL || bindingType & BIND_SCOPE_FUNCTION) {\n      this.checkRedeclarationInScope(scope, name, bindingType, pos);\n\n      if (bindingType & BIND_SCOPE_FUNCTION) {\n        scope.functions.push(name);\n      } else {\n        scope.lexical.push(name);\n      }\n\n      if (bindingType & BIND_SCOPE_LEXICAL) {\n        this.maybeExportDefined(scope, name);\n      }\n    } else if (bindingType & BIND_SCOPE_VAR) {\n      for (let i = this.scopeStack.length - 1; i >= 0; --i) {\n        scope = this.scopeStack[i];\n        this.checkRedeclarationInScope(scope, name, bindingType, pos);\n        scope.var.push(name);\n        this.maybeExportDefined(scope, name);\n        if (scope.flags & SCOPE_VAR) break;\n      }\n    }\n\n    if (this.inModule && scope.flags & SCOPE_PROGRAM) {\n      this.undefinedExports.delete(name);\n    }\n  }\n\n  maybeExportDefined(scope, name) {\n    if (this.inModule && scope.flags & SCOPE_PROGRAM) {\n      this.undefinedExports.delete(name);\n    }\n  }\n\n  checkRedeclarationInScope(scope, name, bindingType, pos) {\n    if (this.isRedeclaredInScope(scope, name, bindingType)) {\n      this.raise(pos, ErrorMessages.VarRedeclaration, name);\n    }\n  }\n\n  isRedeclaredInScope(scope, name, bindingType) {\n    if (!(bindingType & BIND_KIND_VALUE)) return false;\n\n    if (bindingType & BIND_SCOPE_LEXICAL) {\n      return scope.lexical.indexOf(name) > -1 || scope.functions.indexOf(name) > -1 || scope.var.indexOf(name) > -1;\n    }\n\n    if (bindingType & BIND_SCOPE_FUNCTION) {\n      return scope.lexical.indexOf(name) > -1 || !this.treatFunctionsAsVarInScope(scope) && scope.var.indexOf(name) > -1;\n    }\n\n    return scope.lexical.indexOf(name) > -1 && !(scope.flags & SCOPE_SIMPLE_CATCH && scope.lexical[0] === name) || !this.treatFunctionsAsVarInScope(scope) && scope.functions.indexOf(name) > -1;\n  }\n\n  checkLocalExport(id) {\n    if (this.scopeStack[0].lexical.indexOf(id.name) === -1 && this.scopeStack[0].var.indexOf(id.name) === -1 && this.scopeStack[0].functions.indexOf(id.name) === -1) {\n      this.undefinedExports.set(id.name, id.start);\n    }\n  }\n\n  currentScope() {\n    return this.scopeStack[this.scopeStack.length - 1];\n  }\n\n  currentVarScope() {\n    for (let i = this.scopeStack.length - 1;; i--) {\n      const scope = this.scopeStack[i];\n\n      if (scope.flags & SCOPE_VAR) {\n        return scope;\n      }\n    }\n  }\n\n  currentThisScope() {\n    for (let i = this.scopeStack.length - 1;; i--) {\n      const scope = this.scopeStack[i];\n\n      if ((scope.flags & SCOPE_VAR || scope.flags & SCOPE_CLASS) && !(scope.flags & SCOPE_ARROW)) {\n        return scope;\n      }\n    }\n  }\n\n}\n\nclass FlowScope extends Scope {\n  constructor(...args) {\n    super(...args);\n    this.declareFunctions = [];\n  }\n\n}\n\nclass FlowScopeHandler extends ScopeHandler {\n  createScope(flags) {\n    return new FlowScope(flags);\n  }\n\n  declareName(name, bindingType, pos) {\n    const scope = this.currentScope();\n\n    if (bindingType & BIND_FLAGS_FLOW_DECLARE_FN) {\n      this.checkRedeclarationInScope(scope, name, bindingType, pos);\n      this.maybeExportDefined(scope, name);\n      scope.declareFunctions.push(name);\n      return;\n    }\n\n    super.declareName(...arguments);\n  }\n\n  isRedeclaredInScope(scope, name, bindingType) {\n    if (super.isRedeclaredInScope(...arguments)) return true;\n\n    if (bindingType & BIND_FLAGS_FLOW_DECLARE_FN) {\n      return !scope.declareFunctions.includes(name) && (scope.lexical.includes(name) || scope.functions.includes(name));\n    }\n\n    return false;\n  }\n\n  checkLocalExport(id) {\n    if (this.scopeStack[0].declareFunctions.indexOf(id.name) === -1) {\n      super.checkLocalExport(id);\n    }\n  }\n\n}\n\nconst reservedTypes = new Set([\"_\", \"any\", \"bool\", \"boolean\", \"empty\", \"extends\", \"false\", \"interface\", \"mixed\", \"null\", \"number\", \"static\", \"string\", \"true\", \"typeof\", \"void\"]);\nconst FlowErrors = Object.freeze({\n  AmbiguousConditionalArrow: \"Ambiguous expression: wrap the arrow functions in parentheses to disambiguate.\",\n  AmbiguousDeclareModuleKind: \"Found both `declare module.exports` and `declare export` in the same module. Modules can only have 1 since they are either an ES module or they are a CommonJS module\",\n  AssignReservedType: \"Cannot overwrite reserved type %0\",\n  DeclareClassElement: \"The `declare` modifier can only appear on class fields.\",\n  DeclareClassFieldInitializer: \"Initializers are not allowed in fields with the `declare` modifier.\",\n  DuplicateDeclareModuleExports: \"Duplicate `declare module.exports` statement\",\n  EnumBooleanMemberNotInitialized: \"Boolean enum members need to be initialized. Use either `%0 = true,` or `%0 = false,` in enum `%1`.\",\n  EnumDuplicateMemberName: \"Enum member names need to be unique, but the name `%0` has already been used before in enum `%1`.\",\n  EnumInconsistentMemberValues: \"Enum `%0` has inconsistent member initializers. Either use no initializers, or consistently use literals (either booleans, numbers, or strings) for all member initializers.\",\n  EnumInvalidExplicitType: \"Enum type `%1` is not valid. Use one of `boolean`, `number`, `string`, or `symbol` in enum `%0`.\",\n  EnumInvalidExplicitTypeUnknownSupplied: \"Supplied enum type is not valid. Use one of `boolean`, `number`, `string`, or `symbol` in enum `%0`.\",\n  EnumInvalidMemberInitializerPrimaryType: \"Enum `%0` has type `%2`, so the initializer of `%1` needs to be a %2 literal.\",\n  EnumInvalidMemberInitializerSymbolType: \"Symbol enum members cannot be initialized. Use `%1,` in enum `%0`.\",\n  EnumInvalidMemberInitializerUnknownType: \"The enum member initializer for `%1` needs to be a literal (either a boolean, number, or string) in enum `%0`.\",\n  EnumInvalidMemberName: \"Enum member names cannot start with lowercase 'a' through 'z'. Instead of using `%0`, consider using `%1`, in enum `%2`.\",\n  EnumNumberMemberNotInitialized: \"Number enum members need to be initialized, e.g. `%1 = 1` in enum `%0`.\",\n  EnumStringMemberInconsistentlyInitailized: \"String enum members need to consistently either all use initializers, or use no initializers, in enum `%0`.\",\n  ImportTypeShorthandOnlyInPureImport: \"The `type` and `typeof` keywords on named imports can only be used on regular `import` statements. It cannot be used with `import type` or `import typeof` statements\",\n  InexactInsideExact: \"Explicit inexact syntax cannot appear inside an explicit exact object type\",\n  InexactInsideNonObject: \"Explicit inexact syntax cannot appear in class or interface definitions\",\n  InexactVariance: \"Explicit inexact syntax cannot have variance\",\n  InvalidNonTypeImportInDeclareModule: \"Imports within a `declare module` body must always be `import type` or `import typeof`\",\n  MissingTypeParamDefault: \"Type parameter declaration needs a default, since a preceding type parameter declaration has a default.\",\n  NestedDeclareModule: \"`declare module` cannot be used inside another `declare module`\",\n  NestedFlowComment: \"Cannot have a flow comment inside another flow comment\",\n  OptionalBindingPattern: \"A binding pattern parameter cannot be optional in an implementation signature.\",\n  SpreadVariance: \"Spread properties cannot have variance\",\n  TypeBeforeInitializer: \"Type annotations must come before default assignments, e.g. instead of `age = 25: number` use `age: number = 25`\",\n  TypeCastInPattern: \"The type cast expression is expected to be wrapped with parenthesis\",\n  UnexpectedExplicitInexactInObject: \"Explicit inexact syntax must appear at the end of an inexact object\",\n  UnexpectedReservedType: \"Unexpected reserved type %0\",\n  UnexpectedReservedUnderscore: \"`_` is only allowed as a type argument to call or new\",\n  UnexpectedSpaceBetweenModuloChecks: \"Spaces between `%` and `checks` are not allowed here.\",\n  UnexpectedSpreadType: \"Spread operator cannot appear in class or interface definitions\",\n  UnexpectedSubtractionOperand: 'Unexpected token, expected \"number\" or \"bigint\"',\n  UnexpectedTokenAfterTypeParameter: \"Expected an arrow function after this type parameter declaration\",\n  UnexpectedTypeParameterBeforeAsyncArrowFunction: \"Type parameters must come after the async keyword, e.g. instead of `<T> async () => {}`, use `async <T>() => {}`\",\n  UnsupportedDeclareExportKind: \"`declare export %0` is not supported. Use `%1` instead\",\n  UnsupportedStatementInDeclareModule: \"Only declares and type imports are allowed inside declare module\",\n  UnterminatedFlowComment: \"Unterminated flow-comment\"\n});\n\nfunction isEsModuleType(bodyElement) {\n  return bodyElement.type === \"DeclareExportAllDeclaration\" || bodyElement.type === \"DeclareExportDeclaration\" && (!bodyElement.declaration || bodyElement.declaration.type !== \"TypeAlias\" && bodyElement.declaration.type !== \"InterfaceDeclaration\");\n}\n\nfunction hasTypeImportKind(node) {\n  return node.importKind === \"type\" || node.importKind === \"typeof\";\n}\n\nfunction isMaybeDefaultImport(state) {\n  return (state.type === types.name || !!state.type.keyword) && state.value !== \"from\";\n}\n\nconst exportSuggestions = {\n  const: \"declare export var\",\n  let: \"declare export var\",\n  type: \"export type\",\n  interface: \"export interface\"\n};\n\nfunction partition(list, test) {\n  const list1 = [];\n  const list2 = [];\n\n  for (let i = 0; i < list.length; i++) {\n    (test(list[i], i, list) ? list1 : list2).push(list[i]);\n  }\n\n  return [list1, list2];\n}\n\nconst FLOW_PRAGMA_REGEX = /\\*?\\s*@((?:no)?flow)\\b/;\nvar flow = (superClass => {\n  var _temp;\n\n  return _temp = class extends superClass {\n    constructor(...args) {\n      super(...args);\n      this.flowPragma = undefined;\n    }\n\n    getScopeHandler() {\n      return FlowScopeHandler;\n    }\n\n    shouldParseTypes() {\n      return this.getPluginOption(\"flow\", \"all\") || this.flowPragma === \"flow\";\n    }\n\n    shouldParseEnums() {\n      return !!this.getPluginOption(\"flow\", \"enums\");\n    }\n\n    finishToken(type, val) {\n      if (type !== types.string && type !== types.semi && type !== types.interpreterDirective) {\n        if (this.flowPragma === undefined) {\n          this.flowPragma = null;\n        }\n      }\n\n      return super.finishToken(type, val);\n    }\n\n    addComment(comment) {\n      if (this.flowPragma === undefined) {\n        const matches = FLOW_PRAGMA_REGEX.exec(comment.value);\n\n        if (!matches) ; else if (matches[1] === \"flow\") {\n          this.flowPragma = \"flow\";\n        } else if (matches[1] === \"noflow\") {\n          this.flowPragma = \"noflow\";\n        } else {\n          throw new Error(\"Unexpected flow pragma\");\n        }\n      }\n\n      return super.addComment(comment);\n    }\n\n    flowParseTypeInitialiser(tok) {\n      const oldInType = this.state.inType;\n      this.state.inType = true;\n      this.expect(tok || types.colon);\n      const type = this.flowParseType();\n      this.state.inType = oldInType;\n      return type;\n    }\n\n    flowParsePredicate() {\n      const node = this.startNode();\n      const moduloLoc = this.state.startLoc;\n      const moduloPos = this.state.start;\n      this.expect(types.modulo);\n      const checksLoc = this.state.startLoc;\n      this.expectContextual(\"checks\");\n\n      if (moduloLoc.line !== checksLoc.line || moduloLoc.column !== checksLoc.column - 1) {\n        this.raise(moduloPos, FlowErrors.UnexpectedSpaceBetweenModuloChecks);\n      }\n\n      if (this.eat(types.parenL)) {\n        node.value = this.parseExpression();\n        this.expect(types.parenR);\n        return this.finishNode(node, \"DeclaredPredicate\");\n      } else {\n        return this.finishNode(node, \"InferredPredicate\");\n      }\n    }\n\n    flowParseTypeAndPredicateInitialiser() {\n      const oldInType = this.state.inType;\n      this.state.inType = true;\n      this.expect(types.colon);\n      let type = null;\n      let predicate = null;\n\n      if (this.match(types.modulo)) {\n        this.state.inType = oldInType;\n        predicate = this.flowParsePredicate();\n      } else {\n        type = this.flowParseType();\n        this.state.inType = oldInType;\n\n        if (this.match(types.modulo)) {\n          predicate = this.flowParsePredicate();\n        }\n      }\n\n      return [type, predicate];\n    }\n\n    flowParseDeclareClass(node) {\n      this.next();\n      this.flowParseInterfaceish(node, true);\n      return this.finishNode(node, \"DeclareClass\");\n    }\n\n    flowParseDeclareFunction(node) {\n      this.next();\n      const id = node.id = this.parseIdentifier();\n      const typeNode = this.startNode();\n      const typeContainer = this.startNode();\n\n      if (this.isRelational(\"<\")) {\n        typeNode.typeParameters = this.flowParseTypeParameterDeclaration();\n      } else {\n        typeNode.typeParameters = null;\n      }\n\n      this.expect(types.parenL);\n      const tmp = this.flowParseFunctionTypeParams();\n      typeNode.params = tmp.params;\n      typeNode.rest = tmp.rest;\n      this.expect(types.parenR);\n      [typeNode.returnType, node.predicate] = this.flowParseTypeAndPredicateInitialiser();\n      typeContainer.typeAnnotation = this.finishNode(typeNode, \"FunctionTypeAnnotation\");\n      id.typeAnnotation = this.finishNode(typeContainer, \"TypeAnnotation\");\n      this.resetEndLocation(id);\n      this.semicolon();\n      this.scope.declareName(node.id.name, BIND_FLOW_DECLARE_FN, node.id.start);\n      return this.finishNode(node, \"DeclareFunction\");\n    }\n\n    flowParseDeclare(node, insideModule) {\n      if (this.match(types._class)) {\n        return this.flowParseDeclareClass(node);\n      } else if (this.match(types._function)) {\n        return this.flowParseDeclareFunction(node);\n      } else if (this.match(types._var)) {\n        return this.flowParseDeclareVariable(node);\n      } else if (this.eatContextual(\"module\")) {\n        if (this.match(types.dot)) {\n          return this.flowParseDeclareModuleExports(node);\n        } else {\n          if (insideModule) {\n            this.raise(this.state.lastTokStart, FlowErrors.NestedDeclareModule);\n          }\n\n          return this.flowParseDeclareModule(node);\n        }\n      } else if (this.isContextual(\"type\")) {\n        return this.flowParseDeclareTypeAlias(node);\n      } else if (this.isContextual(\"opaque\")) {\n        return this.flowParseDeclareOpaqueType(node);\n      } else if (this.isContextual(\"interface\")) {\n        return this.flowParseDeclareInterface(node);\n      } else if (this.match(types._export)) {\n        return this.flowParseDeclareExportDeclaration(node, insideModule);\n      } else {\n        throw this.unexpected();\n      }\n    }\n\n    flowParseDeclareVariable(node) {\n      this.next();\n      node.id = this.flowParseTypeAnnotatableIdentifier(true);\n      this.scope.declareName(node.id.name, BIND_VAR, node.id.start);\n      this.semicolon();\n      return this.finishNode(node, \"DeclareVariable\");\n    }\n\n    flowParseDeclareModule(node) {\n      this.scope.enter(SCOPE_OTHER);\n\n      if (this.match(types.string)) {\n        node.id = this.parseExprAtom();\n      } else {\n        node.id = this.parseIdentifier();\n      }\n\n      const bodyNode = node.body = this.startNode();\n      const body = bodyNode.body = [];\n      this.expect(types.braceL);\n\n      while (!this.match(types.braceR)) {\n        let bodyNode = this.startNode();\n\n        if (this.match(types._import)) {\n          this.next();\n\n          if (!this.isContextual(\"type\") && !this.match(types._typeof)) {\n            this.raise(this.state.lastTokStart, FlowErrors.InvalidNonTypeImportInDeclareModule);\n          }\n\n          this.parseImport(bodyNode);\n        } else {\n          this.expectContextual(\"declare\", FlowErrors.UnsupportedStatementInDeclareModule);\n          bodyNode = this.flowParseDeclare(bodyNode, true);\n        }\n\n        body.push(bodyNode);\n      }\n\n      this.scope.exit();\n      this.expect(types.braceR);\n      this.finishNode(bodyNode, \"BlockStatement\");\n      let kind = null;\n      let hasModuleExport = false;\n      body.forEach(bodyElement => {\n        if (isEsModuleType(bodyElement)) {\n          if (kind === \"CommonJS\") {\n            this.raise(bodyElement.start, FlowErrors.AmbiguousDeclareModuleKind);\n          }\n\n          kind = \"ES\";\n        } else if (bodyElement.type === \"DeclareModuleExports\") {\n          if (hasModuleExport) {\n            this.raise(bodyElement.start, FlowErrors.DuplicateDeclareModuleExports);\n          }\n\n          if (kind === \"ES\") {\n            this.raise(bodyElement.start, FlowErrors.AmbiguousDeclareModuleKind);\n          }\n\n          kind = \"CommonJS\";\n          hasModuleExport = true;\n        }\n      });\n      node.kind = kind || \"CommonJS\";\n      return this.finishNode(node, \"DeclareModule\");\n    }\n\n    flowParseDeclareExportDeclaration(node, insideModule) {\n      this.expect(types._export);\n\n      if (this.eat(types._default)) {\n        if (this.match(types._function) || this.match(types._class)) {\n          node.declaration = this.flowParseDeclare(this.startNode());\n        } else {\n          node.declaration = this.flowParseType();\n          this.semicolon();\n        }\n\n        node.default = true;\n        return this.finishNode(node, \"DeclareExportDeclaration\");\n      } else {\n        if (this.match(types._const) || this.isLet() || (this.isContextual(\"type\") || this.isContextual(\"interface\")) && !insideModule) {\n          const label = this.state.value;\n          const suggestion = exportSuggestions[label];\n          throw this.raise(this.state.start, FlowErrors.UnsupportedDeclareExportKind, label, suggestion);\n        }\n\n        if (this.match(types._var) || this.match(types._function) || this.match(types._class) || this.isContextual(\"opaque\")) {\n            node.declaration = this.flowParseDeclare(this.startNode());\n            node.default = false;\n            return this.finishNode(node, \"DeclareExportDeclaration\");\n          } else if (this.match(types.star) || this.match(types.braceL) || this.isContextual(\"interface\") || this.isContextual(\"type\") || this.isContextual(\"opaque\")) {\n            node = this.parseExport(node);\n\n            if (node.type === \"ExportNamedDeclaration\") {\n              node.type = \"ExportDeclaration\";\n              node.default = false;\n              delete node.exportKind;\n            }\n\n            node.type = \"Declare\" + node.type;\n            return node;\n          }\n      }\n\n      throw this.unexpected();\n    }\n\n    flowParseDeclareModuleExports(node) {\n      this.next();\n      this.expectContextual(\"exports\");\n      node.typeAnnotation = this.flowParseTypeAnnotation();\n      this.semicolon();\n      return this.finishNode(node, \"DeclareModuleExports\");\n    }\n\n    flowParseDeclareTypeAlias(node) {\n      this.next();\n      this.flowParseTypeAlias(node);\n      node.type = \"DeclareTypeAlias\";\n      return node;\n    }\n\n    flowParseDeclareOpaqueType(node) {\n      this.next();\n      this.flowParseOpaqueType(node, true);\n      node.type = \"DeclareOpaqueType\";\n      return node;\n    }\n\n    flowParseDeclareInterface(node) {\n      this.next();\n      this.flowParseInterfaceish(node);\n      return this.finishNode(node, \"DeclareInterface\");\n    }\n\n    flowParseInterfaceish(node, isClass = false) {\n      node.id = this.flowParseRestrictedIdentifier(!isClass, true);\n      this.scope.declareName(node.id.name, isClass ? BIND_FUNCTION : BIND_LEXICAL, node.id.start);\n\n      if (this.isRelational(\"<\")) {\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n      } else {\n        node.typeParameters = null;\n      }\n\n      node.extends = [];\n      node.implements = [];\n      node.mixins = [];\n\n      if (this.eat(types._extends)) {\n        do {\n          node.extends.push(this.flowParseInterfaceExtends());\n        } while (!isClass && this.eat(types.comma));\n      }\n\n      if (this.isContextual(\"mixins\")) {\n        this.next();\n\n        do {\n          node.mixins.push(this.flowParseInterfaceExtends());\n        } while (this.eat(types.comma));\n      }\n\n      if (this.isContextual(\"implements\")) {\n        this.next();\n\n        do {\n          node.implements.push(this.flowParseInterfaceExtends());\n        } while (this.eat(types.comma));\n      }\n\n      node.body = this.flowParseObjectType({\n        allowStatic: isClass,\n        allowExact: false,\n        allowSpread: false,\n        allowProto: isClass,\n        allowInexact: false\n      });\n    }\n\n    flowParseInterfaceExtends() {\n      const node = this.startNode();\n      node.id = this.flowParseQualifiedTypeIdentifier();\n\n      if (this.isRelational(\"<\")) {\n        node.typeParameters = this.flowParseTypeParameterInstantiation();\n      } else {\n        node.typeParameters = null;\n      }\n\n      return this.finishNode(node, \"InterfaceExtends\");\n    }\n\n    flowParseInterface(node) {\n      this.flowParseInterfaceish(node);\n      return this.finishNode(node, \"InterfaceDeclaration\");\n    }\n\n    checkNotUnderscore(word) {\n      if (word === \"_\") {\n        this.raise(this.state.start, FlowErrors.UnexpectedReservedUnderscore);\n      }\n    }\n\n    checkReservedType(word, startLoc, declaration) {\n      if (!reservedTypes.has(word)) return;\n      this.raise(startLoc, declaration ? FlowErrors.AssignReservedType : FlowErrors.UnexpectedReservedType, word);\n    }\n\n    flowParseRestrictedIdentifier(liberal, declaration) {\n      this.checkReservedType(this.state.value, this.state.start, declaration);\n      return this.parseIdentifier(liberal);\n    }\n\n    flowParseTypeAlias(node) {\n      node.id = this.flowParseRestrictedIdentifier(false, true);\n      this.scope.declareName(node.id.name, BIND_LEXICAL, node.id.start);\n\n      if (this.isRelational(\"<\")) {\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n      } else {\n        node.typeParameters = null;\n      }\n\n      node.right = this.flowParseTypeInitialiser(types.eq);\n      this.semicolon();\n      return this.finishNode(node, \"TypeAlias\");\n    }\n\n    flowParseOpaqueType(node, declare) {\n      this.expectContextual(\"type\");\n      node.id = this.flowParseRestrictedIdentifier(true, true);\n      this.scope.declareName(node.id.name, BIND_LEXICAL, node.id.start);\n\n      if (this.isRelational(\"<\")) {\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n      } else {\n        node.typeParameters = null;\n      }\n\n      node.supertype = null;\n\n      if (this.match(types.colon)) {\n        node.supertype = this.flowParseTypeInitialiser(types.colon);\n      }\n\n      node.impltype = null;\n\n      if (!declare) {\n        node.impltype = this.flowParseTypeInitialiser(types.eq);\n      }\n\n      this.semicolon();\n      return this.finishNode(node, \"OpaqueType\");\n    }\n\n    flowParseTypeParameter(requireDefault = false) {\n      const nodeStart = this.state.start;\n      const node = this.startNode();\n      const variance = this.flowParseVariance();\n      const ident = this.flowParseTypeAnnotatableIdentifier();\n      node.name = ident.name;\n      node.variance = variance;\n      node.bound = ident.typeAnnotation;\n\n      if (this.match(types.eq)) {\n        this.eat(types.eq);\n        node.default = this.flowParseType();\n      } else {\n        if (requireDefault) {\n          this.raise(nodeStart, FlowErrors.MissingTypeParamDefault);\n        }\n      }\n\n      return this.finishNode(node, \"TypeParameter\");\n    }\n\n    flowParseTypeParameterDeclaration() {\n      const oldInType = this.state.inType;\n      const node = this.startNode();\n      node.params = [];\n      this.state.inType = true;\n\n      if (this.isRelational(\"<\") || this.match(types.jsxTagStart)) {\n        this.next();\n      } else {\n        this.unexpected();\n      }\n\n      let defaultRequired = false;\n\n      do {\n        const typeParameter = this.flowParseTypeParameter(defaultRequired);\n        node.params.push(typeParameter);\n\n        if (typeParameter.default) {\n          defaultRequired = true;\n        }\n\n        if (!this.isRelational(\">\")) {\n          this.expect(types.comma);\n        }\n      } while (!this.isRelational(\">\"));\n\n      this.expectRelational(\">\");\n      this.state.inType = oldInType;\n      return this.finishNode(node, \"TypeParameterDeclaration\");\n    }\n\n    flowParseTypeParameterInstantiation() {\n      const node = this.startNode();\n      const oldInType = this.state.inType;\n      node.params = [];\n      this.state.inType = true;\n      this.expectRelational(\"<\");\n      const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n      this.state.noAnonFunctionType = false;\n\n      while (!this.isRelational(\">\")) {\n        node.params.push(this.flowParseType());\n\n        if (!this.isRelational(\">\")) {\n          this.expect(types.comma);\n        }\n      }\n\n      this.state.noAnonFunctionType = oldNoAnonFunctionType;\n      this.expectRelational(\">\");\n      this.state.inType = oldInType;\n      return this.finishNode(node, \"TypeParameterInstantiation\");\n    }\n\n    flowParseTypeParameterInstantiationCallOrNew() {\n      const node = this.startNode();\n      const oldInType = this.state.inType;\n      node.params = [];\n      this.state.inType = true;\n      this.expectRelational(\"<\");\n\n      while (!this.isRelational(\">\")) {\n        node.params.push(this.flowParseTypeOrImplicitInstantiation());\n\n        if (!this.isRelational(\">\")) {\n          this.expect(types.comma);\n        }\n      }\n\n      this.expectRelational(\">\");\n      this.state.inType = oldInType;\n      return this.finishNode(node, \"TypeParameterInstantiation\");\n    }\n\n    flowParseInterfaceType() {\n      const node = this.startNode();\n      this.expectContextual(\"interface\");\n      node.extends = [];\n\n      if (this.eat(types._extends)) {\n        do {\n          node.extends.push(this.flowParseInterfaceExtends());\n        } while (this.eat(types.comma));\n      }\n\n      node.body = this.flowParseObjectType({\n        allowStatic: false,\n        allowExact: false,\n        allowSpread: false,\n        allowProto: false,\n        allowInexact: false\n      });\n      return this.finishNode(node, \"InterfaceTypeAnnotation\");\n    }\n\n    flowParseObjectPropertyKey() {\n      return this.match(types.num) || this.match(types.string) ? this.parseExprAtom() : this.parseIdentifier(true);\n    }\n\n    flowParseObjectTypeIndexer(node, isStatic, variance) {\n      node.static = isStatic;\n\n      if (this.lookahead().type === types.colon) {\n        node.id = this.flowParseObjectPropertyKey();\n        node.key = this.flowParseTypeInitialiser();\n      } else {\n        node.id = null;\n        node.key = this.flowParseType();\n      }\n\n      this.expect(types.bracketR);\n      node.value = this.flowParseTypeInitialiser();\n      node.variance = variance;\n      return this.finishNode(node, \"ObjectTypeIndexer\");\n    }\n\n    flowParseObjectTypeInternalSlot(node, isStatic) {\n      node.static = isStatic;\n      node.id = this.flowParseObjectPropertyKey();\n      this.expect(types.bracketR);\n      this.expect(types.bracketR);\n\n      if (this.isRelational(\"<\") || this.match(types.parenL)) {\n        node.method = true;\n        node.optional = false;\n        node.value = this.flowParseObjectTypeMethodish(this.startNodeAt(node.start, node.loc.start));\n      } else {\n        node.method = false;\n\n        if (this.eat(types.question)) {\n          node.optional = true;\n        }\n\n        node.value = this.flowParseTypeInitialiser();\n      }\n\n      return this.finishNode(node, \"ObjectTypeInternalSlot\");\n    }\n\n    flowParseObjectTypeMethodish(node) {\n      node.params = [];\n      node.rest = null;\n      node.typeParameters = null;\n\n      if (this.isRelational(\"<\")) {\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n      }\n\n      this.expect(types.parenL);\n\n      while (!this.match(types.parenR) && !this.match(types.ellipsis)) {\n        node.params.push(this.flowParseFunctionTypeParam());\n\n        if (!this.match(types.parenR)) {\n          this.expect(types.comma);\n        }\n      }\n\n      if (this.eat(types.ellipsis)) {\n        node.rest = this.flowParseFunctionTypeParam();\n      }\n\n      this.expect(types.parenR);\n      node.returnType = this.flowParseTypeInitialiser();\n      return this.finishNode(node, \"FunctionTypeAnnotation\");\n    }\n\n    flowParseObjectTypeCallProperty(node, isStatic) {\n      const valueNode = this.startNode();\n      node.static = isStatic;\n      node.value = this.flowParseObjectTypeMethodish(valueNode);\n      return this.finishNode(node, \"ObjectTypeCallProperty\");\n    }\n\n    flowParseObjectType({\n      allowStatic,\n      allowExact,\n      allowSpread,\n      allowProto,\n      allowInexact\n    }) {\n      const oldInType = this.state.inType;\n      this.state.inType = true;\n      const nodeStart = this.startNode();\n      nodeStart.callProperties = [];\n      nodeStart.properties = [];\n      nodeStart.indexers = [];\n      nodeStart.internalSlots = [];\n      let endDelim;\n      let exact;\n      let inexact = false;\n\n      if (allowExact && this.match(types.braceBarL)) {\n        this.expect(types.braceBarL);\n        endDelim = types.braceBarR;\n        exact = true;\n      } else {\n        this.expect(types.braceL);\n        endDelim = types.braceR;\n        exact = false;\n      }\n\n      nodeStart.exact = exact;\n\n      while (!this.match(endDelim)) {\n        let isStatic = false;\n        let protoStart = null;\n        let inexactStart = null;\n        const node = this.startNode();\n\n        if (allowProto && this.isContextual(\"proto\")) {\n          const lookahead = this.lookahead();\n\n          if (lookahead.type !== types.colon && lookahead.type !== types.question) {\n            this.next();\n            protoStart = this.state.start;\n            allowStatic = false;\n          }\n        }\n\n        if (allowStatic && this.isContextual(\"static\")) {\n          const lookahead = this.lookahead();\n\n          if (lookahead.type !== types.colon && lookahead.type !== types.question) {\n            this.next();\n            isStatic = true;\n          }\n        }\n\n        const variance = this.flowParseVariance();\n\n        if (this.eat(types.bracketL)) {\n          if (protoStart != null) {\n            this.unexpected(protoStart);\n          }\n\n          if (this.eat(types.bracketL)) {\n            if (variance) {\n              this.unexpected(variance.start);\n            }\n\n            nodeStart.internalSlots.push(this.flowParseObjectTypeInternalSlot(node, isStatic));\n          } else {\n            nodeStart.indexers.push(this.flowParseObjectTypeIndexer(node, isStatic, variance));\n          }\n        } else if (this.match(types.parenL) || this.isRelational(\"<\")) {\n          if (protoStart != null) {\n            this.unexpected(protoStart);\n          }\n\n          if (variance) {\n            this.unexpected(variance.start);\n          }\n\n          nodeStart.callProperties.push(this.flowParseObjectTypeCallProperty(node, isStatic));\n        } else {\n          let kind = \"init\";\n\n          if (this.isContextual(\"get\") || this.isContextual(\"set\")) {\n            const lookahead = this.lookahead();\n\n            if (lookahead.type === types.name || lookahead.type === types.string || lookahead.type === types.num) {\n              kind = this.state.value;\n              this.next();\n            }\n          }\n\n          const propOrInexact = this.flowParseObjectTypeProperty(node, isStatic, protoStart, variance, kind, allowSpread, allowInexact != null ? allowInexact : !exact);\n\n          if (propOrInexact === null) {\n            inexact = true;\n            inexactStart = this.state.lastTokStart;\n          } else {\n            nodeStart.properties.push(propOrInexact);\n          }\n        }\n\n        this.flowObjectTypeSemicolon();\n\n        if (inexactStart && !this.match(types.braceR) && !this.match(types.braceBarR)) {\n          this.raise(inexactStart, FlowErrors.UnexpectedExplicitInexactInObject);\n        }\n      }\n\n      this.expect(endDelim);\n\n      if (allowSpread) {\n        nodeStart.inexact = inexact;\n      }\n\n      const out = this.finishNode(nodeStart, \"ObjectTypeAnnotation\");\n      this.state.inType = oldInType;\n      return out;\n    }\n\n    flowParseObjectTypeProperty(node, isStatic, protoStart, variance, kind, allowSpread, allowInexact) {\n      if (this.eat(types.ellipsis)) {\n        const isInexactToken = this.match(types.comma) || this.match(types.semi) || this.match(types.braceR) || this.match(types.braceBarR);\n\n        if (isInexactToken) {\n          if (!allowSpread) {\n            this.raise(this.state.lastTokStart, FlowErrors.InexactInsideNonObject);\n          } else if (!allowInexact) {\n            this.raise(this.state.lastTokStart, FlowErrors.InexactInsideExact);\n          }\n\n          if (variance) {\n            this.raise(variance.start, FlowErrors.InexactVariance);\n          }\n\n          return null;\n        }\n\n        if (!allowSpread) {\n          this.raise(this.state.lastTokStart, FlowErrors.UnexpectedSpreadType);\n        }\n\n        if (protoStart != null) {\n          this.unexpected(protoStart);\n        }\n\n        if (variance) {\n          this.raise(variance.start, FlowErrors.SpreadVariance);\n        }\n\n        node.argument = this.flowParseType();\n        return this.finishNode(node, \"ObjectTypeSpreadProperty\");\n      } else {\n        node.key = this.flowParseObjectPropertyKey();\n        node.static = isStatic;\n        node.proto = protoStart != null;\n        node.kind = kind;\n        let optional = false;\n\n        if (this.isRelational(\"<\") || this.match(types.parenL)) {\n          node.method = true;\n\n          if (protoStart != null) {\n            this.unexpected(protoStart);\n          }\n\n          if (variance) {\n            this.unexpected(variance.start);\n          }\n\n          node.value = this.flowParseObjectTypeMethodish(this.startNodeAt(node.start, node.loc.start));\n\n          if (kind === \"get\" || kind === \"set\") {\n            this.flowCheckGetterSetterParams(node);\n          }\n        } else {\n          if (kind !== \"init\") this.unexpected();\n          node.method = false;\n\n          if (this.eat(types.question)) {\n            optional = true;\n          }\n\n          node.value = this.flowParseTypeInitialiser();\n          node.variance = variance;\n        }\n\n        node.optional = optional;\n        return this.finishNode(node, \"ObjectTypeProperty\");\n      }\n    }\n\n    flowCheckGetterSetterParams(property) {\n      const paramCount = property.kind === \"get\" ? 0 : 1;\n      const start = property.start;\n      const length = property.value.params.length + (property.value.rest ? 1 : 0);\n\n      if (length !== paramCount) {\n        if (property.kind === \"get\") {\n          this.raise(start, ErrorMessages.BadGetterArity);\n        } else {\n          this.raise(start, ErrorMessages.BadSetterArity);\n        }\n      }\n\n      if (property.kind === \"set\" && property.value.rest) {\n        this.raise(start, ErrorMessages.BadSetterRestParameter);\n      }\n    }\n\n    flowObjectTypeSemicolon() {\n      if (!this.eat(types.semi) && !this.eat(types.comma) && !this.match(types.braceR) && !this.match(types.braceBarR)) {\n        this.unexpected();\n      }\n    }\n\n    flowParseQualifiedTypeIdentifier(startPos, startLoc, id) {\n      startPos = startPos || this.state.start;\n      startLoc = startLoc || this.state.startLoc;\n      let node = id || this.flowParseRestrictedIdentifier(true);\n\n      while (this.eat(types.dot)) {\n        const node2 = this.startNodeAt(startPos, startLoc);\n        node2.qualification = node;\n        node2.id = this.flowParseRestrictedIdentifier(true);\n        node = this.finishNode(node2, \"QualifiedTypeIdentifier\");\n      }\n\n      return node;\n    }\n\n    flowParseGenericType(startPos, startLoc, id) {\n      const node = this.startNodeAt(startPos, startLoc);\n      node.typeParameters = null;\n      node.id = this.flowParseQualifiedTypeIdentifier(startPos, startLoc, id);\n\n      if (this.isRelational(\"<\")) {\n        node.typeParameters = this.flowParseTypeParameterInstantiation();\n      }\n\n      return this.finishNode(node, \"GenericTypeAnnotation\");\n    }\n\n    flowParseTypeofType() {\n      const node = this.startNode();\n      this.expect(types._typeof);\n      node.argument = this.flowParsePrimaryType();\n      return this.finishNode(node, \"TypeofTypeAnnotation\");\n    }\n\n    flowParseTupleType() {\n      const node = this.startNode();\n      node.types = [];\n      this.expect(types.bracketL);\n\n      while (this.state.pos < this.length && !this.match(types.bracketR)) {\n        node.types.push(this.flowParseType());\n        if (this.match(types.bracketR)) break;\n        this.expect(types.comma);\n      }\n\n      this.expect(types.bracketR);\n      return this.finishNode(node, \"TupleTypeAnnotation\");\n    }\n\n    flowParseFunctionTypeParam() {\n      let name = null;\n      let optional = false;\n      let typeAnnotation = null;\n      const node = this.startNode();\n      const lh = this.lookahead();\n\n      if (lh.type === types.colon || lh.type === types.question) {\n        name = this.parseIdentifier();\n\n        if (this.eat(types.question)) {\n          optional = true;\n        }\n\n        typeAnnotation = this.flowParseTypeInitialiser();\n      } else {\n        typeAnnotation = this.flowParseType();\n      }\n\n      node.name = name;\n      node.optional = optional;\n      node.typeAnnotation = typeAnnotation;\n      return this.finishNode(node, \"FunctionTypeParam\");\n    }\n\n    reinterpretTypeAsFunctionTypeParam(type) {\n      const node = this.startNodeAt(type.start, type.loc.start);\n      node.name = null;\n      node.optional = false;\n      node.typeAnnotation = type;\n      return this.finishNode(node, \"FunctionTypeParam\");\n    }\n\n    flowParseFunctionTypeParams(params = []) {\n      let rest = null;\n\n      while (!this.match(types.parenR) && !this.match(types.ellipsis)) {\n        params.push(this.flowParseFunctionTypeParam());\n\n        if (!this.match(types.parenR)) {\n          this.expect(types.comma);\n        }\n      }\n\n      if (this.eat(types.ellipsis)) {\n        rest = this.flowParseFunctionTypeParam();\n      }\n\n      return {\n        params,\n        rest\n      };\n    }\n\n    flowIdentToTypeAnnotation(startPos, startLoc, node, id) {\n      switch (id.name) {\n        case \"any\":\n          return this.finishNode(node, \"AnyTypeAnnotation\");\n\n        case \"bool\":\n        case \"boolean\":\n          return this.finishNode(node, \"BooleanTypeAnnotation\");\n\n        case \"mixed\":\n          return this.finishNode(node, \"MixedTypeAnnotation\");\n\n        case \"empty\":\n          return this.finishNode(node, \"EmptyTypeAnnotation\");\n\n        case \"number\":\n          return this.finishNode(node, \"NumberTypeAnnotation\");\n\n        case \"string\":\n          return this.finishNode(node, \"StringTypeAnnotation\");\n\n        case \"symbol\":\n          return this.finishNode(node, \"SymbolTypeAnnotation\");\n\n        default:\n          this.checkNotUnderscore(id.name);\n          return this.flowParseGenericType(startPos, startLoc, id);\n      }\n    }\n\n    flowParsePrimaryType() {\n      const startPos = this.state.start;\n      const startLoc = this.state.startLoc;\n      const node = this.startNode();\n      let tmp;\n      let type;\n      let isGroupedType = false;\n      const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n\n      switch (this.state.type) {\n        case types.name:\n          if (this.isContextual(\"interface\")) {\n            return this.flowParseInterfaceType();\n          }\n\n          return this.flowIdentToTypeAnnotation(startPos, startLoc, node, this.parseIdentifier());\n\n        case types.braceL:\n          return this.flowParseObjectType({\n            allowStatic: false,\n            allowExact: false,\n            allowSpread: true,\n            allowProto: false,\n            allowInexact: true\n          });\n\n        case types.braceBarL:\n          return this.flowParseObjectType({\n            allowStatic: false,\n            allowExact: true,\n            allowSpread: true,\n            allowProto: false,\n            allowInexact: false\n          });\n\n        case types.bracketL:\n          this.state.noAnonFunctionType = false;\n          type = this.flowParseTupleType();\n          this.state.noAnonFunctionType = oldNoAnonFunctionType;\n          return type;\n\n        case types.relational:\n          if (this.state.value === \"<\") {\n            node.typeParameters = this.flowParseTypeParameterDeclaration();\n            this.expect(types.parenL);\n            tmp = this.flowParseFunctionTypeParams();\n            node.params = tmp.params;\n            node.rest = tmp.rest;\n            this.expect(types.parenR);\n            this.expect(types.arrow);\n            node.returnType = this.flowParseType();\n            return this.finishNode(node, \"FunctionTypeAnnotation\");\n          }\n\n          break;\n\n        case types.parenL:\n          this.next();\n\n          if (!this.match(types.parenR) && !this.match(types.ellipsis)) {\n            if (this.match(types.name)) {\n              const token = this.lookahead().type;\n              isGroupedType = token !== types.question && token !== types.colon;\n            } else {\n              isGroupedType = true;\n            }\n          }\n\n          if (isGroupedType) {\n            this.state.noAnonFunctionType = false;\n            type = this.flowParseType();\n            this.state.noAnonFunctionType = oldNoAnonFunctionType;\n\n            if (this.state.noAnonFunctionType || !(this.match(types.comma) || this.match(types.parenR) && this.lookahead().type === types.arrow)) {\n              this.expect(types.parenR);\n              return type;\n            } else {\n              this.eat(types.comma);\n            }\n          }\n\n          if (type) {\n            tmp = this.flowParseFunctionTypeParams([this.reinterpretTypeAsFunctionTypeParam(type)]);\n          } else {\n            tmp = this.flowParseFunctionTypeParams();\n          }\n\n          node.params = tmp.params;\n          node.rest = tmp.rest;\n          this.expect(types.parenR);\n          this.expect(types.arrow);\n          node.returnType = this.flowParseType();\n          node.typeParameters = null;\n          return this.finishNode(node, \"FunctionTypeAnnotation\");\n\n        case types.string:\n          return this.parseLiteral(this.state.value, \"StringLiteralTypeAnnotation\");\n\n        case types._true:\n        case types._false:\n          node.value = this.match(types._true);\n          this.next();\n          return this.finishNode(node, \"BooleanLiteralTypeAnnotation\");\n\n        case types.plusMin:\n          if (this.state.value === \"-\") {\n            this.next();\n\n            if (this.match(types.num)) {\n              return this.parseLiteral(-this.state.value, \"NumberLiteralTypeAnnotation\", node.start, node.loc.start);\n            }\n\n            if (this.match(types.bigint)) {\n              return this.parseLiteral(-this.state.value, \"BigIntLiteralTypeAnnotation\", node.start, node.loc.start);\n            }\n\n            throw this.raise(this.state.start, FlowErrors.UnexpectedSubtractionOperand);\n          }\n\n          throw this.unexpected();\n\n        case types.num:\n          return this.parseLiteral(this.state.value, \"NumberLiteralTypeAnnotation\");\n\n        case types.bigint:\n          return this.parseLiteral(this.state.value, \"BigIntLiteralTypeAnnotation\");\n\n        case types._void:\n          this.next();\n          return this.finishNode(node, \"VoidTypeAnnotation\");\n\n        case types._null:\n          this.next();\n          return this.finishNode(node, \"NullLiteralTypeAnnotation\");\n\n        case types._this:\n          this.next();\n          return this.finishNode(node, \"ThisTypeAnnotation\");\n\n        case types.star:\n          this.next();\n          return this.finishNode(node, \"ExistsTypeAnnotation\");\n\n        default:\n          if (this.state.type.keyword === \"typeof\") {\n            return this.flowParseTypeofType();\n          } else if (this.state.type.keyword) {\n            const label = this.state.type.label;\n            this.next();\n            return super.createIdentifier(node, label);\n          }\n\n      }\n\n      throw this.unexpected();\n    }\n\n    flowParsePostfixType() {\n      const startPos = this.state.start,\n            startLoc = this.state.startLoc;\n      let type = this.flowParsePrimaryType();\n\n      while (this.match(types.bracketL) && !this.canInsertSemicolon()) {\n        const node = this.startNodeAt(startPos, startLoc);\n        node.elementType = type;\n        this.expect(types.bracketL);\n        this.expect(types.bracketR);\n        type = this.finishNode(node, \"ArrayTypeAnnotation\");\n      }\n\n      return type;\n    }\n\n    flowParsePrefixType() {\n      const node = this.startNode();\n\n      if (this.eat(types.question)) {\n        node.typeAnnotation = this.flowParsePrefixType();\n        return this.finishNode(node, \"NullableTypeAnnotation\");\n      } else {\n        return this.flowParsePostfixType();\n      }\n    }\n\n    flowParseAnonFunctionWithoutParens() {\n      const param = this.flowParsePrefixType();\n\n      if (!this.state.noAnonFunctionType && this.eat(types.arrow)) {\n        const node = this.startNodeAt(param.start, param.loc.start);\n        node.params = [this.reinterpretTypeAsFunctionTypeParam(param)];\n        node.rest = null;\n        node.returnType = this.flowParseType();\n        node.typeParameters = null;\n        return this.finishNode(node, \"FunctionTypeAnnotation\");\n      }\n\n      return param;\n    }\n\n    flowParseIntersectionType() {\n      const node = this.startNode();\n      this.eat(types.bitwiseAND);\n      const type = this.flowParseAnonFunctionWithoutParens();\n      node.types = [type];\n\n      while (this.eat(types.bitwiseAND)) {\n        node.types.push(this.flowParseAnonFunctionWithoutParens());\n      }\n\n      return node.types.length === 1 ? type : this.finishNode(node, \"IntersectionTypeAnnotation\");\n    }\n\n    flowParseUnionType() {\n      const node = this.startNode();\n      this.eat(types.bitwiseOR);\n      const type = this.flowParseIntersectionType();\n      node.types = [type];\n\n      while (this.eat(types.bitwiseOR)) {\n        node.types.push(this.flowParseIntersectionType());\n      }\n\n      return node.types.length === 1 ? type : this.finishNode(node, \"UnionTypeAnnotation\");\n    }\n\n    flowParseType() {\n      const oldInType = this.state.inType;\n      this.state.inType = true;\n      const type = this.flowParseUnionType();\n      this.state.inType = oldInType;\n      this.state.exprAllowed = this.state.exprAllowed || this.state.noAnonFunctionType;\n      return type;\n    }\n\n    flowParseTypeOrImplicitInstantiation() {\n      if (this.state.type === types.name && this.state.value === \"_\") {\n        const startPos = this.state.start;\n        const startLoc = this.state.startLoc;\n        const node = this.parseIdentifier();\n        return this.flowParseGenericType(startPos, startLoc, node);\n      } else {\n        return this.flowParseType();\n      }\n    }\n\n    flowParseTypeAnnotation() {\n      const node = this.startNode();\n      node.typeAnnotation = this.flowParseTypeInitialiser();\n      return this.finishNode(node, \"TypeAnnotation\");\n    }\n\n    flowParseTypeAnnotatableIdentifier(allowPrimitiveOverride) {\n      const ident = allowPrimitiveOverride ? this.parseIdentifier() : this.flowParseRestrictedIdentifier();\n\n      if (this.match(types.colon)) {\n        ident.typeAnnotation = this.flowParseTypeAnnotation();\n        this.resetEndLocation(ident);\n      }\n\n      return ident;\n    }\n\n    typeCastToParameter(node) {\n      node.expression.typeAnnotation = node.typeAnnotation;\n      this.resetEndLocation(node.expression, node.typeAnnotation.end, node.typeAnnotation.loc.end);\n      return node.expression;\n    }\n\n    flowParseVariance() {\n      let variance = null;\n\n      if (this.match(types.plusMin)) {\n        variance = this.startNode();\n\n        if (this.state.value === \"+\") {\n          variance.kind = \"plus\";\n        } else {\n          variance.kind = \"minus\";\n        }\n\n        this.next();\n        this.finishNode(variance, \"Variance\");\n      }\n\n      return variance;\n    }\n\n    parseFunctionBody(node, allowExpressionBody, isMethod = false) {\n      if (allowExpressionBody) {\n        return this.forwardNoArrowParamsConversionAt(node, () => super.parseFunctionBody(node, true, isMethod));\n      }\n\n      return super.parseFunctionBody(node, false, isMethod);\n    }\n\n    parseFunctionBodyAndFinish(node, type, isMethod = false) {\n      if (this.match(types.colon)) {\n        const typeNode = this.startNode();\n        [typeNode.typeAnnotation, node.predicate] = this.flowParseTypeAndPredicateInitialiser();\n        node.returnType = typeNode.typeAnnotation ? this.finishNode(typeNode, \"TypeAnnotation\") : null;\n      }\n\n      super.parseFunctionBodyAndFinish(node, type, isMethod);\n    }\n\n    parseStatement(context, topLevel) {\n      if (this.state.strict && this.match(types.name) && this.state.value === \"interface\") {\n        const lookahead = this.lookahead();\n\n        if (lookahead.type === types.name || isKeyword(lookahead.value)) {\n          const node = this.startNode();\n          this.next();\n          return this.flowParseInterface(node);\n        }\n      } else if (this.shouldParseEnums() && this.isContextual(\"enum\")) {\n        const node = this.startNode();\n        this.next();\n        return this.flowParseEnumDeclaration(node);\n      }\n\n      const stmt = super.parseStatement(context, topLevel);\n\n      if (this.flowPragma === undefined && !this.isValidDirective(stmt)) {\n        this.flowPragma = null;\n      }\n\n      return stmt;\n    }\n\n    parseExpressionStatement(node, expr) {\n      if (expr.type === \"Identifier\") {\n        if (expr.name === \"declare\") {\n          if (this.match(types._class) || this.match(types.name) || this.match(types._function) || this.match(types._var) || this.match(types._export)) {\n            return this.flowParseDeclare(node);\n          }\n        } else if (this.match(types.name)) {\n          if (expr.name === \"interface\") {\n            return this.flowParseInterface(node);\n          } else if (expr.name === \"type\") {\n            return this.flowParseTypeAlias(node);\n          } else if (expr.name === \"opaque\") {\n            return this.flowParseOpaqueType(node, false);\n          }\n        }\n      }\n\n      return super.parseExpressionStatement(node, expr);\n    }\n\n    shouldParseExportDeclaration() {\n      return this.isContextual(\"type\") || this.isContextual(\"interface\") || this.isContextual(\"opaque\") || this.shouldParseEnums() && this.isContextual(\"enum\") || super.shouldParseExportDeclaration();\n    }\n\n    isExportDefaultSpecifier() {\n      if (this.match(types.name) && (this.state.value === \"type\" || this.state.value === \"interface\" || this.state.value === \"opaque\" || this.shouldParseEnums() && this.state.value === \"enum\")) {\n        return false;\n      }\n\n      return super.isExportDefaultSpecifier();\n    }\n\n    parseExportDefaultExpression() {\n      if (this.shouldParseEnums() && this.isContextual(\"enum\")) {\n        const node = this.startNode();\n        this.next();\n        return this.flowParseEnumDeclaration(node);\n      }\n\n      return super.parseExportDefaultExpression();\n    }\n\n    parseConditional(expr, startPos, startLoc, refNeedsArrowPos) {\n      if (!this.match(types.question)) return expr;\n\n      if (refNeedsArrowPos) {\n        const result = this.tryParse(() => super.parseConditional(expr, startPos, startLoc));\n\n        if (!result.node) {\n          refNeedsArrowPos.start = result.error.pos || this.state.start;\n          return expr;\n        }\n\n        if (result.error) this.state = result.failState;\n        return result.node;\n      }\n\n      this.expect(types.question);\n      const state = this.state.clone();\n      const originalNoArrowAt = this.state.noArrowAt;\n      const node = this.startNodeAt(startPos, startLoc);\n      let {\n        consequent,\n        failed\n      } = this.tryParseConditionalConsequent();\n      let [valid, invalid] = this.getArrowLikeExpressions(consequent);\n\n      if (failed || invalid.length > 0) {\n        const noArrowAt = [...originalNoArrowAt];\n\n        if (invalid.length > 0) {\n          this.state = state;\n          this.state.noArrowAt = noArrowAt;\n\n          for (let i = 0; i < invalid.length; i++) {\n            noArrowAt.push(invalid[i].start);\n          }\n\n          ({\n            consequent,\n            failed\n          } = this.tryParseConditionalConsequent());\n          [valid, invalid] = this.getArrowLikeExpressions(consequent);\n        }\n\n        if (failed && valid.length > 1) {\n          this.raise(state.start, FlowErrors.AmbiguousConditionalArrow);\n        }\n\n        if (failed && valid.length === 1) {\n          this.state = state;\n          this.state.noArrowAt = noArrowAt.concat(valid[0].start);\n          ({\n            consequent,\n            failed\n          } = this.tryParseConditionalConsequent());\n        }\n      }\n\n      this.getArrowLikeExpressions(consequent, true);\n      this.state.noArrowAt = originalNoArrowAt;\n      this.expect(types.colon);\n      node.test = expr;\n      node.consequent = consequent;\n      node.alternate = this.forwardNoArrowParamsConversionAt(node, () => this.parseMaybeAssign(undefined, undefined, undefined));\n      return this.finishNode(node, \"ConditionalExpression\");\n    }\n\n    tryParseConditionalConsequent() {\n      this.state.noArrowParamsConversionAt.push(this.state.start);\n      const consequent = this.parseMaybeAssignAllowIn();\n      const failed = !this.match(types.colon);\n      this.state.noArrowParamsConversionAt.pop();\n      return {\n        consequent,\n        failed\n      };\n    }\n\n    getArrowLikeExpressions(node, disallowInvalid) {\n      const stack = [node];\n      const arrows = [];\n\n      while (stack.length !== 0) {\n        const node = stack.pop();\n\n        if (node.type === \"ArrowFunctionExpression\") {\n          if (node.typeParameters || !node.returnType) {\n            this.finishArrowValidation(node);\n          } else {\n            arrows.push(node);\n          }\n\n          stack.push(node.body);\n        } else if (node.type === \"ConditionalExpression\") {\n          stack.push(node.consequent);\n          stack.push(node.alternate);\n        }\n      }\n\n      if (disallowInvalid) {\n        arrows.forEach(node => this.finishArrowValidation(node));\n        return [arrows, []];\n      }\n\n      return partition(arrows, node => node.params.every(param => this.isAssignable(param, true)));\n    }\n\n    finishArrowValidation(node) {\n      var _node$extra;\n\n      this.toAssignableList(node.params, (_node$extra = node.extra) == null ? void 0 : _node$extra.trailingComma, false);\n      this.scope.enter(SCOPE_FUNCTION | SCOPE_ARROW);\n      super.checkParams(node, false, true);\n      this.scope.exit();\n    }\n\n    forwardNoArrowParamsConversionAt(node, parse) {\n      let result;\n\n      if (this.state.noArrowParamsConversionAt.indexOf(node.start) !== -1) {\n        this.state.noArrowParamsConversionAt.push(this.state.start);\n        result = parse();\n        this.state.noArrowParamsConversionAt.pop();\n      } else {\n        result = parse();\n      }\n\n      return result;\n    }\n\n    parseParenItem(node, startPos, startLoc) {\n      node = super.parseParenItem(node, startPos, startLoc);\n\n      if (this.eat(types.question)) {\n        node.optional = true;\n        this.resetEndLocation(node);\n      }\n\n      if (this.match(types.colon)) {\n        const typeCastNode = this.startNodeAt(startPos, startLoc);\n        typeCastNode.expression = node;\n        typeCastNode.typeAnnotation = this.flowParseTypeAnnotation();\n        return this.finishNode(typeCastNode, \"TypeCastExpression\");\n      }\n\n      return node;\n    }\n\n    assertModuleNodeAllowed(node) {\n      if (node.type === \"ImportDeclaration\" && (node.importKind === \"type\" || node.importKind === \"typeof\") || node.type === \"ExportNamedDeclaration\" && node.exportKind === \"type\" || node.type === \"ExportAllDeclaration\" && node.exportKind === \"type\") {\n        return;\n      }\n\n      super.assertModuleNodeAllowed(node);\n    }\n\n    parseExport(node) {\n      const decl = super.parseExport(node);\n\n      if (decl.type === \"ExportNamedDeclaration\" || decl.type === \"ExportAllDeclaration\") {\n        decl.exportKind = decl.exportKind || \"value\";\n      }\n\n      return decl;\n    }\n\n    parseExportDeclaration(node) {\n      if (this.isContextual(\"type\")) {\n        node.exportKind = \"type\";\n        const declarationNode = this.startNode();\n        this.next();\n\n        if (this.match(types.braceL)) {\n          node.specifiers = this.parseExportSpecifiers();\n          this.parseExportFrom(node);\n          return null;\n        } else {\n          return this.flowParseTypeAlias(declarationNode);\n        }\n      } else if (this.isContextual(\"opaque\")) {\n        node.exportKind = \"type\";\n        const declarationNode = this.startNode();\n        this.next();\n        return this.flowParseOpaqueType(declarationNode, false);\n      } else if (this.isContextual(\"interface\")) {\n        node.exportKind = \"type\";\n        const declarationNode = this.startNode();\n        this.next();\n        return this.flowParseInterface(declarationNode);\n      } else if (this.shouldParseEnums() && this.isContextual(\"enum\")) {\n        node.exportKind = \"value\";\n        const declarationNode = this.startNode();\n        this.next();\n        return this.flowParseEnumDeclaration(declarationNode);\n      } else {\n        return super.parseExportDeclaration(node);\n      }\n    }\n\n    eatExportStar(node) {\n      if (super.eatExportStar(...arguments)) return true;\n\n      if (this.isContextual(\"type\") && this.lookahead().type === types.star) {\n        node.exportKind = \"type\";\n        this.next();\n        this.next();\n        return true;\n      }\n\n      return false;\n    }\n\n    maybeParseExportNamespaceSpecifier(node) {\n      const pos = this.state.start;\n      const hasNamespace = super.maybeParseExportNamespaceSpecifier(node);\n\n      if (hasNamespace && node.exportKind === \"type\") {\n        this.unexpected(pos);\n      }\n\n      return hasNamespace;\n    }\n\n    parseClassId(node, isStatement, optionalId) {\n      super.parseClassId(node, isStatement, optionalId);\n\n      if (this.isRelational(\"<\")) {\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n      }\n    }\n\n    parseClassMember(classBody, member, state) {\n      const pos = this.state.start;\n\n      if (this.isContextual(\"declare\")) {\n        if (this.parseClassMemberFromModifier(classBody, member)) {\n          return;\n        }\n\n        member.declare = true;\n      }\n\n      super.parseClassMember(classBody, member, state);\n\n      if (member.declare) {\n        if (member.type !== \"ClassProperty\" && member.type !== \"ClassPrivateProperty\") {\n          this.raise(pos, FlowErrors.DeclareClassElement);\n        } else if (member.value) {\n          this.raise(member.value.start, FlowErrors.DeclareClassFieldInitializer);\n        }\n      }\n    }\n\n    getTokenFromCode(code) {\n      const next = this.input.charCodeAt(this.state.pos + 1);\n\n      if (code === 123 && next === 124) {\n        return this.finishOp(types.braceBarL, 2);\n      } else if (this.state.inType && (code === 62 || code === 60)) {\n        return this.finishOp(types.relational, 1);\n      } else if (this.state.inType && code === 63) {\n        return this.finishOp(types.question, 1);\n      } else if (isIteratorStart(code, next)) {\n        this.state.isIterator = true;\n        return super.readWord();\n      } else {\n        return super.getTokenFromCode(code);\n      }\n    }\n\n    isAssignable(node, isBinding) {\n      switch (node.type) {\n        case \"Identifier\":\n        case \"ObjectPattern\":\n        case \"ArrayPattern\":\n        case \"AssignmentPattern\":\n          return true;\n\n        case \"ObjectExpression\":\n          {\n            const last = node.properties.length - 1;\n            return node.properties.every((prop, i) => {\n              return prop.type !== \"ObjectMethod\" && (i === last || prop.type === \"SpreadElement\") && this.isAssignable(prop);\n            });\n          }\n\n        case \"ObjectProperty\":\n          return this.isAssignable(node.value);\n\n        case \"SpreadElement\":\n          return this.isAssignable(node.argument);\n\n        case \"ArrayExpression\":\n          return node.elements.every(element => this.isAssignable(element));\n\n        case \"AssignmentExpression\":\n          return node.operator === \"=\";\n\n        case \"ParenthesizedExpression\":\n        case \"TypeCastExpression\":\n          return this.isAssignable(node.expression);\n\n        case \"MemberExpression\":\n        case \"OptionalMemberExpression\":\n          return !isBinding;\n\n        default:\n          return false;\n      }\n    }\n\n    toAssignable(node, isLHS = false) {\n      if (node.type === \"TypeCastExpression\") {\n        return super.toAssignable(this.typeCastToParameter(node), isLHS);\n      } else {\n        return super.toAssignable(node, isLHS);\n      }\n    }\n\n    toAssignableList(exprList, trailingCommaPos, isLHS) {\n      for (let i = 0; i < exprList.length; i++) {\n        const expr = exprList[i];\n\n        if ((expr == null ? void 0 : expr.type) === \"TypeCastExpression\") {\n          exprList[i] = this.typeCastToParameter(expr);\n        }\n      }\n\n      return super.toAssignableList(exprList, trailingCommaPos, isLHS);\n    }\n\n    toReferencedList(exprList, isParenthesizedExpr) {\n      for (let i = 0; i < exprList.length; i++) {\n        var _expr$extra;\n\n        const expr = exprList[i];\n\n        if (expr && expr.type === \"TypeCastExpression\" && !((_expr$extra = expr.extra) == null ? void 0 : _expr$extra.parenthesized) && (exprList.length > 1 || !isParenthesizedExpr)) {\n          this.raise(expr.typeAnnotation.start, FlowErrors.TypeCastInPattern);\n        }\n      }\n\n      return exprList;\n    }\n\n    parseArrayLike(close, canBePattern, isTuple, refExpressionErrors) {\n      const node = super.parseArrayLike(close, canBePattern, isTuple, refExpressionErrors);\n\n      if (canBePattern && !this.state.maybeInArrowParameters) {\n        this.toReferencedList(node.elements);\n      }\n\n      return node;\n    }\n\n    checkLVal(expr, ...args) {\n      if (expr.type !== \"TypeCastExpression\") {\n        return super.checkLVal(expr, ...args);\n      }\n    }\n\n    parseClassProperty(node) {\n      if (this.match(types.colon)) {\n        node.typeAnnotation = this.flowParseTypeAnnotation();\n      }\n\n      return super.parseClassProperty(node);\n    }\n\n    parseClassPrivateProperty(node) {\n      if (this.match(types.colon)) {\n        node.typeAnnotation = this.flowParseTypeAnnotation();\n      }\n\n      return super.parseClassPrivateProperty(node);\n    }\n\n    isClassMethod() {\n      return this.isRelational(\"<\") || super.isClassMethod();\n    }\n\n    isClassProperty() {\n      return this.match(types.colon) || super.isClassProperty();\n    }\n\n    isNonstaticConstructor(method) {\n      return !this.match(types.colon) && super.isNonstaticConstructor(method);\n    }\n\n    pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper) {\n      if (method.variance) {\n        this.unexpected(method.variance.start);\n      }\n\n      delete method.variance;\n\n      if (this.isRelational(\"<\")) {\n        method.typeParameters = this.flowParseTypeParameterDeclaration();\n      }\n\n      super.pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper);\n    }\n\n    pushClassPrivateMethod(classBody, method, isGenerator, isAsync) {\n      if (method.variance) {\n        this.unexpected(method.variance.start);\n      }\n\n      delete method.variance;\n\n      if (this.isRelational(\"<\")) {\n        method.typeParameters = this.flowParseTypeParameterDeclaration();\n      }\n\n      super.pushClassPrivateMethod(classBody, method, isGenerator, isAsync);\n    }\n\n    parseClassSuper(node) {\n      super.parseClassSuper(node);\n\n      if (node.superClass && this.isRelational(\"<\")) {\n        node.superTypeParameters = this.flowParseTypeParameterInstantiation();\n      }\n\n      if (this.isContextual(\"implements\")) {\n        this.next();\n        const implemented = node.implements = [];\n\n        do {\n          const node = this.startNode();\n          node.id = this.flowParseRestrictedIdentifier(true);\n\n          if (this.isRelational(\"<\")) {\n            node.typeParameters = this.flowParseTypeParameterInstantiation();\n          } else {\n            node.typeParameters = null;\n          }\n\n          implemented.push(this.finishNode(node, \"ClassImplements\"));\n        } while (this.eat(types.comma));\n      }\n    }\n\n    parsePropertyName(node, isPrivateNameAllowed) {\n      const variance = this.flowParseVariance();\n      const key = super.parsePropertyName(node, isPrivateNameAllowed);\n      node.variance = variance;\n      return key;\n    }\n\n    parseObjPropValue(prop, startPos, startLoc, isGenerator, isAsync, isPattern, isAccessor, refExpressionErrors) {\n      if (prop.variance) {\n        this.unexpected(prop.variance.start);\n      }\n\n      delete prop.variance;\n      let typeParameters;\n\n      if (this.isRelational(\"<\") && !isAccessor) {\n        typeParameters = this.flowParseTypeParameterDeclaration();\n        if (!this.match(types.parenL)) this.unexpected();\n      }\n\n      super.parseObjPropValue(prop, startPos, startLoc, isGenerator, isAsync, isPattern, isAccessor, refExpressionErrors);\n\n      if (typeParameters) {\n        (prop.value || prop).typeParameters = typeParameters;\n      }\n    }\n\n    parseAssignableListItemTypes(param) {\n      if (this.eat(types.question)) {\n        if (param.type !== \"Identifier\") {\n          this.raise(param.start, FlowErrors.OptionalBindingPattern);\n        }\n\n        param.optional = true;\n      }\n\n      if (this.match(types.colon)) {\n        param.typeAnnotation = this.flowParseTypeAnnotation();\n      }\n\n      this.resetEndLocation(param);\n      return param;\n    }\n\n    parseMaybeDefault(startPos, startLoc, left) {\n      const node = super.parseMaybeDefault(startPos, startLoc, left);\n\n      if (node.type === \"AssignmentPattern\" && node.typeAnnotation && node.right.start < node.typeAnnotation.start) {\n        this.raise(node.typeAnnotation.start, FlowErrors.TypeBeforeInitializer);\n      }\n\n      return node;\n    }\n\n    shouldParseDefaultImport(node) {\n      if (!hasTypeImportKind(node)) {\n        return super.shouldParseDefaultImport(node);\n      }\n\n      return isMaybeDefaultImport(this.state);\n    }\n\n    parseImportSpecifierLocal(node, specifier, type, contextDescription) {\n      specifier.local = hasTypeImportKind(node) ? this.flowParseRestrictedIdentifier(true, true) : this.parseIdentifier();\n      this.checkLVal(specifier.local, contextDescription, BIND_LEXICAL);\n      node.specifiers.push(this.finishNode(specifier, type));\n    }\n\n    maybeParseDefaultImportSpecifier(node) {\n      node.importKind = \"value\";\n      let kind = null;\n\n      if (this.match(types._typeof)) {\n        kind = \"typeof\";\n      } else if (this.isContextual(\"type\")) {\n        kind = \"type\";\n      }\n\n      if (kind) {\n        const lh = this.lookahead();\n\n        if (kind === \"type\" && lh.type === types.star) {\n          this.unexpected(lh.start);\n        }\n\n        if (isMaybeDefaultImport(lh) || lh.type === types.braceL || lh.type === types.star) {\n          this.next();\n          node.importKind = kind;\n        }\n      }\n\n      return super.maybeParseDefaultImportSpecifier(node);\n    }\n\n    parseImportSpecifier(node) {\n      const specifier = this.startNode();\n      const firstIdentLoc = this.state.start;\n      const firstIdent = this.parseModuleExportName();\n      let specifierTypeKind = null;\n\n      if (firstIdent.type === \"Identifier\") {\n        if (firstIdent.name === \"type\") {\n          specifierTypeKind = \"type\";\n        } else if (firstIdent.name === \"typeof\") {\n          specifierTypeKind = \"typeof\";\n        }\n      }\n\n      let isBinding = false;\n\n      if (this.isContextual(\"as\") && !this.isLookaheadContextual(\"as\")) {\n        const as_ident = this.parseIdentifier(true);\n\n        if (specifierTypeKind !== null && !this.match(types.name) && !this.state.type.keyword) {\n          specifier.imported = as_ident;\n          specifier.importKind = specifierTypeKind;\n          specifier.local = as_ident.__clone();\n        } else {\n          specifier.imported = firstIdent;\n          specifier.importKind = null;\n          specifier.local = this.parseIdentifier();\n        }\n      } else if (specifierTypeKind !== null && (this.match(types.name) || this.state.type.keyword)) {\n        specifier.imported = this.parseIdentifier(true);\n        specifier.importKind = specifierTypeKind;\n\n        if (this.eatContextual(\"as\")) {\n          specifier.local = this.parseIdentifier();\n        } else {\n          isBinding = true;\n          specifier.local = specifier.imported.__clone();\n        }\n      } else {\n        if (firstIdent.type === \"StringLiteral\") {\n          throw this.raise(specifier.start, ErrorMessages.ImportBindingIsString, firstIdent.value);\n        }\n\n        isBinding = true;\n        specifier.imported = firstIdent;\n        specifier.importKind = null;\n        specifier.local = specifier.imported.__clone();\n      }\n\n      const nodeIsTypeImport = hasTypeImportKind(node);\n      const specifierIsTypeImport = hasTypeImportKind(specifier);\n\n      if (nodeIsTypeImport && specifierIsTypeImport) {\n        this.raise(firstIdentLoc, FlowErrors.ImportTypeShorthandOnlyInPureImport);\n      }\n\n      if (nodeIsTypeImport || specifierIsTypeImport) {\n        this.checkReservedType(specifier.local.name, specifier.local.start, true);\n      }\n\n      if (isBinding && !nodeIsTypeImport && !specifierIsTypeImport) {\n        this.checkReservedWord(specifier.local.name, specifier.start, true, true);\n      }\n\n      this.checkLVal(specifier.local, \"import specifier\", BIND_LEXICAL);\n      node.specifiers.push(this.finishNode(specifier, \"ImportSpecifier\"));\n    }\n\n    parseFunctionParams(node, allowModifiers) {\n      const kind = node.kind;\n\n      if (kind !== \"get\" && kind !== \"set\" && this.isRelational(\"<\")) {\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n      }\n\n      super.parseFunctionParams(node, allowModifiers);\n    }\n\n    parseVarId(decl, kind) {\n      super.parseVarId(decl, kind);\n\n      if (this.match(types.colon)) {\n        decl.id.typeAnnotation = this.flowParseTypeAnnotation();\n        this.resetEndLocation(decl.id);\n      }\n    }\n\n    parseAsyncArrowFromCallExpression(node, call) {\n      if (this.match(types.colon)) {\n        const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n        this.state.noAnonFunctionType = true;\n        node.returnType = this.flowParseTypeAnnotation();\n        this.state.noAnonFunctionType = oldNoAnonFunctionType;\n      }\n\n      return super.parseAsyncArrowFromCallExpression(node, call);\n    }\n\n    shouldParseAsyncArrow() {\n      return this.match(types.colon) || super.shouldParseAsyncArrow();\n    }\n\n    parseMaybeAssign(refExpressionErrors, afterLeftParse, refNeedsArrowPos) {\n      var _jsx;\n\n      let state = null;\n      let jsx;\n\n      if (this.hasPlugin(\"jsx\") && (this.match(types.jsxTagStart) || this.isRelational(\"<\"))) {\n        state = this.state.clone();\n        jsx = this.tryParse(() => super.parseMaybeAssign(refExpressionErrors, afterLeftParse, refNeedsArrowPos), state);\n        if (!jsx.error) return jsx.node;\n        const {\n          context\n        } = this.state;\n\n        if (context[context.length - 1] === types$1.j_oTag) {\n          context.length -= 2;\n        } else if (context[context.length - 1] === types$1.j_expr) {\n          context.length -= 1;\n        }\n      }\n\n      if (((_jsx = jsx) == null ? void 0 : _jsx.error) || this.isRelational(\"<\")) {\n        var _jsx2, _jsx3;\n\n        state = state || this.state.clone();\n        let typeParameters;\n        const arrow = this.tryParse(abort => {\n          var _arrowExpression$extr;\n\n          typeParameters = this.flowParseTypeParameterDeclaration();\n          const arrowExpression = this.forwardNoArrowParamsConversionAt(typeParameters, () => {\n            const result = super.parseMaybeAssign(refExpressionErrors, afterLeftParse, refNeedsArrowPos);\n            this.resetStartLocationFromNode(result, typeParameters);\n            return result;\n          });\n\n          if (arrowExpression.type !== \"ArrowFunctionExpression\" && ((_arrowExpression$extr = arrowExpression.extra) == null ? void 0 : _arrowExpression$extr.parenthesized)) {\n            abort();\n          }\n\n          const expr = this.maybeUnwrapTypeCastExpression(arrowExpression);\n          expr.typeParameters = typeParameters;\n          this.resetStartLocationFromNode(expr, typeParameters);\n          return arrowExpression;\n        }, state);\n        let arrowExpression = null;\n\n        if (arrow.node && this.maybeUnwrapTypeCastExpression(arrow.node).type === \"ArrowFunctionExpression\") {\n          if (!arrow.error && !arrow.aborted) {\n            if (arrow.node.async) {\n              this.raise(typeParameters.start, FlowErrors.UnexpectedTypeParameterBeforeAsyncArrowFunction);\n            }\n\n            return arrow.node;\n          }\n\n          arrowExpression = arrow.node;\n        }\n\n        if ((_jsx2 = jsx) == null ? void 0 : _jsx2.node) {\n          this.state = jsx.failState;\n          return jsx.node;\n        }\n\n        if (arrowExpression) {\n          this.state = arrow.failState;\n          return arrowExpression;\n        }\n\n        if ((_jsx3 = jsx) == null ? void 0 : _jsx3.thrown) throw jsx.error;\n        if (arrow.thrown) throw arrow.error;\n        throw this.raise(typeParameters.start, FlowErrors.UnexpectedTokenAfterTypeParameter);\n      }\n\n      return super.parseMaybeAssign(refExpressionErrors, afterLeftParse, refNeedsArrowPos);\n    }\n\n    parseArrow(node) {\n      if (this.match(types.colon)) {\n        const result = this.tryParse(() => {\n          const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n          this.state.noAnonFunctionType = true;\n          const typeNode = this.startNode();\n          [typeNode.typeAnnotation, node.predicate] = this.flowParseTypeAndPredicateInitialiser();\n          this.state.noAnonFunctionType = oldNoAnonFunctionType;\n          if (this.canInsertSemicolon()) this.unexpected();\n          if (!this.match(types.arrow)) this.unexpected();\n          return typeNode;\n        });\n        if (result.thrown) return null;\n        if (result.error) this.state = result.failState;\n        node.returnType = result.node.typeAnnotation ? this.finishNode(result.node, \"TypeAnnotation\") : null;\n      }\n\n      return super.parseArrow(node);\n    }\n\n    shouldParseArrow() {\n      return this.match(types.colon) || super.shouldParseArrow();\n    }\n\n    setArrowFunctionParameters(node, params) {\n      if (this.state.noArrowParamsConversionAt.indexOf(node.start) !== -1) {\n        node.params = params;\n      } else {\n        super.setArrowFunctionParameters(node, params);\n      }\n    }\n\n    checkParams(node, allowDuplicates, isArrowFunction) {\n      if (isArrowFunction && this.state.noArrowParamsConversionAt.indexOf(node.start) !== -1) {\n        return;\n      }\n\n      return super.checkParams(...arguments);\n    }\n\n    parseParenAndDistinguishExpression(canBeArrow) {\n      return super.parseParenAndDistinguishExpression(canBeArrow && this.state.noArrowAt.indexOf(this.state.start) === -1);\n    }\n\n    parseSubscripts(base, startPos, startLoc, noCalls) {\n      if (base.type === \"Identifier\" && base.name === \"async\" && this.state.noArrowAt.indexOf(startPos) !== -1) {\n        this.next();\n        const node = this.startNodeAt(startPos, startLoc);\n        node.callee = base;\n        node.arguments = this.parseCallExpressionArguments(types.parenR, false);\n        base = this.finishNode(node, \"CallExpression\");\n      } else if (base.type === \"Identifier\" && base.name === \"async\" && this.isRelational(\"<\")) {\n        const state = this.state.clone();\n        const arrow = this.tryParse(abort => this.parseAsyncArrowWithTypeParameters(startPos, startLoc) || abort(), state);\n        if (!arrow.error && !arrow.aborted) return arrow.node;\n        const result = this.tryParse(() => super.parseSubscripts(base, startPos, startLoc, noCalls), state);\n        if (result.node && !result.error) return result.node;\n\n        if (arrow.node) {\n          this.state = arrow.failState;\n          return arrow.node;\n        }\n\n        if (result.node) {\n          this.state = result.failState;\n          return result.node;\n        }\n\n        throw arrow.error || result.error;\n      }\n\n      return super.parseSubscripts(base, startPos, startLoc, noCalls);\n    }\n\n    parseSubscript(base, startPos, startLoc, noCalls, subscriptState) {\n      if (this.match(types.questionDot) && this.isLookaheadToken_lt()) {\n        subscriptState.optionalChainMember = true;\n\n        if (noCalls) {\n          subscriptState.stop = true;\n          return base;\n        }\n\n        this.next();\n        const node = this.startNodeAt(startPos, startLoc);\n        node.callee = base;\n        node.typeArguments = this.flowParseTypeParameterInstantiation();\n        this.expect(types.parenL);\n        node.arguments = this.parseCallExpressionArguments(types.parenR, false);\n        node.optional = true;\n        return this.finishCallExpression(node, true);\n      } else if (!noCalls && this.shouldParseTypes() && this.isRelational(\"<\")) {\n        const node = this.startNodeAt(startPos, startLoc);\n        node.callee = base;\n        const result = this.tryParse(() => {\n          node.typeArguments = this.flowParseTypeParameterInstantiationCallOrNew();\n          this.expect(types.parenL);\n          node.arguments = this.parseCallExpressionArguments(types.parenR, false);\n          if (subscriptState.optionalChainMember) node.optional = false;\n          return this.finishCallExpression(node, subscriptState.optionalChainMember);\n        });\n\n        if (result.node) {\n          if (result.error) this.state = result.failState;\n          return result.node;\n        }\n      }\n\n      return super.parseSubscript(base, startPos, startLoc, noCalls, subscriptState);\n    }\n\n    parseNewArguments(node) {\n      let targs = null;\n\n      if (this.shouldParseTypes() && this.isRelational(\"<\")) {\n        targs = this.tryParse(() => this.flowParseTypeParameterInstantiationCallOrNew()).node;\n      }\n\n      node.typeArguments = targs;\n      super.parseNewArguments(node);\n    }\n\n    parseAsyncArrowWithTypeParameters(startPos, startLoc) {\n      const node = this.startNodeAt(startPos, startLoc);\n      this.parseFunctionParams(node);\n      if (!this.parseArrow(node)) return;\n      return this.parseArrowExpression(node, undefined, true);\n    }\n\n    readToken_mult_modulo(code) {\n      const next = this.input.charCodeAt(this.state.pos + 1);\n\n      if (code === 42 && next === 47 && this.state.hasFlowComment) {\n        this.state.hasFlowComment = false;\n        this.state.pos += 2;\n        this.nextToken();\n        return;\n      }\n\n      super.readToken_mult_modulo(code);\n    }\n\n    readToken_pipe_amp(code) {\n      const next = this.input.charCodeAt(this.state.pos + 1);\n\n      if (code === 124 && next === 125) {\n        this.finishOp(types.braceBarR, 2);\n        return;\n      }\n\n      super.readToken_pipe_amp(code);\n    }\n\n    parseTopLevel(file, program) {\n      const fileNode = super.parseTopLevel(file, program);\n\n      if (this.state.hasFlowComment) {\n        this.raise(this.state.pos, FlowErrors.UnterminatedFlowComment);\n      }\n\n      return fileNode;\n    }\n\n    skipBlockComment() {\n      if (this.hasPlugin(\"flowComments\") && this.skipFlowComment()) {\n        if (this.state.hasFlowComment) {\n          this.unexpected(null, FlowErrors.NestedFlowComment);\n        }\n\n        this.hasFlowCommentCompletion();\n        this.state.pos += this.skipFlowComment();\n        this.state.hasFlowComment = true;\n        return;\n      }\n\n      if (this.state.hasFlowComment) {\n        const end = this.input.indexOf(\"*-/\", this.state.pos += 2);\n\n        if (end === -1) {\n          throw this.raise(this.state.pos - 2, ErrorMessages.UnterminatedComment);\n        }\n\n        this.state.pos = end + 3;\n        return;\n      }\n\n      super.skipBlockComment();\n    }\n\n    skipFlowComment() {\n      const {\n        pos\n      } = this.state;\n      let shiftToFirstNonWhiteSpace = 2;\n\n      while ([32, 9].includes(this.input.charCodeAt(pos + shiftToFirstNonWhiteSpace))) {\n        shiftToFirstNonWhiteSpace++;\n      }\n\n      const ch2 = this.input.charCodeAt(shiftToFirstNonWhiteSpace + pos);\n      const ch3 = this.input.charCodeAt(shiftToFirstNonWhiteSpace + pos + 1);\n\n      if (ch2 === 58 && ch3 === 58) {\n        return shiftToFirstNonWhiteSpace + 2;\n      }\n\n      if (this.input.slice(shiftToFirstNonWhiteSpace + pos, shiftToFirstNonWhiteSpace + pos + 12) === \"flow-include\") {\n        return shiftToFirstNonWhiteSpace + 12;\n      }\n\n      if (ch2 === 58 && ch3 !== 58) {\n        return shiftToFirstNonWhiteSpace;\n      }\n\n      return false;\n    }\n\n    hasFlowCommentCompletion() {\n      const end = this.input.indexOf(\"*/\", this.state.pos);\n\n      if (end === -1) {\n        throw this.raise(this.state.pos, ErrorMessages.UnterminatedComment);\n      }\n    }\n\n    flowEnumErrorBooleanMemberNotInitialized(pos, {\n      enumName,\n      memberName\n    }) {\n      this.raise(pos, FlowErrors.EnumBooleanMemberNotInitialized, memberName, enumName);\n    }\n\n    flowEnumErrorInvalidMemberName(pos, {\n      enumName,\n      memberName\n    }) {\n      const suggestion = memberName[0].toUpperCase() + memberName.slice(1);\n      this.raise(pos, FlowErrors.EnumInvalidMemberName, memberName, suggestion, enumName);\n    }\n\n    flowEnumErrorDuplicateMemberName(pos, {\n      enumName,\n      memberName\n    }) {\n      this.raise(pos, FlowErrors.EnumDuplicateMemberName, memberName, enumName);\n    }\n\n    flowEnumErrorInconsistentMemberValues(pos, {\n      enumName\n    }) {\n      this.raise(pos, FlowErrors.EnumInconsistentMemberValues, enumName);\n    }\n\n    flowEnumErrorInvalidExplicitType(pos, {\n      enumName,\n      suppliedType\n    }) {\n      return this.raise(pos, suppliedType === null ? FlowErrors.EnumInvalidExplicitTypeUnknownSupplied : FlowErrors.EnumInvalidExplicitType, enumName, suppliedType);\n    }\n\n    flowEnumErrorInvalidMemberInitializer(pos, {\n      enumName,\n      explicitType,\n      memberName\n    }) {\n      let message = null;\n\n      switch (explicitType) {\n        case \"boolean\":\n        case \"number\":\n        case \"string\":\n          message = FlowErrors.EnumInvalidMemberInitializerPrimaryType;\n          break;\n\n        case \"symbol\":\n          message = FlowErrors.EnumInvalidMemberInitializerSymbolType;\n          break;\n\n        default:\n          message = FlowErrors.EnumInvalidMemberInitializerUnknownType;\n      }\n\n      return this.raise(pos, message, enumName, memberName, explicitType);\n    }\n\n    flowEnumErrorNumberMemberNotInitialized(pos, {\n      enumName,\n      memberName\n    }) {\n      this.raise(pos, FlowErrors.EnumNumberMemberNotInitialized, enumName, memberName);\n    }\n\n    flowEnumErrorStringMemberInconsistentlyInitailized(pos, {\n      enumName\n    }) {\n      this.raise(pos, FlowErrors.EnumStringMemberInconsistentlyInitailized, enumName);\n    }\n\n    flowEnumMemberInit() {\n      const startPos = this.state.start;\n\n      const endOfInit = () => this.match(types.comma) || this.match(types.braceR);\n\n      switch (this.state.type) {\n        case types.num:\n          {\n            const literal = this.parseLiteral(this.state.value, \"NumericLiteral\");\n\n            if (endOfInit()) {\n              return {\n                type: \"number\",\n                pos: literal.start,\n                value: literal\n              };\n            }\n\n            return {\n              type: \"invalid\",\n              pos: startPos\n            };\n          }\n\n        case types.string:\n          {\n            const literal = this.parseLiteral(this.state.value, \"StringLiteral\");\n\n            if (endOfInit()) {\n              return {\n                type: \"string\",\n                pos: literal.start,\n                value: literal\n              };\n            }\n\n            return {\n              type: \"invalid\",\n              pos: startPos\n            };\n          }\n\n        case types._true:\n        case types._false:\n          {\n            const literal = this.parseBooleanLiteral();\n\n            if (endOfInit()) {\n              return {\n                type: \"boolean\",\n                pos: literal.start,\n                value: literal\n              };\n            }\n\n            return {\n              type: \"invalid\",\n              pos: startPos\n            };\n          }\n\n        default:\n          return {\n            type: \"invalid\",\n            pos: startPos\n          };\n      }\n    }\n\n    flowEnumMemberRaw() {\n      const pos = this.state.start;\n      const id = this.parseIdentifier(true);\n      const init = this.eat(types.eq) ? this.flowEnumMemberInit() : {\n        type: \"none\",\n        pos\n      };\n      return {\n        id,\n        init\n      };\n    }\n\n    flowEnumCheckExplicitTypeMismatch(pos, context, expectedType) {\n      const {\n        explicitType\n      } = context;\n\n      if (explicitType === null) {\n        return;\n      }\n\n      if (explicitType !== expectedType) {\n        this.flowEnumErrorInvalidMemberInitializer(pos, context);\n      }\n    }\n\n    flowEnumMembers({\n      enumName,\n      explicitType\n    }) {\n      const seenNames = new Set();\n      const members = {\n        booleanMembers: [],\n        numberMembers: [],\n        stringMembers: [],\n        defaultedMembers: []\n      };\n\n      while (!this.match(types.braceR)) {\n        const memberNode = this.startNode();\n        const {\n          id,\n          init\n        } = this.flowEnumMemberRaw();\n        const memberName = id.name;\n\n        if (memberName === \"\") {\n          continue;\n        }\n\n        if (/^[a-z]/.test(memberName)) {\n          this.flowEnumErrorInvalidMemberName(id.start, {\n            enumName,\n            memberName\n          });\n        }\n\n        if (seenNames.has(memberName)) {\n          this.flowEnumErrorDuplicateMemberName(id.start, {\n            enumName,\n            memberName\n          });\n        }\n\n        seenNames.add(memberName);\n        const context = {\n          enumName,\n          explicitType,\n          memberName\n        };\n        memberNode.id = id;\n\n        switch (init.type) {\n          case \"boolean\":\n            {\n              this.flowEnumCheckExplicitTypeMismatch(init.pos, context, \"boolean\");\n              memberNode.init = init.value;\n              members.booleanMembers.push(this.finishNode(memberNode, \"EnumBooleanMember\"));\n              break;\n            }\n\n          case \"number\":\n            {\n              this.flowEnumCheckExplicitTypeMismatch(init.pos, context, \"number\");\n              memberNode.init = init.value;\n              members.numberMembers.push(this.finishNode(memberNode, \"EnumNumberMember\"));\n              break;\n            }\n\n          case \"string\":\n            {\n              this.flowEnumCheckExplicitTypeMismatch(init.pos, context, \"string\");\n              memberNode.init = init.value;\n              members.stringMembers.push(this.finishNode(memberNode, \"EnumStringMember\"));\n              break;\n            }\n\n          case \"invalid\":\n            {\n              throw this.flowEnumErrorInvalidMemberInitializer(init.pos, context);\n            }\n\n          case \"none\":\n            {\n              switch (explicitType) {\n                case \"boolean\":\n                  this.flowEnumErrorBooleanMemberNotInitialized(init.pos, context);\n                  break;\n\n                case \"number\":\n                  this.flowEnumErrorNumberMemberNotInitialized(init.pos, context);\n                  break;\n\n                default:\n                  members.defaultedMembers.push(this.finishNode(memberNode, \"EnumDefaultedMember\"));\n              }\n            }\n        }\n\n        if (!this.match(types.braceR)) {\n          this.expect(types.comma);\n        }\n      }\n\n      return members;\n    }\n\n    flowEnumStringMembers(initializedMembers, defaultedMembers, {\n      enumName\n    }) {\n      if (initializedMembers.length === 0) {\n        return defaultedMembers;\n      } else if (defaultedMembers.length === 0) {\n        return initializedMembers;\n      } else if (defaultedMembers.length > initializedMembers.length) {\n        for (let _i = 0; _i < initializedMembers.length; _i++) {\n          const member = initializedMembers[_i];\n          this.flowEnumErrorStringMemberInconsistentlyInitailized(member.start, {\n            enumName\n          });\n        }\n\n        return defaultedMembers;\n      } else {\n        for (let _i2 = 0; _i2 < defaultedMembers.length; _i2++) {\n          const member = defaultedMembers[_i2];\n          this.flowEnumErrorStringMemberInconsistentlyInitailized(member.start, {\n            enumName\n          });\n        }\n\n        return initializedMembers;\n      }\n    }\n\n    flowEnumParseExplicitType({\n      enumName\n    }) {\n      if (this.eatContextual(\"of\")) {\n        if (!this.match(types.name)) {\n          throw this.flowEnumErrorInvalidExplicitType(this.state.start, {\n            enumName,\n            suppliedType: null\n          });\n        }\n\n        const {\n          value\n        } = this.state;\n        this.next();\n\n        if (value !== \"boolean\" && value !== \"number\" && value !== \"string\" && value !== \"symbol\") {\n          this.flowEnumErrorInvalidExplicitType(this.state.start, {\n            enumName,\n            suppliedType: value\n          });\n        }\n\n        return value;\n      }\n\n      return null;\n    }\n\n    flowEnumBody(node, {\n      enumName,\n      nameLoc\n    }) {\n      const explicitType = this.flowEnumParseExplicitType({\n        enumName\n      });\n      this.expect(types.braceL);\n      const members = this.flowEnumMembers({\n        enumName,\n        explicitType\n      });\n\n      switch (explicitType) {\n        case \"boolean\":\n          node.explicitType = true;\n          node.members = members.booleanMembers;\n          this.expect(types.braceR);\n          return this.finishNode(node, \"EnumBooleanBody\");\n\n        case \"number\":\n          node.explicitType = true;\n          node.members = members.numberMembers;\n          this.expect(types.braceR);\n          return this.finishNode(node, \"EnumNumberBody\");\n\n        case \"string\":\n          node.explicitType = true;\n          node.members = this.flowEnumStringMembers(members.stringMembers, members.defaultedMembers, {\n            enumName\n          });\n          this.expect(types.braceR);\n          return this.finishNode(node, \"EnumStringBody\");\n\n        case \"symbol\":\n          node.members = members.defaultedMembers;\n          this.expect(types.braceR);\n          return this.finishNode(node, \"EnumSymbolBody\");\n\n        default:\n          {\n            const empty = () => {\n              node.members = [];\n              this.expect(types.braceR);\n              return this.finishNode(node, \"EnumStringBody\");\n            };\n\n            node.explicitType = false;\n            const boolsLen = members.booleanMembers.length;\n            const numsLen = members.numberMembers.length;\n            const strsLen = members.stringMembers.length;\n            const defaultedLen = members.defaultedMembers.length;\n\n            if (!boolsLen && !numsLen && !strsLen && !defaultedLen) {\n              return empty();\n            } else if (!boolsLen && !numsLen) {\n              node.members = this.flowEnumStringMembers(members.stringMembers, members.defaultedMembers, {\n                enumName\n              });\n              this.expect(types.braceR);\n              return this.finishNode(node, \"EnumStringBody\");\n            } else if (!numsLen && !strsLen && boolsLen >= defaultedLen) {\n              for (let _i3 = 0, _members$defaultedMem = members.defaultedMembers; _i3 < _members$defaultedMem.length; _i3++) {\n                const member = _members$defaultedMem[_i3];\n                this.flowEnumErrorBooleanMemberNotInitialized(member.start, {\n                  enumName,\n                  memberName: member.id.name\n                });\n              }\n\n              node.members = members.booleanMembers;\n              this.expect(types.braceR);\n              return this.finishNode(node, \"EnumBooleanBody\");\n            } else if (!boolsLen && !strsLen && numsLen >= defaultedLen) {\n              for (let _i4 = 0, _members$defaultedMem2 = members.defaultedMembers; _i4 < _members$defaultedMem2.length; _i4++) {\n                const member = _members$defaultedMem2[_i4];\n                this.flowEnumErrorNumberMemberNotInitialized(member.start, {\n                  enumName,\n                  memberName: member.id.name\n                });\n              }\n\n              node.members = members.numberMembers;\n              this.expect(types.braceR);\n              return this.finishNode(node, \"EnumNumberBody\");\n            } else {\n              this.flowEnumErrorInconsistentMemberValues(nameLoc, {\n                enumName\n              });\n              return empty();\n            }\n          }\n      }\n    }\n\n    flowParseEnumDeclaration(node) {\n      const id = this.parseIdentifier();\n      node.id = id;\n      node.body = this.flowEnumBody(this.startNode(), {\n        enumName: id.name,\n        nameLoc: id.start\n      });\n      return this.finishNode(node, \"EnumDeclaration\");\n    }\n\n    updateContext(prevType) {\n      if (this.match(types.name) && this.state.value === \"of\" && prevType === types.name && this.input.slice(this.state.lastTokStart, this.state.lastTokEnd) === \"interface\") {\n        this.state.exprAllowed = false;\n      } else {\n        super.updateContext(prevType);\n      }\n    }\n\n    isLookaheadToken_lt() {\n      const next = this.nextTokenStart();\n\n      if (this.input.charCodeAt(next) === 60) {\n        const afterNext = this.input.charCodeAt(next + 1);\n        return afterNext !== 60 && afterNext !== 61;\n      }\n\n      return false;\n    }\n\n    maybeUnwrapTypeCastExpression(node) {\n      return node.type === \"TypeCastExpression\" ? node.expression : node;\n    }\n\n  }, _temp;\n});\n\nconst entities = {\n  quot: \"\\u0022\",\n  amp: \"&\",\n  apos: \"\\u0027\",\n  lt: \"<\",\n  gt: \">\",\n  nbsp: \"\\u00A0\",\n  iexcl: \"\\u00A1\",\n  cent: \"\\u00A2\",\n  pound: \"\\u00A3\",\n  curren: \"\\u00A4\",\n  yen: \"\\u00A5\",\n  brvbar: \"\\u00A6\",\n  sect: \"\\u00A7\",\n  uml: \"\\u00A8\",\n  copy: \"\\u00A9\",\n  ordf: \"\\u00AA\",\n  laquo: \"\\u00AB\",\n  not: \"\\u00AC\",\n  shy: \"\\u00AD\",\n  reg: \"\\u00AE\",\n  macr: \"\\u00AF\",\n  deg: \"\\u00B0\",\n  plusmn: \"\\u00B1\",\n  sup2: \"\\u00B2\",\n  sup3: \"\\u00B3\",\n  acute: \"\\u00B4\",\n  micro: \"\\u00B5\",\n  para: \"\\u00B6\",\n  middot: \"\\u00B7\",\n  cedil: \"\\u00B8\",\n  sup1: \"\\u00B9\",\n  ordm: \"\\u00BA\",\n  raquo: \"\\u00BB\",\n  frac14: \"\\u00BC\",\n  frac12: \"\\u00BD\",\n  frac34: \"\\u00BE\",\n  iquest: \"\\u00BF\",\n  Agrave: \"\\u00C0\",\n  Aacute: \"\\u00C1\",\n  Acirc: \"\\u00C2\",\n  Atilde: \"\\u00C3\",\n  Auml: \"\\u00C4\",\n  Aring: \"\\u00C5\",\n  AElig: \"\\u00C6\",\n  Ccedil: \"\\u00C7\",\n  Egrave: \"\\u00C8\",\n  Eacute: \"\\u00C9\",\n  Ecirc: \"\\u00CA\",\n  Euml: \"\\u00CB\",\n  Igrave: \"\\u00CC\",\n  Iacute: \"\\u00CD\",\n  Icirc: \"\\u00CE\",\n  Iuml: \"\\u00CF\",\n  ETH: \"\\u00D0\",\n  Ntilde: \"\\u00D1\",\n  Ograve: \"\\u00D2\",\n  Oacute: \"\\u00D3\",\n  Ocirc: \"\\u00D4\",\n  Otilde: \"\\u00D5\",\n  Ouml: \"\\u00D6\",\n  times: \"\\u00D7\",\n  Oslash: \"\\u00D8\",\n  Ugrave: \"\\u00D9\",\n  Uacute: \"\\u00DA\",\n  Ucirc: \"\\u00DB\",\n  Uuml: \"\\u00DC\",\n  Yacute: \"\\u00DD\",\n  THORN: \"\\u00DE\",\n  szlig: \"\\u00DF\",\n  agrave: \"\\u00E0\",\n  aacute: \"\\u00E1\",\n  acirc: \"\\u00E2\",\n  atilde: \"\\u00E3\",\n  auml: \"\\u00E4\",\n  aring: \"\\u00E5\",\n  aelig: \"\\u00E6\",\n  ccedil: \"\\u00E7\",\n  egrave: \"\\u00E8\",\n  eacute: \"\\u00E9\",\n  ecirc: \"\\u00EA\",\n  euml: \"\\u00EB\",\n  igrave: \"\\u00EC\",\n  iacute: \"\\u00ED\",\n  icirc: \"\\u00EE\",\n  iuml: \"\\u00EF\",\n  eth: \"\\u00F0\",\n  ntilde: \"\\u00F1\",\n  ograve: \"\\u00F2\",\n  oacute: \"\\u00F3\",\n  ocirc: \"\\u00F4\",\n  otilde: \"\\u00F5\",\n  ouml: \"\\u00F6\",\n  divide: \"\\u00F7\",\n  oslash: \"\\u00F8\",\n  ugrave: \"\\u00F9\",\n  uacute: \"\\u00FA\",\n  ucirc: \"\\u00FB\",\n  uuml: \"\\u00FC\",\n  yacute: \"\\u00FD\",\n  thorn: \"\\u00FE\",\n  yuml: \"\\u00FF\",\n  OElig: \"\\u0152\",\n  oelig: \"\\u0153\",\n  Scaron: \"\\u0160\",\n  scaron: \"\\u0161\",\n  Yuml: \"\\u0178\",\n  fnof: \"\\u0192\",\n  circ: \"\\u02C6\",\n  tilde: \"\\u02DC\",\n  Alpha: \"\\u0391\",\n  Beta: \"\\u0392\",\n  Gamma: \"\\u0393\",\n  Delta: \"\\u0394\",\n  Epsilon: \"\\u0395\",\n  Zeta: \"\\u0396\",\n  Eta: \"\\u0397\",\n  Theta: \"\\u0398\",\n  Iota: \"\\u0399\",\n  Kappa: \"\\u039A\",\n  Lambda: \"\\u039B\",\n  Mu: \"\\u039C\",\n  Nu: \"\\u039D\",\n  Xi: \"\\u039E\",\n  Omicron: \"\\u039F\",\n  Pi: \"\\u03A0\",\n  Rho: \"\\u03A1\",\n  Sigma: \"\\u03A3\",\n  Tau: \"\\u03A4\",\n  Upsilon: \"\\u03A5\",\n  Phi: \"\\u03A6\",\n  Chi: \"\\u03A7\",\n  Psi: \"\\u03A8\",\n  Omega: \"\\u03A9\",\n  alpha: \"\\u03B1\",\n  beta: \"\\u03B2\",\n  gamma: \"\\u03B3\",\n  delta: \"\\u03B4\",\n  epsilon: \"\\u03B5\",\n  zeta: \"\\u03B6\",\n  eta: \"\\u03B7\",\n  theta: \"\\u03B8\",\n  iota: \"\\u03B9\",\n  kappa: \"\\u03BA\",\n  lambda: \"\\u03BB\",\n  mu: \"\\u03BC\",\n  nu: \"\\u03BD\",\n  xi: \"\\u03BE\",\n  omicron: \"\\u03BF\",\n  pi: \"\\u03C0\",\n  rho: \"\\u03C1\",\n  sigmaf: \"\\u03C2\",\n  sigma: \"\\u03C3\",\n  tau: \"\\u03C4\",\n  upsilon: \"\\u03C5\",\n  phi: \"\\u03C6\",\n  chi: \"\\u03C7\",\n  psi: \"\\u03C8\",\n  omega: \"\\u03C9\",\n  thetasym: \"\\u03D1\",\n  upsih: \"\\u03D2\",\n  piv: \"\\u03D6\",\n  ensp: \"\\u2002\",\n  emsp: \"\\u2003\",\n  thinsp: \"\\u2009\",\n  zwnj: \"\\u200C\",\n  zwj: \"\\u200D\",\n  lrm: \"\\u200E\",\n  rlm: \"\\u200F\",\n  ndash: \"\\u2013\",\n  mdash: \"\\u2014\",\n  lsquo: \"\\u2018\",\n  rsquo: \"\\u2019\",\n  sbquo: \"\\u201A\",\n  ldquo: \"\\u201C\",\n  rdquo: \"\\u201D\",\n  bdquo: \"\\u201E\",\n  dagger: \"\\u2020\",\n  Dagger: \"\\u2021\",\n  bull: \"\\u2022\",\n  hellip: \"\\u2026\",\n  permil: \"\\u2030\",\n  prime: \"\\u2032\",\n  Prime: \"\\u2033\",\n  lsaquo: \"\\u2039\",\n  rsaquo: \"\\u203A\",\n  oline: \"\\u203E\",\n  frasl: \"\\u2044\",\n  euro: \"\\u20AC\",\n  image: \"\\u2111\",\n  weierp: \"\\u2118\",\n  real: \"\\u211C\",\n  trade: \"\\u2122\",\n  alefsym: \"\\u2135\",\n  larr: \"\\u2190\",\n  uarr: \"\\u2191\",\n  rarr: \"\\u2192\",\n  darr: \"\\u2193\",\n  harr: \"\\u2194\",\n  crarr: \"\\u21B5\",\n  lArr: \"\\u21D0\",\n  uArr: \"\\u21D1\",\n  rArr: \"\\u21D2\",\n  dArr: \"\\u21D3\",\n  hArr: \"\\u21D4\",\n  forall: \"\\u2200\",\n  part: \"\\u2202\",\n  exist: \"\\u2203\",\n  empty: \"\\u2205\",\n  nabla: \"\\u2207\",\n  isin: \"\\u2208\",\n  notin: \"\\u2209\",\n  ni: \"\\u220B\",\n  prod: \"\\u220F\",\n  sum: \"\\u2211\",\n  minus: \"\\u2212\",\n  lowast: \"\\u2217\",\n  radic: \"\\u221A\",\n  prop: \"\\u221D\",\n  infin: \"\\u221E\",\n  ang: \"\\u2220\",\n  and: \"\\u2227\",\n  or: \"\\u2228\",\n  cap: \"\\u2229\",\n  cup: \"\\u222A\",\n  int: \"\\u222B\",\n  there4: \"\\u2234\",\n  sim: \"\\u223C\",\n  cong: \"\\u2245\",\n  asymp: \"\\u2248\",\n  ne: \"\\u2260\",\n  equiv: \"\\u2261\",\n  le: \"\\u2264\",\n  ge: \"\\u2265\",\n  sub: \"\\u2282\",\n  sup: \"\\u2283\",\n  nsub: \"\\u2284\",\n  sube: \"\\u2286\",\n  supe: \"\\u2287\",\n  oplus: \"\\u2295\",\n  otimes: \"\\u2297\",\n  perp: \"\\u22A5\",\n  sdot: \"\\u22C5\",\n  lceil: \"\\u2308\",\n  rceil: \"\\u2309\",\n  lfloor: \"\\u230A\",\n  rfloor: \"\\u230B\",\n  lang: \"\\u2329\",\n  rang: \"\\u232A\",\n  loz: \"\\u25CA\",\n  spades: \"\\u2660\",\n  clubs: \"\\u2663\",\n  hearts: \"\\u2665\",\n  diams: \"\\u2666\"\n};\n\nconst HEX_NUMBER = /^[\\da-fA-F]+$/;\nconst DECIMAL_NUMBER = /^\\d+$/;\nconst JsxErrors = Object.freeze({\n  AttributeIsEmpty: \"JSX attributes must only be assigned a non-empty expression\",\n  MissingClosingTagFragment: \"Expected corresponding JSX closing tag for <>\",\n  MissingClosingTagElement: \"Expected corresponding JSX closing tag for <%0>\",\n  UnexpectedSequenceExpression: \"Sequence expressions cannot be directly nested inside JSX. Did you mean to wrap it in parentheses (...)?\",\n  UnsupportedJsxValue: \"JSX value should be either an expression or a quoted JSX text\",\n  UnterminatedJsxContent: \"Unterminated JSX contents\",\n  UnwrappedAdjacentJSXElements: \"Adjacent JSX elements must be wrapped in an enclosing tag. Did you want a JSX fragment <>...</>?\"\n});\ntypes$1.j_oTag = new TokContext(\"<tag\", false);\ntypes$1.j_cTag = new TokContext(\"</tag\", false);\ntypes$1.j_expr = new TokContext(\"<tag>...</tag>\", true, true);\ntypes.jsxName = new TokenType(\"jsxName\");\ntypes.jsxText = new TokenType(\"jsxText\", {\n  beforeExpr: true\n});\ntypes.jsxTagStart = new TokenType(\"jsxTagStart\", {\n  startsExpr: true\n});\ntypes.jsxTagEnd = new TokenType(\"jsxTagEnd\");\n\ntypes.jsxTagStart.updateContext = function () {\n  this.state.context.push(types$1.j_expr);\n  this.state.context.push(types$1.j_oTag);\n  this.state.exprAllowed = false;\n};\n\ntypes.jsxTagEnd.updateContext = function (prevType) {\n  const out = this.state.context.pop();\n\n  if (out === types$1.j_oTag && prevType === types.slash || out === types$1.j_cTag) {\n    this.state.context.pop();\n    this.state.exprAllowed = this.curContext() === types$1.j_expr;\n  } else {\n    this.state.exprAllowed = true;\n  }\n};\n\nfunction isFragment(object) {\n  return object ? object.type === \"JSXOpeningFragment\" || object.type === \"JSXClosingFragment\" : false;\n}\n\nfunction getQualifiedJSXName(object) {\n  if (object.type === \"JSXIdentifier\") {\n    return object.name;\n  }\n\n  if (object.type === \"JSXNamespacedName\") {\n    return object.namespace.name + \":\" + object.name.name;\n  }\n\n  if (object.type === \"JSXMemberExpression\") {\n    return getQualifiedJSXName(object.object) + \".\" + getQualifiedJSXName(object.property);\n  }\n\n  throw new Error(\"Node had unexpected type: \" + object.type);\n}\n\nvar jsx = (superClass => class extends superClass {\n  jsxReadToken() {\n    let out = \"\";\n    let chunkStart = this.state.pos;\n\n    for (;;) {\n      if (this.state.pos >= this.length) {\n        throw this.raise(this.state.start, JsxErrors.UnterminatedJsxContent);\n      }\n\n      const ch = this.input.charCodeAt(this.state.pos);\n\n      switch (ch) {\n        case 60:\n        case 123:\n          if (this.state.pos === this.state.start) {\n            if (ch === 60 && this.state.exprAllowed) {\n              ++this.state.pos;\n              return this.finishToken(types.jsxTagStart);\n            }\n\n            return super.getTokenFromCode(ch);\n          }\n\n          out += this.input.slice(chunkStart, this.state.pos);\n          return this.finishToken(types.jsxText, out);\n\n        case 38:\n          out += this.input.slice(chunkStart, this.state.pos);\n          out += this.jsxReadEntity();\n          chunkStart = this.state.pos;\n          break;\n\n        case 62:\n        case 125:\n\n        default:\n          if (isNewLine(ch)) {\n            out += this.input.slice(chunkStart, this.state.pos);\n            out += this.jsxReadNewLine(true);\n            chunkStart = this.state.pos;\n          } else {\n            ++this.state.pos;\n          }\n\n      }\n    }\n  }\n\n  jsxReadNewLine(normalizeCRLF) {\n    const ch = this.input.charCodeAt(this.state.pos);\n    let out;\n    ++this.state.pos;\n\n    if (ch === 13 && this.input.charCodeAt(this.state.pos) === 10) {\n      ++this.state.pos;\n      out = normalizeCRLF ? \"\\n\" : \"\\r\\n\";\n    } else {\n      out = String.fromCharCode(ch);\n    }\n\n    ++this.state.curLine;\n    this.state.lineStart = this.state.pos;\n    return out;\n  }\n\n  jsxReadString(quote) {\n    let out = \"\";\n    let chunkStart = ++this.state.pos;\n\n    for (;;) {\n      if (this.state.pos >= this.length) {\n        throw this.raise(this.state.start, ErrorMessages.UnterminatedString);\n      }\n\n      const ch = this.input.charCodeAt(this.state.pos);\n      if (ch === quote) break;\n\n      if (ch === 38) {\n        out += this.input.slice(chunkStart, this.state.pos);\n        out += this.jsxReadEntity();\n        chunkStart = this.state.pos;\n      } else if (isNewLine(ch)) {\n        out += this.input.slice(chunkStart, this.state.pos);\n        out += this.jsxReadNewLine(false);\n        chunkStart = this.state.pos;\n      } else {\n        ++this.state.pos;\n      }\n    }\n\n    out += this.input.slice(chunkStart, this.state.pos++);\n    return this.finishToken(types.string, out);\n  }\n\n  jsxReadEntity() {\n    let str = \"\";\n    let count = 0;\n    let entity;\n    let ch = this.input[this.state.pos];\n    const startPos = ++this.state.pos;\n\n    while (this.state.pos < this.length && count++ < 10) {\n      ch = this.input[this.state.pos++];\n\n      if (ch === \";\") {\n        if (str[0] === \"#\") {\n          if (str[1] === \"x\") {\n            str = str.substr(2);\n\n            if (HEX_NUMBER.test(str)) {\n              entity = String.fromCodePoint(parseInt(str, 16));\n            }\n          } else {\n            str = str.substr(1);\n\n            if (DECIMAL_NUMBER.test(str)) {\n              entity = String.fromCodePoint(parseInt(str, 10));\n            }\n          }\n        } else {\n          entity = entities[str];\n        }\n\n        break;\n      }\n\n      str += ch;\n    }\n\n    if (!entity) {\n      this.state.pos = startPos;\n      return \"&\";\n    }\n\n    return entity;\n  }\n\n  jsxReadWord() {\n    let ch;\n    const start = this.state.pos;\n\n    do {\n      ch = this.input.charCodeAt(++this.state.pos);\n    } while (isIdentifierChar(ch) || ch === 45);\n\n    return this.finishToken(types.jsxName, this.input.slice(start, this.state.pos));\n  }\n\n  jsxParseIdentifier() {\n    const node = this.startNode();\n\n    if (this.match(types.jsxName)) {\n      node.name = this.state.value;\n    } else if (this.state.type.keyword) {\n      node.name = this.state.type.keyword;\n    } else {\n      this.unexpected();\n    }\n\n    this.next();\n    return this.finishNode(node, \"JSXIdentifier\");\n  }\n\n  jsxParseNamespacedName() {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const name = this.jsxParseIdentifier();\n    if (!this.eat(types.colon)) return name;\n    const node = this.startNodeAt(startPos, startLoc);\n    node.namespace = name;\n    node.name = this.jsxParseIdentifier();\n    return this.finishNode(node, \"JSXNamespacedName\");\n  }\n\n  jsxParseElementName() {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    let node = this.jsxParseNamespacedName();\n\n    if (node.type === \"JSXNamespacedName\") {\n      return node;\n    }\n\n    while (this.eat(types.dot)) {\n      const newNode = this.startNodeAt(startPos, startLoc);\n      newNode.object = node;\n      newNode.property = this.jsxParseIdentifier();\n      node = this.finishNode(newNode, \"JSXMemberExpression\");\n    }\n\n    return node;\n  }\n\n  jsxParseAttributeValue() {\n    let node;\n\n    switch (this.state.type) {\n      case types.braceL:\n        node = this.startNode();\n        this.next();\n        node = this.jsxParseExpressionContainer(node);\n\n        if (node.expression.type === \"JSXEmptyExpression\") {\n          this.raise(node.start, JsxErrors.AttributeIsEmpty);\n        }\n\n        return node;\n\n      case types.jsxTagStart:\n      case types.string:\n        return this.parseExprAtom();\n\n      default:\n        throw this.raise(this.state.start, JsxErrors.UnsupportedJsxValue);\n    }\n  }\n\n  jsxParseEmptyExpression() {\n    const node = this.startNodeAt(this.state.lastTokEnd, this.state.lastTokEndLoc);\n    return this.finishNodeAt(node, \"JSXEmptyExpression\", this.state.start, this.state.startLoc);\n  }\n\n  jsxParseSpreadChild(node) {\n    this.next();\n    node.expression = this.parseExpression();\n    this.expect(types.braceR);\n    return this.finishNode(node, \"JSXSpreadChild\");\n  }\n\n  jsxParseExpressionContainer(node) {\n    if (this.match(types.braceR)) {\n      node.expression = this.jsxParseEmptyExpression();\n    } else {\n      const expression = this.parseExpression();\n      node.expression = expression;\n    }\n\n    this.expect(types.braceR);\n    return this.finishNode(node, \"JSXExpressionContainer\");\n  }\n\n  jsxParseAttribute() {\n    const node = this.startNode();\n\n    if (this.eat(types.braceL)) {\n      this.expect(types.ellipsis);\n      node.argument = this.parseMaybeAssignAllowIn();\n      this.expect(types.braceR);\n      return this.finishNode(node, \"JSXSpreadAttribute\");\n    }\n\n    node.name = this.jsxParseNamespacedName();\n    node.value = this.eat(types.eq) ? this.jsxParseAttributeValue() : null;\n    return this.finishNode(node, \"JSXAttribute\");\n  }\n\n  jsxParseOpeningElementAt(startPos, startLoc) {\n    const node = this.startNodeAt(startPos, startLoc);\n\n    if (this.match(types.jsxTagEnd)) {\n      this.expect(types.jsxTagEnd);\n      return this.finishNode(node, \"JSXOpeningFragment\");\n    }\n\n    node.name = this.jsxParseElementName();\n    return this.jsxParseOpeningElementAfterName(node);\n  }\n\n  jsxParseOpeningElementAfterName(node) {\n    const attributes = [];\n\n    while (!this.match(types.slash) && !this.match(types.jsxTagEnd)) {\n      attributes.push(this.jsxParseAttribute());\n    }\n\n    node.attributes = attributes;\n    node.selfClosing = this.eat(types.slash);\n    this.expect(types.jsxTagEnd);\n    return this.finishNode(node, \"JSXOpeningElement\");\n  }\n\n  jsxParseClosingElementAt(startPos, startLoc) {\n    const node = this.startNodeAt(startPos, startLoc);\n\n    if (this.match(types.jsxTagEnd)) {\n      this.expect(types.jsxTagEnd);\n      return this.finishNode(node, \"JSXClosingFragment\");\n    }\n\n    node.name = this.jsxParseElementName();\n    this.expect(types.jsxTagEnd);\n    return this.finishNode(node, \"JSXClosingElement\");\n  }\n\n  jsxParseElementAt(startPos, startLoc) {\n    const node = this.startNodeAt(startPos, startLoc);\n    const children = [];\n    const openingElement = this.jsxParseOpeningElementAt(startPos, startLoc);\n    let closingElement = null;\n\n    if (!openingElement.selfClosing) {\n      contents: for (;;) {\n        switch (this.state.type) {\n          case types.jsxTagStart:\n            startPos = this.state.start;\n            startLoc = this.state.startLoc;\n            this.next();\n\n            if (this.eat(types.slash)) {\n              closingElement = this.jsxParseClosingElementAt(startPos, startLoc);\n              break contents;\n            }\n\n            children.push(this.jsxParseElementAt(startPos, startLoc));\n            break;\n\n          case types.jsxText:\n            children.push(this.parseExprAtom());\n            break;\n\n          case types.braceL:\n            {\n              const node = this.startNode();\n              this.next();\n\n              if (this.match(types.ellipsis)) {\n                children.push(this.jsxParseSpreadChild(node));\n              } else {\n                children.push(this.jsxParseExpressionContainer(node));\n              }\n\n              break;\n            }\n\n          default:\n            throw this.unexpected();\n        }\n      }\n\n      if (isFragment(openingElement) && !isFragment(closingElement)) {\n        this.raise(closingElement.start, JsxErrors.MissingClosingTagFragment);\n      } else if (!isFragment(openingElement) && isFragment(closingElement)) {\n        this.raise(closingElement.start, JsxErrors.MissingClosingTagElement, getQualifiedJSXName(openingElement.name));\n      } else if (!isFragment(openingElement) && !isFragment(closingElement)) {\n        if (getQualifiedJSXName(closingElement.name) !== getQualifiedJSXName(openingElement.name)) {\n          this.raise(closingElement.start, JsxErrors.MissingClosingTagElement, getQualifiedJSXName(openingElement.name));\n        }\n      }\n    }\n\n    if (isFragment(openingElement)) {\n      node.openingFragment = openingElement;\n      node.closingFragment = closingElement;\n    } else {\n      node.openingElement = openingElement;\n      node.closingElement = closingElement;\n    }\n\n    node.children = children;\n\n    if (this.isRelational(\"<\")) {\n      throw this.raise(this.state.start, JsxErrors.UnwrappedAdjacentJSXElements);\n    }\n\n    return isFragment(openingElement) ? this.finishNode(node, \"JSXFragment\") : this.finishNode(node, \"JSXElement\");\n  }\n\n  jsxParseElement() {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    this.next();\n    return this.jsxParseElementAt(startPos, startLoc);\n  }\n\n  parseExprAtom(refExpressionErrors) {\n    if (this.match(types.jsxText)) {\n      return this.parseLiteral(this.state.value, \"JSXText\");\n    } else if (this.match(types.jsxTagStart)) {\n      return this.jsxParseElement();\n    } else if (this.isRelational(\"<\") && this.input.charCodeAt(this.state.pos) !== 33) {\n      this.finishToken(types.jsxTagStart);\n      return this.jsxParseElement();\n    } else {\n      return super.parseExprAtom(refExpressionErrors);\n    }\n  }\n\n  getTokenFromCode(code) {\n    if (this.state.inPropertyName) return super.getTokenFromCode(code);\n    const context = this.curContext();\n\n    if (context === types$1.j_expr) {\n      return this.jsxReadToken();\n    }\n\n    if (context === types$1.j_oTag || context === types$1.j_cTag) {\n      if (isIdentifierStart(code)) {\n        return this.jsxReadWord();\n      }\n\n      if (code === 62) {\n        ++this.state.pos;\n        return this.finishToken(types.jsxTagEnd);\n      }\n\n      if ((code === 34 || code === 39) && context === types$1.j_oTag) {\n        return this.jsxReadString(code);\n      }\n    }\n\n    if (code === 60 && this.state.exprAllowed && this.input.charCodeAt(this.state.pos + 1) !== 33) {\n      ++this.state.pos;\n      return this.finishToken(types.jsxTagStart);\n    }\n\n    return super.getTokenFromCode(code);\n  }\n\n  updateContext(prevType) {\n    if (this.match(types.braceL)) {\n      const curContext = this.curContext();\n\n      if (curContext === types$1.j_oTag) {\n        this.state.context.push(types$1.braceExpression);\n      } else if (curContext === types$1.j_expr) {\n        this.state.context.push(types$1.templateQuasi);\n      } else {\n        super.updateContext(prevType);\n      }\n\n      this.state.exprAllowed = true;\n    } else if (this.match(types.slash) && prevType === types.jsxTagStart) {\n      this.state.context.length -= 2;\n      this.state.context.push(types$1.j_cTag);\n      this.state.exprAllowed = false;\n    } else {\n      return super.updateContext(prevType);\n    }\n  }\n\n});\n\nclass TypeScriptScope extends Scope {\n  constructor(...args) {\n    super(...args);\n    this.types = [];\n    this.enums = [];\n    this.constEnums = [];\n    this.classes = [];\n    this.exportOnlyBindings = [];\n  }\n\n}\n\nclass TypeScriptScopeHandler extends ScopeHandler {\n  createScope(flags) {\n    return new TypeScriptScope(flags);\n  }\n\n  declareName(name, bindingType, pos) {\n    const scope = this.currentScope();\n\n    if (bindingType & BIND_FLAGS_TS_EXPORT_ONLY) {\n      this.maybeExportDefined(scope, name);\n      scope.exportOnlyBindings.push(name);\n      return;\n    }\n\n    super.declareName(...arguments);\n\n    if (bindingType & BIND_KIND_TYPE) {\n      if (!(bindingType & BIND_KIND_VALUE)) {\n        this.checkRedeclarationInScope(scope, name, bindingType, pos);\n        this.maybeExportDefined(scope, name);\n      }\n\n      scope.types.push(name);\n    }\n\n    if (bindingType & BIND_FLAGS_TS_ENUM) scope.enums.push(name);\n    if (bindingType & BIND_FLAGS_TS_CONST_ENUM) scope.constEnums.push(name);\n    if (bindingType & BIND_FLAGS_CLASS) scope.classes.push(name);\n  }\n\n  isRedeclaredInScope(scope, name, bindingType) {\n    if (scope.enums.indexOf(name) > -1) {\n      if (bindingType & BIND_FLAGS_TS_ENUM) {\n        const isConst = !!(bindingType & BIND_FLAGS_TS_CONST_ENUM);\n        const wasConst = scope.constEnums.indexOf(name) > -1;\n        return isConst !== wasConst;\n      }\n\n      return true;\n    }\n\n    if (bindingType & BIND_FLAGS_CLASS && scope.classes.indexOf(name) > -1) {\n      if (scope.lexical.indexOf(name) > -1) {\n        return !!(bindingType & BIND_KIND_VALUE);\n      } else {\n        return false;\n      }\n    }\n\n    if (bindingType & BIND_KIND_TYPE && scope.types.indexOf(name) > -1) {\n      return true;\n    }\n\n    return super.isRedeclaredInScope(...arguments);\n  }\n\n  checkLocalExport(id) {\n    if (this.scopeStack[0].types.indexOf(id.name) === -1 && this.scopeStack[0].exportOnlyBindings.indexOf(id.name) === -1) {\n      super.checkLocalExport(id);\n    }\n  }\n\n}\n\nconst PARAM = 0b0000,\n      PARAM_YIELD = 0b0001,\n      PARAM_AWAIT = 0b0010,\n      PARAM_RETURN = 0b0100,\n      PARAM_IN = 0b1000;\nclass ProductionParameterHandler {\n  constructor() {\n    this.stacks = [];\n  }\n\n  enter(flags) {\n    this.stacks.push(flags);\n  }\n\n  exit() {\n    this.stacks.pop();\n  }\n\n  currentFlags() {\n    return this.stacks[this.stacks.length - 1];\n  }\n\n  get hasAwait() {\n    return (this.currentFlags() & PARAM_AWAIT) > 0;\n  }\n\n  get hasYield() {\n    return (this.currentFlags() & PARAM_YIELD) > 0;\n  }\n\n  get hasReturn() {\n    return (this.currentFlags() & PARAM_RETURN) > 0;\n  }\n\n  get hasIn() {\n    return (this.currentFlags() & PARAM_IN) > 0;\n  }\n\n}\nfunction functionFlags(isAsync, isGenerator) {\n  return (isAsync ? PARAM_AWAIT : 0) | (isGenerator ? PARAM_YIELD : 0);\n}\n\nfunction nonNull(x) {\n  if (x == null) {\n    throw new Error(`Unexpected ${x} value.`);\n  }\n\n  return x;\n}\n\nfunction assert(x) {\n  if (!x) {\n    throw new Error(\"Assert fail\");\n  }\n}\n\nconst TSErrors = Object.freeze({\n  ClassMethodHasDeclare: \"Class methods cannot have the 'declare' modifier\",\n  ClassMethodHasReadonly: \"Class methods cannot have the 'readonly' modifier\",\n  ConstructorHasTypeParameters: \"Type parameters cannot appear on a constructor declaration.\",\n  DeclareClassFieldHasInitializer: \"Initializers are not allowed in ambient contexts.\",\n  DeclareFunctionHasImplementation: \"An implementation cannot be declared in ambient contexts.\",\n  DuplicateModifier: \"Duplicate modifier: '%0'\",\n  DuplicateAccessibilityModifier: \"Accessibility modifier already seen.\",\n  EmptyHeritageClauseType: \"'%0' list cannot be empty.\",\n  EmptyTypeArguments: \"Type argument list cannot be empty.\",\n  EmptyTypeParameters: \"Type parameter list cannot be empty.\",\n  ExpectedAmbientAfterExportDeclare: \"'export declare' must be followed by an ambient declaration.\",\n  IndexSignatureHasAbstract: \"Index signatures cannot have the 'abstract' modifier\",\n  IndexSignatureHasAccessibility: \"Index signatures cannot have an accessibility modifier ('%0')\",\n  IndexSignatureHasStatic: \"Index signatures cannot have the 'static' modifier\",\n  IndexSignatureHasDeclare: \"Index signatures cannot have the 'declare' modifier\",\n  InvalidTupleMemberLabel: \"Tuple members must be labeled with a simple identifier.\",\n  MixedLabeledAndUnlabeledElements: \"Tuple members must all have names or all not have names.\",\n  NonAbstractClassHasAbstractMethod: \"Abstract methods can only appear within an abstract class.\",\n  NonClassMethodPropertyHasAbstractModifer: \"'abstract' modifier can only appear on a class, method, or property declaration.\",\n  OptionalTypeBeforeRequired: \"A required element cannot follow an optional element.\",\n  PatternIsOptional: \"A binding pattern parameter cannot be optional in an implementation signature.\",\n  PrivateElementHasAbstract: \"Private elements cannot have the 'abstract' modifier.\",\n  PrivateElementHasAccessibility: \"Private elements cannot have an accessibility modifier ('%0')\",\n  TypeAnnotationAfterAssign: \"Type annotations must come before default assignments, e.g. instead of `age = 25: number` use `age: number = 25`\",\n  UnexpectedParameterModifier: \"A parameter property is only allowed in a constructor implementation.\",\n  UnexpectedReadonly: \"'readonly' type modifier is only permitted on array and tuple literal types.\",\n  UnexpectedTypeAnnotation: \"Did not expect a type annotation here.\",\n  UnexpectedTypeCastInParameter: \"Unexpected type cast in parameter position.\",\n  UnsupportedImportTypeArgument: \"Argument in a type import must be a string literal\",\n  UnsupportedParameterPropertyKind: \"A parameter property may not be declared using a binding pattern.\",\n  UnsupportedSignatureParameterKind: \"Name in a signature must be an Identifier, ObjectPattern or ArrayPattern, instead got %0\"\n});\n\nfunction keywordTypeFromName(value) {\n  switch (value) {\n    case \"any\":\n      return \"TSAnyKeyword\";\n\n    case \"boolean\":\n      return \"TSBooleanKeyword\";\n\n    case \"bigint\":\n      return \"TSBigIntKeyword\";\n\n    case \"never\":\n      return \"TSNeverKeyword\";\n\n    case \"number\":\n      return \"TSNumberKeyword\";\n\n    case \"object\":\n      return \"TSObjectKeyword\";\n\n    case \"string\":\n      return \"TSStringKeyword\";\n\n    case \"symbol\":\n      return \"TSSymbolKeyword\";\n\n    case \"undefined\":\n      return \"TSUndefinedKeyword\";\n\n    case \"unknown\":\n      return \"TSUnknownKeyword\";\n\n    default:\n      return undefined;\n  }\n}\n\nfunction tsIsAccessModifier(modifier) {\n  return modifier === \"private\" || modifier === \"public\" || modifier === \"protected\";\n}\n\nvar typescript = (superClass => class extends superClass {\n  getScopeHandler() {\n    return TypeScriptScopeHandler;\n  }\n\n  tsIsIdentifier() {\n    return this.match(types.name);\n  }\n\n  tsNextTokenCanFollowModifier() {\n    this.next();\n    return (this.match(types.bracketL) || this.match(types.braceL) || this.match(types.star) || this.match(types.ellipsis) || this.match(types.hash) || this.isLiteralPropertyName()) && !this.hasPrecedingLineBreak();\n  }\n\n  tsParseModifier(allowedModifiers) {\n    if (!this.match(types.name)) {\n      return undefined;\n    }\n\n    const modifier = this.state.value;\n\n    if (allowedModifiers.indexOf(modifier) !== -1 && this.tsTryParse(this.tsNextTokenCanFollowModifier.bind(this))) {\n      return modifier;\n    }\n\n    return undefined;\n  }\n\n  tsParseModifiers(modified, allowedModifiers) {\n    for (;;) {\n      const startPos = this.state.start;\n      const modifier = this.tsParseModifier(allowedModifiers);\n      if (!modifier) break;\n\n      if (tsIsAccessModifier(modifier)) {\n        if (modified.accessibility) {\n          this.raise(startPos, TSErrors.DuplicateAccessibilityModifier);\n        } else {\n          modified.accessibility = modifier;\n        }\n      } else {\n        if (Object.hasOwnProperty.call(modified, modifier)) {\n          this.raise(startPos, TSErrors.DuplicateModifier, modifier);\n        }\n\n        modified[modifier] = true;\n      }\n    }\n  }\n\n  tsIsListTerminator(kind) {\n    switch (kind) {\n      case \"EnumMembers\":\n      case \"TypeMembers\":\n        return this.match(types.braceR);\n\n      case \"HeritageClauseElement\":\n        return this.match(types.braceL);\n\n      case \"TupleElementTypes\":\n        return this.match(types.bracketR);\n\n      case \"TypeParametersOrArguments\":\n        return this.isRelational(\">\");\n    }\n\n    throw new Error(\"Unreachable\");\n  }\n\n  tsParseList(kind, parseElement) {\n    const result = [];\n\n    while (!this.tsIsListTerminator(kind)) {\n      result.push(parseElement());\n    }\n\n    return result;\n  }\n\n  tsParseDelimitedList(kind, parseElement) {\n    return nonNull(this.tsParseDelimitedListWorker(kind, parseElement, true));\n  }\n\n  tsParseDelimitedListWorker(kind, parseElement, expectSuccess) {\n    const result = [];\n\n    for (;;) {\n      if (this.tsIsListTerminator(kind)) {\n        break;\n      }\n\n      const element = parseElement();\n\n      if (element == null) {\n        return undefined;\n      }\n\n      result.push(element);\n\n      if (this.eat(types.comma)) {\n        continue;\n      }\n\n      if (this.tsIsListTerminator(kind)) {\n        break;\n      }\n\n      if (expectSuccess) {\n        this.expect(types.comma);\n      }\n\n      return undefined;\n    }\n\n    return result;\n  }\n\n  tsParseBracketedList(kind, parseElement, bracket, skipFirstToken) {\n    if (!skipFirstToken) {\n      if (bracket) {\n        this.expect(types.bracketL);\n      } else {\n        this.expectRelational(\"<\");\n      }\n    }\n\n    const result = this.tsParseDelimitedList(kind, parseElement);\n\n    if (bracket) {\n      this.expect(types.bracketR);\n    } else {\n      this.expectRelational(\">\");\n    }\n\n    return result;\n  }\n\n  tsParseImportType() {\n    const node = this.startNode();\n    this.expect(types._import);\n    this.expect(types.parenL);\n\n    if (!this.match(types.string)) {\n      this.raise(this.state.start, TSErrors.UnsupportedImportTypeArgument);\n    }\n\n    node.argument = this.parseExprAtom();\n    this.expect(types.parenR);\n\n    if (this.eat(types.dot)) {\n      node.qualifier = this.tsParseEntityName(true);\n    }\n\n    if (this.isRelational(\"<\")) {\n      node.typeParameters = this.tsParseTypeArguments();\n    }\n\n    return this.finishNode(node, \"TSImportType\");\n  }\n\n  tsParseEntityName(allowReservedWords) {\n    let entity = this.parseIdentifier();\n\n    while (this.eat(types.dot)) {\n      const node = this.startNodeAtNode(entity);\n      node.left = entity;\n      node.right = this.parseIdentifier(allowReservedWords);\n      entity = this.finishNode(node, \"TSQualifiedName\");\n    }\n\n    return entity;\n  }\n\n  tsParseTypeReference() {\n    const node = this.startNode();\n    node.typeName = this.tsParseEntityName(false);\n\n    if (!this.hasPrecedingLineBreak() && this.isRelational(\"<\")) {\n      node.typeParameters = this.tsParseTypeArguments();\n    }\n\n    return this.finishNode(node, \"TSTypeReference\");\n  }\n\n  tsParseThisTypePredicate(lhs) {\n    this.next();\n    const node = this.startNodeAtNode(lhs);\n    node.parameterName = lhs;\n    node.typeAnnotation = this.tsParseTypeAnnotation(false);\n    node.asserts = false;\n    return this.finishNode(node, \"TSTypePredicate\");\n  }\n\n  tsParseThisTypeNode() {\n    const node = this.startNode();\n    this.next();\n    return this.finishNode(node, \"TSThisType\");\n  }\n\n  tsParseTypeQuery() {\n    const node = this.startNode();\n    this.expect(types._typeof);\n\n    if (this.match(types._import)) {\n      node.exprName = this.tsParseImportType();\n    } else {\n      node.exprName = this.tsParseEntityName(true);\n    }\n\n    return this.finishNode(node, \"TSTypeQuery\");\n  }\n\n  tsParseTypeParameter() {\n    const node = this.startNode();\n    node.name = this.parseIdentifierName(node.start);\n    node.constraint = this.tsEatThenParseType(types._extends);\n    node.default = this.tsEatThenParseType(types.eq);\n    return this.finishNode(node, \"TSTypeParameter\");\n  }\n\n  tsTryParseTypeParameters() {\n    if (this.isRelational(\"<\")) {\n      return this.tsParseTypeParameters();\n    }\n  }\n\n  tsParseTypeParameters() {\n    const node = this.startNode();\n\n    if (this.isRelational(\"<\") || this.match(types.jsxTagStart)) {\n      this.next();\n    } else {\n      this.unexpected();\n    }\n\n    node.params = this.tsParseBracketedList(\"TypeParametersOrArguments\", this.tsParseTypeParameter.bind(this), false, true);\n\n    if (node.params.length === 0) {\n      this.raise(node.start, TSErrors.EmptyTypeParameters);\n    }\n\n    return this.finishNode(node, \"TSTypeParameterDeclaration\");\n  }\n\n  tsTryNextParseConstantContext() {\n    if (this.lookahead().type === types._const) {\n      this.next();\n      return this.tsParseTypeReference();\n    }\n\n    return null;\n  }\n\n  tsFillSignature(returnToken, signature) {\n    const returnTokenRequired = returnToken === types.arrow;\n    signature.typeParameters = this.tsTryParseTypeParameters();\n    this.expect(types.parenL);\n    signature.parameters = this.tsParseBindingListForSignature();\n\n    if (returnTokenRequired) {\n      signature.typeAnnotation = this.tsParseTypeOrTypePredicateAnnotation(returnToken);\n    } else if (this.match(returnToken)) {\n      signature.typeAnnotation = this.tsParseTypeOrTypePredicateAnnotation(returnToken);\n    }\n  }\n\n  tsParseBindingListForSignature() {\n    return this.parseBindingList(types.parenR, 41).map(pattern => {\n      if (pattern.type !== \"Identifier\" && pattern.type !== \"RestElement\" && pattern.type !== \"ObjectPattern\" && pattern.type !== \"ArrayPattern\") {\n        this.raise(pattern.start, TSErrors.UnsupportedSignatureParameterKind, pattern.type);\n      }\n\n      return pattern;\n    });\n  }\n\n  tsParseTypeMemberSemicolon() {\n    if (!this.eat(types.comma)) {\n      this.semicolon();\n    }\n  }\n\n  tsParseSignatureMember(kind, node) {\n    this.tsFillSignature(types.colon, node);\n    this.tsParseTypeMemberSemicolon();\n    return this.finishNode(node, kind);\n  }\n\n  tsIsUnambiguouslyIndexSignature() {\n    this.next();\n    return this.eat(types.name) && this.match(types.colon);\n  }\n\n  tsTryParseIndexSignature(node) {\n    if (!(this.match(types.bracketL) && this.tsLookAhead(this.tsIsUnambiguouslyIndexSignature.bind(this)))) {\n      return undefined;\n    }\n\n    this.expect(types.bracketL);\n    const id = this.parseIdentifier();\n    id.typeAnnotation = this.tsParseTypeAnnotation();\n    this.resetEndLocation(id);\n    this.expect(types.bracketR);\n    node.parameters = [id];\n    const type = this.tsTryParseTypeAnnotation();\n    if (type) node.typeAnnotation = type;\n    this.tsParseTypeMemberSemicolon();\n    return this.finishNode(node, \"TSIndexSignature\");\n  }\n\n  tsParsePropertyOrMethodSignature(node, readonly) {\n    if (this.eat(types.question)) node.optional = true;\n    const nodeAny = node;\n\n    if (!readonly && (this.match(types.parenL) || this.isRelational(\"<\"))) {\n      const method = nodeAny;\n      this.tsFillSignature(types.colon, method);\n      this.tsParseTypeMemberSemicolon();\n      return this.finishNode(method, \"TSMethodSignature\");\n    } else {\n      const property = nodeAny;\n      if (readonly) property.readonly = true;\n      const type = this.tsTryParseTypeAnnotation();\n      if (type) property.typeAnnotation = type;\n      this.tsParseTypeMemberSemicolon();\n      return this.finishNode(property, \"TSPropertySignature\");\n    }\n  }\n\n  tsParseTypeMember() {\n    const node = this.startNode();\n\n    if (this.match(types.parenL) || this.isRelational(\"<\")) {\n      return this.tsParseSignatureMember(\"TSCallSignatureDeclaration\", node);\n    }\n\n    if (this.match(types._new)) {\n      const id = this.startNode();\n      this.next();\n\n      if (this.match(types.parenL) || this.isRelational(\"<\")) {\n        return this.tsParseSignatureMember(\"TSConstructSignatureDeclaration\", node);\n      } else {\n        node.key = this.createIdentifier(id, \"new\");\n        return this.tsParsePropertyOrMethodSignature(node, false);\n      }\n    }\n\n    const readonly = !!this.tsParseModifier([\"readonly\"]);\n    const idx = this.tsTryParseIndexSignature(node);\n\n    if (idx) {\n      if (readonly) node.readonly = true;\n      return idx;\n    }\n\n    this.parsePropertyName(node, false);\n    return this.tsParsePropertyOrMethodSignature(node, readonly);\n  }\n\n  tsParseTypeLiteral() {\n    const node = this.startNode();\n    node.members = this.tsParseObjectTypeMembers();\n    return this.finishNode(node, \"TSTypeLiteral\");\n  }\n\n  tsParseObjectTypeMembers() {\n    this.expect(types.braceL);\n    const members = this.tsParseList(\"TypeMembers\", this.tsParseTypeMember.bind(this));\n    this.expect(types.braceR);\n    return members;\n  }\n\n  tsIsStartOfMappedType() {\n    this.next();\n\n    if (this.eat(types.plusMin)) {\n      return this.isContextual(\"readonly\");\n    }\n\n    if (this.isContextual(\"readonly\")) {\n      this.next();\n    }\n\n    if (!this.match(types.bracketL)) {\n      return false;\n    }\n\n    this.next();\n\n    if (!this.tsIsIdentifier()) {\n      return false;\n    }\n\n    this.next();\n    return this.match(types._in);\n  }\n\n  tsParseMappedTypeParameter() {\n    const node = this.startNode();\n    node.name = this.parseIdentifierName(node.start);\n    node.constraint = this.tsExpectThenParseType(types._in);\n    return this.finishNode(node, \"TSTypeParameter\");\n  }\n\n  tsParseMappedType() {\n    const node = this.startNode();\n    this.expect(types.braceL);\n\n    if (this.match(types.plusMin)) {\n      node.readonly = this.state.value;\n      this.next();\n      this.expectContextual(\"readonly\");\n    } else if (this.eatContextual(\"readonly\")) {\n      node.readonly = true;\n    }\n\n    this.expect(types.bracketL);\n    node.typeParameter = this.tsParseMappedTypeParameter();\n    node.nameType = this.eatContextual(\"as\") ? this.tsParseType() : null;\n    this.expect(types.bracketR);\n\n    if (this.match(types.plusMin)) {\n      node.optional = this.state.value;\n      this.next();\n      this.expect(types.question);\n    } else if (this.eat(types.question)) {\n      node.optional = true;\n    }\n\n    node.typeAnnotation = this.tsTryParseType();\n    this.semicolon();\n    this.expect(types.braceR);\n    return this.finishNode(node, \"TSMappedType\");\n  }\n\n  tsParseTupleType() {\n    const node = this.startNode();\n    node.elementTypes = this.tsParseBracketedList(\"TupleElementTypes\", this.tsParseTupleElementType.bind(this), true, false);\n    let seenOptionalElement = false;\n    let labeledElements = null;\n    node.elementTypes.forEach(elementNode => {\n      var _labeledElements;\n\n      let {\n        type\n      } = elementNode;\n\n      if (seenOptionalElement && type !== \"TSRestType\" && type !== \"TSOptionalType\" && !(type === \"TSNamedTupleMember\" && elementNode.optional)) {\n        this.raise(elementNode.start, TSErrors.OptionalTypeBeforeRequired);\n      }\n\n      seenOptionalElement = seenOptionalElement || type === \"TSNamedTupleMember\" && elementNode.optional || type === \"TSOptionalType\";\n\n      if (type === \"TSRestType\") {\n        elementNode = elementNode.typeAnnotation;\n        type = elementNode.type;\n      }\n\n      const isLabeled = type === \"TSNamedTupleMember\";\n      labeledElements = (_labeledElements = labeledElements) != null ? _labeledElements : isLabeled;\n\n      if (labeledElements !== isLabeled) {\n        this.raise(elementNode.start, TSErrors.MixedLabeledAndUnlabeledElements);\n      }\n    });\n    return this.finishNode(node, \"TSTupleType\");\n  }\n\n  tsParseTupleElementType() {\n    const {\n      start: startPos,\n      startLoc\n    } = this.state;\n    const rest = this.eat(types.ellipsis);\n    let type = this.tsParseType();\n    const optional = this.eat(types.question);\n    const labeled = this.eat(types.colon);\n\n    if (labeled) {\n      const labeledNode = this.startNodeAtNode(type);\n      labeledNode.optional = optional;\n\n      if (type.type === \"TSTypeReference\" && !type.typeParameters && type.typeName.type === \"Identifier\") {\n        labeledNode.label = type.typeName;\n      } else {\n        this.raise(type.start, TSErrors.InvalidTupleMemberLabel);\n        labeledNode.label = type;\n      }\n\n      labeledNode.elementType = this.tsParseType();\n      type = this.finishNode(labeledNode, \"TSNamedTupleMember\");\n    } else if (optional) {\n      const optionalTypeNode = this.startNodeAtNode(type);\n      optionalTypeNode.typeAnnotation = type;\n      type = this.finishNode(optionalTypeNode, \"TSOptionalType\");\n    }\n\n    if (rest) {\n      const restNode = this.startNodeAt(startPos, startLoc);\n      restNode.typeAnnotation = type;\n      type = this.finishNode(restNode, \"TSRestType\");\n    }\n\n    return type;\n  }\n\n  tsParseParenthesizedType() {\n    const node = this.startNode();\n    this.expect(types.parenL);\n    node.typeAnnotation = this.tsParseType();\n    this.expect(types.parenR);\n    return this.finishNode(node, \"TSParenthesizedType\");\n  }\n\n  tsParseFunctionOrConstructorType(type) {\n    const node = this.startNode();\n\n    if (type === \"TSConstructorType\") {\n      this.expect(types._new);\n    }\n\n    this.tsFillSignature(types.arrow, node);\n    return this.finishNode(node, type);\n  }\n\n  tsParseLiteralTypeNode() {\n    const node = this.startNode();\n\n    node.literal = (() => {\n      switch (this.state.type) {\n        case types.num:\n        case types.bigint:\n        case types.string:\n        case types._true:\n        case types._false:\n          return this.parseExprAtom();\n\n        default:\n          throw this.unexpected();\n      }\n    })();\n\n    return this.finishNode(node, \"TSLiteralType\");\n  }\n\n  tsParseTemplateLiteralType() {\n    const node = this.startNode();\n    node.literal = this.parseTemplate(false);\n    return this.finishNode(node, \"TSLiteralType\");\n  }\n\n  parseTemplateSubstitution() {\n    if (this.state.inType) return this.tsParseType();\n    return super.parseTemplateSubstitution();\n  }\n\n  tsParseThisTypeOrThisTypePredicate() {\n    const thisKeyword = this.tsParseThisTypeNode();\n\n    if (this.isContextual(\"is\") && !this.hasPrecedingLineBreak()) {\n      return this.tsParseThisTypePredicate(thisKeyword);\n    } else {\n      return thisKeyword;\n    }\n  }\n\n  tsParseNonArrayType() {\n    switch (this.state.type) {\n      case types.name:\n      case types._void:\n      case types._null:\n        {\n          const type = this.match(types._void) ? \"TSVoidKeyword\" : this.match(types._null) ? \"TSNullKeyword\" : keywordTypeFromName(this.state.value);\n\n          if (type !== undefined && this.lookaheadCharCode() !== 46) {\n            const node = this.startNode();\n            this.next();\n            return this.finishNode(node, type);\n          }\n\n          return this.tsParseTypeReference();\n        }\n\n      case types.string:\n      case types.num:\n      case types.bigint:\n      case types._true:\n      case types._false:\n        return this.tsParseLiteralTypeNode();\n\n      case types.plusMin:\n        if (this.state.value === \"-\") {\n          const node = this.startNode();\n          const nextToken = this.lookahead();\n\n          if (nextToken.type !== types.num && nextToken.type !== types.bigint) {\n            throw this.unexpected();\n          }\n\n          node.literal = this.parseMaybeUnary();\n          return this.finishNode(node, \"TSLiteralType\");\n        }\n\n        break;\n\n      case types._this:\n        return this.tsParseThisTypeOrThisTypePredicate();\n\n      case types._typeof:\n        return this.tsParseTypeQuery();\n\n      case types._import:\n        return this.tsParseImportType();\n\n      case types.braceL:\n        return this.tsLookAhead(this.tsIsStartOfMappedType.bind(this)) ? this.tsParseMappedType() : this.tsParseTypeLiteral();\n\n      case types.bracketL:\n        return this.tsParseTupleType();\n\n      case types.parenL:\n        return this.tsParseParenthesizedType();\n\n      case types.backQuote:\n        return this.tsParseTemplateLiteralType();\n    }\n\n    throw this.unexpected();\n  }\n\n  tsParseArrayTypeOrHigher() {\n    let type = this.tsParseNonArrayType();\n\n    while (!this.hasPrecedingLineBreak() && this.eat(types.bracketL)) {\n      if (this.match(types.bracketR)) {\n        const node = this.startNodeAtNode(type);\n        node.elementType = type;\n        this.expect(types.bracketR);\n        type = this.finishNode(node, \"TSArrayType\");\n      } else {\n        const node = this.startNodeAtNode(type);\n        node.objectType = type;\n        node.indexType = this.tsParseType();\n        this.expect(types.bracketR);\n        type = this.finishNode(node, \"TSIndexedAccessType\");\n      }\n    }\n\n    return type;\n  }\n\n  tsParseTypeOperator(operator) {\n    const node = this.startNode();\n    this.expectContextual(operator);\n    node.operator = operator;\n    node.typeAnnotation = this.tsParseTypeOperatorOrHigher();\n\n    if (operator === \"readonly\") {\n      this.tsCheckTypeAnnotationForReadOnly(node);\n    }\n\n    return this.finishNode(node, \"TSTypeOperator\");\n  }\n\n  tsCheckTypeAnnotationForReadOnly(node) {\n    switch (node.typeAnnotation.type) {\n      case \"TSTupleType\":\n      case \"TSArrayType\":\n        return;\n\n      default:\n        this.raise(node.start, TSErrors.UnexpectedReadonly);\n    }\n  }\n\n  tsParseInferType() {\n    const node = this.startNode();\n    this.expectContextual(\"infer\");\n    const typeParameter = this.startNode();\n    typeParameter.name = this.parseIdentifierName(typeParameter.start);\n    node.typeParameter = this.finishNode(typeParameter, \"TSTypeParameter\");\n    return this.finishNode(node, \"TSInferType\");\n  }\n\n  tsParseTypeOperatorOrHigher() {\n    const operator = [\"keyof\", \"unique\", \"readonly\"].find(kw => this.isContextual(kw));\n    return operator ? this.tsParseTypeOperator(operator) : this.isContextual(\"infer\") ? this.tsParseInferType() : this.tsParseArrayTypeOrHigher();\n  }\n\n  tsParseUnionOrIntersectionType(kind, parseConstituentType, operator) {\n    const node = this.startNode();\n    const hasLeadingOperator = this.eat(operator);\n    const types = [];\n\n    do {\n      types.push(parseConstituentType());\n    } while (this.eat(operator));\n\n    if (types.length === 1 && !hasLeadingOperator) {\n      return types[0];\n    }\n\n    node.types = types;\n    return this.finishNode(node, kind);\n  }\n\n  tsParseIntersectionTypeOrHigher() {\n    return this.tsParseUnionOrIntersectionType(\"TSIntersectionType\", this.tsParseTypeOperatorOrHigher.bind(this), types.bitwiseAND);\n  }\n\n  tsParseUnionTypeOrHigher() {\n    return this.tsParseUnionOrIntersectionType(\"TSUnionType\", this.tsParseIntersectionTypeOrHigher.bind(this), types.bitwiseOR);\n  }\n\n  tsIsStartOfFunctionType() {\n    if (this.isRelational(\"<\")) {\n      return true;\n    }\n\n    return this.match(types.parenL) && this.tsLookAhead(this.tsIsUnambiguouslyStartOfFunctionType.bind(this));\n  }\n\n  tsSkipParameterStart() {\n    if (this.match(types.name) || this.match(types._this)) {\n      this.next();\n      return true;\n    }\n\n    if (this.match(types.braceL)) {\n      let braceStackCounter = 1;\n      this.next();\n\n      while (braceStackCounter > 0) {\n        if (this.match(types.braceL)) {\n          ++braceStackCounter;\n        } else if (this.match(types.braceR)) {\n          --braceStackCounter;\n        }\n\n        this.next();\n      }\n\n      return true;\n    }\n\n    if (this.match(types.bracketL)) {\n      let braceStackCounter = 1;\n      this.next();\n\n      while (braceStackCounter > 0) {\n        if (this.match(types.bracketL)) {\n          ++braceStackCounter;\n        } else if (this.match(types.bracketR)) {\n          --braceStackCounter;\n        }\n\n        this.next();\n      }\n\n      return true;\n    }\n\n    return false;\n  }\n\n  tsIsUnambiguouslyStartOfFunctionType() {\n    this.next();\n\n    if (this.match(types.parenR) || this.match(types.ellipsis)) {\n      return true;\n    }\n\n    if (this.tsSkipParameterStart()) {\n      if (this.match(types.colon) || this.match(types.comma) || this.match(types.question) || this.match(types.eq)) {\n        return true;\n      }\n\n      if (this.match(types.parenR)) {\n        this.next();\n\n        if (this.match(types.arrow)) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  }\n\n  tsParseTypeOrTypePredicateAnnotation(returnToken) {\n    return this.tsInType(() => {\n      const t = this.startNode();\n      this.expect(returnToken);\n      const node = this.startNode();\n      const asserts = !!this.tsTryParse(this.tsParseTypePredicateAsserts.bind(this));\n\n      if (asserts && this.match(types._this)) {\n        let thisTypePredicate = this.tsParseThisTypeOrThisTypePredicate();\n\n        if (thisTypePredicate.type === \"TSThisType\") {\n          node.parameterName = thisTypePredicate;\n          node.asserts = true;\n          thisTypePredicate = this.finishNode(node, \"TSTypePredicate\");\n        } else {\n          this.resetStartLocationFromNode(thisTypePredicate, node);\n          thisTypePredicate.asserts = true;\n        }\n\n        t.typeAnnotation = thisTypePredicate;\n        return this.finishNode(t, \"TSTypeAnnotation\");\n      }\n\n      const typePredicateVariable = this.tsIsIdentifier() && this.tsTryParse(this.tsParseTypePredicatePrefix.bind(this));\n\n      if (!typePredicateVariable) {\n        if (!asserts) {\n          return this.tsParseTypeAnnotation(false, t);\n        }\n\n        node.parameterName = this.parseIdentifier();\n        node.asserts = asserts;\n        t.typeAnnotation = this.finishNode(node, \"TSTypePredicate\");\n        return this.finishNode(t, \"TSTypeAnnotation\");\n      }\n\n      const type = this.tsParseTypeAnnotation(false);\n      node.parameterName = typePredicateVariable;\n      node.typeAnnotation = type;\n      node.asserts = asserts;\n      t.typeAnnotation = this.finishNode(node, \"TSTypePredicate\");\n      return this.finishNode(t, \"TSTypeAnnotation\");\n    });\n  }\n\n  tsTryParseTypeOrTypePredicateAnnotation() {\n    return this.match(types.colon) ? this.tsParseTypeOrTypePredicateAnnotation(types.colon) : undefined;\n  }\n\n  tsTryParseTypeAnnotation() {\n    return this.match(types.colon) ? this.tsParseTypeAnnotation() : undefined;\n  }\n\n  tsTryParseType() {\n    return this.tsEatThenParseType(types.colon);\n  }\n\n  tsParseTypePredicatePrefix() {\n    const id = this.parseIdentifier();\n\n    if (this.isContextual(\"is\") && !this.hasPrecedingLineBreak()) {\n      this.next();\n      return id;\n    }\n  }\n\n  tsParseTypePredicateAsserts() {\n    if (!this.match(types.name) || this.state.value !== \"asserts\" || this.hasPrecedingLineBreak()) {\n      return false;\n    }\n\n    const containsEsc = this.state.containsEsc;\n    this.next();\n\n    if (!this.match(types.name) && !this.match(types._this)) {\n      return false;\n    }\n\n    if (containsEsc) {\n      this.raise(this.state.lastTokStart, ErrorMessages.InvalidEscapedReservedWord, \"asserts\");\n    }\n\n    return true;\n  }\n\n  tsParseTypeAnnotation(eatColon = true, t = this.startNode()) {\n    this.tsInType(() => {\n      if (eatColon) this.expect(types.colon);\n      t.typeAnnotation = this.tsParseType();\n    });\n    return this.finishNode(t, \"TSTypeAnnotation\");\n  }\n\n  tsParseType() {\n    assert(this.state.inType);\n    const type = this.tsParseNonConditionalType();\n\n    if (this.hasPrecedingLineBreak() || !this.eat(types._extends)) {\n      return type;\n    }\n\n    const node = this.startNodeAtNode(type);\n    node.checkType = type;\n    node.extendsType = this.tsParseNonConditionalType();\n    this.expect(types.question);\n    node.trueType = this.tsParseType();\n    this.expect(types.colon);\n    node.falseType = this.tsParseType();\n    return this.finishNode(node, \"TSConditionalType\");\n  }\n\n  tsParseNonConditionalType() {\n    if (this.tsIsStartOfFunctionType()) {\n      return this.tsParseFunctionOrConstructorType(\"TSFunctionType\");\n    }\n\n    if (this.match(types._new)) {\n      return this.tsParseFunctionOrConstructorType(\"TSConstructorType\");\n    }\n\n    return this.tsParseUnionTypeOrHigher();\n  }\n\n  tsParseTypeAssertion() {\n    const node = this.startNode();\n\n    const _const = this.tsTryNextParseConstantContext();\n\n    node.typeAnnotation = _const || this.tsNextThenParseType();\n    this.expectRelational(\">\");\n    node.expression = this.parseMaybeUnary();\n    return this.finishNode(node, \"TSTypeAssertion\");\n  }\n\n  tsParseHeritageClause(descriptor) {\n    const originalStart = this.state.start;\n    const delimitedList = this.tsParseDelimitedList(\"HeritageClauseElement\", this.tsParseExpressionWithTypeArguments.bind(this));\n\n    if (!delimitedList.length) {\n      this.raise(originalStart, TSErrors.EmptyHeritageClauseType, descriptor);\n    }\n\n    return delimitedList;\n  }\n\n  tsParseExpressionWithTypeArguments() {\n    const node = this.startNode();\n    node.expression = this.tsParseEntityName(false);\n\n    if (this.isRelational(\"<\")) {\n      node.typeParameters = this.tsParseTypeArguments();\n    }\n\n    return this.finishNode(node, \"TSExpressionWithTypeArguments\");\n  }\n\n  tsParseInterfaceDeclaration(node) {\n    node.id = this.parseIdentifier();\n    this.checkLVal(node.id, \"typescript interface declaration\", BIND_TS_INTERFACE);\n    node.typeParameters = this.tsTryParseTypeParameters();\n\n    if (this.eat(types._extends)) {\n      node.extends = this.tsParseHeritageClause(\"extends\");\n    }\n\n    const body = this.startNode();\n    body.body = this.tsInType(this.tsParseObjectTypeMembers.bind(this));\n    node.body = this.finishNode(body, \"TSInterfaceBody\");\n    return this.finishNode(node, \"TSInterfaceDeclaration\");\n  }\n\n  tsParseTypeAliasDeclaration(node) {\n    node.id = this.parseIdentifier();\n    this.checkLVal(node.id, \"typescript type alias\", BIND_TS_TYPE);\n    node.typeParameters = this.tsTryParseTypeParameters();\n    node.typeAnnotation = this.tsInType(() => {\n      this.expect(types.eq);\n\n      if (this.isContextual(\"intrinsic\") && this.lookahead().type !== types.dot) {\n        const node = this.startNode();\n        this.next();\n        return this.finishNode(node, \"TSIntrinsicKeyword\");\n      }\n\n      return this.tsParseType();\n    });\n    this.semicolon();\n    return this.finishNode(node, \"TSTypeAliasDeclaration\");\n  }\n\n  tsInNoContext(cb) {\n    const oldContext = this.state.context;\n    this.state.context = [oldContext[0]];\n\n    try {\n      return cb();\n    } finally {\n      this.state.context = oldContext;\n    }\n  }\n\n  tsInType(cb) {\n    const oldInType = this.state.inType;\n    this.state.inType = true;\n\n    try {\n      return cb();\n    } finally {\n      this.state.inType = oldInType;\n    }\n  }\n\n  tsEatThenParseType(token) {\n    return !this.match(token) ? undefined : this.tsNextThenParseType();\n  }\n\n  tsExpectThenParseType(token) {\n    return this.tsDoThenParseType(() => this.expect(token));\n  }\n\n  tsNextThenParseType() {\n    return this.tsDoThenParseType(() => this.next());\n  }\n\n  tsDoThenParseType(cb) {\n    return this.tsInType(() => {\n      cb();\n      return this.tsParseType();\n    });\n  }\n\n  tsParseEnumMember() {\n    const node = this.startNode();\n    node.id = this.match(types.string) ? this.parseExprAtom() : this.parseIdentifier(true);\n\n    if (this.eat(types.eq)) {\n      node.initializer = this.parseMaybeAssignAllowIn();\n    }\n\n    return this.finishNode(node, \"TSEnumMember\");\n  }\n\n  tsParseEnumDeclaration(node, isConst) {\n    if (isConst) node.const = true;\n    node.id = this.parseIdentifier();\n    this.checkLVal(node.id, \"typescript enum declaration\", isConst ? BIND_TS_CONST_ENUM : BIND_TS_ENUM);\n    this.expect(types.braceL);\n    node.members = this.tsParseDelimitedList(\"EnumMembers\", this.tsParseEnumMember.bind(this));\n    this.expect(types.braceR);\n    return this.finishNode(node, \"TSEnumDeclaration\");\n  }\n\n  tsParseModuleBlock() {\n    const node = this.startNode();\n    this.scope.enter(SCOPE_OTHER);\n    this.expect(types.braceL);\n    this.parseBlockOrModuleBlockBody(node.body = [], undefined, true, types.braceR);\n    this.scope.exit();\n    return this.finishNode(node, \"TSModuleBlock\");\n  }\n\n  tsParseModuleOrNamespaceDeclaration(node, nested = false) {\n    node.id = this.parseIdentifier();\n\n    if (!nested) {\n      this.checkLVal(node.id, \"module or namespace declaration\", BIND_TS_NAMESPACE);\n    }\n\n    if (this.eat(types.dot)) {\n      const inner = this.startNode();\n      this.tsParseModuleOrNamespaceDeclaration(inner, true);\n      node.body = inner;\n    } else {\n      this.scope.enter(SCOPE_TS_MODULE);\n      this.prodParam.enter(PARAM);\n      node.body = this.tsParseModuleBlock();\n      this.prodParam.exit();\n      this.scope.exit();\n    }\n\n    return this.finishNode(node, \"TSModuleDeclaration\");\n  }\n\n  tsParseAmbientExternalModuleDeclaration(node) {\n    if (this.isContextual(\"global\")) {\n      node.global = true;\n      node.id = this.parseIdentifier();\n    } else if (this.match(types.string)) {\n      node.id = this.parseExprAtom();\n    } else {\n      this.unexpected();\n    }\n\n    if (this.match(types.braceL)) {\n      this.scope.enter(SCOPE_TS_MODULE);\n      this.prodParam.enter(PARAM);\n      node.body = this.tsParseModuleBlock();\n      this.prodParam.exit();\n      this.scope.exit();\n    } else {\n      this.semicolon();\n    }\n\n    return this.finishNode(node, \"TSModuleDeclaration\");\n  }\n\n  tsParseImportEqualsDeclaration(node, isExport) {\n    node.isExport = isExport || false;\n    node.id = this.parseIdentifier();\n    this.checkLVal(node.id, \"import equals declaration\", BIND_LEXICAL);\n    this.expect(types.eq);\n    node.moduleReference = this.tsParseModuleReference();\n    this.semicolon();\n    return this.finishNode(node, \"TSImportEqualsDeclaration\");\n  }\n\n  tsIsExternalModuleReference() {\n    return this.isContextual(\"require\") && this.lookaheadCharCode() === 40;\n  }\n\n  tsParseModuleReference() {\n    return this.tsIsExternalModuleReference() ? this.tsParseExternalModuleReference() : this.tsParseEntityName(false);\n  }\n\n  tsParseExternalModuleReference() {\n    const node = this.startNode();\n    this.expectContextual(\"require\");\n    this.expect(types.parenL);\n\n    if (!this.match(types.string)) {\n      throw this.unexpected();\n    }\n\n    node.expression = this.parseExprAtom();\n    this.expect(types.parenR);\n    return this.finishNode(node, \"TSExternalModuleReference\");\n  }\n\n  tsLookAhead(f) {\n    const state = this.state.clone();\n    const res = f();\n    this.state = state;\n    return res;\n  }\n\n  tsTryParseAndCatch(f) {\n    const result = this.tryParse(abort => f() || abort());\n    if (result.aborted || !result.node) return undefined;\n    if (result.error) this.state = result.failState;\n    return result.node;\n  }\n\n  tsTryParse(f) {\n    const state = this.state.clone();\n    const result = f();\n\n    if (result !== undefined && result !== false) {\n      return result;\n    } else {\n      this.state = state;\n      return undefined;\n    }\n  }\n\n  tsTryParseDeclare(nany) {\n    if (this.isLineTerminator()) {\n      return;\n    }\n\n    let starttype = this.state.type;\n    let kind;\n\n    if (this.isContextual(\"let\")) {\n      starttype = types._var;\n      kind = \"let\";\n    }\n\n    return this.tsInDeclareContext(() => {\n      switch (starttype) {\n        case types._function:\n          nany.declare = true;\n          return this.parseFunctionStatement(nany, false, true);\n\n        case types._class:\n          nany.declare = true;\n          return this.parseClass(nany, true, false);\n\n        case types._const:\n          if (this.match(types._const) && this.isLookaheadContextual(\"enum\")) {\n            this.expect(types._const);\n            this.expectContextual(\"enum\");\n            return this.tsParseEnumDeclaration(nany, true);\n          }\n\n        case types._var:\n          kind = kind || this.state.value;\n          return this.parseVarStatement(nany, kind);\n\n        case types.name:\n          {\n            const value = this.state.value;\n\n            if (value === \"global\") {\n              return this.tsParseAmbientExternalModuleDeclaration(nany);\n            } else {\n              return this.tsParseDeclaration(nany, value, true);\n            }\n          }\n      }\n    });\n  }\n\n  tsTryParseExportDeclaration() {\n    return this.tsParseDeclaration(this.startNode(), this.state.value, true);\n  }\n\n  tsParseExpressionStatement(node, expr) {\n    switch (expr.name) {\n      case \"declare\":\n        {\n          const declaration = this.tsTryParseDeclare(node);\n\n          if (declaration) {\n            declaration.declare = true;\n            return declaration;\n          }\n\n          break;\n        }\n\n      case \"global\":\n        if (this.match(types.braceL)) {\n          this.scope.enter(SCOPE_TS_MODULE);\n          this.prodParam.enter(PARAM);\n          const mod = node;\n          mod.global = true;\n          mod.id = expr;\n          mod.body = this.tsParseModuleBlock();\n          this.scope.exit();\n          this.prodParam.exit();\n          return this.finishNode(mod, \"TSModuleDeclaration\");\n        }\n\n        break;\n\n      default:\n        return this.tsParseDeclaration(node, expr.name, false);\n    }\n  }\n\n  tsParseDeclaration(node, value, next) {\n    switch (value) {\n      case \"abstract\":\n        if (this.tsCheckLineTerminatorAndMatch(types._class, next) || this.tsCheckLineTerminatorAndMatch(types.name, next)) {\n          if (next) this.next();\n          return this.tsParseAbstractDeclaration(node);\n        }\n\n        break;\n\n      case \"enum\":\n        if (next || this.match(types.name)) {\n          if (next) this.next();\n          return this.tsParseEnumDeclaration(node, false);\n        }\n\n        break;\n\n      case \"interface\":\n        if (this.tsCheckLineTerminatorAndMatch(types.name, next)) {\n          if (next) this.next();\n          return this.tsParseInterfaceDeclaration(node);\n        }\n\n        break;\n\n      case \"module\":\n        if (next) this.next();\n\n        if (this.match(types.string)) {\n          return this.tsParseAmbientExternalModuleDeclaration(node);\n        } else if (this.tsCheckLineTerminatorAndMatch(types.name, next)) {\n          return this.tsParseModuleOrNamespaceDeclaration(node);\n        }\n\n        break;\n\n      case \"namespace\":\n        if (this.tsCheckLineTerminatorAndMatch(types.name, next)) {\n          if (next) this.next();\n          return this.tsParseModuleOrNamespaceDeclaration(node);\n        }\n\n        break;\n\n      case \"type\":\n        if (this.tsCheckLineTerminatorAndMatch(types.name, next)) {\n          if (next) this.next();\n          return this.tsParseTypeAliasDeclaration(node);\n        }\n\n        break;\n    }\n  }\n\n  tsCheckLineTerminatorAndMatch(tokenType, next) {\n    return (next || this.match(tokenType)) && !this.isLineTerminator();\n  }\n\n  tsTryParseGenericAsyncArrowFunction(startPos, startLoc) {\n    if (!this.isRelational(\"<\")) {\n      return undefined;\n    }\n\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n    this.state.maybeInArrowParameters = true;\n    const res = this.tsTryParseAndCatch(() => {\n      const node = this.startNodeAt(startPos, startLoc);\n      node.typeParameters = this.tsParseTypeParameters();\n      super.parseFunctionParams(node);\n      node.returnType = this.tsTryParseTypeOrTypePredicateAnnotation();\n      this.expect(types.arrow);\n      return node;\n    });\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n\n    if (!res) {\n      return undefined;\n    }\n\n    return this.parseArrowExpression(res, null, true);\n  }\n\n  tsParseTypeArguments() {\n    const node = this.startNode();\n    node.params = this.tsInType(() => this.tsInNoContext(() => {\n      this.expectRelational(\"<\");\n      return this.tsParseDelimitedList(\"TypeParametersOrArguments\", this.tsParseType.bind(this));\n    }));\n\n    if (node.params.length === 0) {\n      this.raise(node.start, TSErrors.EmptyTypeArguments);\n    }\n\n    this.state.exprAllowed = false;\n    this.expectRelational(\">\");\n    return this.finishNode(node, \"TSTypeParameterInstantiation\");\n  }\n\n  tsIsDeclarationStart() {\n    if (this.match(types.name)) {\n      switch (this.state.value) {\n        case \"abstract\":\n        case \"declare\":\n        case \"enum\":\n        case \"interface\":\n        case \"module\":\n        case \"namespace\":\n        case \"type\":\n          return true;\n      }\n    }\n\n    return false;\n  }\n\n  isExportDefaultSpecifier() {\n    if (this.tsIsDeclarationStart()) return false;\n    return super.isExportDefaultSpecifier();\n  }\n\n  parseAssignableListItem(allowModifiers, decorators) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    let accessibility;\n    let readonly = false;\n\n    if (allowModifiers !== undefined) {\n      accessibility = this.parseAccessModifier();\n      readonly = !!this.tsParseModifier([\"readonly\"]);\n\n      if (allowModifiers === false && (accessibility || readonly)) {\n        this.raise(startPos, TSErrors.UnexpectedParameterModifier);\n      }\n    }\n\n    const left = this.parseMaybeDefault();\n    this.parseAssignableListItemTypes(left);\n    const elt = this.parseMaybeDefault(left.start, left.loc.start, left);\n\n    if (accessibility || readonly) {\n      const pp = this.startNodeAt(startPos, startLoc);\n\n      if (decorators.length) {\n        pp.decorators = decorators;\n      }\n\n      if (accessibility) pp.accessibility = accessibility;\n      if (readonly) pp.readonly = readonly;\n\n      if (elt.type !== \"Identifier\" && elt.type !== \"AssignmentPattern\") {\n        this.raise(pp.start, TSErrors.UnsupportedParameterPropertyKind);\n      }\n\n      pp.parameter = elt;\n      return this.finishNode(pp, \"TSParameterProperty\");\n    }\n\n    if (decorators.length) {\n      left.decorators = decorators;\n    }\n\n    return elt;\n  }\n\n  parseFunctionBodyAndFinish(node, type, isMethod = false) {\n    if (this.match(types.colon)) {\n      node.returnType = this.tsParseTypeOrTypePredicateAnnotation(types.colon);\n    }\n\n    const bodilessType = type === \"FunctionDeclaration\" ? \"TSDeclareFunction\" : type === \"ClassMethod\" ? \"TSDeclareMethod\" : undefined;\n\n    if (bodilessType && !this.match(types.braceL) && this.isLineTerminator()) {\n      this.finishNode(node, bodilessType);\n      return;\n    }\n\n    if (bodilessType === \"TSDeclareFunction\" && this.state.isDeclareContext) {\n      this.raise(node.start, TSErrors.DeclareFunctionHasImplementation);\n\n      if (node.declare) {\n        super.parseFunctionBodyAndFinish(node, bodilessType, isMethod);\n        return;\n      }\n    }\n\n    super.parseFunctionBodyAndFinish(node, type, isMethod);\n  }\n\n  registerFunctionStatementId(node) {\n    if (!node.body && node.id) {\n      this.checkLVal(node.id, \"function name\", BIND_TS_AMBIENT);\n    } else {\n      super.registerFunctionStatementId(...arguments);\n    }\n  }\n\n  tsCheckForInvalidTypeCasts(items) {\n    items.forEach(node => {\n      if ((node == null ? void 0 : node.type) === \"TSTypeCastExpression\") {\n        this.raise(node.typeAnnotation.start, TSErrors.UnexpectedTypeAnnotation);\n      }\n    });\n  }\n\n  toReferencedList(exprList, isInParens) {\n    this.tsCheckForInvalidTypeCasts(exprList);\n    return exprList;\n  }\n\n  parseArrayLike(...args) {\n    const node = super.parseArrayLike(...args);\n\n    if (node.type === \"ArrayExpression\") {\n      this.tsCheckForInvalidTypeCasts(node.elements);\n    }\n\n    return node;\n  }\n\n  parseSubscript(base, startPos, startLoc, noCalls, state) {\n    if (!this.hasPrecedingLineBreak() && this.match(types.bang)) {\n      this.state.exprAllowed = false;\n      this.next();\n      const nonNullExpression = this.startNodeAt(startPos, startLoc);\n      nonNullExpression.expression = base;\n      return this.finishNode(nonNullExpression, \"TSNonNullExpression\");\n    }\n\n    if (this.isRelational(\"<\")) {\n      const result = this.tsTryParseAndCatch(() => {\n        if (!noCalls && this.atPossibleAsyncArrow(base)) {\n          const asyncArrowFn = this.tsTryParseGenericAsyncArrowFunction(startPos, startLoc);\n\n          if (asyncArrowFn) {\n            return asyncArrowFn;\n          }\n        }\n\n        const node = this.startNodeAt(startPos, startLoc);\n        node.callee = base;\n        const typeArguments = this.tsParseTypeArguments();\n\n        if (typeArguments) {\n          if (!noCalls && this.eat(types.parenL)) {\n            node.arguments = this.parseCallExpressionArguments(types.parenR, false);\n            this.tsCheckForInvalidTypeCasts(node.arguments);\n            node.typeParameters = typeArguments;\n\n            if (state.optionalChainMember) {\n              node.optional = false;\n            }\n\n            return this.finishCallExpression(node, state.optionalChainMember);\n          } else if (this.match(types.backQuote)) {\n            const result = this.parseTaggedTemplateExpression(base, startPos, startLoc, state);\n            result.typeParameters = typeArguments;\n            return result;\n          }\n        }\n\n        this.unexpected();\n      });\n      if (result) return result;\n    }\n\n    return super.parseSubscript(base, startPos, startLoc, noCalls, state);\n  }\n\n  parseNewArguments(node) {\n    if (this.isRelational(\"<\")) {\n      const typeParameters = this.tsTryParseAndCatch(() => {\n        const args = this.tsParseTypeArguments();\n        if (!this.match(types.parenL)) this.unexpected();\n        return args;\n      });\n\n      if (typeParameters) {\n        node.typeParameters = typeParameters;\n      }\n    }\n\n    super.parseNewArguments(node);\n  }\n\n  parseExprOp(left, leftStartPos, leftStartLoc, minPrec) {\n    if (nonNull(types._in.binop) > minPrec && !this.hasPrecedingLineBreak() && this.isContextual(\"as\")) {\n      const node = this.startNodeAt(leftStartPos, leftStartLoc);\n      node.expression = left;\n\n      const _const = this.tsTryNextParseConstantContext();\n\n      if (_const) {\n        node.typeAnnotation = _const;\n      } else {\n        node.typeAnnotation = this.tsNextThenParseType();\n      }\n\n      this.finishNode(node, \"TSAsExpression\");\n      this.reScan_lt_gt();\n      return this.parseExprOp(node, leftStartPos, leftStartLoc, minPrec);\n    }\n\n    return super.parseExprOp(left, leftStartPos, leftStartLoc, minPrec);\n  }\n\n  checkReservedWord(word, startLoc, checkKeywords, isBinding) {}\n\n  checkDuplicateExports() {}\n\n  parseImport(node) {\n    if (this.match(types.name) || this.match(types.star) || this.match(types.braceL)) {\n      const ahead = this.lookahead();\n\n      if (this.match(types.name) && ahead.type === types.eq) {\n        return this.tsParseImportEqualsDeclaration(node);\n      }\n\n      if (this.isContextual(\"type\") && ahead.type !== types.comma && !(ahead.type === types.name && ahead.value === \"from\")) {\n        node.importKind = \"type\";\n        this.next();\n      }\n    }\n\n    if (!node.importKind) {\n      node.importKind = \"value\";\n    }\n\n    const importNode = super.parseImport(node);\n\n    if (importNode.importKind === \"type\" && importNode.specifiers.length > 1 && importNode.specifiers[0].type === \"ImportDefaultSpecifier\") {\n      this.raise(importNode.start, \"A type-only import can specify a default import or named bindings, but not both.\");\n    }\n\n    return importNode;\n  }\n\n  parseExport(node) {\n    if (this.match(types._import)) {\n      this.expect(types._import);\n      return this.tsParseImportEqualsDeclaration(node, true);\n    } else if (this.eat(types.eq)) {\n      const assign = node;\n      assign.expression = this.parseExpression();\n      this.semicolon();\n      return this.finishNode(assign, \"TSExportAssignment\");\n    } else if (this.eatContextual(\"as\")) {\n      const decl = node;\n      this.expectContextual(\"namespace\");\n      decl.id = this.parseIdentifier();\n      this.semicolon();\n      return this.finishNode(decl, \"TSNamespaceExportDeclaration\");\n    } else {\n      if (this.isContextual(\"type\") && this.lookahead().type === types.braceL) {\n        this.next();\n        node.exportKind = \"type\";\n      } else {\n        node.exportKind = \"value\";\n      }\n\n      return super.parseExport(node);\n    }\n  }\n\n  isAbstractClass() {\n    return this.isContextual(\"abstract\") && this.lookahead().type === types._class;\n  }\n\n  parseExportDefaultExpression() {\n    if (this.isAbstractClass()) {\n      const cls = this.startNode();\n      this.next();\n      cls.abstract = true;\n      this.parseClass(cls, true, true);\n      return cls;\n    }\n\n    if (this.state.value === \"interface\") {\n      const result = this.tsParseDeclaration(this.startNode(), this.state.value, true);\n      if (result) return result;\n    }\n\n    return super.parseExportDefaultExpression();\n  }\n\n  parseStatementContent(context, topLevel) {\n    if (this.state.type === types._const) {\n      const ahead = this.lookahead();\n\n      if (ahead.type === types.name && ahead.value === \"enum\") {\n        const node = this.startNode();\n        this.expect(types._const);\n        this.expectContextual(\"enum\");\n        return this.tsParseEnumDeclaration(node, true);\n      }\n    }\n\n    return super.parseStatementContent(context, topLevel);\n  }\n\n  parseAccessModifier() {\n    return this.tsParseModifier([\"public\", \"protected\", \"private\"]);\n  }\n\n  parseClassMember(classBody, member, state) {\n    this.tsParseModifiers(member, [\"declare\", \"private\", \"public\", \"protected\"]);\n\n    const callParseClassMember = () => {\n      super.parseClassMember(classBody, member, state);\n    };\n\n    if (member.declare) {\n      this.tsInDeclareContext(callParseClassMember);\n    } else {\n      callParseClassMember();\n    }\n  }\n\n  parseClassMemberWithIsStatic(classBody, member, state, isStatic) {\n    this.tsParseModifiers(member, [\"abstract\", \"readonly\", \"declare\"]);\n    const idx = this.tsTryParseIndexSignature(member);\n\n    if (idx) {\n      classBody.body.push(idx);\n\n      if (member.abstract) {\n        this.raise(member.start, TSErrors.IndexSignatureHasAbstract);\n      }\n\n      if (isStatic) {\n        this.raise(member.start, TSErrors.IndexSignatureHasStatic);\n      }\n\n      if (member.accessibility) {\n        this.raise(member.start, TSErrors.IndexSignatureHasAccessibility, member.accessibility);\n      }\n\n      if (member.declare) {\n        this.raise(member.start, TSErrors.IndexSignatureHasDeclare);\n      }\n\n      return;\n    }\n\n    if (!this.state.inAbstractClass && member.abstract) {\n      this.raise(member.start, TSErrors.NonAbstractClassHasAbstractMethod);\n    }\n\n    super.parseClassMemberWithIsStatic(classBody, member, state, isStatic);\n  }\n\n  parsePostMemberNameModifiers(methodOrProp) {\n    const optional = this.eat(types.question);\n    if (optional) methodOrProp.optional = true;\n\n    if (methodOrProp.readonly && this.match(types.parenL)) {\n      this.raise(methodOrProp.start, TSErrors.ClassMethodHasReadonly);\n    }\n\n    if (methodOrProp.declare && this.match(types.parenL)) {\n      this.raise(methodOrProp.start, TSErrors.ClassMethodHasDeclare);\n    }\n  }\n\n  parseExpressionStatement(node, expr) {\n    const decl = expr.type === \"Identifier\" ? this.tsParseExpressionStatement(node, expr) : undefined;\n    return decl || super.parseExpressionStatement(node, expr);\n  }\n\n  shouldParseExportDeclaration() {\n    if (this.tsIsDeclarationStart()) return true;\n    return super.shouldParseExportDeclaration();\n  }\n\n  parseConditional(expr, startPos, startLoc, refNeedsArrowPos) {\n    if (!refNeedsArrowPos || !this.match(types.question)) {\n      return super.parseConditional(expr, startPos, startLoc, refNeedsArrowPos);\n    }\n\n    const result = this.tryParse(() => super.parseConditional(expr, startPos, startLoc));\n\n    if (!result.node) {\n      refNeedsArrowPos.start = result.error.pos || this.state.start;\n      return expr;\n    }\n\n    if (result.error) this.state = result.failState;\n    return result.node;\n  }\n\n  parseParenItem(node, startPos, startLoc) {\n    node = super.parseParenItem(node, startPos, startLoc);\n\n    if (this.eat(types.question)) {\n      node.optional = true;\n      this.resetEndLocation(node);\n    }\n\n    if (this.match(types.colon)) {\n      const typeCastNode = this.startNodeAt(startPos, startLoc);\n      typeCastNode.expression = node;\n      typeCastNode.typeAnnotation = this.tsParseTypeAnnotation();\n      return this.finishNode(typeCastNode, \"TSTypeCastExpression\");\n    }\n\n    return node;\n  }\n\n  parseExportDeclaration(node) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const isDeclare = this.eatContextual(\"declare\");\n\n    if (isDeclare && (this.isContextual(\"declare\") || !this.shouldParseExportDeclaration())) {\n      throw this.raise(this.state.start, TSErrors.ExpectedAmbientAfterExportDeclare);\n    }\n\n    let declaration;\n\n    if (this.match(types.name)) {\n      declaration = this.tsTryParseExportDeclaration();\n    }\n\n    if (!declaration) {\n      declaration = super.parseExportDeclaration(node);\n    }\n\n    if (declaration && (declaration.type === \"TSInterfaceDeclaration\" || declaration.type === \"TSTypeAliasDeclaration\" || isDeclare)) {\n      node.exportKind = \"type\";\n    }\n\n    if (declaration && isDeclare) {\n      this.resetStartLocation(declaration, startPos, startLoc);\n      declaration.declare = true;\n    }\n\n    return declaration;\n  }\n\n  parseClassId(node, isStatement, optionalId) {\n    if ((!isStatement || optionalId) && this.isContextual(\"implements\")) {\n      return;\n    }\n\n    super.parseClassId(node, isStatement, optionalId, node.declare ? BIND_TS_AMBIENT : BIND_CLASS);\n    const typeParameters = this.tsTryParseTypeParameters();\n    if (typeParameters) node.typeParameters = typeParameters;\n  }\n\n  parseClassPropertyAnnotation(node) {\n    if (!node.optional && this.eat(types.bang)) {\n      node.definite = true;\n    }\n\n    const type = this.tsTryParseTypeAnnotation();\n    if (type) node.typeAnnotation = type;\n  }\n\n  parseClassProperty(node) {\n    this.parseClassPropertyAnnotation(node);\n\n    if (this.state.isDeclareContext && this.match(types.eq)) {\n      this.raise(this.state.start, TSErrors.DeclareClassFieldHasInitializer);\n    }\n\n    return super.parseClassProperty(node);\n  }\n\n  parseClassPrivateProperty(node) {\n    if (node.abstract) {\n      this.raise(node.start, TSErrors.PrivateElementHasAbstract);\n    }\n\n    if (node.accessibility) {\n      this.raise(node.start, TSErrors.PrivateElementHasAccessibility, node.accessibility);\n    }\n\n    this.parseClassPropertyAnnotation(node);\n    return super.parseClassPrivateProperty(node);\n  }\n\n  pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper) {\n    const typeParameters = this.tsTryParseTypeParameters();\n\n    if (typeParameters && isConstructor) {\n      this.raise(typeParameters.start, TSErrors.ConstructorHasTypeParameters);\n    }\n\n    if (typeParameters) method.typeParameters = typeParameters;\n    super.pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper);\n  }\n\n  pushClassPrivateMethod(classBody, method, isGenerator, isAsync) {\n    const typeParameters = this.tsTryParseTypeParameters();\n    if (typeParameters) method.typeParameters = typeParameters;\n    super.pushClassPrivateMethod(classBody, method, isGenerator, isAsync);\n  }\n\n  parseClassSuper(node) {\n    super.parseClassSuper(node);\n\n    if (node.superClass && this.isRelational(\"<\")) {\n      node.superTypeParameters = this.tsParseTypeArguments();\n    }\n\n    if (this.eatContextual(\"implements\")) {\n      node.implements = this.tsParseHeritageClause(\"implements\");\n    }\n  }\n\n  parseObjPropValue(prop, ...args) {\n    const typeParameters = this.tsTryParseTypeParameters();\n    if (typeParameters) prop.typeParameters = typeParameters;\n    super.parseObjPropValue(prop, ...args);\n  }\n\n  parseFunctionParams(node, allowModifiers) {\n    const typeParameters = this.tsTryParseTypeParameters();\n    if (typeParameters) node.typeParameters = typeParameters;\n    super.parseFunctionParams(node, allowModifiers);\n  }\n\n  parseVarId(decl, kind) {\n    super.parseVarId(decl, kind);\n\n    if (decl.id.type === \"Identifier\" && this.eat(types.bang)) {\n      decl.definite = true;\n    }\n\n    const type = this.tsTryParseTypeAnnotation();\n\n    if (type) {\n      decl.id.typeAnnotation = type;\n      this.resetEndLocation(decl.id);\n    }\n  }\n\n  parseAsyncArrowFromCallExpression(node, call) {\n    if (this.match(types.colon)) {\n      node.returnType = this.tsParseTypeAnnotation();\n    }\n\n    return super.parseAsyncArrowFromCallExpression(node, call);\n  }\n\n  parseMaybeAssign(...args) {\n    var _jsx, _jsx2, _typeCast, _jsx3, _typeCast2, _jsx4, _typeCast3;\n\n    let state;\n    let jsx;\n    let typeCast;\n\n    if (this.hasPlugin(\"jsx\") && (this.match(types.jsxTagStart) || this.isRelational(\"<\"))) {\n      state = this.state.clone();\n      jsx = this.tryParse(() => super.parseMaybeAssign(...args), state);\n      if (!jsx.error) return jsx.node;\n      const {\n        context\n      } = this.state;\n\n      if (context[context.length - 1] === types$1.j_oTag) {\n        context.length -= 2;\n      } else if (context[context.length - 1] === types$1.j_expr) {\n        context.length -= 1;\n      }\n    }\n\n    if (!((_jsx = jsx) == null ? void 0 : _jsx.error) && !this.isRelational(\"<\")) {\n      return super.parseMaybeAssign(...args);\n    }\n\n    let typeParameters;\n    state = state || this.state.clone();\n    const arrow = this.tryParse(abort => {\n      var _typeParameters;\n\n      typeParameters = this.tsParseTypeParameters();\n      const expr = super.parseMaybeAssign(...args);\n\n      if (expr.type !== \"ArrowFunctionExpression\" || expr.extra && expr.extra.parenthesized) {\n        abort();\n      }\n\n      if (((_typeParameters = typeParameters) == null ? void 0 : _typeParameters.params.length) !== 0) {\n        this.resetStartLocationFromNode(expr, typeParameters);\n      }\n\n      expr.typeParameters = typeParameters;\n      return expr;\n    }, state);\n    if (!arrow.error && !arrow.aborted) return arrow.node;\n\n    if (!jsx) {\n      assert(!this.hasPlugin(\"jsx\"));\n      typeCast = this.tryParse(() => super.parseMaybeAssign(...args), state);\n      if (!typeCast.error) return typeCast.node;\n    }\n\n    if ((_jsx2 = jsx) == null ? void 0 : _jsx2.node) {\n      this.state = jsx.failState;\n      return jsx.node;\n    }\n\n    if (arrow.node) {\n      this.state = arrow.failState;\n      return arrow.node;\n    }\n\n    if ((_typeCast = typeCast) == null ? void 0 : _typeCast.node) {\n      this.state = typeCast.failState;\n      return typeCast.node;\n    }\n\n    if ((_jsx3 = jsx) == null ? void 0 : _jsx3.thrown) throw jsx.error;\n    if (arrow.thrown) throw arrow.error;\n    if ((_typeCast2 = typeCast) == null ? void 0 : _typeCast2.thrown) throw typeCast.error;\n    throw ((_jsx4 = jsx) == null ? void 0 : _jsx4.error) || arrow.error || ((_typeCast3 = typeCast) == null ? void 0 : _typeCast3.error);\n  }\n\n  parseMaybeUnary(refExpressionErrors) {\n    if (!this.hasPlugin(\"jsx\") && this.isRelational(\"<\")) {\n      return this.tsParseTypeAssertion();\n    } else {\n      return super.parseMaybeUnary(refExpressionErrors);\n    }\n  }\n\n  parseArrow(node) {\n    if (this.match(types.colon)) {\n      const result = this.tryParse(abort => {\n        const returnType = this.tsParseTypeOrTypePredicateAnnotation(types.colon);\n        if (this.canInsertSemicolon() || !this.match(types.arrow)) abort();\n        return returnType;\n      });\n      if (result.aborted) return;\n\n      if (!result.thrown) {\n        if (result.error) this.state = result.failState;\n        node.returnType = result.node;\n      }\n    }\n\n    return super.parseArrow(node);\n  }\n\n  parseAssignableListItemTypes(param) {\n    if (this.eat(types.question)) {\n      if (param.type !== \"Identifier\" && !this.state.isDeclareContext && !this.state.inType) {\n        this.raise(param.start, TSErrors.PatternIsOptional);\n      }\n\n      param.optional = true;\n    }\n\n    const type = this.tsTryParseTypeAnnotation();\n    if (type) param.typeAnnotation = type;\n    this.resetEndLocation(param);\n    return param;\n  }\n\n  toAssignable(node, isLHS = false) {\n    switch (node.type) {\n      case \"TSTypeCastExpression\":\n        return super.toAssignable(this.typeCastToParameter(node), isLHS);\n\n      case \"TSParameterProperty\":\n        return super.toAssignable(node, isLHS);\n\n      case \"TSAsExpression\":\n      case \"TSNonNullExpression\":\n      case \"TSTypeAssertion\":\n        node.expression = this.toAssignable(node.expression, isLHS);\n        return node;\n\n      default:\n        return super.toAssignable(node, isLHS);\n    }\n  }\n\n  checkLVal(expr, contextDescription, ...args) {\n    switch (expr.type) {\n      case \"TSTypeCastExpression\":\n        return;\n\n      case \"TSParameterProperty\":\n        this.checkLVal(expr.parameter, \"parameter property\", ...args);\n        return;\n\n      case \"TSAsExpression\":\n      case \"TSNonNullExpression\":\n      case \"TSTypeAssertion\":\n        this.checkLVal(expr.expression, contextDescription, ...args);\n        return;\n\n      default:\n        super.checkLVal(expr, contextDescription, ...args);\n        return;\n    }\n  }\n\n  parseBindingAtom() {\n    switch (this.state.type) {\n      case types._this:\n        return this.parseIdentifier(true);\n\n      default:\n        return super.parseBindingAtom();\n    }\n  }\n\n  parseMaybeDecoratorArguments(expr) {\n    if (this.isRelational(\"<\")) {\n      const typeArguments = this.tsParseTypeArguments();\n\n      if (this.match(types.parenL)) {\n        const call = super.parseMaybeDecoratorArguments(expr);\n        call.typeParameters = typeArguments;\n        return call;\n      }\n\n      this.unexpected(this.state.start, types.parenL);\n    }\n\n    return super.parseMaybeDecoratorArguments(expr);\n  }\n\n  isClassMethod() {\n    return this.isRelational(\"<\") || super.isClassMethod();\n  }\n\n  isClassProperty() {\n    return this.match(types.bang) || this.match(types.colon) || super.isClassProperty();\n  }\n\n  parseMaybeDefault(...args) {\n    const node = super.parseMaybeDefault(...args);\n\n    if (node.type === \"AssignmentPattern\" && node.typeAnnotation && node.right.start < node.typeAnnotation.start) {\n      this.raise(node.typeAnnotation.start, TSErrors.TypeAnnotationAfterAssign);\n    }\n\n    return node;\n  }\n\n  getTokenFromCode(code) {\n    if (this.state.inType && (code === 62 || code === 60)) {\n      return this.finishOp(types.relational, 1);\n    } else {\n      return super.getTokenFromCode(code);\n    }\n  }\n\n  reScan_lt_gt() {\n    if (this.match(types.relational)) {\n      const code = this.input.charCodeAt(this.state.start);\n\n      if (code === 60 || code === 62) {\n        this.state.pos -= 1;\n        this.readToken_lt_gt(code);\n      }\n    }\n  }\n\n  toAssignableList(exprList) {\n    for (let i = 0; i < exprList.length; i++) {\n      const expr = exprList[i];\n      if (!expr) continue;\n\n      switch (expr.type) {\n        case \"TSTypeCastExpression\":\n          exprList[i] = this.typeCastToParameter(expr);\n          break;\n\n        case \"TSAsExpression\":\n        case \"TSTypeAssertion\":\n          if (!this.state.maybeInArrowParameters) {\n            exprList[i] = this.typeCastToParameter(expr);\n          } else {\n            this.raise(expr.start, TSErrors.UnexpectedTypeCastInParameter);\n          }\n\n          break;\n      }\n    }\n\n    return super.toAssignableList(...arguments);\n  }\n\n  typeCastToParameter(node) {\n    node.expression.typeAnnotation = node.typeAnnotation;\n    this.resetEndLocation(node.expression, node.typeAnnotation.end, node.typeAnnotation.loc.end);\n    return node.expression;\n  }\n\n  shouldParseArrow() {\n    return this.match(types.colon) || super.shouldParseArrow();\n  }\n\n  shouldParseAsyncArrow() {\n    return this.match(types.colon) || super.shouldParseAsyncArrow();\n  }\n\n  canHaveLeadingDecorator() {\n    return super.canHaveLeadingDecorator() || this.isAbstractClass();\n  }\n\n  jsxParseOpeningElementAfterName(node) {\n    if (this.isRelational(\"<\")) {\n      const typeArguments = this.tsTryParseAndCatch(() => this.tsParseTypeArguments());\n      if (typeArguments) node.typeParameters = typeArguments;\n    }\n\n    return super.jsxParseOpeningElementAfterName(node);\n  }\n\n  getGetterSetterExpectedParamCount(method) {\n    const baseCount = super.getGetterSetterExpectedParamCount(method);\n    const params = this.getObjectOrClassMethodParams(method);\n    const firstParam = params[0];\n    const hasContextParam = firstParam && firstParam.type === \"Identifier\" && firstParam.name === \"this\";\n    return hasContextParam ? baseCount + 1 : baseCount;\n  }\n\n  parseCatchClauseParam() {\n    const param = super.parseCatchClauseParam();\n    const type = this.tsTryParseTypeAnnotation();\n\n    if (type) {\n      param.typeAnnotation = type;\n      this.resetEndLocation(param);\n    }\n\n    return param;\n  }\n\n  tsInDeclareContext(cb) {\n    const oldIsDeclareContext = this.state.isDeclareContext;\n    this.state.isDeclareContext = true;\n\n    try {\n      return cb();\n    } finally {\n      this.state.isDeclareContext = oldIsDeclareContext;\n    }\n  }\n\n  parseClass(node, ...args) {\n    const oldInAbstractClass = this.state.inAbstractClass;\n    this.state.inAbstractClass = !!node.abstract;\n\n    try {\n      return super.parseClass(node, ...args);\n    } finally {\n      this.state.inAbstractClass = oldInAbstractClass;\n    }\n  }\n\n  tsParseAbstractDeclaration(node) {\n    if (this.match(types._class)) {\n      node.abstract = true;\n      return this.parseClass(node, true, false);\n    } else if (this.isContextual(\"interface\")) {\n      if (!this.hasFollowingLineBreak()) {\n        node.abstract = true;\n        this.raise(node.start, TSErrors.NonClassMethodPropertyHasAbstractModifer);\n        this.next();\n        return this.tsParseInterfaceDeclaration(node);\n      }\n    } else {\n      this.unexpected(null, types._class);\n    }\n  }\n\n});\n\ntypes.placeholder = new TokenType(\"%%\", {\n  startsExpr: true\n});\nvar placeholders = (superClass => class extends superClass {\n  parsePlaceholder(expectedNode) {\n    if (this.match(types.placeholder)) {\n      const node = this.startNode();\n      this.next();\n      this.assertNoSpace(\"Unexpected space in placeholder.\");\n      node.name = super.parseIdentifier(true);\n      this.assertNoSpace(\"Unexpected space in placeholder.\");\n      this.expect(types.placeholder);\n      return this.finishPlaceholder(node, expectedNode);\n    }\n  }\n\n  finishPlaceholder(node, expectedNode) {\n    const isFinished = !!(node.expectedNode && node.type === \"Placeholder\");\n    node.expectedNode = expectedNode;\n    return isFinished ? node : this.finishNode(node, \"Placeholder\");\n  }\n\n  getTokenFromCode(code) {\n    if (code === 37 && this.input.charCodeAt(this.state.pos + 1) === 37) {\n      return this.finishOp(types.placeholder, 2);\n    }\n\n    return super.getTokenFromCode(...arguments);\n  }\n\n  parseExprAtom() {\n    return this.parsePlaceholder(\"Expression\") || super.parseExprAtom(...arguments);\n  }\n\n  parseIdentifier() {\n    return this.parsePlaceholder(\"Identifier\") || super.parseIdentifier(...arguments);\n  }\n\n  checkReservedWord(word) {\n    if (word !== undefined) super.checkReservedWord(...arguments);\n  }\n\n  parseBindingAtom() {\n    return this.parsePlaceholder(\"Pattern\") || super.parseBindingAtom(...arguments);\n  }\n\n  checkLVal(expr) {\n    if (expr.type !== \"Placeholder\") super.checkLVal(...arguments);\n  }\n\n  toAssignable(node) {\n    if (node && node.type === \"Placeholder\" && node.expectedNode === \"Expression\") {\n      node.expectedNode = \"Pattern\";\n      return node;\n    }\n\n    return super.toAssignable(...arguments);\n  }\n\n  isLet(context) {\n    if (super.isLet(context)) {\n      return true;\n    }\n\n    if (!this.isContextual(\"let\")) {\n      return false;\n    }\n\n    if (context) return false;\n    const nextToken = this.lookahead();\n\n    if (nextToken.type === types.placeholder) {\n      return true;\n    }\n\n    return false;\n  }\n\n  verifyBreakContinue(node) {\n    if (node.label && node.label.type === \"Placeholder\") return;\n    super.verifyBreakContinue(...arguments);\n  }\n\n  parseExpressionStatement(node, expr) {\n    if (expr.type !== \"Placeholder\" || expr.extra && expr.extra.parenthesized) {\n      return super.parseExpressionStatement(...arguments);\n    }\n\n    if (this.match(types.colon)) {\n      const stmt = node;\n      stmt.label = this.finishPlaceholder(expr, \"Identifier\");\n      this.next();\n      stmt.body = this.parseStatement(\"label\");\n      return this.finishNode(stmt, \"LabeledStatement\");\n    }\n\n    this.semicolon();\n    node.name = expr.name;\n    return this.finishPlaceholder(node, \"Statement\");\n  }\n\n  parseBlock() {\n    return this.parsePlaceholder(\"BlockStatement\") || super.parseBlock(...arguments);\n  }\n\n  parseFunctionId() {\n    return this.parsePlaceholder(\"Identifier\") || super.parseFunctionId(...arguments);\n  }\n\n  parseClass(node, isStatement, optionalId) {\n    const type = isStatement ? \"ClassDeclaration\" : \"ClassExpression\";\n    this.next();\n    this.takeDecorators(node);\n    const oldStrict = this.state.strict;\n    const placeholder = this.parsePlaceholder(\"Identifier\");\n\n    if (placeholder) {\n      if (this.match(types._extends) || this.match(types.placeholder) || this.match(types.braceL)) {\n        node.id = placeholder;\n      } else if (optionalId || !isStatement) {\n        node.id = null;\n        node.body = this.finishPlaceholder(placeholder, \"ClassBody\");\n        return this.finishNode(node, type);\n      } else {\n        this.unexpected(null, \"A class name is required\");\n      }\n    } else {\n      this.parseClassId(node, isStatement, optionalId);\n    }\n\n    this.parseClassSuper(node);\n    node.body = this.parsePlaceholder(\"ClassBody\") || this.parseClassBody(!!node.superClass, oldStrict);\n    return this.finishNode(node, type);\n  }\n\n  parseExport(node) {\n    const placeholder = this.parsePlaceholder(\"Identifier\");\n    if (!placeholder) return super.parseExport(...arguments);\n\n    if (!this.isContextual(\"from\") && !this.match(types.comma)) {\n      node.specifiers = [];\n      node.source = null;\n      node.declaration = this.finishPlaceholder(placeholder, \"Declaration\");\n      return this.finishNode(node, \"ExportNamedDeclaration\");\n    }\n\n    this.expectPlugin(\"exportDefaultFrom\");\n    const specifier = this.startNode();\n    specifier.exported = placeholder;\n    node.specifiers = [this.finishNode(specifier, \"ExportDefaultSpecifier\")];\n    return super.parseExport(node);\n  }\n\n  isExportDefaultSpecifier() {\n    if (this.match(types._default)) {\n      const next = this.nextTokenStart();\n\n      if (this.isUnparsedContextual(next, \"from\")) {\n        if (this.input.startsWith(types.placeholder.label, this.nextTokenStartSince(next + 4))) {\n          return true;\n        }\n      }\n    }\n\n    return super.isExportDefaultSpecifier();\n  }\n\n  maybeParseExportDefaultSpecifier(node) {\n    if (node.specifiers && node.specifiers.length > 0) {\n      return true;\n    }\n\n    return super.maybeParseExportDefaultSpecifier(...arguments);\n  }\n\n  checkExport(node) {\n    const {\n      specifiers\n    } = node;\n\n    if (specifiers == null ? void 0 : specifiers.length) {\n      node.specifiers = specifiers.filter(node => node.exported.type === \"Placeholder\");\n    }\n\n    super.checkExport(node);\n    node.specifiers = specifiers;\n  }\n\n  parseImport(node) {\n    const placeholder = this.parsePlaceholder(\"Identifier\");\n    if (!placeholder) return super.parseImport(...arguments);\n    node.specifiers = [];\n\n    if (!this.isContextual(\"from\") && !this.match(types.comma)) {\n      node.source = this.finishPlaceholder(placeholder, \"StringLiteral\");\n      this.semicolon();\n      return this.finishNode(node, \"ImportDeclaration\");\n    }\n\n    const specifier = this.startNodeAtNode(placeholder);\n    specifier.local = placeholder;\n    this.finishNode(specifier, \"ImportDefaultSpecifier\");\n    node.specifiers.push(specifier);\n\n    if (this.eat(types.comma)) {\n      const hasStarImport = this.maybeParseStarImportSpecifier(node);\n      if (!hasStarImport) this.parseNamedImportSpecifiers(node);\n    }\n\n    this.expectContextual(\"from\");\n    node.source = this.parseImportSource();\n    this.semicolon();\n    return this.finishNode(node, \"ImportDeclaration\");\n  }\n\n  parseImportSource() {\n    return this.parsePlaceholder(\"StringLiteral\") || super.parseImportSource(...arguments);\n  }\n\n});\n\nvar v8intrinsic = (superClass => class extends superClass {\n  parseV8Intrinsic() {\n    if (this.match(types.modulo)) {\n      const v8IntrinsicStart = this.state.start;\n      const node = this.startNode();\n      this.eat(types.modulo);\n\n      if (this.match(types.name)) {\n        const name = this.parseIdentifierName(this.state.start);\n        const identifier = this.createIdentifier(node, name);\n        identifier.type = \"V8IntrinsicIdentifier\";\n\n        if (this.match(types.parenL)) {\n          return identifier;\n        }\n      }\n\n      this.unexpected(v8IntrinsicStart);\n    }\n  }\n\n  parseExprAtom() {\n    return this.parseV8Intrinsic() || super.parseExprAtom(...arguments);\n  }\n\n});\n\nfunction hasPlugin(plugins, name) {\n  return plugins.some(plugin => {\n    if (Array.isArray(plugin)) {\n      return plugin[0] === name;\n    } else {\n      return plugin === name;\n    }\n  });\n}\nfunction getPluginOption(plugins, name, option) {\n  const plugin = plugins.find(plugin => {\n    if (Array.isArray(plugin)) {\n      return plugin[0] === name;\n    } else {\n      return plugin === name;\n    }\n  });\n\n  if (plugin && Array.isArray(plugin)) {\n    return plugin[1][option];\n  }\n\n  return null;\n}\nconst PIPELINE_PROPOSALS = [\"minimal\", \"smart\", \"fsharp\"];\nconst RECORD_AND_TUPLE_SYNTAX_TYPES = [\"hash\", \"bar\"];\nfunction validatePlugins(plugins) {\n  if (hasPlugin(plugins, \"decorators\")) {\n    if (hasPlugin(plugins, \"decorators-legacy\")) {\n      throw new Error(\"Cannot use the decorators and decorators-legacy plugin together\");\n    }\n\n    const decoratorsBeforeExport = getPluginOption(plugins, \"decorators\", \"decoratorsBeforeExport\");\n\n    if (decoratorsBeforeExport == null) {\n      throw new Error(\"The 'decorators' plugin requires a 'decoratorsBeforeExport' option,\" + \" whose value must be a boolean. If you are migrating from\" + \" Babylon/Babel 6 or want to use the old decorators proposal, you\" + \" should use the 'decorators-legacy' plugin instead of 'decorators'.\");\n    } else if (typeof decoratorsBeforeExport !== \"boolean\") {\n      throw new Error(\"'decoratorsBeforeExport' must be a boolean.\");\n    }\n  }\n\n  if (hasPlugin(plugins, \"flow\") && hasPlugin(plugins, \"typescript\")) {\n    throw new Error(\"Cannot combine flow and typescript plugins.\");\n  }\n\n  if (hasPlugin(plugins, \"placeholders\") && hasPlugin(plugins, \"v8intrinsic\")) {\n    throw new Error(\"Cannot combine placeholders and v8intrinsic plugins.\");\n  }\n\n  if (hasPlugin(plugins, \"pipelineOperator\") && !PIPELINE_PROPOSALS.includes(getPluginOption(plugins, \"pipelineOperator\", \"proposal\"))) {\n    throw new Error(\"'pipelineOperator' requires 'proposal' option whose value should be one of: \" + PIPELINE_PROPOSALS.map(p => `'${p}'`).join(\", \"));\n  }\n\n  if (hasPlugin(plugins, \"moduleAttributes\")) {\n    if (hasPlugin(plugins, \"importAssertions\")) {\n      throw new Error(\"Cannot combine importAssertions and moduleAttributes plugins.\");\n    }\n\n    const moduleAttributesVerionPluginOption = getPluginOption(plugins, \"moduleAttributes\", \"version\");\n\n    if (moduleAttributesVerionPluginOption !== \"may-2020\") {\n      throw new Error(\"The 'moduleAttributes' plugin requires a 'version' option,\" + \" representing the last proposal update. Currently, the\" + \" only supported value is 'may-2020'.\");\n    }\n  }\n\n  if (hasPlugin(plugins, \"recordAndTuple\") && !RECORD_AND_TUPLE_SYNTAX_TYPES.includes(getPluginOption(plugins, \"recordAndTuple\", \"syntaxType\"))) {\n    throw new Error(\"'recordAndTuple' requires 'syntaxType' option whose value should be one of: \" + RECORD_AND_TUPLE_SYNTAX_TYPES.map(p => `'${p}'`).join(\", \"));\n  }\n}\nconst mixinPlugins = {\n  estree,\n  jsx,\n  flow,\n  typescript,\n  v8intrinsic,\n  placeholders\n};\nconst mixinPluginNames = Object.keys(mixinPlugins);\n\nconst defaultOptions = {\n  sourceType: \"script\",\n  sourceFilename: undefined,\n  startLine: 1,\n  allowAwaitOutsideFunction: false,\n  allowReturnOutsideFunction: false,\n  allowImportExportEverywhere: false,\n  allowSuperOutsideMethod: false,\n  allowUndeclaredExports: false,\n  plugins: [],\n  strictMode: null,\n  ranges: false,\n  tokens: false,\n  createParenthesizedExpressions: false,\n  errorRecovery: false\n};\nfunction getOptions(opts) {\n  const options = {};\n\n  for (let _i = 0, _Object$keys = Object.keys(defaultOptions); _i < _Object$keys.length; _i++) {\n    const key = _Object$keys[_i];\n    options[key] = opts && opts[key] != null ? opts[key] : defaultOptions[key];\n  }\n\n  return options;\n}\n\nclass State {\n  constructor() {\n    this.strict = void 0;\n    this.curLine = void 0;\n    this.startLoc = void 0;\n    this.endLoc = void 0;\n    this.errors = [];\n    this.potentialArrowAt = -1;\n    this.noArrowAt = [];\n    this.noArrowParamsConversionAt = [];\n    this.maybeInArrowParameters = false;\n    this.inPipeline = false;\n    this.inType = false;\n    this.noAnonFunctionType = false;\n    this.inPropertyName = false;\n    this.hasFlowComment = false;\n    this.isIterator = false;\n    this.isDeclareContext = false;\n    this.inAbstractClass = false;\n    this.topicContext = {\n      maxNumOfResolvableTopics: 0,\n      maxTopicIndex: null\n    };\n    this.soloAwait = false;\n    this.inFSharpPipelineDirectBody = false;\n    this.labels = [];\n    this.decoratorStack = [[]];\n    this.comments = [];\n    this.trailingComments = [];\n    this.leadingComments = [];\n    this.commentStack = [];\n    this.commentPreviousNode = null;\n    this.pos = 0;\n    this.lineStart = 0;\n    this.type = types.eof;\n    this.value = null;\n    this.start = 0;\n    this.end = 0;\n    this.lastTokEndLoc = null;\n    this.lastTokStartLoc = null;\n    this.lastTokStart = 0;\n    this.lastTokEnd = 0;\n    this.context = [types$1.braceStatement];\n    this.exprAllowed = true;\n    this.containsEsc = false;\n    this.strictErrors = new Map();\n    this.exportedIdentifiers = [];\n    this.tokensLength = 0;\n  }\n\n  init(options) {\n    this.strict = options.strictMode === false ? false : options.sourceType === \"module\";\n    this.curLine = options.startLine;\n    this.startLoc = this.endLoc = this.curPosition();\n  }\n\n  curPosition() {\n    return new Position(this.curLine, this.pos - this.lineStart);\n  }\n\n  clone(skipArrays) {\n    const state = new State();\n    const keys = Object.keys(this);\n\n    for (let i = 0, length = keys.length; i < length; i++) {\n      const key = keys[i];\n      let val = this[key];\n\n      if (!skipArrays && Array.isArray(val)) {\n        val = val.slice();\n      }\n\n      state[key] = val;\n    }\n\n    return state;\n  }\n\n}\n\nvar _isDigit = function isDigit(code) {\n  return code >= 48 && code <= 57;\n};\nconst VALID_REGEX_FLAGS = new Set([\"g\", \"m\", \"s\", \"i\", \"y\", \"u\"]);\nconst forbiddenNumericSeparatorSiblings = {\n  decBinOct: [46, 66, 69, 79, 95, 98, 101, 111],\n  hex: [46, 88, 95, 120]\n};\nconst allowedNumericSeparatorSiblings = {};\nallowedNumericSeparatorSiblings.bin = [48, 49];\nallowedNumericSeparatorSiblings.oct = [...allowedNumericSeparatorSiblings.bin, 50, 51, 52, 53, 54, 55];\nallowedNumericSeparatorSiblings.dec = [...allowedNumericSeparatorSiblings.oct, 56, 57];\nallowedNumericSeparatorSiblings.hex = [...allowedNumericSeparatorSiblings.dec, 65, 66, 67, 68, 69, 70, 97, 98, 99, 100, 101, 102];\nclass Token {\n  constructor(state) {\n    this.type = state.type;\n    this.value = state.value;\n    this.start = state.start;\n    this.end = state.end;\n    this.loc = new SourceLocation(state.startLoc, state.endLoc);\n  }\n\n}\nclass Tokenizer extends ParserError {\n  constructor(options, input) {\n    super();\n    this.isLookahead = void 0;\n    this.tokens = [];\n    this.state = new State();\n    this.state.init(options);\n    this.input = input;\n    this.length = input.length;\n    this.isLookahead = false;\n  }\n\n  pushToken(token) {\n    this.tokens.length = this.state.tokensLength;\n    this.tokens.push(token);\n    ++this.state.tokensLength;\n  }\n\n  next() {\n    if (!this.isLookahead) {\n      this.checkKeywordEscapes();\n\n      if (this.options.tokens) {\n        this.pushToken(new Token(this.state));\n      }\n    }\n\n    this.state.lastTokEnd = this.state.end;\n    this.state.lastTokStart = this.state.start;\n    this.state.lastTokEndLoc = this.state.endLoc;\n    this.state.lastTokStartLoc = this.state.startLoc;\n    this.nextToken();\n  }\n\n  eat(type) {\n    if (this.match(type)) {\n      this.next();\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  match(type) {\n    return this.state.type === type;\n  }\n\n  lookahead() {\n    const old = this.state;\n    this.state = old.clone(true);\n    this.isLookahead = true;\n    this.next();\n    this.isLookahead = false;\n    const curr = this.state;\n    this.state = old;\n    return curr;\n  }\n\n  nextTokenStart() {\n    return this.nextTokenStartSince(this.state.pos);\n  }\n\n  nextTokenStartSince(pos) {\n    skipWhiteSpace.lastIndex = pos;\n    const skip = skipWhiteSpace.exec(this.input);\n    return pos + skip[0].length;\n  }\n\n  lookaheadCharCode() {\n    return this.input.charCodeAt(this.nextTokenStart());\n  }\n\n  setStrict(strict) {\n    this.state.strict = strict;\n\n    if (strict) {\n      this.state.strictErrors.forEach((message, pos) => this.raise(pos, message));\n      this.state.strictErrors.clear();\n    }\n  }\n\n  curContext() {\n    return this.state.context[this.state.context.length - 1];\n  }\n\n  nextToken() {\n    const curContext = this.curContext();\n    if (!(curContext == null ? void 0 : curContext.preserveSpace)) this.skipSpace();\n    this.state.start = this.state.pos;\n    this.state.startLoc = this.state.curPosition();\n\n    if (this.state.pos >= this.length) {\n      this.finishToken(types.eof);\n      return;\n    }\n\n    const override = curContext == null ? void 0 : curContext.override;\n\n    if (override) {\n      override(this);\n    } else {\n      this.getTokenFromCode(this.input.codePointAt(this.state.pos));\n    }\n  }\n\n  pushComment(block, text, start, end, startLoc, endLoc) {\n    const comment = {\n      type: block ? \"CommentBlock\" : \"CommentLine\",\n      value: text,\n      start: start,\n      end: end,\n      loc: new SourceLocation(startLoc, endLoc)\n    };\n    if (this.options.tokens) this.pushToken(comment);\n    this.state.comments.push(comment);\n    this.addComment(comment);\n  }\n\n  skipBlockComment() {\n    const startLoc = this.state.curPosition();\n    const start = this.state.pos;\n    const end = this.input.indexOf(\"*/\", this.state.pos + 2);\n    if (end === -1) throw this.raise(start, ErrorMessages.UnterminatedComment);\n    this.state.pos = end + 2;\n    lineBreakG.lastIndex = start;\n    let match;\n\n    while ((match = lineBreakG.exec(this.input)) && match.index < this.state.pos) {\n      ++this.state.curLine;\n      this.state.lineStart = match.index + match[0].length;\n    }\n\n    if (this.isLookahead) return;\n    this.pushComment(true, this.input.slice(start + 2, end), start, this.state.pos, startLoc, this.state.curPosition());\n  }\n\n  skipLineComment(startSkip) {\n    const start = this.state.pos;\n    const startLoc = this.state.curPosition();\n    let ch = this.input.charCodeAt(this.state.pos += startSkip);\n\n    if (this.state.pos < this.length) {\n      while (!isNewLine(ch) && ++this.state.pos < this.length) {\n        ch = this.input.charCodeAt(this.state.pos);\n      }\n    }\n\n    if (this.isLookahead) return;\n    this.pushComment(false, this.input.slice(start + startSkip, this.state.pos), start, this.state.pos, startLoc, this.state.curPosition());\n  }\n\n  skipSpace() {\n    loop: while (this.state.pos < this.length) {\n      const ch = this.input.charCodeAt(this.state.pos);\n\n      switch (ch) {\n        case 32:\n        case 160:\n        case 9:\n          ++this.state.pos;\n          break;\n\n        case 13:\n          if (this.input.charCodeAt(this.state.pos + 1) === 10) {\n            ++this.state.pos;\n          }\n\n        case 10:\n        case 8232:\n        case 8233:\n          ++this.state.pos;\n          ++this.state.curLine;\n          this.state.lineStart = this.state.pos;\n          break;\n\n        case 47:\n          switch (this.input.charCodeAt(this.state.pos + 1)) {\n            case 42:\n              this.skipBlockComment();\n              break;\n\n            case 47:\n              this.skipLineComment(2);\n              break;\n\n            default:\n              break loop;\n          }\n\n          break;\n\n        default:\n          if (isWhitespace(ch)) {\n            ++this.state.pos;\n          } else {\n            break loop;\n          }\n\n      }\n    }\n  }\n\n  finishToken(type, val) {\n    this.state.end = this.state.pos;\n    this.state.endLoc = this.state.curPosition();\n    const prevType = this.state.type;\n    this.state.type = type;\n    this.state.value = val;\n    if (!this.isLookahead) this.updateContext(prevType);\n  }\n\n  readToken_numberSign() {\n    if (this.state.pos === 0 && this.readToken_interpreter()) {\n      return;\n    }\n\n    const nextPos = this.state.pos + 1;\n    const next = this.input.charCodeAt(nextPos);\n\n    if (next >= 48 && next <= 57) {\n      throw this.raise(this.state.pos, ErrorMessages.UnexpectedDigitAfterHash);\n    }\n\n    if (next === 123 || next === 91 && this.hasPlugin(\"recordAndTuple\")) {\n      this.expectPlugin(\"recordAndTuple\");\n\n      if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"hash\") {\n        throw this.raise(this.state.pos, next === 123 ? ErrorMessages.RecordExpressionHashIncorrectStartSyntaxType : ErrorMessages.TupleExpressionHashIncorrectStartSyntaxType);\n      }\n\n      if (next === 123) {\n        this.finishToken(types.braceHashL);\n      } else {\n        this.finishToken(types.bracketHashL);\n      }\n\n      this.state.pos += 2;\n    } else {\n      this.finishOp(types.hash, 1);\n    }\n  }\n\n  readToken_dot() {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next >= 48 && next <= 57) {\n      this.readNumber(true);\n      return;\n    }\n\n    if (next === 46 && this.input.charCodeAt(this.state.pos + 2) === 46) {\n      this.state.pos += 3;\n      this.finishToken(types.ellipsis);\n    } else {\n      ++this.state.pos;\n      this.finishToken(types.dot);\n    }\n  }\n\n  readToken_slash() {\n    if (this.state.exprAllowed && !this.state.inType) {\n      ++this.state.pos;\n      this.readRegexp();\n      return;\n    }\n\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next === 61) {\n      this.finishOp(types.assign, 2);\n    } else {\n      this.finishOp(types.slash, 1);\n    }\n  }\n\n  readToken_interpreter() {\n    if (this.state.pos !== 0 || this.length < 2) return false;\n    let ch = this.input.charCodeAt(this.state.pos + 1);\n    if (ch !== 33) return false;\n    const start = this.state.pos;\n    this.state.pos += 1;\n\n    while (!isNewLine(ch) && ++this.state.pos < this.length) {\n      ch = this.input.charCodeAt(this.state.pos);\n    }\n\n    const value = this.input.slice(start + 2, this.state.pos);\n    this.finishToken(types.interpreterDirective, value);\n    return true;\n  }\n\n  readToken_mult_modulo(code) {\n    let type = code === 42 ? types.star : types.modulo;\n    let width = 1;\n    let next = this.input.charCodeAt(this.state.pos + 1);\n    const exprAllowed = this.state.exprAllowed;\n\n    if (code === 42 && next === 42) {\n      width++;\n      next = this.input.charCodeAt(this.state.pos + 2);\n      type = types.exponent;\n    }\n\n    if (next === 61 && !exprAllowed) {\n      width++;\n      type = types.assign;\n    }\n\n    this.finishOp(type, width);\n  }\n\n  readToken_pipe_amp(code) {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next === code) {\n      if (this.input.charCodeAt(this.state.pos + 2) === 61) {\n        this.finishOp(types.assign, 3);\n      } else {\n        this.finishOp(code === 124 ? types.logicalOR : types.logicalAND, 2);\n      }\n\n      return;\n    }\n\n    if (code === 124) {\n      if (next === 62) {\n        this.finishOp(types.pipeline, 2);\n        return;\n      }\n\n      if (this.hasPlugin(\"recordAndTuple\") && next === 125) {\n        if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n          throw this.raise(this.state.pos, ErrorMessages.RecordExpressionBarIncorrectEndSyntaxType);\n        }\n\n        this.finishOp(types.braceBarR, 2);\n        return;\n      }\n\n      if (this.hasPlugin(\"recordAndTuple\") && next === 93) {\n        if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n          throw this.raise(this.state.pos, ErrorMessages.TupleExpressionBarIncorrectEndSyntaxType);\n        }\n\n        this.finishOp(types.bracketBarR, 2);\n        return;\n      }\n    }\n\n    if (next === 61) {\n      this.finishOp(types.assign, 2);\n      return;\n    }\n\n    this.finishOp(code === 124 ? types.bitwiseOR : types.bitwiseAND, 1);\n  }\n\n  readToken_caret() {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next === 61) {\n      this.finishOp(types.assign, 2);\n    } else {\n      this.finishOp(types.bitwiseXOR, 1);\n    }\n  }\n\n  readToken_plus_min(code) {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next === code) {\n      if (next === 45 && !this.inModule && this.input.charCodeAt(this.state.pos + 2) === 62 && (this.state.lastTokEnd === 0 || this.hasPrecedingLineBreak())) {\n        this.skipLineComment(3);\n        this.skipSpace();\n        this.nextToken();\n        return;\n      }\n\n      this.finishOp(types.incDec, 2);\n      return;\n    }\n\n    if (next === 61) {\n      this.finishOp(types.assign, 2);\n    } else {\n      this.finishOp(types.plusMin, 1);\n    }\n  }\n\n  readToken_lt_gt(code) {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n    let size = 1;\n\n    if (next === code) {\n      size = code === 62 && this.input.charCodeAt(this.state.pos + 2) === 62 ? 3 : 2;\n\n      if (this.input.charCodeAt(this.state.pos + size) === 61) {\n        this.finishOp(types.assign, size + 1);\n        return;\n      }\n\n      this.finishOp(types.bitShift, size);\n      return;\n    }\n\n    if (next === 33 && code === 60 && !this.inModule && this.input.charCodeAt(this.state.pos + 2) === 45 && this.input.charCodeAt(this.state.pos + 3) === 45) {\n      this.skipLineComment(4);\n      this.skipSpace();\n      this.nextToken();\n      return;\n    }\n\n    if (next === 61) {\n      size = 2;\n    }\n\n    this.finishOp(types.relational, size);\n  }\n\n  readToken_eq_excl(code) {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next === 61) {\n      this.finishOp(types.equality, this.input.charCodeAt(this.state.pos + 2) === 61 ? 3 : 2);\n      return;\n    }\n\n    if (code === 61 && next === 62) {\n      this.state.pos += 2;\n      this.finishToken(types.arrow);\n      return;\n    }\n\n    this.finishOp(code === 61 ? types.eq : types.bang, 1);\n  }\n\n  readToken_question() {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n    const next2 = this.input.charCodeAt(this.state.pos + 2);\n\n    if (next === 63) {\n      if (next2 === 61) {\n        this.finishOp(types.assign, 3);\n      } else {\n        this.finishOp(types.nullishCoalescing, 2);\n      }\n    } else if (next === 46 && !(next2 >= 48 && next2 <= 57)) {\n      this.state.pos += 2;\n      this.finishToken(types.questionDot);\n    } else {\n      ++this.state.pos;\n      this.finishToken(types.question);\n    }\n  }\n\n  getTokenFromCode(code) {\n    switch (code) {\n      case 46:\n        this.readToken_dot();\n        return;\n\n      case 40:\n        ++this.state.pos;\n        this.finishToken(types.parenL);\n        return;\n\n      case 41:\n        ++this.state.pos;\n        this.finishToken(types.parenR);\n        return;\n\n      case 59:\n        ++this.state.pos;\n        this.finishToken(types.semi);\n        return;\n\n      case 44:\n        ++this.state.pos;\n        this.finishToken(types.comma);\n        return;\n\n      case 91:\n        if (this.hasPlugin(\"recordAndTuple\") && this.input.charCodeAt(this.state.pos + 1) === 124) {\n          if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n            throw this.raise(this.state.pos, ErrorMessages.TupleExpressionBarIncorrectStartSyntaxType);\n          }\n\n          this.finishToken(types.bracketBarL);\n          this.state.pos += 2;\n        } else {\n          ++this.state.pos;\n          this.finishToken(types.bracketL);\n        }\n\n        return;\n\n      case 93:\n        ++this.state.pos;\n        this.finishToken(types.bracketR);\n        return;\n\n      case 123:\n        if (this.hasPlugin(\"recordAndTuple\") && this.input.charCodeAt(this.state.pos + 1) === 124) {\n          if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n            throw this.raise(this.state.pos, ErrorMessages.RecordExpressionBarIncorrectStartSyntaxType);\n          }\n\n          this.finishToken(types.braceBarL);\n          this.state.pos += 2;\n        } else {\n          ++this.state.pos;\n          this.finishToken(types.braceL);\n        }\n\n        return;\n\n      case 125:\n        ++this.state.pos;\n        this.finishToken(types.braceR);\n        return;\n\n      case 58:\n        if (this.hasPlugin(\"functionBind\") && this.input.charCodeAt(this.state.pos + 1) === 58) {\n          this.finishOp(types.doubleColon, 2);\n        } else {\n          ++this.state.pos;\n          this.finishToken(types.colon);\n        }\n\n        return;\n\n      case 63:\n        this.readToken_question();\n        return;\n\n      case 96:\n        ++this.state.pos;\n        this.finishToken(types.backQuote);\n        return;\n\n      case 48:\n        {\n          const next = this.input.charCodeAt(this.state.pos + 1);\n\n          if (next === 120 || next === 88) {\n            this.readRadixNumber(16);\n            return;\n          }\n\n          if (next === 111 || next === 79) {\n            this.readRadixNumber(8);\n            return;\n          }\n\n          if (next === 98 || next === 66) {\n            this.readRadixNumber(2);\n            return;\n          }\n        }\n\n      case 49:\n      case 50:\n      case 51:\n      case 52:\n      case 53:\n      case 54:\n      case 55:\n      case 56:\n      case 57:\n        this.readNumber(false);\n        return;\n\n      case 34:\n      case 39:\n        this.readString(code);\n        return;\n\n      case 47:\n        this.readToken_slash();\n        return;\n\n      case 37:\n      case 42:\n        this.readToken_mult_modulo(code);\n        return;\n\n      case 124:\n      case 38:\n        this.readToken_pipe_amp(code);\n        return;\n\n      case 94:\n        this.readToken_caret();\n        return;\n\n      case 43:\n      case 45:\n        this.readToken_plus_min(code);\n        return;\n\n      case 60:\n      case 62:\n        this.readToken_lt_gt(code);\n        return;\n\n      case 61:\n      case 33:\n        this.readToken_eq_excl(code);\n        return;\n\n      case 126:\n        this.finishOp(types.tilde, 1);\n        return;\n\n      case 64:\n        ++this.state.pos;\n        this.finishToken(types.at);\n        return;\n\n      case 35:\n        this.readToken_numberSign();\n        return;\n\n      case 92:\n        this.readWord();\n        return;\n\n      default:\n        if (isIdentifierStart(code)) {\n          this.readWord();\n          return;\n        }\n\n    }\n\n    throw this.raise(this.state.pos, ErrorMessages.InvalidOrUnexpectedToken, String.fromCodePoint(code));\n  }\n\n  finishOp(type, size) {\n    const str = this.input.slice(this.state.pos, this.state.pos + size);\n    this.state.pos += size;\n    this.finishToken(type, str);\n  }\n\n  readRegexp() {\n    const start = this.state.pos;\n    let escaped, inClass;\n\n    for (;;) {\n      if (this.state.pos >= this.length) {\n        throw this.raise(start, ErrorMessages.UnterminatedRegExp);\n      }\n\n      const ch = this.input.charAt(this.state.pos);\n\n      if (lineBreak.test(ch)) {\n        throw this.raise(start, ErrorMessages.UnterminatedRegExp);\n      }\n\n      if (escaped) {\n        escaped = false;\n      } else {\n        if (ch === \"[\") {\n          inClass = true;\n        } else if (ch === \"]\" && inClass) {\n          inClass = false;\n        } else if (ch === \"/\" && !inClass) {\n          break;\n        }\n\n        escaped = ch === \"\\\\\";\n      }\n\n      ++this.state.pos;\n    }\n\n    const content = this.input.slice(start, this.state.pos);\n    ++this.state.pos;\n    let mods = \"\";\n\n    while (this.state.pos < this.length) {\n      const char = this.input[this.state.pos];\n      const charCode = this.input.codePointAt(this.state.pos);\n\n      if (VALID_REGEX_FLAGS.has(char)) {\n        if (mods.indexOf(char) > -1) {\n          this.raise(this.state.pos + 1, ErrorMessages.DuplicateRegExpFlags);\n        }\n      } else if (isIdentifierChar(charCode) || charCode === 92) {\n        this.raise(this.state.pos + 1, ErrorMessages.MalformedRegExpFlags);\n      } else {\n        break;\n      }\n\n      ++this.state.pos;\n      mods += char;\n    }\n\n    this.finishToken(types.regexp, {\n      pattern: content,\n      flags: mods\n    });\n  }\n\n  readInt(radix, len, forceLen, allowNumSeparator = true) {\n    const start = this.state.pos;\n    const forbiddenSiblings = radix === 16 ? forbiddenNumericSeparatorSiblings.hex : forbiddenNumericSeparatorSiblings.decBinOct;\n    const allowedSiblings = radix === 16 ? allowedNumericSeparatorSiblings.hex : radix === 10 ? allowedNumericSeparatorSiblings.dec : radix === 8 ? allowedNumericSeparatorSiblings.oct : allowedNumericSeparatorSiblings.bin;\n    let invalid = false;\n    let total = 0;\n\n    for (let i = 0, e = len == null ? Infinity : len; i < e; ++i) {\n      const code = this.input.charCodeAt(this.state.pos);\n      let val;\n\n      if (code === 95) {\n        const prev = this.input.charCodeAt(this.state.pos - 1);\n        const next = this.input.charCodeAt(this.state.pos + 1);\n\n        if (allowedSiblings.indexOf(next) === -1) {\n          this.raise(this.state.pos, ErrorMessages.UnexpectedNumericSeparator);\n        } else if (forbiddenSiblings.indexOf(prev) > -1 || forbiddenSiblings.indexOf(next) > -1 || Number.isNaN(next)) {\n          this.raise(this.state.pos, ErrorMessages.UnexpectedNumericSeparator);\n        }\n\n        if (!allowNumSeparator) {\n          this.raise(this.state.pos, ErrorMessages.NumericSeparatorInEscapeSequence);\n        }\n\n        ++this.state.pos;\n        continue;\n      }\n\n      if (code >= 97) {\n        val = code - 97 + 10;\n      } else if (code >= 65) {\n        val = code - 65 + 10;\n      } else if (_isDigit(code)) {\n        val = code - 48;\n      } else {\n        val = Infinity;\n      }\n\n      if (val >= radix) {\n        if (this.options.errorRecovery && val <= 9) {\n          val = 0;\n          this.raise(this.state.start + i + 2, ErrorMessages.InvalidDigit, radix);\n        } else if (forceLen) {\n          val = 0;\n          invalid = true;\n        } else {\n          break;\n        }\n      }\n\n      ++this.state.pos;\n      total = total * radix + val;\n    }\n\n    if (this.state.pos === start || len != null && this.state.pos - start !== len || invalid) {\n      return null;\n    }\n\n    return total;\n  }\n\n  readRadixNumber(radix) {\n    const start = this.state.pos;\n    let isBigInt = false;\n    this.state.pos += 2;\n    const val = this.readInt(radix);\n\n    if (val == null) {\n      this.raise(this.state.start + 2, ErrorMessages.InvalidDigit, radix);\n    }\n\n    const next = this.input.charCodeAt(this.state.pos);\n\n    if (next === 110) {\n      ++this.state.pos;\n      isBigInt = true;\n    } else if (next === 109) {\n      throw this.raise(start, ErrorMessages.InvalidDecimal);\n    }\n\n    if (isIdentifierStart(this.input.codePointAt(this.state.pos))) {\n      throw this.raise(this.state.pos, ErrorMessages.NumberIdentifier);\n    }\n\n    if (isBigInt) {\n      const str = this.input.slice(start, this.state.pos).replace(/[_n]/g, \"\");\n      this.finishToken(types.bigint, str);\n      return;\n    }\n\n    this.finishToken(types.num, val);\n  }\n\n  readNumber(startsWithDot) {\n    const start = this.state.pos;\n    let isFloat = false;\n    let isBigInt = false;\n    let isDecimal = false;\n    let hasExponent = false;\n    let isOctal = false;\n\n    if (!startsWithDot && this.readInt(10) === null) {\n      this.raise(start, ErrorMessages.InvalidNumber);\n    }\n\n    const hasLeadingZero = this.state.pos - start >= 2 && this.input.charCodeAt(start) === 48;\n\n    if (hasLeadingZero) {\n      const integer = this.input.slice(start, this.state.pos);\n      this.recordStrictModeErrors(start, ErrorMessages.StrictOctalLiteral);\n\n      if (!this.state.strict) {\n        const underscorePos = integer.indexOf(\"_\");\n\n        if (underscorePos > 0) {\n          this.raise(underscorePos + start, ErrorMessages.ZeroDigitNumericSeparator);\n        }\n      }\n\n      isOctal = hasLeadingZero && !/[89]/.test(integer);\n    }\n\n    let next = this.input.charCodeAt(this.state.pos);\n\n    if (next === 46 && !isOctal) {\n      ++this.state.pos;\n      this.readInt(10);\n      isFloat = true;\n      next = this.input.charCodeAt(this.state.pos);\n    }\n\n    if ((next === 69 || next === 101) && !isOctal) {\n      next = this.input.charCodeAt(++this.state.pos);\n\n      if (next === 43 || next === 45) {\n        ++this.state.pos;\n      }\n\n      if (this.readInt(10) === null) {\n        this.raise(start, ErrorMessages.InvalidOrMissingExponent);\n      }\n\n      isFloat = true;\n      hasExponent = true;\n      next = this.input.charCodeAt(this.state.pos);\n    }\n\n    if (next === 110) {\n      if (isFloat || hasLeadingZero) {\n        this.raise(start, ErrorMessages.InvalidBigIntLiteral);\n      }\n\n      ++this.state.pos;\n      isBigInt = true;\n    }\n\n    if (next === 109) {\n      this.expectPlugin(\"decimal\", this.state.pos);\n\n      if (hasExponent || hasLeadingZero) {\n        this.raise(start, ErrorMessages.InvalidDecimal);\n      }\n\n      ++this.state.pos;\n      isDecimal = true;\n    }\n\n    if (isIdentifierStart(this.input.codePointAt(this.state.pos))) {\n      throw this.raise(this.state.pos, ErrorMessages.NumberIdentifier);\n    }\n\n    const str = this.input.slice(start, this.state.pos).replace(/[_mn]/g, \"\");\n\n    if (isBigInt) {\n      this.finishToken(types.bigint, str);\n      return;\n    }\n\n    if (isDecimal) {\n      this.finishToken(types.decimal, str);\n      return;\n    }\n\n    const val = isOctal ? parseInt(str, 8) : parseFloat(str);\n    this.finishToken(types.num, val);\n  }\n\n  readCodePoint(throwOnInvalid) {\n    const ch = this.input.charCodeAt(this.state.pos);\n    let code;\n\n    if (ch === 123) {\n      const codePos = ++this.state.pos;\n      code = this.readHexChar(this.input.indexOf(\"}\", this.state.pos) - this.state.pos, true, throwOnInvalid);\n      ++this.state.pos;\n\n      if (code !== null && code > 0x10ffff) {\n        if (throwOnInvalid) {\n          this.raise(codePos, ErrorMessages.InvalidCodePoint);\n        } else {\n          return null;\n        }\n      }\n    } else {\n      code = this.readHexChar(4, false, throwOnInvalid);\n    }\n\n    return code;\n  }\n\n  readString(quote) {\n    let out = \"\",\n        chunkStart = ++this.state.pos;\n\n    for (;;) {\n      if (this.state.pos >= this.length) {\n        throw this.raise(this.state.start, ErrorMessages.UnterminatedString);\n      }\n\n      const ch = this.input.charCodeAt(this.state.pos);\n      if (ch === quote) break;\n\n      if (ch === 92) {\n        out += this.input.slice(chunkStart, this.state.pos);\n        out += this.readEscapedChar(false);\n        chunkStart = this.state.pos;\n      } else if (ch === 8232 || ch === 8233) {\n        ++this.state.pos;\n        ++this.state.curLine;\n        this.state.lineStart = this.state.pos;\n      } else if (isNewLine(ch)) {\n        throw this.raise(this.state.start, ErrorMessages.UnterminatedString);\n      } else {\n        ++this.state.pos;\n      }\n    }\n\n    out += this.input.slice(chunkStart, this.state.pos++);\n    this.finishToken(types.string, out);\n  }\n\n  readTmplToken() {\n    let out = \"\",\n        chunkStart = this.state.pos,\n        containsInvalid = false;\n\n    for (;;) {\n      if (this.state.pos >= this.length) {\n        throw this.raise(this.state.start, ErrorMessages.UnterminatedTemplate);\n      }\n\n      const ch = this.input.charCodeAt(this.state.pos);\n\n      if (ch === 96 || ch === 36 && this.input.charCodeAt(this.state.pos + 1) === 123) {\n        if (this.state.pos === this.state.start && this.match(types.template)) {\n          if (ch === 36) {\n            this.state.pos += 2;\n            this.finishToken(types.dollarBraceL);\n            return;\n          } else {\n            ++this.state.pos;\n            this.finishToken(types.backQuote);\n            return;\n          }\n        }\n\n        out += this.input.slice(chunkStart, this.state.pos);\n        this.finishToken(types.template, containsInvalid ? null : out);\n        return;\n      }\n\n      if (ch === 92) {\n        out += this.input.slice(chunkStart, this.state.pos);\n        const escaped = this.readEscapedChar(true);\n\n        if (escaped === null) {\n          containsInvalid = true;\n        } else {\n          out += escaped;\n        }\n\n        chunkStart = this.state.pos;\n      } else if (isNewLine(ch)) {\n        out += this.input.slice(chunkStart, this.state.pos);\n        ++this.state.pos;\n\n        switch (ch) {\n          case 13:\n            if (this.input.charCodeAt(this.state.pos) === 10) {\n              ++this.state.pos;\n            }\n\n          case 10:\n            out += \"\\n\";\n            break;\n\n          default:\n            out += String.fromCharCode(ch);\n            break;\n        }\n\n        ++this.state.curLine;\n        this.state.lineStart = this.state.pos;\n        chunkStart = this.state.pos;\n      } else {\n        ++this.state.pos;\n      }\n    }\n  }\n\n  recordStrictModeErrors(pos, message) {\n    if (this.state.strict && !this.state.strictErrors.has(pos)) {\n      this.raise(pos, message);\n    } else {\n      this.state.strictErrors.set(pos, message);\n    }\n  }\n\n  readEscapedChar(inTemplate) {\n    const throwOnInvalid = !inTemplate;\n    const ch = this.input.charCodeAt(++this.state.pos);\n    ++this.state.pos;\n\n    switch (ch) {\n      case 110:\n        return \"\\n\";\n\n      case 114:\n        return \"\\r\";\n\n      case 120:\n        {\n          const code = this.readHexChar(2, false, throwOnInvalid);\n          return code === null ? null : String.fromCharCode(code);\n        }\n\n      case 117:\n        {\n          const code = this.readCodePoint(throwOnInvalid);\n          return code === null ? null : String.fromCodePoint(code);\n        }\n\n      case 116:\n        return \"\\t\";\n\n      case 98:\n        return \"\\b\";\n\n      case 118:\n        return \"\\u000b\";\n\n      case 102:\n        return \"\\f\";\n\n      case 13:\n        if (this.input.charCodeAt(this.state.pos) === 10) {\n          ++this.state.pos;\n        }\n\n      case 10:\n        this.state.lineStart = this.state.pos;\n        ++this.state.curLine;\n\n      case 8232:\n      case 8233:\n        return \"\";\n\n      case 56:\n      case 57:\n        if (inTemplate) {\n          return null;\n        } else {\n          this.recordStrictModeErrors(this.state.pos - 1, ErrorMessages.StrictNumericEscape);\n        }\n\n      default:\n        if (ch >= 48 && ch <= 55) {\n          const codePos = this.state.pos - 1;\n          const match = this.input.substr(this.state.pos - 1, 3).match(/^[0-7]+/);\n          let octalStr = match[0];\n          let octal = parseInt(octalStr, 8);\n\n          if (octal > 255) {\n            octalStr = octalStr.slice(0, -1);\n            octal = parseInt(octalStr, 8);\n          }\n\n          this.state.pos += octalStr.length - 1;\n          const next = this.input.charCodeAt(this.state.pos);\n\n          if (octalStr !== \"0\" || next === 56 || next === 57) {\n            if (inTemplate) {\n              return null;\n            } else {\n              this.recordStrictModeErrors(codePos, ErrorMessages.StrictNumericEscape);\n            }\n          }\n\n          return String.fromCharCode(octal);\n        }\n\n        return String.fromCharCode(ch);\n    }\n  }\n\n  readHexChar(len, forceLen, throwOnInvalid) {\n    const codePos = this.state.pos;\n    const n = this.readInt(16, len, forceLen, false);\n\n    if (n === null) {\n      if (throwOnInvalid) {\n        this.raise(codePos, ErrorMessages.InvalidEscapeSequence);\n      } else {\n        this.state.pos = codePos - 1;\n      }\n    }\n\n    return n;\n  }\n\n  readWord1() {\n    let word = \"\";\n    this.state.containsEsc = false;\n    const start = this.state.pos;\n    let chunkStart = this.state.pos;\n\n    while (this.state.pos < this.length) {\n      const ch = this.input.codePointAt(this.state.pos);\n\n      if (isIdentifierChar(ch)) {\n        this.state.pos += ch <= 0xffff ? 1 : 2;\n      } else if (this.state.isIterator && ch === 64) {\n        ++this.state.pos;\n      } else if (ch === 92) {\n        this.state.containsEsc = true;\n        word += this.input.slice(chunkStart, this.state.pos);\n        const escStart = this.state.pos;\n        const identifierCheck = this.state.pos === start ? isIdentifierStart : isIdentifierChar;\n\n        if (this.input.charCodeAt(++this.state.pos) !== 117) {\n          this.raise(this.state.pos, ErrorMessages.MissingUnicodeEscape);\n          continue;\n        }\n\n        ++this.state.pos;\n        const esc = this.readCodePoint(true);\n\n        if (esc !== null) {\n          if (!identifierCheck(esc)) {\n            this.raise(escStart, ErrorMessages.EscapedCharNotAnIdentifier);\n          }\n\n          word += String.fromCodePoint(esc);\n        }\n\n        chunkStart = this.state.pos;\n      } else {\n        break;\n      }\n    }\n\n    return word + this.input.slice(chunkStart, this.state.pos);\n  }\n\n  isIterator(word) {\n    return word === \"@@iterator\" || word === \"@@asyncIterator\";\n  }\n\n  readWord() {\n    const word = this.readWord1();\n    const type = keywords.get(word) || types.name;\n\n    if (this.state.isIterator && (!this.isIterator(word) || !this.state.inType)) {\n      this.raise(this.state.pos, ErrorMessages.InvalidIdentifier, word);\n    }\n\n    this.finishToken(type, word);\n  }\n\n  checkKeywordEscapes() {\n    const kw = this.state.type.keyword;\n\n    if (kw && this.state.containsEsc) {\n      this.raise(this.state.start, ErrorMessages.InvalidEscapedReservedWord, kw);\n    }\n  }\n\n  braceIsBlock(prevType) {\n    const parent = this.curContext();\n\n    if (parent === types$1.functionExpression || parent === types$1.functionStatement) {\n      return true;\n    }\n\n    if (prevType === types.colon && (parent === types$1.braceStatement || parent === types$1.braceExpression)) {\n      return !parent.isExpr;\n    }\n\n    if (prevType === types._return || prevType === types.name && this.state.exprAllowed) {\n      return this.hasPrecedingLineBreak();\n    }\n\n    if (prevType === types._else || prevType === types.semi || prevType === types.eof || prevType === types.parenR || prevType === types.arrow) {\n      return true;\n    }\n\n    if (prevType === types.braceL) {\n      return parent === types$1.braceStatement;\n    }\n\n    if (prevType === types._var || prevType === types._const || prevType === types.name) {\n      return false;\n    }\n\n    if (prevType === types.relational) {\n      return true;\n    }\n\n    return !this.state.exprAllowed;\n  }\n\n  updateContext(prevType) {\n    const type = this.state.type;\n    let update;\n\n    if (type.keyword && (prevType === types.dot || prevType === types.questionDot)) {\n      this.state.exprAllowed = false;\n    } else if (update = type.updateContext) {\n      update.call(this, prevType);\n    } else {\n      this.state.exprAllowed = type.beforeExpr;\n    }\n  }\n\n}\n\nclass UtilParser extends Tokenizer {\n  addExtra(node, key, val) {\n    if (!node) return;\n    const extra = node.extra = node.extra || {};\n    extra[key] = val;\n  }\n\n  isRelational(op) {\n    return this.match(types.relational) && this.state.value === op;\n  }\n\n  expectRelational(op) {\n    if (this.isRelational(op)) {\n      this.next();\n    } else {\n      this.unexpected(null, types.relational);\n    }\n  }\n\n  isContextual(name) {\n    return this.match(types.name) && this.state.value === name && !this.state.containsEsc;\n  }\n\n  isUnparsedContextual(nameStart, name) {\n    const nameEnd = nameStart + name.length;\n    return this.input.slice(nameStart, nameEnd) === name && (nameEnd === this.input.length || !isIdentifierChar(this.input.charCodeAt(nameEnd)));\n  }\n\n  isLookaheadContextual(name) {\n    const next = this.nextTokenStart();\n    return this.isUnparsedContextual(next, name);\n  }\n\n  eatContextual(name) {\n    return this.isContextual(name) && this.eat(types.name);\n  }\n\n  expectContextual(name, message) {\n    if (!this.eatContextual(name)) this.unexpected(null, message);\n  }\n\n  canInsertSemicolon() {\n    return this.match(types.eof) || this.match(types.braceR) || this.hasPrecedingLineBreak();\n  }\n\n  hasPrecedingLineBreak() {\n    return lineBreak.test(this.input.slice(this.state.lastTokEnd, this.state.start));\n  }\n\n  hasFollowingLineBreak() {\n    return lineBreak.test(this.input.slice(this.state.end, this.nextTokenStart()));\n  }\n\n  isLineTerminator() {\n    return this.eat(types.semi) || this.canInsertSemicolon();\n  }\n\n  semicolon(allowAsi = true) {\n    if (allowAsi ? this.isLineTerminator() : this.eat(types.semi)) return;\n    this.raise(this.state.lastTokEnd, ErrorMessages.MissingSemicolon);\n  }\n\n  expect(type, pos) {\n    this.eat(type) || this.unexpected(pos, type);\n  }\n\n  assertNoSpace(message = \"Unexpected space.\") {\n    if (this.state.start > this.state.lastTokEnd) {\n      this.raise(this.state.lastTokEnd, message);\n    }\n  }\n\n  unexpected(pos, messageOrType = \"Unexpected token\") {\n    if (typeof messageOrType !== \"string\") {\n      messageOrType = `Unexpected token, expected \"${messageOrType.label}\"`;\n    }\n\n    throw this.raise(pos != null ? pos : this.state.start, messageOrType);\n  }\n\n  expectPlugin(name, pos) {\n    if (!this.hasPlugin(name)) {\n      throw this.raiseWithData(pos != null ? pos : this.state.start, {\n        missingPlugin: [name]\n      }, `This experimental syntax requires enabling the parser plugin: '${name}'`);\n    }\n\n    return true;\n  }\n\n  expectOnePlugin(names, pos) {\n    if (!names.some(n => this.hasPlugin(n))) {\n      throw this.raiseWithData(pos != null ? pos : this.state.start, {\n        missingPlugin: names\n      }, `This experimental syntax requires enabling one of the following parser plugin(s): '${names.join(\", \")}'`);\n    }\n  }\n\n  tryParse(fn, oldState = this.state.clone()) {\n    const abortSignal = {\n      node: null\n    };\n\n    try {\n      const node = fn((node = null) => {\n        abortSignal.node = node;\n        throw abortSignal;\n      });\n\n      if (this.state.errors.length > oldState.errors.length) {\n        const failState = this.state;\n        this.state = oldState;\n        return {\n          node,\n          error: failState.errors[oldState.errors.length],\n          thrown: false,\n          aborted: false,\n          failState\n        };\n      }\n\n      return {\n        node,\n        error: null,\n        thrown: false,\n        aborted: false,\n        failState: null\n      };\n    } catch (error) {\n      const failState = this.state;\n      this.state = oldState;\n\n      if (error instanceof SyntaxError) {\n        return {\n          node: null,\n          error,\n          thrown: true,\n          aborted: false,\n          failState\n        };\n      }\n\n      if (error === abortSignal) {\n        return {\n          node: abortSignal.node,\n          error: null,\n          thrown: false,\n          aborted: true,\n          failState\n        };\n      }\n\n      throw error;\n    }\n  }\n\n  checkExpressionErrors(refExpressionErrors, andThrow) {\n    if (!refExpressionErrors) return false;\n    const {\n      shorthandAssign,\n      doubleProto\n    } = refExpressionErrors;\n    if (!andThrow) return shorthandAssign >= 0 || doubleProto >= 0;\n\n    if (shorthandAssign >= 0) {\n      this.unexpected(shorthandAssign);\n    }\n\n    if (doubleProto >= 0) {\n      this.raise(doubleProto, ErrorMessages.DuplicateProto);\n    }\n  }\n\n  isLiteralPropertyName() {\n    return this.match(types.name) || !!this.state.type.keyword || this.match(types.string) || this.match(types.num) || this.match(types.bigint) || this.match(types.decimal);\n  }\n\n  isPrivateName(node) {\n    return node.type === \"PrivateName\";\n  }\n\n  getPrivateNameSV(node) {\n    return node.id.name;\n  }\n\n  hasPropertyAsPrivateName(node) {\n    return (node.type === \"MemberExpression\" || node.type === \"OptionalMemberExpression\") && this.isPrivateName(node.property);\n  }\n\n  isOptionalChain(node) {\n    return node.type === \"OptionalMemberExpression\" || node.type === \"OptionalCallExpression\";\n  }\n\n  isObjectProperty(node) {\n    return node.type === \"ObjectProperty\";\n  }\n\n  isObjectMethod(node) {\n    return node.type === \"ObjectMethod\";\n  }\n\n}\nclass ExpressionErrors {\n  constructor() {\n    this.shorthandAssign = -1;\n    this.doubleProto = -1;\n  }\n\n}\n\nclass Node {\n  constructor(parser, pos, loc) {\n    this.type = void 0;\n    this.start = void 0;\n    this.end = void 0;\n    this.loc = void 0;\n    this.range = void 0;\n    this.leadingComments = void 0;\n    this.trailingComments = void 0;\n    this.innerComments = void 0;\n    this.extra = void 0;\n    this.type = \"\";\n    this.start = pos;\n    this.end = 0;\n    this.loc = new SourceLocation(loc);\n    if (parser == null ? void 0 : parser.options.ranges) this.range = [pos, 0];\n    if (parser == null ? void 0 : parser.filename) this.loc.filename = parser.filename;\n  }\n\n  __clone() {\n    const newNode = new Node();\n    const keys = Object.keys(this);\n\n    for (let i = 0, length = keys.length; i < length; i++) {\n      const key = keys[i];\n\n      if (key !== \"leadingComments\" && key !== \"trailingComments\" && key !== \"innerComments\") {\n        newNode[key] = this[key];\n      }\n    }\n\n    return newNode;\n  }\n\n}\n\nclass NodeUtils extends UtilParser {\n  startNode() {\n    return new Node(this, this.state.start, this.state.startLoc);\n  }\n\n  startNodeAt(pos, loc) {\n    return new Node(this, pos, loc);\n  }\n\n  startNodeAtNode(type) {\n    return this.startNodeAt(type.start, type.loc.start);\n  }\n\n  finishNode(node, type) {\n    return this.finishNodeAt(node, type, this.state.lastTokEnd, this.state.lastTokEndLoc);\n  }\n\n  finishNodeAt(node, type, pos, loc) {\n\n    node.type = type;\n    node.end = pos;\n    node.loc.end = loc;\n    if (this.options.ranges) node.range[1] = pos;\n    this.processComment(node);\n    return node;\n  }\n\n  resetStartLocation(node, start, startLoc) {\n    node.start = start;\n    node.loc.start = startLoc;\n    if (this.options.ranges) node.range[0] = start;\n  }\n\n  resetEndLocation(node, end = this.state.lastTokEnd, endLoc = this.state.lastTokEndLoc) {\n    node.end = end;\n    node.loc.end = endLoc;\n    if (this.options.ranges) node.range[1] = end;\n  }\n\n  resetStartLocationFromNode(node, locationNode) {\n    this.resetStartLocation(node, locationNode.start, locationNode.loc.start);\n  }\n\n}\n\nconst unwrapParenthesizedExpression = node => {\n  return node.type === \"ParenthesizedExpression\" ? unwrapParenthesizedExpression(node.expression) : node;\n};\n\nclass LValParser extends NodeUtils {\n  toAssignable(node, isLHS = false) {\n    var _node$extra, _node$extra3;\n\n    let parenthesized = undefined;\n\n    if (node.type === \"ParenthesizedExpression\" || ((_node$extra = node.extra) == null ? void 0 : _node$extra.parenthesized)) {\n      parenthesized = unwrapParenthesizedExpression(node);\n\n      if (isLHS) {\n        if (parenthesized.type === \"Identifier\") {\n          this.expressionScope.recordParenthesizedIdentifierError(node.start, ErrorMessages.InvalidParenthesizedAssignment);\n        } else if (parenthesized.type !== \"MemberExpression\") {\n          this.raise(node.start, ErrorMessages.InvalidParenthesizedAssignment);\n        }\n      } else {\n        this.raise(node.start, ErrorMessages.InvalidParenthesizedAssignment);\n      }\n    }\n\n    switch (node.type) {\n      case \"Identifier\":\n      case \"ObjectPattern\":\n      case \"ArrayPattern\":\n      case \"AssignmentPattern\":\n        break;\n\n      case \"ObjectExpression\":\n        node.type = \"ObjectPattern\";\n\n        for (let i = 0, length = node.properties.length, last = length - 1; i < length; i++) {\n          var _node$extra2;\n\n          const prop = node.properties[i];\n          const isLast = i === last;\n          this.toAssignableObjectExpressionProp(prop, isLast, isLHS);\n\n          if (isLast && prop.type === \"RestElement\" && ((_node$extra2 = node.extra) == null ? void 0 : _node$extra2.trailingComma)) {\n            this.raiseRestNotLast(node.extra.trailingComma);\n          }\n        }\n\n        break;\n\n      case \"ObjectProperty\":\n        this.toAssignable(node.value, isLHS);\n        break;\n\n      case \"SpreadElement\":\n        {\n          this.checkToRestConversion(node);\n          node.type = \"RestElement\";\n          const arg = node.argument;\n          this.toAssignable(arg, isLHS);\n          break;\n        }\n\n      case \"ArrayExpression\":\n        node.type = \"ArrayPattern\";\n        this.toAssignableList(node.elements, (_node$extra3 = node.extra) == null ? void 0 : _node$extra3.trailingComma, isLHS);\n        break;\n\n      case \"AssignmentExpression\":\n        if (node.operator !== \"=\") {\n          this.raise(node.left.end, ErrorMessages.MissingEqInAssignment);\n        }\n\n        node.type = \"AssignmentPattern\";\n        delete node.operator;\n        this.toAssignable(node.left, isLHS);\n        break;\n\n      case \"ParenthesizedExpression\":\n        this.toAssignable(parenthesized, isLHS);\n        break;\n    }\n\n    return node;\n  }\n\n  toAssignableObjectExpressionProp(prop, isLast, isLHS) {\n    if (prop.type === \"ObjectMethod\") {\n      const error = prop.kind === \"get\" || prop.kind === \"set\" ? ErrorMessages.PatternHasAccessor : ErrorMessages.PatternHasMethod;\n      this.raise(prop.key.start, error);\n    } else if (prop.type === \"SpreadElement\" && !isLast) {\n      this.raiseRestNotLast(prop.start);\n    } else {\n      this.toAssignable(prop, isLHS);\n    }\n  }\n\n  toAssignableList(exprList, trailingCommaPos, isLHS) {\n    let end = exprList.length;\n\n    if (end) {\n      const last = exprList[end - 1];\n\n      if ((last == null ? void 0 : last.type) === \"RestElement\") {\n        --end;\n      } else if ((last == null ? void 0 : last.type) === \"SpreadElement\") {\n        last.type = \"RestElement\";\n        let arg = last.argument;\n        this.toAssignable(arg, isLHS);\n        arg = unwrapParenthesizedExpression(arg);\n\n        if (arg.type !== \"Identifier\" && arg.type !== \"MemberExpression\" && arg.type !== \"ArrayPattern\" && arg.type !== \"ObjectPattern\") {\n          this.unexpected(arg.start);\n        }\n\n        if (trailingCommaPos) {\n          this.raiseTrailingCommaAfterRest(trailingCommaPos);\n        }\n\n        --end;\n      }\n    }\n\n    for (let i = 0; i < end; i++) {\n      const elt = exprList[i];\n\n      if (elt) {\n        this.toAssignable(elt, isLHS);\n\n        if (elt.type === \"RestElement\") {\n          this.raiseRestNotLast(elt.start);\n        }\n      }\n    }\n\n    return exprList;\n  }\n\n  toReferencedList(exprList, isParenthesizedExpr) {\n    return exprList;\n  }\n\n  toReferencedListDeep(exprList, isParenthesizedExpr) {\n    this.toReferencedList(exprList, isParenthesizedExpr);\n\n    for (let _i = 0; _i < exprList.length; _i++) {\n      const expr = exprList[_i];\n\n      if ((expr == null ? void 0 : expr.type) === \"ArrayExpression\") {\n        this.toReferencedListDeep(expr.elements);\n      }\n    }\n  }\n\n  parseSpread(refExpressionErrors, refNeedsArrowPos) {\n    const node = this.startNode();\n    this.next();\n    node.argument = this.parseMaybeAssignAllowIn(refExpressionErrors, undefined, refNeedsArrowPos);\n    return this.finishNode(node, \"SpreadElement\");\n  }\n\n  parseRestBinding() {\n    const node = this.startNode();\n    this.next();\n    node.argument = this.parseBindingAtom();\n    return this.finishNode(node, \"RestElement\");\n  }\n\n  parseBindingAtom() {\n    switch (this.state.type) {\n      case types.bracketL:\n        {\n          const node = this.startNode();\n          this.next();\n          node.elements = this.parseBindingList(types.bracketR, 93, true);\n          return this.finishNode(node, \"ArrayPattern\");\n        }\n\n      case types.braceL:\n        return this.parseObjectLike(types.braceR, true);\n    }\n\n    return this.parseIdentifier();\n  }\n\n  parseBindingList(close, closeCharCode, allowEmpty, allowModifiers) {\n    const elts = [];\n    let first = true;\n\n    while (!this.eat(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(types.comma);\n      }\n\n      if (allowEmpty && this.match(types.comma)) {\n        elts.push(null);\n      } else if (this.eat(close)) {\n        break;\n      } else if (this.match(types.ellipsis)) {\n        elts.push(this.parseAssignableListItemTypes(this.parseRestBinding()));\n        this.checkCommaAfterRest(closeCharCode);\n        this.expect(close);\n        break;\n      } else {\n        const decorators = [];\n\n        if (this.match(types.at) && this.hasPlugin(\"decorators\")) {\n          this.raise(this.state.start, ErrorMessages.UnsupportedParameterDecorator);\n        }\n\n        while (this.match(types.at)) {\n          decorators.push(this.parseDecorator());\n        }\n\n        elts.push(this.parseAssignableListItem(allowModifiers, decorators));\n      }\n    }\n\n    return elts;\n  }\n\n  parseAssignableListItem(allowModifiers, decorators) {\n    const left = this.parseMaybeDefault();\n    this.parseAssignableListItemTypes(left);\n    const elt = this.parseMaybeDefault(left.start, left.loc.start, left);\n\n    if (decorators.length) {\n      left.decorators = decorators;\n    }\n\n    return elt;\n  }\n\n  parseAssignableListItemTypes(param) {\n    return param;\n  }\n\n  parseMaybeDefault(startPos, startLoc, left) {\n    var _startLoc, _startPos, _left;\n\n    startLoc = (_startLoc = startLoc) != null ? _startLoc : this.state.startLoc;\n    startPos = (_startPos = startPos) != null ? _startPos : this.state.start;\n    left = (_left = left) != null ? _left : this.parseBindingAtom();\n    if (!this.eat(types.eq)) return left;\n    const node = this.startNodeAt(startPos, startLoc);\n    node.left = left;\n    node.right = this.parseMaybeAssignAllowIn();\n    return this.finishNode(node, \"AssignmentPattern\");\n  }\n\n  checkLVal(expr, contextDescription, bindingType = BIND_NONE, checkClashes, disallowLetBinding, strictModeChanged = false) {\n    switch (expr.type) {\n      case \"Identifier\":\n        {\n          const {\n            name\n          } = expr;\n\n          if (this.state.strict && (strictModeChanged ? isStrictBindReservedWord(name, this.inModule) : isStrictBindOnlyReservedWord(name))) {\n            this.raise(expr.start, bindingType === BIND_NONE ? ErrorMessages.StrictEvalArguments : ErrorMessages.StrictEvalArgumentsBinding, name);\n          }\n\n          if (checkClashes) {\n            if (checkClashes.has(name)) {\n              this.raise(expr.start, ErrorMessages.ParamDupe);\n            } else {\n              checkClashes.add(name);\n            }\n          }\n\n          if (disallowLetBinding && name === \"let\") {\n            this.raise(expr.start, ErrorMessages.LetInLexicalBinding);\n          }\n\n          if (!(bindingType & BIND_NONE)) {\n            this.scope.declareName(name, bindingType, expr.start);\n          }\n\n          break;\n        }\n\n      case \"MemberExpression\":\n        if (bindingType !== BIND_NONE) {\n          this.raise(expr.start, ErrorMessages.InvalidPropertyBindingPattern);\n        }\n\n        break;\n\n      case \"ObjectPattern\":\n        for (let _i2 = 0, _expr$properties = expr.properties; _i2 < _expr$properties.length; _i2++) {\n          let prop = _expr$properties[_i2];\n          if (this.isObjectProperty(prop)) prop = prop.value;else if (this.isObjectMethod(prop)) continue;\n          this.checkLVal(prop, \"object destructuring pattern\", bindingType, checkClashes, disallowLetBinding);\n        }\n\n        break;\n\n      case \"ArrayPattern\":\n        for (let _i3 = 0, _expr$elements = expr.elements; _i3 < _expr$elements.length; _i3++) {\n          const elem = _expr$elements[_i3];\n\n          if (elem) {\n            this.checkLVal(elem, \"array destructuring pattern\", bindingType, checkClashes, disallowLetBinding);\n          }\n        }\n\n        break;\n\n      case \"AssignmentPattern\":\n        this.checkLVal(expr.left, \"assignment pattern\", bindingType, checkClashes);\n        break;\n\n      case \"RestElement\":\n        this.checkLVal(expr.argument, \"rest element\", bindingType, checkClashes);\n        break;\n\n      case \"ParenthesizedExpression\":\n        this.checkLVal(expr.expression, \"parenthesized expression\", bindingType, checkClashes);\n        break;\n\n      default:\n        {\n          this.raise(expr.start, bindingType === BIND_NONE ? ErrorMessages.InvalidLhs : ErrorMessages.InvalidLhsBinding, contextDescription);\n        }\n    }\n  }\n\n  checkToRestConversion(node) {\n    if (node.argument.type !== \"Identifier\" && node.argument.type !== \"MemberExpression\") {\n      this.raise(node.argument.start, ErrorMessages.InvalidRestAssignmentPattern);\n    }\n  }\n\n  checkCommaAfterRest(close) {\n    if (this.match(types.comma)) {\n      if (this.lookaheadCharCode() === close) {\n        this.raiseTrailingCommaAfterRest(this.state.start);\n      } else {\n        this.raiseRestNotLast(this.state.start);\n      }\n    }\n  }\n\n  raiseRestNotLast(pos) {\n    throw this.raise(pos, ErrorMessages.ElementAfterRest);\n  }\n\n  raiseTrailingCommaAfterRest(pos) {\n    this.raise(pos, ErrorMessages.RestTrailingComma);\n  }\n\n}\n\nconst kExpression = 0,\n      kMaybeArrowParameterDeclaration = 1,\n      kMaybeAsyncArrowParameterDeclaration = 2,\n      kParameterDeclaration = 3;\n\nclass ExpressionScope {\n  constructor(type = kExpression) {\n    this.type = void 0;\n    this.type = type;\n  }\n\n  canBeArrowParameterDeclaration() {\n    return this.type === kMaybeAsyncArrowParameterDeclaration || this.type === kMaybeArrowParameterDeclaration;\n  }\n\n  isCertainlyParameterDeclaration() {\n    return this.type === kParameterDeclaration;\n  }\n\n}\n\nclass ArrowHeadParsingScope extends ExpressionScope {\n  constructor(type) {\n    super(type);\n    this.errors = new Map();\n  }\n\n  recordDeclarationError(pos, message) {\n    this.errors.set(pos, message);\n  }\n\n  clearDeclarationError(pos) {\n    this.errors.delete(pos);\n  }\n\n  iterateErrors(iterator) {\n    this.errors.forEach(iterator);\n  }\n\n}\n\nclass ExpressionScopeHandler {\n  constructor(raise) {\n    this.stack = [new ExpressionScope()];\n    this.raise = raise;\n  }\n\n  enter(scope) {\n    this.stack.push(scope);\n  }\n\n  exit() {\n    this.stack.pop();\n  }\n\n  recordParameterInitializerError(pos, message) {\n    const {\n      stack\n    } = this;\n    let i = stack.length - 1;\n    let scope = stack[i];\n\n    while (!scope.isCertainlyParameterDeclaration()) {\n      if (scope.canBeArrowParameterDeclaration()) {\n        scope.recordDeclarationError(pos, message);\n      } else {\n        return;\n      }\n\n      scope = stack[--i];\n    }\n\n    this.raise(pos, message);\n  }\n\n  recordParenthesizedIdentifierError(pos, message) {\n    const {\n      stack\n    } = this;\n    const scope = stack[stack.length - 1];\n\n    if (scope.isCertainlyParameterDeclaration()) {\n      this.raise(pos, message);\n    } else if (scope.canBeArrowParameterDeclaration()) {\n      scope.recordDeclarationError(pos, message);\n    } else {\n      return;\n    }\n  }\n\n  recordAsyncArrowParametersError(pos, message) {\n    const {\n      stack\n    } = this;\n    let i = stack.length - 1;\n    let scope = stack[i];\n\n    while (scope.canBeArrowParameterDeclaration()) {\n      if (scope.type === kMaybeAsyncArrowParameterDeclaration) {\n        scope.recordDeclarationError(pos, message);\n      }\n\n      scope = stack[--i];\n    }\n  }\n\n  validateAsPattern() {\n    const {\n      stack\n    } = this;\n    const currentScope = stack[stack.length - 1];\n    if (!currentScope.canBeArrowParameterDeclaration()) return;\n    currentScope.iterateErrors((message, pos) => {\n      this.raise(pos, message);\n      let i = stack.length - 2;\n      let scope = stack[i];\n\n      while (scope.canBeArrowParameterDeclaration()) {\n        scope.clearDeclarationError(pos);\n        scope = stack[--i];\n      }\n    });\n  }\n\n}\nfunction newParameterDeclarationScope() {\n  return new ExpressionScope(kParameterDeclaration);\n}\nfunction newArrowHeadScope() {\n  return new ArrowHeadParsingScope(kMaybeArrowParameterDeclaration);\n}\nfunction newAsyncArrowScope() {\n  return new ArrowHeadParsingScope(kMaybeAsyncArrowParameterDeclaration);\n}\nfunction newExpressionScope() {\n  return new ExpressionScope();\n}\n\nclass ExpressionParser extends LValParser {\n  checkProto(prop, isRecord, protoRef, refExpressionErrors) {\n    if (prop.type === \"SpreadElement\" || this.isObjectMethod(prop) || prop.computed || prop.shorthand) {\n      return;\n    }\n\n    const key = prop.key;\n    const name = key.type === \"Identifier\" ? key.name : key.value;\n\n    if (name === \"__proto__\") {\n      if (isRecord) {\n        this.raise(key.start, ErrorMessages.RecordNoProto);\n        return;\n      }\n\n      if (protoRef.used) {\n        if (refExpressionErrors) {\n          if (refExpressionErrors.doubleProto === -1) {\n            refExpressionErrors.doubleProto = key.start;\n          }\n        } else {\n          this.raise(key.start, ErrorMessages.DuplicateProto);\n        }\n      }\n\n      protoRef.used = true;\n    }\n  }\n\n  shouldExitDescending(expr, potentialArrowAt) {\n    return expr.type === \"ArrowFunctionExpression\" && expr.start === potentialArrowAt;\n  }\n\n  getExpression() {\n    let paramFlags = PARAM;\n\n    if (this.hasPlugin(\"topLevelAwait\") && this.inModule) {\n      paramFlags |= PARAM_AWAIT;\n    }\n\n    this.scope.enter(SCOPE_PROGRAM);\n    this.prodParam.enter(paramFlags);\n    this.nextToken();\n    const expr = this.parseExpression();\n\n    if (!this.match(types.eof)) {\n      this.unexpected();\n    }\n\n    expr.comments = this.state.comments;\n    expr.errors = this.state.errors;\n    return expr;\n  }\n\n  parseExpression(disallowIn, refExpressionErrors) {\n    if (disallowIn) {\n      return this.disallowInAnd(() => this.parseExpressionBase(refExpressionErrors));\n    }\n\n    return this.allowInAnd(() => this.parseExpressionBase(refExpressionErrors));\n  }\n\n  parseExpressionBase(refExpressionErrors) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const expr = this.parseMaybeAssign(refExpressionErrors);\n\n    if (this.match(types.comma)) {\n      const node = this.startNodeAt(startPos, startLoc);\n      node.expressions = [expr];\n\n      while (this.eat(types.comma)) {\n        node.expressions.push(this.parseMaybeAssign(refExpressionErrors));\n      }\n\n      this.toReferencedList(node.expressions);\n      return this.finishNode(node, \"SequenceExpression\");\n    }\n\n    return expr;\n  }\n\n  parseMaybeAssignDisallowIn(refExpressionErrors, afterLeftParse, refNeedsArrowPos) {\n    return this.disallowInAnd(() => this.parseMaybeAssign(refExpressionErrors, afterLeftParse, refNeedsArrowPos));\n  }\n\n  parseMaybeAssignAllowIn(refExpressionErrors, afterLeftParse, refNeedsArrowPos) {\n    return this.allowInAnd(() => this.parseMaybeAssign(refExpressionErrors, afterLeftParse, refNeedsArrowPos));\n  }\n\n  parseMaybeAssign(refExpressionErrors, afterLeftParse, refNeedsArrowPos) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n\n    if (this.isContextual(\"yield\")) {\n      if (this.prodParam.hasYield) {\n        this.state.exprAllowed = true;\n        let left = this.parseYield();\n\n        if (afterLeftParse) {\n          left = afterLeftParse.call(this, left, startPos, startLoc);\n        }\n\n        return left;\n      }\n    }\n\n    let ownExpressionErrors;\n\n    if (refExpressionErrors) {\n      ownExpressionErrors = false;\n    } else {\n      refExpressionErrors = new ExpressionErrors();\n      ownExpressionErrors = true;\n    }\n\n    if (this.match(types.parenL) || this.match(types.name)) {\n      this.state.potentialArrowAt = this.state.start;\n    }\n\n    let left = this.parseMaybeConditional(refExpressionErrors, refNeedsArrowPos);\n\n    if (afterLeftParse) {\n      left = afterLeftParse.call(this, left, startPos, startLoc);\n    }\n\n    if (this.state.type.isAssign) {\n      const node = this.startNodeAt(startPos, startLoc);\n      const operator = this.state.value;\n      node.operator = operator;\n\n      if (this.match(types.eq)) {\n        node.left = this.toAssignable(left, true);\n        refExpressionErrors.doubleProto = -1;\n      } else {\n        node.left = left;\n      }\n\n      if (refExpressionErrors.shorthandAssign >= node.left.start) {\n        refExpressionErrors.shorthandAssign = -1;\n      }\n\n      this.checkLVal(left, \"assignment expression\");\n      this.next();\n      node.right = this.parseMaybeAssign();\n      return this.finishNode(node, \"AssignmentExpression\");\n    } else if (ownExpressionErrors) {\n      this.checkExpressionErrors(refExpressionErrors, true);\n    }\n\n    return left;\n  }\n\n  parseMaybeConditional(refExpressionErrors, refNeedsArrowPos) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const potentialArrowAt = this.state.potentialArrowAt;\n    const expr = this.parseExprOps(refExpressionErrors);\n\n    if (this.shouldExitDescending(expr, potentialArrowAt)) {\n      return expr;\n    }\n\n    return this.parseConditional(expr, startPos, startLoc, refNeedsArrowPos);\n  }\n\n  parseConditional(expr, startPos, startLoc, refNeedsArrowPos) {\n    if (this.eat(types.question)) {\n      const node = this.startNodeAt(startPos, startLoc);\n      node.test = expr;\n      node.consequent = this.parseMaybeAssignAllowIn();\n      this.expect(types.colon);\n      node.alternate = this.parseMaybeAssign();\n      return this.finishNode(node, \"ConditionalExpression\");\n    }\n\n    return expr;\n  }\n\n  parseExprOps(refExpressionErrors) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const potentialArrowAt = this.state.potentialArrowAt;\n    const expr = this.parseMaybeUnary(refExpressionErrors);\n\n    if (this.shouldExitDescending(expr, potentialArrowAt)) {\n      return expr;\n    }\n\n    return this.parseExprOp(expr, startPos, startLoc, -1);\n  }\n\n  parseExprOp(left, leftStartPos, leftStartLoc, minPrec) {\n    let prec = this.state.type.binop;\n\n    if (prec != null && (this.prodParam.hasIn || !this.match(types._in))) {\n      if (prec > minPrec) {\n        const op = this.state.type;\n\n        if (op === types.pipeline) {\n          this.expectPlugin(\"pipelineOperator\");\n\n          if (this.state.inFSharpPipelineDirectBody) {\n            return left;\n          }\n\n          this.state.inPipeline = true;\n          this.checkPipelineAtInfixOperator(left, leftStartPos);\n        }\n\n        const node = this.startNodeAt(leftStartPos, leftStartLoc);\n        node.left = left;\n        node.operator = this.state.value;\n\n        if (op === types.exponent && left.type === \"UnaryExpression\" && (this.options.createParenthesizedExpressions || !(left.extra && left.extra.parenthesized))) {\n          this.raise(left.argument.start, ErrorMessages.UnexpectedTokenUnaryExponentiation);\n        }\n\n        const logical = op === types.logicalOR || op === types.logicalAND;\n        const coalesce = op === types.nullishCoalescing;\n\n        if (coalesce) {\n          prec = types.logicalAND.binop;\n        }\n\n        this.next();\n\n        if (op === types.pipeline && this.getPluginOption(\"pipelineOperator\", \"proposal\") === \"minimal\") {\n          if (this.match(types.name) && this.state.value === \"await\" && this.prodParam.hasAwait) {\n            throw this.raise(this.state.start, ErrorMessages.UnexpectedAwaitAfterPipelineBody);\n          }\n        }\n\n        node.right = this.parseExprOpRightExpr(op, prec);\n        this.finishNode(node, logical || coalesce ? \"LogicalExpression\" : \"BinaryExpression\");\n        const nextOp = this.state.type;\n\n        if (coalesce && (nextOp === types.logicalOR || nextOp === types.logicalAND) || logical && nextOp === types.nullishCoalescing) {\n          throw this.raise(this.state.start, ErrorMessages.MixingCoalesceWithLogical);\n        }\n\n        return this.parseExprOp(node, leftStartPos, leftStartLoc, minPrec);\n      }\n    }\n\n    return left;\n  }\n\n  parseExprOpRightExpr(op, prec) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n\n    switch (op) {\n      case types.pipeline:\n        switch (this.getPluginOption(\"pipelineOperator\", \"proposal\")) {\n          case \"smart\":\n            return this.withTopicPermittingContext(() => {\n              return this.parseSmartPipelineBody(this.parseExprOpBaseRightExpr(op, prec), startPos, startLoc);\n            });\n\n          case \"fsharp\":\n            return this.withSoloAwaitPermittingContext(() => {\n              return this.parseFSharpPipelineBody(prec);\n            });\n        }\n\n      default:\n        return this.parseExprOpBaseRightExpr(op, prec);\n    }\n  }\n\n  parseExprOpBaseRightExpr(op, prec) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    return this.parseExprOp(this.parseMaybeUnary(), startPos, startLoc, op.rightAssociative ? prec - 1 : prec);\n  }\n\n  parseMaybeUnary(refExpressionErrors) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const isAwait = this.isContextual(\"await\");\n\n    if (isAwait && this.isAwaitAllowed()) {\n      this.next();\n      return this.parseAwait(startPos, startLoc);\n    }\n\n    const update = this.match(types.incDec);\n    const node = this.startNode();\n\n    if (this.state.type.prefix) {\n      node.operator = this.state.value;\n      node.prefix = true;\n\n      if (this.match(types._throw)) {\n        this.expectPlugin(\"throwExpressions\");\n      }\n\n      const isDelete = this.match(types._delete);\n      this.next();\n      node.argument = this.parseMaybeUnary();\n      this.checkExpressionErrors(refExpressionErrors, true);\n\n      if (this.state.strict && isDelete) {\n        const arg = node.argument;\n\n        if (arg.type === \"Identifier\") {\n          this.raise(node.start, ErrorMessages.StrictDelete);\n        } else if (this.hasPropertyAsPrivateName(arg)) {\n          this.raise(node.start, ErrorMessages.DeletePrivateField);\n        }\n      }\n\n      if (!update) {\n        return this.finishNode(node, \"UnaryExpression\");\n      }\n    }\n\n    const expr = this.parseUpdate(node, update, refExpressionErrors);\n\n    if (isAwait) {\n      const startsExpr = this.hasPlugin(\"v8intrinsic\") ? this.state.type.startsExpr : this.state.type.startsExpr && !this.match(types.modulo);\n\n      if (startsExpr && !this.isAmbiguousAwait()) {\n        this.raiseOverwrite(startPos, this.hasPlugin(\"topLevelAwait\") ? ErrorMessages.AwaitNotInAsyncContext : ErrorMessages.AwaitNotInAsyncFunction);\n        return this.parseAwait(startPos, startLoc);\n      }\n    }\n\n    return expr;\n  }\n\n  parseUpdate(node, update, refExpressionErrors) {\n    if (update) {\n      this.checkLVal(node.argument, \"prefix operation\");\n      return this.finishNode(node, \"UpdateExpression\");\n    }\n\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    let expr = this.parseExprSubscripts(refExpressionErrors);\n    if (this.checkExpressionErrors(refExpressionErrors, false)) return expr;\n\n    while (this.state.type.postfix && !this.canInsertSemicolon()) {\n      const node = this.startNodeAt(startPos, startLoc);\n      node.operator = this.state.value;\n      node.prefix = false;\n      node.argument = expr;\n      this.checkLVal(expr, \"postfix operation\");\n      this.next();\n      expr = this.finishNode(node, \"UpdateExpression\");\n    }\n\n    return expr;\n  }\n\n  parseExprSubscripts(refExpressionErrors) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const potentialArrowAt = this.state.potentialArrowAt;\n    const expr = this.parseExprAtom(refExpressionErrors);\n\n    if (this.shouldExitDescending(expr, potentialArrowAt)) {\n      return expr;\n    }\n\n    return this.parseSubscripts(expr, startPos, startLoc);\n  }\n\n  parseSubscripts(base, startPos, startLoc, noCalls) {\n    const state = {\n      optionalChainMember: false,\n      maybeAsyncArrow: this.atPossibleAsyncArrow(base),\n      stop: false\n    };\n\n    do {\n      base = this.parseSubscript(base, startPos, startLoc, noCalls, state);\n      state.maybeAsyncArrow = false;\n    } while (!state.stop);\n\n    return base;\n  }\n\n  parseSubscript(base, startPos, startLoc, noCalls, state) {\n    if (!noCalls && this.eat(types.doubleColon)) {\n      return this.parseBind(base, startPos, startLoc, noCalls, state);\n    } else if (this.match(types.backQuote)) {\n      return this.parseTaggedTemplateExpression(base, startPos, startLoc, state);\n    }\n\n    let optional = false;\n\n    if (this.match(types.questionDot)) {\n      if (noCalls && this.lookaheadCharCode() === 40) {\n        state.stop = true;\n        return base;\n      }\n\n      state.optionalChainMember = optional = true;\n      this.next();\n    }\n\n    if (!noCalls && this.match(types.parenL)) {\n      return this.parseCoverCallAndAsyncArrowHead(base, startPos, startLoc, state, optional);\n    } else if (optional || this.match(types.bracketL) || this.eat(types.dot)) {\n      return this.parseMember(base, startPos, startLoc, state, optional);\n    } else {\n      state.stop = true;\n      return base;\n    }\n  }\n\n  parseMember(base, startPos, startLoc, state, optional) {\n    const node = this.startNodeAt(startPos, startLoc);\n    const computed = this.eat(types.bracketL);\n    node.object = base;\n    node.computed = computed;\n    const property = computed ? this.parseExpression() : this.parseMaybePrivateName(true);\n\n    if (this.isPrivateName(property)) {\n      if (node.object.type === \"Super\") {\n        this.raise(startPos, ErrorMessages.SuperPrivateField);\n      }\n\n      this.classScope.usePrivateName(this.getPrivateNameSV(property), property.start);\n    }\n\n    node.property = property;\n\n    if (computed) {\n      this.expect(types.bracketR);\n    }\n\n    if (state.optionalChainMember) {\n      node.optional = optional;\n      return this.finishNode(node, \"OptionalMemberExpression\");\n    } else {\n      return this.finishNode(node, \"MemberExpression\");\n    }\n  }\n\n  parseBind(base, startPos, startLoc, noCalls, state) {\n    const node = this.startNodeAt(startPos, startLoc);\n    node.object = base;\n    node.callee = this.parseNoCallExpr();\n    state.stop = true;\n    return this.parseSubscripts(this.finishNode(node, \"BindExpression\"), startPos, startLoc, noCalls);\n  }\n\n  parseCoverCallAndAsyncArrowHead(base, startPos, startLoc, state, optional) {\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n    this.state.maybeInArrowParameters = true;\n    this.next();\n    let node = this.startNodeAt(startPos, startLoc);\n    node.callee = base;\n\n    if (state.maybeAsyncArrow) {\n      this.expressionScope.enter(newAsyncArrowScope());\n    }\n\n    if (state.optionalChainMember) {\n      node.optional = optional;\n    }\n\n    if (optional) {\n      node.arguments = this.parseCallExpressionArguments(types.parenR, false);\n    } else {\n      node.arguments = this.parseCallExpressionArguments(types.parenR, state.maybeAsyncArrow, base.type === \"Import\", base.type !== \"Super\", node);\n    }\n\n    this.finishCallExpression(node, state.optionalChainMember);\n\n    if (state.maybeAsyncArrow && this.shouldParseAsyncArrow() && !optional) {\n      state.stop = true;\n      this.expressionScope.validateAsPattern();\n      this.expressionScope.exit();\n      node = this.parseAsyncArrowFromCallExpression(this.startNodeAt(startPos, startLoc), node);\n    } else {\n      if (state.maybeAsyncArrow) {\n        this.expressionScope.exit();\n      }\n\n      this.toReferencedArguments(node);\n    }\n\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n    return node;\n  }\n\n  toReferencedArguments(node, isParenthesizedExpr) {\n    this.toReferencedListDeep(node.arguments, isParenthesizedExpr);\n  }\n\n  parseTaggedTemplateExpression(base, startPos, startLoc, state) {\n    const node = this.startNodeAt(startPos, startLoc);\n    node.tag = base;\n    node.quasi = this.parseTemplate(true);\n\n    if (state.optionalChainMember) {\n      this.raise(startPos, ErrorMessages.OptionalChainingNoTemplate);\n    }\n\n    return this.finishNode(node, \"TaggedTemplateExpression\");\n  }\n\n  atPossibleAsyncArrow(base) {\n    return base.type === \"Identifier\" && base.name === \"async\" && this.state.lastTokEnd === base.end && !this.canInsertSemicolon() && base.end - base.start === 5 && base.start === this.state.potentialArrowAt;\n  }\n\n  finishCallExpression(node, optional) {\n    if (node.callee.type === \"Import\") {\n      if (node.arguments.length === 2) {\n        if (!this.hasPlugin(\"moduleAttributes\")) {\n          this.expectPlugin(\"importAssertions\");\n        }\n      }\n\n      if (node.arguments.length === 0 || node.arguments.length > 2) {\n        this.raise(node.start, ErrorMessages.ImportCallArity, this.hasPlugin(\"importAssertions\") || this.hasPlugin(\"moduleAttributes\") ? \"one or two arguments\" : \"one argument\");\n      } else {\n        for (let _i = 0, _node$arguments = node.arguments; _i < _node$arguments.length; _i++) {\n          const arg = _node$arguments[_i];\n\n          if (arg.type === \"SpreadElement\") {\n            this.raise(arg.start, ErrorMessages.ImportCallSpreadArgument);\n          }\n        }\n      }\n    }\n\n    return this.finishNode(node, optional ? \"OptionalCallExpression\" : \"CallExpression\");\n  }\n\n  parseCallExpressionArguments(close, possibleAsyncArrow, dynamicImport, allowPlaceholder, nodeForExtra) {\n    const elts = [];\n    let first = true;\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = false;\n\n    while (!this.eat(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(types.comma);\n\n        if (this.match(close)) {\n          if (dynamicImport && !this.hasPlugin(\"importAssertions\") && !this.hasPlugin(\"moduleAttributes\")) {\n            this.raise(this.state.lastTokStart, ErrorMessages.ImportCallArgumentTrailingComma);\n          }\n\n          if (nodeForExtra) {\n            this.addExtra(nodeForExtra, \"trailingComma\", this.state.lastTokStart);\n          }\n\n          this.next();\n          break;\n        }\n      }\n\n      elts.push(this.parseExprListItem(false, possibleAsyncArrow ? new ExpressionErrors() : undefined, possibleAsyncArrow ? {\n        start: 0\n      } : undefined, allowPlaceholder));\n    }\n\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n    return elts;\n  }\n\n  shouldParseAsyncArrow() {\n    return this.match(types.arrow) && !this.canInsertSemicolon();\n  }\n\n  parseAsyncArrowFromCallExpression(node, call) {\n    var _call$extra;\n\n    this.expect(types.arrow);\n    this.parseArrowExpression(node, call.arguments, true, (_call$extra = call.extra) == null ? void 0 : _call$extra.trailingComma);\n    return node;\n  }\n\n  parseNoCallExpr() {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    return this.parseSubscripts(this.parseExprAtom(), startPos, startLoc, true);\n  }\n\n  parseExprAtom(refExpressionErrors) {\n    if (this.state.type === types.slash) this.readRegexp();\n    const canBeArrow = this.state.potentialArrowAt === this.state.start;\n    let node;\n\n    switch (this.state.type) {\n      case types._super:\n        return this.parseSuper();\n\n      case types._import:\n        node = this.startNode();\n        this.next();\n\n        if (this.match(types.dot)) {\n          return this.parseImportMetaProperty(node);\n        }\n\n        if (!this.match(types.parenL)) {\n          this.raise(this.state.lastTokStart, ErrorMessages.UnsupportedImport);\n        }\n\n        return this.finishNode(node, \"Import\");\n\n      case types._this:\n        node = this.startNode();\n        this.next();\n        return this.finishNode(node, \"ThisExpression\");\n\n      case types.name:\n        {\n          const containsEsc = this.state.containsEsc;\n          const id = this.parseIdentifier();\n\n          if (!containsEsc && id.name === \"async\" && !this.canInsertSemicolon()) {\n            if (this.match(types._function)) {\n              const last = this.state.context.length - 1;\n\n              if (this.state.context[last] !== types$1.functionStatement) {\n                throw new Error(\"Internal error\");\n              }\n\n              this.state.context[last] = types$1.functionExpression;\n              this.next();\n              return this.parseFunction(this.startNodeAtNode(id), undefined, true);\n            } else if (this.match(types.name)) {\n              return this.parseAsyncArrowUnaryFunction(id);\n            }\n          }\n\n          if (canBeArrow && this.match(types.arrow) && !this.canInsertSemicolon()) {\n            this.next();\n            return this.parseArrowExpression(this.startNodeAtNode(id), [id], false);\n          }\n\n          return id;\n        }\n\n      case types._do:\n        {\n          return this.parseDo();\n        }\n\n      case types.regexp:\n        {\n          const value = this.state.value;\n          node = this.parseLiteral(value.value, \"RegExpLiteral\");\n          node.pattern = value.pattern;\n          node.flags = value.flags;\n          return node;\n        }\n\n      case types.num:\n        return this.parseLiteral(this.state.value, \"NumericLiteral\");\n\n      case types.bigint:\n        return this.parseLiteral(this.state.value, \"BigIntLiteral\");\n\n      case types.decimal:\n        return this.parseLiteral(this.state.value, \"DecimalLiteral\");\n\n      case types.string:\n        return this.parseLiteral(this.state.value, \"StringLiteral\");\n\n      case types._null:\n        node = this.startNode();\n        this.next();\n        return this.finishNode(node, \"NullLiteral\");\n\n      case types._true:\n      case types._false:\n        return this.parseBooleanLiteral();\n\n      case types.parenL:\n        return this.parseParenAndDistinguishExpression(canBeArrow);\n\n      case types.bracketBarL:\n      case types.bracketHashL:\n        {\n          return this.parseArrayLike(this.state.type === types.bracketBarL ? types.bracketBarR : types.bracketR, false, true, refExpressionErrors);\n        }\n\n      case types.bracketL:\n        {\n          return this.parseArrayLike(types.bracketR, true, false, refExpressionErrors);\n        }\n\n      case types.braceBarL:\n      case types.braceHashL:\n        {\n          return this.parseObjectLike(this.state.type === types.braceBarL ? types.braceBarR : types.braceR, false, true, refExpressionErrors);\n        }\n\n      case types.braceL:\n        {\n          return this.parseObjectLike(types.braceR, false, false, refExpressionErrors);\n        }\n\n      case types._function:\n        return this.parseFunctionOrFunctionSent();\n\n      case types.at:\n        this.parseDecorators();\n\n      case types._class:\n        node = this.startNode();\n        this.takeDecorators(node);\n        return this.parseClass(node, false);\n\n      case types._new:\n        return this.parseNewOrNewTarget();\n\n      case types.backQuote:\n        return this.parseTemplate(false);\n\n      case types.doubleColon:\n        {\n          node = this.startNode();\n          this.next();\n          node.object = null;\n          const callee = node.callee = this.parseNoCallExpr();\n\n          if (callee.type === \"MemberExpression\") {\n            return this.finishNode(node, \"BindExpression\");\n          } else {\n            throw this.raise(callee.start, ErrorMessages.UnsupportedBind);\n          }\n        }\n\n      case types.hash:\n        {\n          if (this.state.inPipeline) {\n            node = this.startNode();\n\n            if (this.getPluginOption(\"pipelineOperator\", \"proposal\") !== \"smart\") {\n              this.raise(node.start, ErrorMessages.PrimaryTopicRequiresSmartPipeline);\n            }\n\n            this.next();\n\n            if (!this.primaryTopicReferenceIsAllowedInCurrentTopicContext()) {\n              this.raise(node.start, ErrorMessages.PrimaryTopicNotAllowed);\n            }\n\n            this.registerTopicReference();\n            return this.finishNode(node, \"PipelinePrimaryTopicReference\");\n          }\n\n          const nextCh = this.input.codePointAt(this.state.end);\n\n          if (isIdentifierStart(nextCh) || nextCh === 92) {\n            const start = this.state.start;\n            node = this.parseMaybePrivateName(true);\n\n            if (this.match(types._in)) {\n              this.expectPlugin(\"privateIn\");\n              this.classScope.usePrivateName(node.id.name, node.start);\n            } else if (this.hasPlugin(\"privateIn\")) {\n              this.raise(this.state.start, ErrorMessages.PrivateInExpectedIn, node.id.name);\n            } else {\n              throw this.unexpected(start);\n            }\n\n            return node;\n          }\n        }\n\n      case types.relational:\n        {\n          if (this.state.value === \"<\") {\n            const lookaheadCh = this.input.codePointAt(this.nextTokenStart());\n\n            if (isIdentifierStart(lookaheadCh) || lookaheadCh === 62) {\n                this.expectOnePlugin([\"jsx\", \"flow\", \"typescript\"]);\n              }\n          }\n        }\n\n      default:\n        throw this.unexpected();\n    }\n  }\n\n  parseAsyncArrowUnaryFunction(id) {\n    const node = this.startNodeAtNode(id);\n    this.prodParam.enter(functionFlags(true, this.prodParam.hasYield));\n    const params = [this.parseIdentifier()];\n    this.prodParam.exit();\n\n    if (this.hasPrecedingLineBreak()) {\n      this.raise(this.state.pos, ErrorMessages.LineTerminatorBeforeArrow);\n    }\n\n    this.expect(types.arrow);\n    this.parseArrowExpression(node, params, true);\n    return node;\n  }\n\n  parseDo() {\n    this.expectPlugin(\"doExpressions\");\n    const node = this.startNode();\n    this.next();\n    const oldLabels = this.state.labels;\n    this.state.labels = [];\n    node.body = this.parseBlock();\n    this.state.labels = oldLabels;\n    return this.finishNode(node, \"DoExpression\");\n  }\n\n  parseSuper() {\n    const node = this.startNode();\n    this.next();\n\n    if (this.match(types.parenL) && !this.scope.allowDirectSuper && !this.options.allowSuperOutsideMethod) {\n      this.raise(node.start, ErrorMessages.SuperNotAllowed);\n    } else if (!this.scope.allowSuper && !this.options.allowSuperOutsideMethod) {\n      this.raise(node.start, ErrorMessages.UnexpectedSuper);\n    }\n\n    if (!this.match(types.parenL) && !this.match(types.bracketL) && !this.match(types.dot)) {\n      this.raise(node.start, ErrorMessages.UnsupportedSuper);\n    }\n\n    return this.finishNode(node, \"Super\");\n  }\n\n  parseBooleanLiteral() {\n    const node = this.startNode();\n    node.value = this.match(types._true);\n    this.next();\n    return this.finishNode(node, \"BooleanLiteral\");\n  }\n\n  parseMaybePrivateName(isPrivateNameAllowed) {\n    const isPrivate = this.match(types.hash);\n\n    if (isPrivate) {\n      this.expectOnePlugin([\"classPrivateProperties\", \"classPrivateMethods\"]);\n\n      if (!isPrivateNameAllowed) {\n        this.raise(this.state.pos, ErrorMessages.UnexpectedPrivateField);\n      }\n\n      const node = this.startNode();\n      this.next();\n      this.assertNoSpace(\"Unexpected space between # and identifier\");\n      node.id = this.parseIdentifier(true);\n      return this.finishNode(node, \"PrivateName\");\n    } else {\n      return this.parseIdentifier(true);\n    }\n  }\n\n  parseFunctionOrFunctionSent() {\n    const node = this.startNode();\n    this.next();\n\n    if (this.prodParam.hasYield && this.match(types.dot)) {\n      const meta = this.createIdentifier(this.startNodeAtNode(node), \"function\");\n      this.next();\n      return this.parseMetaProperty(node, meta, \"sent\");\n    }\n\n    return this.parseFunction(node);\n  }\n\n  parseMetaProperty(node, meta, propertyName) {\n    node.meta = meta;\n\n    if (meta.name === \"function\" && propertyName === \"sent\") {\n      if (this.isContextual(propertyName)) {\n        this.expectPlugin(\"functionSent\");\n      } else if (!this.hasPlugin(\"functionSent\")) {\n        this.unexpected();\n      }\n    }\n\n    const containsEsc = this.state.containsEsc;\n    node.property = this.parseIdentifier(true);\n\n    if (node.property.name !== propertyName || containsEsc) {\n      this.raise(node.property.start, ErrorMessages.UnsupportedMetaProperty, meta.name, propertyName);\n    }\n\n    return this.finishNode(node, \"MetaProperty\");\n  }\n\n  parseImportMetaProperty(node) {\n    const id = this.createIdentifier(this.startNodeAtNode(node), \"import\");\n    this.next();\n\n    if (this.isContextual(\"meta\")) {\n      if (!this.inModule) {\n        this.raiseWithData(id.start, {\n          code: \"BABEL_PARSER_SOURCETYPE_MODULE_REQUIRED\"\n        }, ErrorMessages.ImportMetaOutsideModule);\n      }\n\n      this.sawUnambiguousESM = true;\n    }\n\n    return this.parseMetaProperty(node, id, \"meta\");\n  }\n\n  parseLiteral(value, type, startPos, startLoc) {\n    startPos = startPos || this.state.start;\n    startLoc = startLoc || this.state.startLoc;\n    const node = this.startNodeAt(startPos, startLoc);\n    this.addExtra(node, \"rawValue\", value);\n    this.addExtra(node, \"raw\", this.input.slice(startPos, this.state.end));\n    node.value = value;\n    this.next();\n    return this.finishNode(node, type);\n  }\n\n  parseParenAndDistinguishExpression(canBeArrow) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    let val;\n    this.next();\n    this.expressionScope.enter(newArrowHeadScope());\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.maybeInArrowParameters = true;\n    this.state.inFSharpPipelineDirectBody = false;\n    const innerStartPos = this.state.start;\n    const innerStartLoc = this.state.startLoc;\n    const exprList = [];\n    const refExpressionErrors = new ExpressionErrors();\n    const refNeedsArrowPos = {\n      start: 0\n    };\n    let first = true;\n    let spreadStart;\n    let optionalCommaStart;\n\n    while (!this.match(types.parenR)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(types.comma, refNeedsArrowPos.start || null);\n\n        if (this.match(types.parenR)) {\n          optionalCommaStart = this.state.start;\n          break;\n        }\n      }\n\n      if (this.match(types.ellipsis)) {\n        const spreadNodeStartPos = this.state.start;\n        const spreadNodeStartLoc = this.state.startLoc;\n        spreadStart = this.state.start;\n        exprList.push(this.parseParenItem(this.parseRestBinding(), spreadNodeStartPos, spreadNodeStartLoc));\n        this.checkCommaAfterRest(41);\n        break;\n      } else {\n        exprList.push(this.parseMaybeAssignAllowIn(refExpressionErrors, this.parseParenItem, refNeedsArrowPos));\n      }\n    }\n\n    const innerEndPos = this.state.lastTokEnd;\n    const innerEndLoc = this.state.lastTokEndLoc;\n    this.expect(types.parenR);\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n    let arrowNode = this.startNodeAt(startPos, startLoc);\n\n    if (canBeArrow && this.shouldParseArrow() && (arrowNode = this.parseArrow(arrowNode))) {\n      this.expressionScope.validateAsPattern();\n      this.expressionScope.exit();\n      this.parseArrowExpression(arrowNode, exprList, false);\n      return arrowNode;\n    }\n\n    this.expressionScope.exit();\n\n    if (!exprList.length) {\n      this.unexpected(this.state.lastTokStart);\n    }\n\n    if (optionalCommaStart) this.unexpected(optionalCommaStart);\n    if (spreadStart) this.unexpected(spreadStart);\n    this.checkExpressionErrors(refExpressionErrors, true);\n    if (refNeedsArrowPos.start) this.unexpected(refNeedsArrowPos.start);\n    this.toReferencedListDeep(exprList, true);\n\n    if (exprList.length > 1) {\n      val = this.startNodeAt(innerStartPos, innerStartLoc);\n      val.expressions = exprList;\n      this.finishNodeAt(val, \"SequenceExpression\", innerEndPos, innerEndLoc);\n    } else {\n      val = exprList[0];\n    }\n\n    if (!this.options.createParenthesizedExpressions) {\n      this.addExtra(val, \"parenthesized\", true);\n      this.addExtra(val, \"parenStart\", startPos);\n      return val;\n    }\n\n    const parenExpression = this.startNodeAt(startPos, startLoc);\n    parenExpression.expression = val;\n    this.finishNode(parenExpression, \"ParenthesizedExpression\");\n    return parenExpression;\n  }\n\n  shouldParseArrow() {\n    return !this.canInsertSemicolon();\n  }\n\n  parseArrow(node) {\n    if (this.eat(types.arrow)) {\n      return node;\n    }\n  }\n\n  parseParenItem(node, startPos, startLoc) {\n    return node;\n  }\n\n  parseNewOrNewTarget() {\n    const node = this.startNode();\n    this.next();\n\n    if (this.match(types.dot)) {\n      const meta = this.createIdentifier(this.startNodeAtNode(node), \"new\");\n      this.next();\n      const metaProp = this.parseMetaProperty(node, meta, \"target\");\n\n      if (!this.scope.inNonArrowFunction && !this.scope.inClass) {\n        let error = ErrorMessages.UnexpectedNewTarget;\n\n        if (this.hasPlugin(\"classProperties\")) {\n          error += \" or class properties\";\n        }\n\n        this.raise(metaProp.start, error);\n      }\n\n      return metaProp;\n    }\n\n    return this.parseNew(node);\n  }\n\n  parseNew(node) {\n    node.callee = this.parseNoCallExpr();\n\n    if (node.callee.type === \"Import\") {\n      this.raise(node.callee.start, ErrorMessages.ImportCallNotNewExpression);\n    } else if (this.isOptionalChain(node.callee)) {\n      this.raise(this.state.lastTokEnd, ErrorMessages.OptionalChainingNoNew);\n    } else if (this.eat(types.questionDot)) {\n      this.raise(this.state.start, ErrorMessages.OptionalChainingNoNew);\n    }\n\n    this.parseNewArguments(node);\n    return this.finishNode(node, \"NewExpression\");\n  }\n\n  parseNewArguments(node) {\n    if (this.eat(types.parenL)) {\n      const args = this.parseExprList(types.parenR);\n      this.toReferencedList(args);\n      node.arguments = args;\n    } else {\n      node.arguments = [];\n    }\n  }\n\n  parseTemplateElement(isTagged) {\n    const elem = this.startNode();\n\n    if (this.state.value === null) {\n      if (!isTagged) {\n        this.raise(this.state.start + 1, ErrorMessages.InvalidEscapeSequenceTemplate);\n      }\n    }\n\n    elem.value = {\n      raw: this.input.slice(this.state.start, this.state.end).replace(/\\r\\n?/g, \"\\n\"),\n      cooked: this.state.value\n    };\n    this.next();\n    elem.tail = this.match(types.backQuote);\n    return this.finishNode(elem, \"TemplateElement\");\n  }\n\n  parseTemplate(isTagged) {\n    const node = this.startNode();\n    this.next();\n    node.expressions = [];\n    let curElt = this.parseTemplateElement(isTagged);\n    node.quasis = [curElt];\n\n    while (!curElt.tail) {\n      this.expect(types.dollarBraceL);\n      node.expressions.push(this.parseTemplateSubstitution());\n      this.expect(types.braceR);\n      node.quasis.push(curElt = this.parseTemplateElement(isTagged));\n    }\n\n    this.next();\n    return this.finishNode(node, \"TemplateLiteral\");\n  }\n\n  parseTemplateSubstitution() {\n    return this.parseExpression();\n  }\n\n  parseObjectLike(close, isPattern, isRecord, refExpressionErrors) {\n    if (isRecord) {\n      this.expectPlugin(\"recordAndTuple\");\n    }\n\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = false;\n    const propHash = Object.create(null);\n    let first = true;\n    const node = this.startNode();\n    node.properties = [];\n    this.next();\n\n    while (!this.match(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(types.comma);\n\n        if (this.match(close)) {\n          this.addExtra(node, \"trailingComma\", this.state.lastTokStart);\n          break;\n        }\n      }\n\n      const prop = this.parsePropertyDefinition(isPattern, refExpressionErrors);\n\n      if (!isPattern) {\n        this.checkProto(prop, isRecord, propHash, refExpressionErrors);\n      }\n\n      if (isRecord && !this.isObjectProperty(prop) && prop.type !== \"SpreadElement\") {\n        this.raise(prop.start, ErrorMessages.InvalidRecordProperty);\n      }\n\n      if (prop.shorthand) {\n        this.addExtra(prop, \"shorthand\", true);\n      }\n\n      node.properties.push(prop);\n    }\n\n    this.state.exprAllowed = false;\n    this.next();\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n    let type = \"ObjectExpression\";\n\n    if (isPattern) {\n      type = \"ObjectPattern\";\n    } else if (isRecord) {\n      type = \"RecordExpression\";\n    }\n\n    return this.finishNode(node, type);\n  }\n\n  maybeAsyncOrAccessorProp(prop) {\n    return !prop.computed && prop.key.type === \"Identifier\" && (this.isLiteralPropertyName() || this.match(types.bracketL) || this.match(types.star));\n  }\n\n  parsePropertyDefinition(isPattern, refExpressionErrors) {\n    let decorators = [];\n\n    if (this.match(types.at)) {\n      if (this.hasPlugin(\"decorators\")) {\n        this.raise(this.state.start, ErrorMessages.UnsupportedPropertyDecorator);\n      }\n\n      while (this.match(types.at)) {\n        decorators.push(this.parseDecorator());\n      }\n    }\n\n    const prop = this.startNode();\n    let isGenerator = false;\n    let isAsync = false;\n    let isAccessor = false;\n    let startPos;\n    let startLoc;\n\n    if (this.match(types.ellipsis)) {\n      if (decorators.length) this.unexpected();\n\n      if (isPattern) {\n        this.next();\n        prop.argument = this.parseIdentifier();\n        this.checkCommaAfterRest(125);\n        return this.finishNode(prop, \"RestElement\");\n      }\n\n      return this.parseSpread();\n    }\n\n    if (decorators.length) {\n      prop.decorators = decorators;\n      decorators = [];\n    }\n\n    prop.method = false;\n\n    if (isPattern || refExpressionErrors) {\n      startPos = this.state.start;\n      startLoc = this.state.startLoc;\n    }\n\n    if (!isPattern) {\n      isGenerator = this.eat(types.star);\n    }\n\n    const containsEsc = this.state.containsEsc;\n    const key = this.parsePropertyName(prop, false);\n\n    if (!isPattern && !isGenerator && !containsEsc && this.maybeAsyncOrAccessorProp(prop)) {\n      const keyName = key.name;\n\n      if (keyName === \"async\" && !this.hasPrecedingLineBreak()) {\n        isAsync = true;\n        isGenerator = this.eat(types.star);\n        this.parsePropertyName(prop, false);\n      }\n\n      if (keyName === \"get\" || keyName === \"set\") {\n        isAccessor = true;\n        prop.kind = keyName;\n\n        if (this.match(types.star)) {\n          isGenerator = true;\n          this.raise(this.state.pos, ErrorMessages.AccessorIsGenerator, keyName);\n          this.next();\n        }\n\n        this.parsePropertyName(prop, false);\n      }\n    }\n\n    this.parseObjPropValue(prop, startPos, startLoc, isGenerator, isAsync, isPattern, isAccessor, refExpressionErrors);\n    return prop;\n  }\n\n  getGetterSetterExpectedParamCount(method) {\n    return method.kind === \"get\" ? 0 : 1;\n  }\n\n  getObjectOrClassMethodParams(method) {\n    return method.params;\n  }\n\n  checkGetterSetterParams(method) {\n    var _params;\n\n    const paramCount = this.getGetterSetterExpectedParamCount(method);\n    const params = this.getObjectOrClassMethodParams(method);\n    const start = method.start;\n\n    if (params.length !== paramCount) {\n      if (method.kind === \"get\") {\n        this.raise(start, ErrorMessages.BadGetterArity);\n      } else {\n        this.raise(start, ErrorMessages.BadSetterArity);\n      }\n    }\n\n    if (method.kind === \"set\" && ((_params = params[params.length - 1]) == null ? void 0 : _params.type) === \"RestElement\") {\n      this.raise(start, ErrorMessages.BadSetterRestParameter);\n    }\n  }\n\n  parseObjectMethod(prop, isGenerator, isAsync, isPattern, isAccessor) {\n    if (isAccessor) {\n      this.parseMethod(prop, isGenerator, false, false, false, \"ObjectMethod\");\n      this.checkGetterSetterParams(prop);\n      return prop;\n    }\n\n    if (isAsync || isGenerator || this.match(types.parenL)) {\n      if (isPattern) this.unexpected();\n      prop.kind = \"method\";\n      prop.method = true;\n      return this.parseMethod(prop, isGenerator, isAsync, false, false, \"ObjectMethod\");\n    }\n  }\n\n  parseObjectProperty(prop, startPos, startLoc, isPattern, refExpressionErrors) {\n    prop.shorthand = false;\n\n    if (this.eat(types.colon)) {\n      prop.value = isPattern ? this.parseMaybeDefault(this.state.start, this.state.startLoc) : this.parseMaybeAssignAllowIn(refExpressionErrors);\n      return this.finishNode(prop, \"ObjectProperty\");\n    }\n\n    if (!prop.computed && prop.key.type === \"Identifier\") {\n      this.checkReservedWord(prop.key.name, prop.key.start, true, false);\n\n      if (isPattern) {\n        prop.value = this.parseMaybeDefault(startPos, startLoc, prop.key.__clone());\n      } else if (this.match(types.eq) && refExpressionErrors) {\n        if (refExpressionErrors.shorthandAssign === -1) {\n          refExpressionErrors.shorthandAssign = this.state.start;\n        }\n\n        prop.value = this.parseMaybeDefault(startPos, startLoc, prop.key.__clone());\n      } else {\n        prop.value = prop.key.__clone();\n      }\n\n      prop.shorthand = true;\n      return this.finishNode(prop, \"ObjectProperty\");\n    }\n  }\n\n  parseObjPropValue(prop, startPos, startLoc, isGenerator, isAsync, isPattern, isAccessor, refExpressionErrors) {\n    const node = this.parseObjectMethod(prop, isGenerator, isAsync, isPattern, isAccessor) || this.parseObjectProperty(prop, startPos, startLoc, isPattern, refExpressionErrors);\n    if (!node) this.unexpected();\n    return node;\n  }\n\n  parsePropertyName(prop, isPrivateNameAllowed) {\n    if (this.eat(types.bracketL)) {\n      prop.computed = true;\n      prop.key = this.parseMaybeAssignAllowIn();\n      this.expect(types.bracketR);\n    } else {\n      const oldInPropertyName = this.state.inPropertyName;\n      this.state.inPropertyName = true;\n      prop.key = this.match(types.num) || this.match(types.string) || this.match(types.bigint) || this.match(types.decimal) ? this.parseExprAtom() : this.parseMaybePrivateName(isPrivateNameAllowed);\n\n      if (!this.isPrivateName(prop.key)) {\n        prop.computed = false;\n      }\n\n      this.state.inPropertyName = oldInPropertyName;\n    }\n\n    return prop.key;\n  }\n\n  initFunction(node, isAsync) {\n    node.id = null;\n    node.generator = false;\n    node.async = !!isAsync;\n  }\n\n  parseMethod(node, isGenerator, isAsync, isConstructor, allowDirectSuper, type, inClassScope = false) {\n    this.initFunction(node, isAsync);\n    node.generator = !!isGenerator;\n    const allowModifiers = isConstructor;\n    this.scope.enter(SCOPE_FUNCTION | SCOPE_SUPER | (inClassScope ? SCOPE_CLASS : 0) | (allowDirectSuper ? SCOPE_DIRECT_SUPER : 0));\n    this.prodParam.enter(functionFlags(isAsync, node.generator));\n    this.parseFunctionParams(node, allowModifiers);\n    this.parseFunctionBodyAndFinish(node, type, true);\n    this.prodParam.exit();\n    this.scope.exit();\n    return node;\n  }\n\n  parseArrayLike(close, canBePattern, isTuple, refExpressionErrors) {\n    if (isTuple) {\n      this.expectPlugin(\"recordAndTuple\");\n    }\n\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = false;\n    const node = this.startNode();\n    this.next();\n    node.elements = this.parseExprList(close, !isTuple, refExpressionErrors, node);\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n    return this.finishNode(node, isTuple ? \"TupleExpression\" : \"ArrayExpression\");\n  }\n\n  parseArrowExpression(node, params, isAsync, trailingCommaPos) {\n    this.scope.enter(SCOPE_FUNCTION | SCOPE_ARROW);\n    let flags = functionFlags(isAsync, false);\n\n    if (!this.match(types.bracketL) && this.prodParam.hasIn) {\n      flags |= PARAM_IN;\n    }\n\n    this.prodParam.enter(flags);\n    this.initFunction(node, isAsync);\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n\n    if (params) {\n      this.state.maybeInArrowParameters = true;\n      this.setArrowFunctionParameters(node, params, trailingCommaPos);\n    }\n\n    this.state.maybeInArrowParameters = false;\n    this.parseFunctionBody(node, true);\n    this.prodParam.exit();\n    this.scope.exit();\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n    return this.finishNode(node, \"ArrowFunctionExpression\");\n  }\n\n  setArrowFunctionParameters(node, params, trailingCommaPos) {\n    node.params = this.toAssignableList(params, trailingCommaPos, false);\n  }\n\n  parseFunctionBodyAndFinish(node, type, isMethod = false) {\n    this.parseFunctionBody(node, false, isMethod);\n    this.finishNode(node, type);\n  }\n\n  parseFunctionBody(node, allowExpression, isMethod = false) {\n    const isExpression = allowExpression && !this.match(types.braceL);\n    this.expressionScope.enter(newExpressionScope());\n\n    if (isExpression) {\n      node.body = this.parseMaybeAssign();\n      this.checkParams(node, false, allowExpression, false);\n    } else {\n      const oldStrict = this.state.strict;\n      const oldLabels = this.state.labels;\n      this.state.labels = [];\n      this.prodParam.enter(this.prodParam.currentFlags() | PARAM_RETURN);\n      node.body = this.parseBlock(true, false, hasStrictModeDirective => {\n        const nonSimple = !this.isSimpleParamList(node.params);\n\n        if (hasStrictModeDirective && nonSimple) {\n          const errorPos = (node.kind === \"method\" || node.kind === \"constructor\") && !!node.key ? node.key.end : node.start;\n          this.raise(errorPos, ErrorMessages.IllegalLanguageModeDirective);\n        }\n\n        const strictModeChanged = !oldStrict && this.state.strict;\n        this.checkParams(node, !this.state.strict && !allowExpression && !isMethod && !nonSimple, allowExpression, strictModeChanged);\n\n        if (this.state.strict && node.id) {\n          this.checkLVal(node.id, \"function name\", BIND_OUTSIDE, undefined, undefined, strictModeChanged);\n        }\n      });\n      this.prodParam.exit();\n      this.expressionScope.exit();\n      this.state.labels = oldLabels;\n    }\n  }\n\n  isSimpleParamList(params) {\n    for (let i = 0, len = params.length; i < len; i++) {\n      if (params[i].type !== \"Identifier\") return false;\n    }\n\n    return true;\n  }\n\n  checkParams(node, allowDuplicates, isArrowFunction, strictModeChanged = true) {\n    const checkClashes = new Set();\n\n    for (let _i2 = 0, _node$params = node.params; _i2 < _node$params.length; _i2++) {\n      const param = _node$params[_i2];\n      this.checkLVal(param, \"function parameter list\", BIND_VAR, allowDuplicates ? null : checkClashes, undefined, strictModeChanged);\n    }\n  }\n\n  parseExprList(close, allowEmpty, refExpressionErrors, nodeForExtra) {\n    const elts = [];\n    let first = true;\n\n    while (!this.eat(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(types.comma);\n\n        if (this.match(close)) {\n          if (nodeForExtra) {\n            this.addExtra(nodeForExtra, \"trailingComma\", this.state.lastTokStart);\n          }\n\n          this.next();\n          break;\n        }\n      }\n\n      elts.push(this.parseExprListItem(allowEmpty, refExpressionErrors));\n    }\n\n    return elts;\n  }\n\n  parseExprListItem(allowEmpty, refExpressionErrors, refNeedsArrowPos, allowPlaceholder) {\n    let elt;\n\n    if (this.match(types.comma)) {\n      if (!allowEmpty) {\n        this.raise(this.state.pos, ErrorMessages.UnexpectedToken, \",\");\n      }\n\n      elt = null;\n    } else if (this.match(types.ellipsis)) {\n      const spreadNodeStartPos = this.state.start;\n      const spreadNodeStartLoc = this.state.startLoc;\n      elt = this.parseParenItem(this.parseSpread(refExpressionErrors, refNeedsArrowPos), spreadNodeStartPos, spreadNodeStartLoc);\n    } else if (this.match(types.question)) {\n      this.expectPlugin(\"partialApplication\");\n\n      if (!allowPlaceholder) {\n        this.raise(this.state.start, ErrorMessages.UnexpectedArgumentPlaceholder);\n      }\n\n      const node = this.startNode();\n      this.next();\n      elt = this.finishNode(node, \"ArgumentPlaceholder\");\n    } else {\n      elt = this.parseMaybeAssignAllowIn(refExpressionErrors, this.parseParenItem, refNeedsArrowPos);\n    }\n\n    return elt;\n  }\n\n  parseIdentifier(liberal) {\n    const node = this.startNode();\n    const name = this.parseIdentifierName(node.start, liberal);\n    return this.createIdentifier(node, name);\n  }\n\n  createIdentifier(node, name) {\n    node.name = name;\n    node.loc.identifierName = name;\n    return this.finishNode(node, \"Identifier\");\n  }\n\n  parseIdentifierName(pos, liberal) {\n    let name;\n    const {\n      start,\n      type\n    } = this.state;\n\n    if (type === types.name) {\n      name = this.state.value;\n    } else if (type.keyword) {\n      name = type.keyword;\n      const curContext = this.curContext();\n\n      if ((type === types._class || type === types._function) && (curContext === types$1.functionStatement || curContext === types$1.functionExpression)) {\n        this.state.context.pop();\n      }\n    } else {\n      throw this.unexpected();\n    }\n\n    if (liberal) {\n      this.state.type = types.name;\n    } else {\n      this.checkReservedWord(name, start, !!type.keyword, false);\n    }\n\n    this.next();\n    return name;\n  }\n\n  checkReservedWord(word, startLoc, checkKeywords, isBinding) {\n    if (this.prodParam.hasYield && word === \"yield\") {\n      this.raise(startLoc, ErrorMessages.YieldBindingIdentifier);\n      return;\n    }\n\n    if (word === \"await\") {\n      if (this.prodParam.hasAwait) {\n        this.raise(startLoc, ErrorMessages.AwaitBindingIdentifier);\n        return;\n      } else if (this.scope.inStaticBlock && !this.scope.inNonArrowFunction) {\n        this.raise(startLoc, ErrorMessages.AwaitBindingIdentifierInStaticBlock);\n        return;\n      } else {\n        this.expressionScope.recordAsyncArrowParametersError(startLoc, ErrorMessages.AwaitBindingIdentifier);\n      }\n    }\n\n    if (this.scope.inClass && !this.scope.inNonArrowFunction && word === \"arguments\") {\n      this.raise(startLoc, ErrorMessages.ArgumentsInClass);\n      return;\n    }\n\n    if (checkKeywords && isKeyword(word)) {\n      this.raise(startLoc, ErrorMessages.UnexpectedKeyword, word);\n      return;\n    }\n\n    const reservedTest = !this.state.strict ? isReservedWord : isBinding ? isStrictBindReservedWord : isStrictReservedWord;\n\n    if (reservedTest(word, this.inModule)) {\n      this.raise(startLoc, ErrorMessages.UnexpectedReservedWord, word);\n    }\n  }\n\n  isAwaitAllowed() {\n    if (this.prodParam.hasAwait) return true;\n\n    if (this.options.allowAwaitOutsideFunction && !this.scope.inFunction) {\n      return true;\n    }\n\n    return false;\n  }\n\n  parseAwait(startPos, startLoc) {\n    const node = this.startNodeAt(startPos, startLoc);\n    this.expressionScope.recordParameterInitializerError(node.start, ErrorMessages.AwaitExpressionFormalParameter);\n\n    if (this.eat(types.star)) {\n      this.raise(node.start, ErrorMessages.ObsoleteAwaitStar);\n    }\n\n    if (!this.scope.inFunction && !this.options.allowAwaitOutsideFunction) {\n      if (this.isAmbiguousAwait()) {\n        this.ambiguousScriptDifferentAst = true;\n      } else {\n        this.sawUnambiguousESM = true;\n      }\n    }\n\n    if (!this.state.soloAwait) {\n      node.argument = this.parseMaybeUnary();\n    }\n\n    return this.finishNode(node, \"AwaitExpression\");\n  }\n\n  isAmbiguousAwait() {\n    return this.hasPrecedingLineBreak() || this.match(types.plusMin) || this.match(types.parenL) || this.match(types.bracketL) || this.match(types.backQuote) || this.match(types.regexp) || this.match(types.slash) || this.hasPlugin(\"v8intrinsic\") && this.match(types.modulo);\n  }\n\n  parseYield() {\n    const node = this.startNode();\n    this.expressionScope.recordParameterInitializerError(node.start, ErrorMessages.YieldInParameter);\n    this.next();\n\n    if (this.match(types.semi) || !this.match(types.star) && !this.state.type.startsExpr || this.hasPrecedingLineBreak()) {\n      node.delegate = false;\n      node.argument = null;\n    } else {\n      node.delegate = this.eat(types.star);\n      node.argument = this.parseMaybeAssign();\n    }\n\n    return this.finishNode(node, \"YieldExpression\");\n  }\n\n  checkPipelineAtInfixOperator(left, leftStartPos) {\n    if (this.getPluginOption(\"pipelineOperator\", \"proposal\") === \"smart\") {\n      if (left.type === \"SequenceExpression\") {\n        this.raise(leftStartPos, ErrorMessages.PipelineHeadSequenceExpression);\n      }\n    }\n  }\n\n  parseSmartPipelineBody(childExpression, startPos, startLoc) {\n    this.checkSmartPipelineBodyEarlyErrors(childExpression, startPos);\n    return this.parseSmartPipelineBodyInStyle(childExpression, startPos, startLoc);\n  }\n\n  checkSmartPipelineBodyEarlyErrors(childExpression, startPos) {\n    if (this.match(types.arrow)) {\n      throw this.raise(this.state.start, ErrorMessages.PipelineBodyNoArrow);\n    } else if (childExpression.type === \"SequenceExpression\") {\n      this.raise(startPos, ErrorMessages.PipelineBodySequenceExpression);\n    }\n  }\n\n  parseSmartPipelineBodyInStyle(childExpression, startPos, startLoc) {\n    const bodyNode = this.startNodeAt(startPos, startLoc);\n    const isSimpleReference = this.isSimpleReference(childExpression);\n\n    if (isSimpleReference) {\n      bodyNode.callee = childExpression;\n    } else {\n      if (!this.topicReferenceWasUsedInCurrentTopicContext()) {\n        this.raise(startPos, ErrorMessages.PipelineTopicUnused);\n      }\n\n      bodyNode.expression = childExpression;\n    }\n\n    return this.finishNode(bodyNode, isSimpleReference ? \"PipelineBareFunction\" : \"PipelineTopicExpression\");\n  }\n\n  isSimpleReference(expression) {\n    switch (expression.type) {\n      case \"MemberExpression\":\n        return !expression.computed && this.isSimpleReference(expression.object);\n\n      case \"Identifier\":\n        return true;\n\n      default:\n        return false;\n    }\n  }\n\n  withTopicPermittingContext(callback) {\n    const outerContextTopicState = this.state.topicContext;\n    this.state.topicContext = {\n      maxNumOfResolvableTopics: 1,\n      maxTopicIndex: null\n    };\n\n    try {\n      return callback();\n    } finally {\n      this.state.topicContext = outerContextTopicState;\n    }\n  }\n\n  withTopicForbiddingContext(callback) {\n    const outerContextTopicState = this.state.topicContext;\n    this.state.topicContext = {\n      maxNumOfResolvableTopics: 0,\n      maxTopicIndex: null\n    };\n\n    try {\n      return callback();\n    } finally {\n      this.state.topicContext = outerContextTopicState;\n    }\n  }\n\n  withSoloAwaitPermittingContext(callback) {\n    const outerContextSoloAwaitState = this.state.soloAwait;\n    this.state.soloAwait = true;\n\n    try {\n      return callback();\n    } finally {\n      this.state.soloAwait = outerContextSoloAwaitState;\n    }\n  }\n\n  allowInAnd(callback) {\n    const flags = this.prodParam.currentFlags();\n    const prodParamToSet = PARAM_IN & ~flags;\n\n    if (prodParamToSet) {\n      this.prodParam.enter(flags | PARAM_IN);\n\n      try {\n        return callback();\n      } finally {\n        this.prodParam.exit();\n      }\n    }\n\n    return callback();\n  }\n\n  disallowInAnd(callback) {\n    const flags = this.prodParam.currentFlags();\n    const prodParamToClear = PARAM_IN & flags;\n\n    if (prodParamToClear) {\n      this.prodParam.enter(flags & ~PARAM_IN);\n\n      try {\n        return callback();\n      } finally {\n        this.prodParam.exit();\n      }\n    }\n\n    return callback();\n  }\n\n  registerTopicReference() {\n    this.state.topicContext.maxTopicIndex = 0;\n  }\n\n  primaryTopicReferenceIsAllowedInCurrentTopicContext() {\n    return this.state.topicContext.maxNumOfResolvableTopics >= 1;\n  }\n\n  topicReferenceWasUsedInCurrentTopicContext() {\n    return this.state.topicContext.maxTopicIndex != null && this.state.topicContext.maxTopicIndex >= 0;\n  }\n\n  parseFSharpPipelineBody(prec) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    this.state.potentialArrowAt = this.state.start;\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = true;\n    const ret = this.parseExprOp(this.parseMaybeUnary(), startPos, startLoc, prec);\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n    return ret;\n  }\n\n}\n\nconst loopLabel = {\n  kind: \"loop\"\n},\n      switchLabel = {\n  kind: \"switch\"\n};\nconst FUNC_NO_FLAGS = 0b000,\n      FUNC_STATEMENT = 0b001,\n      FUNC_HANGING_STATEMENT = 0b010,\n      FUNC_NULLABLE_ID = 0b100;\nconst loneSurrogate = /[\\uD800-\\uDFFF]/u;\nclass StatementParser extends ExpressionParser {\n  parseTopLevel(file, program) {\n    program.sourceType = this.options.sourceType;\n    program.interpreter = this.parseInterpreterDirective();\n    this.parseBlockBody(program, true, true, types.eof);\n\n    if (this.inModule && !this.options.allowUndeclaredExports && this.scope.undefinedExports.size > 0) {\n      for (let _i = 0, _Array$from = Array.from(this.scope.undefinedExports); _i < _Array$from.length; _i++) {\n        const [name] = _Array$from[_i];\n        const pos = this.scope.undefinedExports.get(name);\n        this.raise(pos, ErrorMessages.ModuleExportUndefined, name);\n      }\n    }\n\n    file.program = this.finishNode(program, \"Program\");\n    file.comments = this.state.comments;\n    if (this.options.tokens) file.tokens = this.tokens;\n    return this.finishNode(file, \"File\");\n  }\n\n  stmtToDirective(stmt) {\n    const expr = stmt.expression;\n    const directiveLiteral = this.startNodeAt(expr.start, expr.loc.start);\n    const directive = this.startNodeAt(stmt.start, stmt.loc.start);\n    const raw = this.input.slice(expr.start, expr.end);\n    const val = directiveLiteral.value = raw.slice(1, -1);\n    this.addExtra(directiveLiteral, \"raw\", raw);\n    this.addExtra(directiveLiteral, \"rawValue\", val);\n    directive.value = this.finishNodeAt(directiveLiteral, \"DirectiveLiteral\", expr.end, expr.loc.end);\n    return this.finishNodeAt(directive, \"Directive\", stmt.end, stmt.loc.end);\n  }\n\n  parseInterpreterDirective() {\n    if (!this.match(types.interpreterDirective)) {\n      return null;\n    }\n\n    const node = this.startNode();\n    node.value = this.state.value;\n    this.next();\n    return this.finishNode(node, \"InterpreterDirective\");\n  }\n\n  isLet(context) {\n    if (!this.isContextual(\"let\")) {\n      return false;\n    }\n\n    const next = this.nextTokenStart();\n    const nextCh = this.input.charCodeAt(next);\n    if (nextCh === 91) return true;\n    if (context) return false;\n    if (nextCh === 123) return true;\n\n    if (isIdentifierStart(nextCh)) {\n      let pos = next + 1;\n\n      while (isIdentifierChar(this.input.charCodeAt(pos))) {\n        ++pos;\n      }\n\n      const ident = this.input.slice(next, pos);\n      if (!keywordRelationalOperator.test(ident)) return true;\n    }\n\n    return false;\n  }\n\n  parseStatement(context, topLevel) {\n    if (this.match(types.at)) {\n      this.parseDecorators(true);\n    }\n\n    return this.parseStatementContent(context, topLevel);\n  }\n\n  parseStatementContent(context, topLevel) {\n    let starttype = this.state.type;\n    const node = this.startNode();\n    let kind;\n\n    if (this.isLet(context)) {\n      starttype = types._var;\n      kind = \"let\";\n    }\n\n    switch (starttype) {\n      case types._break:\n      case types._continue:\n        return this.parseBreakContinueStatement(node, starttype.keyword);\n\n      case types._debugger:\n        return this.parseDebuggerStatement(node);\n\n      case types._do:\n        return this.parseDoStatement(node);\n\n      case types._for:\n        return this.parseForStatement(node);\n\n      case types._function:\n        if (this.lookaheadCharCode() === 46) break;\n\n        if (context) {\n          if (this.state.strict) {\n            this.raise(this.state.start, ErrorMessages.StrictFunction);\n          } else if (context !== \"if\" && context !== \"label\") {\n            this.raise(this.state.start, ErrorMessages.SloppyFunction);\n          }\n        }\n\n        return this.parseFunctionStatement(node, false, !context);\n\n      case types._class:\n        if (context) this.unexpected();\n        return this.parseClass(node, true);\n\n      case types._if:\n        return this.parseIfStatement(node);\n\n      case types._return:\n        return this.parseReturnStatement(node);\n\n      case types._switch:\n        return this.parseSwitchStatement(node);\n\n      case types._throw:\n        return this.parseThrowStatement(node);\n\n      case types._try:\n        return this.parseTryStatement(node);\n\n      case types._const:\n      case types._var:\n        kind = kind || this.state.value;\n\n        if (context && kind !== \"var\") {\n          this.raise(this.state.start, ErrorMessages.UnexpectedLexicalDeclaration);\n        }\n\n        return this.parseVarStatement(node, kind);\n\n      case types._while:\n        return this.parseWhileStatement(node);\n\n      case types._with:\n        return this.parseWithStatement(node);\n\n      case types.braceL:\n        return this.parseBlock();\n\n      case types.semi:\n        return this.parseEmptyStatement(node);\n\n      case types._import:\n        {\n          const nextTokenCharCode = this.lookaheadCharCode();\n\n          if (nextTokenCharCode === 40 || nextTokenCharCode === 46) {\n              break;\n            }\n        }\n\n      case types._export:\n        {\n          if (!this.options.allowImportExportEverywhere && !topLevel) {\n            this.raise(this.state.start, ErrorMessages.UnexpectedImportExport);\n          }\n\n          this.next();\n          let result;\n\n          if (starttype === types._import) {\n            result = this.parseImport(node);\n\n            if (result.type === \"ImportDeclaration\" && (!result.importKind || result.importKind === \"value\")) {\n              this.sawUnambiguousESM = true;\n            }\n          } else {\n            result = this.parseExport(node);\n\n            if (result.type === \"ExportNamedDeclaration\" && (!result.exportKind || result.exportKind === \"value\") || result.type === \"ExportAllDeclaration\" && (!result.exportKind || result.exportKind === \"value\") || result.type === \"ExportDefaultDeclaration\") {\n              this.sawUnambiguousESM = true;\n            }\n          }\n\n          this.assertModuleNodeAllowed(node);\n          return result;\n        }\n\n      default:\n        {\n          if (this.isAsyncFunction()) {\n            if (context) {\n              this.raise(this.state.start, ErrorMessages.AsyncFunctionInSingleStatementContext);\n            }\n\n            this.next();\n            return this.parseFunctionStatement(node, true, !context);\n          }\n        }\n    }\n\n    const maybeName = this.state.value;\n    const expr = this.parseExpression();\n\n    if (starttype === types.name && expr.type === \"Identifier\" && this.eat(types.colon)) {\n      return this.parseLabeledStatement(node, maybeName, expr, context);\n    } else {\n      return this.parseExpressionStatement(node, expr);\n    }\n  }\n\n  assertModuleNodeAllowed(node) {\n    if (!this.options.allowImportExportEverywhere && !this.inModule) {\n      this.raiseWithData(node.start, {\n        code: \"BABEL_PARSER_SOURCETYPE_MODULE_REQUIRED\"\n      }, ErrorMessages.ImportOutsideModule);\n    }\n  }\n\n  takeDecorators(node) {\n    const decorators = this.state.decoratorStack[this.state.decoratorStack.length - 1];\n\n    if (decorators.length) {\n      node.decorators = decorators;\n      this.resetStartLocationFromNode(node, decorators[0]);\n      this.state.decoratorStack[this.state.decoratorStack.length - 1] = [];\n    }\n  }\n\n  canHaveLeadingDecorator() {\n    return this.match(types._class);\n  }\n\n  parseDecorators(allowExport) {\n    const currentContextDecorators = this.state.decoratorStack[this.state.decoratorStack.length - 1];\n\n    while (this.match(types.at)) {\n      const decorator = this.parseDecorator();\n      currentContextDecorators.push(decorator);\n    }\n\n    if (this.match(types._export)) {\n      if (!allowExport) {\n        this.unexpected();\n      }\n\n      if (this.hasPlugin(\"decorators\") && !this.getPluginOption(\"decorators\", \"decoratorsBeforeExport\")) {\n        this.raise(this.state.start, ErrorMessages.DecoratorExportClass);\n      }\n    } else if (!this.canHaveLeadingDecorator()) {\n      throw this.raise(this.state.start, ErrorMessages.UnexpectedLeadingDecorator);\n    }\n  }\n\n  parseDecorator() {\n    this.expectOnePlugin([\"decorators-legacy\", \"decorators\"]);\n    const node = this.startNode();\n    this.next();\n\n    if (this.hasPlugin(\"decorators\")) {\n      this.state.decoratorStack.push([]);\n      const startPos = this.state.start;\n      const startLoc = this.state.startLoc;\n      let expr;\n\n      if (this.eat(types.parenL)) {\n        expr = this.parseExpression();\n        this.expect(types.parenR);\n      } else {\n        expr = this.parseIdentifier(false);\n\n        while (this.eat(types.dot)) {\n          const node = this.startNodeAt(startPos, startLoc);\n          node.object = expr;\n          node.property = this.parseIdentifier(true);\n          node.computed = false;\n          expr = this.finishNode(node, \"MemberExpression\");\n        }\n      }\n\n      node.expression = this.parseMaybeDecoratorArguments(expr);\n      this.state.decoratorStack.pop();\n    } else {\n      node.expression = this.parseExprSubscripts();\n    }\n\n    return this.finishNode(node, \"Decorator\");\n  }\n\n  parseMaybeDecoratorArguments(expr) {\n    if (this.eat(types.parenL)) {\n      const node = this.startNodeAtNode(expr);\n      node.callee = expr;\n      node.arguments = this.parseCallExpressionArguments(types.parenR, false);\n      this.toReferencedList(node.arguments);\n      return this.finishNode(node, \"CallExpression\");\n    }\n\n    return expr;\n  }\n\n  parseBreakContinueStatement(node, keyword) {\n    const isBreak = keyword === \"break\";\n    this.next();\n\n    if (this.isLineTerminator()) {\n      node.label = null;\n    } else {\n      node.label = this.parseIdentifier();\n      this.semicolon();\n    }\n\n    this.verifyBreakContinue(node, keyword);\n    return this.finishNode(node, isBreak ? \"BreakStatement\" : \"ContinueStatement\");\n  }\n\n  verifyBreakContinue(node, keyword) {\n    const isBreak = keyword === \"break\";\n    let i;\n\n    for (i = 0; i < this.state.labels.length; ++i) {\n      const lab = this.state.labels[i];\n\n      if (node.label == null || lab.name === node.label.name) {\n        if (lab.kind != null && (isBreak || lab.kind === \"loop\")) break;\n        if (node.label && isBreak) break;\n      }\n    }\n\n    if (i === this.state.labels.length) {\n      this.raise(node.start, ErrorMessages.IllegalBreakContinue, keyword);\n    }\n  }\n\n  parseDebuggerStatement(node) {\n    this.next();\n    this.semicolon();\n    return this.finishNode(node, \"DebuggerStatement\");\n  }\n\n  parseHeaderExpression() {\n    this.expect(types.parenL);\n    const val = this.parseExpression();\n    this.expect(types.parenR);\n    return val;\n  }\n\n  parseDoStatement(node) {\n    this.next();\n    this.state.labels.push(loopLabel);\n    node.body = this.withTopicForbiddingContext(() => this.parseStatement(\"do\"));\n    this.state.labels.pop();\n    this.expect(types._while);\n    node.test = this.parseHeaderExpression();\n    this.eat(types.semi);\n    return this.finishNode(node, \"DoWhileStatement\");\n  }\n\n  parseForStatement(node) {\n    this.next();\n    this.state.labels.push(loopLabel);\n    let awaitAt = -1;\n\n    if (this.isAwaitAllowed() && this.eatContextual(\"await\")) {\n      awaitAt = this.state.lastTokStart;\n    }\n\n    this.scope.enter(SCOPE_OTHER);\n    this.expect(types.parenL);\n\n    if (this.match(types.semi)) {\n      if (awaitAt > -1) {\n        this.unexpected(awaitAt);\n      }\n\n      return this.parseFor(node, null);\n    }\n\n    const isLet = this.isLet();\n\n    if (this.match(types._var) || this.match(types._const) || isLet) {\n      const init = this.startNode();\n      const kind = isLet ? \"let\" : this.state.value;\n      this.next();\n      this.parseVar(init, true, kind);\n      this.finishNode(init, \"VariableDeclaration\");\n\n      if ((this.match(types._in) || this.isContextual(\"of\")) && init.declarations.length === 1) {\n        return this.parseForIn(node, init, awaitAt);\n      }\n\n      if (awaitAt > -1) {\n        this.unexpected(awaitAt);\n      }\n\n      return this.parseFor(node, init);\n    }\n\n    const refExpressionErrors = new ExpressionErrors();\n    const init = this.parseExpression(true, refExpressionErrors);\n\n    if (this.match(types._in) || this.isContextual(\"of\")) {\n      this.toAssignable(init, true);\n      const description = this.isContextual(\"of\") ? \"for-of statement\" : \"for-in statement\";\n      this.checkLVal(init, description);\n      return this.parseForIn(node, init, awaitAt);\n    } else {\n      this.checkExpressionErrors(refExpressionErrors, true);\n    }\n\n    if (awaitAt > -1) {\n      this.unexpected(awaitAt);\n    }\n\n    return this.parseFor(node, init);\n  }\n\n  parseFunctionStatement(node, isAsync, declarationPosition) {\n    this.next();\n    return this.parseFunction(node, FUNC_STATEMENT | (declarationPosition ? 0 : FUNC_HANGING_STATEMENT), isAsync);\n  }\n\n  parseIfStatement(node) {\n    this.next();\n    node.test = this.parseHeaderExpression();\n    node.consequent = this.parseStatement(\"if\");\n    node.alternate = this.eat(types._else) ? this.parseStatement(\"if\") : null;\n    return this.finishNode(node, \"IfStatement\");\n  }\n\n  parseReturnStatement(node) {\n    if (!this.prodParam.hasReturn && !this.options.allowReturnOutsideFunction) {\n      this.raise(this.state.start, ErrorMessages.IllegalReturn);\n    }\n\n    this.next();\n\n    if (this.isLineTerminator()) {\n      node.argument = null;\n    } else {\n      node.argument = this.parseExpression();\n      this.semicolon();\n    }\n\n    return this.finishNode(node, \"ReturnStatement\");\n  }\n\n  parseSwitchStatement(node) {\n    this.next();\n    node.discriminant = this.parseHeaderExpression();\n    const cases = node.cases = [];\n    this.expect(types.braceL);\n    this.state.labels.push(switchLabel);\n    this.scope.enter(SCOPE_OTHER);\n    let cur;\n\n    for (let sawDefault; !this.match(types.braceR);) {\n      if (this.match(types._case) || this.match(types._default)) {\n        const isCase = this.match(types._case);\n        if (cur) this.finishNode(cur, \"SwitchCase\");\n        cases.push(cur = this.startNode());\n        cur.consequent = [];\n        this.next();\n\n        if (isCase) {\n          cur.test = this.parseExpression();\n        } else {\n          if (sawDefault) {\n            this.raise(this.state.lastTokStart, ErrorMessages.MultipleDefaultsInSwitch);\n          }\n\n          sawDefault = true;\n          cur.test = null;\n        }\n\n        this.expect(types.colon);\n      } else {\n        if (cur) {\n          cur.consequent.push(this.parseStatement(null));\n        } else {\n          this.unexpected();\n        }\n      }\n    }\n\n    this.scope.exit();\n    if (cur) this.finishNode(cur, \"SwitchCase\");\n    this.next();\n    this.state.labels.pop();\n    return this.finishNode(node, \"SwitchStatement\");\n  }\n\n  parseThrowStatement(node) {\n    this.next();\n\n    if (this.hasPrecedingLineBreak()) {\n      this.raise(this.state.lastTokEnd, ErrorMessages.NewlineAfterThrow);\n    }\n\n    node.argument = this.parseExpression();\n    this.semicolon();\n    return this.finishNode(node, \"ThrowStatement\");\n  }\n\n  parseCatchClauseParam() {\n    const param = this.parseBindingAtom();\n    const simple = param.type === \"Identifier\";\n    this.scope.enter(simple ? SCOPE_SIMPLE_CATCH : 0);\n    this.checkLVal(param, \"catch clause\", BIND_LEXICAL);\n    return param;\n  }\n\n  parseTryStatement(node) {\n    this.next();\n    node.block = this.parseBlock();\n    node.handler = null;\n\n    if (this.match(types._catch)) {\n      const clause = this.startNode();\n      this.next();\n\n      if (this.match(types.parenL)) {\n        this.expect(types.parenL);\n        clause.param = this.parseCatchClauseParam();\n        this.expect(types.parenR);\n      } else {\n        clause.param = null;\n        this.scope.enter(SCOPE_OTHER);\n      }\n\n      clause.body = this.withTopicForbiddingContext(() => this.parseBlock(false, false));\n      this.scope.exit();\n      node.handler = this.finishNode(clause, \"CatchClause\");\n    }\n\n    node.finalizer = this.eat(types._finally) ? this.parseBlock() : null;\n\n    if (!node.handler && !node.finalizer) {\n      this.raise(node.start, ErrorMessages.NoCatchOrFinally);\n    }\n\n    return this.finishNode(node, \"TryStatement\");\n  }\n\n  parseVarStatement(node, kind) {\n    this.next();\n    this.parseVar(node, false, kind);\n    this.semicolon();\n    return this.finishNode(node, \"VariableDeclaration\");\n  }\n\n  parseWhileStatement(node) {\n    this.next();\n    node.test = this.parseHeaderExpression();\n    this.state.labels.push(loopLabel);\n    node.body = this.withTopicForbiddingContext(() => this.parseStatement(\"while\"));\n    this.state.labels.pop();\n    return this.finishNode(node, \"WhileStatement\");\n  }\n\n  parseWithStatement(node) {\n    if (this.state.strict) {\n      this.raise(this.state.start, ErrorMessages.StrictWith);\n    }\n\n    this.next();\n    node.object = this.parseHeaderExpression();\n    node.body = this.withTopicForbiddingContext(() => this.parseStatement(\"with\"));\n    return this.finishNode(node, \"WithStatement\");\n  }\n\n  parseEmptyStatement(node) {\n    this.next();\n    return this.finishNode(node, \"EmptyStatement\");\n  }\n\n  parseLabeledStatement(node, maybeName, expr, context) {\n    for (let _i2 = 0, _this$state$labels = this.state.labels; _i2 < _this$state$labels.length; _i2++) {\n      const label = _this$state$labels[_i2];\n\n      if (label.name === maybeName) {\n        this.raise(expr.start, ErrorMessages.LabelRedeclaration, maybeName);\n      }\n    }\n\n    const kind = this.state.type.isLoop ? \"loop\" : this.match(types._switch) ? \"switch\" : null;\n\n    for (let i = this.state.labels.length - 1; i >= 0; i--) {\n      const label = this.state.labels[i];\n\n      if (label.statementStart === node.start) {\n        label.statementStart = this.state.start;\n        label.kind = kind;\n      } else {\n        break;\n      }\n    }\n\n    this.state.labels.push({\n      name: maybeName,\n      kind: kind,\n      statementStart: this.state.start\n    });\n    node.body = this.parseStatement(context ? context.indexOf(\"label\") === -1 ? context + \"label\" : context : \"label\");\n    this.state.labels.pop();\n    node.label = expr;\n    return this.finishNode(node, \"LabeledStatement\");\n  }\n\n  parseExpressionStatement(node, expr) {\n    node.expression = expr;\n    this.semicolon();\n    return this.finishNode(node, \"ExpressionStatement\");\n  }\n\n  parseBlock(allowDirectives = false, createNewLexicalScope = true, afterBlockParse) {\n    const node = this.startNode();\n\n    if (allowDirectives) {\n      this.state.strictErrors.clear();\n    }\n\n    this.expect(types.braceL);\n\n    if (createNewLexicalScope) {\n      this.scope.enter(SCOPE_OTHER);\n    }\n\n    this.parseBlockBody(node, allowDirectives, false, types.braceR, afterBlockParse);\n\n    if (createNewLexicalScope) {\n      this.scope.exit();\n    }\n\n    return this.finishNode(node, \"BlockStatement\");\n  }\n\n  isValidDirective(stmt) {\n    return stmt.type === \"ExpressionStatement\" && stmt.expression.type === \"StringLiteral\" && !stmt.expression.extra.parenthesized;\n  }\n\n  parseBlockBody(node, allowDirectives, topLevel, end, afterBlockParse) {\n    const body = node.body = [];\n    const directives = node.directives = [];\n    this.parseBlockOrModuleBlockBody(body, allowDirectives ? directives : undefined, topLevel, end, afterBlockParse);\n  }\n\n  parseBlockOrModuleBlockBody(body, directives, topLevel, end, afterBlockParse) {\n    const oldStrict = this.state.strict;\n    let hasStrictModeDirective = false;\n    let parsedNonDirective = false;\n\n    while (!this.match(end)) {\n      const stmt = this.parseStatement(null, topLevel);\n\n      if (directives && !parsedNonDirective) {\n        if (this.isValidDirective(stmt)) {\n          const directive = this.stmtToDirective(stmt);\n          directives.push(directive);\n\n          if (!hasStrictModeDirective && directive.value.value === \"use strict\") {\n            hasStrictModeDirective = true;\n            this.setStrict(true);\n          }\n\n          continue;\n        }\n\n        parsedNonDirective = true;\n        this.state.strictErrors.clear();\n      }\n\n      body.push(stmt);\n    }\n\n    if (afterBlockParse) {\n      afterBlockParse.call(this, hasStrictModeDirective);\n    }\n\n    if (!oldStrict) {\n      this.setStrict(false);\n    }\n\n    this.next();\n  }\n\n  parseFor(node, init) {\n    node.init = init;\n    this.semicolon(false);\n    node.test = this.match(types.semi) ? null : this.parseExpression();\n    this.semicolon(false);\n    node.update = this.match(types.parenR) ? null : this.parseExpression();\n    this.expect(types.parenR);\n    node.body = this.withTopicForbiddingContext(() => this.parseStatement(\"for\"));\n    this.scope.exit();\n    this.state.labels.pop();\n    return this.finishNode(node, \"ForStatement\");\n  }\n\n  parseForIn(node, init, awaitAt) {\n    const isForIn = this.match(types._in);\n    this.next();\n\n    if (isForIn) {\n      if (awaitAt > -1) this.unexpected(awaitAt);\n    } else {\n      node.await = awaitAt > -1;\n    }\n\n    if (init.type === \"VariableDeclaration\" && init.declarations[0].init != null && (!isForIn || this.state.strict || init.kind !== \"var\" || init.declarations[0].id.type !== \"Identifier\")) {\n      this.raise(init.start, ErrorMessages.ForInOfLoopInitializer, isForIn ? \"for-in\" : \"for-of\");\n    } else if (init.type === \"AssignmentPattern\") {\n      this.raise(init.start, ErrorMessages.InvalidLhs, \"for-loop\");\n    }\n\n    node.left = init;\n    node.right = isForIn ? this.parseExpression() : this.parseMaybeAssignAllowIn();\n    this.expect(types.parenR);\n    node.body = this.withTopicForbiddingContext(() => this.parseStatement(\"for\"));\n    this.scope.exit();\n    this.state.labels.pop();\n    return this.finishNode(node, isForIn ? \"ForInStatement\" : \"ForOfStatement\");\n  }\n\n  parseVar(node, isFor, kind) {\n    const declarations = node.declarations = [];\n    const isTypescript = this.hasPlugin(\"typescript\");\n    node.kind = kind;\n\n    for (;;) {\n      const decl = this.startNode();\n      this.parseVarId(decl, kind);\n\n      if (this.eat(types.eq)) {\n        decl.init = isFor ? this.parseMaybeAssignDisallowIn() : this.parseMaybeAssignAllowIn();\n      } else {\n        if (kind === \"const\" && !(this.match(types._in) || this.isContextual(\"of\"))) {\n          if (!isTypescript) {\n            this.raise(this.state.lastTokEnd, ErrorMessages.DeclarationMissingInitializer, \"Const declarations\");\n          }\n        } else if (decl.id.type !== \"Identifier\" && !(isFor && (this.match(types._in) || this.isContextual(\"of\")))) {\n          this.raise(this.state.lastTokEnd, ErrorMessages.DeclarationMissingInitializer, \"Complex binding patterns\");\n        }\n\n        decl.init = null;\n      }\n\n      declarations.push(this.finishNode(decl, \"VariableDeclarator\"));\n      if (!this.eat(types.comma)) break;\n    }\n\n    return node;\n  }\n\n  parseVarId(decl, kind) {\n    decl.id = this.parseBindingAtom();\n    this.checkLVal(decl.id, \"variable declaration\", kind === \"var\" ? BIND_VAR : BIND_LEXICAL, undefined, kind !== \"var\");\n  }\n\n  parseFunction(node, statement = FUNC_NO_FLAGS, isAsync = false) {\n    const isStatement = statement & FUNC_STATEMENT;\n    const isHangingStatement = statement & FUNC_HANGING_STATEMENT;\n    const requireId = !!isStatement && !(statement & FUNC_NULLABLE_ID);\n    this.initFunction(node, isAsync);\n\n    if (this.match(types.star) && isHangingStatement) {\n      this.raise(this.state.start, ErrorMessages.GeneratorInSingleStatementContext);\n    }\n\n    node.generator = this.eat(types.star);\n\n    if (isStatement) {\n      node.id = this.parseFunctionId(requireId);\n    }\n\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n    this.state.maybeInArrowParameters = false;\n    this.scope.enter(SCOPE_FUNCTION);\n    this.prodParam.enter(functionFlags(isAsync, node.generator));\n\n    if (!isStatement) {\n      node.id = this.parseFunctionId();\n    }\n\n    this.parseFunctionParams(node, false);\n    this.withTopicForbiddingContext(() => {\n      this.parseFunctionBodyAndFinish(node, isStatement ? \"FunctionDeclaration\" : \"FunctionExpression\");\n    });\n    this.prodParam.exit();\n    this.scope.exit();\n\n    if (isStatement && !isHangingStatement) {\n      this.registerFunctionStatementId(node);\n    }\n\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n    return node;\n  }\n\n  parseFunctionId(requireId) {\n    return requireId || this.match(types.name) ? this.parseIdentifier() : null;\n  }\n\n  parseFunctionParams(node, allowModifiers) {\n    this.expect(types.parenL);\n    this.expressionScope.enter(newParameterDeclarationScope());\n    node.params = this.parseBindingList(types.parenR, 41, false, allowModifiers);\n    this.expressionScope.exit();\n  }\n\n  registerFunctionStatementId(node) {\n    if (!node.id) return;\n    this.scope.declareName(node.id.name, this.state.strict || node.generator || node.async ? this.scope.treatFunctionsAsVar ? BIND_VAR : BIND_LEXICAL : BIND_FUNCTION, node.id.start);\n  }\n\n  parseClass(node, isStatement, optionalId) {\n    this.next();\n    this.takeDecorators(node);\n    const oldStrict = this.state.strict;\n    this.state.strict = true;\n    this.parseClassId(node, isStatement, optionalId);\n    this.parseClassSuper(node);\n    node.body = this.parseClassBody(!!node.superClass, oldStrict);\n    return this.finishNode(node, isStatement ? \"ClassDeclaration\" : \"ClassExpression\");\n  }\n\n  isClassProperty() {\n    return this.match(types.eq) || this.match(types.semi) || this.match(types.braceR);\n  }\n\n  isClassMethod() {\n    return this.match(types.parenL);\n  }\n\n  isNonstaticConstructor(method) {\n    return !method.computed && !method.static && (method.key.name === \"constructor\" || method.key.value === \"constructor\");\n  }\n\n  parseClassBody(constructorAllowsSuper, oldStrict) {\n    this.classScope.enter();\n    const state = {\n      constructorAllowsSuper,\n      hadConstructor: false,\n      hadStaticBlock: false\n    };\n    let decorators = [];\n    const classBody = this.startNode();\n    classBody.body = [];\n    this.expect(types.braceL);\n    this.withTopicForbiddingContext(() => {\n      while (!this.match(types.braceR)) {\n        if (this.eat(types.semi)) {\n          if (decorators.length > 0) {\n            throw this.raise(this.state.lastTokEnd, ErrorMessages.DecoratorSemicolon);\n          }\n\n          continue;\n        }\n\n        if (this.match(types.at)) {\n          decorators.push(this.parseDecorator());\n          continue;\n        }\n\n        const member = this.startNode();\n\n        if (decorators.length) {\n          member.decorators = decorators;\n          this.resetStartLocationFromNode(member, decorators[0]);\n          decorators = [];\n        }\n\n        this.parseClassMember(classBody, member, state);\n\n        if (member.kind === \"constructor\" && member.decorators && member.decorators.length > 0) {\n          this.raise(member.start, ErrorMessages.DecoratorConstructor);\n        }\n      }\n    });\n    this.state.strict = oldStrict;\n    this.next();\n\n    if (decorators.length) {\n      throw this.raise(this.state.start, ErrorMessages.TrailingDecorator);\n    }\n\n    this.classScope.exit();\n    return this.finishNode(classBody, \"ClassBody\");\n  }\n\n  parseClassMemberFromModifier(classBody, member) {\n    const key = this.parseIdentifier(true);\n\n    if (this.isClassMethod()) {\n      const method = member;\n      method.kind = \"method\";\n      method.computed = false;\n      method.key = key;\n      method.static = false;\n      this.pushClassMethod(classBody, method, false, false, false, false);\n      return true;\n    } else if (this.isClassProperty()) {\n      const prop = member;\n      prop.computed = false;\n      prop.key = key;\n      prop.static = false;\n      classBody.body.push(this.parseClassProperty(prop));\n      return true;\n    }\n\n    return false;\n  }\n\n  parseClassMember(classBody, member, state) {\n    const isStatic = this.isContextual(\"static\");\n\n    if (isStatic) {\n      if (this.parseClassMemberFromModifier(classBody, member)) {\n        return;\n      }\n\n      if (this.eat(types.braceL)) {\n        this.parseClassStaticBlock(classBody, member, state);\n        return;\n      }\n    }\n\n    this.parseClassMemberWithIsStatic(classBody, member, state, isStatic);\n  }\n\n  parseClassMemberWithIsStatic(classBody, member, state, isStatic) {\n    const publicMethod = member;\n    const privateMethod = member;\n    const publicProp = member;\n    const privateProp = member;\n    const method = publicMethod;\n    const publicMember = publicMethod;\n    member.static = isStatic;\n\n    if (this.eat(types.star)) {\n      method.kind = \"method\";\n      this.parseClassElementName(method);\n\n      if (this.isPrivateName(method.key)) {\n        this.pushClassPrivateMethod(classBody, privateMethod, true, false);\n        return;\n      }\n\n      if (this.isNonstaticConstructor(publicMethod)) {\n        this.raise(publicMethod.key.start, ErrorMessages.ConstructorIsGenerator);\n      }\n\n      this.pushClassMethod(classBody, publicMethod, true, false, false, false);\n      return;\n    }\n\n    const containsEsc = this.state.containsEsc;\n    const key = this.parseClassElementName(member);\n    const isPrivate = this.isPrivateName(key);\n    const isSimple = key.type === \"Identifier\";\n    const maybeQuestionTokenStart = this.state.start;\n    this.parsePostMemberNameModifiers(publicMember);\n\n    if (this.isClassMethod()) {\n      method.kind = \"method\";\n\n      if (isPrivate) {\n        this.pushClassPrivateMethod(classBody, privateMethod, false, false);\n        return;\n      }\n\n      const isConstructor = this.isNonstaticConstructor(publicMethod);\n      let allowsDirectSuper = false;\n\n      if (isConstructor) {\n        publicMethod.kind = \"constructor\";\n\n        if (state.hadConstructor && !this.hasPlugin(\"typescript\")) {\n          this.raise(key.start, ErrorMessages.DuplicateConstructor);\n        }\n\n        state.hadConstructor = true;\n        allowsDirectSuper = state.constructorAllowsSuper;\n      }\n\n      this.pushClassMethod(classBody, publicMethod, false, false, isConstructor, allowsDirectSuper);\n    } else if (this.isClassProperty()) {\n      if (isPrivate) {\n        this.pushClassPrivateProperty(classBody, privateProp);\n      } else {\n        this.pushClassProperty(classBody, publicProp);\n      }\n    } else if (isSimple && key.name === \"async\" && !containsEsc && !this.isLineTerminator()) {\n      const isGenerator = this.eat(types.star);\n\n      if (publicMember.optional) {\n        this.unexpected(maybeQuestionTokenStart);\n      }\n\n      method.kind = \"method\";\n      this.parseClassElementName(method);\n      this.parsePostMemberNameModifiers(publicMember);\n\n      if (this.isPrivateName(method.key)) {\n        this.pushClassPrivateMethod(classBody, privateMethod, isGenerator, true);\n      } else {\n        if (this.isNonstaticConstructor(publicMethod)) {\n          this.raise(publicMethod.key.start, ErrorMessages.ConstructorIsAsync);\n        }\n\n        this.pushClassMethod(classBody, publicMethod, isGenerator, true, false, false);\n      }\n    } else if (isSimple && (key.name === \"get\" || key.name === \"set\") && !containsEsc && !(this.match(types.star) && this.isLineTerminator())) {\n      method.kind = key.name;\n      this.parseClassElementName(publicMethod);\n\n      if (this.isPrivateName(method.key)) {\n        this.pushClassPrivateMethod(classBody, privateMethod, false, false);\n      } else {\n        if (this.isNonstaticConstructor(publicMethod)) {\n          this.raise(publicMethod.key.start, ErrorMessages.ConstructorIsAccessor);\n        }\n\n        this.pushClassMethod(classBody, publicMethod, false, false, false, false);\n      }\n\n      this.checkGetterSetterParams(publicMethod);\n    } else if (this.isLineTerminator()) {\n      if (isPrivate) {\n        this.pushClassPrivateProperty(classBody, privateProp);\n      } else {\n        this.pushClassProperty(classBody, publicProp);\n      }\n    } else {\n      this.unexpected();\n    }\n  }\n\n  parseClassElementName(member) {\n    const key = this.parsePropertyName(member, true);\n\n    if (!member.computed && member.static && (key.name === \"prototype\" || key.value === \"prototype\")) {\n      this.raise(key.start, ErrorMessages.StaticPrototype);\n    }\n\n    if (this.isPrivateName(key) && this.getPrivateNameSV(key) === \"constructor\") {\n      this.raise(key.start, ErrorMessages.ConstructorClassPrivateField);\n    }\n\n    return key;\n  }\n\n  parseClassStaticBlock(classBody, member, state) {\n    var _member$decorators;\n\n    this.expectPlugin(\"classStaticBlock\", member.start);\n    this.scope.enter(SCOPE_CLASS | SCOPE_STATIC_BLOCK | SCOPE_SUPER);\n    const oldLabels = this.state.labels;\n    this.state.labels = [];\n    this.prodParam.enter(PARAM);\n    const body = member.body = [];\n    this.parseBlockOrModuleBlockBody(body, undefined, false, types.braceR);\n    this.prodParam.exit();\n    this.scope.exit();\n    this.state.labels = oldLabels;\n    classBody.body.push(this.finishNode(member, \"StaticBlock\"));\n\n    if (state.hadStaticBlock) {\n      this.raise(member.start, ErrorMessages.DuplicateStaticBlock);\n    }\n\n    if ((_member$decorators = member.decorators) == null ? void 0 : _member$decorators.length) {\n      this.raise(member.start, ErrorMessages.DecoratorStaticBlock);\n    }\n\n    state.hadStaticBlock = true;\n  }\n\n  pushClassProperty(classBody, prop) {\n    if (!prop.computed && (prop.key.name === \"constructor\" || prop.key.value === \"constructor\")) {\n      this.raise(prop.key.start, ErrorMessages.ConstructorClassField);\n    }\n\n    classBody.body.push(this.parseClassProperty(prop));\n  }\n\n  pushClassPrivateProperty(classBody, prop) {\n    this.expectPlugin(\"classPrivateProperties\", prop.key.start);\n    const node = this.parseClassPrivateProperty(prop);\n    classBody.body.push(node);\n    this.classScope.declarePrivateName(this.getPrivateNameSV(node.key), CLASS_ELEMENT_OTHER, node.key.start);\n  }\n\n  pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper) {\n    classBody.body.push(this.parseMethod(method, isGenerator, isAsync, isConstructor, allowsDirectSuper, \"ClassMethod\", true));\n  }\n\n  pushClassPrivateMethod(classBody, method, isGenerator, isAsync) {\n    this.expectPlugin(\"classPrivateMethods\", method.key.start);\n    const node = this.parseMethod(method, isGenerator, isAsync, false, false, \"ClassPrivateMethod\", true);\n    classBody.body.push(node);\n    const kind = node.kind === \"get\" ? node.static ? CLASS_ELEMENT_STATIC_GETTER : CLASS_ELEMENT_INSTANCE_GETTER : node.kind === \"set\" ? node.static ? CLASS_ELEMENT_STATIC_SETTER : CLASS_ELEMENT_INSTANCE_SETTER : CLASS_ELEMENT_OTHER;\n    this.classScope.declarePrivateName(this.getPrivateNameSV(node.key), kind, node.key.start);\n  }\n\n  parsePostMemberNameModifiers(methodOrProp) {}\n\n  parseClassPrivateProperty(node) {\n    this.parseInitializer(node);\n    this.semicolon();\n    return this.finishNode(node, \"ClassPrivateProperty\");\n  }\n\n  parseClassProperty(node) {\n    if (!node.typeAnnotation || this.match(types.eq)) {\n      this.expectPlugin(\"classProperties\");\n    }\n\n    this.parseInitializer(node);\n    this.semicolon();\n    return this.finishNode(node, \"ClassProperty\");\n  }\n\n  parseInitializer(node) {\n    this.scope.enter(SCOPE_CLASS | SCOPE_SUPER);\n    this.expressionScope.enter(newExpressionScope());\n    this.prodParam.enter(PARAM);\n    node.value = this.eat(types.eq) ? this.parseMaybeAssignAllowIn() : null;\n    this.expressionScope.exit();\n    this.prodParam.exit();\n    this.scope.exit();\n  }\n\n  parseClassId(node, isStatement, optionalId, bindingType = BIND_CLASS) {\n    if (this.match(types.name)) {\n      node.id = this.parseIdentifier();\n\n      if (isStatement) {\n        this.checkLVal(node.id, \"class name\", bindingType);\n      }\n    } else {\n      if (optionalId || !isStatement) {\n        node.id = null;\n      } else {\n        this.unexpected(null, ErrorMessages.MissingClassName);\n      }\n    }\n  }\n\n  parseClassSuper(node) {\n    node.superClass = this.eat(types._extends) ? this.parseExprSubscripts() : null;\n  }\n\n  parseExport(node) {\n    const hasDefault = this.maybeParseExportDefaultSpecifier(node);\n    const parseAfterDefault = !hasDefault || this.eat(types.comma);\n    const hasStar = parseAfterDefault && this.eatExportStar(node);\n    const hasNamespace = hasStar && this.maybeParseExportNamespaceSpecifier(node);\n    const parseAfterNamespace = parseAfterDefault && (!hasNamespace || this.eat(types.comma));\n    const isFromRequired = hasDefault || hasStar;\n\n    if (hasStar && !hasNamespace) {\n      if (hasDefault) this.unexpected();\n      this.parseExportFrom(node, true);\n      return this.finishNode(node, \"ExportAllDeclaration\");\n    }\n\n    const hasSpecifiers = this.maybeParseExportNamedSpecifiers(node);\n\n    if (hasDefault && parseAfterDefault && !hasStar && !hasSpecifiers || hasNamespace && parseAfterNamespace && !hasSpecifiers) {\n      throw this.unexpected(null, types.braceL);\n    }\n\n    let hasDeclaration;\n\n    if (isFromRequired || hasSpecifiers) {\n      hasDeclaration = false;\n      this.parseExportFrom(node, isFromRequired);\n    } else {\n      hasDeclaration = this.maybeParseExportDeclaration(node);\n    }\n\n    if (isFromRequired || hasSpecifiers || hasDeclaration) {\n      this.checkExport(node, true, false, !!node.source);\n      return this.finishNode(node, \"ExportNamedDeclaration\");\n    }\n\n    if (this.eat(types._default)) {\n      node.declaration = this.parseExportDefaultExpression();\n      this.checkExport(node, true, true);\n      return this.finishNode(node, \"ExportDefaultDeclaration\");\n    }\n\n    throw this.unexpected(null, types.braceL);\n  }\n\n  eatExportStar(node) {\n    return this.eat(types.star);\n  }\n\n  maybeParseExportDefaultSpecifier(node) {\n    if (this.isExportDefaultSpecifier()) {\n      this.expectPlugin(\"exportDefaultFrom\");\n      const specifier = this.startNode();\n      specifier.exported = this.parseIdentifier(true);\n      node.specifiers = [this.finishNode(specifier, \"ExportDefaultSpecifier\")];\n      return true;\n    }\n\n    return false;\n  }\n\n  maybeParseExportNamespaceSpecifier(node) {\n    if (this.isContextual(\"as\")) {\n      if (!node.specifiers) node.specifiers = [];\n      const specifier = this.startNodeAt(this.state.lastTokStart, this.state.lastTokStartLoc);\n      this.next();\n      specifier.exported = this.parseModuleExportName();\n      node.specifiers.push(this.finishNode(specifier, \"ExportNamespaceSpecifier\"));\n      return true;\n    }\n\n    return false;\n  }\n\n  maybeParseExportNamedSpecifiers(node) {\n    if (this.match(types.braceL)) {\n      if (!node.specifiers) node.specifiers = [];\n      node.specifiers.push(...this.parseExportSpecifiers());\n      node.source = null;\n      node.declaration = null;\n      return true;\n    }\n\n    return false;\n  }\n\n  maybeParseExportDeclaration(node) {\n    if (this.shouldParseExportDeclaration()) {\n      node.specifiers = [];\n      node.source = null;\n      node.declaration = this.parseExportDeclaration(node);\n      return true;\n    }\n\n    return false;\n  }\n\n  isAsyncFunction() {\n    if (!this.isContextual(\"async\")) return false;\n    const next = this.nextTokenStart();\n    return !lineBreak.test(this.input.slice(this.state.pos, next)) && this.isUnparsedContextual(next, \"function\");\n  }\n\n  parseExportDefaultExpression() {\n    const expr = this.startNode();\n    const isAsync = this.isAsyncFunction();\n\n    if (this.match(types._function) || isAsync) {\n      this.next();\n\n      if (isAsync) {\n        this.next();\n      }\n\n      return this.parseFunction(expr, FUNC_STATEMENT | FUNC_NULLABLE_ID, isAsync);\n    } else if (this.match(types._class)) {\n      return this.parseClass(expr, true, true);\n    } else if (this.match(types.at)) {\n      if (this.hasPlugin(\"decorators\") && this.getPluginOption(\"decorators\", \"decoratorsBeforeExport\")) {\n        this.raise(this.state.start, ErrorMessages.DecoratorBeforeExport);\n      }\n\n      this.parseDecorators(false);\n      return this.parseClass(expr, true, true);\n    } else if (this.match(types._const) || this.match(types._var) || this.isLet()) {\n      throw this.raise(this.state.start, ErrorMessages.UnsupportedDefaultExport);\n    } else {\n      const res = this.parseMaybeAssignAllowIn();\n      this.semicolon();\n      return res;\n    }\n  }\n\n  parseExportDeclaration(node) {\n    return this.parseStatement(null);\n  }\n\n  isExportDefaultSpecifier() {\n    if (this.match(types.name)) {\n      const value = this.state.value;\n\n      if (value === \"async\" && !this.state.containsEsc || value === \"let\") {\n        return false;\n      }\n\n      if ((value === \"type\" || value === \"interface\") && !this.state.containsEsc) {\n        const l = this.lookahead();\n\n        if (l.type === types.name && l.value !== \"from\" || l.type === types.braceL) {\n          this.expectOnePlugin([\"flow\", \"typescript\"]);\n          return false;\n        }\n      }\n    } else if (!this.match(types._default)) {\n      return false;\n    }\n\n    const next = this.nextTokenStart();\n    const hasFrom = this.isUnparsedContextual(next, \"from\");\n\n    if (this.input.charCodeAt(next) === 44 || this.match(types.name) && hasFrom) {\n      return true;\n    }\n\n    if (this.match(types._default) && hasFrom) {\n      const nextAfterFrom = this.input.charCodeAt(this.nextTokenStartSince(next + 4));\n      return nextAfterFrom === 34 || nextAfterFrom === 39;\n    }\n\n    return false;\n  }\n\n  parseExportFrom(node, expect) {\n    if (this.eatContextual(\"from\")) {\n      node.source = this.parseImportSource();\n      this.checkExport(node);\n      const assertions = this.maybeParseImportAssertions();\n\n      if (assertions) {\n        node.assertions = assertions;\n      }\n    } else {\n      if (expect) {\n        this.unexpected();\n      } else {\n        node.source = null;\n      }\n    }\n\n    this.semicolon();\n  }\n\n  shouldParseExportDeclaration() {\n    if (this.match(types.at)) {\n      this.expectOnePlugin([\"decorators\", \"decorators-legacy\"]);\n\n      if (this.hasPlugin(\"decorators\")) {\n        if (this.getPluginOption(\"decorators\", \"decoratorsBeforeExport\")) {\n          this.unexpected(this.state.start, ErrorMessages.DecoratorBeforeExport);\n        } else {\n          return true;\n        }\n      }\n    }\n\n    return this.state.type.keyword === \"var\" || this.state.type.keyword === \"const\" || this.state.type.keyword === \"function\" || this.state.type.keyword === \"class\" || this.isLet() || this.isAsyncFunction();\n  }\n\n  checkExport(node, checkNames, isDefault, isFrom) {\n    if (checkNames) {\n      if (isDefault) {\n        this.checkDuplicateExports(node, \"default\");\n\n        if (this.hasPlugin(\"exportDefaultFrom\")) {\n          var _declaration$extra;\n\n          const declaration = node.declaration;\n\n          if (declaration.type === \"Identifier\" && declaration.name === \"from\" && declaration.end - declaration.start === 4 && !((_declaration$extra = declaration.extra) == null ? void 0 : _declaration$extra.parenthesized)) {\n            this.raise(declaration.start, ErrorMessages.ExportDefaultFromAsIdentifier);\n          }\n        }\n      } else if (node.specifiers && node.specifiers.length) {\n        for (let _i3 = 0, _node$specifiers = node.specifiers; _i3 < _node$specifiers.length; _i3++) {\n          const specifier = _node$specifiers[_i3];\n          const {\n            exported\n          } = specifier;\n          const exportedName = exported.type === \"Identifier\" ? exported.name : exported.value;\n          this.checkDuplicateExports(specifier, exportedName);\n\n          if (!isFrom && specifier.local) {\n            const {\n              local\n            } = specifier;\n\n            if (local.type === \"StringLiteral\") {\n              this.raise(specifier.start, ErrorMessages.ExportBindingIsString, local.value, exportedName);\n            } else {\n              this.checkReservedWord(local.name, local.start, true, false);\n              this.scope.checkLocalExport(local);\n            }\n          }\n        }\n      } else if (node.declaration) {\n        if (node.declaration.type === \"FunctionDeclaration\" || node.declaration.type === \"ClassDeclaration\") {\n          const id = node.declaration.id;\n          if (!id) throw new Error(\"Assertion failure\");\n          this.checkDuplicateExports(node, id.name);\n        } else if (node.declaration.type === \"VariableDeclaration\") {\n          for (let _i4 = 0, _node$declaration$dec = node.declaration.declarations; _i4 < _node$declaration$dec.length; _i4++) {\n            const declaration = _node$declaration$dec[_i4];\n            this.checkDeclaration(declaration.id);\n          }\n        }\n      }\n    }\n\n    const currentContextDecorators = this.state.decoratorStack[this.state.decoratorStack.length - 1];\n\n    if (currentContextDecorators.length) {\n      throw this.raise(node.start, ErrorMessages.UnsupportedDecoratorExport);\n    }\n  }\n\n  checkDeclaration(node) {\n    if (node.type === \"Identifier\") {\n      this.checkDuplicateExports(node, node.name);\n    } else if (node.type === \"ObjectPattern\") {\n      for (let _i5 = 0, _node$properties = node.properties; _i5 < _node$properties.length; _i5++) {\n        const prop = _node$properties[_i5];\n        this.checkDeclaration(prop);\n      }\n    } else if (node.type === \"ArrayPattern\") {\n      for (let _i6 = 0, _node$elements = node.elements; _i6 < _node$elements.length; _i6++) {\n        const elem = _node$elements[_i6];\n\n        if (elem) {\n          this.checkDeclaration(elem);\n        }\n      }\n    } else if (node.type === \"ObjectProperty\") {\n      this.checkDeclaration(node.value);\n    } else if (node.type === \"RestElement\") {\n      this.checkDeclaration(node.argument);\n    } else if (node.type === \"AssignmentPattern\") {\n      this.checkDeclaration(node.left);\n    }\n  }\n\n  checkDuplicateExports(node, name) {\n    if (this.state.exportedIdentifiers.indexOf(name) > -1) {\n      this.raise(node.start, name === \"default\" ? ErrorMessages.DuplicateDefaultExport : ErrorMessages.DuplicateExport, name);\n    }\n\n    this.state.exportedIdentifiers.push(name);\n  }\n\n  parseExportSpecifiers() {\n    const nodes = [];\n    let first = true;\n    this.expect(types.braceL);\n\n    while (!this.eat(types.braceR)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(types.comma);\n        if (this.eat(types.braceR)) break;\n      }\n\n      const node = this.startNode();\n      node.local = this.parseModuleExportName();\n      node.exported = this.eatContextual(\"as\") ? this.parseModuleExportName() : node.local.__clone();\n      nodes.push(this.finishNode(node, \"ExportSpecifier\"));\n    }\n\n    return nodes;\n  }\n\n  parseModuleExportName() {\n    if (this.match(types.string)) {\n      this.expectPlugin(\"moduleStringNames\");\n      const result = this.parseLiteral(this.state.value, \"StringLiteral\");\n      const surrogate = result.value.match(loneSurrogate);\n\n      if (surrogate) {\n        this.raise(result.start, ErrorMessages.ModuleExportNameHasLoneSurrogate, surrogate[0].charCodeAt(0).toString(16));\n      }\n\n      return result;\n    }\n\n    return this.parseIdentifier(true);\n  }\n\n  parseImport(node) {\n    node.specifiers = [];\n\n    if (!this.match(types.string)) {\n      const hasDefault = this.maybeParseDefaultImportSpecifier(node);\n      const parseNext = !hasDefault || this.eat(types.comma);\n      const hasStar = parseNext && this.maybeParseStarImportSpecifier(node);\n      if (parseNext && !hasStar) this.parseNamedImportSpecifiers(node);\n      this.expectContextual(\"from\");\n    }\n\n    node.source = this.parseImportSource();\n    const assertions = this.maybeParseImportAssertions();\n\n    if (assertions) {\n      node.assertions = assertions;\n    } else {\n        const attributes = this.maybeParseModuleAttributes();\n\n        if (attributes) {\n          node.attributes = attributes;\n        }\n      }\n\n    this.semicolon();\n    return this.finishNode(node, \"ImportDeclaration\");\n  }\n\n  parseImportSource() {\n    if (!this.match(types.string)) this.unexpected();\n    return this.parseExprAtom();\n  }\n\n  shouldParseDefaultImport(node) {\n    return this.match(types.name);\n  }\n\n  parseImportSpecifierLocal(node, specifier, type, contextDescription) {\n    specifier.local = this.parseIdentifier();\n    this.checkLVal(specifier.local, contextDescription, BIND_LEXICAL);\n    node.specifiers.push(this.finishNode(specifier, type));\n  }\n\n  parseAssertEntries() {\n    const attrs = [];\n    const attrNames = new Set();\n\n    do {\n      if (this.match(types.braceR)) {\n        break;\n      }\n\n      const node = this.startNode();\n      const keyName = this.state.value;\n\n      if (this.match(types.string)) {\n        node.key = this.parseLiteral(keyName, \"StringLiteral\");\n      } else {\n        node.key = this.parseIdentifier(true);\n      }\n\n      this.expect(types.colon);\n\n      if (keyName !== \"type\") {\n        this.raise(node.key.start, ErrorMessages.ModuleAttributeDifferentFromType, keyName);\n      }\n\n      if (attrNames.has(keyName)) {\n        this.raise(node.key.start, ErrorMessages.ModuleAttributesWithDuplicateKeys, keyName);\n      }\n\n      attrNames.add(keyName);\n\n      if (!this.match(types.string)) {\n        throw this.unexpected(this.state.start, ErrorMessages.ModuleAttributeInvalidValue);\n      }\n\n      node.value = this.parseLiteral(this.state.value, \"StringLiteral\");\n      this.finishNode(node, \"ImportAttribute\");\n      attrs.push(node);\n    } while (this.eat(types.comma));\n\n    return attrs;\n  }\n\n  maybeParseModuleAttributes() {\n    if (this.match(types._with) && !this.hasPrecedingLineBreak()) {\n      this.expectPlugin(\"moduleAttributes\");\n      this.next();\n    } else {\n      if (this.hasPlugin(\"moduleAttributes\")) return [];\n      return null;\n    }\n\n    const attrs = [];\n    const attributes = new Set();\n\n    do {\n      const node = this.startNode();\n      node.key = this.parseIdentifier(true);\n\n      if (node.key.name !== \"type\") {\n        this.raise(node.key.start, ErrorMessages.ModuleAttributeDifferentFromType, node.key.name);\n      }\n\n      if (attributes.has(node.key.name)) {\n        this.raise(node.key.start, ErrorMessages.ModuleAttributesWithDuplicateKeys, node.key.name);\n      }\n\n      attributes.add(node.key.name);\n      this.expect(types.colon);\n\n      if (!this.match(types.string)) {\n        throw this.unexpected(this.state.start, ErrorMessages.ModuleAttributeInvalidValue);\n      }\n\n      node.value = this.parseLiteral(this.state.value, \"StringLiteral\");\n      this.finishNode(node, \"ImportAttribute\");\n      attrs.push(node);\n    } while (this.eat(types.comma));\n\n    return attrs;\n  }\n\n  maybeParseImportAssertions() {\n    if (this.isContextual(\"assert\") && !this.hasPrecedingLineBreak()) {\n      this.expectPlugin(\"importAssertions\");\n      this.next();\n    } else {\n      if (this.hasPlugin(\"importAssertions\")) return [];\n      return null;\n    }\n\n    this.eat(types.braceL);\n    const attrs = this.parseAssertEntries();\n    this.eat(types.braceR);\n    return attrs;\n  }\n\n  maybeParseDefaultImportSpecifier(node) {\n    if (this.shouldParseDefaultImport(node)) {\n      this.parseImportSpecifierLocal(node, this.startNode(), \"ImportDefaultSpecifier\", \"default import specifier\");\n      return true;\n    }\n\n    return false;\n  }\n\n  maybeParseStarImportSpecifier(node) {\n    if (this.match(types.star)) {\n      const specifier = this.startNode();\n      this.next();\n      this.expectContextual(\"as\");\n      this.parseImportSpecifierLocal(node, specifier, \"ImportNamespaceSpecifier\", \"import namespace specifier\");\n      return true;\n    }\n\n    return false;\n  }\n\n  parseNamedImportSpecifiers(node) {\n    let first = true;\n    this.expect(types.braceL);\n\n    while (!this.eat(types.braceR)) {\n      if (first) {\n        first = false;\n      } else {\n        if (this.eat(types.colon)) {\n          throw this.raise(this.state.start, ErrorMessages.DestructureNamedImport);\n        }\n\n        this.expect(types.comma);\n        if (this.eat(types.braceR)) break;\n      }\n\n      this.parseImportSpecifier(node);\n    }\n  }\n\n  parseImportSpecifier(node) {\n    const specifier = this.startNode();\n    specifier.imported = this.parseModuleExportName();\n\n    if (this.eatContextual(\"as\")) {\n      specifier.local = this.parseIdentifier();\n    } else {\n      const {\n        imported\n      } = specifier;\n\n      if (imported.type === \"StringLiteral\") {\n        throw this.raise(specifier.start, ErrorMessages.ImportBindingIsString, imported.value);\n      }\n\n      this.checkReservedWord(imported.name, specifier.start, true, true);\n      specifier.local = imported.__clone();\n    }\n\n    this.checkLVal(specifier.local, \"import specifier\", BIND_LEXICAL);\n    node.specifiers.push(this.finishNode(specifier, \"ImportSpecifier\"));\n  }\n\n}\n\nclass ClassScope {\n  constructor() {\n    this.privateNames = new Set();\n    this.loneAccessors = new Map();\n    this.undefinedPrivateNames = new Map();\n  }\n\n}\nclass ClassScopeHandler {\n  constructor(raise) {\n    this.stack = [];\n    this.undefinedPrivateNames = new Map();\n    this.raise = raise;\n  }\n\n  current() {\n    return this.stack[this.stack.length - 1];\n  }\n\n  enter() {\n    this.stack.push(new ClassScope());\n  }\n\n  exit() {\n    const oldClassScope = this.stack.pop();\n    const current = this.current();\n\n    for (let _i = 0, _Array$from = Array.from(oldClassScope.undefinedPrivateNames); _i < _Array$from.length; _i++) {\n      const [name, pos] = _Array$from[_i];\n\n      if (current) {\n        if (!current.undefinedPrivateNames.has(name)) {\n          current.undefinedPrivateNames.set(name, pos);\n        }\n      } else {\n        this.raise(pos, ErrorMessages.InvalidPrivateFieldResolution, name);\n      }\n    }\n  }\n\n  declarePrivateName(name, elementType, pos) {\n    const classScope = this.current();\n    let redefined = classScope.privateNames.has(name);\n\n    if (elementType & CLASS_ELEMENT_KIND_ACCESSOR) {\n      const accessor = redefined && classScope.loneAccessors.get(name);\n\n      if (accessor) {\n        const oldStatic = accessor & CLASS_ELEMENT_FLAG_STATIC;\n        const newStatic = elementType & CLASS_ELEMENT_FLAG_STATIC;\n        const oldKind = accessor & CLASS_ELEMENT_KIND_ACCESSOR;\n        const newKind = elementType & CLASS_ELEMENT_KIND_ACCESSOR;\n        redefined = oldKind === newKind || oldStatic !== newStatic;\n        if (!redefined) classScope.loneAccessors.delete(name);\n      } else if (!redefined) {\n        classScope.loneAccessors.set(name, elementType);\n      }\n    }\n\n    if (redefined) {\n      this.raise(pos, ErrorMessages.PrivateNameRedeclaration, name);\n    }\n\n    classScope.privateNames.add(name);\n    classScope.undefinedPrivateNames.delete(name);\n  }\n\n  usePrivateName(name, pos) {\n    let classScope;\n\n    for (let _i2 = 0, _this$stack = this.stack; _i2 < _this$stack.length; _i2++) {\n      classScope = _this$stack[_i2];\n      if (classScope.privateNames.has(name)) return;\n    }\n\n    if (classScope) {\n      classScope.undefinedPrivateNames.set(name, pos);\n    } else {\n      this.raise(pos, ErrorMessages.InvalidPrivateFieldResolution, name);\n    }\n  }\n\n}\n\nclass Parser extends StatementParser {\n  constructor(options, input) {\n    options = getOptions(options);\n    super(options, input);\n    const ScopeHandler = this.getScopeHandler();\n    this.options = options;\n    this.inModule = this.options.sourceType === \"module\";\n    this.scope = new ScopeHandler(this.raise.bind(this), this.inModule);\n    this.prodParam = new ProductionParameterHandler();\n    this.classScope = new ClassScopeHandler(this.raise.bind(this));\n    this.expressionScope = new ExpressionScopeHandler(this.raise.bind(this));\n    this.plugins = pluginsMap(this.options.plugins);\n    this.filename = options.sourceFilename;\n  }\n\n  getScopeHandler() {\n    return ScopeHandler;\n  }\n\n  parse() {\n    let paramFlags = PARAM;\n\n    if (this.hasPlugin(\"topLevelAwait\") && this.inModule) {\n      paramFlags |= PARAM_AWAIT;\n    }\n\n    this.scope.enter(SCOPE_PROGRAM);\n    this.prodParam.enter(paramFlags);\n    const file = this.startNode();\n    const program = this.startNode();\n    this.nextToken();\n    file.errors = null;\n    this.parseTopLevel(file, program);\n    file.errors = this.state.errors;\n    return file;\n  }\n\n}\n\nfunction pluginsMap(plugins) {\n  const pluginMap = new Map();\n\n  for (let _i = 0; _i < plugins.length; _i++) {\n    const plugin = plugins[_i];\n    const [name, options] = Array.isArray(plugin) ? plugin : [plugin, {}];\n    if (!pluginMap.has(name)) pluginMap.set(name, options || {});\n  }\n\n  return pluginMap;\n}\n\nfunction parse(input, options) {\n  var _options;\n\n  if (((_options = options) == null ? void 0 : _options.sourceType) === \"unambiguous\") {\n    options = Object.assign({}, options);\n\n    try {\n      options.sourceType = \"module\";\n      const parser = getParser(options, input);\n      const ast = parser.parse();\n\n      if (parser.sawUnambiguousESM) {\n        return ast;\n      }\n\n      if (parser.ambiguousScriptDifferentAst) {\n        try {\n          options.sourceType = \"script\";\n          return getParser(options, input).parse();\n        } catch (_unused) {}\n      } else {\n        ast.program.sourceType = \"script\";\n      }\n\n      return ast;\n    } catch (moduleError) {\n      try {\n        options.sourceType = \"script\";\n        return getParser(options, input).parse();\n      } catch (_unused2) {}\n\n      throw moduleError;\n    }\n  } else {\n    return getParser(options, input).parse();\n  }\n}\nfunction parseExpression(input, options) {\n  const parser = getParser(options, input);\n\n  if (parser.options.strictMode) {\n    parser.state.strict = true;\n  }\n\n  return parser.getExpression();\n}\n\nfunction getParser(options, input) {\n  let cls = Parser;\n\n  if (options == null ? void 0 : options.plugins) {\n    validatePlugins(options.plugins);\n    cls = getParserClass(options.plugins);\n  }\n\n  return new cls(options, input);\n}\n\nconst parserClassCache = {};\n\nfunction getParserClass(pluginsFromOptions) {\n  const pluginList = mixinPluginNames.filter(name => hasPlugin(pluginsFromOptions, name));\n  const key = pluginList.join(\"/\");\n  let cls = parserClassCache[key];\n\n  if (!cls) {\n    cls = Parser;\n\n    for (let _i = 0; _i < pluginList.length; _i++) {\n      const plugin = pluginList[_i];\n      cls = mixinPlugins[plugin](cls);\n    }\n\n    parserClassCache[key] = cls;\n  }\n\n  return cls;\n}\n\nexports.parse = parse;\nexports.parseExpression = parseExpression;\nexports.tokTypes = types;\n//# sourceMappingURL=index.js.map\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.codeFrameColumns = codeFrameColumns;\nexports.default = _default;\n\nvar _highlight = _interopRequireWildcard(require(\"@babel/highlight\"));\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nlet deprecationWarningShown = false;\n\nfunction getDefs(chalk) {\n  return {\n    gutter: chalk.grey,\n    marker: chalk.red.bold,\n    message: chalk.red.bold\n  };\n}\n\nconst NEWLINE = /\\r\\n|[\\n\\r\\u2028\\u2029]/;\n\nfunction getMarkerLines(loc, source, opts) {\n  const startLoc = Object.assign({\n    column: 0,\n    line: -1\n  }, loc.start);\n  const endLoc = Object.assign({}, startLoc, loc.end);\n  const {\n    linesAbove = 2,\n    linesBelow = 3\n  } = opts || {};\n  const startLine = startLoc.line;\n  const startColumn = startLoc.column;\n  const endLine = endLoc.line;\n  const endColumn = endLoc.column;\n  let start = Math.max(startLine - (linesAbove + 1), 0);\n  let end = Math.min(source.length, endLine + linesBelow);\n\n  if (startLine === -1) {\n    start = 0;\n  }\n\n  if (endLine === -1) {\n    end = source.length;\n  }\n\n  const lineDiff = endLine - startLine;\n  const markerLines = {};\n\n  if (lineDiff) {\n    for (let i = 0; i <= lineDiff; i++) {\n      const lineNumber = i + startLine;\n\n      if (!startColumn) {\n        markerLines[lineNumber] = true;\n      } else if (i === 0) {\n        const sourceLength = source[lineNumber - 1].length;\n        markerLines[lineNumber] = [startColumn, sourceLength - startColumn + 1];\n      } else if (i === lineDiff) {\n        markerLines[lineNumber] = [0, endColumn];\n      } else {\n        const sourceLength = source[lineNumber - i].length;\n        markerLines[lineNumber] = [0, sourceLength];\n      }\n    }\n  } else {\n    if (startColumn === endColumn) {\n      if (startColumn) {\n        markerLines[startLine] = [startColumn, 0];\n      } else {\n        markerLines[startLine] = true;\n      }\n    } else {\n      markerLines[startLine] = [startColumn, endColumn - startColumn];\n    }\n  }\n\n  return {\n    start,\n    end,\n    markerLines\n  };\n}\n\nfunction codeFrameColumns(rawLines, loc, opts = {}) {\n  const highlighted = (opts.highlightCode || opts.forceColor) && (0, _highlight.shouldHighlight)(opts);\n  const chalk = (0, _highlight.getChalk)(opts);\n  const defs = getDefs(chalk);\n\n  const maybeHighlight = (chalkFn, string) => {\n    return highlighted ? chalkFn(string) : string;\n  };\n\n  const lines = rawLines.split(NEWLINE);\n  const {\n    start,\n    end,\n    markerLines\n  } = getMarkerLines(loc, lines, opts);\n  const hasColumns = loc.start && typeof loc.start.column === \"number\";\n  const numberMaxWidth = String(end).length;\n  const highlightedLines = highlighted ? (0, _highlight.default)(rawLines, opts) : rawLines;\n  let frame = highlightedLines.split(NEWLINE).slice(start, end).map((line, index) => {\n    const number = start + 1 + index;\n    const paddedNumber = ` ${number}`.slice(-numberMaxWidth);\n    const gutter = ` ${paddedNumber} |`;\n    const hasMarker = markerLines[number];\n    const lastMarkerLine = !markerLines[number + 1];\n\n    if (hasMarker) {\n      let markerLine = \"\";\n\n      if (Array.isArray(hasMarker)) {\n        const markerSpacing = line.slice(0, Math.max(hasMarker[0] - 1, 0)).replace(/[^\\t]/g, \" \");\n        const numberOfMarkers = hasMarker[1] || 1;\n        markerLine = [\"\\n \", maybeHighlight(defs.gutter, gutter.replace(/\\d/g, \" \")), \" \", markerSpacing, maybeHighlight(defs.marker, \"^\").repeat(numberOfMarkers)].join(\"\");\n\n        if (lastMarkerLine && opts.message) {\n          markerLine += \" \" + maybeHighlight(defs.message, opts.message);\n        }\n      }\n\n      return [maybeHighlight(defs.marker, \">\"), maybeHighlight(defs.gutter, gutter), line.length > 0 ? ` ${line}` : \"\", markerLine].join(\"\");\n    } else {\n      return ` ${maybeHighlight(defs.gutter, gutter)}${line.length > 0 ? ` ${line}` : \"\"}`;\n    }\n  }).join(\"\\n\");\n\n  if (opts.message && !hasColumns) {\n    frame = `${\" \".repeat(numberMaxWidth + 1)}${opts.message}\\n${frame}`;\n  }\n\n  if (highlighted) {\n    return chalk.reset(frame);\n  } else {\n    return frame;\n  }\n}\n\nfunction _default(rawLines, lineNumber, colNumber, opts = {}) {\n  if (!deprecationWarningShown) {\n    deprecationWarningShown = true;\n    const message = \"Passing lineNumber and colNumber is deprecated to @babel/code-frame. Please use `codeFrameColumns`.\";\n\n    if (process.emitWarning) {\n      process.emitWarning(message, \"DeprecationWarning\");\n    } else {\n      const deprecationError = new Error(message);\n      deprecationError.name = \"DeprecationWarning\";\n      console.warn(new Error(message));\n    }\n  }\n\n  colNumber = Math.max(colNumber, 0);\n  const location = {\n    start: {\n      column: colNumber,\n      line: lineNumber\n    }\n  };\n  return codeFrameColumns(rawLines, location, opts);\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.merge = merge;\nexports.validate = validate;\nexports.normalizeReplacements = normalizeReplacements;\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction merge(a, b) {\n  const {\n    placeholderWhitelist = a.placeholderWhitelist,\n    placeholderPattern = a.placeholderPattern,\n    preserveComments = a.preserveComments,\n    syntacticPlaceholders = a.syntacticPlaceholders\n  } = b;\n  return {\n    parser: Object.assign({}, a.parser, b.parser),\n    placeholderWhitelist,\n    placeholderPattern,\n    preserveComments,\n    syntacticPlaceholders\n  };\n}\n\nfunction validate(opts) {\n  if (opts != null && typeof opts !== \"object\") {\n    throw new Error(\"Unknown template options.\");\n  }\n\n  const _ref = opts || {},\n        {\n    placeholderWhitelist,\n    placeholderPattern,\n    preserveComments,\n    syntacticPlaceholders\n  } = _ref,\n        parser = _objectWithoutPropertiesLoose(_ref, [\"placeholderWhitelist\", \"placeholderPattern\", \"preserveComments\", \"syntacticPlaceholders\"]);\n\n  if (placeholderWhitelist != null && !(placeholderWhitelist instanceof Set)) {\n    throw new Error(\"'.placeholderWhitelist' must be a Set, null, or undefined\");\n  }\n\n  if (placeholderPattern != null && !(placeholderPattern instanceof RegExp) && placeholderPattern !== false) {\n    throw new Error(\"'.placeholderPattern' must be a RegExp, false, null, or undefined\");\n  }\n\n  if (preserveComments != null && typeof preserveComments !== \"boolean\") {\n    throw new Error(\"'.preserveComments' must be a boolean, null, or undefined\");\n  }\n\n  if (syntacticPlaceholders != null && typeof syntacticPlaceholders !== \"boolean\") {\n    throw new Error(\"'.syntacticPlaceholders' must be a boolean, null, or undefined\");\n  }\n\n  if (syntacticPlaceholders === true && (placeholderWhitelist != null || placeholderPattern != null)) {\n    throw new Error(\"'.placeholderWhitelist' and '.placeholderPattern' aren't compatible\" + \" with '.syntacticPlaceholders: true'\");\n  }\n\n  return {\n    parser,\n    placeholderWhitelist: placeholderWhitelist || undefined,\n    placeholderPattern: placeholderPattern == null ? undefined : placeholderPattern,\n    preserveComments: preserveComments == null ? undefined : preserveComments,\n    syntacticPlaceholders: syntacticPlaceholders == null ? undefined : syntacticPlaceholders\n  };\n}\n\nfunction normalizeReplacements(replacements) {\n  if (Array.isArray(replacements)) {\n    return replacements.reduce((acc, replacement, i) => {\n      acc[\"$\" + i] = replacement;\n      return acc;\n    }, {});\n  } else if (typeof replacements === \"object\" || replacements == null) {\n    return replacements || undefined;\n  }\n\n  throw new Error(\"Template replacements must be an array, object, null, or undefined\");\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = parseAndBuildMetadata;\n\nvar t = _interopRequireWildcard(require(\"@babel/types\"));\n\nvar _parser = require(\"@babel/parser\");\n\nvar _codeFrame = require(\"@babel/code-frame\");\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nconst PATTERN = /^[_$A-Z0-9]+$/;\n\nfunction parseAndBuildMetadata(formatter, code, opts) {\n  const {\n    placeholderWhitelist,\n    placeholderPattern,\n    preserveComments,\n    syntacticPlaceholders\n  } = opts;\n  const ast = parseWithCodeFrame(code, opts.parser, syntacticPlaceholders);\n  t.removePropertiesDeep(ast, {\n    preserveComments\n  });\n  formatter.validate(ast);\n  const syntactic = {\n    placeholders: [],\n    placeholderNames: new Set()\n  };\n  const legacy = {\n    placeholders: [],\n    placeholderNames: new Set()\n  };\n  const isLegacyRef = {\n    value: undefined\n  };\n  t.traverse(ast, placeholderVisitorHandler, {\n    syntactic,\n    legacy,\n    isLegacyRef,\n    placeholderWhitelist,\n    placeholderPattern,\n    syntacticPlaceholders\n  });\n  return Object.assign({\n    ast\n  }, isLegacyRef.value ? legacy : syntactic);\n}\n\nfunction placeholderVisitorHandler(node, ancestors, state) {\n  var _state$placeholderWhi;\n\n  let name;\n\n  if (t.isPlaceholder(node)) {\n    if (state.syntacticPlaceholders === false) {\n      throw new Error(\"%%foo%%-style placeholders can't be used when \" + \"'.syntacticPlaceholders' is false.\");\n    } else {\n      name = node.name.name;\n      state.isLegacyRef.value = false;\n    }\n  } else if (state.isLegacyRef.value === false || state.syntacticPlaceholders) {\n    return;\n  } else if (t.isIdentifier(node) || t.isJSXIdentifier(node)) {\n    name = node.name;\n    state.isLegacyRef.value = true;\n  } else if (t.isStringLiteral(node)) {\n    name = node.value;\n    state.isLegacyRef.value = true;\n  } else {\n    return;\n  }\n\n  if (!state.isLegacyRef.value && (state.placeholderPattern != null || state.placeholderWhitelist != null)) {\n    throw new Error(\"'.placeholderWhitelist' and '.placeholderPattern' aren't compatible\" + \" with '.syntacticPlaceholders: true'\");\n  }\n\n  if (state.isLegacyRef.value && (state.placeholderPattern === false || !(state.placeholderPattern || PATTERN).test(name)) && !((_state$placeholderWhi = state.placeholderWhitelist) == null ? void 0 : _state$placeholderWhi.has(name))) {\n    return;\n  }\n\n  ancestors = ancestors.slice();\n  const {\n    node: parent,\n    key\n  } = ancestors[ancestors.length - 1];\n  let type;\n\n  if (t.isStringLiteral(node) || t.isPlaceholder(node, {\n    expectedNode: \"StringLiteral\"\n  })) {\n    type = \"string\";\n  } else if (t.isNewExpression(parent) && key === \"arguments\" || t.isCallExpression(parent) && key === \"arguments\" || t.isFunction(parent) && key === \"params\") {\n    type = \"param\";\n  } else if (t.isExpressionStatement(parent) && !t.isPlaceholder(node)) {\n    type = \"statement\";\n    ancestors = ancestors.slice(0, -1);\n  } else if (t.isStatement(node) && t.isPlaceholder(node)) {\n    type = \"statement\";\n  } else {\n    type = \"other\";\n  }\n\n  const {\n    placeholders,\n    placeholderNames\n  } = state.isLegacyRef.value ? state.legacy : state.syntactic;\n  placeholders.push({\n    name,\n    type,\n    resolve: ast => resolveAncestors(ast, ancestors),\n    isDuplicate: placeholderNames.has(name)\n  });\n  placeholderNames.add(name);\n}\n\nfunction resolveAncestors(ast, ancestors) {\n  let parent = ast;\n\n  for (let i = 0; i < ancestors.length - 1; i++) {\n    const {\n      key,\n      index\n    } = ancestors[i];\n\n    if (index === undefined) {\n      parent = parent[key];\n    } else {\n      parent = parent[key][index];\n    }\n  }\n\n  const {\n    key,\n    index\n  } = ancestors[ancestors.length - 1];\n  return {\n    parent,\n    key,\n    index\n  };\n}\n\nfunction parseWithCodeFrame(code, parserOpts, syntacticPlaceholders) {\n  const plugins = (parserOpts.plugins || []).slice();\n\n  if (syntacticPlaceholders !== false) {\n    plugins.push(\"placeholders\");\n  }\n\n  parserOpts = Object.assign({\n    allowReturnOutsideFunction: true,\n    allowSuperOutsideMethod: true,\n    sourceType: \"module\"\n  }, parserOpts, {\n    plugins\n  });\n\n  try {\n    return (0, _parser.parse)(code, parserOpts);\n  } catch (err) {\n    const loc = err.loc;\n\n    if (loc) {\n      err.message += \"\\n\" + (0, _codeFrame.codeFrameColumns)(code, {\n        start: loc\n      });\n      err.code = \"BABEL_TEMPLATE_PARSE_ERROR\";\n    }\n\n    throw err;\n  }\n}","/* MIT license */\nvar cssKeywords = require('color-name');\n\n// NOTE: conversions should only return primitive values (i.e. arrays, or\n//       values that give correct `typeof` results).\n//       do not use box values types (i.e. Number(), String(), etc.)\n\nvar reverseKeywords = {};\nfor (var key in cssKeywords) {\n\tif (cssKeywords.hasOwnProperty(key)) {\n\t\treverseKeywords[cssKeywords[key]] = key;\n\t}\n}\n\nvar convert = module.exports = {\n\trgb: {channels: 3, labels: 'rgb'},\n\thsl: {channels: 3, labels: 'hsl'},\n\thsv: {channels: 3, labels: 'hsv'},\n\thwb: {channels: 3, labels: 'hwb'},\n\tcmyk: {channels: 4, labels: 'cmyk'},\n\txyz: {channels: 3, labels: 'xyz'},\n\tlab: {channels: 3, labels: 'lab'},\n\tlch: {channels: 3, labels: 'lch'},\n\thex: {channels: 1, labels: ['hex']},\n\tkeyword: {channels: 1, labels: ['keyword']},\n\tansi16: {channels: 1, labels: ['ansi16']},\n\tansi256: {channels: 1, labels: ['ansi256']},\n\thcg: {channels: 3, labels: ['h', 'c', 'g']},\n\tapple: {channels: 3, labels: ['r16', 'g16', 'b16']},\n\tgray: {channels: 1, labels: ['gray']}\n};\n\n// hide .channels and .labels properties\nfor (var model in convert) {\n\tif (convert.hasOwnProperty(model)) {\n\t\tif (!('channels' in convert[model])) {\n\t\t\tthrow new Error('missing channels property: ' + model);\n\t\t}\n\n\t\tif (!('labels' in convert[model])) {\n\t\t\tthrow new Error('missing channel labels property: ' + model);\n\t\t}\n\n\t\tif (convert[model].labels.length !== convert[model].channels) {\n\t\t\tthrow new Error('channel and label counts mismatch: ' + model);\n\t\t}\n\n\t\tvar channels = convert[model].channels;\n\t\tvar labels = convert[model].labels;\n\t\tdelete convert[model].channels;\n\t\tdelete convert[model].labels;\n\t\tObject.defineProperty(convert[model], 'channels', {value: channels});\n\t\tObject.defineProperty(convert[model], 'labels', {value: labels});\n\t}\n}\n\nconvert.rgb.hsl = function (rgb) {\n\tvar r = rgb[0] / 255;\n\tvar g = rgb[1] / 255;\n\tvar b = rgb[2] / 255;\n\tvar min = Math.min(r, g, b);\n\tvar max = Math.max(r, g, b);\n\tvar delta = max - min;\n\tvar h;\n\tvar s;\n\tvar l;\n\n\tif (max === min) {\n\t\th = 0;\n\t} else if (r === max) {\n\t\th = (g - b) / delta;\n\t} else if (g === max) {\n\t\th = 2 + (b - r) / delta;\n\t} else if (b === max) {\n\t\th = 4 + (r - g) / delta;\n\t}\n\n\th = Math.min(h * 60, 360);\n\n\tif (h < 0) {\n\t\th += 360;\n\t}\n\n\tl = (min + max) / 2;\n\n\tif (max === min) {\n\t\ts = 0;\n\t} else if (l <= 0.5) {\n\t\ts = delta / (max + min);\n\t} else {\n\t\ts = delta / (2 - max - min);\n\t}\n\n\treturn [h, s * 100, l * 100];\n};\n\nconvert.rgb.hsv = function (rgb) {\n\tvar rdif;\n\tvar gdif;\n\tvar bdif;\n\tvar h;\n\tvar s;\n\n\tvar r = rgb[0] / 255;\n\tvar g = rgb[1] / 255;\n\tvar b = rgb[2] / 255;\n\tvar v = Math.max(r, g, b);\n\tvar diff = v - Math.min(r, g, b);\n\tvar diffc = function (c) {\n\t\treturn (v - c) / 6 / diff + 1 / 2;\n\t};\n\n\tif (diff === 0) {\n\t\th = s = 0;\n\t} else {\n\t\ts = diff / v;\n\t\trdif = diffc(r);\n\t\tgdif = diffc(g);\n\t\tbdif = diffc(b);\n\n\t\tif (r === v) {\n\t\t\th = bdif - gdif;\n\t\t} else if (g === v) {\n\t\t\th = (1 / 3) + rdif - bdif;\n\t\t} else if (b === v) {\n\t\t\th = (2 / 3) + gdif - rdif;\n\t\t}\n\t\tif (h < 0) {\n\t\t\th += 1;\n\t\t} else if (h > 1) {\n\t\t\th -= 1;\n\t\t}\n\t}\n\n\treturn [\n\t\th * 360,\n\t\ts * 100,\n\t\tv * 100\n\t];\n};\n\nconvert.rgb.hwb = function (rgb) {\n\tvar r = rgb[0];\n\tvar g = rgb[1];\n\tvar b = rgb[2];\n\tvar h = convert.rgb.hsl(rgb)[0];\n\tvar w = 1 / 255 * Math.min(r, Math.min(g, b));\n\n\tb = 1 - 1 / 255 * Math.max(r, Math.max(g, b));\n\n\treturn [h, w * 100, b * 100];\n};\n\nconvert.rgb.cmyk = function (rgb) {\n\tvar r = rgb[0] / 255;\n\tvar g = rgb[1] / 255;\n\tvar b = rgb[2] / 255;\n\tvar c;\n\tvar m;\n\tvar y;\n\tvar k;\n\n\tk = Math.min(1 - r, 1 - g, 1 - b);\n\tc = (1 - r - k) / (1 - k) || 0;\n\tm = (1 - g - k) / (1 - k) || 0;\n\ty = (1 - b - k) / (1 - k) || 0;\n\n\treturn [c * 100, m * 100, y * 100, k * 100];\n};\n\n/**\n * See https://en.m.wikipedia.org/wiki/Euclidean_distance#Squared_Euclidean_distance\n * */\nfunction comparativeDistance(x, y) {\n\treturn (\n\t\tMath.pow(x[0] - y[0], 2) +\n\t\tMath.pow(x[1] - y[1], 2) +\n\t\tMath.pow(x[2] - y[2], 2)\n\t);\n}\n\nconvert.rgb.keyword = function (rgb) {\n\tvar reversed = reverseKeywords[rgb];\n\tif (reversed) {\n\t\treturn reversed;\n\t}\n\n\tvar currentClosestDistance = Infinity;\n\tvar currentClosestKeyword;\n\n\tfor (var keyword in cssKeywords) {\n\t\tif (cssKeywords.hasOwnProperty(keyword)) {\n\t\t\tvar value = cssKeywords[keyword];\n\n\t\t\t// Compute comparative distance\n\t\t\tvar distance = comparativeDistance(rgb, value);\n\n\t\t\t// Check if its less, if so set as closest\n\t\t\tif (distance < currentClosestDistance) {\n\t\t\t\tcurrentClosestDistance = distance;\n\t\t\t\tcurrentClosestKeyword = keyword;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn currentClosestKeyword;\n};\n\nconvert.keyword.rgb = function (keyword) {\n\treturn cssKeywords[keyword];\n};\n\nconvert.rgb.xyz = function (rgb) {\n\tvar r = rgb[0] / 255;\n\tvar g = rgb[1] / 255;\n\tvar b = rgb[2] / 255;\n\n\t// assume sRGB\n\tr = r > 0.04045 ? Math.pow(((r + 0.055) / 1.055), 2.4) : (r / 12.92);\n\tg = g > 0.04045 ? Math.pow(((g + 0.055) / 1.055), 2.4) : (g / 12.92);\n\tb = b > 0.04045 ? Math.pow(((b + 0.055) / 1.055), 2.4) : (b / 12.92);\n\n\tvar x = (r * 0.4124) + (g * 0.3576) + (b * 0.1805);\n\tvar y = (r * 0.2126) + (g * 0.7152) + (b * 0.0722);\n\tvar z = (r * 0.0193) + (g * 0.1192) + (b * 0.9505);\n\n\treturn [x * 100, y * 100, z * 100];\n};\n\nconvert.rgb.lab = function (rgb) {\n\tvar xyz = convert.rgb.xyz(rgb);\n\tvar x = xyz[0];\n\tvar y = xyz[1];\n\tvar z = xyz[2];\n\tvar l;\n\tvar a;\n\tvar b;\n\n\tx /= 95.047;\n\ty /= 100;\n\tz /= 108.883;\n\n\tx = x > 0.008856 ? Math.pow(x, 1 / 3) : (7.787 * x) + (16 / 116);\n\ty = y > 0.008856 ? Math.pow(y, 1 / 3) : (7.787 * y) + (16 / 116);\n\tz = z > 0.008856 ? Math.pow(z, 1 / 3) : (7.787 * z) + (16 / 116);\n\n\tl = (116 * y) - 16;\n\ta = 500 * (x - y);\n\tb = 200 * (y - z);\n\n\treturn [l, a, b];\n};\n\nconvert.hsl.rgb = function (hsl) {\n\tvar h = hsl[0] / 360;\n\tvar s = hsl[1] / 100;\n\tvar l = hsl[2] / 100;\n\tvar t1;\n\tvar t2;\n\tvar t3;\n\tvar rgb;\n\tvar val;\n\n\tif (s === 0) {\n\t\tval = l * 255;\n\t\treturn [val, val, val];\n\t}\n\n\tif (l < 0.5) {\n\t\tt2 = l * (1 + s);\n\t} else {\n\t\tt2 = l + s - l * s;\n\t}\n\n\tt1 = 2 * l - t2;\n\n\trgb = [0, 0, 0];\n\tfor (var i = 0; i < 3; i++) {\n\t\tt3 = h + 1 / 3 * -(i - 1);\n\t\tif (t3 < 0) {\n\t\t\tt3++;\n\t\t}\n\t\tif (t3 > 1) {\n\t\t\tt3--;\n\t\t}\n\n\t\tif (6 * t3 < 1) {\n\t\t\tval = t1 + (t2 - t1) * 6 * t3;\n\t\t} else if (2 * t3 < 1) {\n\t\t\tval = t2;\n\t\t} else if (3 * t3 < 2) {\n\t\t\tval = t1 + (t2 - t1) * (2 / 3 - t3) * 6;\n\t\t} else {\n\t\t\tval = t1;\n\t\t}\n\n\t\trgb[i] = val * 255;\n\t}\n\n\treturn rgb;\n};\n\nconvert.hsl.hsv = function (hsl) {\n\tvar h = hsl[0];\n\tvar s = hsl[1] / 100;\n\tvar l = hsl[2] / 100;\n\tvar smin = s;\n\tvar lmin = Math.max(l, 0.01);\n\tvar sv;\n\tvar v;\n\n\tl *= 2;\n\ts *= (l <= 1) ? l : 2 - l;\n\tsmin *= lmin <= 1 ? lmin : 2 - lmin;\n\tv = (l + s) / 2;\n\tsv = l === 0 ? (2 * smin) / (lmin + smin) : (2 * s) / (l + s);\n\n\treturn [h, sv * 100, v * 100];\n};\n\nconvert.hsv.rgb = function (hsv) {\n\tvar h = hsv[0] / 60;\n\tvar s = hsv[1] / 100;\n\tvar v = hsv[2] / 100;\n\tvar hi = Math.floor(h) % 6;\n\n\tvar f = h - Math.floor(h);\n\tvar p = 255 * v * (1 - s);\n\tvar q = 255 * v * (1 - (s * f));\n\tvar t = 255 * v * (1 - (s * (1 - f)));\n\tv *= 255;\n\n\tswitch (hi) {\n\t\tcase 0:\n\t\t\treturn [v, t, p];\n\t\tcase 1:\n\t\t\treturn [q, v, p];\n\t\tcase 2:\n\t\t\treturn [p, v, t];\n\t\tcase 3:\n\t\t\treturn [p, q, v];\n\t\tcase 4:\n\t\t\treturn [t, p, v];\n\t\tcase 5:\n\t\t\treturn [v, p, q];\n\t}\n};\n\nconvert.hsv.hsl = function (hsv) {\n\tvar h = hsv[0];\n\tvar s = hsv[1] / 100;\n\tvar v = hsv[2] / 100;\n\tvar vmin = Math.max(v, 0.01);\n\tvar lmin;\n\tvar sl;\n\tvar l;\n\n\tl = (2 - s) * v;\n\tlmin = (2 - s) * vmin;\n\tsl = s * vmin;\n\tsl /= (lmin <= 1) ? lmin : 2 - lmin;\n\tsl = sl || 0;\n\tl /= 2;\n\n\treturn [h, sl * 100, l * 100];\n};\n\n// http://dev.w3.org/csswg/css-color/#hwb-to-rgb\nconvert.hwb.rgb = function (hwb) {\n\tvar h = hwb[0] / 360;\n\tvar wh = hwb[1] / 100;\n\tvar bl = hwb[2] / 100;\n\tvar ratio = wh + bl;\n\tvar i;\n\tvar v;\n\tvar f;\n\tvar n;\n\n\t// wh + bl cant be > 1\n\tif (ratio > 1) {\n\t\twh /= ratio;\n\t\tbl /= ratio;\n\t}\n\n\ti = Math.floor(6 * h);\n\tv = 1 - bl;\n\tf = 6 * h - i;\n\n\tif ((i & 0x01) !== 0) {\n\t\tf = 1 - f;\n\t}\n\n\tn = wh + f * (v - wh); // linear interpolation\n\n\tvar r;\n\tvar g;\n\tvar b;\n\tswitch (i) {\n\t\tdefault:\n\t\tcase 6:\n\t\tcase 0: r = v; g = n; b = wh; break;\n\t\tcase 1: r = n; g = v; b = wh; break;\n\t\tcase 2: r = wh; g = v; b = n; break;\n\t\tcase 3: r = wh; g = n; b = v; break;\n\t\tcase 4: r = n; g = wh; b = v; break;\n\t\tcase 5: r = v; g = wh; b = n; break;\n\t}\n\n\treturn [r * 255, g * 255, b * 255];\n};\n\nconvert.cmyk.rgb = function (cmyk) {\n\tvar c = cmyk[0] / 100;\n\tvar m = cmyk[1] / 100;\n\tvar y = cmyk[2] / 100;\n\tvar k = cmyk[3] / 100;\n\tvar r;\n\tvar g;\n\tvar b;\n\n\tr = 1 - Math.min(1, c * (1 - k) + k);\n\tg = 1 - Math.min(1, m * (1 - k) + k);\n\tb = 1 - Math.min(1, y * (1 - k) + k);\n\n\treturn [r * 255, g * 255, b * 255];\n};\n\nconvert.xyz.rgb = function (xyz) {\n\tvar x = xyz[0] / 100;\n\tvar y = xyz[1] / 100;\n\tvar z = xyz[2] / 100;\n\tvar r;\n\tvar g;\n\tvar b;\n\n\tr = (x * 3.2406) + (y * -1.5372) + (z * -0.4986);\n\tg = (x * -0.9689) + (y * 1.8758) + (z * 0.0415);\n\tb = (x * 0.0557) + (y * -0.2040) + (z * 1.0570);\n\n\t// assume sRGB\n\tr = r > 0.0031308\n\t\t? ((1.055 * Math.pow(r, 1.0 / 2.4)) - 0.055)\n\t\t: r * 12.92;\n\n\tg = g > 0.0031308\n\t\t? ((1.055 * Math.pow(g, 1.0 / 2.4)) - 0.055)\n\t\t: g * 12.92;\n\n\tb = b > 0.0031308\n\t\t? ((1.055 * Math.pow(b, 1.0 / 2.4)) - 0.055)\n\t\t: b * 12.92;\n\n\tr = Math.min(Math.max(0, r), 1);\n\tg = Math.min(Math.max(0, g), 1);\n\tb = Math.min(Math.max(0, b), 1);\n\n\treturn [r * 255, g * 255, b * 255];\n};\n\nconvert.xyz.lab = function (xyz) {\n\tvar x = xyz[0];\n\tvar y = xyz[1];\n\tvar z = xyz[2];\n\tvar l;\n\tvar a;\n\tvar b;\n\n\tx /= 95.047;\n\ty /= 100;\n\tz /= 108.883;\n\n\tx = x > 0.008856 ? Math.pow(x, 1 / 3) : (7.787 * x) + (16 / 116);\n\ty = y > 0.008856 ? Math.pow(y, 1 / 3) : (7.787 * y) + (16 / 116);\n\tz = z > 0.008856 ? Math.pow(z, 1 / 3) : (7.787 * z) + (16 / 116);\n\n\tl = (116 * y) - 16;\n\ta = 500 * (x - y);\n\tb = 200 * (y - z);\n\n\treturn [l, a, b];\n};\n\nconvert.lab.xyz = function (lab) {\n\tvar l = lab[0];\n\tvar a = lab[1];\n\tvar b = lab[2];\n\tvar x;\n\tvar y;\n\tvar z;\n\n\ty = (l + 16) / 116;\n\tx = a / 500 + y;\n\tz = y - b / 200;\n\n\tvar y2 = Math.pow(y, 3);\n\tvar x2 = Math.pow(x, 3);\n\tvar z2 = Math.pow(z, 3);\n\ty = y2 > 0.008856 ? y2 : (y - 16 / 116) / 7.787;\n\tx = x2 > 0.008856 ? x2 : (x - 16 / 116) / 7.787;\n\tz = z2 > 0.008856 ? z2 : (z - 16 / 116) / 7.787;\n\n\tx *= 95.047;\n\ty *= 100;\n\tz *= 108.883;\n\n\treturn [x, y, z];\n};\n\nconvert.lab.lch = function (lab) {\n\tvar l = lab[0];\n\tvar a = lab[1];\n\tvar b = lab[2];\n\tvar hr;\n\tvar h;\n\tvar c;\n\n\thr = Math.atan2(b, a);\n\th = hr * 360 / 2 / Math.PI;\n\n\tif (h < 0) {\n\t\th += 360;\n\t}\n\n\tc = Math.sqrt(a * a + b * b);\n\n\treturn [l, c, h];\n};\n\nconvert.lch.lab = function (lch) {\n\tvar l = lch[0];\n\tvar c = lch[1];\n\tvar h = lch[2];\n\tvar a;\n\tvar b;\n\tvar hr;\n\n\thr = h / 360 * 2 * Math.PI;\n\ta = c * Math.cos(hr);\n\tb = c * Math.sin(hr);\n\n\treturn [l, a, b];\n};\n\nconvert.rgb.ansi16 = function (args) {\n\tvar r = args[0];\n\tvar g = args[1];\n\tvar b = args[2];\n\tvar value = 1 in arguments ? arguments[1] : convert.rgb.hsv(args)[2]; // hsv -> ansi16 optimization\n\n\tvalue = Math.round(value / 50);\n\n\tif (value === 0) {\n\t\treturn 30;\n\t}\n\n\tvar ansi = 30\n\t\t+ ((Math.round(b / 255) << 2)\n\t\t| (Math.round(g / 255) << 1)\n\t\t| Math.round(r / 255));\n\n\tif (value === 2) {\n\t\tansi += 60;\n\t}\n\n\treturn ansi;\n};\n\nconvert.hsv.ansi16 = function (args) {\n\t// optimization here; we already know the value and don't need to get\n\t// it converted for us.\n\treturn convert.rgb.ansi16(convert.hsv.rgb(args), args[2]);\n};\n\nconvert.rgb.ansi256 = function (args) {\n\tvar r = args[0];\n\tvar g = args[1];\n\tvar b = args[2];\n\n\t// we use the extended greyscale palette here, with the exception of\n\t// black and white. normal palette only has 4 greyscale shades.\n\tif (r === g && g === b) {\n\t\tif (r < 8) {\n\t\t\treturn 16;\n\t\t}\n\n\t\tif (r > 248) {\n\t\t\treturn 231;\n\t\t}\n\n\t\treturn Math.round(((r - 8) / 247) * 24) + 232;\n\t}\n\n\tvar ansi = 16\n\t\t+ (36 * Math.round(r / 255 * 5))\n\t\t+ (6 * Math.round(g / 255 * 5))\n\t\t+ Math.round(b / 255 * 5);\n\n\treturn ansi;\n};\n\nconvert.ansi16.rgb = function (args) {\n\tvar color = args % 10;\n\n\t// handle greyscale\n\tif (color === 0 || color === 7) {\n\t\tif (args > 50) {\n\t\t\tcolor += 3.5;\n\t\t}\n\n\t\tcolor = color / 10.5 * 255;\n\n\t\treturn [color, color, color];\n\t}\n\n\tvar mult = (~~(args > 50) + 1) * 0.5;\n\tvar r = ((color & 1) * mult) * 255;\n\tvar g = (((color >> 1) & 1) * mult) * 255;\n\tvar b = (((color >> 2) & 1) * mult) * 255;\n\n\treturn [r, g, b];\n};\n\nconvert.ansi256.rgb = function (args) {\n\t// handle greyscale\n\tif (args >= 232) {\n\t\tvar c = (args - 232) * 10 + 8;\n\t\treturn [c, c, c];\n\t}\n\n\targs -= 16;\n\n\tvar rem;\n\tvar r = Math.floor(args / 36) / 5 * 255;\n\tvar g = Math.floor((rem = args % 36) / 6) / 5 * 255;\n\tvar b = (rem % 6) / 5 * 255;\n\n\treturn [r, g, b];\n};\n\nconvert.rgb.hex = function (args) {\n\tvar integer = ((Math.round(args[0]) & 0xFF) << 16)\n\t\t+ ((Math.round(args[1]) & 0xFF) << 8)\n\t\t+ (Math.round(args[2]) & 0xFF);\n\n\tvar string = integer.toString(16).toUpperCase();\n\treturn '000000'.substring(string.length) + string;\n};\n\nconvert.hex.rgb = function (args) {\n\tvar match = args.toString(16).match(/[a-f0-9]{6}|[a-f0-9]{3}/i);\n\tif (!match) {\n\t\treturn [0, 0, 0];\n\t}\n\n\tvar colorString = match[0];\n\n\tif (match[0].length === 3) {\n\t\tcolorString = colorString.split('').map(function (char) {\n\t\t\treturn char + char;\n\t\t}).join('');\n\t}\n\n\tvar integer = parseInt(colorString, 16);\n\tvar r = (integer >> 16) & 0xFF;\n\tvar g = (integer >> 8) & 0xFF;\n\tvar b = integer & 0xFF;\n\n\treturn [r, g, b];\n};\n\nconvert.rgb.hcg = function (rgb) {\n\tvar r = rgb[0] / 255;\n\tvar g = rgb[1] / 255;\n\tvar b = rgb[2] / 255;\n\tvar max = Math.max(Math.max(r, g), b);\n\tvar min = Math.min(Math.min(r, g), b);\n\tvar chroma = (max - min);\n\tvar grayscale;\n\tvar hue;\n\n\tif (chroma < 1) {\n\t\tgrayscale = min / (1 - chroma);\n\t} else {\n\t\tgrayscale = 0;\n\t}\n\n\tif (chroma <= 0) {\n\t\thue = 0;\n\t} else\n\tif (max === r) {\n\t\thue = ((g - b) / chroma) % 6;\n\t} else\n\tif (max === g) {\n\t\thue = 2 + (b - r) / chroma;\n\t} else {\n\t\thue = 4 + (r - g) / chroma + 4;\n\t}\n\n\thue /= 6;\n\thue %= 1;\n\n\treturn [hue * 360, chroma * 100, grayscale * 100];\n};\n\nconvert.hsl.hcg = function (hsl) {\n\tvar s = hsl[1] / 100;\n\tvar l = hsl[2] / 100;\n\tvar c = 1;\n\tvar f = 0;\n\n\tif (l < 0.5) {\n\t\tc = 2.0 * s * l;\n\t} else {\n\t\tc = 2.0 * s * (1.0 - l);\n\t}\n\n\tif (c < 1.0) {\n\t\tf = (l - 0.5 * c) / (1.0 - c);\n\t}\n\n\treturn [hsl[0], c * 100, f * 100];\n};\n\nconvert.hsv.hcg = function (hsv) {\n\tvar s = hsv[1] / 100;\n\tvar v = hsv[2] / 100;\n\n\tvar c = s * v;\n\tvar f = 0;\n\n\tif (c < 1.0) {\n\t\tf = (v - c) / (1 - c);\n\t}\n\n\treturn [hsv[0], c * 100, f * 100];\n};\n\nconvert.hcg.rgb = function (hcg) {\n\tvar h = hcg[0] / 360;\n\tvar c = hcg[1] / 100;\n\tvar g = hcg[2] / 100;\n\n\tif (c === 0.0) {\n\t\treturn [g * 255, g * 255, g * 255];\n\t}\n\n\tvar pure = [0, 0, 0];\n\tvar hi = (h % 1) * 6;\n\tvar v = hi % 1;\n\tvar w = 1 - v;\n\tvar mg = 0;\n\n\tswitch (Math.floor(hi)) {\n\t\tcase 0:\n\t\t\tpure[0] = 1; pure[1] = v; pure[2] = 0; break;\n\t\tcase 1:\n\t\t\tpure[0] = w; pure[1] = 1; pure[2] = 0; break;\n\t\tcase 2:\n\t\t\tpure[0] = 0; pure[1] = 1; pure[2] = v; break;\n\t\tcase 3:\n\t\t\tpure[0] = 0; pure[1] = w; pure[2] = 1; break;\n\t\tcase 4:\n\t\t\tpure[0] = v; pure[1] = 0; pure[2] = 1; break;\n\t\tdefault:\n\t\t\tpure[0] = 1; pure[1] = 0; pure[2] = w;\n\t}\n\n\tmg = (1.0 - c) * g;\n\n\treturn [\n\t\t(c * pure[0] + mg) * 255,\n\t\t(c * pure[1] + mg) * 255,\n\t\t(c * pure[2] + mg) * 255\n\t];\n};\n\nconvert.hcg.hsv = function (hcg) {\n\tvar c = hcg[1] / 100;\n\tvar g = hcg[2] / 100;\n\n\tvar v = c + g * (1.0 - c);\n\tvar f = 0;\n\n\tif (v > 0.0) {\n\t\tf = c / v;\n\t}\n\n\treturn [hcg[0], f * 100, v * 100];\n};\n\nconvert.hcg.hsl = function (hcg) {\n\tvar c = hcg[1] / 100;\n\tvar g = hcg[2] / 100;\n\n\tvar l = g * (1.0 - c) + 0.5 * c;\n\tvar s = 0;\n\n\tif (l > 0.0 && l < 0.5) {\n\t\ts = c / (2 * l);\n\t} else\n\tif (l >= 0.5 && l < 1.0) {\n\t\ts = c / (2 * (1 - l));\n\t}\n\n\treturn [hcg[0], s * 100, l * 100];\n};\n\nconvert.hcg.hwb = function (hcg) {\n\tvar c = hcg[1] / 100;\n\tvar g = hcg[2] / 100;\n\tvar v = c + g * (1.0 - c);\n\treturn [hcg[0], (v - c) * 100, (1 - v) * 100];\n};\n\nconvert.hwb.hcg = function (hwb) {\n\tvar w = hwb[1] / 100;\n\tvar b = hwb[2] / 100;\n\tvar v = 1 - b;\n\tvar c = v - w;\n\tvar g = 0;\n\n\tif (c < 1) {\n\t\tg = (v - c) / (1 - c);\n\t}\n\n\treturn [hwb[0], c * 100, g * 100];\n};\n\nconvert.apple.rgb = function (apple) {\n\treturn [(apple[0] / 65535) * 255, (apple[1] / 65535) * 255, (apple[2] / 65535) * 255];\n};\n\nconvert.rgb.apple = function (rgb) {\n\treturn [(rgb[0] / 255) * 65535, (rgb[1] / 255) * 65535, (rgb[2] / 255) * 65535];\n};\n\nconvert.gray.rgb = function (args) {\n\treturn [args[0] / 100 * 255, args[0] / 100 * 255, args[0] / 100 * 255];\n};\n\nconvert.gray.hsl = convert.gray.hsv = function (args) {\n\treturn [0, 0, args[0]];\n};\n\nconvert.gray.hwb = function (gray) {\n\treturn [0, 100, gray[0]];\n};\n\nconvert.gray.cmyk = function (gray) {\n\treturn [0, 0, 0, gray[0]];\n};\n\nconvert.gray.lab = function (gray) {\n\treturn [gray[0], 0, 0];\n};\n\nconvert.gray.hex = function (gray) {\n\tvar val = Math.round(gray[0] / 100 * 255) & 0xFF;\n\tvar integer = (val << 16) + (val << 8) + val;\n\n\tvar string = integer.toString(16).toUpperCase();\n\treturn '000000'.substring(string.length) + string;\n};\n\nconvert.rgb.gray = function (rgb) {\n\tvar val = (rgb[0] + rgb[1] + rgb[2]) / 3;\n\treturn [val / 255 * 100];\n};\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = populatePlaceholders;\n\nvar t = _interopRequireWildcard(require(\"@babel/types\"));\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction populatePlaceholders(metadata, replacements) {\n  const ast = t.cloneNode(metadata.ast);\n\n  if (replacements) {\n    metadata.placeholders.forEach(placeholder => {\n      if (!Object.prototype.hasOwnProperty.call(replacements, placeholder.name)) {\n        const placeholderName = placeholder.name;\n        throw new Error(`Error: No substitution given for \"${placeholderName}\". If this is not meant to be a\n            placeholder you may want to consider passing one of the following options to @babel/template:\n            - { placeholderPattern: false, placeholderWhitelist: new Set(['${placeholderName}'])}\n            - { placeholderPattern: /^${placeholderName}$/ }`);\n      }\n    });\n    Object.keys(replacements).forEach(key => {\n      if (!metadata.placeholderNames.has(key)) {\n        throw new Error(`Unknown substitution \"${key}\" given`);\n      }\n    });\n  }\n\n  metadata.placeholders.slice().reverse().forEach(placeholder => {\n    try {\n      applyReplacement(placeholder, ast, replacements && replacements[placeholder.name] || null);\n    } catch (e) {\n      e.message = `@babel/template placeholder \"${placeholder.name}\": ${e.message}`;\n      throw e;\n    }\n  });\n  return ast;\n}\n\nfunction applyReplacement(placeholder, ast, replacement) {\n  if (placeholder.isDuplicate) {\n    if (Array.isArray(replacement)) {\n      replacement = replacement.map(node => t.cloneNode(node));\n    } else if (typeof replacement === \"object\") {\n      replacement = t.cloneNode(replacement);\n    }\n  }\n\n  const {\n    parent,\n    key,\n    index\n  } = placeholder.resolve(ast);\n\n  if (placeholder.type === \"string\") {\n    if (typeof replacement === \"string\") {\n      replacement = t.stringLiteral(replacement);\n    }\n\n    if (!replacement || !t.isStringLiteral(replacement)) {\n      throw new Error(\"Expected string substitution\");\n    }\n  } else if (placeholder.type === \"statement\") {\n    if (index === undefined) {\n      if (!replacement) {\n        replacement = t.emptyStatement();\n      } else if (Array.isArray(replacement)) {\n        replacement = t.blockStatement(replacement);\n      } else if (typeof replacement === \"string\") {\n        replacement = t.expressionStatement(t.identifier(replacement));\n      } else if (!t.isStatement(replacement)) {\n        replacement = t.expressionStatement(replacement);\n      }\n    } else {\n      if (replacement && !Array.isArray(replacement)) {\n        if (typeof replacement === \"string\") {\n          replacement = t.identifier(replacement);\n        }\n\n        if (!t.isStatement(replacement)) {\n          replacement = t.expressionStatement(replacement);\n        }\n      }\n    }\n  } else if (placeholder.type === \"param\") {\n    if (typeof replacement === \"string\") {\n      replacement = t.identifier(replacement);\n    }\n\n    if (index === undefined) throw new Error(\"Assertion failure.\");\n  } else {\n    if (typeof replacement === \"string\") {\n      replacement = t.identifier(replacement);\n    }\n\n    if (Array.isArray(replacement)) {\n      throw new Error(\"Cannot replace single expression with an array.\");\n    }\n  }\n\n  if (index === undefined) {\n    t.validate(parent, key, replacement);\n    parent[key] = replacement;\n  } else {\n    const items = parent[key].slice();\n\n    if (placeholder.type === \"statement\" || placeholder.type === \"param\") {\n      if (replacement == null) {\n        items.splice(index, 1);\n      } else if (Array.isArray(replacement)) {\n        items.splice(index, 1, ...replacement);\n      } else {\n        items[index] = replacement;\n      }\n    } else {\n      items[index] = replacement;\n    }\n\n    t.validate(parent, key, items);\n    parent[key] = items;\n  }\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _helperPluginUtils = require(\"@babel/helper-plugin-utils\");\n\nvar _helperAnnotateAsPure = _interopRequireDefault(require(\"@babel/helper-annotate-as-pure\"));\n\nvar _helperFunctionName = _interopRequireDefault(require(\"@babel/helper-function-name\"));\n\nvar _helperSplitExportDeclaration = _interopRequireDefault(require(\"@babel/helper-split-export-declaration\"));\n\nvar _core = require(\"@babel/core\");\n\nvar _globals = _interopRequireDefault(require(\"globals\"));\n\nvar _transformClass = _interopRequireDefault(require(\"./transformClass\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst getBuiltinClasses = category => Object.keys(_globals.default[category]).filter(name => /^[A-Z]/.test(name));\n\nconst builtinClasses = new Set([...getBuiltinClasses(\"builtin\"), ...getBuiltinClasses(\"browser\")]);\n\nvar _default = (0, _helperPluginUtils.declare)((api, options) => {\n  api.assertVersion(7);\n  const {\n    loose\n  } = options;\n  const VISITED = Symbol();\n  return {\n    name: \"transform-classes\",\n    visitor: {\n      ExportDefaultDeclaration(path) {\n        if (!path.get(\"declaration\").isClassDeclaration()) return;\n        (0, _helperSplitExportDeclaration.default)(path);\n      },\n\n      ClassDeclaration(path) {\n        const {\n          node\n        } = path;\n        const ref = node.id || path.scope.generateUidIdentifier(\"class\");\n        path.replaceWith(_core.types.variableDeclaration(\"let\", [_core.types.variableDeclarator(ref, _core.types.toExpression(node))]));\n      },\n\n      ClassExpression(path, state) {\n        const {\n          node\n        } = path;\n        if (node[VISITED]) return;\n        const inferred = (0, _helperFunctionName.default)(path);\n\n        if (inferred && inferred !== node) {\n          path.replaceWith(inferred);\n          return;\n        }\n\n        node[VISITED] = true;\n        path.replaceWith((0, _transformClass.default)(path, state.file, builtinClasses, loose));\n\n        if (path.isCallExpression()) {\n          (0, _helperAnnotateAsPure.default)(path);\n\n          if (path.get(\"callee\").isArrowFunctionExpression()) {\n            path.get(\"callee\").arrowFunctionToExpression();\n          }\n        }\n      }\n\n    }\n  };\n});\n\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.program = exports.expression = exports.statement = exports.statements = exports.smart = void 0;\n\nvar t = _interopRequireWildcard(require(\"@babel/types\"));\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction makeStatementFormatter(fn) {\n  return {\n    code: str => `/* @babel/template */;\\n${str}`,\n    validate: () => {},\n    unwrap: ast => {\n      return fn(ast.program.body.slice(1));\n    }\n  };\n}\n\nconst smart = makeStatementFormatter(body => {\n  if (body.length > 1) {\n    return body;\n  } else {\n    return body[0];\n  }\n});\nexports.smart = smart;\nconst statements = makeStatementFormatter(body => body);\nexports.statements = statements;\nconst statement = makeStatementFormatter(body => {\n  if (body.length === 0) {\n    throw new Error(\"Found nothing to return.\");\n  }\n\n  if (body.length > 1) {\n    throw new Error(\"Found multiple statements but wanted one\");\n  }\n\n  return body[0];\n});\nexports.statement = statement;\nconst expression = {\n  code: str => `(\\n${str}\\n)`,\n  validate: ast => {\n    if (ast.program.body.length > 1) {\n      throw new Error(\"Found multiple statements but wanted one\");\n    }\n\n    if (expression.unwrap(ast).start === 0) {\n      throw new Error(\"Parse result included parens.\");\n    }\n  },\n  unwrap: ({\n    program\n  }) => {\n    const [stmt] = program.body;\n    t.assertExpressionStatement(stmt);\n    return stmt.expression;\n  }\n};\nexports.expression = expression;\nconst program = {\n  code: str => str,\n  validate: () => {},\n  unwrap: ast => ast.program\n};\nexports.program = program;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = createTemplateBuilder;\n\nvar _options = require(\"./options\");\n\nvar _string = _interopRequireDefault(require(\"./string\"));\n\nvar _literal = _interopRequireDefault(require(\"./literal\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst NO_PLACEHOLDER = (0, _options.validate)({\n  placeholderPattern: false\n});\n\nfunction createTemplateBuilder(formatter, defaultOpts) {\n  const templateFnCache = new WeakMap();\n  const templateAstCache = new WeakMap();\n  const cachedOpts = defaultOpts || (0, _options.validate)(null);\n  return Object.assign((tpl, ...args) => {\n    if (typeof tpl === \"string\") {\n      if (args.length > 1) throw new Error(\"Unexpected extra params.\");\n      return extendedTrace((0, _string.default)(formatter, tpl, (0, _options.merge)(cachedOpts, (0, _options.validate)(args[0]))));\n    } else if (Array.isArray(tpl)) {\n      let builder = templateFnCache.get(tpl);\n\n      if (!builder) {\n        builder = (0, _literal.default)(formatter, tpl, cachedOpts);\n        templateFnCache.set(tpl, builder);\n      }\n\n      return extendedTrace(builder(args));\n    } else if (typeof tpl === \"object\" && tpl) {\n      if (args.length > 0) throw new Error(\"Unexpected extra params.\");\n      return createTemplateBuilder(formatter, (0, _options.merge)(cachedOpts, (0, _options.validate)(tpl)));\n    }\n\n    throw new Error(`Unexpected template param ${typeof tpl}`);\n  }, {\n    ast: (tpl, ...args) => {\n      if (typeof tpl === \"string\") {\n        if (args.length > 1) throw new Error(\"Unexpected extra params.\");\n        return (0, _string.default)(formatter, tpl, (0, _options.merge)((0, _options.merge)(cachedOpts, (0, _options.validate)(args[0])), NO_PLACEHOLDER))();\n      } else if (Array.isArray(tpl)) {\n        let builder = templateAstCache.get(tpl);\n\n        if (!builder) {\n          builder = (0, _literal.default)(formatter, tpl, (0, _options.merge)(cachedOpts, NO_PLACEHOLDER));\n          templateAstCache.set(tpl, builder);\n        }\n\n        return builder(args)();\n      }\n\n      throw new Error(`Unexpected template param ${typeof tpl}`);\n    }\n  });\n}\n\nfunction extendedTrace(fn) {\n  let rootStack = \"\";\n\n  try {\n    throw new Error();\n  } catch (error) {\n    if (error.stack) {\n      rootStack = error.stack.split(\"\\n\").slice(3).join(\"\\n\");\n    }\n  }\n\n  return arg => {\n    try {\n      return fn(arg);\n    } catch (err) {\n      err.stack += `\\n    =============\\n${rootStack}`;\n      throw err;\n    }\n  };\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = stringTemplate;\n\nvar _options = require(\"./options\");\n\nvar _parse = _interopRequireDefault(require(\"./parse\"));\n\nvar _populate = _interopRequireDefault(require(\"./populate\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction stringTemplate(formatter, code, opts) {\n  code = formatter.code(code);\n  let metadata;\n  return arg => {\n    const replacements = (0, _options.normalizeReplacements)(arg);\n    if (!metadata) metadata = (0, _parse.default)(formatter, code, opts);\n    return formatter.unwrap((0, _populate.default)(metadata, replacements));\n  };\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.shouldHighlight = shouldHighlight;\nexports.getChalk = getChalk;\nexports.default = highlight;\n\nvar jsTokensNs = _interopRequireWildcard(require(\"js-tokens\"));\n\nvar _helperValidatorIdentifier = require(\"@babel/helper-validator-identifier\");\n\nvar _chalk = _interopRequireDefault(require(\"chalk\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nconst sometimesKeywords = new Set([\"as\", \"async\", \"from\", \"get\", \"of\", \"set\"]);\n\nfunction getDefs(chalk) {\n  return {\n    keyword: chalk.cyan,\n    capitalized: chalk.yellow,\n    jsxIdentifier: chalk.yellow,\n    punctuator: chalk.yellow,\n    number: chalk.magenta,\n    string: chalk.green,\n    regex: chalk.magenta,\n    comment: chalk.grey,\n    invalid: chalk.white.bgRed.bold\n  };\n}\n\nconst NEWLINE = /\\r\\n|[\\n\\r\\u2028\\u2029]/;\nconst BRACKET = /^[()[\\]{}]$/;\nlet tokenize;\n{\n  const {\n    matchToToken\n  } = jsTokensNs;\n  const JSX_TAG = /^[a-z][\\w-]*$/i;\n\n  const getTokenType = function (token, offset, text) {\n    if (token.type === \"name\") {\n      if ((0, _helperValidatorIdentifier.isKeyword)(token.value) || (0, _helperValidatorIdentifier.isStrictReservedWord)(token.value, true) || sometimesKeywords.has(token.value)) {\n        return \"keyword\";\n      }\n\n      if (JSX_TAG.test(token.value) && (text[offset - 1] === \"<\" || text.substr(offset - 2, 2) == \"</\")) {\n        return \"jsxIdentifier\";\n      }\n\n      if (token.value[0] !== token.value[0].toLowerCase()) {\n        return \"capitalized\";\n      }\n    }\n\n    if (token.type === \"punctuator\" && BRACKET.test(token.value)) {\n      return \"bracket\";\n    }\n\n    if (token.type === \"invalid\" && (token.value === \"@\" || token.value === \"#\")) {\n      return \"punctuator\";\n    }\n\n    return token.type;\n  };\n\n  tokenize = function* (text) {\n    let match;\n\n    while (match = jsTokensNs.default.exec(text)) {\n      const token = matchToToken(match);\n      yield {\n        type: getTokenType(token, match.index, text),\n        value: token.value\n      };\n    }\n  };\n}\n\nfunction highlightTokens(defs, text) {\n  let highlighted = \"\";\n\n  for (const {\n    type,\n    value\n  } of tokenize(text)) {\n    const colorize = defs[type];\n\n    if (colorize) {\n      highlighted += value.split(NEWLINE).map(str => colorize(str)).join(\"\\n\");\n    } else {\n      highlighted += value;\n    }\n  }\n\n  return highlighted;\n}\n\nfunction shouldHighlight(options) {\n  return _chalk.default.supportsColor || options.forceColor;\n}\n\nfunction getChalk(options) {\n  let chalk = _chalk.default;\n\n  if (options.forceColor) {\n    chalk = new _chalk.default.constructor({\n      enabled: true,\n      level: 1\n    });\n  }\n\n  return chalk;\n}\n\nfunction highlight(code, options = {}) {\n  if (shouldHighlight(options)) {\n    const chalk = getChalk(options);\n    const defs = getDefs(chalk);\n    return highlightTokens(defs, code);\n  } else {\n    return code;\n  }\n}","'use strict';\nconst escapeStringRegexp = require('escape-string-regexp');\nconst ansiStyles = require('ansi-styles');\nconst stdoutColor = require('supports-color').stdout;\n\nconst template = require('./templates.js');\n\nconst isSimpleWindowsTerm = process.platform === 'win32' && !(process.env.TERM || '').toLowerCase().startsWith('xterm');\n\n// `supportsColor.level` → `ansiStyles.color[name]` mapping\nconst levelMapping = ['ansi', 'ansi', 'ansi256', 'ansi16m'];\n\n// `color-convert` models to exclude from the Chalk API due to conflicts and such\nconst skipModels = new Set(['gray']);\n\nconst styles = Object.create(null);\n\nfunction applyOptions(obj, options) {\n\toptions = options || {};\n\n\t// Detect level if not set manually\n\tconst scLevel = stdoutColor ? stdoutColor.level : 0;\n\tobj.level = options.level === undefined ? scLevel : options.level;\n\tobj.enabled = 'enabled' in options ? options.enabled : obj.level > 0;\n}\n\nfunction Chalk(options) {\n\t// We check for this.template here since calling `chalk.constructor()`\n\t// by itself will have a `this` of a previously constructed chalk object\n\tif (!this || !(this instanceof Chalk) || this.template) {\n\t\tconst chalk = {};\n\t\tapplyOptions(chalk, options);\n\n\t\tchalk.template = function () {\n\t\t\tconst args = [].slice.call(arguments);\n\t\t\treturn chalkTag.apply(null, [chalk.template].concat(args));\n\t\t};\n\n\t\tObject.setPrototypeOf(chalk, Chalk.prototype);\n\t\tObject.setPrototypeOf(chalk.template, chalk);\n\n\t\tchalk.template.constructor = Chalk;\n\n\t\treturn chalk.template;\n\t}\n\n\tapplyOptions(this, options);\n}\n\n// Use bright blue on Windows as the normal blue color is illegible\nif (isSimpleWindowsTerm) {\n\tansiStyles.blue.open = '\\u001B[94m';\n}\n\nfor (const key of Object.keys(ansiStyles)) {\n\tansiStyles[key].closeRe = new RegExp(escapeStringRegexp(ansiStyles[key].close), 'g');\n\n\tstyles[key] = {\n\t\tget() {\n\t\t\tconst codes = ansiStyles[key];\n\t\t\treturn build.call(this, this._styles ? this._styles.concat(codes) : [codes], this._empty, key);\n\t\t}\n\t};\n}\n\nstyles.visible = {\n\tget() {\n\t\treturn build.call(this, this._styles || [], true, 'visible');\n\t}\n};\n\nansiStyles.color.closeRe = new RegExp(escapeStringRegexp(ansiStyles.color.close), 'g');\nfor (const model of Object.keys(ansiStyles.color.ansi)) {\n\tif (skipModels.has(model)) {\n\t\tcontinue;\n\t}\n\n\tstyles[model] = {\n\t\tget() {\n\t\t\tconst level = this.level;\n\t\t\treturn function () {\n\t\t\t\tconst open = ansiStyles.color[levelMapping[level]][model].apply(null, arguments);\n\t\t\t\tconst codes = {\n\t\t\t\t\topen,\n\t\t\t\t\tclose: ansiStyles.color.close,\n\t\t\t\t\tcloseRe: ansiStyles.color.closeRe\n\t\t\t\t};\n\t\t\t\treturn build.call(this, this._styles ? this._styles.concat(codes) : [codes], this._empty, model);\n\t\t\t};\n\t\t}\n\t};\n}\n\nansiStyles.bgColor.closeRe = new RegExp(escapeStringRegexp(ansiStyles.bgColor.close), 'g');\nfor (const model of Object.keys(ansiStyles.bgColor.ansi)) {\n\tif (skipModels.has(model)) {\n\t\tcontinue;\n\t}\n\n\tconst bgModel = 'bg' + model[0].toUpperCase() + model.slice(1);\n\tstyles[bgModel] = {\n\t\tget() {\n\t\t\tconst level = this.level;\n\t\t\treturn function () {\n\t\t\t\tconst open = ansiStyles.bgColor[levelMapping[level]][model].apply(null, arguments);\n\t\t\t\tconst codes = {\n\t\t\t\t\topen,\n\t\t\t\t\tclose: ansiStyles.bgColor.close,\n\t\t\t\t\tcloseRe: ansiStyles.bgColor.closeRe\n\t\t\t\t};\n\t\t\t\treturn build.call(this, this._styles ? this._styles.concat(codes) : [codes], this._empty, model);\n\t\t\t};\n\t\t}\n\t};\n}\n\nconst proto = Object.defineProperties(() => {}, styles);\n\nfunction build(_styles, _empty, key) {\n\tconst builder = function () {\n\t\treturn applyStyle.apply(builder, arguments);\n\t};\n\n\tbuilder._styles = _styles;\n\tbuilder._empty = _empty;\n\n\tconst self = this;\n\n\tObject.defineProperty(builder, 'level', {\n\t\tenumerable: true,\n\t\tget() {\n\t\t\treturn self.level;\n\t\t},\n\t\tset(level) {\n\t\t\tself.level = level;\n\t\t}\n\t});\n\n\tObject.defineProperty(builder, 'enabled', {\n\t\tenumerable: true,\n\t\tget() {\n\t\t\treturn self.enabled;\n\t\t},\n\t\tset(enabled) {\n\t\t\tself.enabled = enabled;\n\t\t}\n\t});\n\n\t// See below for fix regarding invisible grey/dim combination on Windows\n\tbuilder.hasGrey = this.hasGrey || key === 'gray' || key === 'grey';\n\n\t// `__proto__` is used because we must return a function, but there is\n\t// no way to create a function with a different prototype\n\tbuilder.__proto__ = proto; // eslint-disable-line no-proto\n\n\treturn builder;\n}\n\nfunction applyStyle() {\n\t// Support varags, but simply cast to string in case there's only one arg\n\tconst args = arguments;\n\tconst argsLen = args.length;\n\tlet str = String(arguments[0]);\n\n\tif (argsLen === 0) {\n\t\treturn '';\n\t}\n\n\tif (argsLen > 1) {\n\t\t// Don't slice `arguments`, it prevents V8 optimizations\n\t\tfor (let a = 1; a < argsLen; a++) {\n\t\t\tstr += ' ' + args[a];\n\t\t}\n\t}\n\n\tif (!this.enabled || this.level <= 0 || !str) {\n\t\treturn this._empty ? '' : str;\n\t}\n\n\t// Turns out that on Windows dimmed gray text becomes invisible in cmd.exe,\n\t// see https://github.com/chalk/chalk/issues/58\n\t// If we're on Windows and we're dealing with a gray color, temporarily make 'dim' a noop.\n\tconst originalDim = ansiStyles.dim.open;\n\tif (isSimpleWindowsTerm && this.hasGrey) {\n\t\tansiStyles.dim.open = '';\n\t}\n\n\tfor (const code of this._styles.slice().reverse()) {\n\t\t// Replace any instances already present with a re-opening code\n\t\t// otherwise only the part of the string until said closing code\n\t\t// will be colored, and the rest will simply be 'plain'.\n\t\tstr = code.open + str.replace(code.closeRe, code.open) + code.close;\n\n\t\t// Close the styling before a linebreak and reopen\n\t\t// after next line to fix a bleed issue on macOS\n\t\t// https://github.com/chalk/chalk/pull/92\n\t\tstr = str.replace(/\\r?\\n/g, `${code.close}$&${code.open}`);\n\t}\n\n\t// Reset the original `dim` if we changed it to work around the Windows dimmed gray issue\n\tansiStyles.dim.open = originalDim;\n\n\treturn str;\n}\n\nfunction chalkTag(chalk, strings) {\n\tif (!Array.isArray(strings)) {\n\t\t// If chalk() was called by itself or with a string,\n\t\t// return the string itself as a string.\n\t\treturn [].slice.call(arguments, 1).join(' ');\n\t}\n\n\tconst args = [].slice.call(arguments, 2);\n\tconst parts = [strings.raw[0]];\n\n\tfor (let i = 1; i < strings.length; i++) {\n\t\tparts.push(String(args[i - 1]).replace(/[{}\\\\]/g, '\\\\$&'));\n\t\tparts.push(String(strings.raw[i]));\n\t}\n\n\treturn template(chalk, parts.join(''));\n}\n\nObject.defineProperties(Chalk.prototype, styles);\n\nmodule.exports = Chalk(); // eslint-disable-line new-cap\nmodule.exports.supportsColor = stdoutColor;\nmodule.exports.default = module.exports; // For TypeScript\n","'use strict';\nconst colorConvert = require('color-convert');\n\nconst wrapAnsi16 = (fn, offset) => function () {\n\tconst code = fn.apply(colorConvert, arguments);\n\treturn `\\u001B[${code + offset}m`;\n};\n\nconst wrapAnsi256 = (fn, offset) => function () {\n\tconst code = fn.apply(colorConvert, arguments);\n\treturn `\\u001B[${38 + offset};5;${code}m`;\n};\n\nconst wrapAnsi16m = (fn, offset) => function () {\n\tconst rgb = fn.apply(colorConvert, arguments);\n\treturn `\\u001B[${38 + offset};2;${rgb[0]};${rgb[1]};${rgb[2]}m`;\n};\n\nfunction assembleStyles() {\n\tconst codes = new Map();\n\tconst styles = {\n\t\tmodifier: {\n\t\t\treset: [0, 0],\n\t\t\t// 21 isn't widely supported and 22 does the same thing\n\t\t\tbold: [1, 22],\n\t\t\tdim: [2, 22],\n\t\t\titalic: [3, 23],\n\t\t\tunderline: [4, 24],\n\t\t\tinverse: [7, 27],\n\t\t\thidden: [8, 28],\n\t\t\tstrikethrough: [9, 29]\n\t\t},\n\t\tcolor: {\n\t\t\tblack: [30, 39],\n\t\t\tred: [31, 39],\n\t\t\tgreen: [32, 39],\n\t\t\tyellow: [33, 39],\n\t\t\tblue: [34, 39],\n\t\t\tmagenta: [35, 39],\n\t\t\tcyan: [36, 39],\n\t\t\twhite: [37, 39],\n\t\t\tgray: [90, 39],\n\n\t\t\t// Bright color\n\t\t\tredBright: [91, 39],\n\t\t\tgreenBright: [92, 39],\n\t\t\tyellowBright: [93, 39],\n\t\t\tblueBright: [94, 39],\n\t\t\tmagentaBright: [95, 39],\n\t\t\tcyanBright: [96, 39],\n\t\t\twhiteBright: [97, 39]\n\t\t},\n\t\tbgColor: {\n\t\t\tbgBlack: [40, 49],\n\t\t\tbgRed: [41, 49],\n\t\t\tbgGreen: [42, 49],\n\t\t\tbgYellow: [43, 49],\n\t\t\tbgBlue: [44, 49],\n\t\t\tbgMagenta: [45, 49],\n\t\t\tbgCyan: [46, 49],\n\t\t\tbgWhite: [47, 49],\n\n\t\t\t// Bright color\n\t\t\tbgBlackBright: [100, 49],\n\t\t\tbgRedBright: [101, 49],\n\t\t\tbgGreenBright: [102, 49],\n\t\t\tbgYellowBright: [103, 49],\n\t\t\tbgBlueBright: [104, 49],\n\t\t\tbgMagentaBright: [105, 49],\n\t\t\tbgCyanBright: [106, 49],\n\t\t\tbgWhiteBright: [107, 49]\n\t\t}\n\t};\n\n\t// Fix humans\n\tstyles.color.grey = styles.color.gray;\n\n\tfor (const groupName of Object.keys(styles)) {\n\t\tconst group = styles[groupName];\n\n\t\tfor (const styleName of Object.keys(group)) {\n\t\t\tconst style = group[styleName];\n\n\t\t\tstyles[styleName] = {\n\t\t\t\topen: `\\u001B[${style[0]}m`,\n\t\t\t\tclose: `\\u001B[${style[1]}m`\n\t\t\t};\n\n\t\t\tgroup[styleName] = styles[styleName];\n\n\t\t\tcodes.set(style[0], style[1]);\n\t\t}\n\n\t\tObject.defineProperty(styles, groupName, {\n\t\t\tvalue: group,\n\t\t\tenumerable: false\n\t\t});\n\n\t\tObject.defineProperty(styles, 'codes', {\n\t\t\tvalue: codes,\n\t\t\tenumerable: false\n\t\t});\n\t}\n\n\tconst ansi2ansi = n => n;\n\tconst rgb2rgb = (r, g, b) => [r, g, b];\n\n\tstyles.color.close = '\\u001B[39m';\n\tstyles.bgColor.close = '\\u001B[49m';\n\n\tstyles.color.ansi = {\n\t\tansi: wrapAnsi16(ansi2ansi, 0)\n\t};\n\tstyles.color.ansi256 = {\n\t\tansi256: wrapAnsi256(ansi2ansi, 0)\n\t};\n\tstyles.color.ansi16m = {\n\t\trgb: wrapAnsi16m(rgb2rgb, 0)\n\t};\n\n\tstyles.bgColor.ansi = {\n\t\tansi: wrapAnsi16(ansi2ansi, 10)\n\t};\n\tstyles.bgColor.ansi256 = {\n\t\tansi256: wrapAnsi256(ansi2ansi, 10)\n\t};\n\tstyles.bgColor.ansi16m = {\n\t\trgb: wrapAnsi16m(rgb2rgb, 10)\n\t};\n\n\tfor (let key of Object.keys(colorConvert)) {\n\t\tif (typeof colorConvert[key] !== 'object') {\n\t\t\tcontinue;\n\t\t}\n\n\t\tconst suite = colorConvert[key];\n\n\t\tif (key === 'ansi16') {\n\t\t\tkey = 'ansi';\n\t\t}\n\n\t\tif ('ansi16' in suite) {\n\t\t\tstyles.color.ansi[key] = wrapAnsi16(suite.ansi16, 0);\n\t\t\tstyles.bgColor.ansi[key] = wrapAnsi16(suite.ansi16, 10);\n\t\t}\n\n\t\tif ('ansi256' in suite) {\n\t\t\tstyles.color.ansi256[key] = wrapAnsi256(suite.ansi256, 0);\n\t\t\tstyles.bgColor.ansi256[key] = wrapAnsi256(suite.ansi256, 10);\n\t\t}\n\n\t\tif ('rgb' in suite) {\n\t\t\tstyles.color.ansi16m[key] = wrapAnsi16m(suite.rgb, 0);\n\t\t\tstyles.bgColor.ansi16m[key] = wrapAnsi16m(suite.rgb, 10);\n\t\t}\n\t}\n\n\treturn styles;\n}\n\n// Make the export immutable\nObject.defineProperty(module, 'exports', {\n\tenumerable: true,\n\tget: assembleStyles\n});\n","var conversions = require('./conversions');\nvar route = require('./route');\n\nvar convert = {};\n\nvar models = Object.keys(conversions);\n\nfunction wrapRaw(fn) {\n\tvar wrappedFn = function (args) {\n\t\tif (args === undefined || args === null) {\n\t\t\treturn args;\n\t\t}\n\n\t\tif (arguments.length > 1) {\n\t\t\targs = Array.prototype.slice.call(arguments);\n\t\t}\n\n\t\treturn fn(args);\n\t};\n\n\t// preserve .conversion property if there is one\n\tif ('conversion' in fn) {\n\t\twrappedFn.conversion = fn.conversion;\n\t}\n\n\treturn wrappedFn;\n}\n\nfunction wrapRounded(fn) {\n\tvar wrappedFn = function (args) {\n\t\tif (args === undefined || args === null) {\n\t\t\treturn args;\n\t\t}\n\n\t\tif (arguments.length > 1) {\n\t\t\targs = Array.prototype.slice.call(arguments);\n\t\t}\n\n\t\tvar result = fn(args);\n\n\t\t// we're assuming the result is an array here.\n\t\t// see notice in conversions.js; don't use box types\n\t\t// in conversion functions.\n\t\tif (typeof result === 'object') {\n\t\t\tfor (var len = result.length, i = 0; i < len; i++) {\n\t\t\t\tresult[i] = Math.round(result[i]);\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t};\n\n\t// preserve .conversion property if there is one\n\tif ('conversion' in fn) {\n\t\twrappedFn.conversion = fn.conversion;\n\t}\n\n\treturn wrappedFn;\n}\n\nmodels.forEach(function (fromModel) {\n\tconvert[fromModel] = {};\n\n\tObject.defineProperty(convert[fromModel], 'channels', {value: conversions[fromModel].channels});\n\tObject.defineProperty(convert[fromModel], 'labels', {value: conversions[fromModel].labels});\n\n\tvar routes = route(fromModel);\n\tvar routeModels = Object.keys(routes);\n\n\trouteModels.forEach(function (toModel) {\n\t\tvar fn = routes[toModel];\n\n\t\tconvert[fromModel][toModel] = wrapRounded(fn);\n\t\tconvert[fromModel][toModel].raw = wrapRaw(fn);\n\t});\n});\n\nmodule.exports = convert;\n","'use strict'\r\n\r\nmodule.exports = {\r\n\t\"aliceblue\": [240, 248, 255],\r\n\t\"antiquewhite\": [250, 235, 215],\r\n\t\"aqua\": [0, 255, 255],\r\n\t\"aquamarine\": [127, 255, 212],\r\n\t\"azure\": [240, 255, 255],\r\n\t\"beige\": [245, 245, 220],\r\n\t\"bisque\": [255, 228, 196],\r\n\t\"black\": [0, 0, 0],\r\n\t\"blanchedalmond\": [255, 235, 205],\r\n\t\"blue\": [0, 0, 255],\r\n\t\"blueviolet\": [138, 43, 226],\r\n\t\"brown\": [165, 42, 42],\r\n\t\"burlywood\": [222, 184, 135],\r\n\t\"cadetblue\": [95, 158, 160],\r\n\t\"chartreuse\": [127, 255, 0],\r\n\t\"chocolate\": [210, 105, 30],\r\n\t\"coral\": [255, 127, 80],\r\n\t\"cornflowerblue\": [100, 149, 237],\r\n\t\"cornsilk\": [255, 248, 220],\r\n\t\"crimson\": [220, 20, 60],\r\n\t\"cyan\": [0, 255, 255],\r\n\t\"darkblue\": [0, 0, 139],\r\n\t\"darkcyan\": [0, 139, 139],\r\n\t\"darkgoldenrod\": [184, 134, 11],\r\n\t\"darkgray\": [169, 169, 169],\r\n\t\"darkgreen\": [0, 100, 0],\r\n\t\"darkgrey\": [169, 169, 169],\r\n\t\"darkkhaki\": [189, 183, 107],\r\n\t\"darkmagenta\": [139, 0, 139],\r\n\t\"darkolivegreen\": [85, 107, 47],\r\n\t\"darkorange\": [255, 140, 0],\r\n\t\"darkorchid\": [153, 50, 204],\r\n\t\"darkred\": [139, 0, 0],\r\n\t\"darksalmon\": [233, 150, 122],\r\n\t\"darkseagreen\": [143, 188, 143],\r\n\t\"darkslateblue\": [72, 61, 139],\r\n\t\"darkslategray\": [47, 79, 79],\r\n\t\"darkslategrey\": [47, 79, 79],\r\n\t\"darkturquoise\": [0, 206, 209],\r\n\t\"darkviolet\": [148, 0, 211],\r\n\t\"deeppink\": [255, 20, 147],\r\n\t\"deepskyblue\": [0, 191, 255],\r\n\t\"dimgray\": [105, 105, 105],\r\n\t\"dimgrey\": [105, 105, 105],\r\n\t\"dodgerblue\": [30, 144, 255],\r\n\t\"firebrick\": [178, 34, 34],\r\n\t\"floralwhite\": [255, 250, 240],\r\n\t\"forestgreen\": [34, 139, 34],\r\n\t\"fuchsia\": [255, 0, 255],\r\n\t\"gainsboro\": [220, 220, 220],\r\n\t\"ghostwhite\": [248, 248, 255],\r\n\t\"gold\": [255, 215, 0],\r\n\t\"goldenrod\": [218, 165, 32],\r\n\t\"gray\": [128, 128, 128],\r\n\t\"green\": [0, 128, 0],\r\n\t\"greenyellow\": [173, 255, 47],\r\n\t\"grey\": [128, 128, 128],\r\n\t\"honeydew\": [240, 255, 240],\r\n\t\"hotpink\": [255, 105, 180],\r\n\t\"indianred\": [205, 92, 92],\r\n\t\"indigo\": [75, 0, 130],\r\n\t\"ivory\": [255, 255, 240],\r\n\t\"khaki\": [240, 230, 140],\r\n\t\"lavender\": [230, 230, 250],\r\n\t\"lavenderblush\": [255, 240, 245],\r\n\t\"lawngreen\": [124, 252, 0],\r\n\t\"lemonchiffon\": [255, 250, 205],\r\n\t\"lightblue\": [173, 216, 230],\r\n\t\"lightcoral\": [240, 128, 128],\r\n\t\"lightcyan\": [224, 255, 255],\r\n\t\"lightgoldenrodyellow\": [250, 250, 210],\r\n\t\"lightgray\": [211, 211, 211],\r\n\t\"lightgreen\": [144, 238, 144],\r\n\t\"lightgrey\": [211, 211, 211],\r\n\t\"lightpink\": [255, 182, 193],\r\n\t\"lightsalmon\": [255, 160, 122],\r\n\t\"lightseagreen\": [32, 178, 170],\r\n\t\"lightskyblue\": [135, 206, 250],\r\n\t\"lightslategray\": [119, 136, 153],\r\n\t\"lightslategrey\": [119, 136, 153],\r\n\t\"lightsteelblue\": [176, 196, 222],\r\n\t\"lightyellow\": [255, 255, 224],\r\n\t\"lime\": [0, 255, 0],\r\n\t\"limegreen\": [50, 205, 50],\r\n\t\"linen\": [250, 240, 230],\r\n\t\"magenta\": [255, 0, 255],\r\n\t\"maroon\": [128, 0, 0],\r\n\t\"mediumaquamarine\": [102, 205, 170],\r\n\t\"mediumblue\": [0, 0, 205],\r\n\t\"mediumorchid\": [186, 85, 211],\r\n\t\"mediumpurple\": [147, 112, 219],\r\n\t\"mediumseagreen\": [60, 179, 113],\r\n\t\"mediumslateblue\": [123, 104, 238],\r\n\t\"mediumspringgreen\": [0, 250, 154],\r\n\t\"mediumturquoise\": [72, 209, 204],\r\n\t\"mediumvioletred\": [199, 21, 133],\r\n\t\"midnightblue\": [25, 25, 112],\r\n\t\"mintcream\": [245, 255, 250],\r\n\t\"mistyrose\": [255, 228, 225],\r\n\t\"moccasin\": [255, 228, 181],\r\n\t\"navajowhite\": [255, 222, 173],\r\n\t\"navy\": [0, 0, 128],\r\n\t\"oldlace\": [253, 245, 230],\r\n\t\"olive\": [128, 128, 0],\r\n\t\"olivedrab\": [107, 142, 35],\r\n\t\"orange\": [255, 165, 0],\r\n\t\"orangered\": [255, 69, 0],\r\n\t\"orchid\": [218, 112, 214],\r\n\t\"palegoldenrod\": [238, 232, 170],\r\n\t\"palegreen\": [152, 251, 152],\r\n\t\"paleturquoise\": [175, 238, 238],\r\n\t\"palevioletred\": [219, 112, 147],\r\n\t\"papayawhip\": [255, 239, 213],\r\n\t\"peachpuff\": [255, 218, 185],\r\n\t\"peru\": [205, 133, 63],\r\n\t\"pink\": [255, 192, 203],\r\n\t\"plum\": [221, 160, 221],\r\n\t\"powderblue\": [176, 224, 230],\r\n\t\"purple\": [128, 0, 128],\r\n\t\"rebeccapurple\": [102, 51, 153],\r\n\t\"red\": [255, 0, 0],\r\n\t\"rosybrown\": [188, 143, 143],\r\n\t\"royalblue\": [65, 105, 225],\r\n\t\"saddlebrown\": [139, 69, 19],\r\n\t\"salmon\": [250, 128, 114],\r\n\t\"sandybrown\": [244, 164, 96],\r\n\t\"seagreen\": [46, 139, 87],\r\n\t\"seashell\": [255, 245, 238],\r\n\t\"sienna\": [160, 82, 45],\r\n\t\"silver\": [192, 192, 192],\r\n\t\"skyblue\": [135, 206, 235],\r\n\t\"slateblue\": [106, 90, 205],\r\n\t\"slategray\": [112, 128, 144],\r\n\t\"slategrey\": [112, 128, 144],\r\n\t\"snow\": [255, 250, 250],\r\n\t\"springgreen\": [0, 255, 127],\r\n\t\"steelblue\": [70, 130, 180],\r\n\t\"tan\": [210, 180, 140],\r\n\t\"teal\": [0, 128, 128],\r\n\t\"thistle\": [216, 191, 216],\r\n\t\"tomato\": [255, 99, 71],\r\n\t\"turquoise\": [64, 224, 208],\r\n\t\"violet\": [238, 130, 238],\r\n\t\"wheat\": [245, 222, 179],\r\n\t\"white\": [255, 255, 255],\r\n\t\"whitesmoke\": [245, 245, 245],\r\n\t\"yellow\": [255, 255, 0],\r\n\t\"yellowgreen\": [154, 205, 50]\r\n};\r\n","var conversions = require('./conversions');\n\n/*\n\tthis function routes a model to all other models.\n\n\tall functions that are routed have a property `.conversion` attached\n\tto the returned synthetic function. This property is an array\n\tof strings, each with the steps in between the 'from' and 'to'\n\tcolor models (inclusive).\n\n\tconversions that are not possible simply are not included.\n*/\n\nfunction buildGraph() {\n\tvar graph = {};\n\t// https://jsperf.com/object-keys-vs-for-in-with-closure/3\n\tvar models = Object.keys(conversions);\n\n\tfor (var len = models.length, i = 0; i < len; i++) {\n\t\tgraph[models[i]] = {\n\t\t\t// http://jsperf.com/1-vs-infinity\n\t\t\t// micro-opt, but this is simple.\n\t\t\tdistance: -1,\n\t\t\tparent: null\n\t\t};\n\t}\n\n\treturn graph;\n}\n\n// https://en.wikipedia.org/wiki/Breadth-first_search\nfunction deriveBFS(fromModel) {\n\tvar graph = buildGraph();\n\tvar queue = [fromModel]; // unshift -> queue -> pop\n\n\tgraph[fromModel].distance = 0;\n\n\twhile (queue.length) {\n\t\tvar current = queue.pop();\n\t\tvar adjacents = Object.keys(conversions[current]);\n\n\t\tfor (var len = adjacents.length, i = 0; i < len; i++) {\n\t\t\tvar adjacent = adjacents[i];\n\t\t\tvar node = graph[adjacent];\n\n\t\t\tif (node.distance === -1) {\n\t\t\t\tnode.distance = graph[current].distance + 1;\n\t\t\t\tnode.parent = current;\n\t\t\t\tqueue.unshift(adjacent);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn graph;\n}\n\nfunction link(from, to) {\n\treturn function (args) {\n\t\treturn to(from(args));\n\t};\n}\n\nfunction wrapConversion(toModel, graph) {\n\tvar path = [graph[toModel].parent, toModel];\n\tvar fn = conversions[graph[toModel].parent][toModel];\n\n\tvar cur = graph[toModel].parent;\n\twhile (graph[cur].parent) {\n\t\tpath.unshift(graph[cur].parent);\n\t\tfn = link(conversions[graph[cur].parent][cur], fn);\n\t\tcur = graph[cur].parent;\n\t}\n\n\tfn.conversion = path;\n\treturn fn;\n}\n\nmodule.exports = function (fromModel) {\n\tvar graph = deriveBFS(fromModel);\n\tvar conversion = {};\n\n\tvar models = Object.keys(graph);\n\tfor (var len = models.length, i = 0; i < len; i++) {\n\t\tvar toModel = models[i];\n\t\tvar node = graph[toModel];\n\n\t\tif (node.parent === null) {\n\t\t\t// no possible conversion, or this node is the source model.\n\t\t\tcontinue;\n\t\t}\n\n\t\tconversion[toModel] = wrapConversion(toModel, graph);\n\t}\n\n\treturn conversion;\n};\n\n","'use strict';\nmodule.exports = {\n\tstdout: false,\n\tstderr: false\n};\n","'use strict';\nconst TEMPLATE_REGEX = /(?:\\\\(u[a-f\\d]{4}|x[a-f\\d]{2}|.))|(?:\\{(~)?(\\w+(?:\\([^)]*\\))?(?:\\.\\w+(?:\\([^)]*\\))?)*)(?:[ \\t]|(?=\\r?\\n)))|(\\})|((?:.|[\\r\\n\\f])+?)/gi;\nconst STYLE_REGEX = /(?:^|\\.)(\\w+)(?:\\(([^)]*)\\))?/g;\nconst STRING_REGEX = /^(['\"])((?:\\\\.|(?!\\1)[^\\\\])*)\\1$/;\nconst ESCAPE_REGEX = /\\\\(u[a-f\\d]{4}|x[a-f\\d]{2}|.)|([^\\\\])/gi;\n\nconst ESCAPES = new Map([\n\t['n', '\\n'],\n\t['r', '\\r'],\n\t['t', '\\t'],\n\t['b', '\\b'],\n\t['f', '\\f'],\n\t['v', '\\v'],\n\t['0', '\\0'],\n\t['\\\\', '\\\\'],\n\t['e', '\\u001B'],\n\t['a', '\\u0007']\n]);\n\nfunction unescape(c) {\n\tif ((c[0] === 'u' && c.length === 5) || (c[0] === 'x' && c.length === 3)) {\n\t\treturn String.fromCharCode(parseInt(c.slice(1), 16));\n\t}\n\n\treturn ESCAPES.get(c) || c;\n}\n\nfunction parseArguments(name, args) {\n\tconst results = [];\n\tconst chunks = args.trim().split(/\\s*,\\s*/g);\n\tlet matches;\n\n\tfor (const chunk of chunks) {\n\t\tif (!isNaN(chunk)) {\n\t\t\tresults.push(Number(chunk));\n\t\t} else if ((matches = chunk.match(STRING_REGEX))) {\n\t\t\tresults.push(matches[2].replace(ESCAPE_REGEX, (m, escape, chr) => escape ? unescape(escape) : chr));\n\t\t} else {\n\t\t\tthrow new Error(`Invalid Chalk template style argument: ${chunk} (in style '${name}')`);\n\t\t}\n\t}\n\n\treturn results;\n}\n\nfunction parseStyle(style) {\n\tSTYLE_REGEX.lastIndex = 0;\n\n\tconst results = [];\n\tlet matches;\n\n\twhile ((matches = STYLE_REGEX.exec(style)) !== null) {\n\t\tconst name = matches[1];\n\n\t\tif (matches[2]) {\n\t\t\tconst args = parseArguments(name, matches[2]);\n\t\t\tresults.push([name].concat(args));\n\t\t} else {\n\t\t\tresults.push([name]);\n\t\t}\n\t}\n\n\treturn results;\n}\n\nfunction buildStyle(chalk, styles) {\n\tconst enabled = {};\n\n\tfor (const layer of styles) {\n\t\tfor (const style of layer.styles) {\n\t\t\tenabled[style[0]] = layer.inverse ? null : style.slice(1);\n\t\t}\n\t}\n\n\tlet current = chalk;\n\tfor (const styleName of Object.keys(enabled)) {\n\t\tif (Array.isArray(enabled[styleName])) {\n\t\t\tif (!(styleName in current)) {\n\t\t\t\tthrow new Error(`Unknown Chalk style: ${styleName}`);\n\t\t\t}\n\n\t\t\tif (enabled[styleName].length > 0) {\n\t\t\t\tcurrent = current[styleName].apply(current, enabled[styleName]);\n\t\t\t} else {\n\t\t\t\tcurrent = current[styleName];\n\t\t\t}\n\t\t}\n\t}\n\n\treturn current;\n}\n\nmodule.exports = (chalk, tmp) => {\n\tconst styles = [];\n\tconst chunks = [];\n\tlet chunk = [];\n\n\t// eslint-disable-next-line max-params\n\ttmp.replace(TEMPLATE_REGEX, (m, escapeChar, inverse, style, close, chr) => {\n\t\tif (escapeChar) {\n\t\t\tchunk.push(unescape(escapeChar));\n\t\t} else if (style) {\n\t\t\tconst str = chunk.join('');\n\t\t\tchunk = [];\n\t\t\tchunks.push(styles.length === 0 ? str : buildStyle(chalk, styles)(str));\n\t\t\tstyles.push({inverse, styles: parseStyle(style)});\n\t\t} else if (close) {\n\t\t\tif (styles.length === 0) {\n\t\t\t\tthrow new Error('Found extraneous } in Chalk template literal');\n\t\t\t}\n\n\t\t\tchunks.push(buildStyle(chalk, styles)(chunk.join('')));\n\t\t\tchunk = [];\n\t\t\tstyles.pop();\n\t\t} else {\n\t\t\tchunk.push(chr);\n\t\t}\n\t});\n\n\tchunks.push(chunk.join(''));\n\n\tif (styles.length > 0) {\n\t\tconst errMsg = `Chalk template literal is missing ${styles.length} closing bracket${styles.length === 1 ? '' : 's'} (\\`}\\`)`;\n\t\tthrow new Error(errMsg);\n\t}\n\n\treturn chunks.join('');\n};\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = literalTemplate;\n\nvar _options = require(\"./options\");\n\nvar _parse = _interopRequireDefault(require(\"./parse\"));\n\nvar _populate = _interopRequireDefault(require(\"./populate\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction literalTemplate(formatter, tpl, opts) {\n  const {\n    metadata,\n    names\n  } = buildLiteralData(formatter, tpl, opts);\n  return arg => {\n    const defaultReplacements = {};\n    arg.forEach((replacement, i) => {\n      defaultReplacements[names[i]] = replacement;\n    });\n    return arg => {\n      const replacements = (0, _options.normalizeReplacements)(arg);\n\n      if (replacements) {\n        Object.keys(replacements).forEach(key => {\n          if (Object.prototype.hasOwnProperty.call(defaultReplacements, key)) {\n            throw new Error(\"Unexpected replacement overlap.\");\n          }\n        });\n      }\n\n      return formatter.unwrap((0, _populate.default)(metadata, replacements ? Object.assign(replacements, defaultReplacements) : defaultReplacements));\n    };\n  };\n}\n\nfunction buildLiteralData(formatter, tpl, opts) {\n  let names;\n  let nameSet;\n  let metadata;\n  let prefix = \"\";\n\n  do {\n    prefix += \"$\";\n    const result = buildTemplateCode(tpl, prefix);\n    names = result.names;\n    nameSet = new Set(names);\n    metadata = (0, _parse.default)(formatter, formatter.code(result.code), {\n      parser: opts.parser,\n      placeholderWhitelist: new Set(result.names.concat(opts.placeholderWhitelist ? Array.from(opts.placeholderWhitelist) : [])),\n      placeholderPattern: opts.placeholderPattern,\n      preserveComments: opts.preserveComments,\n      syntacticPlaceholders: opts.syntacticPlaceholders\n    });\n  } while (metadata.placeholders.some(placeholder => placeholder.isDuplicate && nameSet.has(placeholder.name)));\n\n  return {\n    metadata,\n    names\n  };\n}\n\nfunction buildTemplateCode(tpl, prefix) {\n  const names = [];\n  let code = tpl[0];\n\n  for (let i = 1; i < tpl.length; i++) {\n    const value = `${prefix}${i - 1}`;\n    names.push(value);\n    code += value + tpl[i];\n  }\n\n  return {\n    names,\n    code\n  };\n}"],"sourceRoot":""}