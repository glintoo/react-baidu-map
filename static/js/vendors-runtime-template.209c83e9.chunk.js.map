{"version":3,"sources":["../node_modules/@babel/plugin-transform-classes/lib/transformClass.js","../node_modules/@babel/plugin-transform-classes/lib/inline-createSuper-helpers.js","../node_modules/@babel/template/lib/index.js","../node_modules/@babel/parser/lib/index.js","../node_modules/@babel/code-frame/lib/index.js","../node_modules/@babel/template/lib/options.js","../node_modules/@babel/template/lib/parse.js","../node_modules/@babel/highlight/node_modules/color-convert/conversions.js","../node_modules/@babel/template/lib/populate.js","../node_modules/@babel/plugin-transform-classes/lib/index.js","../node_modules/@babel/template/lib/formatters.js","../node_modules/@babel/template/lib/builder.js","../node_modules/@babel/template/lib/string.js","../node_modules/@babel/highlight/lib/index.js","../node_modules/@babel/highlight/node_modules/chalk/index.js","../node_modules/@babel/highlight/node_modules/ansi-styles/index.js","../node_modules/@babel/highlight/node_modules/color-convert/index.js","../node_modules/@babel/highlight/node_modules/color-name/index.js","../node_modules/@babel/highlight/node_modules/color-convert/route.js","../node_modules/@babel/highlight/node_modules/supports-color/browser.js","../node_modules/@babel/highlight/node_modules/chalk/templates.js","../node_modules/@babel/template/lib/literal.js"],"names":["Object","defineProperty","exports","value","default","path","file","builtinClasses","isLoose","assumptions","classState","parent","undefined","scope","node","classId","classRef","superFnId","superName","superReturns","isDerived","extendsNative","construct","constructorBody","userConstructor","userConstructorPath","hasConstructor","staticPropBody","body","superThises","pushedConstructor","pushedInherits","protoAlias","methods","instance","hasComputed","list","map","Map","static","setState","newState","assign","findThisesVisitor","_core","traverse","visitors","merge","_helperReplaceSupers","environmentVisitor","ThisExpression","push","buildBody","paths","get","equals","params","constructor","template","expression","ast","types","blockStatement","unshiftContainer","classMethod","identifier","maybeCreateConstructor","classBodyPaths","isClassProperty","buildCodeFrameError","decorators","isClassMethod","isConstructor","kind","methodPath","objectRef","superRef","constantSuper","refToPreserve","replace","ReturnStatement","getFunctionParent","isArrowFunctionExpression","pushConstructor","pushMethod","pushBody","thisRef","ref","generateDeclaredUidIdentifier","cloneNode","thisPath","parentPath","isMemberExpression","object","replaceWith","callExpression","addHelper","bareSupers","Set","Super","isCallExpression","callee","add","wrapReturn","guaranteedSuperBeforeFinish","size","bareSuper","wrapSuperCall","find","isLoop","isConditional","returnArg","thisExpr","logicalExpression","concat","bodyPaths","length","pop","isReturnStatement","pushContainer","returnStatement","returnPath","argument","verifyConstructor","inherits","pushDescriptors","pushInheritsToBody","props","placement","desc","obj","objectExpression","objectProperty","key","properties","args","arrayExpression","nullLiteral","lastNonNullIndex","i","isNullLiteral","slice","expressionStatement","call","bareSuperNode","superIsCallableConstructor","arguments","unshift","thisExpression","isSpreadElement","isIdentifier","name","memberExpression","_helperOptimiseCallExpression","isExpressionStatement","container","assignmentExpression","setClassMethods","generateUidIdentifier","classProto","protoDeclaration","variableDeclaration","variableDeclarator","insertProtoAliasOnce","methodName","computed","isLiteral","func","functionExpression","generator","async","toComputedKey","isStringLiteral","_helperFunctionName","id","expr","inheritsComments","processMethod","descriptor","descKey","isNumericLiteral","isBigIntLiteral","stringLiteral","String","fn","toExpression","has","set","method","directives","hasInstanceDescriptors","hasStaticDescriptors","pushConstructorToBody","_inlineCreateSuperHelpers","superClass","hasBinding","buildConstructor","closureParams","closureArgs","arg","_helperAnnotateAsPure","param","generateUidIdentifierBasedOnNode","setupClosureParamsArgs","noClassCalls","isStrict","isInStrictMode","constructorOnly","directive","directiveLiteral","arrowFunctionExpression","classTransformer","_interopRequireDefault","require","__esModule","cache","_getRequireWildcardCache","newObj","hasPropertyDescriptor","getOwnPropertyDescriptor","prototype","hasOwnProperty","_interopRequireWildcard","WeakMap","functionDeclaration","helperIDs","clone","_unused","helper","CREATE_SUPER","GET_PROTOTYPE_OF","POSSIBLE_CONSTRUCTOR_RETURN","registerDeclaration","statement","program","statements","smart","formatters","_builder","_default","bind","beforeExpr","startsExpr","prefix","TokenType","label","conf","this","keyword","rightAssociative","isAssign","postfix","binop","updateContext","keywords","createKeyword","options","token","createBinop","num","bigint","decimal","regexp","string","eof","bracketL","bracketHashL","bracketBarL","bracketR","bracketBarR","braceL","braceBarL","braceHashL","braceR","braceBarR","parenL","parenR","comma","semi","colon","doubleColon","dot","question","questionDot","arrow","ellipsis","backQuote","dollarBraceL","at","hash","interpreterDirective","eq","incDec","bang","tilde","pipeline","nullishCoalescing","logicalOR","logicalAND","bitwiseOR","bitwiseXOR","bitwiseAND","equality","relational","bitShift","plusMin","modulo","star","slash","exponent","_break","_case","_catch","_continue","_debugger","_do","_else","_finally","_for","_function","_if","_return","_switch","_throw","_try","_var","_const","_while","_with","_new","_this","_super","_class","_extends","_export","_import","_null","_true","_false","_in","_instanceof","_typeof","_void","_delete","lineBreak","lineBreakG","RegExp","source","isNewLine","code","skipWhiteSpace","isWhitespace","Position","line","col","column","SourceLocation","start","end","filename","identifierName","last","stack","CommentsParser","comment","loc","state","trailingComments","leadingComments","elements","takeAllComments","lastElement","j","commentPreviousNode","splice","newTrailingComments","leadingComment","type","firstChild","lastChild","commentStack","lastInStack","adjustCommentsAfterTrailingComma","innerComments","firstTrailingCommentIndex","findIndex","sawUnambiguousESM","ambiguousScriptDifferentAst","plugins","plugin","hasPlugin","ErrorCodes","freeze","SyntaxError","SourceTypeModuleError","ErrorMessages","makeErrorTemplates","AccessorIsGenerator","ArgumentsInClass","AsyncFunctionInSingleStatementContext","AwaitBindingIdentifier","AwaitBindingIdentifierInStaticBlock","AwaitExpressionFormalParameter","AwaitNotInAsyncContext","AwaitNotInAsyncFunction","BadGetterArity","BadSetterArity","BadSetterRestParameter","ConstructorClassField","ConstructorClassPrivateField","ConstructorIsAccessor","ConstructorIsAsync","ConstructorIsGenerator","DeclarationMissingInitializer","DecoratorBeforeExport","DecoratorConstructor","DecoratorExportClass","DecoratorSemicolon","DecoratorStaticBlock","DeletePrivateField","DestructureNamedImport","DuplicateConstructor","DuplicateDefaultExport","DuplicateExport","DuplicateProto","DuplicateRegExpFlags","ElementAfterRest","EscapedCharNotAnIdentifier","ExportBindingIsString","ExportDefaultFromAsIdentifier","ForInOfLoopInitializer","ForOfAsync","ForOfLet","GeneratorInSingleStatementContext","IllegalBreakContinue","IllegalLanguageModeDirective","IllegalReturn","ImportBindingIsString","ImportCallArgumentTrailingComma","ImportCallArity","ImportCallNotNewExpression","ImportCallSpreadArgument","InvalidBigIntLiteral","InvalidCodePoint","InvalidDecimal","InvalidDigit","InvalidEscapeSequence","InvalidEscapeSequenceTemplate","InvalidEscapedReservedWord","InvalidIdentifier","InvalidLhs","InvalidLhsBinding","InvalidNumber","InvalidOrMissingExponent","InvalidOrUnexpectedToken","InvalidParenthesizedAssignment","InvalidPrivateFieldResolution","InvalidPropertyBindingPattern","InvalidRecordProperty","InvalidRestAssignmentPattern","LabelRedeclaration","LetInLexicalBinding","LineTerminatorBeforeArrow","MalformedRegExpFlags","MissingClassName","MissingEqInAssignment","MissingSemicolon","MissingUnicodeEscape","MixingCoalesceWithLogical","ModuleAttributeDifferentFromType","ModuleAttributeInvalidValue","ModuleAttributesWithDuplicateKeys","ModuleExportNameHasLoneSurrogate","ModuleExportUndefined","MultipleDefaultsInSwitch","NewlineAfterThrow","NoCatchOrFinally","NumberIdentifier","NumericSeparatorInEscapeSequence","ObsoleteAwaitStar","OptionalChainingNoNew","OptionalChainingNoTemplate","OverrideOnConstructor","ParamDupe","PatternHasAccessor","PatternHasMethod","PipelineBodyNoArrow","PipelineBodySequenceExpression","PipelineHeadSequenceExpression","PipelineTopicUnused","PrimaryTopicNotAllowed","PrimaryTopicRequiresSmartPipeline","PrivateInExpectedIn","PrivateNameRedeclaration","RecordExpressionBarIncorrectEndSyntaxType","RecordExpressionBarIncorrectStartSyntaxType","RecordExpressionHashIncorrectStartSyntaxType","RecordNoProto","RestTrailingComma","SloppyFunction","StaticPrototype","StrictDelete","StrictEvalArguments","StrictEvalArgumentsBinding","StrictFunction","StrictNumericEscape","StrictOctalLiteral","StrictWith","SuperNotAllowed","SuperPrivateField","TrailingDecorator","TupleExpressionBarIncorrectEndSyntaxType","TupleExpressionBarIncorrectStartSyntaxType","TupleExpressionHashIncorrectStartSyntaxType","UnexpectedArgumentPlaceholder","UnexpectedAwaitAfterPipelineBody","UnexpectedDigitAfterHash","UnexpectedImportExport","UnexpectedKeyword","UnexpectedLeadingDecorator","UnexpectedLexicalDeclaration","UnexpectedNewTarget","UnexpectedNumericSeparator","UnexpectedPrivateField","UnexpectedReservedWord","UnexpectedSuper","UnexpectedToken","UnexpectedTokenUnaryExponentiation","UnsupportedBind","UnsupportedDecoratorExport","UnsupportedDefaultExport","UnsupportedImport","UnsupportedMetaProperty","UnsupportedParameterDecorator","UnsupportedPropertyDecorator","UnsupportedSuper","UnterminatedComment","UnterminatedRegExp","UnterminatedString","UnterminatedTemplate","VarRedeclaration","YieldBindingIdentifier","YieldInParameter","ZeroDigitNumericSeparator","SourceTypeModuleErrorMessages","ImportMetaOutsideModule","ImportOutsideModule","messages","templates","keys","forEach","reasonCode","ParserError","pos","startLoc","lastTokStart","lastTokStartLoc","endLoc","lastTokEnd","lastTokEndLoc","input","offset","match","lineStart","lastIndex","exec","index","getLineInfo","raiseWithData","getLocationForPosition","message","_","errorRecovery","errors","error","_raise","data","errorTemplate","errorContext","err","isLookahead","TokContext","isExpr","preserveSpace","override","types$1","braceStatement","braceExpression","recordExpression","templateQuasi","parenStatement","parenExpression","p","readTmplToken","functionStatement","context","out","curContext","exprAllowed","prevType","allowed","isIterator","braceIsBlock","statementParens","hasPrecedingLineBreak","b_stat","nonASCIIidentifierStartChars","nonASCIIidentifierChars","nonASCIIidentifierStart","nonASCIIidentifier","astralIdentifierStartCodes","astralIdentifierCodes","isInAstralSet","isIdentifierStart","test","fromCharCode","isIdentifierChar","reservedWords","keywords$1","reservedWordsStrictSet","reservedWordsStrictBindSet","isReservedWord","word","inModule","isStrictReservedWord","isStrictBindOnlyReservedWord","isStrictBindReservedWord","isKeyword","keywordRelationalOperator","SCOPE_CLASS","SCOPE_TS_MODULE","BIND_FLAGS_CLASS","BIND_FLAGS_TS_ENUM","BIND_FLAGS_TS_CONST_ENUM","BIND_FLAGS_TS_EXPORT_ONLY","BIND_FLAGS_FLOW_DECLARE_FN","BIND_TS_AMBIENT","BIND_NONE","Scope","flags","var","lexical","functions","ScopeHandler","raise","scopeStack","undefinedExports","undefinedPrivateNames","currentVarScope","currentThisScope","treatFunctionsAsVarInScope","currentScope","createScope","bindingType","checkRedeclarationInScope","maybeExportDefined","SCOPE_PROGRAM","delete","isRedeclaredInScope","indexOf","FlowScope","declareFunctions","FlowScopeHandler","includes","reservedTypes","FlowErrors","AmbiguousConditionalArrow","AmbiguousDeclareModuleKind","AssignReservedType","DeclareClassElement","DeclareClassFieldInitializer","DuplicateDeclareModuleExports","EnumBooleanMemberNotInitialized","EnumDuplicateMemberName","EnumInconsistentMemberValues","EnumInvalidExplicitType","EnumInvalidExplicitTypeUnknownSupplied","EnumInvalidMemberInitializerPrimaryType","EnumInvalidMemberInitializerSymbolType","EnumInvalidMemberInitializerUnknownType","EnumInvalidMemberName","EnumNumberMemberNotInitialized","EnumStringMemberInconsistentlyInitailized","GetterMayNotHaveThisParam","ImportTypeShorthandOnlyInPureImport","InexactInsideExact","InexactInsideNonObject","InexactVariance","InvalidNonTypeImportInDeclareModule","MissingTypeParamDefault","NestedDeclareModule","NestedFlowComment","OptionalBindingPattern","SetterMayNotHaveThisParam","SpreadVariance","ThisParamAnnotationRequired","ThisParamBannedInConstructor","ThisParamMayNotBeOptional","ThisParamMustBeFirst","ThisParamNoDefault","TypeBeforeInitializer","TypeCastInPattern","UnexpectedExplicitInexactInObject","UnexpectedReservedType","UnexpectedReservedUnderscore","UnexpectedSpaceBetweenModuloChecks","UnexpectedSpreadType","UnexpectedSubtractionOperand","UnexpectedTokenAfterTypeParameter","UnexpectedTypeParameterBeforeAsyncArrowFunction","UnsupportedDeclareExportKind","UnsupportedStatementInDeclareModule","UnterminatedFlowComment","hasTypeImportKind","importKind","isMaybeDefaultImport","exportSuggestions","const","let","interface","FLOW_PRAGMA_REGEX","entities","quot","amp","apos","lt","gt","nbsp","iexcl","cent","pound","curren","yen","brvbar","sect","uml","copy","ordf","laquo","not","shy","reg","macr","deg","plusmn","sup2","sup3","acute","micro","para","middot","cedil","sup1","ordm","raquo","frac14","frac12","frac34","iquest","Agrave","Aacute","Acirc","Atilde","Auml","Aring","AElig","Ccedil","Egrave","Eacute","Ecirc","Euml","Igrave","Iacute","Icirc","Iuml","ETH","Ntilde","Ograve","Oacute","Ocirc","Otilde","Ouml","times","Oslash","Ugrave","Uacute","Ucirc","Uuml","Yacute","THORN","szlig","agrave","aacute","acirc","atilde","auml","aring","aelig","ccedil","egrave","eacute","ecirc","euml","igrave","iacute","icirc","iuml","eth","ntilde","ograve","oacute","ocirc","otilde","ouml","divide","oslash","ugrave","uacute","ucirc","uuml","yacute","thorn","yuml","OElig","oelig","Scaron","scaron","Yuml","fnof","circ","Alpha","Beta","Gamma","Delta","Epsilon","Zeta","Eta","Theta","Iota","Kappa","Lambda","Mu","Nu","Xi","Omicron","Pi","Rho","Sigma","Tau","Upsilon","Phi","Chi","Psi","Omega","alpha","beta","gamma","delta","epsilon","zeta","eta","theta","iota","kappa","lambda","mu","nu","xi","omicron","pi","rho","sigmaf","sigma","tau","upsilon","phi","chi","psi","omega","thetasym","upsih","piv","ensp","emsp","thinsp","zwnj","zwj","lrm","rlm","ndash","mdash","lsquo","rsquo","sbquo","ldquo","rdquo","bdquo","dagger","Dagger","bull","hellip","permil","prime","Prime","lsaquo","rsaquo","oline","frasl","euro","image","weierp","real","trade","alefsym","larr","uarr","rarr","darr","harr","crarr","lArr","uArr","rArr","dArr","hArr","forall","part","exist","empty","nabla","isin","notin","ni","prod","sum","minus","lowast","radic","prop","infin","ang","and","or","cap","cup","int","there4","sim","cong","asymp","ne","equiv","le","ge","sub","sup","nsub","sube","supe","oplus","otimes","perp","sdot","lceil","rceil","lfloor","rfloor","lang","rang","loz","spades","clubs","hearts","diams","HEX_NUMBER","DECIMAL_NUMBER","JsxErrors","AttributeIsEmpty","MissingClosingTagElement","MissingClosingTagFragment","UnexpectedSequenceExpression","UnsupportedJsxValue","UnterminatedJsxContent","UnwrappedAdjacentJSXElements","isFragment","getQualifiedJSXName","namespace","property","Error","j_oTag","j_cTag","j_expr","jsxName","jsxText","jsxTagStart","jsxTagEnd","TypeScriptScope","enums","constEnums","classes","exportOnlyBindings","TypeScriptScopeHandler","isConst","wasConst","ProductionParameterHandler","stacks","currentFlags","functionFlags","isAsync","isGenerator","nonNull","x","assert","TSErrors","AbstractMethodHasImplementation","AccesorCannotDeclareThisParameter","AccesorCannotHaveTypeParameters","ClassMethodHasDeclare","ClassMethodHasReadonly","ConstructorHasTypeParameters","DeclareAccessor","DeclareClassFieldHasInitializer","DeclareFunctionHasImplementation","DuplicateAccessibilityModifier","DuplicateModifier","EmptyHeritageClauseType","EmptyTypeArguments","EmptyTypeParameters","ExpectedAmbientAfterExportDeclare","ImportAliasHasImportType","IncompatibleModifiers","IndexSignatureHasAbstract","IndexSignatureHasAccessibility","IndexSignatureHasDeclare","IndexSignatureHasOverride","IndexSignatureHasStatic","InvalidModifierOnTypeMember","InvalidModifiersOrder","InvalidTupleMemberLabel","MixedLabeledAndUnlabeledElements","NonAbstractClassHasAbstractMethod","NonClassMethodPropertyHasAbstractModifer","OptionalTypeBeforeRequired","OverrideNotInSubClass","PatternIsOptional","PrivateElementHasAbstract","PrivateElementHasAccessibility","ReadonlyForMethodSignature","SetAccesorCannotHaveOptionalParameter","SetAccesorCannotHaveRestParameter","SetAccesorCannotHaveReturnType","StaticBlockCannotHaveModifier","TypeAnnotationAfterAssign","TypeImportCannotSpecifyDefaultAndNamed","UnexpectedParameterModifier","UnexpectedReadonly","UnexpectedTypeAnnotation","UnexpectedTypeCastInParameter","UnsupportedImportTypeArgument","UnsupportedParameterPropertyKind","UnsupportedSignatureParameterKind","tsIsAccessModifier","modifier","placeholder","PlaceHolderErrors","ClassNameIsRequired","some","Array","isArray","getPluginOption","option","PIPELINE_PROPOSALS","RECORD_AND_TUPLE_SYNTAX_TYPES","mixinPlugins","estree","pattern","regex","e","estreeParseLiteral","bigInt","BigInt","parseLiteral","stmt","startNodeAt","extra","expressionValue","raw","finishNodeAt","isObjectProperty","checkDeclaration","_stmt$expression$extr","parenthesized","addExtra","directiveStatements","d","directiveToStmt","classBody","allowsDirectSuper","parseMethod","typeParameters","refExpressionErrors","estreeParseRegExpLiteral","estreeParseBigIntLiteral","estreeParseDecimalLiteral","convertPrivateNameToPrivateIdentifier","startPos","allowExpression","isMethod","allowDirectSuper","inClassScope","funcNode","startNode","finishNode","propertyNode","isPattern","isAccessor","shorthand","isLHS","toAssignable","optional","exported","specifiers","base","noCalls","optionalChainMember","substring","stop","chain","startNodeAtNode","jsx","chunkStart","ch","charCodeAt","finishToken","jsxReadEntity","jsxReadNewLine","normalizeCRLF","curLine","quote","entity","str","count","substr","fromCodePoint","parseInt","unexpected","next","jsxParseIdentifier","eat","jsxParseNamespacedName","newNode","jsxParseExpressionContainer","parseExprAtom","parseExpression","expect","jsxParseEmptyExpression","parseMaybeAssignAllowIn","jsxParseAttributeValue","jsxParseElementName","jsxParseOpeningElementAfterName","attributes","jsxParseAttribute","selfClosing","children","openingElement","jsxParseOpeningElementAt","closingElement","contents","jsxParseClosingElementAt","jsxParseElementAt","jsxParseSpreadChild","openingFragment","closingFragment","isRelational","jsxParseElement","inPropertyName","jsxReadToken","jsxReadWord","jsxReadString","flow","flowPragma","val","matches","tok","oldInType","inType","flowParseType","moduloPos","expectContextual","predicate","flowParsePredicate","flowParseInterfaceish","parseIdentifier","typeNode","typeContainer","flowParseTypeParameterDeclaration","tmp","flowParseFunctionTypeParams","rest","flowParseTypeAndPredicateInitialiser","returnType","typeAnnotation","resetEndLocation","semicolon","declareName","insideModule","flowParseDeclareClass","flowParseDeclareFunction","flowParseDeclareVariable","eatContextual","flowParseDeclareModuleExports","flowParseDeclareModule","isContextual","flowParseDeclareTypeAlias","flowParseDeclareOpaqueType","flowParseDeclareInterface","flowParseDeclareExportDeclaration","flowParseTypeAnnotatableIdentifier","BIND_KIND_VALUE","enter","bodyNode","parseImport","flowParseDeclare","exit","hasModuleExport","bodyElement","declaration","isEsModuleType","isLet","suggestion","parseExport","exportKind","flowParseTypeAnnotation","flowParseTypeAlias","flowParseOpaqueType","isClass","flowParseRestrictedIdentifier","extends","implements","mixins","flowParseInterfaceExtends","flowParseObjectType","allowStatic","allowExact","allowSpread","allowProto","allowInexact","flowParseQualifiedTypeIdentifier","flowParseTypeParameterInstantiation","liberal","checkReservedType","right","flowParseTypeInitialiser","declare","supertype","impltype","requireDefault","nodeStart","variance","flowParseVariance","ident","bound","defaultRequired","typeParameter","flowParseTypeParameter","expectRelational","oldNoAnonFunctionType","noAnonFunctionType","flowParseTypeOrImplicitInstantiation","isStatic","lookahead","flowParseObjectPropertyKey","flowParseObjectTypeMethodish","flowParseFunctionTypeParam","valueNode","endDelim","exact","callProperties","indexers","internalSlots","inexact","protoStart","inexactStart","flowParseObjectTypeInternalSlot","flowParseObjectTypeIndexer","flowParseObjectTypeCallProperty","propOrInexact","flowParseObjectTypeProperty","flowObjectTypeSemicolon","proto","flowCheckGetterSetterParams","paramCount","node2","qualification","flowParsePrimaryType","first","lh","isThis","checkNotUnderscore","flowParseGenericType","isGroupedType","flowParseInterfaceType","flowIdentToTypeAnnotation","flowParseTupleType","reinterpretTypeAsFunctionTypeParam","flowParseTypeofType","seenOptionalIndexedAccess","canInsertSemicolon","elementType","objectType","indexType","flowParsePrefixType","flowParsePostfixType","flowParseAnonFunctionWithoutParens","flowParseIntersectionType","flowParseUnionType","allowPrimitiveOverride","allowExpressionBody","forwardNoArrowParamsConversionAt","topLevel","strict","flowParseInterface","shouldParseEnums","flowParseEnumDeclaration","isValidDirective","refNeedsArrowPos","result","tryParse","failState","originalNoArrowAt","noArrowAt","tryParseConditionalConsequent","consequent","failed","getArrowLikeExpressions","valid","invalid","alternate","parseMaybeAssign","noArrowParamsConversionAt","disallowInvalid","arrows","finishArrowValidation","list1","list2","partition","every","isAssignable","_node$extra","toAssignableList","trailingComma","SCOPE_FUNCTION","parse","typeCastNode","decl","declarationNode","parseExportSpecifiers","parseExportFrom","hasNamespace","isStatement","optionalId","member","parseClassMemberFromModifier","finishOp","current","isIteratorStart","isBinding","element","operator","typeCastToParameter","exprList","trailingCommaPos","isParenthesizedExpr","_expr$extra","close","canBePattern","isTuple","maybeInArrowParameters","toReferencedList","isThisParam","superTypeParameters","implemented","getObjectOrClassMethodParams","isPrivateNameAllowed","left","specifier","contextDescription","local","checkLVal","firstIdentLoc","firstIdent","parseModuleExportName","specifierTypeKind","isLookaheadContextual","as_ident","imported","__clone","nodeIsTypeImport","specifierIsTypeImport","checkReservedWord","allowModifiers","afterLeftParse","_jsx","_jsx2","_jsx3","abort","_arrowExpression$extr","arrowExpression","resetStartLocationFromNode","maybeUnwrapTypeCastExpression","aborted","thrown","allowDuplicates","isArrowFunction","canBeArrow","parseCallExpressionArguments","parseAsyncArrowWithTypeParameters","subscriptState","isLookaheadToken_lt","typeArguments","finishCallExpression","shouldParseTypes","flowParseTypeParameterInstantiationCallOrNew","targs","parseFunctionParams","parseArrow","parseArrowExpression","hasFlowComment","nextToken","fileNode","skipFlowComment","hasFlowCommentCompletion","shiftToFirstNonWhiteSpace","ch2","ch3","enumName","memberName","toUpperCase","suppliedType","explicitType","endOfInit","literal","parseBooleanLiteral","init","flowEnumMemberInit","expectedType","flowEnumErrorInvalidMemberInitializer","seenNames","members","booleanMembers","numberMembers","stringMembers","defaultedMembers","hasUnknownMembers","memberNode","flowEnumMemberRaw","flowEnumErrorInvalidMemberName","flowEnumErrorDuplicateMemberName","flowEnumCheckExplicitTypeMismatch","flowEnumErrorBooleanMemberNotInitialized","flowEnumErrorNumberMemberNotInitialized","initializedMembers","flowEnumErrorStringMemberInconsistentlyInitailized","flowEnumErrorInvalidExplicitType","nameLoc","flowEnumParseExplicitType","flowEnumMembers","flowEnumStringMembers","boolsLen","numsLen","strsLen","defaultedLen","flowEnumErrorInconsistentMemberValues","flowEnumBody","nextTokenStart","afterNext","typescript","isLiteralPropertyName","tsTokenCanFollowModifier","allowedModifiers","tsTryParse","tsNextTokenCanFollowModifier","modified","disallowedModifiers","enforceOrder","before","after","incompatible","mod1","mod2","tsParseModifier","accessibility","parseElement","tsIsListTerminator","tsParseDelimitedListWorker","expectSuccess","bracket","skipFirstToken","tsParseDelimitedList","qualifier","tsParseEntityName","tsParseTypeArguments","allowReservedWords","typeName","lhs","parameterName","tsParseTypeAnnotation","asserts","exprName","tsParseImportType","parseIdentifierName","constraint","tsEatThenParseType","tsParseTypeParameters","tsParseBracketedList","tsParseTypeParameter","tsParseTypeReference","returnToken","signature","returnTokenRequired","tsTryParseTypeParameters","parameters","tsParseBindingListForSignature","tsParseTypeOrTypePredicateAnnotation","parseBindingList","isLineTerminator","tsFillSignature","tsParseTypeMemberSemicolon","tsLookAhead","tsIsUnambiguouslyIndexSignature","tsTryParseTypeAnnotation","readonly","nodeAny","firstParameter","tsParseSignatureMember","createIdentifier","tsParsePropertyOrMethodSignature","tsParseModifiers","idx","tsTryParseIndexSignature","parsePropertyName","tsParseObjectTypeMembers","tsParseList","tsParseTypeMember","tsIsIdentifier","tsExpectThenParseType","tsParseMappedTypeParameter","nameType","tsParseType","tsTryParseType","elementTypes","tsParseTupleElementType","seenOptionalElement","labeledElements","elementNode","_labeledElements","isLabeled","labeledNode","optionalTypeNode","restNode","abstract","parseTemplate","thisKeyword","tsParseThisTypeNode","tsParseThisTypePredicate","keywordTypeFromName","lookaheadCharCode","tsParseLiteralTypeNode","parseMaybeUnary","tsParseThisTypeOrThisTypePredicate","tsParseTypeQuery","tsIsStartOfMappedType","tsParseMappedType","tsParseTypeLiteral","tsParseTupleType","tsParseParenthesizedType","tsParseTemplateLiteralType","tsParseNonArrayType","tsParseTypeOperatorOrHigher","tsCheckTypeAnnotationForReadOnly","kw","tsParseTypeOperator","tsParseInferType","tsParseArrayTypeOrHigher","parseConstituentType","hasLeadingOperator","tsParseUnionOrIntersectionType","tsParseIntersectionTypeOrHigher","tsIsUnambiguouslyStartOfFunctionType","braceStackCounter","tsSkipParameterStart","tsInType","t","tsParseTypePredicateAsserts","thisTypePredicate","typePredicateVariable","tsParseTypePredicatePrefix","containsEsc","eatColon","tsParseNonConditionalType","checkType","extendsType","trueType","falseType","tsIsStartOfFunctionType","tsParseFunctionOrConstructorType","isAbstractConstructorSignature","tsParseUnionTypeOrHigher","tsTryNextParseConstantContext","tsNextThenParseType","originalStart","delimitedList","tsParseExpressionWithTypeArguments","tsParseHeritageClause","cb","oldContext","tsDoThenParseType","initializer","BIND_TS_ENUM","tsParseEnumMember","parseBlockOrModuleBlockBody","nested","inner","tsParseModuleOrNamespaceDeclaration","prodParam","tsParseModuleBlock","global","isExport","moduleReference","tsParseModuleReference","tsIsExternalModuleReference","tsParseExternalModuleReference","f","res","nany","starttype","tsInAmbientContext","parseFunctionStatement","parseClass","tsParseEnumDeclaration","parseVarStatement","tsParseAmbientExternalModuleDeclaration","tsParseDeclaration","tsTryParseDeclare","mod","tsCheckLineTerminator","tsParseAbstractDeclaration","tsParseInterfaceDeclaration","tsParseTypeAliasDeclaration","hasFollowingLineBreak","oldMaybeInArrowParameters","tsTryParseAndCatch","tsTryParseTypeOrTypePredicateAnnotation","tsInNoContext","tsIsDeclarationStart","parseAccessModifier","parseMaybeDefault","parseAssignableListItemTypes","elt","pp","parameter","bodilessType","isAmbientContext","items","isInParens","tsCheckForInvalidTypeCasts","nonNullExpression","atPossibleAsyncArrow","asyncArrowFn","tsTryParseGenericAsyncArrowFunction","parseTaggedTemplateExpression","leftStartPos","leftStartLoc","minPrec","reScan_lt_gt","parseExprOp","checkKeywords","ahead","tsParseImportEqualsDeclaration","importNode","isAbstractClass","cls","modifiers","invalidModifersForStaticBlocks","callParseClassMemberWithIsStatic","tsHasSomeModifiers","parseClassStaticBlock","parseClassMemberWithIsStatic","inAbstractClass","hadSuperClass","methodOrProp","tsParseExpressionStatement","isDeclare","shouldParseExportDeclaration","tsTryParseExportDeclaration","resetStartLocation","definite","parseClassPropertyAnnotation","_typeCast","_typeCast2","_jsx4","_typeCast3","typeCast","_typeParameters","tsParseTypeAssertion","toAssignableParenthesizedExpression","_expr$extra2","readToken_lt_gt","baseCount","firstParam","oldIsAmbientContext","oldInAbstractClass","hasBody","shouldParseAsAmbientContext","v8intrinsic","v8IntrinsicStart","parseV8Intrinsic","placeholders","expectedNode","assertNoSpace","finishPlaceholder","isFinished","parsePlaceholder","parseStatement","takeDecorators","oldStrict","parseClassId","parseClassSuper","parseClassBody","expectPlugin","isUnparsedContextual","startsWith","nextTokenStartSince","filter","hasStarImport","maybeParseStarImportSpecifier","parseNamedImportSpecifiers","parseImportSource","mixinPluginNames","defaultOptions","sourceType","sourceFilename","startLine","allowAwaitOutsideFunction","allowReturnOutsideFunction","allowImportExportEverywhere","allowSuperOutsideMethod","allowUndeclaredExports","strictMode","ranges","tokens","createParenthesizedExpressions","State","potentialArrowAt","inPipeline","topicContext","maxNumOfResolvableTopics","maxTopicIndex","soloAwait","inFSharpPipelineDirectBody","labels","decoratorStack","comments","strictErrors","exportedIdentifiers","tokensLength","curPosition","skipArrays","_isDigit","VALID_REGEX_FLAGS","forbiddenNumericSeparatorSiblings","decBinOct","hex","allowedNumericSeparatorSiblings","oct","bin","dec","Token","Tokenizer","checkKeywordEscapes","pushToken","old","curr","clear","skipSpace","getTokenFromCode","codePointAt","block","text","addComment","pushComment","startSkip","loop","skipBlockComment","skipLineComment","readToken_interpreter","nextPos","readNumber","readRegexp","width","next2","readToken_dot","readToken_question","readRadixNumber","readString","readToken_slash","readToken_mult_modulo","readToken_pipe_amp","readToken_caret","readToken_plus_min","readToken_eq_excl","readToken_numberSign","readWord","escaped","inClass","charAt","content","mods","char","charCode","radix","len","forceLen","allowNumSeparator","forbiddenSiblings","allowedSiblings","total","Infinity","prev","Number","isNaN","isBigInt","readInt","startsWithDot","isFloat","isDecimal","hasExponent","isOctal","hasLeadingZero","integer","recordStrictModeErrors","underscorePos","parseFloat","throwOnInvalid","codePos","readHexChar","readEscapedChar","containsInvalid","inTemplate","readCodePoint","octalStr","octal","n","escStart","identifierCheck","esc","readWord1","update","ClassScope","privateNames","loneAccessors","ClassScopeHandler","oldClassScope","from","classScope","redefined","CLASS_ELEMENT_KIND_GETTER","accessor","ExpressionScope","ArrowHeadParsingScope","iterator","ExpressionScopeHandler","isCertainlyParameterDeclaration","canBeArrowParameterDeclaration","recordDeclarationError","iterateErrors","clearDeclarationError","newExpressionScope","UtilParser","op","nameStart","nameEnd","allowAsi","messageOrType","missingPlugin","names","join","oldState","abortSignal","andThrow","shorthandAssign","doubleProto","isPrivateName","oldLabels","oldExportedIdentifiers","oldInModule","oldScope","getScopeHandler","oldProdParam","oldExpressionScope","expressionScope","paramFlags","ExpressionErrors","Node","parser","range","unwrapParenthesizedExpression","loopLabel","switchLabel","loneSurrogate","Parser","opts","getOptions","initializeScopes","pluginMap","pluginsMap","enterInitialScopes","parseTopLevel","parseProgram","interpreter","parseInterpreterDirective","parseBlockBody","isLetKeyword","nextCh","parseDecorators","parseStatementContent","parseBreakContinueStatement","parseDebuggerStatement","parseDoStatement","parseForStatement","parseIfStatement","parseReturnStatement","parseSwitchStatement","parseThrowStatement","parseTryStatement","parseWhileStatement","parseWithStatement","parseBlock","parseEmptyStatement","nextTokenCharCode","assertModuleNodeAllowed","isAsyncFunction","maybeName","parseLabeledStatement","parseExpressionStatement","allowExport","currentContextDecorators","decorator","parseDecorator","canHaveLeadingDecorator","expectOnePlugin","parseMaybeDecoratorArguments","parseExprSubscripts","isBreak","verifyBreakContinue","lab","withTopicForbiddingContext","parseHeaderExpression","awaitAt","isAwaitAllowed","parseFor","startsWithLet","parseVar","declarations","parseForIn","startsWithUnescapedName","isForOf","description","checkExpressionErrors","declarationPosition","parseFunction","hasReturn","discriminant","cur","sawDefault","cases","isCase","parseBindingAtom","simple","handler","clause","parseCatchClauseParam","finalizer","statementStart","allowDirectives","createNewLexicalScope","afterBlockParse","hasStrictModeDirective","parsedNonDirective","stmtToDirective","setStrict","isForIn","await","isFor","isTypescript","parseVarId","parseMaybeAssignDisallowIn","isHangingStatement","requireId","initFunction","parseFunctionId","parseFunctionBodyAndFinish","registerFunctionStatementId","treatFunctionsAsVar","hadConstructor","parseClassMember","pushClassMethod","parseClassProperty","publicMethod","privateMethod","publicProp","privateProp","publicMember","parseClassElementName","pushClassPrivateMethod","isNonstaticConstructor","isPrivate","isSimple","maybeQuestionTokenStart","parsePostMemberNameModifiers","pushClassPrivateProperty","pushClassProperty","checkGetterSetterParams","getPrivateNameSV","_member$decorators","parseClassPrivateProperty","declarePrivateName","CLASS_ELEMENT_KIND_SETTER","parseInitializer","hasDefault","maybeParseExportDefaultSpecifier","parseAfterDefault","hasStar","eatExportStar","maybeParseExportNamespaceSpecifier","parseAfterNamespace","isFromRequired","hasDeclaration","hasSpecifiers","maybeParseExportNamedSpecifiers","maybeParseExportDeclaration","checkExport","parseExportDefaultExpression","isExportDefaultSpecifier","parseExportDeclaration","FUNC_STATEMENT","l","hasFrom","nextAfterFrom","assertions","maybeParseImportAssertions","checkNames","isDefault","isFrom","checkDuplicateExports","_declaration$extra","exportedName","checkLocalExport","elem","nodes","surrogate","toString","parseNext","maybeParseDefaultImportSpecifier","maybeParseModuleAttributes","attrs","attrNames","keyName","parseAssertEntries","shouldParseDefaultImport","parseImportSpecifierLocal","parseImportSpecifier","isRecord","protoRef","isObjectMethod","used","disallowIn","disallowInAnd","parseExpressionBase","allowInAnd","expressions","ownExpressionErrors","hasYield","parseYield","parseMaybeConditional","parseExprOps","shouldExitDescending","parseConditional","prec","hasIn","checkPipelineAtInfixOperator","logical","coalesce","hasAwait","parseExprOpRightExpr","nextOp","withTopicPermittingContext","parseSmartPipelineBody","parseExprOpBaseRightExpr","withSoloAwaitPermittingContext","parseFSharpPipelineBody","sawUnary","isAwait","parseAwait","checkExponentialAfterUnary","parseModuleExpression","isDelete","hasPropertyAsPrivateName","parseUpdate","isAmbiguousAwait","raiseOverwrite","parseSubscripts","maybeAsyncArrow","parseSubscript","parseBind","parseCoverCallAndAsyncArrowHead","parseMember","parseMaybePrivateName","usePrivateName","parseNoCallExpr","shouldParseAsyncArrow","validateAsPattern","parseAsyncArrowFromCallExpression","toReferencedArguments","toReferencedListDeep","tag","quasi","possibleAsyncArrow","dynamicImport","allowPlaceholder","nodeForExtra","elts","oldInFSharpPipelineDirectBody","parseExprListItem","_call$extra","parseSuper","parseImportMetaProperty","parseAsyncArrowUnaryFunction","parseDo","parseParenAndDistinguishExpression","parseArrayLike","parseObjectLike","parseFunctionOrFunctionSent","parseNewOrNewTarget","primaryTopicReferenceIsAllowedInCurrentTopicContext","registerTopicReference","lookaheadCh","allowSuper","meta","parseMetaProperty","propertyName","spreadStart","optionalCommaStart","innerStartPos","innerStartLoc","spreadNodeStartPos","spreadNodeStartLoc","parseParenItem","parseRestBinding","checkCommaAfterRest","innerEndPos","innerEndLoc","arrowNode","shouldParseArrow","metaProp","inNonArrowFunction","parseNew","isOptionalChain","parseNewArguments","parseExprList","isTagged","cooked","tail","curElt","parseTemplateElement","quasis","parseTemplateSubstitution","propHash","create","parsePropertyDefinition","checkProto","parseSpread","maybeAsyncOrAccessorProp","parseObjPropValue","_params","getGetterSetterExpectedParamCount","parseObjectMethod","parseObjectProperty","oldInPropertyName","setArrowFunctionParameters","parseFunctionBody","isExpression","checkParams","nonSimple","isSimpleParamList","errorPos","strictModeChanged","checkClashes","allowEmpty","inStaticBlock","recordAsyncArrowParametersError","inFunction","recordParameterInitializerError","delegate","childExpression","checkSmartPipelineBodyEarlyErrors","parseSmartPipelineBodyInStyle","isSimpleReference","topicReferenceWasUsedInCurrentTopicContext","callback","outerContextTopicState","outerContextSoloAwaitState","ret","revertScopes","_node$extra3","recordParenthesizedIdentifierError","_node$extra2","isLast","toAssignableObjectExpressionProp","raiseRestNotLast","checkToRestConversion","raiseTrailingCommaAfterRest","closeCharCode","parseAssignableListItem","_startLoc","_startPos","_left","disallowLetBinding","processComment","locationNode","getParser","decoratorsBeforeExport","missingPlugins","validatePlugins","pluginsFromOptions","pluginList","parserClassCache","getParserClass","_options","moduleError","_unused2","getExpression","tokTypes","codeFrameColumns","rawLines","lineNumber","colNumber","deprecationWarningShown","process","emitWarning","deprecationError","console","warn","location","Math","max","_highlight","getDefs","chalk","gutter","grey","marker","red","bold","NEWLINE","getMarkerLines","linesAbove","linesBelow","startColumn","endLine","endColumn","min","lineDiff","markerLines","sourceLength","highlighted","highlightCode","forceColor","shouldHighlight","getChalk","defs","maybeHighlight","chalkFn","lines","split","hasColumns","numberMaxWidth","highlightedLines","frame","number","paddedNumber","hasMarker","lastMarkerLine","markerLine","markerSpacing","numberOfMarkers","repeat","reset","a","b","placeholderWhitelist","placeholderPattern","preserveComments","syntacticPlaceholders","validate","_ref","excluded","target","sourceKeys","_objectWithoutPropertiesLoose","normalizeReplacements","replacements","reduce","acc","replacement","formatter","parserOpts","_parser","_codeFrame","parseWithCodeFrame","removePropertiesDeep","syntactic","placeholderNames","legacy","isLegacyRef","placeholderVisitorHandler","PATTERN","ancestors","_state$placeholderWhi","isPlaceholder","isJSXIdentifier","isNewExpression","isFunction","resolve","resolveAncestors","isDuplicate","cssKeywords","reverseKeywords","convert","module","rgb","channels","hsl","hsv","hwb","cmyk","xyz","lch","ansi16","ansi256","hcg","apple","gray","model","h","r","g","rdif","gdif","bdif","s","v","diff","diffc","c","k","reversed","currentClosestKeyword","y","currentClosestDistance","distance","pow","z","t1","t2","t3","smin","lmin","hi","floor","q","sl","vmin","wh","bl","ratio","m","y2","x2","z2","atan2","PI","sqrt","hr","cos","sin","round","ansi","color","mult","rem","colorString","hue","chroma","mg","pure","w","metadata","placeholderName","reverse","emptyStatement","applyReplacement","_helperPluginUtils","_helperSplitExportDeclaration","_globals","_transformClass","getBuiltinClasses","category","api","_api$assumption","_api$assumption2","_api$assumption3","_api$assumption4","assertVersion","loose","assumption","VISITED","Symbol","visitor","ExportDefaultDeclaration","isClassDeclaration","ClassDeclaration","ClassExpression","inferred","arrowFunctionToExpression","makeStatementFormatter","unwrap","assertExpressionStatement","createTemplateBuilder","defaultOpts","templateFnCache","templateAstCache","cachedOpts","tpl","extendedTrace","_string","builder","_literal","NO_PLACEHOLDER","rootStack","_parse","_populate","highlightTokens","_helperValidatorIdentifier","jsTokens","Chalk","sometimesKeywords","cyan","capitalized","yellow","jsxIdentifier","punctuator","magenta","green","white","bgRed","tokenize","BRACKET","JSX_TAG","getTokenType","toLowerCase","colorize","supportsColor","enabled","level","matchToToken","escapeStringRegexp","ansiStyles","stdoutColor","stdout","isSimpleWindowsTerm","platform","TERM","levelMapping","skipModels","styles","applyOptions","scLevel","chalkTag","apply","setPrototypeOf","blue","open","closeRe","codes","build","_styles","_empty","visible","bgColor","bgModel","defineProperties","applyStyle","self","enumerable","hasGrey","__proto__","argsLen","originalDim","dim","strings","parts","colorConvert","wrapAnsi16","wrapAnsi256","wrapAnsi16m","italic","underline","inverse","hidden","strikethrough","black","redBright","greenBright","yellowBright","blueBright","magentaBright","cyanBright","whiteBright","bgBlack","bgGreen","bgYellow","bgBlue","bgMagenta","bgCyan","bgWhite","bgBlackBright","bgRedBright","bgGreenBright","bgYellowBright","bgBlueBright","bgMagentaBright","bgCyanBright","bgWhiteBright","groupName","group","styleName","style","ansi2ansi","rgb2rgb","ansi16m","suite","conversions","route","fromModel","routes","toModel","wrappedFn","conversion","wrapRounded","wrapRaw","deriveBFS","graph","models","buildGraph","queue","adjacents","adjacent","link","to","wrapConversion","stderr","TEMPLATE_REGEX","STYLE_REGEX","STRING_REGEX","ESCAPE_REGEX","ESCAPES","unescape","parseArguments","results","chunks","trim","chunk","escape","chr","parseStyle","buildStyle","layer","escapeChar","errMsg","nameSet","buildTemplateCode","buildLiteralData","defaultReplacements"],"mappings":"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","file":"static/js/vendors-runtime-template.209c83e9.chunk.js","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = transformClass;\n\nvar _helperFunctionName = _interopRequireDefault(require(\"@babel/helper-function-name\"));\n\nvar _helperReplaceSupers = _interopRequireWildcard(require(\"@babel/helper-replace-supers\"));\n\nvar _helperOptimiseCallExpression = _interopRequireDefault(require(\"@babel/helper-optimise-call-expression\"));\n\nvar _core = require(\"@babel/core\");\n\nvar _helperAnnotateAsPure = _interopRequireDefault(require(\"@babel/helper-annotate-as-pure\"));\n\nvar _inlineCreateSuperHelpers = _interopRequireDefault(require(\"./inline-createSuper-helpers\"));\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction buildConstructor(classRef, constructorBody, node) {\n  const func = _core.types.functionDeclaration(_core.types.cloneNode(classRef), [], constructorBody);\n\n  _core.types.inherits(func, node);\n\n  return func;\n}\n\nfunction transformClass(path, file, builtinClasses, isLoose, assumptions) {\n  const classState = {\n    parent: undefined,\n    scope: undefined,\n    node: undefined,\n    path: undefined,\n    file: undefined,\n    classId: undefined,\n    classRef: undefined,\n    superFnId: undefined,\n    superName: undefined,\n    superReturns: [],\n    isDerived: false,\n    extendsNative: false,\n    construct: undefined,\n    constructorBody: undefined,\n    userConstructor: undefined,\n    userConstructorPath: undefined,\n    hasConstructor: false,\n    staticPropBody: [],\n    body: [],\n    superThises: [],\n    pushedConstructor: false,\n    pushedInherits: false,\n    protoAlias: null,\n    isLoose: false,\n    methods: {\n      instance: {\n        hasComputed: false,\n        list: [],\n        map: new Map()\n      },\n      static: {\n        hasComputed: false,\n        list: [],\n        map: new Map()\n      }\n    }\n  };\n\n  const setState = newState => {\n    Object.assign(classState, newState);\n  };\n\n  const findThisesVisitor = _core.traverse.visitors.merge([_helperReplaceSupers.environmentVisitor, {\n    ThisExpression(path) {\n      classState.superThises.push(path);\n    }\n\n  }]);\n\n  function maybeCreateConstructor() {\n    let hasConstructor = false;\n    const paths = classState.path.get(\"body.body\");\n\n    for (const path of paths) {\n      hasConstructor = path.equals(\"kind\", \"constructor\");\n      if (hasConstructor) break;\n    }\n\n    if (hasConstructor) return;\n    let params, body;\n\n    if (classState.isDerived) {\n      const constructor = _core.template.expression.ast`\n        (function () {\n          super(...arguments);\n        })\n      `;\n      params = constructor.params;\n      body = constructor.body;\n    } else {\n      params = [];\n      body = _core.types.blockStatement([]);\n    }\n\n    classState.path.get(\"body\").unshiftContainer(\"body\", _core.types.classMethod(\"constructor\", _core.types.identifier(\"constructor\"), params, body));\n  }\n\n  function buildBody() {\n    maybeCreateConstructor();\n    pushBody();\n    verifyConstructor();\n\n    if (classState.userConstructor) {\n      const {\n        constructorBody,\n        userConstructor,\n        construct\n      } = classState;\n      constructorBody.body = constructorBody.body.concat(userConstructor.body.body);\n\n      _core.types.inherits(construct, userConstructor);\n\n      _core.types.inherits(constructorBody, userConstructor.body);\n    }\n\n    pushDescriptors();\n  }\n\n  function pushBody() {\n    const classBodyPaths = classState.path.get(\"body.body\");\n\n    for (const path of classBodyPaths) {\n      const node = path.node;\n\n      if (path.isClassProperty()) {\n        throw path.buildCodeFrameError(\"Missing class properties transform.\");\n      }\n\n      if (node.decorators) {\n        throw path.buildCodeFrameError(\"Method has decorators, put the decorator plugin before the classes one.\");\n      }\n\n      if (_core.types.isClassMethod(node)) {\n        const isConstructor = node.kind === \"constructor\";\n        const replaceSupers = new _helperReplaceSupers.default({\n          methodPath: path,\n          objectRef: classState.classRef,\n          superRef: classState.superName,\n          constantSuper: assumptions.constantSuper,\n          file: classState.file,\n          refToPreserve: classState.classRef\n        });\n        replaceSupers.replace();\n        const superReturns = [];\n        path.traverse(_core.traverse.visitors.merge([_helperReplaceSupers.environmentVisitor, {\n          ReturnStatement(path) {\n            if (!path.getFunctionParent().isArrowFunctionExpression()) {\n              superReturns.push(path);\n            }\n          }\n\n        }]));\n\n        if (isConstructor) {\n          pushConstructor(superReturns, node, path);\n        } else {\n          pushMethod(node, path);\n        }\n      }\n    }\n  }\n\n  function pushDescriptors() {\n    pushInheritsToBody();\n    const {\n      body\n    } = classState;\n    const props = {\n      instance: null,\n      static: null\n    };\n\n    for (const placement of [\"static\", \"instance\"]) {\n      if (classState.methods[placement].list.length) {\n        props[placement] = classState.methods[placement].list.map(desc => {\n          const obj = _core.types.objectExpression([_core.types.objectProperty(_core.types.identifier(\"key\"), desc.key)]);\n\n          for (const kind of [\"get\", \"set\", \"value\"]) {\n            if (desc[kind] != null) {\n              obj.properties.push(_core.types.objectProperty(_core.types.identifier(kind), desc[kind]));\n            }\n          }\n\n          return obj;\n        });\n      }\n    }\n\n    if (props.instance || props.static) {\n      let args = [_core.types.cloneNode(classState.classRef), props.instance ? _core.types.arrayExpression(props.instance) : _core.types.nullLiteral(), props.static ? _core.types.arrayExpression(props.static) : _core.types.nullLiteral()];\n      let lastNonNullIndex = 0;\n\n      for (let i = 0; i < args.length; i++) {\n        if (!_core.types.isNullLiteral(args[i])) lastNonNullIndex = i;\n      }\n\n      args = args.slice(0, lastNonNullIndex + 1);\n      body.push(_core.types.expressionStatement(_core.types.callExpression(classState.file.addHelper(\"createClass\"), args)));\n    }\n  }\n\n  function wrapSuperCall(bareSuper, superRef, thisRef, body) {\n    const bareSuperNode = bareSuper.node;\n    let call;\n\n    if (assumptions.superIsCallableConstructor) {\n      bareSuperNode.arguments.unshift(_core.types.thisExpression());\n\n      if (bareSuperNode.arguments.length === 2 && _core.types.isSpreadElement(bareSuperNode.arguments[1]) && _core.types.isIdentifier(bareSuperNode.arguments[1].argument, {\n        name: \"arguments\"\n      })) {\n        bareSuperNode.arguments[1] = bareSuperNode.arguments[1].argument;\n        bareSuperNode.callee = _core.types.memberExpression(_core.types.cloneNode(superRef), _core.types.identifier(\"apply\"));\n      } else {\n        bareSuperNode.callee = _core.types.memberExpression(_core.types.cloneNode(superRef), _core.types.identifier(\"call\"));\n      }\n\n      call = _core.types.logicalExpression(\"||\", bareSuperNode, _core.types.thisExpression());\n    } else {\n      call = (0, _helperOptimiseCallExpression.default)(_core.types.cloneNode(classState.superFnId), _core.types.thisExpression(), bareSuperNode.arguments);\n    }\n\n    if (bareSuper.parentPath.isExpressionStatement() && bareSuper.parentPath.container === body.node.body && body.node.body.length - 1 === bareSuper.parentPath.key) {\n      if (classState.superThises.length) {\n        call = _core.types.assignmentExpression(\"=\", thisRef(), call);\n      }\n\n      bareSuper.parentPath.replaceWith(_core.types.returnStatement(call));\n    } else {\n      bareSuper.replaceWith(_core.types.assignmentExpression(\"=\", thisRef(), call));\n    }\n  }\n\n  function verifyConstructor() {\n    if (!classState.isDerived) return;\n    const path = classState.userConstructorPath;\n    const body = path.get(\"body\");\n    path.traverse(findThisesVisitor);\n\n    let thisRef = function () {\n      const ref = path.scope.generateDeclaredUidIdentifier(\"this\");\n\n      thisRef = () => _core.types.cloneNode(ref);\n\n      return ref;\n    };\n\n    for (const thisPath of classState.superThises) {\n      const {\n        node,\n        parentPath\n      } = thisPath;\n\n      if (parentPath.isMemberExpression({\n        object: node\n      })) {\n        thisPath.replaceWith(thisRef());\n        continue;\n      }\n\n      thisPath.replaceWith(_core.types.callExpression(classState.file.addHelper(\"assertThisInitialized\"), [thisRef()]));\n    }\n\n    const bareSupers = new Set();\n    path.traverse(_core.traverse.visitors.merge([_helperReplaceSupers.environmentVisitor, {\n      Super(path) {\n        const {\n          node,\n          parentPath\n        } = path;\n\n        if (parentPath.isCallExpression({\n          callee: node\n        })) {\n          bareSupers.add(parentPath);\n        }\n      }\n\n    }]));\n    let guaranteedSuperBeforeFinish = !!bareSupers.size;\n\n    for (const bareSuper of bareSupers) {\n      wrapSuperCall(bareSuper, classState.superName, thisRef, body);\n\n      if (guaranteedSuperBeforeFinish) {\n        bareSuper.find(function (parentPath) {\n          if (parentPath === path) {\n            return true;\n          }\n\n          if (parentPath.isLoop() || parentPath.isConditional() || parentPath.isArrowFunctionExpression()) {\n            guaranteedSuperBeforeFinish = false;\n            return true;\n          }\n        });\n      }\n    }\n\n    let wrapReturn;\n\n    if (classState.isLoose) {\n      wrapReturn = returnArg => {\n        const thisExpr = _core.types.callExpression(classState.file.addHelper(\"assertThisInitialized\"), [thisRef()]);\n\n        return returnArg ? _core.types.logicalExpression(\"||\", returnArg, thisExpr) : thisExpr;\n      };\n    } else {\n      wrapReturn = returnArg => _core.types.callExpression(classState.file.addHelper(\"possibleConstructorReturn\"), [thisRef()].concat(returnArg || []));\n    }\n\n    const bodyPaths = body.get(\"body\");\n\n    if (!bodyPaths.length || !bodyPaths.pop().isReturnStatement()) {\n      body.pushContainer(\"body\", _core.types.returnStatement(guaranteedSuperBeforeFinish ? thisRef() : wrapReturn()));\n    }\n\n    for (const returnPath of classState.superReturns) {\n      returnPath.get(\"argument\").replaceWith(wrapReturn(returnPath.node.argument));\n    }\n  }\n\n  function pushMethod(node, path) {\n    const scope = path ? path.scope : classState.scope;\n\n    if (node.kind === \"method\") {\n      if (processMethod(node, scope)) return;\n    }\n\n    const placement = node.static ? \"static\" : \"instance\";\n    const methods = classState.methods[placement];\n    const descKey = node.kind === \"method\" ? \"value\" : node.kind;\n    const key = _core.types.isNumericLiteral(node.key) || _core.types.isBigIntLiteral(node.key) ? _core.types.stringLiteral(String(node.key.value)) : _core.types.toComputedKey(node);\n\n    let fn = _core.types.toExpression(node);\n\n    if (_core.types.isStringLiteral(key)) {\n      if (node.kind === \"method\") {\n        fn = (0, _helperFunctionName.default)({\n          id: key,\n          node: node,\n          scope\n        });\n      }\n    } else {\n      methods.hasComputed = true;\n    }\n\n    let descriptor;\n\n    if (!methods.hasComputed && methods.map.has(key.value)) {\n      descriptor = methods.map.get(key.value);\n      descriptor[descKey] = fn;\n\n      if (descKey === \"value\") {\n        descriptor.get = null;\n        descriptor.set = null;\n      } else {\n        descriptor.value = null;\n      }\n    } else {\n      descriptor = {\n        key: key,\n        [descKey]: fn\n      };\n      methods.list.push(descriptor);\n\n      if (!methods.hasComputed) {\n        methods.map.set(key.value, descriptor);\n      }\n    }\n  }\n\n  function processMethod(node, scope) {\n    if (assumptions.setClassMethods && !node.decorators) {\n      let {\n        classRef\n      } = classState;\n\n      if (!node.static) {\n        insertProtoAliasOnce();\n        classRef = classState.protoAlias;\n      }\n\n      const methodName = _core.types.memberExpression(_core.types.cloneNode(classRef), node.key, node.computed || _core.types.isLiteral(node.key));\n\n      let func = _core.types.functionExpression(null, node.params, node.body, node.generator, node.async);\n\n      _core.types.inherits(func, node);\n\n      const key = _core.types.toComputedKey(node, node.key);\n\n      if (_core.types.isStringLiteral(key)) {\n        func = (0, _helperFunctionName.default)({\n          node: func,\n          id: key,\n          scope\n        });\n      }\n\n      const expr = _core.types.expressionStatement(_core.types.assignmentExpression(\"=\", methodName, func));\n\n      _core.types.inheritsComments(expr, node);\n\n      classState.body.push(expr);\n      return true;\n    }\n\n    return false;\n  }\n\n  function insertProtoAliasOnce() {\n    if (classState.protoAlias === null) {\n      setState({\n        protoAlias: classState.scope.generateUidIdentifier(\"proto\")\n      });\n\n      const classProto = _core.types.memberExpression(classState.classRef, _core.types.identifier(\"prototype\"));\n\n      const protoDeclaration = _core.types.variableDeclaration(\"var\", [_core.types.variableDeclarator(classState.protoAlias, classProto)]);\n\n      classState.body.push(protoDeclaration);\n    }\n  }\n\n  function pushConstructor(superReturns, method, path) {\n    setState({\n      userConstructorPath: path,\n      userConstructor: method,\n      hasConstructor: true,\n      superReturns\n    });\n    const {\n      construct\n    } = classState;\n\n    _core.types.inheritsComments(construct, method);\n\n    construct.params = method.params;\n\n    _core.types.inherits(construct.body, method.body);\n\n    construct.body.directives = method.body.directives;\n    pushConstructorToBody();\n  }\n\n  function pushConstructorToBody() {\n    if (classState.pushedConstructor) return;\n    classState.pushedConstructor = true;\n\n    if (classState.hasInstanceDescriptors || classState.hasStaticDescriptors) {\n      pushDescriptors();\n    }\n\n    classState.body.push(classState.construct);\n    pushInheritsToBody();\n  }\n\n  function pushInheritsToBody() {\n    if (!classState.isDerived || classState.pushedInherits) return;\n    const superFnId = path.scope.generateUidIdentifier(\"super\");\n    setState({\n      pushedInherits: true,\n      superFnId\n    });\n\n    if (!assumptions.superIsCallableConstructor) {\n      classState.body.unshift(_core.types.variableDeclaration(\"var\", [_core.types.variableDeclarator(superFnId, _core.types.callExpression((0, _inlineCreateSuperHelpers.default)(classState.file), [_core.types.cloneNode(classState.classRef)]))]));\n    }\n\n    classState.body.unshift(_core.types.expressionStatement(_core.types.callExpression(classState.file.addHelper(classState.isLoose ? \"inheritsLoose\" : \"inherits\"), [_core.types.cloneNode(classState.classRef), _core.types.cloneNode(classState.superName)])));\n  }\n\n  function setupClosureParamsArgs() {\n    const {\n      superName\n    } = classState;\n    const closureParams = [];\n    const closureArgs = [];\n\n    if (classState.isDerived) {\n      let arg = _core.types.cloneNode(superName);\n\n      if (classState.extendsNative) {\n        arg = _core.types.callExpression(classState.file.addHelper(\"wrapNativeSuper\"), [arg]);\n        (0, _helperAnnotateAsPure.default)(arg);\n      }\n\n      const param = classState.scope.generateUidIdentifierBasedOnNode(superName);\n      closureParams.push(param);\n      closureArgs.push(arg);\n      setState({\n        superName: _core.types.cloneNode(param)\n      });\n    }\n\n    return {\n      closureParams,\n      closureArgs\n    };\n  }\n\n  function classTransformer(path, file, builtinClasses, isLoose) {\n    setState({\n      parent: path.parent,\n      scope: path.scope,\n      node: path.node,\n      path,\n      file,\n      isLoose\n    });\n    setState({\n      classId: classState.node.id,\n      classRef: classState.node.id ? _core.types.identifier(classState.node.id.name) : classState.scope.generateUidIdentifier(\"class\"),\n      superName: classState.node.superClass,\n      isDerived: !!classState.node.superClass,\n      constructorBody: _core.types.blockStatement([])\n    });\n    setState({\n      extendsNative: classState.isDerived && builtinClasses.has(classState.superName.name) && !classState.scope.hasBinding(classState.superName.name, true)\n    });\n    const {\n      classRef,\n      node,\n      constructorBody\n    } = classState;\n    setState({\n      construct: buildConstructor(classRef, constructorBody, node)\n    });\n    let {\n      body\n    } = classState;\n    const {\n      closureParams,\n      closureArgs\n    } = setupClosureParamsArgs();\n    buildBody();\n\n    if (!assumptions.noClassCalls) {\n      constructorBody.body.unshift(_core.types.expressionStatement(_core.types.callExpression(classState.file.addHelper(\"classCallCheck\"), [_core.types.thisExpression(), _core.types.cloneNode(classState.classRef)])));\n    }\n\n    body = body.concat(classState.staticPropBody.map(fn => fn(_core.types.cloneNode(classState.classRef))));\n    const isStrict = path.isInStrictMode();\n    let constructorOnly = classState.classId && body.length === 1;\n\n    if (constructorOnly && !isStrict) {\n      for (const param of classState.construct.params) {\n        if (!_core.types.isIdentifier(param)) {\n          constructorOnly = false;\n          break;\n        }\n      }\n    }\n\n    const directives = constructorOnly ? body[0].body.directives : [];\n\n    if (!isStrict) {\n      directives.push(_core.types.directive(_core.types.directiveLiteral(\"use strict\")));\n    }\n\n    if (constructorOnly) {\n      return _core.types.toExpression(body[0]);\n    }\n\n    body.push(_core.types.returnStatement(_core.types.cloneNode(classState.classRef)));\n\n    const container = _core.types.arrowFunctionExpression(closureParams, _core.types.blockStatement(body, directives));\n\n    return _core.types.callExpression(container, closureArgs);\n  }\n\n  return classTransformer(path, file, builtinClasses, isLoose);\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = addCreateSuperHelper;\n\nvar _core = require(\"@babel/core\");\n\nconst helperIDs = new WeakMap();\n\nfunction addCreateSuperHelper(file) {\n  if (helperIDs.has(file)) {\n    return (_core.types.cloneNode || _core.types.clone)(helperIDs.get(file));\n  }\n\n  try {\n    return file.addHelper(\"createSuper\");\n  } catch (_unused) {}\n\n  const id = file.scope.generateUidIdentifier(\"createSuper\");\n  helperIDs.set(file, id);\n  const fn = helper({\n    CREATE_SUPER: id,\n    GET_PROTOTYPE_OF: file.addHelper(\"getPrototypeOf\"),\n    POSSIBLE_CONSTRUCTOR_RETURN: file.addHelper(\"possibleConstructorReturn\")\n  });\n  file.path.unshiftContainer(\"body\", [fn]);\n  file.scope.registerDeclaration(file.path.get(\"body.0\"));\n  return _core.types.cloneNode(id);\n}\n\nconst helper = _core.template.statement`\n  function CREATE_SUPER(Derived) {\n    function isNativeReflectConstruct() {\n      if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n\n      // core-js@3\n      if (Reflect.construct.sham) return false;\n\n      // Proxy can't be polyfilled. Every browser implemented\n      // proxies before or at the same time as Reflect.construct,\n      // so if they support Proxy they also support Reflect.construct.\n      if (typeof Proxy === \"function\") return true;\n\n      // Since Reflect.construct can't be properly polyfilled, some\n      // implementations (e.g. core-js@2) don't set the correct internal slots.\n      // Those polyfills don't allow us to subclass built-ins, so we need to\n      // use our fallback implementation.\n      try {\n        // If the internal slots aren't set, this throws an error similar to\n        //   TypeError: this is not a Date object.\n        Date.prototype.toString.call(Reflect.construct(Date, [], function() {}));\n        return true;\n      } catch (e) {\n        return false;\n      }\n    }\n\n    return function () {\n      var Super = GET_PROTOTYPE_OF(Derived), result;\n      if (isNativeReflectConstruct()) {\n        // NOTE: This doesn't work if this.__proto__.constructor has been modified.\n        var NewTarget = GET_PROTOTYPE_OF(this).constructor;\n        result = Reflect.construct(Super, arguments, NewTarget);\n      } else {\n        result = Super.apply(this, arguments);\n      }\n      return POSSIBLE_CONSTRUCTOR_RETURN(this, result);\n    }\n  }\n`;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports.program = exports.expression = exports.statements = exports.statement = exports.smart = void 0;\n\nvar formatters = _interopRequireWildcard(require(\"./formatters\"));\n\nvar _builder = _interopRequireDefault(require(\"./builder\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nconst smart = (0, _builder.default)(formatters.smart);\nexports.smart = smart;\nconst statement = (0, _builder.default)(formatters.statement);\nexports.statement = statement;\nconst statements = (0, _builder.default)(formatters.statements);\nexports.statements = statements;\nconst expression = (0, _builder.default)(formatters.expression);\nexports.expression = expression;\nconst program = (0, _builder.default)(formatters.program);\nexports.program = program;\n\nvar _default = Object.assign(smart.bind(undefined), {\n  smart,\n  statement,\n  statements,\n  expression,\n  program,\n  ast: smart.ast\n});\n\nexports.default = _default;","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nconst beforeExpr = true;\nconst startsExpr = true;\nconst isLoop = true;\nconst isAssign = true;\nconst prefix = true;\nconst postfix = true;\nclass TokenType {\n  constructor(label, conf = {}) {\n    this.label = void 0;\n    this.keyword = void 0;\n    this.beforeExpr = void 0;\n    this.startsExpr = void 0;\n    this.rightAssociative = void 0;\n    this.isLoop = void 0;\n    this.isAssign = void 0;\n    this.prefix = void 0;\n    this.postfix = void 0;\n    this.binop = void 0;\n    this.updateContext = void 0;\n    this.label = label;\n    this.keyword = conf.keyword;\n    this.beforeExpr = !!conf.beforeExpr;\n    this.startsExpr = !!conf.startsExpr;\n    this.rightAssociative = !!conf.rightAssociative;\n    this.isLoop = !!conf.isLoop;\n    this.isAssign = !!conf.isAssign;\n    this.prefix = !!conf.prefix;\n    this.postfix = !!conf.postfix;\n    this.binop = conf.binop != null ? conf.binop : null;\n    this.updateContext = null;\n  }\n\n}\nconst keywords = new Map();\n\nfunction createKeyword(name, options = {}) {\n  options.keyword = name;\n  const token = new TokenType(name, options);\n  keywords.set(name, token);\n  return token;\n}\n\nfunction createBinop(name, binop) {\n  return new TokenType(name, {\n    beforeExpr,\n    binop\n  });\n}\n\nconst types = {\n  num: new TokenType(\"num\", {\n    startsExpr\n  }),\n  bigint: new TokenType(\"bigint\", {\n    startsExpr\n  }),\n  decimal: new TokenType(\"decimal\", {\n    startsExpr\n  }),\n  regexp: new TokenType(\"regexp\", {\n    startsExpr\n  }),\n  string: new TokenType(\"string\", {\n    startsExpr\n  }),\n  name: new TokenType(\"name\", {\n    startsExpr\n  }),\n  eof: new TokenType(\"eof\"),\n  bracketL: new TokenType(\"[\", {\n    beforeExpr,\n    startsExpr\n  }),\n  bracketHashL: new TokenType(\"#[\", {\n    beforeExpr,\n    startsExpr\n  }),\n  bracketBarL: new TokenType(\"[|\", {\n    beforeExpr,\n    startsExpr\n  }),\n  bracketR: new TokenType(\"]\"),\n  bracketBarR: new TokenType(\"|]\"),\n  braceL: new TokenType(\"{\", {\n    beforeExpr,\n    startsExpr\n  }),\n  braceBarL: new TokenType(\"{|\", {\n    beforeExpr,\n    startsExpr\n  }),\n  braceHashL: new TokenType(\"#{\", {\n    beforeExpr,\n    startsExpr\n  }),\n  braceR: new TokenType(\"}\"),\n  braceBarR: new TokenType(\"|}\"),\n  parenL: new TokenType(\"(\", {\n    beforeExpr,\n    startsExpr\n  }),\n  parenR: new TokenType(\")\"),\n  comma: new TokenType(\",\", {\n    beforeExpr\n  }),\n  semi: new TokenType(\";\", {\n    beforeExpr\n  }),\n  colon: new TokenType(\":\", {\n    beforeExpr\n  }),\n  doubleColon: new TokenType(\"::\", {\n    beforeExpr\n  }),\n  dot: new TokenType(\".\"),\n  question: new TokenType(\"?\", {\n    beforeExpr\n  }),\n  questionDot: new TokenType(\"?.\"),\n  arrow: new TokenType(\"=>\", {\n    beforeExpr\n  }),\n  template: new TokenType(\"template\"),\n  ellipsis: new TokenType(\"...\", {\n    beforeExpr\n  }),\n  backQuote: new TokenType(\"`\", {\n    startsExpr\n  }),\n  dollarBraceL: new TokenType(\"${\", {\n    beforeExpr,\n    startsExpr\n  }),\n  at: new TokenType(\"@\"),\n  hash: new TokenType(\"#\", {\n    startsExpr\n  }),\n  interpreterDirective: new TokenType(\"#!...\"),\n  eq: new TokenType(\"=\", {\n    beforeExpr,\n    isAssign\n  }),\n  assign: new TokenType(\"_=\", {\n    beforeExpr,\n    isAssign\n  }),\n  incDec: new TokenType(\"++/--\", {\n    prefix,\n    postfix,\n    startsExpr\n  }),\n  bang: new TokenType(\"!\", {\n    beforeExpr,\n    prefix,\n    startsExpr\n  }),\n  tilde: new TokenType(\"~\", {\n    beforeExpr,\n    prefix,\n    startsExpr\n  }),\n  pipeline: createBinop(\"|>\", 0),\n  nullishCoalescing: createBinop(\"??\", 1),\n  logicalOR: createBinop(\"||\", 1),\n  logicalAND: createBinop(\"&&\", 2),\n  bitwiseOR: createBinop(\"|\", 3),\n  bitwiseXOR: createBinop(\"^\", 4),\n  bitwiseAND: createBinop(\"&\", 5),\n  equality: createBinop(\"==/!=/===/!==\", 6),\n  relational: createBinop(\"</>/<=/>=\", 7),\n  bitShift: createBinop(\"<</>>/>>>\", 8),\n  plusMin: new TokenType(\"+/-\", {\n    beforeExpr,\n    binop: 9,\n    prefix,\n    startsExpr\n  }),\n  modulo: new TokenType(\"%\", {\n    beforeExpr,\n    binop: 10,\n    startsExpr\n  }),\n  star: new TokenType(\"*\", {\n    binop: 10\n  }),\n  slash: createBinop(\"/\", 10),\n  exponent: new TokenType(\"**\", {\n    beforeExpr,\n    binop: 11,\n    rightAssociative: true\n  }),\n  _break: createKeyword(\"break\"),\n  _case: createKeyword(\"case\", {\n    beforeExpr\n  }),\n  _catch: createKeyword(\"catch\"),\n  _continue: createKeyword(\"continue\"),\n  _debugger: createKeyword(\"debugger\"),\n  _default: createKeyword(\"default\", {\n    beforeExpr\n  }),\n  _do: createKeyword(\"do\", {\n    isLoop,\n    beforeExpr\n  }),\n  _else: createKeyword(\"else\", {\n    beforeExpr\n  }),\n  _finally: createKeyword(\"finally\"),\n  _for: createKeyword(\"for\", {\n    isLoop\n  }),\n  _function: createKeyword(\"function\", {\n    startsExpr\n  }),\n  _if: createKeyword(\"if\"),\n  _return: createKeyword(\"return\", {\n    beforeExpr\n  }),\n  _switch: createKeyword(\"switch\"),\n  _throw: createKeyword(\"throw\", {\n    beforeExpr,\n    prefix,\n    startsExpr\n  }),\n  _try: createKeyword(\"try\"),\n  _var: createKeyword(\"var\"),\n  _const: createKeyword(\"const\"),\n  _while: createKeyword(\"while\", {\n    isLoop\n  }),\n  _with: createKeyword(\"with\"),\n  _new: createKeyword(\"new\", {\n    beforeExpr,\n    startsExpr\n  }),\n  _this: createKeyword(\"this\", {\n    startsExpr\n  }),\n  _super: createKeyword(\"super\", {\n    startsExpr\n  }),\n  _class: createKeyword(\"class\", {\n    startsExpr\n  }),\n  _extends: createKeyword(\"extends\", {\n    beforeExpr\n  }),\n  _export: createKeyword(\"export\"),\n  _import: createKeyword(\"import\", {\n    startsExpr\n  }),\n  _null: createKeyword(\"null\", {\n    startsExpr\n  }),\n  _true: createKeyword(\"true\", {\n    startsExpr\n  }),\n  _false: createKeyword(\"false\", {\n    startsExpr\n  }),\n  _in: createKeyword(\"in\", {\n    beforeExpr,\n    binop: 7\n  }),\n  _instanceof: createKeyword(\"instanceof\", {\n    beforeExpr,\n    binop: 7\n  }),\n  _typeof: createKeyword(\"typeof\", {\n    beforeExpr,\n    prefix,\n    startsExpr\n  }),\n  _void: createKeyword(\"void\", {\n    beforeExpr,\n    prefix,\n    startsExpr\n  }),\n  _delete: createKeyword(\"delete\", {\n    beforeExpr,\n    prefix,\n    startsExpr\n  })\n};\n\nconst lineBreak = /\\r\\n?|[\\n\\u2028\\u2029]/;\nconst lineBreakG = new RegExp(lineBreak.source, \"g\");\nfunction isNewLine(code) {\n  switch (code) {\n    case 10:\n    case 13:\n    case 8232:\n    case 8233:\n      return true;\n\n    default:\n      return false;\n  }\n}\nconst skipWhiteSpace = /(?:\\s|\\/\\/.*|\\/\\*[^]*?\\*\\/)*/g;\nfunction isWhitespace(code) {\n  switch (code) {\n    case 0x0009:\n    case 0x000b:\n    case 0x000c:\n    case 32:\n    case 160:\n    case 5760:\n    case 0x2000:\n    case 0x2001:\n    case 0x2002:\n    case 0x2003:\n    case 0x2004:\n    case 0x2005:\n    case 0x2006:\n    case 0x2007:\n    case 0x2008:\n    case 0x2009:\n    case 0x200a:\n    case 0x202f:\n    case 0x205f:\n    case 0x3000:\n    case 0xfeff:\n      return true;\n\n    default:\n      return false;\n  }\n}\n\nclass Position {\n  constructor(line, col) {\n    this.line = void 0;\n    this.column = void 0;\n    this.line = line;\n    this.column = col;\n  }\n\n}\nclass SourceLocation {\n  constructor(start, end) {\n    this.start = void 0;\n    this.end = void 0;\n    this.filename = void 0;\n    this.identifierName = void 0;\n    this.start = start;\n    this.end = end;\n  }\n\n}\nfunction getLineInfo(input, offset) {\n  let line = 1;\n  let lineStart = 0;\n  let match;\n  lineBreakG.lastIndex = 0;\n\n  while ((match = lineBreakG.exec(input)) && match.index < offset) {\n    line++;\n    lineStart = lineBreakG.lastIndex;\n  }\n\n  return new Position(line, offset - lineStart);\n}\n\nclass BaseParser {\n  constructor() {\n    this.sawUnambiguousESM = false;\n    this.ambiguousScriptDifferentAst = false;\n  }\n\n  hasPlugin(name) {\n    return this.plugins.has(name);\n  }\n\n  getPluginOption(plugin, name) {\n    if (this.hasPlugin(plugin)) return this.plugins.get(plugin)[name];\n  }\n\n}\n\nfunction last(stack) {\n  return stack[stack.length - 1];\n}\n\nclass CommentsParser extends BaseParser {\n  addComment(comment) {\n    if (this.filename) comment.loc.filename = this.filename;\n    this.state.trailingComments.push(comment);\n    this.state.leadingComments.push(comment);\n  }\n\n  adjustCommentsAfterTrailingComma(node, elements, takeAllComments) {\n    if (this.state.leadingComments.length === 0) {\n      return;\n    }\n\n    let lastElement = null;\n    let i = elements.length;\n\n    while (lastElement === null && i > 0) {\n      lastElement = elements[--i];\n    }\n\n    if (lastElement === null) {\n      return;\n    }\n\n    for (let j = 0; j < this.state.leadingComments.length; j++) {\n      if (this.state.leadingComments[j].end < this.state.commentPreviousNode.end) {\n        this.state.leadingComments.splice(j, 1);\n        j--;\n      }\n    }\n\n    const newTrailingComments = [];\n\n    for (let i = 0; i < this.state.leadingComments.length; i++) {\n      const leadingComment = this.state.leadingComments[i];\n\n      if (leadingComment.end < node.end) {\n        newTrailingComments.push(leadingComment);\n\n        if (!takeAllComments) {\n          this.state.leadingComments.splice(i, 1);\n          i--;\n        }\n      } else {\n        if (node.trailingComments === undefined) {\n          node.trailingComments = [];\n        }\n\n        node.trailingComments.push(leadingComment);\n      }\n    }\n\n    if (takeAllComments) this.state.leadingComments = [];\n\n    if (newTrailingComments.length > 0) {\n      lastElement.trailingComments = newTrailingComments;\n    } else if (lastElement.trailingComments !== undefined) {\n      lastElement.trailingComments = [];\n    }\n  }\n\n  processComment(node) {\n    if (node.type === \"Program\" && node.body.length > 0) return;\n    const stack = this.state.commentStack;\n    let firstChild, lastChild, trailingComments, i, j;\n\n    if (this.state.trailingComments.length > 0) {\n      if (this.state.trailingComments[0].start >= node.end) {\n        trailingComments = this.state.trailingComments;\n        this.state.trailingComments = [];\n      } else {\n        this.state.trailingComments.length = 0;\n      }\n    } else if (stack.length > 0) {\n      const lastInStack = last(stack);\n\n      if (lastInStack.trailingComments && lastInStack.trailingComments[0].start >= node.end) {\n        trailingComments = lastInStack.trailingComments;\n        delete lastInStack.trailingComments;\n      }\n    }\n\n    if (stack.length > 0 && last(stack).start >= node.start) {\n      firstChild = stack.pop();\n    }\n\n    while (stack.length > 0 && last(stack).start >= node.start) {\n      lastChild = stack.pop();\n    }\n\n    if (!lastChild && firstChild) lastChild = firstChild;\n\n    if (firstChild) {\n      switch (node.type) {\n        case \"ObjectExpression\":\n          this.adjustCommentsAfterTrailingComma(node, node.properties);\n          break;\n\n        case \"ObjectPattern\":\n          this.adjustCommentsAfterTrailingComma(node, node.properties, true);\n          break;\n\n        case \"CallExpression\":\n          this.adjustCommentsAfterTrailingComma(node, node.arguments);\n          break;\n\n        case \"ArrayExpression\":\n          this.adjustCommentsAfterTrailingComma(node, node.elements);\n          break;\n\n        case \"ArrayPattern\":\n          this.adjustCommentsAfterTrailingComma(node, node.elements, true);\n          break;\n      }\n    } else if (this.state.commentPreviousNode && (this.state.commentPreviousNode.type === \"ImportSpecifier\" && node.type !== \"ImportSpecifier\" || this.state.commentPreviousNode.type === \"ExportSpecifier\" && node.type !== \"ExportSpecifier\")) {\n      this.adjustCommentsAfterTrailingComma(node, [this.state.commentPreviousNode]);\n    }\n\n    if (lastChild) {\n      if (lastChild.leadingComments) {\n        if (lastChild !== node && lastChild.leadingComments.length > 0 && last(lastChild.leadingComments).end <= node.start) {\n          node.leadingComments = lastChild.leadingComments;\n          delete lastChild.leadingComments;\n        } else {\n          for (i = lastChild.leadingComments.length - 2; i >= 0; --i) {\n            if (lastChild.leadingComments[i].end <= node.start) {\n              node.leadingComments = lastChild.leadingComments.splice(0, i + 1);\n              break;\n            }\n          }\n        }\n      }\n    } else if (this.state.leadingComments.length > 0) {\n      if (last(this.state.leadingComments).end <= node.start) {\n        if (this.state.commentPreviousNode) {\n          for (j = 0; j < this.state.leadingComments.length; j++) {\n            if (this.state.leadingComments[j].end < this.state.commentPreviousNode.end) {\n              this.state.leadingComments.splice(j, 1);\n              j--;\n            }\n          }\n        }\n\n        if (this.state.leadingComments.length > 0) {\n          node.leadingComments = this.state.leadingComments;\n          this.state.leadingComments = [];\n        }\n      } else {\n        for (i = 0; i < this.state.leadingComments.length; i++) {\n          if (this.state.leadingComments[i].end > node.start) {\n            break;\n          }\n        }\n\n        const leadingComments = this.state.leadingComments.slice(0, i);\n\n        if (leadingComments.length) {\n          node.leadingComments = leadingComments;\n        }\n\n        trailingComments = this.state.leadingComments.slice(i);\n\n        if (trailingComments.length === 0) {\n          trailingComments = null;\n        }\n      }\n    }\n\n    this.state.commentPreviousNode = node;\n\n    if (trailingComments) {\n      if (trailingComments.length && trailingComments[0].start >= node.start && last(trailingComments).end <= node.end) {\n        node.innerComments = trailingComments;\n      } else {\n        const firstTrailingCommentIndex = trailingComments.findIndex(comment => comment.end >= node.end);\n\n        if (firstTrailingCommentIndex > 0) {\n          node.innerComments = trailingComments.slice(0, firstTrailingCommentIndex);\n          node.trailingComments = trailingComments.slice(firstTrailingCommentIndex);\n        } else {\n          node.trailingComments = trailingComments;\n        }\n      }\n    }\n\n    stack.push(node);\n  }\n\n}\n\nconst ErrorCodes = Object.freeze({\n  SyntaxError: \"BABEL_PARSER_SYNTAX_ERROR\",\n  SourceTypeModuleError: \"BABEL_PARSER_SOURCETYPE_MODULE_REQUIRED\"\n});\n\nconst ErrorMessages = makeErrorTemplates({\n  AccessorIsGenerator: \"A %0ter cannot be a generator.\",\n  ArgumentsInClass: \"'arguments' is only allowed in functions and class methods.\",\n  AsyncFunctionInSingleStatementContext: \"Async functions can only be declared at the top level or inside a block.\",\n  AwaitBindingIdentifier: \"Can not use 'await' as identifier inside an async function.\",\n  AwaitBindingIdentifierInStaticBlock: \"Can not use 'await' as identifier inside a static block.\",\n  AwaitExpressionFormalParameter: \"'await' is not allowed in async function parameters.\",\n  AwaitNotInAsyncContext: \"'await' is only allowed within async functions and at the top levels of modules.\",\n  AwaitNotInAsyncFunction: \"'await' is only allowed within async functions.\",\n  BadGetterArity: \"A 'get' accesor must not have any formal parameters.\",\n  BadSetterArity: \"A 'set' accesor must have exactly one formal parameter.\",\n  BadSetterRestParameter: \"A 'set' accesor function argument must not be a rest parameter.\",\n  ConstructorClassField: \"Classes may not have a field named 'constructor'.\",\n  ConstructorClassPrivateField: \"Classes may not have a private field named '#constructor'.\",\n  ConstructorIsAccessor: \"Class constructor may not be an accessor.\",\n  ConstructorIsAsync: \"Constructor can't be an async function.\",\n  ConstructorIsGenerator: \"Constructor can't be a generator.\",\n  DeclarationMissingInitializer: \"'%0' require an initialization value.\",\n  DecoratorBeforeExport: \"Decorators must be placed *before* the 'export' keyword. You can set the 'decoratorsBeforeExport' option to false to use the 'export @decorator class {}' syntax.\",\n  DecoratorConstructor: \"Decorators can't be used with a constructor. Did you mean '@dec class { ... }'?\",\n  DecoratorExportClass: \"Using the export keyword between a decorator and a class is not allowed. Please use `export @dec class` instead.\",\n  DecoratorSemicolon: \"Decorators must not be followed by a semicolon.\",\n  DecoratorStaticBlock: \"Decorators can't be used with a static block.\",\n  DeletePrivateField: \"Deleting a private field is not allowed.\",\n  DestructureNamedImport: \"ES2015 named imports do not destructure. Use another statement for destructuring after the import.\",\n  DuplicateConstructor: \"Duplicate constructor in the same class.\",\n  DuplicateDefaultExport: \"Only one default export allowed per module.\",\n  DuplicateExport: \"`%0` has already been exported. Exported identifiers must be unique.\",\n  DuplicateProto: \"Redefinition of __proto__ property.\",\n  DuplicateRegExpFlags: \"Duplicate regular expression flag.\",\n  ElementAfterRest: \"Rest element must be last element.\",\n  EscapedCharNotAnIdentifier: \"Invalid Unicode escape.\",\n  ExportBindingIsString: \"A string literal cannot be used as an exported binding without `from`.\\n- Did you mean `export { '%0' as '%1' } from 'some-module'`?\",\n  ExportDefaultFromAsIdentifier: \"'from' is not allowed as an identifier after 'export default'.\",\n  ForInOfLoopInitializer: \"'%0' loop variable declaration may not have an initializer.\",\n  ForOfAsync: \"The left-hand side of a for-of loop may not be 'async'.\",\n  ForOfLet: \"The left-hand side of a for-of loop may not start with 'let'.\",\n  GeneratorInSingleStatementContext: \"Generators can only be declared at the top level or inside a block.\",\n  IllegalBreakContinue: \"Unsyntactic %0.\",\n  IllegalLanguageModeDirective: \"Illegal 'use strict' directive in function with non-simple parameter list.\",\n  IllegalReturn: \"'return' outside of function.\",\n  ImportBindingIsString: 'A string literal cannot be used as an imported binding.\\n- Did you mean `import { \"%0\" as foo }`?',\n  ImportCallArgumentTrailingComma: \"Trailing comma is disallowed inside import(...) arguments.\",\n  ImportCallArity: \"`import()` requires exactly %0.\",\n  ImportCallNotNewExpression: \"Cannot use new with import(...).\",\n  ImportCallSpreadArgument: \"`...` is not allowed in `import()`.\",\n  InvalidBigIntLiteral: \"Invalid BigIntLiteral.\",\n  InvalidCodePoint: \"Code point out of bounds.\",\n  InvalidDecimal: \"Invalid decimal.\",\n  InvalidDigit: \"Expected number in radix %0.\",\n  InvalidEscapeSequence: \"Bad character escape sequence.\",\n  InvalidEscapeSequenceTemplate: \"Invalid escape sequence in template.\",\n  InvalidEscapedReservedWord: \"Escape sequence in keyword %0.\",\n  InvalidIdentifier: \"Invalid identifier %0.\",\n  InvalidLhs: \"Invalid left-hand side in %0.\",\n  InvalidLhsBinding: \"Binding invalid left-hand side in %0.\",\n  InvalidNumber: \"Invalid number.\",\n  InvalidOrMissingExponent: \"Floating-point numbers require a valid exponent after the 'e'.\",\n  InvalidOrUnexpectedToken: \"Unexpected character '%0'.\",\n  InvalidParenthesizedAssignment: \"Invalid parenthesized assignment pattern.\",\n  InvalidPrivateFieldResolution: \"Private name #%0 is not defined.\",\n  InvalidPropertyBindingPattern: \"Binding member expression.\",\n  InvalidRecordProperty: \"Only properties and spread elements are allowed in record definitions.\",\n  InvalidRestAssignmentPattern: \"Invalid rest operator's argument.\",\n  LabelRedeclaration: \"Label '%0' is already declared.\",\n  LetInLexicalBinding: \"'let' is not allowed to be used as a name in 'let' or 'const' declarations.\",\n  LineTerminatorBeforeArrow: \"No line break is allowed before '=>'.\",\n  MalformedRegExpFlags: \"Invalid regular expression flag.\",\n  MissingClassName: \"A class name is required.\",\n  MissingEqInAssignment: \"Only '=' operator can be used for specifying default value.\",\n  MissingSemicolon: \"Missing semicolon.\",\n  MissingUnicodeEscape: \"Expecting Unicode escape sequence \\\\uXXXX.\",\n  MixingCoalesceWithLogical: \"Nullish coalescing operator(??) requires parens when mixing with logical operators.\",\n  ModuleAttributeDifferentFromType: \"The only accepted module attribute is `type`.\",\n  ModuleAttributeInvalidValue: \"Only string literals are allowed as module attribute values.\",\n  ModuleAttributesWithDuplicateKeys: 'Duplicate key \"%0\" is not allowed in module attributes.',\n  ModuleExportNameHasLoneSurrogate: \"An export name cannot include a lone surrogate, found '\\\\u%0'.\",\n  ModuleExportUndefined: \"Export '%0' is not defined.\",\n  MultipleDefaultsInSwitch: \"Multiple default clauses.\",\n  NewlineAfterThrow: \"Illegal newline after throw.\",\n  NoCatchOrFinally: \"Missing catch or finally clause.\",\n  NumberIdentifier: \"Identifier directly after number.\",\n  NumericSeparatorInEscapeSequence: \"Numeric separators are not allowed inside unicode escape sequences or hex escape sequences.\",\n  ObsoleteAwaitStar: \"'await*' has been removed from the async functions proposal. Use Promise.all() instead.\",\n  OptionalChainingNoNew: \"Constructors in/after an Optional Chain are not allowed.\",\n  OptionalChainingNoTemplate: \"Tagged Template Literals are not allowed in optionalChain.\",\n  OverrideOnConstructor: \"'override' modifier cannot appear on a constructor declaration.\",\n  ParamDupe: \"Argument name clash.\",\n  PatternHasAccessor: \"Object pattern can't contain getter or setter.\",\n  PatternHasMethod: \"Object pattern can't contain methods.\",\n  PipelineBodyNoArrow: 'Unexpected arrow \"=>\" after pipeline body; arrow function in pipeline body must be parenthesized.',\n  PipelineBodySequenceExpression: \"Pipeline body may not be a comma-separated sequence expression.\",\n  PipelineHeadSequenceExpression: \"Pipeline head should not be a comma-separated sequence expression.\",\n  PipelineTopicUnused: \"Pipeline is in topic style but does not use topic reference.\",\n  PrimaryTopicNotAllowed: \"Topic reference was used in a lexical context without topic binding.\",\n  PrimaryTopicRequiresSmartPipeline: \"Primary Topic Reference found but pipelineOperator not passed 'smart' for 'proposal' option.\",\n  PrivateInExpectedIn: \"Private names are only allowed in property accesses (`obj.#%0`) or in `in` expressions (`#%0 in obj`).\",\n  PrivateNameRedeclaration: \"Duplicate private name #%0.\",\n  RecordExpressionBarIncorrectEndSyntaxType: \"Record expressions ending with '|}' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'.\",\n  RecordExpressionBarIncorrectStartSyntaxType: \"Record expressions starting with '{|' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'.\",\n  RecordExpressionHashIncorrectStartSyntaxType: \"Record expressions starting with '#{' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'hash'.\",\n  RecordNoProto: \"'__proto__' is not allowed in Record expressions.\",\n  RestTrailingComma: \"Unexpected trailing comma after rest element.\",\n  SloppyFunction: \"In non-strict mode code, functions can only be declared at top level, inside a block, or as the body of an if statement.\",\n  StaticPrototype: \"Classes may not have static property named prototype.\",\n  StrictDelete: \"Deleting local variable in strict mode.\",\n  StrictEvalArguments: \"Assigning to '%0' in strict mode.\",\n  StrictEvalArgumentsBinding: \"Binding '%0' in strict mode.\",\n  StrictFunction: \"In strict mode code, functions can only be declared at top level or inside a block.\",\n  StrictNumericEscape: \"The only valid numeric escape in strict mode is '\\\\0'.\",\n  StrictOctalLiteral: \"Legacy octal literals are not allowed in strict mode.\",\n  StrictWith: \"'with' in strict mode.\",\n  SuperNotAllowed: \"`super()` is only valid inside a class constructor of a subclass. Maybe a typo in the method name ('constructor') or not extending another class?\",\n  SuperPrivateField: \"Private fields can't be accessed on super.\",\n  TrailingDecorator: \"Decorators must be attached to a class element.\",\n  TupleExpressionBarIncorrectEndSyntaxType: \"Tuple expressions ending with '|]' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'.\",\n  TupleExpressionBarIncorrectStartSyntaxType: \"Tuple expressions starting with '[|' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'.\",\n  TupleExpressionHashIncorrectStartSyntaxType: \"Tuple expressions starting with '#[' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'hash'.\",\n  UnexpectedArgumentPlaceholder: \"Unexpected argument placeholder.\",\n  UnexpectedAwaitAfterPipelineBody: 'Unexpected \"await\" after pipeline body; await must have parentheses in minimal proposal.',\n  UnexpectedDigitAfterHash: \"Unexpected digit after hash token.\",\n  UnexpectedImportExport: \"'import' and 'export' may only appear at the top level.\",\n  UnexpectedKeyword: \"Unexpected keyword '%0'.\",\n  UnexpectedLeadingDecorator: \"Leading decorators must be attached to a class declaration.\",\n  UnexpectedLexicalDeclaration: \"Lexical declaration cannot appear in a single-statement context.\",\n  UnexpectedNewTarget: \"`new.target` can only be used in functions or class properties.\",\n  UnexpectedNumericSeparator: \"A numeric separator is only allowed between two digits.\",\n  UnexpectedPrivateField: \"Private names can only be used as the name of a class element (i.e. class C { #p = 42; #m() {} } )\\n or a property of member expression (i.e. this.#p).\",\n  UnexpectedReservedWord: \"Unexpected reserved word '%0'.\",\n  UnexpectedSuper: \"'super' is only allowed in object methods and classes.\",\n  UnexpectedToken: \"Unexpected token '%0'.\",\n  UnexpectedTokenUnaryExponentiation: \"Illegal expression. Wrap left hand side or entire exponentiation in parentheses.\",\n  UnsupportedBind: \"Binding should be performed on object property.\",\n  UnsupportedDecoratorExport: \"A decorated export must export a class declaration.\",\n  UnsupportedDefaultExport: \"Only expressions, functions or classes are allowed as the `default` export.\",\n  UnsupportedImport: \"`import` can only be used in `import()` or `import.meta`.\",\n  UnsupportedMetaProperty: \"The only valid meta property for %0 is %0.%1.\",\n  UnsupportedParameterDecorator: \"Decorators cannot be used to decorate parameters.\",\n  UnsupportedPropertyDecorator: \"Decorators cannot be used to decorate object literal properties.\",\n  UnsupportedSuper: \"'super' can only be used with function calls (i.e. super()) or in property accesses (i.e. super.prop or super[prop]).\",\n  UnterminatedComment: \"Unterminated comment.\",\n  UnterminatedRegExp: \"Unterminated regular expression.\",\n  UnterminatedString: \"Unterminated string constant.\",\n  UnterminatedTemplate: \"Unterminated template.\",\n  VarRedeclaration: \"Identifier '%0' has already been declared.\",\n  YieldBindingIdentifier: \"Can not use 'yield' as identifier inside a generator.\",\n  YieldInParameter: \"Yield expression is not allowed in formal parameters.\",\n  ZeroDigitNumericSeparator: \"Numeric separator can not be used after leading 0.\"\n}, ErrorCodes.SyntaxError);\nconst SourceTypeModuleErrorMessages = makeErrorTemplates({\n  ImportMetaOutsideModule: `import.meta may appear only with 'sourceType: \"module\"'`,\n  ImportOutsideModule: `'import' and 'export' may appear only with 'sourceType: \"module\"'`\n}, ErrorCodes.SourceTypeModuleError);\n\nfunction makeErrorTemplates(messages, code) {\n  const templates = {};\n  Object.keys(messages).forEach(reasonCode => {\n    templates[reasonCode] = Object.freeze({\n      code,\n      reasonCode,\n      template: messages[reasonCode]\n    });\n  });\n  return Object.freeze(templates);\n}\nclass ParserError extends CommentsParser {\n  getLocationForPosition(pos) {\n    let loc;\n    if (pos === this.state.start) loc = this.state.startLoc;else if (pos === this.state.lastTokStart) loc = this.state.lastTokStartLoc;else if (pos === this.state.end) loc = this.state.endLoc;else if (pos === this.state.lastTokEnd) loc = this.state.lastTokEndLoc;else loc = getLineInfo(this.input, pos);\n    return loc;\n  }\n\n  raise(pos, {\n    code,\n    reasonCode,\n    template\n  }, ...params) {\n    return this.raiseWithData(pos, {\n      code,\n      reasonCode\n    }, template, ...params);\n  }\n\n  raiseOverwrite(pos, {\n    code,\n    template\n  }, ...params) {\n    const loc = this.getLocationForPosition(pos);\n    const message = template.replace(/%(\\d+)/g, (_, i) => params[i]) + ` (${loc.line}:${loc.column})`;\n\n    if (this.options.errorRecovery) {\n      const errors = this.state.errors;\n\n      for (let i = errors.length - 1; i >= 0; i--) {\n        const error = errors[i];\n\n        if (error.pos === pos) {\n          return Object.assign(error, {\n            message\n          });\n        } else if (error.pos < pos) {\n          break;\n        }\n      }\n    }\n\n    return this._raise({\n      code,\n      loc,\n      pos\n    }, message);\n  }\n\n  raiseWithData(pos, data, errorTemplate, ...params) {\n    const loc = this.getLocationForPosition(pos);\n    const message = errorTemplate.replace(/%(\\d+)/g, (_, i) => params[i]) + ` (${loc.line}:${loc.column})`;\n    return this._raise(Object.assign({\n      loc,\n      pos\n    }, data), message);\n  }\n\n  _raise(errorContext, message) {\n    const err = new SyntaxError(message);\n    Object.assign(err, errorContext);\n\n    if (this.options.errorRecovery) {\n      if (!this.isLookahead) this.state.errors.push(err);\n      return err;\n    } else {\n      throw err;\n    }\n  }\n\n}\n\nvar estree = (superClass => class extends superClass {\n  estreeParseRegExpLiteral({\n    pattern,\n    flags\n  }) {\n    let regex = null;\n\n    try {\n      regex = new RegExp(pattern, flags);\n    } catch (e) {}\n\n    const node = this.estreeParseLiteral(regex);\n    node.regex = {\n      pattern,\n      flags\n    };\n    return node;\n  }\n\n  estreeParseBigIntLiteral(value) {\n    let bigInt;\n\n    try {\n      bigInt = BigInt(value);\n    } catch (_unused) {\n      bigInt = null;\n    }\n\n    const node = this.estreeParseLiteral(bigInt);\n    node.bigint = String(node.value || value);\n    return node;\n  }\n\n  estreeParseDecimalLiteral(value) {\n    const decimal = null;\n    const node = this.estreeParseLiteral(decimal);\n    node.decimal = String(node.value || value);\n    return node;\n  }\n\n  estreeParseLiteral(value) {\n    return this.parseLiteral(value, \"Literal\");\n  }\n\n  directiveToStmt(directive) {\n    const directiveLiteral = directive.value;\n    const stmt = this.startNodeAt(directive.start, directive.loc.start);\n    const expression = this.startNodeAt(directiveLiteral.start, directiveLiteral.loc.start);\n    expression.value = directiveLiteral.extra.expressionValue;\n    expression.raw = directiveLiteral.extra.raw;\n    stmt.expression = this.finishNodeAt(expression, \"Literal\", directiveLiteral.end, directiveLiteral.loc.end);\n    stmt.directive = directiveLiteral.extra.raw.slice(1, -1);\n    return this.finishNodeAt(stmt, \"ExpressionStatement\", directive.end, directive.loc.end);\n  }\n\n  initFunction(node, isAsync) {\n    super.initFunction(node, isAsync);\n    node.expression = false;\n  }\n\n  checkDeclaration(node) {\n    if (node != null && this.isObjectProperty(node)) {\n      this.checkDeclaration(node.value);\n    } else {\n      super.checkDeclaration(node);\n    }\n  }\n\n  getObjectOrClassMethodParams(method) {\n    return method.value.params;\n  }\n\n  isValidDirective(stmt) {\n    var _stmt$expression$extr;\n\n    return stmt.type === \"ExpressionStatement\" && stmt.expression.type === \"Literal\" && typeof stmt.expression.value === \"string\" && !((_stmt$expression$extr = stmt.expression.extra) != null && _stmt$expression$extr.parenthesized);\n  }\n\n  stmtToDirective(stmt) {\n    const directive = super.stmtToDirective(stmt);\n    const value = stmt.expression.value;\n    this.addExtra(directive.value, \"expressionValue\", value);\n    return directive;\n  }\n\n  parseBlockBody(node, ...args) {\n    super.parseBlockBody(node, ...args);\n    const directiveStatements = node.directives.map(d => this.directiveToStmt(d));\n    node.body = directiveStatements.concat(node.body);\n    delete node.directives;\n  }\n\n  pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper) {\n    this.parseMethod(method, isGenerator, isAsync, isConstructor, allowsDirectSuper, \"ClassMethod\", true);\n\n    if (method.typeParameters) {\n      method.value.typeParameters = method.typeParameters;\n      delete method.typeParameters;\n    }\n\n    classBody.body.push(method);\n  }\n\n  parseExprAtom(refExpressionErrors) {\n    switch (this.state.type) {\n      case types.num:\n      case types.string:\n        return this.estreeParseLiteral(this.state.value);\n\n      case types.regexp:\n        return this.estreeParseRegExpLiteral(this.state.value);\n\n      case types.bigint:\n        return this.estreeParseBigIntLiteral(this.state.value);\n\n      case types.decimal:\n        return this.estreeParseDecimalLiteral(this.state.value);\n\n      case types._null:\n        return this.estreeParseLiteral(null);\n\n      case types._true:\n        return this.estreeParseLiteral(true);\n\n      case types._false:\n        return this.estreeParseLiteral(false);\n\n      default:\n        return super.parseExprAtom(refExpressionErrors);\n    }\n  }\n\n  parseMaybePrivateName(...args) {\n    const node = super.parseMaybePrivateName(...args);\n\n    if (node.type === \"PrivateName\" && this.getPluginOption(\"estree\", \"classFeatures\")) {\n      return this.convertPrivateNameToPrivateIdentifier(node);\n    }\n\n    return node;\n  }\n\n  convertPrivateNameToPrivateIdentifier(node) {\n    const name = super.getPrivateNameSV(node);\n    node = node;\n    delete node.id;\n    node.name = name;\n    node.type = \"PrivateIdentifier\";\n    return node;\n  }\n\n  isPrivateName(node) {\n    if (!this.getPluginOption(\"estree\", \"classFeatures\")) {\n      return super.isPrivateName(node);\n    }\n\n    return node.type === \"PrivateIdentifier\";\n  }\n\n  getPrivateNameSV(node) {\n    if (!this.getPluginOption(\"estree\", \"classFeatures\")) {\n      return super.getPrivateNameSV(node);\n    }\n\n    return node.name;\n  }\n\n  parseLiteral(value, type, startPos, startLoc) {\n    const node = super.parseLiteral(value, type, startPos, startLoc);\n    node.raw = node.extra.raw;\n    delete node.extra;\n    return node;\n  }\n\n  parseFunctionBody(node, allowExpression, isMethod = false) {\n    super.parseFunctionBody(node, allowExpression, isMethod);\n    node.expression = node.body.type !== \"BlockStatement\";\n  }\n\n  parseMethod(node, isGenerator, isAsync, isConstructor, allowDirectSuper, type, inClassScope = false) {\n    let funcNode = this.startNode();\n    funcNode.kind = node.kind;\n    funcNode = super.parseMethod(funcNode, isGenerator, isAsync, isConstructor, allowDirectSuper, type, inClassScope);\n    funcNode.type = \"FunctionExpression\";\n    delete funcNode.kind;\n    node.value = funcNode;\n\n    if (type === \"ClassPrivateMethod\") {\n      node.computed = false;\n    }\n\n    type = \"MethodDefinition\";\n    return this.finishNode(node, type);\n  }\n\n  parseClassProperty(...args) {\n    const propertyNode = super.parseClassProperty(...args);\n\n    if (this.getPluginOption(\"estree\", \"classFeatures\")) {\n      propertyNode.type = \"PropertyDefinition\";\n    }\n\n    return propertyNode;\n  }\n\n  parseClassPrivateProperty(...args) {\n    const propertyNode = super.parseClassPrivateProperty(...args);\n\n    if (this.getPluginOption(\"estree\", \"classFeatures\")) {\n      propertyNode.type = \"PropertyDefinition\";\n      propertyNode.computed = false;\n    }\n\n    return propertyNode;\n  }\n\n  parseObjectMethod(prop, isGenerator, isAsync, isPattern, isAccessor) {\n    const node = super.parseObjectMethod(prop, isGenerator, isAsync, isPattern, isAccessor);\n\n    if (node) {\n      node.type = \"Property\";\n      if (node.kind === \"method\") node.kind = \"init\";\n      node.shorthand = false;\n    }\n\n    return node;\n  }\n\n  parseObjectProperty(prop, startPos, startLoc, isPattern, refExpressionErrors) {\n    const node = super.parseObjectProperty(prop, startPos, startLoc, isPattern, refExpressionErrors);\n\n    if (node) {\n      node.kind = \"init\";\n      node.type = \"Property\";\n    }\n\n    return node;\n  }\n\n  toAssignable(node, isLHS = false) {\n    if (node != null && this.isObjectProperty(node)) {\n      this.toAssignable(node.value, isLHS);\n      return node;\n    }\n\n    return super.toAssignable(node, isLHS);\n  }\n\n  toAssignableObjectExpressionProp(prop, ...args) {\n    if (prop.kind === \"get\" || prop.kind === \"set\") {\n      this.raise(prop.key.start, ErrorMessages.PatternHasAccessor);\n    } else if (prop.method) {\n      this.raise(prop.key.start, ErrorMessages.PatternHasMethod);\n    } else {\n      super.toAssignableObjectExpressionProp(prop, ...args);\n    }\n  }\n\n  finishCallExpression(node, optional) {\n    super.finishCallExpression(node, optional);\n\n    if (node.callee.type === \"Import\") {\n      node.type = \"ImportExpression\";\n      node.source = node.arguments[0];\n      delete node.arguments;\n      delete node.callee;\n    }\n\n    return node;\n  }\n\n  toReferencedArguments(node) {\n    if (node.type === \"ImportExpression\") {\n      return;\n    }\n\n    super.toReferencedArguments(node);\n  }\n\n  parseExport(node) {\n    super.parseExport(node);\n\n    switch (node.type) {\n      case \"ExportAllDeclaration\":\n        node.exported = null;\n        break;\n\n      case \"ExportNamedDeclaration\":\n        if (node.specifiers.length === 1 && node.specifiers[0].type === \"ExportNamespaceSpecifier\") {\n          node.type = \"ExportAllDeclaration\";\n          node.exported = node.specifiers[0].exported;\n          delete node.specifiers;\n        }\n\n        break;\n    }\n\n    return node;\n  }\n\n  parseSubscript(base, startPos, startLoc, noCalls, state) {\n    const node = super.parseSubscript(base, startPos, startLoc, noCalls, state);\n\n    if (state.optionalChainMember) {\n      if (node.type === \"OptionalMemberExpression\" || node.type === \"OptionalCallExpression\") {\n        node.type = node.type.substring(8);\n      }\n\n      if (state.stop) {\n        const chain = this.startNodeAtNode(node);\n        chain.expression = node;\n        return this.finishNode(chain, \"ChainExpression\");\n      }\n    } else if (node.type === \"MemberExpression\" || node.type === \"CallExpression\") {\n      node.optional = false;\n    }\n\n    return node;\n  }\n\n  hasPropertyAsPrivateName(node) {\n    if (node.type === \"ChainExpression\") {\n      node = node.expression;\n    }\n\n    return super.hasPropertyAsPrivateName(node);\n  }\n\n  isOptionalChain(node) {\n    return node.type === \"ChainExpression\";\n  }\n\n  isObjectProperty(node) {\n    return node.type === \"Property\" && node.kind === \"init\" && !node.method;\n  }\n\n  isObjectMethod(node) {\n    return node.method || node.kind === \"get\" || node.kind === \"set\";\n  }\n\n});\n\nclass TokContext {\n  constructor(token, isExpr, preserveSpace, override) {\n    this.token = void 0;\n    this.isExpr = void 0;\n    this.preserveSpace = void 0;\n    this.override = void 0;\n    this.token = token;\n    this.isExpr = !!isExpr;\n    this.preserveSpace = !!preserveSpace;\n    this.override = override;\n  }\n\n}\nconst types$1 = {\n  braceStatement: new TokContext(\"{\", false),\n  braceExpression: new TokContext(\"{\", true),\n  recordExpression: new TokContext(\"#{\", true),\n  templateQuasi: new TokContext(\"${\", false),\n  parenStatement: new TokContext(\"(\", false),\n  parenExpression: new TokContext(\"(\", true),\n  template: new TokContext(\"`\", true, true, p => p.readTmplToken()),\n  functionExpression: new TokContext(\"function\", true),\n  functionStatement: new TokContext(\"function\", false)\n};\n\ntypes.parenR.updateContext = types.braceR.updateContext = function () {\n  if (this.state.context.length === 1) {\n    this.state.exprAllowed = true;\n    return;\n  }\n\n  let out = this.state.context.pop();\n\n  if (out === types$1.braceStatement && this.curContext().token === \"function\") {\n    out = this.state.context.pop();\n  }\n\n  this.state.exprAllowed = !out.isExpr;\n};\n\ntypes.name.updateContext = function (prevType) {\n  let allowed = false;\n\n  if (prevType !== types.dot) {\n    if (this.state.value === \"of\" && !this.state.exprAllowed && prevType !== types._function && prevType !== types._class) {\n      allowed = true;\n    }\n  }\n\n  this.state.exprAllowed = allowed;\n\n  if (this.state.isIterator) {\n    this.state.isIterator = false;\n  }\n};\n\ntypes.braceL.updateContext = function (prevType) {\n  this.state.context.push(this.braceIsBlock(prevType) ? types$1.braceStatement : types$1.braceExpression);\n  this.state.exprAllowed = true;\n};\n\ntypes.dollarBraceL.updateContext = function () {\n  this.state.context.push(types$1.templateQuasi);\n  this.state.exprAllowed = true;\n};\n\ntypes.parenL.updateContext = function (prevType) {\n  const statementParens = prevType === types._if || prevType === types._for || prevType === types._with || prevType === types._while;\n  this.state.context.push(statementParens ? types$1.parenStatement : types$1.parenExpression);\n  this.state.exprAllowed = true;\n};\n\ntypes.incDec.updateContext = function () {};\n\ntypes._function.updateContext = types._class.updateContext = function (prevType) {\n  if (prevType.beforeExpr && prevType !== types.semi && prevType !== types._else && !(prevType === types._return && this.hasPrecedingLineBreak()) && !((prevType === types.colon || prevType === types.braceL) && this.curContext() === types$1.b_stat)) {\n    this.state.context.push(types$1.functionExpression);\n  } else {\n    this.state.context.push(types$1.functionStatement);\n  }\n\n  this.state.exprAllowed = false;\n};\n\ntypes.backQuote.updateContext = function () {\n  if (this.curContext() === types$1.template) {\n    this.state.context.pop();\n  } else {\n    this.state.context.push(types$1.template);\n  }\n\n  this.state.exprAllowed = false;\n};\n\ntypes.braceHashL.updateContext = function () {\n  this.state.context.push(types$1.recordExpression);\n  this.state.exprAllowed = true;\n};\n\nlet nonASCIIidentifierStartChars = \"\\xaa\\xb5\\xba\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02c1\\u02c6-\\u02d1\\u02e0-\\u02e4\\u02ec\\u02ee\\u0370-\\u0374\\u0376\\u0377\\u037a-\\u037d\\u037f\\u0386\\u0388-\\u038a\\u038c\\u038e-\\u03a1\\u03a3-\\u03f5\\u03f7-\\u0481\\u048a-\\u052f\\u0531-\\u0556\\u0559\\u0560-\\u0588\\u05d0-\\u05ea\\u05ef-\\u05f2\\u0620-\\u064a\\u066e\\u066f\\u0671-\\u06d3\\u06d5\\u06e5\\u06e6\\u06ee\\u06ef\\u06fa-\\u06fc\\u06ff\\u0710\\u0712-\\u072f\\u074d-\\u07a5\\u07b1\\u07ca-\\u07ea\\u07f4\\u07f5\\u07fa\\u0800-\\u0815\\u081a\\u0824\\u0828\\u0840-\\u0858\\u0860-\\u086a\\u08a0-\\u08b4\\u08b6-\\u08c7\\u0904-\\u0939\\u093d\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098c\\u098f\\u0990\\u0993-\\u09a8\\u09aa-\\u09b0\\u09b2\\u09b6-\\u09b9\\u09bd\\u09ce\\u09dc\\u09dd\\u09df-\\u09e1\\u09f0\\u09f1\\u09fc\\u0a05-\\u0a0a\\u0a0f\\u0a10\\u0a13-\\u0a28\\u0a2a-\\u0a30\\u0a32\\u0a33\\u0a35\\u0a36\\u0a38\\u0a39\\u0a59-\\u0a5c\\u0a5e\\u0a72-\\u0a74\\u0a85-\\u0a8d\\u0a8f-\\u0a91\\u0a93-\\u0aa8\\u0aaa-\\u0ab0\\u0ab2\\u0ab3\\u0ab5-\\u0ab9\\u0abd\\u0ad0\\u0ae0\\u0ae1\\u0af9\\u0b05-\\u0b0c\\u0b0f\\u0b10\\u0b13-\\u0b28\\u0b2a-\\u0b30\\u0b32\\u0b33\\u0b35-\\u0b39\\u0b3d\\u0b5c\\u0b5d\\u0b5f-\\u0b61\\u0b71\\u0b83\\u0b85-\\u0b8a\\u0b8e-\\u0b90\\u0b92-\\u0b95\\u0b99\\u0b9a\\u0b9c\\u0b9e\\u0b9f\\u0ba3\\u0ba4\\u0ba8-\\u0baa\\u0bae-\\u0bb9\\u0bd0\\u0c05-\\u0c0c\\u0c0e-\\u0c10\\u0c12-\\u0c28\\u0c2a-\\u0c39\\u0c3d\\u0c58-\\u0c5a\\u0c60\\u0c61\\u0c80\\u0c85-\\u0c8c\\u0c8e-\\u0c90\\u0c92-\\u0ca8\\u0caa-\\u0cb3\\u0cb5-\\u0cb9\\u0cbd\\u0cde\\u0ce0\\u0ce1\\u0cf1\\u0cf2\\u0d04-\\u0d0c\\u0d0e-\\u0d10\\u0d12-\\u0d3a\\u0d3d\\u0d4e\\u0d54-\\u0d56\\u0d5f-\\u0d61\\u0d7a-\\u0d7f\\u0d85-\\u0d96\\u0d9a-\\u0db1\\u0db3-\\u0dbb\\u0dbd\\u0dc0-\\u0dc6\\u0e01-\\u0e30\\u0e32\\u0e33\\u0e40-\\u0e46\\u0e81\\u0e82\\u0e84\\u0e86-\\u0e8a\\u0e8c-\\u0ea3\\u0ea5\\u0ea7-\\u0eb0\\u0eb2\\u0eb3\\u0ebd\\u0ec0-\\u0ec4\\u0ec6\\u0edc-\\u0edf\\u0f00\\u0f40-\\u0f47\\u0f49-\\u0f6c\\u0f88-\\u0f8c\\u1000-\\u102a\\u103f\\u1050-\\u1055\\u105a-\\u105d\\u1061\\u1065\\u1066\\u106e-\\u1070\\u1075-\\u1081\\u108e\\u10a0-\\u10c5\\u10c7\\u10cd\\u10d0-\\u10fa\\u10fc-\\u1248\\u124a-\\u124d\\u1250-\\u1256\\u1258\\u125a-\\u125d\\u1260-\\u1288\\u128a-\\u128d\\u1290-\\u12b0\\u12b2-\\u12b5\\u12b8-\\u12be\\u12c0\\u12c2-\\u12c5\\u12c8-\\u12d6\\u12d8-\\u1310\\u1312-\\u1315\\u1318-\\u135a\\u1380-\\u138f\\u13a0-\\u13f5\\u13f8-\\u13fd\\u1401-\\u166c\\u166f-\\u167f\\u1681-\\u169a\\u16a0-\\u16ea\\u16ee-\\u16f8\\u1700-\\u170c\\u170e-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176c\\u176e-\\u1770\\u1780-\\u17b3\\u17d7\\u17dc\\u1820-\\u1878\\u1880-\\u18a8\\u18aa\\u18b0-\\u18f5\\u1900-\\u191e\\u1950-\\u196d\\u1970-\\u1974\\u1980-\\u19ab\\u19b0-\\u19c9\\u1a00-\\u1a16\\u1a20-\\u1a54\\u1aa7\\u1b05-\\u1b33\\u1b45-\\u1b4b\\u1b83-\\u1ba0\\u1bae\\u1baf\\u1bba-\\u1be5\\u1c00-\\u1c23\\u1c4d-\\u1c4f\\u1c5a-\\u1c7d\\u1c80-\\u1c88\\u1c90-\\u1cba\\u1cbd-\\u1cbf\\u1ce9-\\u1cec\\u1cee-\\u1cf3\\u1cf5\\u1cf6\\u1cfa\\u1d00-\\u1dbf\\u1e00-\\u1f15\\u1f18-\\u1f1d\\u1f20-\\u1f45\\u1f48-\\u1f4d\\u1f50-\\u1f57\\u1f59\\u1f5b\\u1f5d\\u1f5f-\\u1f7d\\u1f80-\\u1fb4\\u1fb6-\\u1fbc\\u1fbe\\u1fc2-\\u1fc4\\u1fc6-\\u1fcc\\u1fd0-\\u1fd3\\u1fd6-\\u1fdb\\u1fe0-\\u1fec\\u1ff2-\\u1ff4\\u1ff6-\\u1ffc\\u2071\\u207f\\u2090-\\u209c\\u2102\\u2107\\u210a-\\u2113\\u2115\\u2118-\\u211d\\u2124\\u2126\\u2128\\u212a-\\u2139\\u213c-\\u213f\\u2145-\\u2149\\u214e\\u2160-\\u2188\\u2c00-\\u2c2e\\u2c30-\\u2c5e\\u2c60-\\u2ce4\\u2ceb-\\u2cee\\u2cf2\\u2cf3\\u2d00-\\u2d25\\u2d27\\u2d2d\\u2d30-\\u2d67\\u2d6f\\u2d80-\\u2d96\\u2da0-\\u2da6\\u2da8-\\u2dae\\u2db0-\\u2db6\\u2db8-\\u2dbe\\u2dc0-\\u2dc6\\u2dc8-\\u2dce\\u2dd0-\\u2dd6\\u2dd8-\\u2dde\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303c\\u3041-\\u3096\\u309b-\\u309f\\u30a1-\\u30fa\\u30fc-\\u30ff\\u3105-\\u312f\\u3131-\\u318e\\u31a0-\\u31bf\\u31f0-\\u31ff\\u3400-\\u4dbf\\u4e00-\\u9ffc\\ua000-\\ua48c\\ua4d0-\\ua4fd\\ua500-\\ua60c\\ua610-\\ua61f\\ua62a\\ua62b\\ua640-\\ua66e\\ua67f-\\ua69d\\ua6a0-\\ua6ef\\ua717-\\ua71f\\ua722-\\ua788\\ua78b-\\ua7bf\\ua7c2-\\ua7ca\\ua7f5-\\ua801\\ua803-\\ua805\\ua807-\\ua80a\\ua80c-\\ua822\\ua840-\\ua873\\ua882-\\ua8b3\\ua8f2-\\ua8f7\\ua8fb\\ua8fd\\ua8fe\\ua90a-\\ua925\\ua930-\\ua946\\ua960-\\ua97c\\ua984-\\ua9b2\\ua9cf\\ua9e0-\\ua9e4\\ua9e6-\\ua9ef\\ua9fa-\\ua9fe\\uaa00-\\uaa28\\uaa40-\\uaa42\\uaa44-\\uaa4b\\uaa60-\\uaa76\\uaa7a\\uaa7e-\\uaaaf\\uaab1\\uaab5\\uaab6\\uaab9-\\uaabd\\uaac0\\uaac2\\uaadb-\\uaadd\\uaae0-\\uaaea\\uaaf2-\\uaaf4\\uab01-\\uab06\\uab09-\\uab0e\\uab11-\\uab16\\uab20-\\uab26\\uab28-\\uab2e\\uab30-\\uab5a\\uab5c-\\uab69\\uab70-\\uabe2\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\uf900-\\ufa6d\\ufa70-\\ufad9\\ufb00-\\ufb06\\ufb13-\\ufb17\\ufb1d\\ufb1f-\\ufb28\\ufb2a-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40\\ufb41\\ufb43\\ufb44\\ufb46-\\ufbb1\\ufbd3-\\ufd3d\\ufd50-\\ufd8f\\ufd92-\\ufdc7\\ufdf0-\\ufdfb\\ufe70-\\ufe74\\ufe76-\\ufefc\\uff21-\\uff3a\\uff41-\\uff5a\\uff66-\\uffbe\\uffc2-\\uffc7\\uffca-\\uffcf\\uffd2-\\uffd7\\uffda-\\uffdc\";\nlet nonASCIIidentifierChars = \"\\u200c\\u200d\\xb7\\u0300-\\u036f\\u0387\\u0483-\\u0487\\u0591-\\u05bd\\u05bf\\u05c1\\u05c2\\u05c4\\u05c5\\u05c7\\u0610-\\u061a\\u064b-\\u0669\\u0670\\u06d6-\\u06dc\\u06df-\\u06e4\\u06e7\\u06e8\\u06ea-\\u06ed\\u06f0-\\u06f9\\u0711\\u0730-\\u074a\\u07a6-\\u07b0\\u07c0-\\u07c9\\u07eb-\\u07f3\\u07fd\\u0816-\\u0819\\u081b-\\u0823\\u0825-\\u0827\\u0829-\\u082d\\u0859-\\u085b\\u08d3-\\u08e1\\u08e3-\\u0903\\u093a-\\u093c\\u093e-\\u094f\\u0951-\\u0957\\u0962\\u0963\\u0966-\\u096f\\u0981-\\u0983\\u09bc\\u09be-\\u09c4\\u09c7\\u09c8\\u09cb-\\u09cd\\u09d7\\u09e2\\u09e3\\u09e6-\\u09ef\\u09fe\\u0a01-\\u0a03\\u0a3c\\u0a3e-\\u0a42\\u0a47\\u0a48\\u0a4b-\\u0a4d\\u0a51\\u0a66-\\u0a71\\u0a75\\u0a81-\\u0a83\\u0abc\\u0abe-\\u0ac5\\u0ac7-\\u0ac9\\u0acb-\\u0acd\\u0ae2\\u0ae3\\u0ae6-\\u0aef\\u0afa-\\u0aff\\u0b01-\\u0b03\\u0b3c\\u0b3e-\\u0b44\\u0b47\\u0b48\\u0b4b-\\u0b4d\\u0b55-\\u0b57\\u0b62\\u0b63\\u0b66-\\u0b6f\\u0b82\\u0bbe-\\u0bc2\\u0bc6-\\u0bc8\\u0bca-\\u0bcd\\u0bd7\\u0be6-\\u0bef\\u0c00-\\u0c04\\u0c3e-\\u0c44\\u0c46-\\u0c48\\u0c4a-\\u0c4d\\u0c55\\u0c56\\u0c62\\u0c63\\u0c66-\\u0c6f\\u0c81-\\u0c83\\u0cbc\\u0cbe-\\u0cc4\\u0cc6-\\u0cc8\\u0cca-\\u0ccd\\u0cd5\\u0cd6\\u0ce2\\u0ce3\\u0ce6-\\u0cef\\u0d00-\\u0d03\\u0d3b\\u0d3c\\u0d3e-\\u0d44\\u0d46-\\u0d48\\u0d4a-\\u0d4d\\u0d57\\u0d62\\u0d63\\u0d66-\\u0d6f\\u0d81-\\u0d83\\u0dca\\u0dcf-\\u0dd4\\u0dd6\\u0dd8-\\u0ddf\\u0de6-\\u0def\\u0df2\\u0df3\\u0e31\\u0e34-\\u0e3a\\u0e47-\\u0e4e\\u0e50-\\u0e59\\u0eb1\\u0eb4-\\u0ebc\\u0ec8-\\u0ecd\\u0ed0-\\u0ed9\\u0f18\\u0f19\\u0f20-\\u0f29\\u0f35\\u0f37\\u0f39\\u0f3e\\u0f3f\\u0f71-\\u0f84\\u0f86\\u0f87\\u0f8d-\\u0f97\\u0f99-\\u0fbc\\u0fc6\\u102b-\\u103e\\u1040-\\u1049\\u1056-\\u1059\\u105e-\\u1060\\u1062-\\u1064\\u1067-\\u106d\\u1071-\\u1074\\u1082-\\u108d\\u108f-\\u109d\\u135d-\\u135f\\u1369-\\u1371\\u1712-\\u1714\\u1732-\\u1734\\u1752\\u1753\\u1772\\u1773\\u17b4-\\u17d3\\u17dd\\u17e0-\\u17e9\\u180b-\\u180d\\u1810-\\u1819\\u18a9\\u1920-\\u192b\\u1930-\\u193b\\u1946-\\u194f\\u19d0-\\u19da\\u1a17-\\u1a1b\\u1a55-\\u1a5e\\u1a60-\\u1a7c\\u1a7f-\\u1a89\\u1a90-\\u1a99\\u1ab0-\\u1abd\\u1abf\\u1ac0\\u1b00-\\u1b04\\u1b34-\\u1b44\\u1b50-\\u1b59\\u1b6b-\\u1b73\\u1b80-\\u1b82\\u1ba1-\\u1bad\\u1bb0-\\u1bb9\\u1be6-\\u1bf3\\u1c24-\\u1c37\\u1c40-\\u1c49\\u1c50-\\u1c59\\u1cd0-\\u1cd2\\u1cd4-\\u1ce8\\u1ced\\u1cf4\\u1cf7-\\u1cf9\\u1dc0-\\u1df9\\u1dfb-\\u1dff\\u203f\\u2040\\u2054\\u20d0-\\u20dc\\u20e1\\u20e5-\\u20f0\\u2cef-\\u2cf1\\u2d7f\\u2de0-\\u2dff\\u302a-\\u302f\\u3099\\u309a\\ua620-\\ua629\\ua66f\\ua674-\\ua67d\\ua69e\\ua69f\\ua6f0\\ua6f1\\ua802\\ua806\\ua80b\\ua823-\\ua827\\ua82c\\ua880\\ua881\\ua8b4-\\ua8c5\\ua8d0-\\ua8d9\\ua8e0-\\ua8f1\\ua8ff-\\ua909\\ua926-\\ua92d\\ua947-\\ua953\\ua980-\\ua983\\ua9b3-\\ua9c0\\ua9d0-\\ua9d9\\ua9e5\\ua9f0-\\ua9f9\\uaa29-\\uaa36\\uaa43\\uaa4c\\uaa4d\\uaa50-\\uaa59\\uaa7b-\\uaa7d\\uaab0\\uaab2-\\uaab4\\uaab7\\uaab8\\uaabe\\uaabf\\uaac1\\uaaeb-\\uaaef\\uaaf5\\uaaf6\\uabe3-\\uabea\\uabec\\uabed\\uabf0-\\uabf9\\ufb1e\\ufe00-\\ufe0f\\ufe20-\\ufe2f\\ufe33\\ufe34\\ufe4d-\\ufe4f\\uff10-\\uff19\\uff3f\";\nconst nonASCIIidentifierStart = new RegExp(\"[\" + nonASCIIidentifierStartChars + \"]\");\nconst nonASCIIidentifier = new RegExp(\"[\" + nonASCIIidentifierStartChars + nonASCIIidentifierChars + \"]\");\nnonASCIIidentifierStartChars = nonASCIIidentifierChars = null;\nconst astralIdentifierStartCodes = [0, 11, 2, 25, 2, 18, 2, 1, 2, 14, 3, 13, 35, 122, 70, 52, 268, 28, 4, 48, 48, 31, 14, 29, 6, 37, 11, 29, 3, 35, 5, 7, 2, 4, 43, 157, 19, 35, 5, 35, 5, 39, 9, 51, 157, 310, 10, 21, 11, 7, 153, 5, 3, 0, 2, 43, 2, 1, 4, 0, 3, 22, 11, 22, 10, 30, 66, 18, 2, 1, 11, 21, 11, 25, 71, 55, 7, 1, 65, 0, 16, 3, 2, 2, 2, 28, 43, 28, 4, 28, 36, 7, 2, 27, 28, 53, 11, 21, 11, 18, 14, 17, 111, 72, 56, 50, 14, 50, 14, 35, 349, 41, 7, 1, 79, 28, 11, 0, 9, 21, 107, 20, 28, 22, 13, 52, 76, 44, 33, 24, 27, 35, 30, 0, 3, 0, 9, 34, 4, 0, 13, 47, 15, 3, 22, 0, 2, 0, 36, 17, 2, 24, 85, 6, 2, 0, 2, 3, 2, 14, 2, 9, 8, 46, 39, 7, 3, 1, 3, 21, 2, 6, 2, 1, 2, 4, 4, 0, 19, 0, 13, 4, 159, 52, 19, 3, 21, 2, 31, 47, 21, 1, 2, 0, 185, 46, 42, 3, 37, 47, 21, 0, 60, 42, 14, 0, 72, 26, 230, 43, 117, 63, 32, 7, 3, 0, 3, 7, 2, 1, 2, 23, 16, 0, 2, 0, 95, 7, 3, 38, 17, 0, 2, 0, 29, 0, 11, 39, 8, 0, 22, 0, 12, 45, 20, 0, 35, 56, 264, 8, 2, 36, 18, 0, 50, 29, 113, 6, 2, 1, 2, 37, 22, 0, 26, 5, 2, 1, 2, 31, 15, 0, 328, 18, 190, 0, 80, 921, 103, 110, 18, 195, 2749, 1070, 4050, 582, 8634, 568, 8, 30, 114, 29, 19, 47, 17, 3, 32, 20, 6, 18, 689, 63, 129, 74, 6, 0, 67, 12, 65, 1, 2, 0, 29, 6135, 9, 1237, 43, 8, 8952, 286, 50, 2, 18, 3, 9, 395, 2309, 106, 6, 12, 4, 8, 8, 9, 5991, 84, 2, 70, 2, 1, 3, 0, 3, 1, 3, 3, 2, 11, 2, 0, 2, 6, 2, 64, 2, 3, 3, 7, 2, 6, 2, 27, 2, 3, 2, 4, 2, 0, 4, 6, 2, 339, 3, 24, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 7, 2357, 44, 11, 6, 17, 0, 370, 43, 1301, 196, 60, 67, 8, 0, 1205, 3, 2, 26, 2, 1, 2, 0, 3, 0, 2, 9, 2, 3, 2, 0, 2, 0, 7, 0, 5, 0, 2, 0, 2, 0, 2, 2, 2, 1, 2, 0, 3, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 1, 2, 0, 3, 3, 2, 6, 2, 3, 2, 3, 2, 0, 2, 9, 2, 16, 6, 2, 2, 4, 2, 16, 4421, 42717, 35, 4148, 12, 221, 3, 5761, 15, 7472, 3104, 541, 1507, 4938];\nconst astralIdentifierCodes = [509, 0, 227, 0, 150, 4, 294, 9, 1368, 2, 2, 1, 6, 3, 41, 2, 5, 0, 166, 1, 574, 3, 9, 9, 370, 1, 154, 10, 176, 2, 54, 14, 32, 9, 16, 3, 46, 10, 54, 9, 7, 2, 37, 13, 2, 9, 6, 1, 45, 0, 13, 2, 49, 13, 9, 3, 2, 11, 83, 11, 7, 0, 161, 11, 6, 9, 7, 3, 56, 1, 2, 6, 3, 1, 3, 2, 10, 0, 11, 1, 3, 6, 4, 4, 193, 17, 10, 9, 5, 0, 82, 19, 13, 9, 214, 6, 3, 8, 28, 1, 83, 16, 16, 9, 82, 12, 9, 9, 84, 14, 5, 9, 243, 14, 166, 9, 71, 5, 2, 1, 3, 3, 2, 0, 2, 1, 13, 9, 120, 6, 3, 6, 4, 0, 29, 9, 41, 6, 2, 3, 9, 0, 10, 10, 47, 15, 406, 7, 2, 7, 17, 9, 57, 21, 2, 13, 123, 5, 4, 0, 2, 1, 2, 6, 2, 0, 9, 9, 49, 4, 2, 1, 2, 4, 9, 9, 330, 3, 19306, 9, 135, 4, 60, 6, 26, 9, 1014, 0, 2, 54, 8, 3, 82, 0, 12, 1, 19628, 1, 5319, 4, 4, 5, 9, 7, 3, 6, 31, 3, 149, 2, 1418, 49, 513, 54, 5, 49, 9, 0, 15, 0, 23, 4, 2, 14, 1361, 6, 2, 16, 3, 6, 2, 1, 2, 4, 262, 6, 10, 9, 419, 13, 1495, 6, 110, 6, 6, 9, 4759, 9, 787719, 239];\n\nfunction isInAstralSet(code, set) {\n  let pos = 0x10000;\n\n  for (let i = 0, length = set.length; i < length; i += 2) {\n    pos += set[i];\n    if (pos > code) return false;\n    pos += set[i + 1];\n    if (pos >= code) return true;\n  }\n\n  return false;\n}\n\nfunction isIdentifierStart(code) {\n  if (code < 65) return code === 36;\n  if (code <= 90) return true;\n  if (code < 97) return code === 95;\n  if (code <= 122) return true;\n\n  if (code <= 0xffff) {\n    return code >= 0xaa && nonASCIIidentifierStart.test(String.fromCharCode(code));\n  }\n\n  return isInAstralSet(code, astralIdentifierStartCodes);\n}\nfunction isIdentifierChar(code) {\n  if (code < 48) return code === 36;\n  if (code < 58) return true;\n  if (code < 65) return false;\n  if (code <= 90) return true;\n  if (code < 97) return code === 95;\n  if (code <= 122) return true;\n\n  if (code <= 0xffff) {\n    return code >= 0xaa && nonASCIIidentifier.test(String.fromCharCode(code));\n  }\n\n  return isInAstralSet(code, astralIdentifierStartCodes) || isInAstralSet(code, astralIdentifierCodes);\n}\n\nconst reservedWords = {\n  keyword: [\"break\", \"case\", \"catch\", \"continue\", \"debugger\", \"default\", \"do\", \"else\", \"finally\", \"for\", \"function\", \"if\", \"return\", \"switch\", \"throw\", \"try\", \"var\", \"const\", \"while\", \"with\", \"new\", \"this\", \"super\", \"class\", \"extends\", \"export\", \"import\", \"null\", \"true\", \"false\", \"in\", \"instanceof\", \"typeof\", \"void\", \"delete\"],\n  strict: [\"implements\", \"interface\", \"let\", \"package\", \"private\", \"protected\", \"public\", \"static\", \"yield\"],\n  strictBind: [\"eval\", \"arguments\"]\n};\nconst keywords$1 = new Set(reservedWords.keyword);\nconst reservedWordsStrictSet = new Set(reservedWords.strict);\nconst reservedWordsStrictBindSet = new Set(reservedWords.strictBind);\nfunction isReservedWord(word, inModule) {\n  return inModule && word === \"await\" || word === \"enum\";\n}\nfunction isStrictReservedWord(word, inModule) {\n  return isReservedWord(word, inModule) || reservedWordsStrictSet.has(word);\n}\nfunction isStrictBindOnlyReservedWord(word) {\n  return reservedWordsStrictBindSet.has(word);\n}\nfunction isStrictBindReservedWord(word, inModule) {\n  return isStrictReservedWord(word, inModule) || isStrictBindOnlyReservedWord(word);\n}\nfunction isKeyword(word) {\n  return keywords$1.has(word);\n}\n\nconst keywordRelationalOperator = /^in(stanceof)?$/;\nfunction isIteratorStart(current, next) {\n  return current === 64 && next === 64;\n}\n\nconst SCOPE_OTHER = 0b000000000,\n      SCOPE_PROGRAM = 0b000000001,\n      SCOPE_FUNCTION = 0b000000010,\n      SCOPE_ARROW = 0b000000100,\n      SCOPE_SIMPLE_CATCH = 0b000001000,\n      SCOPE_SUPER = 0b000010000,\n      SCOPE_DIRECT_SUPER = 0b000100000,\n      SCOPE_CLASS = 0b001000000,\n      SCOPE_STATIC_BLOCK = 0b010000000,\n      SCOPE_TS_MODULE = 0b100000000,\n      SCOPE_VAR = SCOPE_PROGRAM | SCOPE_FUNCTION | SCOPE_TS_MODULE;\nconst BIND_KIND_VALUE = 0b000000000001,\n      BIND_KIND_TYPE = 0b000000000010,\n      BIND_SCOPE_VAR = 0b000000000100,\n      BIND_SCOPE_LEXICAL = 0b000000001000,\n      BIND_SCOPE_FUNCTION = 0b000000010000,\n      BIND_FLAGS_NONE = 0b000001000000,\n      BIND_FLAGS_CLASS = 0b000010000000,\n      BIND_FLAGS_TS_ENUM = 0b000100000000,\n      BIND_FLAGS_TS_CONST_ENUM = 0b001000000000,\n      BIND_FLAGS_TS_EXPORT_ONLY = 0b010000000000,\n      BIND_FLAGS_FLOW_DECLARE_FN = 0b100000000000;\nconst BIND_CLASS = BIND_KIND_VALUE | BIND_KIND_TYPE | BIND_SCOPE_LEXICAL | BIND_FLAGS_CLASS,\n      BIND_LEXICAL = BIND_KIND_VALUE | 0 | BIND_SCOPE_LEXICAL | 0,\n      BIND_VAR = BIND_KIND_VALUE | 0 | BIND_SCOPE_VAR | 0,\n      BIND_FUNCTION = BIND_KIND_VALUE | 0 | BIND_SCOPE_FUNCTION | 0,\n      BIND_TS_INTERFACE = 0 | BIND_KIND_TYPE | 0 | BIND_FLAGS_CLASS,\n      BIND_TS_TYPE = 0 | BIND_KIND_TYPE | 0 | 0,\n      BIND_TS_ENUM = BIND_KIND_VALUE | BIND_KIND_TYPE | BIND_SCOPE_LEXICAL | BIND_FLAGS_TS_ENUM,\n      BIND_TS_AMBIENT = 0 | 0 | 0 | BIND_FLAGS_TS_EXPORT_ONLY,\n      BIND_NONE = 0 | 0 | 0 | BIND_FLAGS_NONE,\n      BIND_OUTSIDE = BIND_KIND_VALUE | 0 | 0 | BIND_FLAGS_NONE,\n      BIND_TS_CONST_ENUM = BIND_TS_ENUM | BIND_FLAGS_TS_CONST_ENUM,\n      BIND_TS_NAMESPACE = 0 | 0 | 0 | BIND_FLAGS_TS_EXPORT_ONLY,\n      BIND_FLOW_DECLARE_FN = BIND_FLAGS_FLOW_DECLARE_FN;\nconst CLASS_ELEMENT_FLAG_STATIC = 0b100,\n      CLASS_ELEMENT_KIND_GETTER = 0b010,\n      CLASS_ELEMENT_KIND_SETTER = 0b001,\n      CLASS_ELEMENT_KIND_ACCESSOR = CLASS_ELEMENT_KIND_GETTER | CLASS_ELEMENT_KIND_SETTER;\nconst CLASS_ELEMENT_STATIC_GETTER = CLASS_ELEMENT_KIND_GETTER | CLASS_ELEMENT_FLAG_STATIC,\n      CLASS_ELEMENT_STATIC_SETTER = CLASS_ELEMENT_KIND_SETTER | CLASS_ELEMENT_FLAG_STATIC,\n      CLASS_ELEMENT_INSTANCE_GETTER = CLASS_ELEMENT_KIND_GETTER,\n      CLASS_ELEMENT_INSTANCE_SETTER = CLASS_ELEMENT_KIND_SETTER,\n      CLASS_ELEMENT_OTHER = 0;\n\nclass Scope {\n  constructor(flags) {\n    this.flags = void 0;\n    this.var = [];\n    this.lexical = [];\n    this.functions = [];\n    this.flags = flags;\n  }\n\n}\nclass ScopeHandler {\n  constructor(raise, inModule) {\n    this.scopeStack = [];\n    this.undefinedExports = new Map();\n    this.undefinedPrivateNames = new Map();\n    this.raise = raise;\n    this.inModule = inModule;\n  }\n\n  get inFunction() {\n    return (this.currentVarScope().flags & SCOPE_FUNCTION) > 0;\n  }\n\n  get allowSuper() {\n    return (this.currentThisScope().flags & SCOPE_SUPER) > 0;\n  }\n\n  get allowDirectSuper() {\n    return (this.currentThisScope().flags & SCOPE_DIRECT_SUPER) > 0;\n  }\n\n  get inClass() {\n    return (this.currentThisScope().flags & SCOPE_CLASS) > 0;\n  }\n\n  get inStaticBlock() {\n    return (this.currentThisScope().flags & SCOPE_STATIC_BLOCK) > 0;\n  }\n\n  get inNonArrowFunction() {\n    return (this.currentThisScope().flags & SCOPE_FUNCTION) > 0;\n  }\n\n  get treatFunctionsAsVar() {\n    return this.treatFunctionsAsVarInScope(this.currentScope());\n  }\n\n  createScope(flags) {\n    return new Scope(flags);\n  }\n\n  enter(flags) {\n    this.scopeStack.push(this.createScope(flags));\n  }\n\n  exit() {\n    this.scopeStack.pop();\n  }\n\n  treatFunctionsAsVarInScope(scope) {\n    return !!(scope.flags & SCOPE_FUNCTION || !this.inModule && scope.flags & SCOPE_PROGRAM);\n  }\n\n  declareName(name, bindingType, pos) {\n    let scope = this.currentScope();\n\n    if (bindingType & BIND_SCOPE_LEXICAL || bindingType & BIND_SCOPE_FUNCTION) {\n      this.checkRedeclarationInScope(scope, name, bindingType, pos);\n\n      if (bindingType & BIND_SCOPE_FUNCTION) {\n        scope.functions.push(name);\n      } else {\n        scope.lexical.push(name);\n      }\n\n      if (bindingType & BIND_SCOPE_LEXICAL) {\n        this.maybeExportDefined(scope, name);\n      }\n    } else if (bindingType & BIND_SCOPE_VAR) {\n      for (let i = this.scopeStack.length - 1; i >= 0; --i) {\n        scope = this.scopeStack[i];\n        this.checkRedeclarationInScope(scope, name, bindingType, pos);\n        scope.var.push(name);\n        this.maybeExportDefined(scope, name);\n        if (scope.flags & SCOPE_VAR) break;\n      }\n    }\n\n    if (this.inModule && scope.flags & SCOPE_PROGRAM) {\n      this.undefinedExports.delete(name);\n    }\n  }\n\n  maybeExportDefined(scope, name) {\n    if (this.inModule && scope.flags & SCOPE_PROGRAM) {\n      this.undefinedExports.delete(name);\n    }\n  }\n\n  checkRedeclarationInScope(scope, name, bindingType, pos) {\n    if (this.isRedeclaredInScope(scope, name, bindingType)) {\n      this.raise(pos, ErrorMessages.VarRedeclaration, name);\n    }\n  }\n\n  isRedeclaredInScope(scope, name, bindingType) {\n    if (!(bindingType & BIND_KIND_VALUE)) return false;\n\n    if (bindingType & BIND_SCOPE_LEXICAL) {\n      return scope.lexical.indexOf(name) > -1 || scope.functions.indexOf(name) > -1 || scope.var.indexOf(name) > -1;\n    }\n\n    if (bindingType & BIND_SCOPE_FUNCTION) {\n      return scope.lexical.indexOf(name) > -1 || !this.treatFunctionsAsVarInScope(scope) && scope.var.indexOf(name) > -1;\n    }\n\n    return scope.lexical.indexOf(name) > -1 && !(scope.flags & SCOPE_SIMPLE_CATCH && scope.lexical[0] === name) || !this.treatFunctionsAsVarInScope(scope) && scope.functions.indexOf(name) > -1;\n  }\n\n  checkLocalExport(id) {\n    if (this.scopeStack[0].lexical.indexOf(id.name) === -1 && this.scopeStack[0].var.indexOf(id.name) === -1 && this.scopeStack[0].functions.indexOf(id.name) === -1) {\n      this.undefinedExports.set(id.name, id.start);\n    }\n  }\n\n  currentScope() {\n    return this.scopeStack[this.scopeStack.length - 1];\n  }\n\n  currentVarScope() {\n    for (let i = this.scopeStack.length - 1;; i--) {\n      const scope = this.scopeStack[i];\n\n      if (scope.flags & SCOPE_VAR) {\n        return scope;\n      }\n    }\n  }\n\n  currentThisScope() {\n    for (let i = this.scopeStack.length - 1;; i--) {\n      const scope = this.scopeStack[i];\n\n      if ((scope.flags & SCOPE_VAR || scope.flags & SCOPE_CLASS) && !(scope.flags & SCOPE_ARROW)) {\n        return scope;\n      }\n    }\n  }\n\n}\n\nclass FlowScope extends Scope {\n  constructor(...args) {\n    super(...args);\n    this.declareFunctions = [];\n  }\n\n}\n\nclass FlowScopeHandler extends ScopeHandler {\n  createScope(flags) {\n    return new FlowScope(flags);\n  }\n\n  declareName(name, bindingType, pos) {\n    const scope = this.currentScope();\n\n    if (bindingType & BIND_FLAGS_FLOW_DECLARE_FN) {\n      this.checkRedeclarationInScope(scope, name, bindingType, pos);\n      this.maybeExportDefined(scope, name);\n      scope.declareFunctions.push(name);\n      return;\n    }\n\n    super.declareName(...arguments);\n  }\n\n  isRedeclaredInScope(scope, name, bindingType) {\n    if (super.isRedeclaredInScope(...arguments)) return true;\n\n    if (bindingType & BIND_FLAGS_FLOW_DECLARE_FN) {\n      return !scope.declareFunctions.includes(name) && (scope.lexical.includes(name) || scope.functions.includes(name));\n    }\n\n    return false;\n  }\n\n  checkLocalExport(id) {\n    if (this.scopeStack[0].declareFunctions.indexOf(id.name) === -1) {\n      super.checkLocalExport(id);\n    }\n  }\n\n}\n\nconst reservedTypes = new Set([\"_\", \"any\", \"bool\", \"boolean\", \"empty\", \"extends\", \"false\", \"interface\", \"mixed\", \"null\", \"number\", \"static\", \"string\", \"true\", \"typeof\", \"void\"]);\nconst FlowErrors = makeErrorTemplates({\n  AmbiguousConditionalArrow: \"Ambiguous expression: wrap the arrow functions in parentheses to disambiguate.\",\n  AmbiguousDeclareModuleKind: \"Found both `declare module.exports` and `declare export` in the same module. Modules can only have 1 since they are either an ES module or they are a CommonJS module.\",\n  AssignReservedType: \"Cannot overwrite reserved type %0.\",\n  DeclareClassElement: \"The `declare` modifier can only appear on class fields.\",\n  DeclareClassFieldInitializer: \"Initializers are not allowed in fields with the `declare` modifier.\",\n  DuplicateDeclareModuleExports: \"Duplicate `declare module.exports` statement.\",\n  EnumBooleanMemberNotInitialized: \"Boolean enum members need to be initialized. Use either `%0 = true,` or `%0 = false,` in enum `%1`.\",\n  EnumDuplicateMemberName: \"Enum member names need to be unique, but the name `%0` has already been used before in enum `%1`.\",\n  EnumInconsistentMemberValues: \"Enum `%0` has inconsistent member initializers. Either use no initializers, or consistently use literals (either booleans, numbers, or strings) for all member initializers.\",\n  EnumInvalidExplicitType: \"Enum type `%1` is not valid. Use one of `boolean`, `number`, `string`, or `symbol` in enum `%0`.\",\n  EnumInvalidExplicitTypeUnknownSupplied: \"Supplied enum type is not valid. Use one of `boolean`, `number`, `string`, or `symbol` in enum `%0`.\",\n  EnumInvalidMemberInitializerPrimaryType: \"Enum `%0` has type `%2`, so the initializer of `%1` needs to be a %2 literal.\",\n  EnumInvalidMemberInitializerSymbolType: \"Symbol enum members cannot be initialized. Use `%1,` in enum `%0`.\",\n  EnumInvalidMemberInitializerUnknownType: \"The enum member initializer for `%1` needs to be a literal (either a boolean, number, or string) in enum `%0`.\",\n  EnumInvalidMemberName: \"Enum member names cannot start with lowercase 'a' through 'z'. Instead of using `%0`, consider using `%1`, in enum `%2`.\",\n  EnumNumberMemberNotInitialized: \"Number enum members need to be initialized, e.g. `%1 = 1` in enum `%0`.\",\n  EnumStringMemberInconsistentlyInitailized: \"String enum members need to consistently either all use initializers, or use no initializers, in enum `%0`.\",\n  GetterMayNotHaveThisParam: \"A getter cannot have a `this` parameter.\",\n  ImportTypeShorthandOnlyInPureImport: \"The `type` and `typeof` keywords on named imports can only be used on regular `import` statements. It cannot be used with `import type` or `import typeof` statements.\",\n  InexactInsideExact: \"Explicit inexact syntax cannot appear inside an explicit exact object type.\",\n  InexactInsideNonObject: \"Explicit inexact syntax cannot appear in class or interface definitions.\",\n  InexactVariance: \"Explicit inexact syntax cannot have variance.\",\n  InvalidNonTypeImportInDeclareModule: \"Imports within a `declare module` body must always be `import type` or `import typeof`.\",\n  MissingTypeParamDefault: \"Type parameter declaration needs a default, since a preceding type parameter declaration has a default.\",\n  NestedDeclareModule: \"`declare module` cannot be used inside another `declare module`.\",\n  NestedFlowComment: \"Cannot have a flow comment inside another flow comment.\",\n  OptionalBindingPattern: \"A binding pattern parameter cannot be optional in an implementation signature.\",\n  SetterMayNotHaveThisParam: \"A setter cannot have a `this` parameter.\",\n  SpreadVariance: \"Spread properties cannot have variance.\",\n  ThisParamAnnotationRequired: \"A type annotation is required for the `this` parameter.\",\n  ThisParamBannedInConstructor: \"Constructors cannot have a `this` parameter; constructors don't bind `this` like other functions.\",\n  ThisParamMayNotBeOptional: \"The `this` parameter cannot be optional.\",\n  ThisParamMustBeFirst: \"The `this` parameter must be the first function parameter.\",\n  ThisParamNoDefault: \"The `this` parameter may not have a default value.\",\n  TypeBeforeInitializer: \"Type annotations must come before default assignments, e.g. instead of `age = 25: number` use `age: number = 25`.\",\n  TypeCastInPattern: \"The type cast expression is expected to be wrapped with parenthesis.\",\n  UnexpectedExplicitInexactInObject: \"Explicit inexact syntax must appear at the end of an inexact object.\",\n  UnexpectedReservedType: \"Unexpected reserved type %0.\",\n  UnexpectedReservedUnderscore: \"`_` is only allowed as a type argument to call or new.\",\n  UnexpectedSpaceBetweenModuloChecks: \"Spaces between `%` and `checks` are not allowed here.\",\n  UnexpectedSpreadType: \"Spread operator cannot appear in class or interface definitions.\",\n  UnexpectedSubtractionOperand: 'Unexpected token, expected \"number\" or \"bigint\".',\n  UnexpectedTokenAfterTypeParameter: \"Expected an arrow function after this type parameter declaration.\",\n  UnexpectedTypeParameterBeforeAsyncArrowFunction: \"Type parameters must come after the async keyword, e.g. instead of `<T> async () => {}`, use `async <T>() => {}`.\",\n  UnsupportedDeclareExportKind: \"`declare export %0` is not supported. Use `%1` instead.\",\n  UnsupportedStatementInDeclareModule: \"Only declares and type imports are allowed inside declare module.\",\n  UnterminatedFlowComment: \"Unterminated flow-comment.\"\n}, ErrorCodes.SyntaxError);\n\nfunction isEsModuleType(bodyElement) {\n  return bodyElement.type === \"DeclareExportAllDeclaration\" || bodyElement.type === \"DeclareExportDeclaration\" && (!bodyElement.declaration || bodyElement.declaration.type !== \"TypeAlias\" && bodyElement.declaration.type !== \"InterfaceDeclaration\");\n}\n\nfunction hasTypeImportKind(node) {\n  return node.importKind === \"type\" || node.importKind === \"typeof\";\n}\n\nfunction isMaybeDefaultImport(state) {\n  return (state.type === types.name || !!state.type.keyword) && state.value !== \"from\";\n}\n\nconst exportSuggestions = {\n  const: \"declare export var\",\n  let: \"declare export var\",\n  type: \"export type\",\n  interface: \"export interface\"\n};\n\nfunction partition(list, test) {\n  const list1 = [];\n  const list2 = [];\n\n  for (let i = 0; i < list.length; i++) {\n    (test(list[i], i, list) ? list1 : list2).push(list[i]);\n  }\n\n  return [list1, list2];\n}\n\nconst FLOW_PRAGMA_REGEX = /\\*?\\s*@((?:no)?flow)\\b/;\nvar flow = (superClass => class extends superClass {\n  constructor(...args) {\n    super(...args);\n    this.flowPragma = undefined;\n  }\n\n  getScopeHandler() {\n    return FlowScopeHandler;\n  }\n\n  shouldParseTypes() {\n    return this.getPluginOption(\"flow\", \"all\") || this.flowPragma === \"flow\";\n  }\n\n  shouldParseEnums() {\n    return !!this.getPluginOption(\"flow\", \"enums\");\n  }\n\n  finishToken(type, val) {\n    if (type !== types.string && type !== types.semi && type !== types.interpreterDirective) {\n      if (this.flowPragma === undefined) {\n        this.flowPragma = null;\n      }\n    }\n\n    return super.finishToken(type, val);\n  }\n\n  addComment(comment) {\n    if (this.flowPragma === undefined) {\n      const matches = FLOW_PRAGMA_REGEX.exec(comment.value);\n\n      if (!matches) ; else if (matches[1] === \"flow\") {\n        this.flowPragma = \"flow\";\n      } else if (matches[1] === \"noflow\") {\n        this.flowPragma = \"noflow\";\n      } else {\n        throw new Error(\"Unexpected flow pragma\");\n      }\n    }\n\n    return super.addComment(comment);\n  }\n\n  flowParseTypeInitialiser(tok) {\n    const oldInType = this.state.inType;\n    this.state.inType = true;\n    this.expect(tok || types.colon);\n    const type = this.flowParseType();\n    this.state.inType = oldInType;\n    return type;\n  }\n\n  flowParsePredicate() {\n    const node = this.startNode();\n    const moduloPos = this.state.start;\n    this.next();\n    this.expectContextual(\"checks\");\n\n    if (this.state.lastTokStart > moduloPos + 1) {\n      this.raise(moduloPos, FlowErrors.UnexpectedSpaceBetweenModuloChecks);\n    }\n\n    if (this.eat(types.parenL)) {\n      node.value = this.parseExpression();\n      this.expect(types.parenR);\n      return this.finishNode(node, \"DeclaredPredicate\");\n    } else {\n      return this.finishNode(node, \"InferredPredicate\");\n    }\n  }\n\n  flowParseTypeAndPredicateInitialiser() {\n    const oldInType = this.state.inType;\n    this.state.inType = true;\n    this.expect(types.colon);\n    let type = null;\n    let predicate = null;\n\n    if (this.match(types.modulo)) {\n      this.state.inType = oldInType;\n      predicate = this.flowParsePredicate();\n    } else {\n      type = this.flowParseType();\n      this.state.inType = oldInType;\n\n      if (this.match(types.modulo)) {\n        predicate = this.flowParsePredicate();\n      }\n    }\n\n    return [type, predicate];\n  }\n\n  flowParseDeclareClass(node) {\n    this.next();\n    this.flowParseInterfaceish(node, true);\n    return this.finishNode(node, \"DeclareClass\");\n  }\n\n  flowParseDeclareFunction(node) {\n    this.next();\n    const id = node.id = this.parseIdentifier();\n    const typeNode = this.startNode();\n    const typeContainer = this.startNode();\n\n    if (this.isRelational(\"<\")) {\n      typeNode.typeParameters = this.flowParseTypeParameterDeclaration();\n    } else {\n      typeNode.typeParameters = null;\n    }\n\n    this.expect(types.parenL);\n    const tmp = this.flowParseFunctionTypeParams();\n    typeNode.params = tmp.params;\n    typeNode.rest = tmp.rest;\n    typeNode.this = tmp._this;\n    this.expect(types.parenR);\n    [typeNode.returnType, node.predicate] = this.flowParseTypeAndPredicateInitialiser();\n    typeContainer.typeAnnotation = this.finishNode(typeNode, \"FunctionTypeAnnotation\");\n    id.typeAnnotation = this.finishNode(typeContainer, \"TypeAnnotation\");\n    this.resetEndLocation(id);\n    this.semicolon();\n    this.scope.declareName(node.id.name, BIND_FLOW_DECLARE_FN, node.id.start);\n    return this.finishNode(node, \"DeclareFunction\");\n  }\n\n  flowParseDeclare(node, insideModule) {\n    if (this.match(types._class)) {\n      return this.flowParseDeclareClass(node);\n    } else if (this.match(types._function)) {\n      return this.flowParseDeclareFunction(node);\n    } else if (this.match(types._var)) {\n      return this.flowParseDeclareVariable(node);\n    } else if (this.eatContextual(\"module\")) {\n      if (this.match(types.dot)) {\n        return this.flowParseDeclareModuleExports(node);\n      } else {\n        if (insideModule) {\n          this.raise(this.state.lastTokStart, FlowErrors.NestedDeclareModule);\n        }\n\n        return this.flowParseDeclareModule(node);\n      }\n    } else if (this.isContextual(\"type\")) {\n      return this.flowParseDeclareTypeAlias(node);\n    } else if (this.isContextual(\"opaque\")) {\n      return this.flowParseDeclareOpaqueType(node);\n    } else if (this.isContextual(\"interface\")) {\n      return this.flowParseDeclareInterface(node);\n    } else if (this.match(types._export)) {\n      return this.flowParseDeclareExportDeclaration(node, insideModule);\n    } else {\n      throw this.unexpected();\n    }\n  }\n\n  flowParseDeclareVariable(node) {\n    this.next();\n    node.id = this.flowParseTypeAnnotatableIdentifier(true);\n    this.scope.declareName(node.id.name, BIND_VAR, node.id.start);\n    this.semicolon();\n    return this.finishNode(node, \"DeclareVariable\");\n  }\n\n  flowParseDeclareModule(node) {\n    this.scope.enter(SCOPE_OTHER);\n\n    if (this.match(types.string)) {\n      node.id = this.parseExprAtom();\n    } else {\n      node.id = this.parseIdentifier();\n    }\n\n    const bodyNode = node.body = this.startNode();\n    const body = bodyNode.body = [];\n    this.expect(types.braceL);\n\n    while (!this.match(types.braceR)) {\n      let bodyNode = this.startNode();\n\n      if (this.match(types._import)) {\n        this.next();\n\n        if (!this.isContextual(\"type\") && !this.match(types._typeof)) {\n          this.raise(this.state.lastTokStart, FlowErrors.InvalidNonTypeImportInDeclareModule);\n        }\n\n        this.parseImport(bodyNode);\n      } else {\n        this.expectContextual(\"declare\", FlowErrors.UnsupportedStatementInDeclareModule);\n        bodyNode = this.flowParseDeclare(bodyNode, true);\n      }\n\n      body.push(bodyNode);\n    }\n\n    this.scope.exit();\n    this.expect(types.braceR);\n    this.finishNode(bodyNode, \"BlockStatement\");\n    let kind = null;\n    let hasModuleExport = false;\n    body.forEach(bodyElement => {\n      if (isEsModuleType(bodyElement)) {\n        if (kind === \"CommonJS\") {\n          this.raise(bodyElement.start, FlowErrors.AmbiguousDeclareModuleKind);\n        }\n\n        kind = \"ES\";\n      } else if (bodyElement.type === \"DeclareModuleExports\") {\n        if (hasModuleExport) {\n          this.raise(bodyElement.start, FlowErrors.DuplicateDeclareModuleExports);\n        }\n\n        if (kind === \"ES\") {\n          this.raise(bodyElement.start, FlowErrors.AmbiguousDeclareModuleKind);\n        }\n\n        kind = \"CommonJS\";\n        hasModuleExport = true;\n      }\n    });\n    node.kind = kind || \"CommonJS\";\n    return this.finishNode(node, \"DeclareModule\");\n  }\n\n  flowParseDeclareExportDeclaration(node, insideModule) {\n    this.expect(types._export);\n\n    if (this.eat(types._default)) {\n      if (this.match(types._function) || this.match(types._class)) {\n        node.declaration = this.flowParseDeclare(this.startNode());\n      } else {\n        node.declaration = this.flowParseType();\n        this.semicolon();\n      }\n\n      node.default = true;\n      return this.finishNode(node, \"DeclareExportDeclaration\");\n    } else {\n      if (this.match(types._const) || this.isLet() || (this.isContextual(\"type\") || this.isContextual(\"interface\")) && !insideModule) {\n        const label = this.state.value;\n        const suggestion = exportSuggestions[label];\n        throw this.raise(this.state.start, FlowErrors.UnsupportedDeclareExportKind, label, suggestion);\n      }\n\n      if (this.match(types._var) || this.match(types._function) || this.match(types._class) || this.isContextual(\"opaque\")) {\n          node.declaration = this.flowParseDeclare(this.startNode());\n          node.default = false;\n          return this.finishNode(node, \"DeclareExportDeclaration\");\n        } else if (this.match(types.star) || this.match(types.braceL) || this.isContextual(\"interface\") || this.isContextual(\"type\") || this.isContextual(\"opaque\")) {\n          node = this.parseExport(node);\n\n          if (node.type === \"ExportNamedDeclaration\") {\n            node.type = \"ExportDeclaration\";\n            node.default = false;\n            delete node.exportKind;\n          }\n\n          node.type = \"Declare\" + node.type;\n          return node;\n        }\n    }\n\n    throw this.unexpected();\n  }\n\n  flowParseDeclareModuleExports(node) {\n    this.next();\n    this.expectContextual(\"exports\");\n    node.typeAnnotation = this.flowParseTypeAnnotation();\n    this.semicolon();\n    return this.finishNode(node, \"DeclareModuleExports\");\n  }\n\n  flowParseDeclareTypeAlias(node) {\n    this.next();\n    this.flowParseTypeAlias(node);\n    node.type = \"DeclareTypeAlias\";\n    return node;\n  }\n\n  flowParseDeclareOpaqueType(node) {\n    this.next();\n    this.flowParseOpaqueType(node, true);\n    node.type = \"DeclareOpaqueType\";\n    return node;\n  }\n\n  flowParseDeclareInterface(node) {\n    this.next();\n    this.flowParseInterfaceish(node);\n    return this.finishNode(node, \"DeclareInterface\");\n  }\n\n  flowParseInterfaceish(node, isClass = false) {\n    node.id = this.flowParseRestrictedIdentifier(!isClass, true);\n    this.scope.declareName(node.id.name, isClass ? BIND_FUNCTION : BIND_LEXICAL, node.id.start);\n\n    if (this.isRelational(\"<\")) {\n      node.typeParameters = this.flowParseTypeParameterDeclaration();\n    } else {\n      node.typeParameters = null;\n    }\n\n    node.extends = [];\n    node.implements = [];\n    node.mixins = [];\n\n    if (this.eat(types._extends)) {\n      do {\n        node.extends.push(this.flowParseInterfaceExtends());\n      } while (!isClass && this.eat(types.comma));\n    }\n\n    if (this.isContextual(\"mixins\")) {\n      this.next();\n\n      do {\n        node.mixins.push(this.flowParseInterfaceExtends());\n      } while (this.eat(types.comma));\n    }\n\n    if (this.isContextual(\"implements\")) {\n      this.next();\n\n      do {\n        node.implements.push(this.flowParseInterfaceExtends());\n      } while (this.eat(types.comma));\n    }\n\n    node.body = this.flowParseObjectType({\n      allowStatic: isClass,\n      allowExact: false,\n      allowSpread: false,\n      allowProto: isClass,\n      allowInexact: false\n    });\n  }\n\n  flowParseInterfaceExtends() {\n    const node = this.startNode();\n    node.id = this.flowParseQualifiedTypeIdentifier();\n\n    if (this.isRelational(\"<\")) {\n      node.typeParameters = this.flowParseTypeParameterInstantiation();\n    } else {\n      node.typeParameters = null;\n    }\n\n    return this.finishNode(node, \"InterfaceExtends\");\n  }\n\n  flowParseInterface(node) {\n    this.flowParseInterfaceish(node);\n    return this.finishNode(node, \"InterfaceDeclaration\");\n  }\n\n  checkNotUnderscore(word) {\n    if (word === \"_\") {\n      this.raise(this.state.start, FlowErrors.UnexpectedReservedUnderscore);\n    }\n  }\n\n  checkReservedType(word, startLoc, declaration) {\n    if (!reservedTypes.has(word)) return;\n    this.raise(startLoc, declaration ? FlowErrors.AssignReservedType : FlowErrors.UnexpectedReservedType, word);\n  }\n\n  flowParseRestrictedIdentifier(liberal, declaration) {\n    this.checkReservedType(this.state.value, this.state.start, declaration);\n    return this.parseIdentifier(liberal);\n  }\n\n  flowParseTypeAlias(node) {\n    node.id = this.flowParseRestrictedIdentifier(false, true);\n    this.scope.declareName(node.id.name, BIND_LEXICAL, node.id.start);\n\n    if (this.isRelational(\"<\")) {\n      node.typeParameters = this.flowParseTypeParameterDeclaration();\n    } else {\n      node.typeParameters = null;\n    }\n\n    node.right = this.flowParseTypeInitialiser(types.eq);\n    this.semicolon();\n    return this.finishNode(node, \"TypeAlias\");\n  }\n\n  flowParseOpaqueType(node, declare) {\n    this.expectContextual(\"type\");\n    node.id = this.flowParseRestrictedIdentifier(true, true);\n    this.scope.declareName(node.id.name, BIND_LEXICAL, node.id.start);\n\n    if (this.isRelational(\"<\")) {\n      node.typeParameters = this.flowParseTypeParameterDeclaration();\n    } else {\n      node.typeParameters = null;\n    }\n\n    node.supertype = null;\n\n    if (this.match(types.colon)) {\n      node.supertype = this.flowParseTypeInitialiser(types.colon);\n    }\n\n    node.impltype = null;\n\n    if (!declare) {\n      node.impltype = this.flowParseTypeInitialiser(types.eq);\n    }\n\n    this.semicolon();\n    return this.finishNode(node, \"OpaqueType\");\n  }\n\n  flowParseTypeParameter(requireDefault = false) {\n    const nodeStart = this.state.start;\n    const node = this.startNode();\n    const variance = this.flowParseVariance();\n    const ident = this.flowParseTypeAnnotatableIdentifier();\n    node.name = ident.name;\n    node.variance = variance;\n    node.bound = ident.typeAnnotation;\n\n    if (this.match(types.eq)) {\n      this.eat(types.eq);\n      node.default = this.flowParseType();\n    } else {\n      if (requireDefault) {\n        this.raise(nodeStart, FlowErrors.MissingTypeParamDefault);\n      }\n    }\n\n    return this.finishNode(node, \"TypeParameter\");\n  }\n\n  flowParseTypeParameterDeclaration() {\n    const oldInType = this.state.inType;\n    const node = this.startNode();\n    node.params = [];\n    this.state.inType = true;\n\n    if (this.isRelational(\"<\") || this.match(types.jsxTagStart)) {\n      this.next();\n    } else {\n      this.unexpected();\n    }\n\n    let defaultRequired = false;\n\n    do {\n      const typeParameter = this.flowParseTypeParameter(defaultRequired);\n      node.params.push(typeParameter);\n\n      if (typeParameter.default) {\n        defaultRequired = true;\n      }\n\n      if (!this.isRelational(\">\")) {\n        this.expect(types.comma);\n      }\n    } while (!this.isRelational(\">\"));\n\n    this.expectRelational(\">\");\n    this.state.inType = oldInType;\n    return this.finishNode(node, \"TypeParameterDeclaration\");\n  }\n\n  flowParseTypeParameterInstantiation() {\n    const node = this.startNode();\n    const oldInType = this.state.inType;\n    node.params = [];\n    this.state.inType = true;\n    this.expectRelational(\"<\");\n    const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n    this.state.noAnonFunctionType = false;\n\n    while (!this.isRelational(\">\")) {\n      node.params.push(this.flowParseType());\n\n      if (!this.isRelational(\">\")) {\n        this.expect(types.comma);\n      }\n    }\n\n    this.state.noAnonFunctionType = oldNoAnonFunctionType;\n    this.expectRelational(\">\");\n    this.state.inType = oldInType;\n    return this.finishNode(node, \"TypeParameterInstantiation\");\n  }\n\n  flowParseTypeParameterInstantiationCallOrNew() {\n    const node = this.startNode();\n    const oldInType = this.state.inType;\n    node.params = [];\n    this.state.inType = true;\n    this.expectRelational(\"<\");\n\n    while (!this.isRelational(\">\")) {\n      node.params.push(this.flowParseTypeOrImplicitInstantiation());\n\n      if (!this.isRelational(\">\")) {\n        this.expect(types.comma);\n      }\n    }\n\n    this.expectRelational(\">\");\n    this.state.inType = oldInType;\n    return this.finishNode(node, \"TypeParameterInstantiation\");\n  }\n\n  flowParseInterfaceType() {\n    const node = this.startNode();\n    this.expectContextual(\"interface\");\n    node.extends = [];\n\n    if (this.eat(types._extends)) {\n      do {\n        node.extends.push(this.flowParseInterfaceExtends());\n      } while (this.eat(types.comma));\n    }\n\n    node.body = this.flowParseObjectType({\n      allowStatic: false,\n      allowExact: false,\n      allowSpread: false,\n      allowProto: false,\n      allowInexact: false\n    });\n    return this.finishNode(node, \"InterfaceTypeAnnotation\");\n  }\n\n  flowParseObjectPropertyKey() {\n    return this.match(types.num) || this.match(types.string) ? this.parseExprAtom() : this.parseIdentifier(true);\n  }\n\n  flowParseObjectTypeIndexer(node, isStatic, variance) {\n    node.static = isStatic;\n\n    if (this.lookahead().type === types.colon) {\n      node.id = this.flowParseObjectPropertyKey();\n      node.key = this.flowParseTypeInitialiser();\n    } else {\n      node.id = null;\n      node.key = this.flowParseType();\n    }\n\n    this.expect(types.bracketR);\n    node.value = this.flowParseTypeInitialiser();\n    node.variance = variance;\n    return this.finishNode(node, \"ObjectTypeIndexer\");\n  }\n\n  flowParseObjectTypeInternalSlot(node, isStatic) {\n    node.static = isStatic;\n    node.id = this.flowParseObjectPropertyKey();\n    this.expect(types.bracketR);\n    this.expect(types.bracketR);\n\n    if (this.isRelational(\"<\") || this.match(types.parenL)) {\n      node.method = true;\n      node.optional = false;\n      node.value = this.flowParseObjectTypeMethodish(this.startNodeAt(node.start, node.loc.start));\n    } else {\n      node.method = false;\n\n      if (this.eat(types.question)) {\n        node.optional = true;\n      }\n\n      node.value = this.flowParseTypeInitialiser();\n    }\n\n    return this.finishNode(node, \"ObjectTypeInternalSlot\");\n  }\n\n  flowParseObjectTypeMethodish(node) {\n    node.params = [];\n    node.rest = null;\n    node.typeParameters = null;\n    node.this = null;\n\n    if (this.isRelational(\"<\")) {\n      node.typeParameters = this.flowParseTypeParameterDeclaration();\n    }\n\n    this.expect(types.parenL);\n\n    if (this.match(types._this)) {\n      node.this = this.flowParseFunctionTypeParam(true);\n      node.this.name = null;\n\n      if (!this.match(types.parenR)) {\n        this.expect(types.comma);\n      }\n    }\n\n    while (!this.match(types.parenR) && !this.match(types.ellipsis)) {\n      node.params.push(this.flowParseFunctionTypeParam(false));\n\n      if (!this.match(types.parenR)) {\n        this.expect(types.comma);\n      }\n    }\n\n    if (this.eat(types.ellipsis)) {\n      node.rest = this.flowParseFunctionTypeParam(false);\n    }\n\n    this.expect(types.parenR);\n    node.returnType = this.flowParseTypeInitialiser();\n    return this.finishNode(node, \"FunctionTypeAnnotation\");\n  }\n\n  flowParseObjectTypeCallProperty(node, isStatic) {\n    const valueNode = this.startNode();\n    node.static = isStatic;\n    node.value = this.flowParseObjectTypeMethodish(valueNode);\n    return this.finishNode(node, \"ObjectTypeCallProperty\");\n  }\n\n  flowParseObjectType({\n    allowStatic,\n    allowExact,\n    allowSpread,\n    allowProto,\n    allowInexact\n  }) {\n    const oldInType = this.state.inType;\n    this.state.inType = true;\n    const nodeStart = this.startNode();\n    nodeStart.callProperties = [];\n    nodeStart.properties = [];\n    nodeStart.indexers = [];\n    nodeStart.internalSlots = [];\n    let endDelim;\n    let exact;\n    let inexact = false;\n\n    if (allowExact && this.match(types.braceBarL)) {\n      this.expect(types.braceBarL);\n      endDelim = types.braceBarR;\n      exact = true;\n    } else {\n      this.expect(types.braceL);\n      endDelim = types.braceR;\n      exact = false;\n    }\n\n    nodeStart.exact = exact;\n\n    while (!this.match(endDelim)) {\n      let isStatic = false;\n      let protoStart = null;\n      let inexactStart = null;\n      const node = this.startNode();\n\n      if (allowProto && this.isContextual(\"proto\")) {\n        const lookahead = this.lookahead();\n\n        if (lookahead.type !== types.colon && lookahead.type !== types.question) {\n          this.next();\n          protoStart = this.state.start;\n          allowStatic = false;\n        }\n      }\n\n      if (allowStatic && this.isContextual(\"static\")) {\n        const lookahead = this.lookahead();\n\n        if (lookahead.type !== types.colon && lookahead.type !== types.question) {\n          this.next();\n          isStatic = true;\n        }\n      }\n\n      const variance = this.flowParseVariance();\n\n      if (this.eat(types.bracketL)) {\n        if (protoStart != null) {\n          this.unexpected(protoStart);\n        }\n\n        if (this.eat(types.bracketL)) {\n          if (variance) {\n            this.unexpected(variance.start);\n          }\n\n          nodeStart.internalSlots.push(this.flowParseObjectTypeInternalSlot(node, isStatic));\n        } else {\n          nodeStart.indexers.push(this.flowParseObjectTypeIndexer(node, isStatic, variance));\n        }\n      } else if (this.match(types.parenL) || this.isRelational(\"<\")) {\n        if (protoStart != null) {\n          this.unexpected(protoStart);\n        }\n\n        if (variance) {\n          this.unexpected(variance.start);\n        }\n\n        nodeStart.callProperties.push(this.flowParseObjectTypeCallProperty(node, isStatic));\n      } else {\n        let kind = \"init\";\n\n        if (this.isContextual(\"get\") || this.isContextual(\"set\")) {\n          const lookahead = this.lookahead();\n\n          if (lookahead.type === types.name || lookahead.type === types.string || lookahead.type === types.num) {\n            kind = this.state.value;\n            this.next();\n          }\n        }\n\n        const propOrInexact = this.flowParseObjectTypeProperty(node, isStatic, protoStart, variance, kind, allowSpread, allowInexact != null ? allowInexact : !exact);\n\n        if (propOrInexact === null) {\n          inexact = true;\n          inexactStart = this.state.lastTokStart;\n        } else {\n          nodeStart.properties.push(propOrInexact);\n        }\n      }\n\n      this.flowObjectTypeSemicolon();\n\n      if (inexactStart && !this.match(types.braceR) && !this.match(types.braceBarR)) {\n        this.raise(inexactStart, FlowErrors.UnexpectedExplicitInexactInObject);\n      }\n    }\n\n    this.expect(endDelim);\n\n    if (allowSpread) {\n      nodeStart.inexact = inexact;\n    }\n\n    const out = this.finishNode(nodeStart, \"ObjectTypeAnnotation\");\n    this.state.inType = oldInType;\n    return out;\n  }\n\n  flowParseObjectTypeProperty(node, isStatic, protoStart, variance, kind, allowSpread, allowInexact) {\n    if (this.eat(types.ellipsis)) {\n      const isInexactToken = this.match(types.comma) || this.match(types.semi) || this.match(types.braceR) || this.match(types.braceBarR);\n\n      if (isInexactToken) {\n        if (!allowSpread) {\n          this.raise(this.state.lastTokStart, FlowErrors.InexactInsideNonObject);\n        } else if (!allowInexact) {\n          this.raise(this.state.lastTokStart, FlowErrors.InexactInsideExact);\n        }\n\n        if (variance) {\n          this.raise(variance.start, FlowErrors.InexactVariance);\n        }\n\n        return null;\n      }\n\n      if (!allowSpread) {\n        this.raise(this.state.lastTokStart, FlowErrors.UnexpectedSpreadType);\n      }\n\n      if (protoStart != null) {\n        this.unexpected(protoStart);\n      }\n\n      if (variance) {\n        this.raise(variance.start, FlowErrors.SpreadVariance);\n      }\n\n      node.argument = this.flowParseType();\n      return this.finishNode(node, \"ObjectTypeSpreadProperty\");\n    } else {\n      node.key = this.flowParseObjectPropertyKey();\n      node.static = isStatic;\n      node.proto = protoStart != null;\n      node.kind = kind;\n      let optional = false;\n\n      if (this.isRelational(\"<\") || this.match(types.parenL)) {\n        node.method = true;\n\n        if (protoStart != null) {\n          this.unexpected(protoStart);\n        }\n\n        if (variance) {\n          this.unexpected(variance.start);\n        }\n\n        node.value = this.flowParseObjectTypeMethodish(this.startNodeAt(node.start, node.loc.start));\n\n        if (kind === \"get\" || kind === \"set\") {\n          this.flowCheckGetterSetterParams(node);\n        }\n\n        if (!allowSpread && node.key.name === \"constructor\" && node.value.this) {\n          this.raise(node.value.this.start, FlowErrors.ThisParamBannedInConstructor);\n        }\n      } else {\n        if (kind !== \"init\") this.unexpected();\n        node.method = false;\n\n        if (this.eat(types.question)) {\n          optional = true;\n        }\n\n        node.value = this.flowParseTypeInitialiser();\n        node.variance = variance;\n      }\n\n      node.optional = optional;\n      return this.finishNode(node, \"ObjectTypeProperty\");\n    }\n  }\n\n  flowCheckGetterSetterParams(property) {\n    const paramCount = property.kind === \"get\" ? 0 : 1;\n    const start = property.start;\n    const length = property.value.params.length + (property.value.rest ? 1 : 0);\n\n    if (property.value.this) {\n      this.raise(property.value.this.start, property.kind === \"get\" ? FlowErrors.GetterMayNotHaveThisParam : FlowErrors.SetterMayNotHaveThisParam);\n    }\n\n    if (length !== paramCount) {\n      if (property.kind === \"get\") {\n        this.raise(start, ErrorMessages.BadGetterArity);\n      } else {\n        this.raise(start, ErrorMessages.BadSetterArity);\n      }\n    }\n\n    if (property.kind === \"set\" && property.value.rest) {\n      this.raise(start, ErrorMessages.BadSetterRestParameter);\n    }\n  }\n\n  flowObjectTypeSemicolon() {\n    if (!this.eat(types.semi) && !this.eat(types.comma) && !this.match(types.braceR) && !this.match(types.braceBarR)) {\n      this.unexpected();\n    }\n  }\n\n  flowParseQualifiedTypeIdentifier(startPos, startLoc, id) {\n    startPos = startPos || this.state.start;\n    startLoc = startLoc || this.state.startLoc;\n    let node = id || this.flowParseRestrictedIdentifier(true);\n\n    while (this.eat(types.dot)) {\n      const node2 = this.startNodeAt(startPos, startLoc);\n      node2.qualification = node;\n      node2.id = this.flowParseRestrictedIdentifier(true);\n      node = this.finishNode(node2, \"QualifiedTypeIdentifier\");\n    }\n\n    return node;\n  }\n\n  flowParseGenericType(startPos, startLoc, id) {\n    const node = this.startNodeAt(startPos, startLoc);\n    node.typeParameters = null;\n    node.id = this.flowParseQualifiedTypeIdentifier(startPos, startLoc, id);\n\n    if (this.isRelational(\"<\")) {\n      node.typeParameters = this.flowParseTypeParameterInstantiation();\n    }\n\n    return this.finishNode(node, \"GenericTypeAnnotation\");\n  }\n\n  flowParseTypeofType() {\n    const node = this.startNode();\n    this.expect(types._typeof);\n    node.argument = this.flowParsePrimaryType();\n    return this.finishNode(node, \"TypeofTypeAnnotation\");\n  }\n\n  flowParseTupleType() {\n    const node = this.startNode();\n    node.types = [];\n    this.expect(types.bracketL);\n\n    while (this.state.pos < this.length && !this.match(types.bracketR)) {\n      node.types.push(this.flowParseType());\n      if (this.match(types.bracketR)) break;\n      this.expect(types.comma);\n    }\n\n    this.expect(types.bracketR);\n    return this.finishNode(node, \"TupleTypeAnnotation\");\n  }\n\n  flowParseFunctionTypeParam(first) {\n    let name = null;\n    let optional = false;\n    let typeAnnotation = null;\n    const node = this.startNode();\n    const lh = this.lookahead();\n    const isThis = this.state.type === types._this;\n\n    if (lh.type === types.colon || lh.type === types.question) {\n      if (isThis && !first) {\n        this.raise(node.start, FlowErrors.ThisParamMustBeFirst);\n      }\n\n      name = this.parseIdentifier(isThis);\n\n      if (this.eat(types.question)) {\n        optional = true;\n\n        if (isThis) {\n          this.raise(node.start, FlowErrors.ThisParamMayNotBeOptional);\n        }\n      }\n\n      typeAnnotation = this.flowParseTypeInitialiser();\n    } else {\n      typeAnnotation = this.flowParseType();\n    }\n\n    node.name = name;\n    node.optional = optional;\n    node.typeAnnotation = typeAnnotation;\n    return this.finishNode(node, \"FunctionTypeParam\");\n  }\n\n  reinterpretTypeAsFunctionTypeParam(type) {\n    const node = this.startNodeAt(type.start, type.loc.start);\n    node.name = null;\n    node.optional = false;\n    node.typeAnnotation = type;\n    return this.finishNode(node, \"FunctionTypeParam\");\n  }\n\n  flowParseFunctionTypeParams(params = []) {\n    let rest = null;\n    let _this = null;\n\n    if (this.match(types._this)) {\n      _this = this.flowParseFunctionTypeParam(true);\n      _this.name = null;\n\n      if (!this.match(types.parenR)) {\n        this.expect(types.comma);\n      }\n    }\n\n    while (!this.match(types.parenR) && !this.match(types.ellipsis)) {\n      params.push(this.flowParseFunctionTypeParam(false));\n\n      if (!this.match(types.parenR)) {\n        this.expect(types.comma);\n      }\n    }\n\n    if (this.eat(types.ellipsis)) {\n      rest = this.flowParseFunctionTypeParam(false);\n    }\n\n    return {\n      params,\n      rest,\n      _this\n    };\n  }\n\n  flowIdentToTypeAnnotation(startPos, startLoc, node, id) {\n    switch (id.name) {\n      case \"any\":\n        return this.finishNode(node, \"AnyTypeAnnotation\");\n\n      case \"bool\":\n      case \"boolean\":\n        return this.finishNode(node, \"BooleanTypeAnnotation\");\n\n      case \"mixed\":\n        return this.finishNode(node, \"MixedTypeAnnotation\");\n\n      case \"empty\":\n        return this.finishNode(node, \"EmptyTypeAnnotation\");\n\n      case \"number\":\n        return this.finishNode(node, \"NumberTypeAnnotation\");\n\n      case \"string\":\n        return this.finishNode(node, \"StringTypeAnnotation\");\n\n      case \"symbol\":\n        return this.finishNode(node, \"SymbolTypeAnnotation\");\n\n      default:\n        this.checkNotUnderscore(id.name);\n        return this.flowParseGenericType(startPos, startLoc, id);\n    }\n  }\n\n  flowParsePrimaryType() {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const node = this.startNode();\n    let tmp;\n    let type;\n    let isGroupedType = false;\n    const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n\n    switch (this.state.type) {\n      case types.name:\n        if (this.isContextual(\"interface\")) {\n          return this.flowParseInterfaceType();\n        }\n\n        return this.flowIdentToTypeAnnotation(startPos, startLoc, node, this.parseIdentifier());\n\n      case types.braceL:\n        return this.flowParseObjectType({\n          allowStatic: false,\n          allowExact: false,\n          allowSpread: true,\n          allowProto: false,\n          allowInexact: true\n        });\n\n      case types.braceBarL:\n        return this.flowParseObjectType({\n          allowStatic: false,\n          allowExact: true,\n          allowSpread: true,\n          allowProto: false,\n          allowInexact: false\n        });\n\n      case types.bracketL:\n        this.state.noAnonFunctionType = false;\n        type = this.flowParseTupleType();\n        this.state.noAnonFunctionType = oldNoAnonFunctionType;\n        return type;\n\n      case types.relational:\n        if (this.state.value === \"<\") {\n          node.typeParameters = this.flowParseTypeParameterDeclaration();\n          this.expect(types.parenL);\n          tmp = this.flowParseFunctionTypeParams();\n          node.params = tmp.params;\n          node.rest = tmp.rest;\n          node.this = tmp._this;\n          this.expect(types.parenR);\n          this.expect(types.arrow);\n          node.returnType = this.flowParseType();\n          return this.finishNode(node, \"FunctionTypeAnnotation\");\n        }\n\n        break;\n\n      case types.parenL:\n        this.next();\n\n        if (!this.match(types.parenR) && !this.match(types.ellipsis)) {\n          if (this.match(types.name) || this.match(types._this)) {\n            const token = this.lookahead().type;\n            isGroupedType = token !== types.question && token !== types.colon;\n          } else {\n            isGroupedType = true;\n          }\n        }\n\n        if (isGroupedType) {\n          this.state.noAnonFunctionType = false;\n          type = this.flowParseType();\n          this.state.noAnonFunctionType = oldNoAnonFunctionType;\n\n          if (this.state.noAnonFunctionType || !(this.match(types.comma) || this.match(types.parenR) && this.lookahead().type === types.arrow)) {\n            this.expect(types.parenR);\n            return type;\n          } else {\n            this.eat(types.comma);\n          }\n        }\n\n        if (type) {\n          tmp = this.flowParseFunctionTypeParams([this.reinterpretTypeAsFunctionTypeParam(type)]);\n        } else {\n          tmp = this.flowParseFunctionTypeParams();\n        }\n\n        node.params = tmp.params;\n        node.rest = tmp.rest;\n        node.this = tmp._this;\n        this.expect(types.parenR);\n        this.expect(types.arrow);\n        node.returnType = this.flowParseType();\n        node.typeParameters = null;\n        return this.finishNode(node, \"FunctionTypeAnnotation\");\n\n      case types.string:\n        return this.parseLiteral(this.state.value, \"StringLiteralTypeAnnotation\");\n\n      case types._true:\n      case types._false:\n        node.value = this.match(types._true);\n        this.next();\n        return this.finishNode(node, \"BooleanLiteralTypeAnnotation\");\n\n      case types.plusMin:\n        if (this.state.value === \"-\") {\n          this.next();\n\n          if (this.match(types.num)) {\n            return this.parseLiteral(-this.state.value, \"NumberLiteralTypeAnnotation\", node.start, node.loc.start);\n          }\n\n          if (this.match(types.bigint)) {\n            return this.parseLiteral(-this.state.value, \"BigIntLiteralTypeAnnotation\", node.start, node.loc.start);\n          }\n\n          throw this.raise(this.state.start, FlowErrors.UnexpectedSubtractionOperand);\n        }\n\n        throw this.unexpected();\n\n      case types.num:\n        return this.parseLiteral(this.state.value, \"NumberLiteralTypeAnnotation\");\n\n      case types.bigint:\n        return this.parseLiteral(this.state.value, \"BigIntLiteralTypeAnnotation\");\n\n      case types._void:\n        this.next();\n        return this.finishNode(node, \"VoidTypeAnnotation\");\n\n      case types._null:\n        this.next();\n        return this.finishNode(node, \"NullLiteralTypeAnnotation\");\n\n      case types._this:\n        this.next();\n        return this.finishNode(node, \"ThisTypeAnnotation\");\n\n      case types.star:\n        this.next();\n        return this.finishNode(node, \"ExistsTypeAnnotation\");\n\n      default:\n        if (this.state.type.keyword === \"typeof\") {\n          return this.flowParseTypeofType();\n        } else if (this.state.type.keyword) {\n          const label = this.state.type.label;\n          this.next();\n          return super.createIdentifier(node, label);\n        }\n\n    }\n\n    throw this.unexpected();\n  }\n\n  flowParsePostfixType() {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    let type = this.flowParsePrimaryType();\n    let seenOptionalIndexedAccess = false;\n\n    while ((this.match(types.bracketL) || this.match(types.questionDot)) && !this.canInsertSemicolon()) {\n      const node = this.startNodeAt(startPos, startLoc);\n      const optional = this.eat(types.questionDot);\n      seenOptionalIndexedAccess = seenOptionalIndexedAccess || optional;\n      this.expect(types.bracketL);\n\n      if (!optional && this.match(types.bracketR)) {\n        node.elementType = type;\n        this.next();\n        type = this.finishNode(node, \"ArrayTypeAnnotation\");\n      } else {\n        node.objectType = type;\n        node.indexType = this.flowParseType();\n        this.expect(types.bracketR);\n\n        if (seenOptionalIndexedAccess) {\n          node.optional = optional;\n          type = this.finishNode(node, \"OptionalIndexedAccessType\");\n        } else {\n          type = this.finishNode(node, \"IndexedAccessType\");\n        }\n      }\n    }\n\n    return type;\n  }\n\n  flowParsePrefixType() {\n    const node = this.startNode();\n\n    if (this.eat(types.question)) {\n      node.typeAnnotation = this.flowParsePrefixType();\n      return this.finishNode(node, \"NullableTypeAnnotation\");\n    } else {\n      return this.flowParsePostfixType();\n    }\n  }\n\n  flowParseAnonFunctionWithoutParens() {\n    const param = this.flowParsePrefixType();\n\n    if (!this.state.noAnonFunctionType && this.eat(types.arrow)) {\n      const node = this.startNodeAt(param.start, param.loc.start);\n      node.params = [this.reinterpretTypeAsFunctionTypeParam(param)];\n      node.rest = null;\n      node.this = null;\n      node.returnType = this.flowParseType();\n      node.typeParameters = null;\n      return this.finishNode(node, \"FunctionTypeAnnotation\");\n    }\n\n    return param;\n  }\n\n  flowParseIntersectionType() {\n    const node = this.startNode();\n    this.eat(types.bitwiseAND);\n    const type = this.flowParseAnonFunctionWithoutParens();\n    node.types = [type];\n\n    while (this.eat(types.bitwiseAND)) {\n      node.types.push(this.flowParseAnonFunctionWithoutParens());\n    }\n\n    return node.types.length === 1 ? type : this.finishNode(node, \"IntersectionTypeAnnotation\");\n  }\n\n  flowParseUnionType() {\n    const node = this.startNode();\n    this.eat(types.bitwiseOR);\n    const type = this.flowParseIntersectionType();\n    node.types = [type];\n\n    while (this.eat(types.bitwiseOR)) {\n      node.types.push(this.flowParseIntersectionType());\n    }\n\n    return node.types.length === 1 ? type : this.finishNode(node, \"UnionTypeAnnotation\");\n  }\n\n  flowParseType() {\n    const oldInType = this.state.inType;\n    this.state.inType = true;\n    const type = this.flowParseUnionType();\n    this.state.inType = oldInType;\n    this.state.exprAllowed = this.state.exprAllowed || this.state.noAnonFunctionType;\n    return type;\n  }\n\n  flowParseTypeOrImplicitInstantiation() {\n    if (this.state.type === types.name && this.state.value === \"_\") {\n      const startPos = this.state.start;\n      const startLoc = this.state.startLoc;\n      const node = this.parseIdentifier();\n      return this.flowParseGenericType(startPos, startLoc, node);\n    } else {\n      return this.flowParseType();\n    }\n  }\n\n  flowParseTypeAnnotation() {\n    const node = this.startNode();\n    node.typeAnnotation = this.flowParseTypeInitialiser();\n    return this.finishNode(node, \"TypeAnnotation\");\n  }\n\n  flowParseTypeAnnotatableIdentifier(allowPrimitiveOverride) {\n    const ident = allowPrimitiveOverride ? this.parseIdentifier() : this.flowParseRestrictedIdentifier();\n\n    if (this.match(types.colon)) {\n      ident.typeAnnotation = this.flowParseTypeAnnotation();\n      this.resetEndLocation(ident);\n    }\n\n    return ident;\n  }\n\n  typeCastToParameter(node) {\n    node.expression.typeAnnotation = node.typeAnnotation;\n    this.resetEndLocation(node.expression, node.typeAnnotation.end, node.typeAnnotation.loc.end);\n    return node.expression;\n  }\n\n  flowParseVariance() {\n    let variance = null;\n\n    if (this.match(types.plusMin)) {\n      variance = this.startNode();\n\n      if (this.state.value === \"+\") {\n        variance.kind = \"plus\";\n      } else {\n        variance.kind = \"minus\";\n      }\n\n      this.next();\n      this.finishNode(variance, \"Variance\");\n    }\n\n    return variance;\n  }\n\n  parseFunctionBody(node, allowExpressionBody, isMethod = false) {\n    if (allowExpressionBody) {\n      return this.forwardNoArrowParamsConversionAt(node, () => super.parseFunctionBody(node, true, isMethod));\n    }\n\n    return super.parseFunctionBody(node, false, isMethod);\n  }\n\n  parseFunctionBodyAndFinish(node, type, isMethod = false) {\n    if (this.match(types.colon)) {\n      const typeNode = this.startNode();\n      [typeNode.typeAnnotation, node.predicate] = this.flowParseTypeAndPredicateInitialiser();\n      node.returnType = typeNode.typeAnnotation ? this.finishNode(typeNode, \"TypeAnnotation\") : null;\n    }\n\n    super.parseFunctionBodyAndFinish(node, type, isMethod);\n  }\n\n  parseStatement(context, topLevel) {\n    if (this.state.strict && this.match(types.name) && this.state.value === \"interface\") {\n      const lookahead = this.lookahead();\n\n      if (lookahead.type === types.name || isKeyword(lookahead.value)) {\n        const node = this.startNode();\n        this.next();\n        return this.flowParseInterface(node);\n      }\n    } else if (this.shouldParseEnums() && this.isContextual(\"enum\")) {\n      const node = this.startNode();\n      this.next();\n      return this.flowParseEnumDeclaration(node);\n    }\n\n    const stmt = super.parseStatement(context, topLevel);\n\n    if (this.flowPragma === undefined && !this.isValidDirective(stmt)) {\n      this.flowPragma = null;\n    }\n\n    return stmt;\n  }\n\n  parseExpressionStatement(node, expr) {\n    if (expr.type === \"Identifier\") {\n      if (expr.name === \"declare\") {\n        if (this.match(types._class) || this.match(types.name) || this.match(types._function) || this.match(types._var) || this.match(types._export)) {\n          return this.flowParseDeclare(node);\n        }\n      } else if (this.match(types.name)) {\n        if (expr.name === \"interface\") {\n          return this.flowParseInterface(node);\n        } else if (expr.name === \"type\") {\n          return this.flowParseTypeAlias(node);\n        } else if (expr.name === \"opaque\") {\n          return this.flowParseOpaqueType(node, false);\n        }\n      }\n    }\n\n    return super.parseExpressionStatement(node, expr);\n  }\n\n  shouldParseExportDeclaration() {\n    return this.isContextual(\"type\") || this.isContextual(\"interface\") || this.isContextual(\"opaque\") || this.shouldParseEnums() && this.isContextual(\"enum\") || super.shouldParseExportDeclaration();\n  }\n\n  isExportDefaultSpecifier() {\n    if (this.match(types.name) && (this.state.value === \"type\" || this.state.value === \"interface\" || this.state.value === \"opaque\" || this.shouldParseEnums() && this.state.value === \"enum\")) {\n      return false;\n    }\n\n    return super.isExportDefaultSpecifier();\n  }\n\n  parseExportDefaultExpression() {\n    if (this.shouldParseEnums() && this.isContextual(\"enum\")) {\n      const node = this.startNode();\n      this.next();\n      return this.flowParseEnumDeclaration(node);\n    }\n\n    return super.parseExportDefaultExpression();\n  }\n\n  parseConditional(expr, startPos, startLoc, refNeedsArrowPos) {\n    if (!this.match(types.question)) return expr;\n\n    if (refNeedsArrowPos) {\n      const result = this.tryParse(() => super.parseConditional(expr, startPos, startLoc));\n\n      if (!result.node) {\n        refNeedsArrowPos.start = result.error.pos || this.state.start;\n        return expr;\n      }\n\n      if (result.error) this.state = result.failState;\n      return result.node;\n    }\n\n    this.expect(types.question);\n    const state = this.state.clone();\n    const originalNoArrowAt = this.state.noArrowAt;\n    const node = this.startNodeAt(startPos, startLoc);\n    let {\n      consequent,\n      failed\n    } = this.tryParseConditionalConsequent();\n    let [valid, invalid] = this.getArrowLikeExpressions(consequent);\n\n    if (failed || invalid.length > 0) {\n      const noArrowAt = [...originalNoArrowAt];\n\n      if (invalid.length > 0) {\n        this.state = state;\n        this.state.noArrowAt = noArrowAt;\n\n        for (let i = 0; i < invalid.length; i++) {\n          noArrowAt.push(invalid[i].start);\n        }\n\n        ({\n          consequent,\n          failed\n        } = this.tryParseConditionalConsequent());\n        [valid, invalid] = this.getArrowLikeExpressions(consequent);\n      }\n\n      if (failed && valid.length > 1) {\n        this.raise(state.start, FlowErrors.AmbiguousConditionalArrow);\n      }\n\n      if (failed && valid.length === 1) {\n        this.state = state;\n        this.state.noArrowAt = noArrowAt.concat(valid[0].start);\n        ({\n          consequent,\n          failed\n        } = this.tryParseConditionalConsequent());\n      }\n    }\n\n    this.getArrowLikeExpressions(consequent, true);\n    this.state.noArrowAt = originalNoArrowAt;\n    this.expect(types.colon);\n    node.test = expr;\n    node.consequent = consequent;\n    node.alternate = this.forwardNoArrowParamsConversionAt(node, () => this.parseMaybeAssign(undefined, undefined, undefined));\n    return this.finishNode(node, \"ConditionalExpression\");\n  }\n\n  tryParseConditionalConsequent() {\n    this.state.noArrowParamsConversionAt.push(this.state.start);\n    const consequent = this.parseMaybeAssignAllowIn();\n    const failed = !this.match(types.colon);\n    this.state.noArrowParamsConversionAt.pop();\n    return {\n      consequent,\n      failed\n    };\n  }\n\n  getArrowLikeExpressions(node, disallowInvalid) {\n    const stack = [node];\n    const arrows = [];\n\n    while (stack.length !== 0) {\n      const node = stack.pop();\n\n      if (node.type === \"ArrowFunctionExpression\") {\n        if (node.typeParameters || !node.returnType) {\n          this.finishArrowValidation(node);\n        } else {\n          arrows.push(node);\n        }\n\n        stack.push(node.body);\n      } else if (node.type === \"ConditionalExpression\") {\n        stack.push(node.consequent);\n        stack.push(node.alternate);\n      }\n    }\n\n    if (disallowInvalid) {\n      arrows.forEach(node => this.finishArrowValidation(node));\n      return [arrows, []];\n    }\n\n    return partition(arrows, node => node.params.every(param => this.isAssignable(param, true)));\n  }\n\n  finishArrowValidation(node) {\n    var _node$extra;\n\n    this.toAssignableList(node.params, (_node$extra = node.extra) == null ? void 0 : _node$extra.trailingComma, false);\n    this.scope.enter(SCOPE_FUNCTION | SCOPE_ARROW);\n    super.checkParams(node, false, true);\n    this.scope.exit();\n  }\n\n  forwardNoArrowParamsConversionAt(node, parse) {\n    let result;\n\n    if (this.state.noArrowParamsConversionAt.indexOf(node.start) !== -1) {\n      this.state.noArrowParamsConversionAt.push(this.state.start);\n      result = parse();\n      this.state.noArrowParamsConversionAt.pop();\n    } else {\n      result = parse();\n    }\n\n    return result;\n  }\n\n  parseParenItem(node, startPos, startLoc) {\n    node = super.parseParenItem(node, startPos, startLoc);\n\n    if (this.eat(types.question)) {\n      node.optional = true;\n      this.resetEndLocation(node);\n    }\n\n    if (this.match(types.colon)) {\n      const typeCastNode = this.startNodeAt(startPos, startLoc);\n      typeCastNode.expression = node;\n      typeCastNode.typeAnnotation = this.flowParseTypeAnnotation();\n      return this.finishNode(typeCastNode, \"TypeCastExpression\");\n    }\n\n    return node;\n  }\n\n  assertModuleNodeAllowed(node) {\n    if (node.type === \"ImportDeclaration\" && (node.importKind === \"type\" || node.importKind === \"typeof\") || node.type === \"ExportNamedDeclaration\" && node.exportKind === \"type\" || node.type === \"ExportAllDeclaration\" && node.exportKind === \"type\") {\n      return;\n    }\n\n    super.assertModuleNodeAllowed(node);\n  }\n\n  parseExport(node) {\n    const decl = super.parseExport(node);\n\n    if (decl.type === \"ExportNamedDeclaration\" || decl.type === \"ExportAllDeclaration\") {\n      decl.exportKind = decl.exportKind || \"value\";\n    }\n\n    return decl;\n  }\n\n  parseExportDeclaration(node) {\n    if (this.isContextual(\"type\")) {\n      node.exportKind = \"type\";\n      const declarationNode = this.startNode();\n      this.next();\n\n      if (this.match(types.braceL)) {\n        node.specifiers = this.parseExportSpecifiers();\n        this.parseExportFrom(node);\n        return null;\n      } else {\n        return this.flowParseTypeAlias(declarationNode);\n      }\n    } else if (this.isContextual(\"opaque\")) {\n      node.exportKind = \"type\";\n      const declarationNode = this.startNode();\n      this.next();\n      return this.flowParseOpaqueType(declarationNode, false);\n    } else if (this.isContextual(\"interface\")) {\n      node.exportKind = \"type\";\n      const declarationNode = this.startNode();\n      this.next();\n      return this.flowParseInterface(declarationNode);\n    } else if (this.shouldParseEnums() && this.isContextual(\"enum\")) {\n      node.exportKind = \"value\";\n      const declarationNode = this.startNode();\n      this.next();\n      return this.flowParseEnumDeclaration(declarationNode);\n    } else {\n      return super.parseExportDeclaration(node);\n    }\n  }\n\n  eatExportStar(node) {\n    if (super.eatExportStar(...arguments)) return true;\n\n    if (this.isContextual(\"type\") && this.lookahead().type === types.star) {\n      node.exportKind = \"type\";\n      this.next();\n      this.next();\n      return true;\n    }\n\n    return false;\n  }\n\n  maybeParseExportNamespaceSpecifier(node) {\n    const pos = this.state.start;\n    const hasNamespace = super.maybeParseExportNamespaceSpecifier(node);\n\n    if (hasNamespace && node.exportKind === \"type\") {\n      this.unexpected(pos);\n    }\n\n    return hasNamespace;\n  }\n\n  parseClassId(node, isStatement, optionalId) {\n    super.parseClassId(node, isStatement, optionalId);\n\n    if (this.isRelational(\"<\")) {\n      node.typeParameters = this.flowParseTypeParameterDeclaration();\n    }\n  }\n\n  parseClassMember(classBody, member, state) {\n    const pos = this.state.start;\n\n    if (this.isContextual(\"declare\")) {\n      if (this.parseClassMemberFromModifier(classBody, member)) {\n        return;\n      }\n\n      member.declare = true;\n    }\n\n    super.parseClassMember(classBody, member, state);\n\n    if (member.declare) {\n      if (member.type !== \"ClassProperty\" && member.type !== \"ClassPrivateProperty\" && member.type !== \"PropertyDefinition\") {\n          this.raise(pos, FlowErrors.DeclareClassElement);\n        } else if (member.value) {\n        this.raise(member.value.start, FlowErrors.DeclareClassFieldInitializer);\n      }\n    }\n  }\n\n  getTokenFromCode(code) {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (code === 123 && next === 124) {\n      return this.finishOp(types.braceBarL, 2);\n    } else if (this.state.inType && (code === 62 || code === 60)) {\n      return this.finishOp(types.relational, 1);\n    } else if (this.state.inType && code === 63) {\n      if (next === 46) {\n        return this.finishOp(types.questionDot, 2);\n      }\n\n      return this.finishOp(types.question, 1);\n    } else if (isIteratorStart(code, next)) {\n      this.state.isIterator = true;\n      return super.readWord();\n    } else {\n      return super.getTokenFromCode(code);\n    }\n  }\n\n  isAssignable(node, isBinding) {\n    switch (node.type) {\n      case \"Identifier\":\n      case \"ObjectPattern\":\n      case \"ArrayPattern\":\n      case \"AssignmentPattern\":\n        return true;\n\n      case \"ObjectExpression\":\n        {\n          const last = node.properties.length - 1;\n          return node.properties.every((prop, i) => {\n            return prop.type !== \"ObjectMethod\" && (i === last || prop.type === \"SpreadElement\") && this.isAssignable(prop);\n          });\n        }\n\n      case \"ObjectProperty\":\n        return this.isAssignable(node.value);\n\n      case \"SpreadElement\":\n        return this.isAssignable(node.argument);\n\n      case \"ArrayExpression\":\n        return node.elements.every(element => this.isAssignable(element));\n\n      case \"AssignmentExpression\":\n        return node.operator === \"=\";\n\n      case \"ParenthesizedExpression\":\n      case \"TypeCastExpression\":\n        return this.isAssignable(node.expression);\n\n      case \"MemberExpression\":\n      case \"OptionalMemberExpression\":\n        return !isBinding;\n\n      default:\n        return false;\n    }\n  }\n\n  toAssignable(node, isLHS = false) {\n    if (node.type === \"TypeCastExpression\") {\n      return super.toAssignable(this.typeCastToParameter(node), isLHS);\n    } else {\n      return super.toAssignable(node, isLHS);\n    }\n  }\n\n  toAssignableList(exprList, trailingCommaPos, isLHS) {\n    for (let i = 0; i < exprList.length; i++) {\n      const expr = exprList[i];\n\n      if ((expr == null ? void 0 : expr.type) === \"TypeCastExpression\") {\n        exprList[i] = this.typeCastToParameter(expr);\n      }\n    }\n\n    return super.toAssignableList(exprList, trailingCommaPos, isLHS);\n  }\n\n  toReferencedList(exprList, isParenthesizedExpr) {\n    for (let i = 0; i < exprList.length; i++) {\n      var _expr$extra;\n\n      const expr = exprList[i];\n\n      if (expr && expr.type === \"TypeCastExpression\" && !((_expr$extra = expr.extra) != null && _expr$extra.parenthesized) && (exprList.length > 1 || !isParenthesizedExpr)) {\n        this.raise(expr.typeAnnotation.start, FlowErrors.TypeCastInPattern);\n      }\n    }\n\n    return exprList;\n  }\n\n  parseArrayLike(close, canBePattern, isTuple, refExpressionErrors) {\n    const node = super.parseArrayLike(close, canBePattern, isTuple, refExpressionErrors);\n\n    if (canBePattern && !this.state.maybeInArrowParameters) {\n      this.toReferencedList(node.elements);\n    }\n\n    return node;\n  }\n\n  checkLVal(expr, ...args) {\n    if (expr.type !== \"TypeCastExpression\") {\n      return super.checkLVal(expr, ...args);\n    }\n  }\n\n  parseClassProperty(node) {\n    if (this.match(types.colon)) {\n      node.typeAnnotation = this.flowParseTypeAnnotation();\n    }\n\n    return super.parseClassProperty(node);\n  }\n\n  parseClassPrivateProperty(node) {\n    if (this.match(types.colon)) {\n      node.typeAnnotation = this.flowParseTypeAnnotation();\n    }\n\n    return super.parseClassPrivateProperty(node);\n  }\n\n  isClassMethod() {\n    return this.isRelational(\"<\") || super.isClassMethod();\n  }\n\n  isClassProperty() {\n    return this.match(types.colon) || super.isClassProperty();\n  }\n\n  isNonstaticConstructor(method) {\n    return !this.match(types.colon) && super.isNonstaticConstructor(method);\n  }\n\n  pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper) {\n    if (method.variance) {\n      this.unexpected(method.variance.start);\n    }\n\n    delete method.variance;\n\n    if (this.isRelational(\"<\")) {\n      method.typeParameters = this.flowParseTypeParameterDeclaration();\n    }\n\n    super.pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper);\n\n    if (method.params && isConstructor) {\n      const params = method.params;\n\n      if (params.length > 0 && this.isThisParam(params[0])) {\n        this.raise(method.start, FlowErrors.ThisParamBannedInConstructor);\n      }\n    } else if (method.type === \"MethodDefinition\" && isConstructor && method.value.params) {\n      const params = method.value.params;\n\n      if (params.length > 0 && this.isThisParam(params[0])) {\n        this.raise(method.start, FlowErrors.ThisParamBannedInConstructor);\n      }\n    }\n  }\n\n  pushClassPrivateMethod(classBody, method, isGenerator, isAsync) {\n    if (method.variance) {\n      this.unexpected(method.variance.start);\n    }\n\n    delete method.variance;\n\n    if (this.isRelational(\"<\")) {\n      method.typeParameters = this.flowParseTypeParameterDeclaration();\n    }\n\n    super.pushClassPrivateMethod(classBody, method, isGenerator, isAsync);\n  }\n\n  parseClassSuper(node) {\n    super.parseClassSuper(node);\n\n    if (node.superClass && this.isRelational(\"<\")) {\n      node.superTypeParameters = this.flowParseTypeParameterInstantiation();\n    }\n\n    if (this.isContextual(\"implements\")) {\n      this.next();\n      const implemented = node.implements = [];\n\n      do {\n        const node = this.startNode();\n        node.id = this.flowParseRestrictedIdentifier(true);\n\n        if (this.isRelational(\"<\")) {\n          node.typeParameters = this.flowParseTypeParameterInstantiation();\n        } else {\n          node.typeParameters = null;\n        }\n\n        implemented.push(this.finishNode(node, \"ClassImplements\"));\n      } while (this.eat(types.comma));\n    }\n  }\n\n  checkGetterSetterParams(method) {\n    super.checkGetterSetterParams(method);\n    const params = this.getObjectOrClassMethodParams(method);\n\n    if (params.length > 0) {\n      const param = params[0];\n\n      if (this.isThisParam(param) && method.kind === \"get\") {\n        this.raise(param.start, FlowErrors.GetterMayNotHaveThisParam);\n      } else if (this.isThisParam(param)) {\n        this.raise(param.start, FlowErrors.SetterMayNotHaveThisParam);\n      }\n    }\n  }\n\n  parsePropertyName(node, isPrivateNameAllowed) {\n    const variance = this.flowParseVariance();\n    const key = super.parsePropertyName(node, isPrivateNameAllowed);\n    node.variance = variance;\n    return key;\n  }\n\n  parseObjPropValue(prop, startPos, startLoc, isGenerator, isAsync, isPattern, isAccessor, refExpressionErrors) {\n    if (prop.variance) {\n      this.unexpected(prop.variance.start);\n    }\n\n    delete prop.variance;\n    let typeParameters;\n\n    if (this.isRelational(\"<\") && !isAccessor) {\n      typeParameters = this.flowParseTypeParameterDeclaration();\n      if (!this.match(types.parenL)) this.unexpected();\n    }\n\n    super.parseObjPropValue(prop, startPos, startLoc, isGenerator, isAsync, isPattern, isAccessor, refExpressionErrors);\n\n    if (typeParameters) {\n      (prop.value || prop).typeParameters = typeParameters;\n    }\n  }\n\n  parseAssignableListItemTypes(param) {\n    if (this.eat(types.question)) {\n      if (param.type !== \"Identifier\") {\n        this.raise(param.start, FlowErrors.OptionalBindingPattern);\n      }\n\n      if (this.isThisParam(param)) {\n        this.raise(param.start, FlowErrors.ThisParamMayNotBeOptional);\n      }\n\n      param.optional = true;\n    }\n\n    if (this.match(types.colon)) {\n      param.typeAnnotation = this.flowParseTypeAnnotation();\n    } else if (this.isThisParam(param)) {\n      this.raise(param.start, FlowErrors.ThisParamAnnotationRequired);\n    }\n\n    if (this.match(types.eq) && this.isThisParam(param)) {\n      this.raise(param.start, FlowErrors.ThisParamNoDefault);\n    }\n\n    this.resetEndLocation(param);\n    return param;\n  }\n\n  parseMaybeDefault(startPos, startLoc, left) {\n    const node = super.parseMaybeDefault(startPos, startLoc, left);\n\n    if (node.type === \"AssignmentPattern\" && node.typeAnnotation && node.right.start < node.typeAnnotation.start) {\n      this.raise(node.typeAnnotation.start, FlowErrors.TypeBeforeInitializer);\n    }\n\n    return node;\n  }\n\n  shouldParseDefaultImport(node) {\n    if (!hasTypeImportKind(node)) {\n      return super.shouldParseDefaultImport(node);\n    }\n\n    return isMaybeDefaultImport(this.state);\n  }\n\n  parseImportSpecifierLocal(node, specifier, type, contextDescription) {\n    specifier.local = hasTypeImportKind(node) ? this.flowParseRestrictedIdentifier(true, true) : this.parseIdentifier();\n    this.checkLVal(specifier.local, contextDescription, BIND_LEXICAL);\n    node.specifiers.push(this.finishNode(specifier, type));\n  }\n\n  maybeParseDefaultImportSpecifier(node) {\n    node.importKind = \"value\";\n    let kind = null;\n\n    if (this.match(types._typeof)) {\n      kind = \"typeof\";\n    } else if (this.isContextual(\"type\")) {\n      kind = \"type\";\n    }\n\n    if (kind) {\n      const lh = this.lookahead();\n\n      if (kind === \"type\" && lh.type === types.star) {\n        this.unexpected(lh.start);\n      }\n\n      if (isMaybeDefaultImport(lh) || lh.type === types.braceL || lh.type === types.star) {\n        this.next();\n        node.importKind = kind;\n      }\n    }\n\n    return super.maybeParseDefaultImportSpecifier(node);\n  }\n\n  parseImportSpecifier(node) {\n    const specifier = this.startNode();\n    const firstIdentLoc = this.state.start;\n    const firstIdent = this.parseModuleExportName();\n    let specifierTypeKind = null;\n\n    if (firstIdent.type === \"Identifier\") {\n      if (firstIdent.name === \"type\") {\n        specifierTypeKind = \"type\";\n      } else if (firstIdent.name === \"typeof\") {\n        specifierTypeKind = \"typeof\";\n      }\n    }\n\n    let isBinding = false;\n\n    if (this.isContextual(\"as\") && !this.isLookaheadContextual(\"as\")) {\n      const as_ident = this.parseIdentifier(true);\n\n      if (specifierTypeKind !== null && !this.match(types.name) && !this.state.type.keyword) {\n        specifier.imported = as_ident;\n        specifier.importKind = specifierTypeKind;\n        specifier.local = as_ident.__clone();\n      } else {\n        specifier.imported = firstIdent;\n        specifier.importKind = null;\n        specifier.local = this.parseIdentifier();\n      }\n    } else if (specifierTypeKind !== null && (this.match(types.name) || this.state.type.keyword)) {\n      specifier.imported = this.parseIdentifier(true);\n      specifier.importKind = specifierTypeKind;\n\n      if (this.eatContextual(\"as\")) {\n        specifier.local = this.parseIdentifier();\n      } else {\n        isBinding = true;\n        specifier.local = specifier.imported.__clone();\n      }\n    } else {\n      if (firstIdent.type === \"StringLiteral\") {\n        throw this.raise(specifier.start, ErrorMessages.ImportBindingIsString, firstIdent.value);\n      }\n\n      isBinding = true;\n      specifier.imported = firstIdent;\n      specifier.importKind = null;\n      specifier.local = specifier.imported.__clone();\n    }\n\n    const nodeIsTypeImport = hasTypeImportKind(node);\n    const specifierIsTypeImport = hasTypeImportKind(specifier);\n\n    if (nodeIsTypeImport && specifierIsTypeImport) {\n      this.raise(firstIdentLoc, FlowErrors.ImportTypeShorthandOnlyInPureImport);\n    }\n\n    if (nodeIsTypeImport || specifierIsTypeImport) {\n      this.checkReservedType(specifier.local.name, specifier.local.start, true);\n    }\n\n    if (isBinding && !nodeIsTypeImport && !specifierIsTypeImport) {\n      this.checkReservedWord(specifier.local.name, specifier.start, true, true);\n    }\n\n    this.checkLVal(specifier.local, \"import specifier\", BIND_LEXICAL);\n    node.specifiers.push(this.finishNode(specifier, \"ImportSpecifier\"));\n  }\n\n  parseBindingAtom() {\n    switch (this.state.type) {\n      case types._this:\n        return this.parseIdentifier(true);\n\n      default:\n        return super.parseBindingAtom();\n    }\n  }\n\n  parseFunctionParams(node, allowModifiers) {\n    const kind = node.kind;\n\n    if (kind !== \"get\" && kind !== \"set\" && this.isRelational(\"<\")) {\n      node.typeParameters = this.flowParseTypeParameterDeclaration();\n    }\n\n    super.parseFunctionParams(node, allowModifiers);\n  }\n\n  parseVarId(decl, kind) {\n    super.parseVarId(decl, kind);\n\n    if (this.match(types.colon)) {\n      decl.id.typeAnnotation = this.flowParseTypeAnnotation();\n      this.resetEndLocation(decl.id);\n    }\n  }\n\n  parseAsyncArrowFromCallExpression(node, call) {\n    if (this.match(types.colon)) {\n      const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n      this.state.noAnonFunctionType = true;\n      node.returnType = this.flowParseTypeAnnotation();\n      this.state.noAnonFunctionType = oldNoAnonFunctionType;\n    }\n\n    return super.parseAsyncArrowFromCallExpression(node, call);\n  }\n\n  shouldParseAsyncArrow() {\n    return this.match(types.colon) || super.shouldParseAsyncArrow();\n  }\n\n  parseMaybeAssign(refExpressionErrors, afterLeftParse, refNeedsArrowPos) {\n    var _jsx;\n\n    let state = null;\n    let jsx;\n\n    if (this.hasPlugin(\"jsx\") && (this.match(types.jsxTagStart) || this.isRelational(\"<\"))) {\n      state = this.state.clone();\n      jsx = this.tryParse(() => super.parseMaybeAssign(refExpressionErrors, afterLeftParse, refNeedsArrowPos), state);\n      if (!jsx.error) return jsx.node;\n      const {\n        context\n      } = this.state;\n\n      if (context[context.length - 1] === types$1.j_oTag) {\n        context.length -= 2;\n      } else if (context[context.length - 1] === types$1.j_expr) {\n        context.length -= 1;\n      }\n    }\n\n    if ((_jsx = jsx) != null && _jsx.error || this.isRelational(\"<\")) {\n      var _jsx2, _jsx3;\n\n      state = state || this.state.clone();\n      let typeParameters;\n      const arrow = this.tryParse(abort => {\n        var _arrowExpression$extr;\n\n        typeParameters = this.flowParseTypeParameterDeclaration();\n        const arrowExpression = this.forwardNoArrowParamsConversionAt(typeParameters, () => {\n          const result = super.parseMaybeAssign(refExpressionErrors, afterLeftParse, refNeedsArrowPos);\n          this.resetStartLocationFromNode(result, typeParameters);\n          return result;\n        });\n\n        if (arrowExpression.type !== \"ArrowFunctionExpression\" && (_arrowExpression$extr = arrowExpression.extra) != null && _arrowExpression$extr.parenthesized) {\n          abort();\n        }\n\n        const expr = this.maybeUnwrapTypeCastExpression(arrowExpression);\n        expr.typeParameters = typeParameters;\n        this.resetStartLocationFromNode(expr, typeParameters);\n        return arrowExpression;\n      }, state);\n      let arrowExpression = null;\n\n      if (arrow.node && this.maybeUnwrapTypeCastExpression(arrow.node).type === \"ArrowFunctionExpression\") {\n        if (!arrow.error && !arrow.aborted) {\n          if (arrow.node.async) {\n            this.raise(typeParameters.start, FlowErrors.UnexpectedTypeParameterBeforeAsyncArrowFunction);\n          }\n\n          return arrow.node;\n        }\n\n        arrowExpression = arrow.node;\n      }\n\n      if ((_jsx2 = jsx) != null && _jsx2.node) {\n        this.state = jsx.failState;\n        return jsx.node;\n      }\n\n      if (arrowExpression) {\n        this.state = arrow.failState;\n        return arrowExpression;\n      }\n\n      if ((_jsx3 = jsx) != null && _jsx3.thrown) throw jsx.error;\n      if (arrow.thrown) throw arrow.error;\n      throw this.raise(typeParameters.start, FlowErrors.UnexpectedTokenAfterTypeParameter);\n    }\n\n    return super.parseMaybeAssign(refExpressionErrors, afterLeftParse, refNeedsArrowPos);\n  }\n\n  parseArrow(node) {\n    if (this.match(types.colon)) {\n      const result = this.tryParse(() => {\n        const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n        this.state.noAnonFunctionType = true;\n        const typeNode = this.startNode();\n        [typeNode.typeAnnotation, node.predicate] = this.flowParseTypeAndPredicateInitialiser();\n        this.state.noAnonFunctionType = oldNoAnonFunctionType;\n        if (this.canInsertSemicolon()) this.unexpected();\n        if (!this.match(types.arrow)) this.unexpected();\n        return typeNode;\n      });\n      if (result.thrown) return null;\n      if (result.error) this.state = result.failState;\n      node.returnType = result.node.typeAnnotation ? this.finishNode(result.node, \"TypeAnnotation\") : null;\n    }\n\n    return super.parseArrow(node);\n  }\n\n  shouldParseArrow() {\n    return this.match(types.colon) || super.shouldParseArrow();\n  }\n\n  setArrowFunctionParameters(node, params) {\n    if (this.state.noArrowParamsConversionAt.indexOf(node.start) !== -1) {\n      node.params = params;\n    } else {\n      super.setArrowFunctionParameters(node, params);\n    }\n  }\n\n  checkParams(node, allowDuplicates, isArrowFunction) {\n    if (isArrowFunction && this.state.noArrowParamsConversionAt.indexOf(node.start) !== -1) {\n      return;\n    }\n\n    for (let i = 0; i < node.params.length; i++) {\n      if (this.isThisParam(node.params[i]) && i > 0) {\n        this.raise(node.params[i].start, FlowErrors.ThisParamMustBeFirst);\n      }\n    }\n\n    return super.checkParams(...arguments);\n  }\n\n  parseParenAndDistinguishExpression(canBeArrow) {\n    return super.parseParenAndDistinguishExpression(canBeArrow && this.state.noArrowAt.indexOf(this.state.start) === -1);\n  }\n\n  parseSubscripts(base, startPos, startLoc, noCalls) {\n    if (base.type === \"Identifier\" && base.name === \"async\" && this.state.noArrowAt.indexOf(startPos) !== -1) {\n      this.next();\n      const node = this.startNodeAt(startPos, startLoc);\n      node.callee = base;\n      node.arguments = this.parseCallExpressionArguments(types.parenR, false);\n      base = this.finishNode(node, \"CallExpression\");\n    } else if (base.type === \"Identifier\" && base.name === \"async\" && this.isRelational(\"<\")) {\n      const state = this.state.clone();\n      const arrow = this.tryParse(abort => this.parseAsyncArrowWithTypeParameters(startPos, startLoc) || abort(), state);\n      if (!arrow.error && !arrow.aborted) return arrow.node;\n      const result = this.tryParse(() => super.parseSubscripts(base, startPos, startLoc, noCalls), state);\n      if (result.node && !result.error) return result.node;\n\n      if (arrow.node) {\n        this.state = arrow.failState;\n        return arrow.node;\n      }\n\n      if (result.node) {\n        this.state = result.failState;\n        return result.node;\n      }\n\n      throw arrow.error || result.error;\n    }\n\n    return super.parseSubscripts(base, startPos, startLoc, noCalls);\n  }\n\n  parseSubscript(base, startPos, startLoc, noCalls, subscriptState) {\n    if (this.match(types.questionDot) && this.isLookaheadToken_lt()) {\n      subscriptState.optionalChainMember = true;\n\n      if (noCalls) {\n        subscriptState.stop = true;\n        return base;\n      }\n\n      this.next();\n      const node = this.startNodeAt(startPos, startLoc);\n      node.callee = base;\n      node.typeArguments = this.flowParseTypeParameterInstantiation();\n      this.expect(types.parenL);\n      node.arguments = this.parseCallExpressionArguments(types.parenR, false);\n      node.optional = true;\n      return this.finishCallExpression(node, true);\n    } else if (!noCalls && this.shouldParseTypes() && this.isRelational(\"<\")) {\n      const node = this.startNodeAt(startPos, startLoc);\n      node.callee = base;\n      const result = this.tryParse(() => {\n        node.typeArguments = this.flowParseTypeParameterInstantiationCallOrNew();\n        this.expect(types.parenL);\n        node.arguments = this.parseCallExpressionArguments(types.parenR, false);\n        if (subscriptState.optionalChainMember) node.optional = false;\n        return this.finishCallExpression(node, subscriptState.optionalChainMember);\n      });\n\n      if (result.node) {\n        if (result.error) this.state = result.failState;\n        return result.node;\n      }\n    }\n\n    return super.parseSubscript(base, startPos, startLoc, noCalls, subscriptState);\n  }\n\n  parseNewArguments(node) {\n    let targs = null;\n\n    if (this.shouldParseTypes() && this.isRelational(\"<\")) {\n      targs = this.tryParse(() => this.flowParseTypeParameterInstantiationCallOrNew()).node;\n    }\n\n    node.typeArguments = targs;\n    super.parseNewArguments(node);\n  }\n\n  parseAsyncArrowWithTypeParameters(startPos, startLoc) {\n    const node = this.startNodeAt(startPos, startLoc);\n    this.parseFunctionParams(node);\n    if (!this.parseArrow(node)) return;\n    return this.parseArrowExpression(node, undefined, true);\n  }\n\n  readToken_mult_modulo(code) {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (code === 42 && next === 47 && this.state.hasFlowComment) {\n      this.state.hasFlowComment = false;\n      this.state.pos += 2;\n      this.nextToken();\n      return;\n    }\n\n    super.readToken_mult_modulo(code);\n  }\n\n  readToken_pipe_amp(code) {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (code === 124 && next === 125) {\n      this.finishOp(types.braceBarR, 2);\n      return;\n    }\n\n    super.readToken_pipe_amp(code);\n  }\n\n  parseTopLevel(file, program) {\n    const fileNode = super.parseTopLevel(file, program);\n\n    if (this.state.hasFlowComment) {\n      this.raise(this.state.pos, FlowErrors.UnterminatedFlowComment);\n    }\n\n    return fileNode;\n  }\n\n  skipBlockComment() {\n    if (this.hasPlugin(\"flowComments\") && this.skipFlowComment()) {\n      if (this.state.hasFlowComment) {\n        this.unexpected(null, FlowErrors.NestedFlowComment);\n      }\n\n      this.hasFlowCommentCompletion();\n      this.state.pos += this.skipFlowComment();\n      this.state.hasFlowComment = true;\n      return;\n    }\n\n    if (this.state.hasFlowComment) {\n      const end = this.input.indexOf(\"*-/\", this.state.pos += 2);\n\n      if (end === -1) {\n        throw this.raise(this.state.pos - 2, ErrorMessages.UnterminatedComment);\n      }\n\n      this.state.pos = end + 3;\n      return;\n    }\n\n    super.skipBlockComment();\n  }\n\n  skipFlowComment() {\n    const {\n      pos\n    } = this.state;\n    let shiftToFirstNonWhiteSpace = 2;\n\n    while ([32, 9].includes(this.input.charCodeAt(pos + shiftToFirstNonWhiteSpace))) {\n      shiftToFirstNonWhiteSpace++;\n    }\n\n    const ch2 = this.input.charCodeAt(shiftToFirstNonWhiteSpace + pos);\n    const ch3 = this.input.charCodeAt(shiftToFirstNonWhiteSpace + pos + 1);\n\n    if (ch2 === 58 && ch3 === 58) {\n      return shiftToFirstNonWhiteSpace + 2;\n    }\n\n    if (this.input.slice(shiftToFirstNonWhiteSpace + pos, shiftToFirstNonWhiteSpace + pos + 12) === \"flow-include\") {\n      return shiftToFirstNonWhiteSpace + 12;\n    }\n\n    if (ch2 === 58 && ch3 !== 58) {\n      return shiftToFirstNonWhiteSpace;\n    }\n\n    return false;\n  }\n\n  hasFlowCommentCompletion() {\n    const end = this.input.indexOf(\"*/\", this.state.pos);\n\n    if (end === -1) {\n      throw this.raise(this.state.pos, ErrorMessages.UnterminatedComment);\n    }\n  }\n\n  flowEnumErrorBooleanMemberNotInitialized(pos, {\n    enumName,\n    memberName\n  }) {\n    this.raise(pos, FlowErrors.EnumBooleanMemberNotInitialized, memberName, enumName);\n  }\n\n  flowEnumErrorInvalidMemberName(pos, {\n    enumName,\n    memberName\n  }) {\n    const suggestion = memberName[0].toUpperCase() + memberName.slice(1);\n    this.raise(pos, FlowErrors.EnumInvalidMemberName, memberName, suggestion, enumName);\n  }\n\n  flowEnumErrorDuplicateMemberName(pos, {\n    enumName,\n    memberName\n  }) {\n    this.raise(pos, FlowErrors.EnumDuplicateMemberName, memberName, enumName);\n  }\n\n  flowEnumErrorInconsistentMemberValues(pos, {\n    enumName\n  }) {\n    this.raise(pos, FlowErrors.EnumInconsistentMemberValues, enumName);\n  }\n\n  flowEnumErrorInvalidExplicitType(pos, {\n    enumName,\n    suppliedType\n  }) {\n    return this.raise(pos, suppliedType === null ? FlowErrors.EnumInvalidExplicitTypeUnknownSupplied : FlowErrors.EnumInvalidExplicitType, enumName, suppliedType);\n  }\n\n  flowEnumErrorInvalidMemberInitializer(pos, {\n    enumName,\n    explicitType,\n    memberName\n  }) {\n    let message = null;\n\n    switch (explicitType) {\n      case \"boolean\":\n      case \"number\":\n      case \"string\":\n        message = FlowErrors.EnumInvalidMemberInitializerPrimaryType;\n        break;\n\n      case \"symbol\":\n        message = FlowErrors.EnumInvalidMemberInitializerSymbolType;\n        break;\n\n      default:\n        message = FlowErrors.EnumInvalidMemberInitializerUnknownType;\n    }\n\n    return this.raise(pos, message, enumName, memberName, explicitType);\n  }\n\n  flowEnumErrorNumberMemberNotInitialized(pos, {\n    enumName,\n    memberName\n  }) {\n    this.raise(pos, FlowErrors.EnumNumberMemberNotInitialized, enumName, memberName);\n  }\n\n  flowEnumErrorStringMemberInconsistentlyInitailized(pos, {\n    enumName\n  }) {\n    this.raise(pos, FlowErrors.EnumStringMemberInconsistentlyInitailized, enumName);\n  }\n\n  flowEnumMemberInit() {\n    const startPos = this.state.start;\n\n    const endOfInit = () => this.match(types.comma) || this.match(types.braceR);\n\n    switch (this.state.type) {\n      case types.num:\n        {\n          const literal = this.parseLiteral(this.state.value, \"NumericLiteral\");\n\n          if (endOfInit()) {\n            return {\n              type: \"number\",\n              pos: literal.start,\n              value: literal\n            };\n          }\n\n          return {\n            type: \"invalid\",\n            pos: startPos\n          };\n        }\n\n      case types.string:\n        {\n          const literal = this.parseLiteral(this.state.value, \"StringLiteral\");\n\n          if (endOfInit()) {\n            return {\n              type: \"string\",\n              pos: literal.start,\n              value: literal\n            };\n          }\n\n          return {\n            type: \"invalid\",\n            pos: startPos\n          };\n        }\n\n      case types._true:\n      case types._false:\n        {\n          const literal = this.parseBooleanLiteral();\n\n          if (endOfInit()) {\n            return {\n              type: \"boolean\",\n              pos: literal.start,\n              value: literal\n            };\n          }\n\n          return {\n            type: \"invalid\",\n            pos: startPos\n          };\n        }\n\n      default:\n        return {\n          type: \"invalid\",\n          pos: startPos\n        };\n    }\n  }\n\n  flowEnumMemberRaw() {\n    const pos = this.state.start;\n    const id = this.parseIdentifier(true);\n    const init = this.eat(types.eq) ? this.flowEnumMemberInit() : {\n      type: \"none\",\n      pos\n    };\n    return {\n      id,\n      init\n    };\n  }\n\n  flowEnumCheckExplicitTypeMismatch(pos, context, expectedType) {\n    const {\n      explicitType\n    } = context;\n\n    if (explicitType === null) {\n      return;\n    }\n\n    if (explicitType !== expectedType) {\n      this.flowEnumErrorInvalidMemberInitializer(pos, context);\n    }\n  }\n\n  flowEnumMembers({\n    enumName,\n    explicitType\n  }) {\n    const seenNames = new Set();\n    const members = {\n      booleanMembers: [],\n      numberMembers: [],\n      stringMembers: [],\n      defaultedMembers: []\n    };\n    let hasUnknownMembers = false;\n\n    while (!this.match(types.braceR)) {\n      if (this.eat(types.ellipsis)) {\n        hasUnknownMembers = true;\n        break;\n      }\n\n      const memberNode = this.startNode();\n      const {\n        id,\n        init\n      } = this.flowEnumMemberRaw();\n      const memberName = id.name;\n\n      if (memberName === \"\") {\n        continue;\n      }\n\n      if (/^[a-z]/.test(memberName)) {\n        this.flowEnumErrorInvalidMemberName(id.start, {\n          enumName,\n          memberName\n        });\n      }\n\n      if (seenNames.has(memberName)) {\n        this.flowEnumErrorDuplicateMemberName(id.start, {\n          enumName,\n          memberName\n        });\n      }\n\n      seenNames.add(memberName);\n      const context = {\n        enumName,\n        explicitType,\n        memberName\n      };\n      memberNode.id = id;\n\n      switch (init.type) {\n        case \"boolean\":\n          {\n            this.flowEnumCheckExplicitTypeMismatch(init.pos, context, \"boolean\");\n            memberNode.init = init.value;\n            members.booleanMembers.push(this.finishNode(memberNode, \"EnumBooleanMember\"));\n            break;\n          }\n\n        case \"number\":\n          {\n            this.flowEnumCheckExplicitTypeMismatch(init.pos, context, \"number\");\n            memberNode.init = init.value;\n            members.numberMembers.push(this.finishNode(memberNode, \"EnumNumberMember\"));\n            break;\n          }\n\n        case \"string\":\n          {\n            this.flowEnumCheckExplicitTypeMismatch(init.pos, context, \"string\");\n            memberNode.init = init.value;\n            members.stringMembers.push(this.finishNode(memberNode, \"EnumStringMember\"));\n            break;\n          }\n\n        case \"invalid\":\n          {\n            throw this.flowEnumErrorInvalidMemberInitializer(init.pos, context);\n          }\n\n        case \"none\":\n          {\n            switch (explicitType) {\n              case \"boolean\":\n                this.flowEnumErrorBooleanMemberNotInitialized(init.pos, context);\n                break;\n\n              case \"number\":\n                this.flowEnumErrorNumberMemberNotInitialized(init.pos, context);\n                break;\n\n              default:\n                members.defaultedMembers.push(this.finishNode(memberNode, \"EnumDefaultedMember\"));\n            }\n          }\n      }\n\n      if (!this.match(types.braceR)) {\n        this.expect(types.comma);\n      }\n    }\n\n    return {\n      members,\n      hasUnknownMembers\n    };\n  }\n\n  flowEnumStringMembers(initializedMembers, defaultedMembers, {\n    enumName\n  }) {\n    if (initializedMembers.length === 0) {\n      return defaultedMembers;\n    } else if (defaultedMembers.length === 0) {\n      return initializedMembers;\n    } else if (defaultedMembers.length > initializedMembers.length) {\n      for (const member of initializedMembers) {\n        this.flowEnumErrorStringMemberInconsistentlyInitailized(member.start, {\n          enumName\n        });\n      }\n\n      return defaultedMembers;\n    } else {\n      for (const member of defaultedMembers) {\n        this.flowEnumErrorStringMemberInconsistentlyInitailized(member.start, {\n          enumName\n        });\n      }\n\n      return initializedMembers;\n    }\n  }\n\n  flowEnumParseExplicitType({\n    enumName\n  }) {\n    if (this.eatContextual(\"of\")) {\n      if (!this.match(types.name)) {\n        throw this.flowEnumErrorInvalidExplicitType(this.state.start, {\n          enumName,\n          suppliedType: null\n        });\n      }\n\n      const {\n        value\n      } = this.state;\n      this.next();\n\n      if (value !== \"boolean\" && value !== \"number\" && value !== \"string\" && value !== \"symbol\") {\n        this.flowEnumErrorInvalidExplicitType(this.state.start, {\n          enumName,\n          suppliedType: value\n        });\n      }\n\n      return value;\n    }\n\n    return null;\n  }\n\n  flowEnumBody(node, {\n    enumName,\n    nameLoc\n  }) {\n    const explicitType = this.flowEnumParseExplicitType({\n      enumName\n    });\n    this.expect(types.braceL);\n    const {\n      members,\n      hasUnknownMembers\n    } = this.flowEnumMembers({\n      enumName,\n      explicitType\n    });\n    node.hasUnknownMembers = hasUnknownMembers;\n\n    switch (explicitType) {\n      case \"boolean\":\n        node.explicitType = true;\n        node.members = members.booleanMembers;\n        this.expect(types.braceR);\n        return this.finishNode(node, \"EnumBooleanBody\");\n\n      case \"number\":\n        node.explicitType = true;\n        node.members = members.numberMembers;\n        this.expect(types.braceR);\n        return this.finishNode(node, \"EnumNumberBody\");\n\n      case \"string\":\n        node.explicitType = true;\n        node.members = this.flowEnumStringMembers(members.stringMembers, members.defaultedMembers, {\n          enumName\n        });\n        this.expect(types.braceR);\n        return this.finishNode(node, \"EnumStringBody\");\n\n      case \"symbol\":\n        node.members = members.defaultedMembers;\n        this.expect(types.braceR);\n        return this.finishNode(node, \"EnumSymbolBody\");\n\n      default:\n        {\n          const empty = () => {\n            node.members = [];\n            this.expect(types.braceR);\n            return this.finishNode(node, \"EnumStringBody\");\n          };\n\n          node.explicitType = false;\n          const boolsLen = members.booleanMembers.length;\n          const numsLen = members.numberMembers.length;\n          const strsLen = members.stringMembers.length;\n          const defaultedLen = members.defaultedMembers.length;\n\n          if (!boolsLen && !numsLen && !strsLen && !defaultedLen) {\n            return empty();\n          } else if (!boolsLen && !numsLen) {\n            node.members = this.flowEnumStringMembers(members.stringMembers, members.defaultedMembers, {\n              enumName\n            });\n            this.expect(types.braceR);\n            return this.finishNode(node, \"EnumStringBody\");\n          } else if (!numsLen && !strsLen && boolsLen >= defaultedLen) {\n            for (const member of members.defaultedMembers) {\n              this.flowEnumErrorBooleanMemberNotInitialized(member.start, {\n                enumName,\n                memberName: member.id.name\n              });\n            }\n\n            node.members = members.booleanMembers;\n            this.expect(types.braceR);\n            return this.finishNode(node, \"EnumBooleanBody\");\n          } else if (!boolsLen && !strsLen && numsLen >= defaultedLen) {\n            for (const member of members.defaultedMembers) {\n              this.flowEnumErrorNumberMemberNotInitialized(member.start, {\n                enumName,\n                memberName: member.id.name\n              });\n            }\n\n            node.members = members.numberMembers;\n            this.expect(types.braceR);\n            return this.finishNode(node, \"EnumNumberBody\");\n          } else {\n            this.flowEnumErrorInconsistentMemberValues(nameLoc, {\n              enumName\n            });\n            return empty();\n          }\n        }\n    }\n  }\n\n  flowParseEnumDeclaration(node) {\n    const id = this.parseIdentifier();\n    node.id = id;\n    node.body = this.flowEnumBody(this.startNode(), {\n      enumName: id.name,\n      nameLoc: id.start\n    });\n    return this.finishNode(node, \"EnumDeclaration\");\n  }\n\n  updateContext(prevType) {\n    if (this.match(types.name) && this.state.value === \"of\" && prevType === types.name && this.input.slice(this.state.lastTokStart, this.state.lastTokEnd) === \"interface\") {\n      this.state.exprAllowed = false;\n    } else {\n      super.updateContext(prevType);\n    }\n  }\n\n  isLookaheadToken_lt() {\n    const next = this.nextTokenStart();\n\n    if (this.input.charCodeAt(next) === 60) {\n      const afterNext = this.input.charCodeAt(next + 1);\n      return afterNext !== 60 && afterNext !== 61;\n    }\n\n    return false;\n  }\n\n  maybeUnwrapTypeCastExpression(node) {\n    return node.type === \"TypeCastExpression\" ? node.expression : node;\n  }\n\n});\n\nconst entities = {\n  quot: \"\\u0022\",\n  amp: \"&\",\n  apos: \"\\u0027\",\n  lt: \"<\",\n  gt: \">\",\n  nbsp: \"\\u00A0\",\n  iexcl: \"\\u00A1\",\n  cent: \"\\u00A2\",\n  pound: \"\\u00A3\",\n  curren: \"\\u00A4\",\n  yen: \"\\u00A5\",\n  brvbar: \"\\u00A6\",\n  sect: \"\\u00A7\",\n  uml: \"\\u00A8\",\n  copy: \"\\u00A9\",\n  ordf: \"\\u00AA\",\n  laquo: \"\\u00AB\",\n  not: \"\\u00AC\",\n  shy: \"\\u00AD\",\n  reg: \"\\u00AE\",\n  macr: \"\\u00AF\",\n  deg: \"\\u00B0\",\n  plusmn: \"\\u00B1\",\n  sup2: \"\\u00B2\",\n  sup3: \"\\u00B3\",\n  acute: \"\\u00B4\",\n  micro: \"\\u00B5\",\n  para: \"\\u00B6\",\n  middot: \"\\u00B7\",\n  cedil: \"\\u00B8\",\n  sup1: \"\\u00B9\",\n  ordm: \"\\u00BA\",\n  raquo: \"\\u00BB\",\n  frac14: \"\\u00BC\",\n  frac12: \"\\u00BD\",\n  frac34: \"\\u00BE\",\n  iquest: \"\\u00BF\",\n  Agrave: \"\\u00C0\",\n  Aacute: \"\\u00C1\",\n  Acirc: \"\\u00C2\",\n  Atilde: \"\\u00C3\",\n  Auml: \"\\u00C4\",\n  Aring: \"\\u00C5\",\n  AElig: \"\\u00C6\",\n  Ccedil: \"\\u00C7\",\n  Egrave: \"\\u00C8\",\n  Eacute: \"\\u00C9\",\n  Ecirc: \"\\u00CA\",\n  Euml: \"\\u00CB\",\n  Igrave: \"\\u00CC\",\n  Iacute: \"\\u00CD\",\n  Icirc: \"\\u00CE\",\n  Iuml: \"\\u00CF\",\n  ETH: \"\\u00D0\",\n  Ntilde: \"\\u00D1\",\n  Ograve: \"\\u00D2\",\n  Oacute: \"\\u00D3\",\n  Ocirc: \"\\u00D4\",\n  Otilde: \"\\u00D5\",\n  Ouml: \"\\u00D6\",\n  times: \"\\u00D7\",\n  Oslash: \"\\u00D8\",\n  Ugrave: \"\\u00D9\",\n  Uacute: \"\\u00DA\",\n  Ucirc: \"\\u00DB\",\n  Uuml: \"\\u00DC\",\n  Yacute: \"\\u00DD\",\n  THORN: \"\\u00DE\",\n  szlig: \"\\u00DF\",\n  agrave: \"\\u00E0\",\n  aacute: \"\\u00E1\",\n  acirc: \"\\u00E2\",\n  atilde: \"\\u00E3\",\n  auml: \"\\u00E4\",\n  aring: \"\\u00E5\",\n  aelig: \"\\u00E6\",\n  ccedil: \"\\u00E7\",\n  egrave: \"\\u00E8\",\n  eacute: \"\\u00E9\",\n  ecirc: \"\\u00EA\",\n  euml: \"\\u00EB\",\n  igrave: \"\\u00EC\",\n  iacute: \"\\u00ED\",\n  icirc: \"\\u00EE\",\n  iuml: \"\\u00EF\",\n  eth: \"\\u00F0\",\n  ntilde: \"\\u00F1\",\n  ograve: \"\\u00F2\",\n  oacute: \"\\u00F3\",\n  ocirc: \"\\u00F4\",\n  otilde: \"\\u00F5\",\n  ouml: \"\\u00F6\",\n  divide: \"\\u00F7\",\n  oslash: \"\\u00F8\",\n  ugrave: \"\\u00F9\",\n  uacute: \"\\u00FA\",\n  ucirc: \"\\u00FB\",\n  uuml: \"\\u00FC\",\n  yacute: \"\\u00FD\",\n  thorn: \"\\u00FE\",\n  yuml: \"\\u00FF\",\n  OElig: \"\\u0152\",\n  oelig: \"\\u0153\",\n  Scaron: \"\\u0160\",\n  scaron: \"\\u0161\",\n  Yuml: \"\\u0178\",\n  fnof: \"\\u0192\",\n  circ: \"\\u02C6\",\n  tilde: \"\\u02DC\",\n  Alpha: \"\\u0391\",\n  Beta: \"\\u0392\",\n  Gamma: \"\\u0393\",\n  Delta: \"\\u0394\",\n  Epsilon: \"\\u0395\",\n  Zeta: \"\\u0396\",\n  Eta: \"\\u0397\",\n  Theta: \"\\u0398\",\n  Iota: \"\\u0399\",\n  Kappa: \"\\u039A\",\n  Lambda: \"\\u039B\",\n  Mu: \"\\u039C\",\n  Nu: \"\\u039D\",\n  Xi: \"\\u039E\",\n  Omicron: \"\\u039F\",\n  Pi: \"\\u03A0\",\n  Rho: \"\\u03A1\",\n  Sigma: \"\\u03A3\",\n  Tau: \"\\u03A4\",\n  Upsilon: \"\\u03A5\",\n  Phi: \"\\u03A6\",\n  Chi: \"\\u03A7\",\n  Psi: \"\\u03A8\",\n  Omega: \"\\u03A9\",\n  alpha: \"\\u03B1\",\n  beta: \"\\u03B2\",\n  gamma: \"\\u03B3\",\n  delta: \"\\u03B4\",\n  epsilon: \"\\u03B5\",\n  zeta: \"\\u03B6\",\n  eta: \"\\u03B7\",\n  theta: \"\\u03B8\",\n  iota: \"\\u03B9\",\n  kappa: \"\\u03BA\",\n  lambda: \"\\u03BB\",\n  mu: \"\\u03BC\",\n  nu: \"\\u03BD\",\n  xi: \"\\u03BE\",\n  omicron: \"\\u03BF\",\n  pi: \"\\u03C0\",\n  rho: \"\\u03C1\",\n  sigmaf: \"\\u03C2\",\n  sigma: \"\\u03C3\",\n  tau: \"\\u03C4\",\n  upsilon: \"\\u03C5\",\n  phi: \"\\u03C6\",\n  chi: \"\\u03C7\",\n  psi: \"\\u03C8\",\n  omega: \"\\u03C9\",\n  thetasym: \"\\u03D1\",\n  upsih: \"\\u03D2\",\n  piv: \"\\u03D6\",\n  ensp: \"\\u2002\",\n  emsp: \"\\u2003\",\n  thinsp: \"\\u2009\",\n  zwnj: \"\\u200C\",\n  zwj: \"\\u200D\",\n  lrm: \"\\u200E\",\n  rlm: \"\\u200F\",\n  ndash: \"\\u2013\",\n  mdash: \"\\u2014\",\n  lsquo: \"\\u2018\",\n  rsquo: \"\\u2019\",\n  sbquo: \"\\u201A\",\n  ldquo: \"\\u201C\",\n  rdquo: \"\\u201D\",\n  bdquo: \"\\u201E\",\n  dagger: \"\\u2020\",\n  Dagger: \"\\u2021\",\n  bull: \"\\u2022\",\n  hellip: \"\\u2026\",\n  permil: \"\\u2030\",\n  prime: \"\\u2032\",\n  Prime: \"\\u2033\",\n  lsaquo: \"\\u2039\",\n  rsaquo: \"\\u203A\",\n  oline: \"\\u203E\",\n  frasl: \"\\u2044\",\n  euro: \"\\u20AC\",\n  image: \"\\u2111\",\n  weierp: \"\\u2118\",\n  real: \"\\u211C\",\n  trade: \"\\u2122\",\n  alefsym: \"\\u2135\",\n  larr: \"\\u2190\",\n  uarr: \"\\u2191\",\n  rarr: \"\\u2192\",\n  darr: \"\\u2193\",\n  harr: \"\\u2194\",\n  crarr: \"\\u21B5\",\n  lArr: \"\\u21D0\",\n  uArr: \"\\u21D1\",\n  rArr: \"\\u21D2\",\n  dArr: \"\\u21D3\",\n  hArr: \"\\u21D4\",\n  forall: \"\\u2200\",\n  part: \"\\u2202\",\n  exist: \"\\u2203\",\n  empty: \"\\u2205\",\n  nabla: \"\\u2207\",\n  isin: \"\\u2208\",\n  notin: \"\\u2209\",\n  ni: \"\\u220B\",\n  prod: \"\\u220F\",\n  sum: \"\\u2211\",\n  minus: \"\\u2212\",\n  lowast: \"\\u2217\",\n  radic: \"\\u221A\",\n  prop: \"\\u221D\",\n  infin: \"\\u221E\",\n  ang: \"\\u2220\",\n  and: \"\\u2227\",\n  or: \"\\u2228\",\n  cap: \"\\u2229\",\n  cup: \"\\u222A\",\n  int: \"\\u222B\",\n  there4: \"\\u2234\",\n  sim: \"\\u223C\",\n  cong: \"\\u2245\",\n  asymp: \"\\u2248\",\n  ne: \"\\u2260\",\n  equiv: \"\\u2261\",\n  le: \"\\u2264\",\n  ge: \"\\u2265\",\n  sub: \"\\u2282\",\n  sup: \"\\u2283\",\n  nsub: \"\\u2284\",\n  sube: \"\\u2286\",\n  supe: \"\\u2287\",\n  oplus: \"\\u2295\",\n  otimes: \"\\u2297\",\n  perp: \"\\u22A5\",\n  sdot: \"\\u22C5\",\n  lceil: \"\\u2308\",\n  rceil: \"\\u2309\",\n  lfloor: \"\\u230A\",\n  rfloor: \"\\u230B\",\n  lang: \"\\u2329\",\n  rang: \"\\u232A\",\n  loz: \"\\u25CA\",\n  spades: \"\\u2660\",\n  clubs: \"\\u2663\",\n  hearts: \"\\u2665\",\n  diams: \"\\u2666\"\n};\n\nconst HEX_NUMBER = /^[\\da-fA-F]+$/;\nconst DECIMAL_NUMBER = /^\\d+$/;\nconst JsxErrors = makeErrorTemplates({\n  AttributeIsEmpty: \"JSX attributes must only be assigned a non-empty expression.\",\n  MissingClosingTagElement: \"Expected corresponding JSX closing tag for <%0>.\",\n  MissingClosingTagFragment: \"Expected corresponding JSX closing tag for <>.\",\n  UnexpectedSequenceExpression: \"Sequence expressions cannot be directly nested inside JSX. Did you mean to wrap it in parentheses (...)?\",\n  UnsupportedJsxValue: \"JSX value should be either an expression or a quoted JSX text.\",\n  UnterminatedJsxContent: \"Unterminated JSX contents.\",\n  UnwrappedAdjacentJSXElements: \"Adjacent JSX elements must be wrapped in an enclosing tag. Did you want a JSX fragment <>...</>?\"\n}, ErrorCodes.SyntaxError);\ntypes$1.j_oTag = new TokContext(\"<tag\", false);\ntypes$1.j_cTag = new TokContext(\"</tag\", false);\ntypes$1.j_expr = new TokContext(\"<tag>...</tag>\", true, true);\ntypes.jsxName = new TokenType(\"jsxName\");\ntypes.jsxText = new TokenType(\"jsxText\", {\n  beforeExpr: true\n});\ntypes.jsxTagStart = new TokenType(\"jsxTagStart\", {\n  startsExpr: true\n});\ntypes.jsxTagEnd = new TokenType(\"jsxTagEnd\");\n\ntypes.jsxTagStart.updateContext = function () {\n  this.state.context.push(types$1.j_expr);\n  this.state.context.push(types$1.j_oTag);\n  this.state.exprAllowed = false;\n};\n\ntypes.jsxTagEnd.updateContext = function (prevType) {\n  const out = this.state.context.pop();\n\n  if (out === types$1.j_oTag && prevType === types.slash || out === types$1.j_cTag) {\n    this.state.context.pop();\n    this.state.exprAllowed = this.curContext() === types$1.j_expr;\n  } else {\n    this.state.exprAllowed = true;\n  }\n};\n\nfunction isFragment(object) {\n  return object ? object.type === \"JSXOpeningFragment\" || object.type === \"JSXClosingFragment\" : false;\n}\n\nfunction getQualifiedJSXName(object) {\n  if (object.type === \"JSXIdentifier\") {\n    return object.name;\n  }\n\n  if (object.type === \"JSXNamespacedName\") {\n    return object.namespace.name + \":\" + object.name.name;\n  }\n\n  if (object.type === \"JSXMemberExpression\") {\n    return getQualifiedJSXName(object.object) + \".\" + getQualifiedJSXName(object.property);\n  }\n\n  throw new Error(\"Node had unexpected type: \" + object.type);\n}\n\nvar jsx = (superClass => class extends superClass {\n  jsxReadToken() {\n    let out = \"\";\n    let chunkStart = this.state.pos;\n\n    for (;;) {\n      if (this.state.pos >= this.length) {\n        throw this.raise(this.state.start, JsxErrors.UnterminatedJsxContent);\n      }\n\n      const ch = this.input.charCodeAt(this.state.pos);\n\n      switch (ch) {\n        case 60:\n        case 123:\n          if (this.state.pos === this.state.start) {\n            if (ch === 60 && this.state.exprAllowed) {\n              ++this.state.pos;\n              return this.finishToken(types.jsxTagStart);\n            }\n\n            return super.getTokenFromCode(ch);\n          }\n\n          out += this.input.slice(chunkStart, this.state.pos);\n          return this.finishToken(types.jsxText, out);\n\n        case 38:\n          out += this.input.slice(chunkStart, this.state.pos);\n          out += this.jsxReadEntity();\n          chunkStart = this.state.pos;\n          break;\n\n        case 62:\n        case 125:\n\n        default:\n          if (isNewLine(ch)) {\n            out += this.input.slice(chunkStart, this.state.pos);\n            out += this.jsxReadNewLine(true);\n            chunkStart = this.state.pos;\n          } else {\n            ++this.state.pos;\n          }\n\n      }\n    }\n  }\n\n  jsxReadNewLine(normalizeCRLF) {\n    const ch = this.input.charCodeAt(this.state.pos);\n    let out;\n    ++this.state.pos;\n\n    if (ch === 13 && this.input.charCodeAt(this.state.pos) === 10) {\n      ++this.state.pos;\n      out = normalizeCRLF ? \"\\n\" : \"\\r\\n\";\n    } else {\n      out = String.fromCharCode(ch);\n    }\n\n    ++this.state.curLine;\n    this.state.lineStart = this.state.pos;\n    return out;\n  }\n\n  jsxReadString(quote) {\n    let out = \"\";\n    let chunkStart = ++this.state.pos;\n\n    for (;;) {\n      if (this.state.pos >= this.length) {\n        throw this.raise(this.state.start, ErrorMessages.UnterminatedString);\n      }\n\n      const ch = this.input.charCodeAt(this.state.pos);\n      if (ch === quote) break;\n\n      if (ch === 38) {\n        out += this.input.slice(chunkStart, this.state.pos);\n        out += this.jsxReadEntity();\n        chunkStart = this.state.pos;\n      } else if (isNewLine(ch)) {\n        out += this.input.slice(chunkStart, this.state.pos);\n        out += this.jsxReadNewLine(false);\n        chunkStart = this.state.pos;\n      } else {\n        ++this.state.pos;\n      }\n    }\n\n    out += this.input.slice(chunkStart, this.state.pos++);\n    return this.finishToken(types.string, out);\n  }\n\n  jsxReadEntity() {\n    let str = \"\";\n    let count = 0;\n    let entity;\n    let ch = this.input[this.state.pos];\n    const startPos = ++this.state.pos;\n\n    while (this.state.pos < this.length && count++ < 10) {\n      ch = this.input[this.state.pos++];\n\n      if (ch === \";\") {\n        if (str[0] === \"#\") {\n          if (str[1] === \"x\") {\n            str = str.substr(2);\n\n            if (HEX_NUMBER.test(str)) {\n              entity = String.fromCodePoint(parseInt(str, 16));\n            }\n          } else {\n            str = str.substr(1);\n\n            if (DECIMAL_NUMBER.test(str)) {\n              entity = String.fromCodePoint(parseInt(str, 10));\n            }\n          }\n        } else {\n          entity = entities[str];\n        }\n\n        break;\n      }\n\n      str += ch;\n    }\n\n    if (!entity) {\n      this.state.pos = startPos;\n      return \"&\";\n    }\n\n    return entity;\n  }\n\n  jsxReadWord() {\n    let ch;\n    const start = this.state.pos;\n\n    do {\n      ch = this.input.charCodeAt(++this.state.pos);\n    } while (isIdentifierChar(ch) || ch === 45);\n\n    return this.finishToken(types.jsxName, this.input.slice(start, this.state.pos));\n  }\n\n  jsxParseIdentifier() {\n    const node = this.startNode();\n\n    if (this.match(types.jsxName)) {\n      node.name = this.state.value;\n    } else if (this.state.type.keyword) {\n      node.name = this.state.type.keyword;\n    } else {\n      this.unexpected();\n    }\n\n    this.next();\n    return this.finishNode(node, \"JSXIdentifier\");\n  }\n\n  jsxParseNamespacedName() {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const name = this.jsxParseIdentifier();\n    if (!this.eat(types.colon)) return name;\n    const node = this.startNodeAt(startPos, startLoc);\n    node.namespace = name;\n    node.name = this.jsxParseIdentifier();\n    return this.finishNode(node, \"JSXNamespacedName\");\n  }\n\n  jsxParseElementName() {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    let node = this.jsxParseNamespacedName();\n\n    if (node.type === \"JSXNamespacedName\") {\n      return node;\n    }\n\n    while (this.eat(types.dot)) {\n      const newNode = this.startNodeAt(startPos, startLoc);\n      newNode.object = node;\n      newNode.property = this.jsxParseIdentifier();\n      node = this.finishNode(newNode, \"JSXMemberExpression\");\n    }\n\n    return node;\n  }\n\n  jsxParseAttributeValue() {\n    let node;\n\n    switch (this.state.type) {\n      case types.braceL:\n        node = this.startNode();\n        this.next();\n        node = this.jsxParseExpressionContainer(node);\n\n        if (node.expression.type === \"JSXEmptyExpression\") {\n          this.raise(node.start, JsxErrors.AttributeIsEmpty);\n        }\n\n        return node;\n\n      case types.jsxTagStart:\n      case types.string:\n        return this.parseExprAtom();\n\n      default:\n        throw this.raise(this.state.start, JsxErrors.UnsupportedJsxValue);\n    }\n  }\n\n  jsxParseEmptyExpression() {\n    const node = this.startNodeAt(this.state.lastTokEnd, this.state.lastTokEndLoc);\n    return this.finishNodeAt(node, \"JSXEmptyExpression\", this.state.start, this.state.startLoc);\n  }\n\n  jsxParseSpreadChild(node) {\n    this.next();\n    node.expression = this.parseExpression();\n    this.expect(types.braceR);\n    return this.finishNode(node, \"JSXSpreadChild\");\n  }\n\n  jsxParseExpressionContainer(node) {\n    if (this.match(types.braceR)) {\n      node.expression = this.jsxParseEmptyExpression();\n    } else {\n      const expression = this.parseExpression();\n      node.expression = expression;\n    }\n\n    this.expect(types.braceR);\n    return this.finishNode(node, \"JSXExpressionContainer\");\n  }\n\n  jsxParseAttribute() {\n    const node = this.startNode();\n\n    if (this.eat(types.braceL)) {\n      this.expect(types.ellipsis);\n      node.argument = this.parseMaybeAssignAllowIn();\n      this.expect(types.braceR);\n      return this.finishNode(node, \"JSXSpreadAttribute\");\n    }\n\n    node.name = this.jsxParseNamespacedName();\n    node.value = this.eat(types.eq) ? this.jsxParseAttributeValue() : null;\n    return this.finishNode(node, \"JSXAttribute\");\n  }\n\n  jsxParseOpeningElementAt(startPos, startLoc) {\n    const node = this.startNodeAt(startPos, startLoc);\n\n    if (this.match(types.jsxTagEnd)) {\n      this.expect(types.jsxTagEnd);\n      return this.finishNode(node, \"JSXOpeningFragment\");\n    }\n\n    node.name = this.jsxParseElementName();\n    return this.jsxParseOpeningElementAfterName(node);\n  }\n\n  jsxParseOpeningElementAfterName(node) {\n    const attributes = [];\n\n    while (!this.match(types.slash) && !this.match(types.jsxTagEnd)) {\n      attributes.push(this.jsxParseAttribute());\n    }\n\n    node.attributes = attributes;\n    node.selfClosing = this.eat(types.slash);\n    this.expect(types.jsxTagEnd);\n    return this.finishNode(node, \"JSXOpeningElement\");\n  }\n\n  jsxParseClosingElementAt(startPos, startLoc) {\n    const node = this.startNodeAt(startPos, startLoc);\n\n    if (this.match(types.jsxTagEnd)) {\n      this.expect(types.jsxTagEnd);\n      return this.finishNode(node, \"JSXClosingFragment\");\n    }\n\n    node.name = this.jsxParseElementName();\n    this.expect(types.jsxTagEnd);\n    return this.finishNode(node, \"JSXClosingElement\");\n  }\n\n  jsxParseElementAt(startPos, startLoc) {\n    const node = this.startNodeAt(startPos, startLoc);\n    const children = [];\n    const openingElement = this.jsxParseOpeningElementAt(startPos, startLoc);\n    let closingElement = null;\n\n    if (!openingElement.selfClosing) {\n      contents: for (;;) {\n        switch (this.state.type) {\n          case types.jsxTagStart:\n            startPos = this.state.start;\n            startLoc = this.state.startLoc;\n            this.next();\n\n            if (this.eat(types.slash)) {\n              closingElement = this.jsxParseClosingElementAt(startPos, startLoc);\n              break contents;\n            }\n\n            children.push(this.jsxParseElementAt(startPos, startLoc));\n            break;\n\n          case types.jsxText:\n            children.push(this.parseExprAtom());\n            break;\n\n          case types.braceL:\n            {\n              const node = this.startNode();\n              this.next();\n\n              if (this.match(types.ellipsis)) {\n                children.push(this.jsxParseSpreadChild(node));\n              } else {\n                children.push(this.jsxParseExpressionContainer(node));\n              }\n\n              break;\n            }\n\n          default:\n            throw this.unexpected();\n        }\n      }\n\n      if (isFragment(openingElement) && !isFragment(closingElement)) {\n        this.raise(closingElement.start, JsxErrors.MissingClosingTagFragment);\n      } else if (!isFragment(openingElement) && isFragment(closingElement)) {\n        this.raise(closingElement.start, JsxErrors.MissingClosingTagElement, getQualifiedJSXName(openingElement.name));\n      } else if (!isFragment(openingElement) && !isFragment(closingElement)) {\n        if (getQualifiedJSXName(closingElement.name) !== getQualifiedJSXName(openingElement.name)) {\n          this.raise(closingElement.start, JsxErrors.MissingClosingTagElement, getQualifiedJSXName(openingElement.name));\n        }\n      }\n    }\n\n    if (isFragment(openingElement)) {\n      node.openingFragment = openingElement;\n      node.closingFragment = closingElement;\n    } else {\n      node.openingElement = openingElement;\n      node.closingElement = closingElement;\n    }\n\n    node.children = children;\n\n    if (this.isRelational(\"<\")) {\n      throw this.raise(this.state.start, JsxErrors.UnwrappedAdjacentJSXElements);\n    }\n\n    return isFragment(openingElement) ? this.finishNode(node, \"JSXFragment\") : this.finishNode(node, \"JSXElement\");\n  }\n\n  jsxParseElement() {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    this.next();\n    return this.jsxParseElementAt(startPos, startLoc);\n  }\n\n  parseExprAtom(refExpressionErrors) {\n    if (this.match(types.jsxText)) {\n      return this.parseLiteral(this.state.value, \"JSXText\");\n    } else if (this.match(types.jsxTagStart)) {\n      return this.jsxParseElement();\n    } else if (this.isRelational(\"<\") && this.input.charCodeAt(this.state.pos) !== 33) {\n      this.finishToken(types.jsxTagStart);\n      return this.jsxParseElement();\n    } else {\n      return super.parseExprAtom(refExpressionErrors);\n    }\n  }\n\n  getTokenFromCode(code) {\n    if (this.state.inPropertyName) return super.getTokenFromCode(code);\n    const context = this.curContext();\n\n    if (context === types$1.j_expr) {\n      return this.jsxReadToken();\n    }\n\n    if (context === types$1.j_oTag || context === types$1.j_cTag) {\n      if (isIdentifierStart(code)) {\n        return this.jsxReadWord();\n      }\n\n      if (code === 62) {\n        ++this.state.pos;\n        return this.finishToken(types.jsxTagEnd);\n      }\n\n      if ((code === 34 || code === 39) && context === types$1.j_oTag) {\n        return this.jsxReadString(code);\n      }\n    }\n\n    if (code === 60 && this.state.exprAllowed && this.input.charCodeAt(this.state.pos + 1) !== 33) {\n      ++this.state.pos;\n      return this.finishToken(types.jsxTagStart);\n    }\n\n    return super.getTokenFromCode(code);\n  }\n\n  updateContext(prevType) {\n    if (this.match(types.braceL)) {\n      const curContext = this.curContext();\n\n      if (curContext === types$1.j_oTag) {\n        this.state.context.push(types$1.braceExpression);\n      } else if (curContext === types$1.j_expr) {\n        this.state.context.push(types$1.templateQuasi);\n      } else {\n        super.updateContext(prevType);\n      }\n\n      this.state.exprAllowed = true;\n    } else if (this.match(types.slash) && prevType === types.jsxTagStart) {\n      this.state.context.length -= 2;\n      this.state.context.push(types$1.j_cTag);\n      this.state.exprAllowed = false;\n    } else {\n      return super.updateContext(prevType);\n    }\n  }\n\n});\n\nclass TypeScriptScope extends Scope {\n  constructor(...args) {\n    super(...args);\n    this.types = [];\n    this.enums = [];\n    this.constEnums = [];\n    this.classes = [];\n    this.exportOnlyBindings = [];\n  }\n\n}\n\nclass TypeScriptScopeHandler extends ScopeHandler {\n  createScope(flags) {\n    return new TypeScriptScope(flags);\n  }\n\n  declareName(name, bindingType, pos) {\n    const scope = this.currentScope();\n\n    if (bindingType & BIND_FLAGS_TS_EXPORT_ONLY) {\n      this.maybeExportDefined(scope, name);\n      scope.exportOnlyBindings.push(name);\n      return;\n    }\n\n    super.declareName(...arguments);\n\n    if (bindingType & BIND_KIND_TYPE) {\n      if (!(bindingType & BIND_KIND_VALUE)) {\n        this.checkRedeclarationInScope(scope, name, bindingType, pos);\n        this.maybeExportDefined(scope, name);\n      }\n\n      scope.types.push(name);\n    }\n\n    if (bindingType & BIND_FLAGS_TS_ENUM) scope.enums.push(name);\n    if (bindingType & BIND_FLAGS_TS_CONST_ENUM) scope.constEnums.push(name);\n    if (bindingType & BIND_FLAGS_CLASS) scope.classes.push(name);\n  }\n\n  isRedeclaredInScope(scope, name, bindingType) {\n    if (scope.enums.indexOf(name) > -1) {\n      if (bindingType & BIND_FLAGS_TS_ENUM) {\n        const isConst = !!(bindingType & BIND_FLAGS_TS_CONST_ENUM);\n        const wasConst = scope.constEnums.indexOf(name) > -1;\n        return isConst !== wasConst;\n      }\n\n      return true;\n    }\n\n    if (bindingType & BIND_FLAGS_CLASS && scope.classes.indexOf(name) > -1) {\n      if (scope.lexical.indexOf(name) > -1) {\n        return !!(bindingType & BIND_KIND_VALUE);\n      } else {\n        return false;\n      }\n    }\n\n    if (bindingType & BIND_KIND_TYPE && scope.types.indexOf(name) > -1) {\n      return true;\n    }\n\n    return super.isRedeclaredInScope(...arguments);\n  }\n\n  checkLocalExport(id) {\n    if (this.scopeStack[0].types.indexOf(id.name) === -1 && this.scopeStack[0].exportOnlyBindings.indexOf(id.name) === -1) {\n      super.checkLocalExport(id);\n    }\n  }\n\n}\n\nconst PARAM = 0b0000,\n      PARAM_YIELD = 0b0001,\n      PARAM_AWAIT = 0b0010,\n      PARAM_RETURN = 0b0100,\n      PARAM_IN = 0b1000;\nclass ProductionParameterHandler {\n  constructor() {\n    this.stacks = [];\n  }\n\n  enter(flags) {\n    this.stacks.push(flags);\n  }\n\n  exit() {\n    this.stacks.pop();\n  }\n\n  currentFlags() {\n    return this.stacks[this.stacks.length - 1];\n  }\n\n  get hasAwait() {\n    return (this.currentFlags() & PARAM_AWAIT) > 0;\n  }\n\n  get hasYield() {\n    return (this.currentFlags() & PARAM_YIELD) > 0;\n  }\n\n  get hasReturn() {\n    return (this.currentFlags() & PARAM_RETURN) > 0;\n  }\n\n  get hasIn() {\n    return (this.currentFlags() & PARAM_IN) > 0;\n  }\n\n}\nfunction functionFlags(isAsync, isGenerator) {\n  return (isAsync ? PARAM_AWAIT : 0) | (isGenerator ? PARAM_YIELD : 0);\n}\n\nfunction nonNull(x) {\n  if (x == null) {\n    throw new Error(`Unexpected ${x} value.`);\n  }\n\n  return x;\n}\n\nfunction assert(x) {\n  if (!x) {\n    throw new Error(\"Assert fail\");\n  }\n}\n\nconst TSErrors = makeErrorTemplates({\n  AbstractMethodHasImplementation: \"Method '%0' cannot have an implementation because it is marked abstract.\",\n  AccesorCannotDeclareThisParameter: \"'get' and 'set' accessors cannot declare 'this' parameters.\",\n  AccesorCannotHaveTypeParameters: \"An accessor cannot have type parameters.\",\n  ClassMethodHasDeclare: \"Class methods cannot have the 'declare' modifier.\",\n  ClassMethodHasReadonly: \"Class methods cannot have the 'readonly' modifier.\",\n  ConstructorHasTypeParameters: \"Type parameters cannot appear on a constructor declaration.\",\n  DeclareAccessor: \"'declare' is not allowed in %0ters.\",\n  DeclareClassFieldHasInitializer: \"Initializers are not allowed in ambient contexts.\",\n  DeclareFunctionHasImplementation: \"An implementation cannot be declared in ambient contexts.\",\n  DuplicateAccessibilityModifier: \"Accessibility modifier already seen.\",\n  DuplicateModifier: \"Duplicate modifier: '%0'.\",\n  EmptyHeritageClauseType: \"'%0' list cannot be empty.\",\n  EmptyTypeArguments: \"Type argument list cannot be empty.\",\n  EmptyTypeParameters: \"Type parameter list cannot be empty.\",\n  ExpectedAmbientAfterExportDeclare: \"'export declare' must be followed by an ambient declaration.\",\n  ImportAliasHasImportType: \"An import alias can not use 'import type'.\",\n  IncompatibleModifiers: \"'%0' modifier cannot be used with '%1' modifier.\",\n  IndexSignatureHasAbstract: \"Index signatures cannot have the 'abstract' modifier.\",\n  IndexSignatureHasAccessibility: \"Index signatures cannot have an accessibility modifier ('%0').\",\n  IndexSignatureHasDeclare: \"Index signatures cannot have the 'declare' modifier.\",\n  IndexSignatureHasOverride: \"'override' modifier cannot appear on an index signature.\",\n  IndexSignatureHasStatic: \"Index signatures cannot have the 'static' modifier.\",\n  InvalidModifierOnTypeMember: \"'%0' modifier cannot appear on a type member.\",\n  InvalidModifiersOrder: \"'%0' modifier must precede '%1' modifier.\",\n  InvalidTupleMemberLabel: \"Tuple members must be labeled with a simple identifier.\",\n  MixedLabeledAndUnlabeledElements: \"Tuple members must all have names or all not have names.\",\n  NonAbstractClassHasAbstractMethod: \"Abstract methods can only appear within an abstract class.\",\n  NonClassMethodPropertyHasAbstractModifer: \"'abstract' modifier can only appear on a class, method, or property declaration.\",\n  OptionalTypeBeforeRequired: \"A required element cannot follow an optional element.\",\n  OverrideNotInSubClass: \"This member cannot have an 'override' modifier because its containing class does not extend another class.\",\n  PatternIsOptional: \"A binding pattern parameter cannot be optional in an implementation signature.\",\n  PrivateElementHasAbstract: \"Private elements cannot have the 'abstract' modifier.\",\n  PrivateElementHasAccessibility: \"Private elements cannot have an accessibility modifier ('%0').\",\n  ReadonlyForMethodSignature: \"'readonly' modifier can only appear on a property declaration or index signature.\",\n  SetAccesorCannotHaveOptionalParameter: \"A 'set' accessor cannot have an optional parameter.\",\n  SetAccesorCannotHaveRestParameter: \"A 'set' accessor cannot have rest parameter.\",\n  SetAccesorCannotHaveReturnType: \"A 'set' accessor cannot have a return type annotation.\",\n  StaticBlockCannotHaveModifier: \"Static class blocks cannot have any modifier.\",\n  TypeAnnotationAfterAssign: \"Type annotations must come before default assignments, e.g. instead of `age = 25: number` use `age: number = 25`.\",\n  TypeImportCannotSpecifyDefaultAndNamed: \"A type-only import can specify a default import or named bindings, but not both.\",\n  UnexpectedParameterModifier: \"A parameter property is only allowed in a constructor implementation.\",\n  UnexpectedReadonly: \"'readonly' type modifier is only permitted on array and tuple literal types.\",\n  UnexpectedTypeAnnotation: \"Did not expect a type annotation here.\",\n  UnexpectedTypeCastInParameter: \"Unexpected type cast in parameter position.\",\n  UnsupportedImportTypeArgument: \"Argument in a type import must be a string literal.\",\n  UnsupportedParameterPropertyKind: \"A parameter property may not be declared using a binding pattern.\",\n  UnsupportedSignatureParameterKind: \"Name in a signature must be an Identifier, ObjectPattern or ArrayPattern, instead got %0.\"\n}, ErrorCodes.SyntaxError);\n\nfunction keywordTypeFromName(value) {\n  switch (value) {\n    case \"any\":\n      return \"TSAnyKeyword\";\n\n    case \"boolean\":\n      return \"TSBooleanKeyword\";\n\n    case \"bigint\":\n      return \"TSBigIntKeyword\";\n\n    case \"never\":\n      return \"TSNeverKeyword\";\n\n    case \"number\":\n      return \"TSNumberKeyword\";\n\n    case \"object\":\n      return \"TSObjectKeyword\";\n\n    case \"string\":\n      return \"TSStringKeyword\";\n\n    case \"symbol\":\n      return \"TSSymbolKeyword\";\n\n    case \"undefined\":\n      return \"TSUndefinedKeyword\";\n\n    case \"unknown\":\n      return \"TSUnknownKeyword\";\n\n    default:\n      return undefined;\n  }\n}\n\nfunction tsIsAccessModifier(modifier) {\n  return modifier === \"private\" || modifier === \"public\" || modifier === \"protected\";\n}\n\nvar typescript = (superClass => class extends superClass {\n  getScopeHandler() {\n    return TypeScriptScopeHandler;\n  }\n\n  tsIsIdentifier() {\n    return this.match(types.name);\n  }\n\n  tsTokenCanFollowModifier() {\n    return (this.match(types.bracketL) || this.match(types.braceL) || this.match(types.star) || this.match(types.ellipsis) || this.match(types.hash) || this.isLiteralPropertyName()) && !this.hasPrecedingLineBreak();\n  }\n\n  tsNextTokenCanFollowModifier() {\n    this.next();\n    return this.tsTokenCanFollowModifier();\n  }\n\n  tsParseModifier(allowedModifiers) {\n    if (!this.match(types.name)) {\n      return undefined;\n    }\n\n    const modifier = this.state.value;\n\n    if (allowedModifiers.indexOf(modifier) !== -1 && this.tsTryParse(this.tsNextTokenCanFollowModifier.bind(this))) {\n      return modifier;\n    }\n\n    return undefined;\n  }\n\n  tsParseModifiers(modified, allowedModifiers, disallowedModifiers, errorTemplate) {\n    const enforceOrder = (pos, modifier, before, after) => {\n      if (modifier === before && modified[after]) {\n        this.raise(pos, TSErrors.InvalidModifiersOrder, before, after);\n      }\n    };\n\n    const incompatible = (pos, modifier, mod1, mod2) => {\n      if (modified[mod1] && modifier === mod2 || modified[mod2] && modifier === mod1) {\n        this.raise(pos, TSErrors.IncompatibleModifiers, mod1, mod2);\n      }\n    };\n\n    for (;;) {\n      const startPos = this.state.start;\n      const modifier = this.tsParseModifier(allowedModifiers.concat(disallowedModifiers != null ? disallowedModifiers : []));\n      if (!modifier) break;\n\n      if (tsIsAccessModifier(modifier)) {\n        if (modified.accessibility) {\n          this.raise(startPos, TSErrors.DuplicateAccessibilityModifier);\n        } else {\n          enforceOrder(startPos, modifier, modifier, \"override\");\n          enforceOrder(startPos, modifier, modifier, \"static\");\n          modified.accessibility = modifier;\n        }\n      } else {\n        if (Object.hasOwnProperty.call(modified, modifier)) {\n          this.raise(startPos, TSErrors.DuplicateModifier, modifier);\n        } else {\n          enforceOrder(startPos, modifier, \"static\", \"readonly\");\n          enforceOrder(startPos, modifier, \"static\", \"override\");\n          enforceOrder(startPos, modifier, \"override\", \"readonly\");\n          enforceOrder(startPos, modifier, \"abstract\", \"override\");\n          incompatible(startPos, modifier, \"declare\", \"override\");\n          incompatible(startPos, modifier, \"static\", \"abstract\");\n        }\n\n        modified[modifier] = true;\n      }\n\n      if (disallowedModifiers != null && disallowedModifiers.includes(modifier)) {\n        this.raise(startPos, errorTemplate, modifier);\n      }\n    }\n  }\n\n  tsIsListTerminator(kind) {\n    switch (kind) {\n      case \"EnumMembers\":\n      case \"TypeMembers\":\n        return this.match(types.braceR);\n\n      case \"HeritageClauseElement\":\n        return this.match(types.braceL);\n\n      case \"TupleElementTypes\":\n        return this.match(types.bracketR);\n\n      case \"TypeParametersOrArguments\":\n        return this.isRelational(\">\");\n    }\n\n    throw new Error(\"Unreachable\");\n  }\n\n  tsParseList(kind, parseElement) {\n    const result = [];\n\n    while (!this.tsIsListTerminator(kind)) {\n      result.push(parseElement());\n    }\n\n    return result;\n  }\n\n  tsParseDelimitedList(kind, parseElement) {\n    return nonNull(this.tsParseDelimitedListWorker(kind, parseElement, true));\n  }\n\n  tsParseDelimitedListWorker(kind, parseElement, expectSuccess) {\n    const result = [];\n\n    for (;;) {\n      if (this.tsIsListTerminator(kind)) {\n        break;\n      }\n\n      const element = parseElement();\n\n      if (element == null) {\n        return undefined;\n      }\n\n      result.push(element);\n\n      if (this.eat(types.comma)) {\n        continue;\n      }\n\n      if (this.tsIsListTerminator(kind)) {\n        break;\n      }\n\n      if (expectSuccess) {\n        this.expect(types.comma);\n      }\n\n      return undefined;\n    }\n\n    return result;\n  }\n\n  tsParseBracketedList(kind, parseElement, bracket, skipFirstToken) {\n    if (!skipFirstToken) {\n      if (bracket) {\n        this.expect(types.bracketL);\n      } else {\n        this.expectRelational(\"<\");\n      }\n    }\n\n    const result = this.tsParseDelimitedList(kind, parseElement);\n\n    if (bracket) {\n      this.expect(types.bracketR);\n    } else {\n      this.expectRelational(\">\");\n    }\n\n    return result;\n  }\n\n  tsParseImportType() {\n    const node = this.startNode();\n    this.expect(types._import);\n    this.expect(types.parenL);\n\n    if (!this.match(types.string)) {\n      this.raise(this.state.start, TSErrors.UnsupportedImportTypeArgument);\n    }\n\n    node.argument = this.parseExprAtom();\n    this.expect(types.parenR);\n\n    if (this.eat(types.dot)) {\n      node.qualifier = this.tsParseEntityName(true);\n    }\n\n    if (this.isRelational(\"<\")) {\n      node.typeParameters = this.tsParseTypeArguments();\n    }\n\n    return this.finishNode(node, \"TSImportType\");\n  }\n\n  tsParseEntityName(allowReservedWords) {\n    let entity = this.parseIdentifier();\n\n    while (this.eat(types.dot)) {\n      const node = this.startNodeAtNode(entity);\n      node.left = entity;\n      node.right = this.parseIdentifier(allowReservedWords);\n      entity = this.finishNode(node, \"TSQualifiedName\");\n    }\n\n    return entity;\n  }\n\n  tsParseTypeReference() {\n    const node = this.startNode();\n    node.typeName = this.tsParseEntityName(false);\n\n    if (!this.hasPrecedingLineBreak() && this.isRelational(\"<\")) {\n      node.typeParameters = this.tsParseTypeArguments();\n    }\n\n    return this.finishNode(node, \"TSTypeReference\");\n  }\n\n  tsParseThisTypePredicate(lhs) {\n    this.next();\n    const node = this.startNodeAtNode(lhs);\n    node.parameterName = lhs;\n    node.typeAnnotation = this.tsParseTypeAnnotation(false);\n    node.asserts = false;\n    return this.finishNode(node, \"TSTypePredicate\");\n  }\n\n  tsParseThisTypeNode() {\n    const node = this.startNode();\n    this.next();\n    return this.finishNode(node, \"TSThisType\");\n  }\n\n  tsParseTypeQuery() {\n    const node = this.startNode();\n    this.expect(types._typeof);\n\n    if (this.match(types._import)) {\n      node.exprName = this.tsParseImportType();\n    } else {\n      node.exprName = this.tsParseEntityName(true);\n    }\n\n    return this.finishNode(node, \"TSTypeQuery\");\n  }\n\n  tsParseTypeParameter() {\n    const node = this.startNode();\n    node.name = this.parseIdentifierName(node.start);\n    node.constraint = this.tsEatThenParseType(types._extends);\n    node.default = this.tsEatThenParseType(types.eq);\n    return this.finishNode(node, \"TSTypeParameter\");\n  }\n\n  tsTryParseTypeParameters() {\n    if (this.isRelational(\"<\")) {\n      return this.tsParseTypeParameters();\n    }\n  }\n\n  tsParseTypeParameters() {\n    const node = this.startNode();\n\n    if (this.isRelational(\"<\") || this.match(types.jsxTagStart)) {\n      this.next();\n    } else {\n      this.unexpected();\n    }\n\n    node.params = this.tsParseBracketedList(\"TypeParametersOrArguments\", this.tsParseTypeParameter.bind(this), false, true);\n\n    if (node.params.length === 0) {\n      this.raise(node.start, TSErrors.EmptyTypeParameters);\n    }\n\n    return this.finishNode(node, \"TSTypeParameterDeclaration\");\n  }\n\n  tsTryNextParseConstantContext() {\n    if (this.lookahead().type === types._const) {\n      this.next();\n      return this.tsParseTypeReference();\n    }\n\n    return null;\n  }\n\n  tsFillSignature(returnToken, signature) {\n    const returnTokenRequired = returnToken === types.arrow;\n    signature.typeParameters = this.tsTryParseTypeParameters();\n    this.expect(types.parenL);\n    signature.parameters = this.tsParseBindingListForSignature();\n\n    if (returnTokenRequired) {\n      signature.typeAnnotation = this.tsParseTypeOrTypePredicateAnnotation(returnToken);\n    } else if (this.match(returnToken)) {\n      signature.typeAnnotation = this.tsParseTypeOrTypePredicateAnnotation(returnToken);\n    }\n  }\n\n  tsParseBindingListForSignature() {\n    return this.parseBindingList(types.parenR, 41).map(pattern => {\n      if (pattern.type !== \"Identifier\" && pattern.type !== \"RestElement\" && pattern.type !== \"ObjectPattern\" && pattern.type !== \"ArrayPattern\") {\n        this.raise(pattern.start, TSErrors.UnsupportedSignatureParameterKind, pattern.type);\n      }\n\n      return pattern;\n    });\n  }\n\n  tsParseTypeMemberSemicolon() {\n    if (!this.eat(types.comma) && !this.isLineTerminator()) {\n      this.expect(types.semi);\n    }\n  }\n\n  tsParseSignatureMember(kind, node) {\n    this.tsFillSignature(types.colon, node);\n    this.tsParseTypeMemberSemicolon();\n    return this.finishNode(node, kind);\n  }\n\n  tsIsUnambiguouslyIndexSignature() {\n    this.next();\n    return this.eat(types.name) && this.match(types.colon);\n  }\n\n  tsTryParseIndexSignature(node) {\n    if (!(this.match(types.bracketL) && this.tsLookAhead(this.tsIsUnambiguouslyIndexSignature.bind(this)))) {\n      return undefined;\n    }\n\n    this.expect(types.bracketL);\n    const id = this.parseIdentifier();\n    id.typeAnnotation = this.tsParseTypeAnnotation();\n    this.resetEndLocation(id);\n    this.expect(types.bracketR);\n    node.parameters = [id];\n    const type = this.tsTryParseTypeAnnotation();\n    if (type) node.typeAnnotation = type;\n    this.tsParseTypeMemberSemicolon();\n    return this.finishNode(node, \"TSIndexSignature\");\n  }\n\n  tsParsePropertyOrMethodSignature(node, readonly) {\n    if (this.eat(types.question)) node.optional = true;\n    const nodeAny = node;\n\n    if (this.match(types.parenL) || this.isRelational(\"<\")) {\n      if (readonly) {\n        this.raise(node.start, TSErrors.ReadonlyForMethodSignature);\n      }\n\n      const method = nodeAny;\n\n      if (method.kind && this.isRelational(\"<\")) {\n        this.raise(this.state.pos, TSErrors.AccesorCannotHaveTypeParameters);\n      }\n\n      this.tsFillSignature(types.colon, method);\n      this.tsParseTypeMemberSemicolon();\n\n      if (method.kind === \"get\") {\n        if (method.parameters.length > 0) {\n          this.raise(this.state.pos, ErrorMessages.BadGetterArity);\n\n          if (this.isThisParam(method.parameters[0])) {\n            this.raise(this.state.pos, TSErrors.AccesorCannotDeclareThisParameter);\n          }\n        }\n      } else if (method.kind === \"set\") {\n        if (method.parameters.length !== 1) {\n          this.raise(this.state.pos, ErrorMessages.BadSetterArity);\n        } else {\n          const firstParameter = method.parameters[0];\n\n          if (this.isThisParam(firstParameter)) {\n            this.raise(this.state.pos, TSErrors.AccesorCannotDeclareThisParameter);\n          }\n\n          if (firstParameter.type === \"Identifier\" && firstParameter.optional) {\n            this.raise(this.state.pos, TSErrors.SetAccesorCannotHaveOptionalParameter);\n          }\n\n          if (firstParameter.type === \"RestElement\") {\n            this.raise(this.state.pos, TSErrors.SetAccesorCannotHaveRestParameter);\n          }\n        }\n\n        if (method.typeAnnotation) {\n          this.raise(method.typeAnnotation.start, TSErrors.SetAccesorCannotHaveReturnType);\n        }\n      } else {\n        method.kind = \"method\";\n      }\n\n      return this.finishNode(method, \"TSMethodSignature\");\n    } else {\n      const property = nodeAny;\n      if (readonly) property.readonly = true;\n      const type = this.tsTryParseTypeAnnotation();\n      if (type) property.typeAnnotation = type;\n      this.tsParseTypeMemberSemicolon();\n      return this.finishNode(property, \"TSPropertySignature\");\n    }\n  }\n\n  tsParseTypeMember() {\n    const node = this.startNode();\n\n    if (this.match(types.parenL) || this.isRelational(\"<\")) {\n      return this.tsParseSignatureMember(\"TSCallSignatureDeclaration\", node);\n    }\n\n    if (this.match(types._new)) {\n      const id = this.startNode();\n      this.next();\n\n      if (this.match(types.parenL) || this.isRelational(\"<\")) {\n        return this.tsParseSignatureMember(\"TSConstructSignatureDeclaration\", node);\n      } else {\n        node.key = this.createIdentifier(id, \"new\");\n        return this.tsParsePropertyOrMethodSignature(node, false);\n      }\n    }\n\n    this.tsParseModifiers(node, [\"readonly\"], [\"declare\", \"abstract\", \"private\", \"protected\", \"public\", \"static\", \"override\"], TSErrors.InvalidModifierOnTypeMember);\n    const idx = this.tsTryParseIndexSignature(node);\n\n    if (idx) {\n      return idx;\n    }\n\n    this.parsePropertyName(node, false);\n\n    if (!node.computed && node.key.type === \"Identifier\" && (node.key.name === \"get\" || node.key.name === \"set\") && this.tsTokenCanFollowModifier()) {\n      node.kind = node.key.name;\n      this.parsePropertyName(node, false);\n    }\n\n    return this.tsParsePropertyOrMethodSignature(node, !!node.readonly);\n  }\n\n  tsParseTypeLiteral() {\n    const node = this.startNode();\n    node.members = this.tsParseObjectTypeMembers();\n    return this.finishNode(node, \"TSTypeLiteral\");\n  }\n\n  tsParseObjectTypeMembers() {\n    this.expect(types.braceL);\n    const members = this.tsParseList(\"TypeMembers\", this.tsParseTypeMember.bind(this));\n    this.expect(types.braceR);\n    return members;\n  }\n\n  tsIsStartOfMappedType() {\n    this.next();\n\n    if (this.eat(types.plusMin)) {\n      return this.isContextual(\"readonly\");\n    }\n\n    if (this.isContextual(\"readonly\")) {\n      this.next();\n    }\n\n    if (!this.match(types.bracketL)) {\n      return false;\n    }\n\n    this.next();\n\n    if (!this.tsIsIdentifier()) {\n      return false;\n    }\n\n    this.next();\n    return this.match(types._in);\n  }\n\n  tsParseMappedTypeParameter() {\n    const node = this.startNode();\n    node.name = this.parseIdentifierName(node.start);\n    node.constraint = this.tsExpectThenParseType(types._in);\n    return this.finishNode(node, \"TSTypeParameter\");\n  }\n\n  tsParseMappedType() {\n    const node = this.startNode();\n    this.expect(types.braceL);\n\n    if (this.match(types.plusMin)) {\n      node.readonly = this.state.value;\n      this.next();\n      this.expectContextual(\"readonly\");\n    } else if (this.eatContextual(\"readonly\")) {\n      node.readonly = true;\n    }\n\n    this.expect(types.bracketL);\n    node.typeParameter = this.tsParseMappedTypeParameter();\n    node.nameType = this.eatContextual(\"as\") ? this.tsParseType() : null;\n    this.expect(types.bracketR);\n\n    if (this.match(types.plusMin)) {\n      node.optional = this.state.value;\n      this.next();\n      this.expect(types.question);\n    } else if (this.eat(types.question)) {\n      node.optional = true;\n    }\n\n    node.typeAnnotation = this.tsTryParseType();\n    this.semicolon();\n    this.expect(types.braceR);\n    return this.finishNode(node, \"TSMappedType\");\n  }\n\n  tsParseTupleType() {\n    const node = this.startNode();\n    node.elementTypes = this.tsParseBracketedList(\"TupleElementTypes\", this.tsParseTupleElementType.bind(this), true, false);\n    let seenOptionalElement = false;\n    let labeledElements = null;\n    node.elementTypes.forEach(elementNode => {\n      var _labeledElements;\n\n      let {\n        type\n      } = elementNode;\n\n      if (seenOptionalElement && type !== \"TSRestType\" && type !== \"TSOptionalType\" && !(type === \"TSNamedTupleMember\" && elementNode.optional)) {\n        this.raise(elementNode.start, TSErrors.OptionalTypeBeforeRequired);\n      }\n\n      seenOptionalElement = seenOptionalElement || type === \"TSNamedTupleMember\" && elementNode.optional || type === \"TSOptionalType\";\n\n      if (type === \"TSRestType\") {\n        elementNode = elementNode.typeAnnotation;\n        type = elementNode.type;\n      }\n\n      const isLabeled = type === \"TSNamedTupleMember\";\n      labeledElements = (_labeledElements = labeledElements) != null ? _labeledElements : isLabeled;\n\n      if (labeledElements !== isLabeled) {\n        this.raise(elementNode.start, TSErrors.MixedLabeledAndUnlabeledElements);\n      }\n    });\n    return this.finishNode(node, \"TSTupleType\");\n  }\n\n  tsParseTupleElementType() {\n    const {\n      start: startPos,\n      startLoc\n    } = this.state;\n    const rest = this.eat(types.ellipsis);\n    let type = this.tsParseType();\n    const optional = this.eat(types.question);\n    const labeled = this.eat(types.colon);\n\n    if (labeled) {\n      const labeledNode = this.startNodeAtNode(type);\n      labeledNode.optional = optional;\n\n      if (type.type === \"TSTypeReference\" && !type.typeParameters && type.typeName.type === \"Identifier\") {\n        labeledNode.label = type.typeName;\n      } else {\n        this.raise(type.start, TSErrors.InvalidTupleMemberLabel);\n        labeledNode.label = type;\n      }\n\n      labeledNode.elementType = this.tsParseType();\n      type = this.finishNode(labeledNode, \"TSNamedTupleMember\");\n    } else if (optional) {\n      const optionalTypeNode = this.startNodeAtNode(type);\n      optionalTypeNode.typeAnnotation = type;\n      type = this.finishNode(optionalTypeNode, \"TSOptionalType\");\n    }\n\n    if (rest) {\n      const restNode = this.startNodeAt(startPos, startLoc);\n      restNode.typeAnnotation = type;\n      type = this.finishNode(restNode, \"TSRestType\");\n    }\n\n    return type;\n  }\n\n  tsParseParenthesizedType() {\n    const node = this.startNode();\n    this.expect(types.parenL);\n    node.typeAnnotation = this.tsParseType();\n    this.expect(types.parenR);\n    return this.finishNode(node, \"TSParenthesizedType\");\n  }\n\n  tsParseFunctionOrConstructorType(type, abstract) {\n    const node = this.startNode();\n\n    if (type === \"TSConstructorType\") {\n      node.abstract = !!abstract;\n      if (abstract) this.next();\n      this.next();\n    }\n\n    this.tsFillSignature(types.arrow, node);\n    return this.finishNode(node, type);\n  }\n\n  tsParseLiteralTypeNode() {\n    const node = this.startNode();\n\n    node.literal = (() => {\n      switch (this.state.type) {\n        case types.num:\n        case types.bigint:\n        case types.string:\n        case types._true:\n        case types._false:\n          return this.parseExprAtom();\n\n        default:\n          throw this.unexpected();\n      }\n    })();\n\n    return this.finishNode(node, \"TSLiteralType\");\n  }\n\n  tsParseTemplateLiteralType() {\n    const node = this.startNode();\n    node.literal = this.parseTemplate(false);\n    return this.finishNode(node, \"TSLiteralType\");\n  }\n\n  parseTemplateSubstitution() {\n    if (this.state.inType) return this.tsParseType();\n    return super.parseTemplateSubstitution();\n  }\n\n  tsParseThisTypeOrThisTypePredicate() {\n    const thisKeyword = this.tsParseThisTypeNode();\n\n    if (this.isContextual(\"is\") && !this.hasPrecedingLineBreak()) {\n      return this.tsParseThisTypePredicate(thisKeyword);\n    } else {\n      return thisKeyword;\n    }\n  }\n\n  tsParseNonArrayType() {\n    switch (this.state.type) {\n      case types.name:\n      case types._void:\n      case types._null:\n        {\n          const type = this.match(types._void) ? \"TSVoidKeyword\" : this.match(types._null) ? \"TSNullKeyword\" : keywordTypeFromName(this.state.value);\n\n          if (type !== undefined && this.lookaheadCharCode() !== 46) {\n            const node = this.startNode();\n            this.next();\n            return this.finishNode(node, type);\n          }\n\n          return this.tsParseTypeReference();\n        }\n\n      case types.string:\n      case types.num:\n      case types.bigint:\n      case types._true:\n      case types._false:\n        return this.tsParseLiteralTypeNode();\n\n      case types.plusMin:\n        if (this.state.value === \"-\") {\n          const node = this.startNode();\n          const nextToken = this.lookahead();\n\n          if (nextToken.type !== types.num && nextToken.type !== types.bigint) {\n            throw this.unexpected();\n          }\n\n          node.literal = this.parseMaybeUnary();\n          return this.finishNode(node, \"TSLiteralType\");\n        }\n\n        break;\n\n      case types._this:\n        return this.tsParseThisTypeOrThisTypePredicate();\n\n      case types._typeof:\n        return this.tsParseTypeQuery();\n\n      case types._import:\n        return this.tsParseImportType();\n\n      case types.braceL:\n        return this.tsLookAhead(this.tsIsStartOfMappedType.bind(this)) ? this.tsParseMappedType() : this.tsParseTypeLiteral();\n\n      case types.bracketL:\n        return this.tsParseTupleType();\n\n      case types.parenL:\n        return this.tsParseParenthesizedType();\n\n      case types.backQuote:\n        return this.tsParseTemplateLiteralType();\n    }\n\n    throw this.unexpected();\n  }\n\n  tsParseArrayTypeOrHigher() {\n    let type = this.tsParseNonArrayType();\n\n    while (!this.hasPrecedingLineBreak() && this.eat(types.bracketL)) {\n      if (this.match(types.bracketR)) {\n        const node = this.startNodeAtNode(type);\n        node.elementType = type;\n        this.expect(types.bracketR);\n        type = this.finishNode(node, \"TSArrayType\");\n      } else {\n        const node = this.startNodeAtNode(type);\n        node.objectType = type;\n        node.indexType = this.tsParseType();\n        this.expect(types.bracketR);\n        type = this.finishNode(node, \"TSIndexedAccessType\");\n      }\n    }\n\n    return type;\n  }\n\n  tsParseTypeOperator(operator) {\n    const node = this.startNode();\n    this.expectContextual(operator);\n    node.operator = operator;\n    node.typeAnnotation = this.tsParseTypeOperatorOrHigher();\n\n    if (operator === \"readonly\") {\n      this.tsCheckTypeAnnotationForReadOnly(node);\n    }\n\n    return this.finishNode(node, \"TSTypeOperator\");\n  }\n\n  tsCheckTypeAnnotationForReadOnly(node) {\n    switch (node.typeAnnotation.type) {\n      case \"TSTupleType\":\n      case \"TSArrayType\":\n        return;\n\n      default:\n        this.raise(node.start, TSErrors.UnexpectedReadonly);\n    }\n  }\n\n  tsParseInferType() {\n    const node = this.startNode();\n    this.expectContextual(\"infer\");\n    const typeParameter = this.startNode();\n    typeParameter.name = this.parseIdentifierName(typeParameter.start);\n    node.typeParameter = this.finishNode(typeParameter, \"TSTypeParameter\");\n    return this.finishNode(node, \"TSInferType\");\n  }\n\n  tsParseTypeOperatorOrHigher() {\n    const operator = [\"keyof\", \"unique\", \"readonly\"].find(kw => this.isContextual(kw));\n    return operator ? this.tsParseTypeOperator(operator) : this.isContextual(\"infer\") ? this.tsParseInferType() : this.tsParseArrayTypeOrHigher();\n  }\n\n  tsParseUnionOrIntersectionType(kind, parseConstituentType, operator) {\n    const node = this.startNode();\n    const hasLeadingOperator = this.eat(operator);\n    const types = [];\n\n    do {\n      types.push(parseConstituentType());\n    } while (this.eat(operator));\n\n    if (types.length === 1 && !hasLeadingOperator) {\n      return types[0];\n    }\n\n    node.types = types;\n    return this.finishNode(node, kind);\n  }\n\n  tsParseIntersectionTypeOrHigher() {\n    return this.tsParseUnionOrIntersectionType(\"TSIntersectionType\", this.tsParseTypeOperatorOrHigher.bind(this), types.bitwiseAND);\n  }\n\n  tsParseUnionTypeOrHigher() {\n    return this.tsParseUnionOrIntersectionType(\"TSUnionType\", this.tsParseIntersectionTypeOrHigher.bind(this), types.bitwiseOR);\n  }\n\n  tsIsStartOfFunctionType() {\n    if (this.isRelational(\"<\")) {\n      return true;\n    }\n\n    return this.match(types.parenL) && this.tsLookAhead(this.tsIsUnambiguouslyStartOfFunctionType.bind(this));\n  }\n\n  tsSkipParameterStart() {\n    if (this.match(types.name) || this.match(types._this)) {\n      this.next();\n      return true;\n    }\n\n    if (this.match(types.braceL)) {\n      let braceStackCounter = 1;\n      this.next();\n\n      while (braceStackCounter > 0) {\n        if (this.match(types.braceL)) {\n          ++braceStackCounter;\n        } else if (this.match(types.braceR)) {\n          --braceStackCounter;\n        }\n\n        this.next();\n      }\n\n      return true;\n    }\n\n    if (this.match(types.bracketL)) {\n      let braceStackCounter = 1;\n      this.next();\n\n      while (braceStackCounter > 0) {\n        if (this.match(types.bracketL)) {\n          ++braceStackCounter;\n        } else if (this.match(types.bracketR)) {\n          --braceStackCounter;\n        }\n\n        this.next();\n      }\n\n      return true;\n    }\n\n    return false;\n  }\n\n  tsIsUnambiguouslyStartOfFunctionType() {\n    this.next();\n\n    if (this.match(types.parenR) || this.match(types.ellipsis)) {\n      return true;\n    }\n\n    if (this.tsSkipParameterStart()) {\n      if (this.match(types.colon) || this.match(types.comma) || this.match(types.question) || this.match(types.eq)) {\n        return true;\n      }\n\n      if (this.match(types.parenR)) {\n        this.next();\n\n        if (this.match(types.arrow)) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  }\n\n  tsParseTypeOrTypePredicateAnnotation(returnToken) {\n    return this.tsInType(() => {\n      const t = this.startNode();\n      this.expect(returnToken);\n      const node = this.startNode();\n      const asserts = !!this.tsTryParse(this.tsParseTypePredicateAsserts.bind(this));\n\n      if (asserts && this.match(types._this)) {\n        let thisTypePredicate = this.tsParseThisTypeOrThisTypePredicate();\n\n        if (thisTypePredicate.type === \"TSThisType\") {\n          node.parameterName = thisTypePredicate;\n          node.asserts = true;\n          thisTypePredicate = this.finishNode(node, \"TSTypePredicate\");\n        } else {\n          this.resetStartLocationFromNode(thisTypePredicate, node);\n          thisTypePredicate.asserts = true;\n        }\n\n        t.typeAnnotation = thisTypePredicate;\n        return this.finishNode(t, \"TSTypeAnnotation\");\n      }\n\n      const typePredicateVariable = this.tsIsIdentifier() && this.tsTryParse(this.tsParseTypePredicatePrefix.bind(this));\n\n      if (!typePredicateVariable) {\n        if (!asserts) {\n          return this.tsParseTypeAnnotation(false, t);\n        }\n\n        node.parameterName = this.parseIdentifier();\n        node.asserts = asserts;\n        t.typeAnnotation = this.finishNode(node, \"TSTypePredicate\");\n        return this.finishNode(t, \"TSTypeAnnotation\");\n      }\n\n      const type = this.tsParseTypeAnnotation(false);\n      node.parameterName = typePredicateVariable;\n      node.typeAnnotation = type;\n      node.asserts = asserts;\n      t.typeAnnotation = this.finishNode(node, \"TSTypePredicate\");\n      return this.finishNode(t, \"TSTypeAnnotation\");\n    });\n  }\n\n  tsTryParseTypeOrTypePredicateAnnotation() {\n    return this.match(types.colon) ? this.tsParseTypeOrTypePredicateAnnotation(types.colon) : undefined;\n  }\n\n  tsTryParseTypeAnnotation() {\n    return this.match(types.colon) ? this.tsParseTypeAnnotation() : undefined;\n  }\n\n  tsTryParseType() {\n    return this.tsEatThenParseType(types.colon);\n  }\n\n  tsParseTypePredicatePrefix() {\n    const id = this.parseIdentifier();\n\n    if (this.isContextual(\"is\") && !this.hasPrecedingLineBreak()) {\n      this.next();\n      return id;\n    }\n  }\n\n  tsParseTypePredicateAsserts() {\n    if (!this.match(types.name) || this.state.value !== \"asserts\" || this.hasPrecedingLineBreak()) {\n      return false;\n    }\n\n    const containsEsc = this.state.containsEsc;\n    this.next();\n\n    if (!this.match(types.name) && !this.match(types._this)) {\n      return false;\n    }\n\n    if (containsEsc) {\n      this.raise(this.state.lastTokStart, ErrorMessages.InvalidEscapedReservedWord, \"asserts\");\n    }\n\n    return true;\n  }\n\n  tsParseTypeAnnotation(eatColon = true, t = this.startNode()) {\n    this.tsInType(() => {\n      if (eatColon) this.expect(types.colon);\n      t.typeAnnotation = this.tsParseType();\n    });\n    return this.finishNode(t, \"TSTypeAnnotation\");\n  }\n\n  tsParseType() {\n    assert(this.state.inType);\n    const type = this.tsParseNonConditionalType();\n\n    if (this.hasPrecedingLineBreak() || !this.eat(types._extends)) {\n      return type;\n    }\n\n    const node = this.startNodeAtNode(type);\n    node.checkType = type;\n    node.extendsType = this.tsParseNonConditionalType();\n    this.expect(types.question);\n    node.trueType = this.tsParseType();\n    this.expect(types.colon);\n    node.falseType = this.tsParseType();\n    return this.finishNode(node, \"TSConditionalType\");\n  }\n\n  isAbstractConstructorSignature() {\n    return this.isContextual(\"abstract\") && this.lookahead().type === types._new;\n  }\n\n  tsParseNonConditionalType() {\n    if (this.tsIsStartOfFunctionType()) {\n      return this.tsParseFunctionOrConstructorType(\"TSFunctionType\");\n    }\n\n    if (this.match(types._new)) {\n      return this.tsParseFunctionOrConstructorType(\"TSConstructorType\");\n    } else if (this.isAbstractConstructorSignature()) {\n      return this.tsParseFunctionOrConstructorType(\"TSConstructorType\", true);\n    }\n\n    return this.tsParseUnionTypeOrHigher();\n  }\n\n  tsParseTypeAssertion() {\n    const node = this.startNode();\n\n    const _const = this.tsTryNextParseConstantContext();\n\n    node.typeAnnotation = _const || this.tsNextThenParseType();\n    this.expectRelational(\">\");\n    node.expression = this.parseMaybeUnary();\n    return this.finishNode(node, \"TSTypeAssertion\");\n  }\n\n  tsParseHeritageClause(descriptor) {\n    const originalStart = this.state.start;\n    const delimitedList = this.tsParseDelimitedList(\"HeritageClauseElement\", this.tsParseExpressionWithTypeArguments.bind(this));\n\n    if (!delimitedList.length) {\n      this.raise(originalStart, TSErrors.EmptyHeritageClauseType, descriptor);\n    }\n\n    return delimitedList;\n  }\n\n  tsParseExpressionWithTypeArguments() {\n    const node = this.startNode();\n    node.expression = this.tsParseEntityName(false);\n\n    if (this.isRelational(\"<\")) {\n      node.typeParameters = this.tsParseTypeArguments();\n    }\n\n    return this.finishNode(node, \"TSExpressionWithTypeArguments\");\n  }\n\n  tsParseInterfaceDeclaration(node) {\n    node.id = this.parseIdentifier();\n    this.checkLVal(node.id, \"typescript interface declaration\", BIND_TS_INTERFACE);\n    node.typeParameters = this.tsTryParseTypeParameters();\n\n    if (this.eat(types._extends)) {\n      node.extends = this.tsParseHeritageClause(\"extends\");\n    }\n\n    const body = this.startNode();\n    body.body = this.tsInType(this.tsParseObjectTypeMembers.bind(this));\n    node.body = this.finishNode(body, \"TSInterfaceBody\");\n    return this.finishNode(node, \"TSInterfaceDeclaration\");\n  }\n\n  tsParseTypeAliasDeclaration(node) {\n    node.id = this.parseIdentifier();\n    this.checkLVal(node.id, \"typescript type alias\", BIND_TS_TYPE);\n    node.typeParameters = this.tsTryParseTypeParameters();\n    node.typeAnnotation = this.tsInType(() => {\n      this.expect(types.eq);\n\n      if (this.isContextual(\"intrinsic\") && this.lookahead().type !== types.dot) {\n        const node = this.startNode();\n        this.next();\n        return this.finishNode(node, \"TSIntrinsicKeyword\");\n      }\n\n      return this.tsParseType();\n    });\n    this.semicolon();\n    return this.finishNode(node, \"TSTypeAliasDeclaration\");\n  }\n\n  tsInNoContext(cb) {\n    const oldContext = this.state.context;\n    this.state.context = [oldContext[0]];\n\n    try {\n      return cb();\n    } finally {\n      this.state.context = oldContext;\n    }\n  }\n\n  tsInType(cb) {\n    const oldInType = this.state.inType;\n    this.state.inType = true;\n\n    try {\n      return cb();\n    } finally {\n      this.state.inType = oldInType;\n    }\n  }\n\n  tsEatThenParseType(token) {\n    return !this.match(token) ? undefined : this.tsNextThenParseType();\n  }\n\n  tsExpectThenParseType(token) {\n    return this.tsDoThenParseType(() => this.expect(token));\n  }\n\n  tsNextThenParseType() {\n    return this.tsDoThenParseType(() => this.next());\n  }\n\n  tsDoThenParseType(cb) {\n    return this.tsInType(() => {\n      cb();\n      return this.tsParseType();\n    });\n  }\n\n  tsParseEnumMember() {\n    const node = this.startNode();\n    node.id = this.match(types.string) ? this.parseExprAtom() : this.parseIdentifier(true);\n\n    if (this.eat(types.eq)) {\n      node.initializer = this.parseMaybeAssignAllowIn();\n    }\n\n    return this.finishNode(node, \"TSEnumMember\");\n  }\n\n  tsParseEnumDeclaration(node, isConst) {\n    if (isConst) node.const = true;\n    node.id = this.parseIdentifier();\n    this.checkLVal(node.id, \"typescript enum declaration\", isConst ? BIND_TS_CONST_ENUM : BIND_TS_ENUM);\n    this.expect(types.braceL);\n    node.members = this.tsParseDelimitedList(\"EnumMembers\", this.tsParseEnumMember.bind(this));\n    this.expect(types.braceR);\n    return this.finishNode(node, \"TSEnumDeclaration\");\n  }\n\n  tsParseModuleBlock() {\n    const node = this.startNode();\n    this.scope.enter(SCOPE_OTHER);\n    this.expect(types.braceL);\n    this.parseBlockOrModuleBlockBody(node.body = [], undefined, true, types.braceR);\n    this.scope.exit();\n    return this.finishNode(node, \"TSModuleBlock\");\n  }\n\n  tsParseModuleOrNamespaceDeclaration(node, nested = false) {\n    node.id = this.parseIdentifier();\n\n    if (!nested) {\n      this.checkLVal(node.id, \"module or namespace declaration\", BIND_TS_NAMESPACE);\n    }\n\n    if (this.eat(types.dot)) {\n      const inner = this.startNode();\n      this.tsParseModuleOrNamespaceDeclaration(inner, true);\n      node.body = inner;\n    } else {\n      this.scope.enter(SCOPE_TS_MODULE);\n      this.prodParam.enter(PARAM);\n      node.body = this.tsParseModuleBlock();\n      this.prodParam.exit();\n      this.scope.exit();\n    }\n\n    return this.finishNode(node, \"TSModuleDeclaration\");\n  }\n\n  tsParseAmbientExternalModuleDeclaration(node) {\n    if (this.isContextual(\"global\")) {\n      node.global = true;\n      node.id = this.parseIdentifier();\n    } else if (this.match(types.string)) {\n      node.id = this.parseExprAtom();\n    } else {\n      this.unexpected();\n    }\n\n    if (this.match(types.braceL)) {\n      this.scope.enter(SCOPE_TS_MODULE);\n      this.prodParam.enter(PARAM);\n      node.body = this.tsParseModuleBlock();\n      this.prodParam.exit();\n      this.scope.exit();\n    } else {\n      this.semicolon();\n    }\n\n    return this.finishNode(node, \"TSModuleDeclaration\");\n  }\n\n  tsParseImportEqualsDeclaration(node, isExport) {\n    node.isExport = isExport || false;\n    node.id = this.parseIdentifier();\n    this.checkLVal(node.id, \"import equals declaration\", BIND_LEXICAL);\n    this.expect(types.eq);\n    const moduleReference = this.tsParseModuleReference();\n\n    if (node.importKind === \"type\" && moduleReference.type !== \"TSExternalModuleReference\") {\n      this.raise(moduleReference.start, TSErrors.ImportAliasHasImportType);\n    }\n\n    node.moduleReference = moduleReference;\n    this.semicolon();\n    return this.finishNode(node, \"TSImportEqualsDeclaration\");\n  }\n\n  tsIsExternalModuleReference() {\n    return this.isContextual(\"require\") && this.lookaheadCharCode() === 40;\n  }\n\n  tsParseModuleReference() {\n    return this.tsIsExternalModuleReference() ? this.tsParseExternalModuleReference() : this.tsParseEntityName(false);\n  }\n\n  tsParseExternalModuleReference() {\n    const node = this.startNode();\n    this.expectContextual(\"require\");\n    this.expect(types.parenL);\n\n    if (!this.match(types.string)) {\n      throw this.unexpected();\n    }\n\n    node.expression = this.parseExprAtom();\n    this.expect(types.parenR);\n    return this.finishNode(node, \"TSExternalModuleReference\");\n  }\n\n  tsLookAhead(f) {\n    const state = this.state.clone();\n    const res = f();\n    this.state = state;\n    return res;\n  }\n\n  tsTryParseAndCatch(f) {\n    const result = this.tryParse(abort => f() || abort());\n    if (result.aborted || !result.node) return undefined;\n    if (result.error) this.state = result.failState;\n    return result.node;\n  }\n\n  tsTryParse(f) {\n    const state = this.state.clone();\n    const result = f();\n\n    if (result !== undefined && result !== false) {\n      return result;\n    } else {\n      this.state = state;\n      return undefined;\n    }\n  }\n\n  tsTryParseDeclare(nany) {\n    if (this.isLineTerminator()) {\n      return;\n    }\n\n    let starttype = this.state.type;\n    let kind;\n\n    if (this.isContextual(\"let\")) {\n      starttype = types._var;\n      kind = \"let\";\n    }\n\n    return this.tsInAmbientContext(() => {\n      switch (starttype) {\n        case types._function:\n          nany.declare = true;\n          return this.parseFunctionStatement(nany, false, true);\n\n        case types._class:\n          nany.declare = true;\n          return this.parseClass(nany, true, false);\n\n        case types._const:\n          if (this.match(types._const) && this.isLookaheadContextual(\"enum\")) {\n            this.expect(types._const);\n            this.expectContextual(\"enum\");\n            return this.tsParseEnumDeclaration(nany, true);\n          }\n\n        case types._var:\n          kind = kind || this.state.value;\n          return this.parseVarStatement(nany, kind);\n\n        case types.name:\n          {\n            const value = this.state.value;\n\n            if (value === \"global\") {\n              return this.tsParseAmbientExternalModuleDeclaration(nany);\n            } else {\n              return this.tsParseDeclaration(nany, value, true);\n            }\n          }\n      }\n    });\n  }\n\n  tsTryParseExportDeclaration() {\n    return this.tsParseDeclaration(this.startNode(), this.state.value, true);\n  }\n\n  tsParseExpressionStatement(node, expr) {\n    switch (expr.name) {\n      case \"declare\":\n        {\n          const declaration = this.tsTryParseDeclare(node);\n\n          if (declaration) {\n            declaration.declare = true;\n            return declaration;\n          }\n\n          break;\n        }\n\n      case \"global\":\n        if (this.match(types.braceL)) {\n          this.scope.enter(SCOPE_TS_MODULE);\n          this.prodParam.enter(PARAM);\n          const mod = node;\n          mod.global = true;\n          mod.id = expr;\n          mod.body = this.tsParseModuleBlock();\n          this.scope.exit();\n          this.prodParam.exit();\n          return this.finishNode(mod, \"TSModuleDeclaration\");\n        }\n\n        break;\n\n      default:\n        return this.tsParseDeclaration(node, expr.name, false);\n    }\n  }\n\n  tsParseDeclaration(node, value, next) {\n    switch (value) {\n      case \"abstract\":\n        if (this.tsCheckLineTerminator(next) && (this.match(types._class) || this.match(types.name))) {\n          return this.tsParseAbstractDeclaration(node);\n        }\n\n        break;\n\n      case \"enum\":\n        if (next || this.match(types.name)) {\n          if (next) this.next();\n          return this.tsParseEnumDeclaration(node, false);\n        }\n\n        break;\n\n      case \"interface\":\n        if (this.tsCheckLineTerminator(next) && this.match(types.name)) {\n          return this.tsParseInterfaceDeclaration(node);\n        }\n\n        break;\n\n      case \"module\":\n        if (this.tsCheckLineTerminator(next)) {\n          if (this.match(types.string)) {\n            return this.tsParseAmbientExternalModuleDeclaration(node);\n          } else if (this.match(types.name)) {\n            return this.tsParseModuleOrNamespaceDeclaration(node);\n          }\n        }\n\n        break;\n\n      case \"namespace\":\n        if (this.tsCheckLineTerminator(next) && this.match(types.name)) {\n          return this.tsParseModuleOrNamespaceDeclaration(node);\n        }\n\n        break;\n\n      case \"type\":\n        if (this.tsCheckLineTerminator(next) && this.match(types.name)) {\n          return this.tsParseTypeAliasDeclaration(node);\n        }\n\n        break;\n    }\n  }\n\n  tsCheckLineTerminator(next) {\n    if (next) {\n      if (this.hasFollowingLineBreak()) return false;\n      this.next();\n      return true;\n    }\n\n    return !this.isLineTerminator();\n  }\n\n  tsTryParseGenericAsyncArrowFunction(startPos, startLoc) {\n    if (!this.isRelational(\"<\")) {\n      return undefined;\n    }\n\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n    this.state.maybeInArrowParameters = true;\n    const res = this.tsTryParseAndCatch(() => {\n      const node = this.startNodeAt(startPos, startLoc);\n      node.typeParameters = this.tsParseTypeParameters();\n      super.parseFunctionParams(node);\n      node.returnType = this.tsTryParseTypeOrTypePredicateAnnotation();\n      this.expect(types.arrow);\n      return node;\n    });\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n\n    if (!res) {\n      return undefined;\n    }\n\n    return this.parseArrowExpression(res, null, true);\n  }\n\n  tsParseTypeArguments() {\n    const node = this.startNode();\n    node.params = this.tsInType(() => this.tsInNoContext(() => {\n      this.expectRelational(\"<\");\n      return this.tsParseDelimitedList(\"TypeParametersOrArguments\", this.tsParseType.bind(this));\n    }));\n\n    if (node.params.length === 0) {\n      this.raise(node.start, TSErrors.EmptyTypeArguments);\n    }\n\n    this.state.exprAllowed = false;\n    this.expectRelational(\">\");\n    return this.finishNode(node, \"TSTypeParameterInstantiation\");\n  }\n\n  tsIsDeclarationStart() {\n    if (this.match(types.name)) {\n      switch (this.state.value) {\n        case \"abstract\":\n        case \"declare\":\n        case \"enum\":\n        case \"interface\":\n        case \"module\":\n        case \"namespace\":\n        case \"type\":\n          return true;\n      }\n    }\n\n    return false;\n  }\n\n  isExportDefaultSpecifier() {\n    if (this.tsIsDeclarationStart()) return false;\n    return super.isExportDefaultSpecifier();\n  }\n\n  parseAssignableListItem(allowModifiers, decorators) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    let accessibility;\n    let readonly = false;\n\n    if (allowModifiers !== undefined) {\n      accessibility = this.parseAccessModifier();\n      readonly = !!this.tsParseModifier([\"readonly\"]);\n\n      if (allowModifiers === false && (accessibility || readonly)) {\n        this.raise(startPos, TSErrors.UnexpectedParameterModifier);\n      }\n    }\n\n    const left = this.parseMaybeDefault();\n    this.parseAssignableListItemTypes(left);\n    const elt = this.parseMaybeDefault(left.start, left.loc.start, left);\n\n    if (accessibility || readonly) {\n      const pp = this.startNodeAt(startPos, startLoc);\n\n      if (decorators.length) {\n        pp.decorators = decorators;\n      }\n\n      if (accessibility) pp.accessibility = accessibility;\n      if (readonly) pp.readonly = readonly;\n\n      if (elt.type !== \"Identifier\" && elt.type !== \"AssignmentPattern\") {\n        this.raise(pp.start, TSErrors.UnsupportedParameterPropertyKind);\n      }\n\n      pp.parameter = elt;\n      return this.finishNode(pp, \"TSParameterProperty\");\n    }\n\n    if (decorators.length) {\n      left.decorators = decorators;\n    }\n\n    return elt;\n  }\n\n  parseFunctionBodyAndFinish(node, type, isMethod = false) {\n    if (this.match(types.colon)) {\n      node.returnType = this.tsParseTypeOrTypePredicateAnnotation(types.colon);\n    }\n\n    const bodilessType = type === \"FunctionDeclaration\" ? \"TSDeclareFunction\" : type === \"ClassMethod\" ? \"TSDeclareMethod\" : undefined;\n\n    if (bodilessType && !this.match(types.braceL) && this.isLineTerminator()) {\n      this.finishNode(node, bodilessType);\n      return;\n    }\n\n    if (bodilessType === \"TSDeclareFunction\" && this.state.isAmbientContext) {\n      this.raise(node.start, TSErrors.DeclareFunctionHasImplementation);\n\n      if (node.declare) {\n        super.parseFunctionBodyAndFinish(node, bodilessType, isMethod);\n        return;\n      }\n    }\n\n    super.parseFunctionBodyAndFinish(node, type, isMethod);\n  }\n\n  registerFunctionStatementId(node) {\n    if (!node.body && node.id) {\n      this.checkLVal(node.id, \"function name\", BIND_TS_AMBIENT);\n    } else {\n      super.registerFunctionStatementId(...arguments);\n    }\n  }\n\n  tsCheckForInvalidTypeCasts(items) {\n    items.forEach(node => {\n      if ((node == null ? void 0 : node.type) === \"TSTypeCastExpression\") {\n        this.raise(node.typeAnnotation.start, TSErrors.UnexpectedTypeAnnotation);\n      }\n    });\n  }\n\n  toReferencedList(exprList, isInParens) {\n    this.tsCheckForInvalidTypeCasts(exprList);\n    return exprList;\n  }\n\n  parseArrayLike(...args) {\n    const node = super.parseArrayLike(...args);\n\n    if (node.type === \"ArrayExpression\") {\n      this.tsCheckForInvalidTypeCasts(node.elements);\n    }\n\n    return node;\n  }\n\n  parseSubscript(base, startPos, startLoc, noCalls, state) {\n    if (!this.hasPrecedingLineBreak() && this.match(types.bang)) {\n      this.state.exprAllowed = false;\n      this.next();\n      const nonNullExpression = this.startNodeAt(startPos, startLoc);\n      nonNullExpression.expression = base;\n      return this.finishNode(nonNullExpression, \"TSNonNullExpression\");\n    }\n\n    if (this.isRelational(\"<\")) {\n      const result = this.tsTryParseAndCatch(() => {\n        if (!noCalls && this.atPossibleAsyncArrow(base)) {\n          const asyncArrowFn = this.tsTryParseGenericAsyncArrowFunction(startPos, startLoc);\n\n          if (asyncArrowFn) {\n            return asyncArrowFn;\n          }\n        }\n\n        const node = this.startNodeAt(startPos, startLoc);\n        node.callee = base;\n        const typeArguments = this.tsParseTypeArguments();\n\n        if (typeArguments) {\n          if (!noCalls && this.eat(types.parenL)) {\n            node.arguments = this.parseCallExpressionArguments(types.parenR, false);\n            this.tsCheckForInvalidTypeCasts(node.arguments);\n            node.typeParameters = typeArguments;\n\n            if (state.optionalChainMember) {\n              node.optional = false;\n            }\n\n            return this.finishCallExpression(node, state.optionalChainMember);\n          } else if (this.match(types.backQuote)) {\n            const result = this.parseTaggedTemplateExpression(base, startPos, startLoc, state);\n            result.typeParameters = typeArguments;\n            return result;\n          }\n        }\n\n        this.unexpected();\n      });\n      if (result) return result;\n    }\n\n    return super.parseSubscript(base, startPos, startLoc, noCalls, state);\n  }\n\n  parseNewArguments(node) {\n    if (this.isRelational(\"<\")) {\n      const typeParameters = this.tsTryParseAndCatch(() => {\n        const args = this.tsParseTypeArguments();\n        if (!this.match(types.parenL)) this.unexpected();\n        return args;\n      });\n\n      if (typeParameters) {\n        node.typeParameters = typeParameters;\n      }\n    }\n\n    super.parseNewArguments(node);\n  }\n\n  parseExprOp(left, leftStartPos, leftStartLoc, minPrec) {\n    if (nonNull(types._in.binop) > minPrec && !this.hasPrecedingLineBreak() && this.isContextual(\"as\")) {\n      const node = this.startNodeAt(leftStartPos, leftStartLoc);\n      node.expression = left;\n\n      const _const = this.tsTryNextParseConstantContext();\n\n      if (_const) {\n        node.typeAnnotation = _const;\n      } else {\n        node.typeAnnotation = this.tsNextThenParseType();\n      }\n\n      this.finishNode(node, \"TSAsExpression\");\n      this.reScan_lt_gt();\n      return this.parseExprOp(node, leftStartPos, leftStartLoc, minPrec);\n    }\n\n    return super.parseExprOp(left, leftStartPos, leftStartLoc, minPrec);\n  }\n\n  checkReservedWord(word, startLoc, checkKeywords, isBinding) {}\n\n  checkDuplicateExports() {}\n\n  parseImport(node) {\n    node.importKind = \"value\";\n\n    if (this.match(types.name) || this.match(types.star) || this.match(types.braceL)) {\n      let ahead = this.lookahead();\n\n      if (this.isContextual(\"type\") && ahead.type !== types.comma && !(ahead.type === types.name && ahead.value === \"from\") && ahead.type !== types.eq) {\n        node.importKind = \"type\";\n        this.next();\n        ahead = this.lookahead();\n      }\n\n      if (this.match(types.name) && ahead.type === types.eq) {\n        return this.tsParseImportEqualsDeclaration(node);\n      }\n    }\n\n    const importNode = super.parseImport(node);\n\n    if (importNode.importKind === \"type\" && importNode.specifiers.length > 1 && importNode.specifiers[0].type === \"ImportDefaultSpecifier\") {\n      this.raise(importNode.start, TSErrors.TypeImportCannotSpecifyDefaultAndNamed);\n    }\n\n    return importNode;\n  }\n\n  parseExport(node) {\n    if (this.match(types._import)) {\n      this.next();\n\n      if (this.isContextual(\"type\") && this.lookaheadCharCode() !== 61) {\n        node.importKind = \"type\";\n        this.next();\n      } else {\n        node.importKind = \"value\";\n      }\n\n      return this.tsParseImportEqualsDeclaration(node, true);\n    } else if (this.eat(types.eq)) {\n      const assign = node;\n      assign.expression = this.parseExpression();\n      this.semicolon();\n      return this.finishNode(assign, \"TSExportAssignment\");\n    } else if (this.eatContextual(\"as\")) {\n      const decl = node;\n      this.expectContextual(\"namespace\");\n      decl.id = this.parseIdentifier();\n      this.semicolon();\n      return this.finishNode(decl, \"TSNamespaceExportDeclaration\");\n    } else {\n      if (this.isContextual(\"type\") && this.lookahead().type === types.braceL) {\n        this.next();\n        node.exportKind = \"type\";\n      } else {\n        node.exportKind = \"value\";\n      }\n\n      return super.parseExport(node);\n    }\n  }\n\n  isAbstractClass() {\n    return this.isContextual(\"abstract\") && this.lookahead().type === types._class;\n  }\n\n  parseExportDefaultExpression() {\n    if (this.isAbstractClass()) {\n      const cls = this.startNode();\n      this.next();\n      cls.abstract = true;\n      this.parseClass(cls, true, true);\n      return cls;\n    }\n\n    if (this.state.value === \"interface\") {\n      const result = this.tsParseDeclaration(this.startNode(), this.state.value, true);\n      if (result) return result;\n    }\n\n    return super.parseExportDefaultExpression();\n  }\n\n  parseStatementContent(context, topLevel) {\n    if (this.state.type === types._const) {\n      const ahead = this.lookahead();\n\n      if (ahead.type === types.name && ahead.value === \"enum\") {\n        const node = this.startNode();\n        this.expect(types._const);\n        this.expectContextual(\"enum\");\n        return this.tsParseEnumDeclaration(node, true);\n      }\n    }\n\n    return super.parseStatementContent(context, topLevel);\n  }\n\n  parseAccessModifier() {\n    return this.tsParseModifier([\"public\", \"protected\", \"private\"]);\n  }\n\n  tsHasSomeModifiers(member, modifiers) {\n    return modifiers.some(modifier => {\n      if (tsIsAccessModifier(modifier)) {\n        return member.accessibility === modifier;\n      }\n\n      return !!member[modifier];\n    });\n  }\n\n  parseClassMember(classBody, member, state) {\n    const invalidModifersForStaticBlocks = [\"declare\", \"private\", \"public\", \"protected\", \"override\", \"abstract\", \"readonly\"];\n    this.tsParseModifiers(member, invalidModifersForStaticBlocks.concat([\"static\"]));\n\n    const callParseClassMemberWithIsStatic = () => {\n      const isStatic = !!member.static;\n\n      if (isStatic && this.eat(types.braceL)) {\n        if (this.tsHasSomeModifiers(member, invalidModifersForStaticBlocks)) {\n          this.raise(this.state.pos, TSErrors.StaticBlockCannotHaveModifier);\n        }\n\n        this.parseClassStaticBlock(classBody, member);\n      } else {\n        this.parseClassMemberWithIsStatic(classBody, member, state, isStatic);\n      }\n    };\n\n    if (member.declare) {\n      this.tsInAmbientContext(callParseClassMemberWithIsStatic);\n    } else {\n      callParseClassMemberWithIsStatic();\n    }\n  }\n\n  parseClassMemberWithIsStatic(classBody, member, state, isStatic) {\n    const idx = this.tsTryParseIndexSignature(member);\n\n    if (idx) {\n      classBody.body.push(idx);\n\n      if (member.abstract) {\n        this.raise(member.start, TSErrors.IndexSignatureHasAbstract);\n      }\n\n      if (member.accessibility) {\n        this.raise(member.start, TSErrors.IndexSignatureHasAccessibility, member.accessibility);\n      }\n\n      if (member.declare) {\n        this.raise(member.start, TSErrors.IndexSignatureHasDeclare);\n      }\n\n      if (member.override) {\n        this.raise(member.start, TSErrors.IndexSignatureHasOverride);\n      }\n\n      return;\n    }\n\n    if (!this.state.inAbstractClass && member.abstract) {\n      this.raise(member.start, TSErrors.NonAbstractClassHasAbstractMethod);\n    }\n\n    if (member.override) {\n      if (!state.hadSuperClass) {\n        this.raise(member.start, TSErrors.OverrideNotInSubClass);\n      }\n    }\n\n    super.parseClassMemberWithIsStatic(classBody, member, state, isStatic);\n  }\n\n  parsePostMemberNameModifiers(methodOrProp) {\n    const optional = this.eat(types.question);\n    if (optional) methodOrProp.optional = true;\n\n    if (methodOrProp.readonly && this.match(types.parenL)) {\n      this.raise(methodOrProp.start, TSErrors.ClassMethodHasReadonly);\n    }\n\n    if (methodOrProp.declare && this.match(types.parenL)) {\n      this.raise(methodOrProp.start, TSErrors.ClassMethodHasDeclare);\n    }\n  }\n\n  parseExpressionStatement(node, expr) {\n    const decl = expr.type === \"Identifier\" ? this.tsParseExpressionStatement(node, expr) : undefined;\n    return decl || super.parseExpressionStatement(node, expr);\n  }\n\n  shouldParseExportDeclaration() {\n    if (this.tsIsDeclarationStart()) return true;\n    return super.shouldParseExportDeclaration();\n  }\n\n  parseConditional(expr, startPos, startLoc, refNeedsArrowPos) {\n    if (!refNeedsArrowPos || !this.match(types.question)) {\n      return super.parseConditional(expr, startPos, startLoc, refNeedsArrowPos);\n    }\n\n    const result = this.tryParse(() => super.parseConditional(expr, startPos, startLoc));\n\n    if (!result.node) {\n      refNeedsArrowPos.start = result.error.pos || this.state.start;\n      return expr;\n    }\n\n    if (result.error) this.state = result.failState;\n    return result.node;\n  }\n\n  parseParenItem(node, startPos, startLoc) {\n    node = super.parseParenItem(node, startPos, startLoc);\n\n    if (this.eat(types.question)) {\n      node.optional = true;\n      this.resetEndLocation(node);\n    }\n\n    if (this.match(types.colon)) {\n      const typeCastNode = this.startNodeAt(startPos, startLoc);\n      typeCastNode.expression = node;\n      typeCastNode.typeAnnotation = this.tsParseTypeAnnotation();\n      return this.finishNode(typeCastNode, \"TSTypeCastExpression\");\n    }\n\n    return node;\n  }\n\n  parseExportDeclaration(node) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const isDeclare = this.eatContextual(\"declare\");\n\n    if (isDeclare && (this.isContextual(\"declare\") || !this.shouldParseExportDeclaration())) {\n      throw this.raise(this.state.start, TSErrors.ExpectedAmbientAfterExportDeclare);\n    }\n\n    let declaration;\n\n    if (this.match(types.name)) {\n      declaration = this.tsTryParseExportDeclaration();\n    }\n\n    if (!declaration) {\n      declaration = super.parseExportDeclaration(node);\n    }\n\n    if (declaration && (declaration.type === \"TSInterfaceDeclaration\" || declaration.type === \"TSTypeAliasDeclaration\" || isDeclare)) {\n      node.exportKind = \"type\";\n    }\n\n    if (declaration && isDeclare) {\n      this.resetStartLocation(declaration, startPos, startLoc);\n      declaration.declare = true;\n    }\n\n    return declaration;\n  }\n\n  parseClassId(node, isStatement, optionalId) {\n    if ((!isStatement || optionalId) && this.isContextual(\"implements\")) {\n      return;\n    }\n\n    super.parseClassId(node, isStatement, optionalId, node.declare ? BIND_TS_AMBIENT : BIND_CLASS);\n    const typeParameters = this.tsTryParseTypeParameters();\n    if (typeParameters) node.typeParameters = typeParameters;\n  }\n\n  parseClassPropertyAnnotation(node) {\n    if (!node.optional && this.eat(types.bang)) {\n      node.definite = true;\n    }\n\n    const type = this.tsTryParseTypeAnnotation();\n    if (type) node.typeAnnotation = type;\n  }\n\n  parseClassProperty(node) {\n    this.parseClassPropertyAnnotation(node);\n\n    if (this.state.isAmbientContext && this.match(types.eq)) {\n      this.raise(this.state.start, TSErrors.DeclareClassFieldHasInitializer);\n    }\n\n    return super.parseClassProperty(node);\n  }\n\n  parseClassPrivateProperty(node) {\n    if (node.abstract) {\n      this.raise(node.start, TSErrors.PrivateElementHasAbstract);\n    }\n\n    if (node.accessibility) {\n      this.raise(node.start, TSErrors.PrivateElementHasAccessibility, node.accessibility);\n    }\n\n    this.parseClassPropertyAnnotation(node);\n    return super.parseClassPrivateProperty(node);\n  }\n\n  pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper) {\n    const typeParameters = this.tsTryParseTypeParameters();\n\n    if (typeParameters && isConstructor) {\n      this.raise(typeParameters.start, TSErrors.ConstructorHasTypeParameters);\n    }\n\n    if (method.declare && (method.kind === \"get\" || method.kind === \"set\")) {\n      this.raise(method.start, TSErrors.DeclareAccessor, method.kind);\n    }\n\n    if (typeParameters) method.typeParameters = typeParameters;\n    super.pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper);\n  }\n\n  pushClassPrivateMethod(classBody, method, isGenerator, isAsync) {\n    const typeParameters = this.tsTryParseTypeParameters();\n    if (typeParameters) method.typeParameters = typeParameters;\n    super.pushClassPrivateMethod(classBody, method, isGenerator, isAsync);\n  }\n\n  parseClassSuper(node) {\n    super.parseClassSuper(node);\n\n    if (node.superClass && this.isRelational(\"<\")) {\n      node.superTypeParameters = this.tsParseTypeArguments();\n    }\n\n    if (this.eatContextual(\"implements\")) {\n      node.implements = this.tsParseHeritageClause(\"implements\");\n    }\n  }\n\n  parseObjPropValue(prop, ...args) {\n    const typeParameters = this.tsTryParseTypeParameters();\n    if (typeParameters) prop.typeParameters = typeParameters;\n    super.parseObjPropValue(prop, ...args);\n  }\n\n  parseFunctionParams(node, allowModifiers) {\n    const typeParameters = this.tsTryParseTypeParameters();\n    if (typeParameters) node.typeParameters = typeParameters;\n    super.parseFunctionParams(node, allowModifiers);\n  }\n\n  parseVarId(decl, kind) {\n    super.parseVarId(decl, kind);\n\n    if (decl.id.type === \"Identifier\" && this.eat(types.bang)) {\n      decl.definite = true;\n    }\n\n    const type = this.tsTryParseTypeAnnotation();\n\n    if (type) {\n      decl.id.typeAnnotation = type;\n      this.resetEndLocation(decl.id);\n    }\n  }\n\n  parseAsyncArrowFromCallExpression(node, call) {\n    if (this.match(types.colon)) {\n      node.returnType = this.tsParseTypeAnnotation();\n    }\n\n    return super.parseAsyncArrowFromCallExpression(node, call);\n  }\n\n  parseMaybeAssign(...args) {\n    var _jsx, _jsx2, _typeCast, _jsx3, _typeCast2, _jsx4, _typeCast3;\n\n    let state;\n    let jsx;\n    let typeCast;\n\n    if (this.hasPlugin(\"jsx\") && (this.match(types.jsxTagStart) || this.isRelational(\"<\"))) {\n      state = this.state.clone();\n      jsx = this.tryParse(() => super.parseMaybeAssign(...args), state);\n      if (!jsx.error) return jsx.node;\n      const {\n        context\n      } = this.state;\n\n      if (context[context.length - 1] === types$1.j_oTag) {\n        context.length -= 2;\n      } else if (context[context.length - 1] === types$1.j_expr) {\n        context.length -= 1;\n      }\n    }\n\n    if (!((_jsx = jsx) != null && _jsx.error) && !this.isRelational(\"<\")) {\n      return super.parseMaybeAssign(...args);\n    }\n\n    let typeParameters;\n    state = state || this.state.clone();\n    const arrow = this.tryParse(abort => {\n      var _expr$extra, _typeParameters;\n\n      typeParameters = this.tsParseTypeParameters();\n      const expr = super.parseMaybeAssign(...args);\n\n      if (expr.type !== \"ArrowFunctionExpression\" || (_expr$extra = expr.extra) != null && _expr$extra.parenthesized) {\n        abort();\n      }\n\n      if (((_typeParameters = typeParameters) == null ? void 0 : _typeParameters.params.length) !== 0) {\n        this.resetStartLocationFromNode(expr, typeParameters);\n      }\n\n      expr.typeParameters = typeParameters;\n      return expr;\n    }, state);\n    if (!arrow.error && !arrow.aborted) return arrow.node;\n\n    if (!jsx) {\n      assert(!this.hasPlugin(\"jsx\"));\n      typeCast = this.tryParse(() => super.parseMaybeAssign(...args), state);\n      if (!typeCast.error) return typeCast.node;\n    }\n\n    if ((_jsx2 = jsx) != null && _jsx2.node) {\n      this.state = jsx.failState;\n      return jsx.node;\n    }\n\n    if (arrow.node) {\n      this.state = arrow.failState;\n      return arrow.node;\n    }\n\n    if ((_typeCast = typeCast) != null && _typeCast.node) {\n      this.state = typeCast.failState;\n      return typeCast.node;\n    }\n\n    if ((_jsx3 = jsx) != null && _jsx3.thrown) throw jsx.error;\n    if (arrow.thrown) throw arrow.error;\n    if ((_typeCast2 = typeCast) != null && _typeCast2.thrown) throw typeCast.error;\n    throw ((_jsx4 = jsx) == null ? void 0 : _jsx4.error) || arrow.error || ((_typeCast3 = typeCast) == null ? void 0 : _typeCast3.error);\n  }\n\n  parseMaybeUnary(refExpressionErrors) {\n    if (!this.hasPlugin(\"jsx\") && this.isRelational(\"<\")) {\n      return this.tsParseTypeAssertion();\n    } else {\n      return super.parseMaybeUnary(refExpressionErrors);\n    }\n  }\n\n  parseArrow(node) {\n    if (this.match(types.colon)) {\n      const result = this.tryParse(abort => {\n        const returnType = this.tsParseTypeOrTypePredicateAnnotation(types.colon);\n        if (this.canInsertSemicolon() || !this.match(types.arrow)) abort();\n        return returnType;\n      });\n      if (result.aborted) return;\n\n      if (!result.thrown) {\n        if (result.error) this.state = result.failState;\n        node.returnType = result.node;\n      }\n    }\n\n    return super.parseArrow(node);\n  }\n\n  parseAssignableListItemTypes(param) {\n    if (this.eat(types.question)) {\n      if (param.type !== \"Identifier\" && !this.state.isAmbientContext && !this.state.inType) {\n        this.raise(param.start, TSErrors.PatternIsOptional);\n      }\n\n      param.optional = true;\n    }\n\n    const type = this.tsTryParseTypeAnnotation();\n    if (type) param.typeAnnotation = type;\n    this.resetEndLocation(param);\n    return param;\n  }\n\n  toAssignable(node, isLHS = false) {\n    switch (node.type) {\n      case \"TSTypeCastExpression\":\n        return super.toAssignable(this.typeCastToParameter(node), isLHS);\n\n      case \"TSParameterProperty\":\n        return super.toAssignable(node, isLHS);\n\n      case \"ParenthesizedExpression\":\n        return this.toAssignableParenthesizedExpression(node, isLHS);\n\n      case \"TSAsExpression\":\n      case \"TSNonNullExpression\":\n      case \"TSTypeAssertion\":\n        node.expression = this.toAssignable(node.expression, isLHS);\n        return node;\n\n      default:\n        return super.toAssignable(node, isLHS);\n    }\n  }\n\n  toAssignableParenthesizedExpression(node, isLHS) {\n    switch (node.expression.type) {\n      case \"TSAsExpression\":\n      case \"TSNonNullExpression\":\n      case \"TSTypeAssertion\":\n      case \"ParenthesizedExpression\":\n        node.expression = this.toAssignable(node.expression, isLHS);\n        return node;\n\n      default:\n        return super.toAssignable(node, isLHS);\n    }\n  }\n\n  checkLVal(expr, contextDescription, ...args) {\n    var _expr$extra2;\n\n    switch (expr.type) {\n      case \"TSTypeCastExpression\":\n        return;\n\n      case \"TSParameterProperty\":\n        this.checkLVal(expr.parameter, \"parameter property\", ...args);\n        return;\n\n      case \"TSAsExpression\":\n      case \"TSTypeAssertion\":\n        if (!args[0] && contextDescription !== \"parenthesized expression\" && !((_expr$extra2 = expr.extra) != null && _expr$extra2.parenthesized)) {\n          this.raise(expr.start, ErrorMessages.InvalidLhs, contextDescription);\n          break;\n        }\n\n        this.checkLVal(expr.expression, \"parenthesized expression\", ...args);\n        return;\n\n      case \"TSNonNullExpression\":\n        this.checkLVal(expr.expression, contextDescription, ...args);\n        return;\n\n      default:\n        super.checkLVal(expr, contextDescription, ...args);\n        return;\n    }\n  }\n\n  parseBindingAtom() {\n    switch (this.state.type) {\n      case types._this:\n        return this.parseIdentifier(true);\n\n      default:\n        return super.parseBindingAtom();\n    }\n  }\n\n  parseMaybeDecoratorArguments(expr) {\n    if (this.isRelational(\"<\")) {\n      const typeArguments = this.tsParseTypeArguments();\n\n      if (this.match(types.parenL)) {\n        const call = super.parseMaybeDecoratorArguments(expr);\n        call.typeParameters = typeArguments;\n        return call;\n      }\n\n      this.unexpected(this.state.start, types.parenL);\n    }\n\n    return super.parseMaybeDecoratorArguments(expr);\n  }\n\n  checkCommaAfterRest(close) {\n    if (this.state.isAmbientContext && this.match(types.comma) && this.lookaheadCharCode() === close) {\n      this.next();\n    } else {\n      super.checkCommaAfterRest(close);\n    }\n  }\n\n  isClassMethod() {\n    return this.isRelational(\"<\") || super.isClassMethod();\n  }\n\n  isClassProperty() {\n    return this.match(types.bang) || this.match(types.colon) || super.isClassProperty();\n  }\n\n  parseMaybeDefault(...args) {\n    const node = super.parseMaybeDefault(...args);\n\n    if (node.type === \"AssignmentPattern\" && node.typeAnnotation && node.right.start < node.typeAnnotation.start) {\n      this.raise(node.typeAnnotation.start, TSErrors.TypeAnnotationAfterAssign);\n    }\n\n    return node;\n  }\n\n  getTokenFromCode(code) {\n    if (this.state.inType && (code === 62 || code === 60)) {\n      return this.finishOp(types.relational, 1);\n    } else {\n      return super.getTokenFromCode(code);\n    }\n  }\n\n  reScan_lt_gt() {\n    if (this.match(types.relational)) {\n      const code = this.input.charCodeAt(this.state.start);\n\n      if (code === 60 || code === 62) {\n        this.state.pos -= 1;\n        this.readToken_lt_gt(code);\n      }\n    }\n  }\n\n  toAssignableList(exprList) {\n    for (let i = 0; i < exprList.length; i++) {\n      const expr = exprList[i];\n      if (!expr) continue;\n\n      switch (expr.type) {\n        case \"TSTypeCastExpression\":\n          exprList[i] = this.typeCastToParameter(expr);\n          break;\n\n        case \"TSAsExpression\":\n        case \"TSTypeAssertion\":\n          if (!this.state.maybeInArrowParameters) {\n            exprList[i] = this.typeCastToParameter(expr);\n          } else {\n            this.raise(expr.start, TSErrors.UnexpectedTypeCastInParameter);\n          }\n\n          break;\n      }\n    }\n\n    return super.toAssignableList(...arguments);\n  }\n\n  typeCastToParameter(node) {\n    node.expression.typeAnnotation = node.typeAnnotation;\n    this.resetEndLocation(node.expression, node.typeAnnotation.end, node.typeAnnotation.loc.end);\n    return node.expression;\n  }\n\n  shouldParseArrow() {\n    return this.match(types.colon) || super.shouldParseArrow();\n  }\n\n  shouldParseAsyncArrow() {\n    return this.match(types.colon) || super.shouldParseAsyncArrow();\n  }\n\n  canHaveLeadingDecorator() {\n    return super.canHaveLeadingDecorator() || this.isAbstractClass();\n  }\n\n  jsxParseOpeningElementAfterName(node) {\n    if (this.isRelational(\"<\")) {\n      const typeArguments = this.tsTryParseAndCatch(() => this.tsParseTypeArguments());\n      if (typeArguments) node.typeParameters = typeArguments;\n    }\n\n    return super.jsxParseOpeningElementAfterName(node);\n  }\n\n  getGetterSetterExpectedParamCount(method) {\n    const baseCount = super.getGetterSetterExpectedParamCount(method);\n    const params = this.getObjectOrClassMethodParams(method);\n    const firstParam = params[0];\n    const hasContextParam = firstParam && this.isThisParam(firstParam);\n    return hasContextParam ? baseCount + 1 : baseCount;\n  }\n\n  parseCatchClauseParam() {\n    const param = super.parseCatchClauseParam();\n    const type = this.tsTryParseTypeAnnotation();\n\n    if (type) {\n      param.typeAnnotation = type;\n      this.resetEndLocation(param);\n    }\n\n    return param;\n  }\n\n  tsInAmbientContext(cb) {\n    const oldIsAmbientContext = this.state.isAmbientContext;\n    this.state.isAmbientContext = true;\n\n    try {\n      return cb();\n    } finally {\n      this.state.isAmbientContext = oldIsAmbientContext;\n    }\n  }\n\n  parseClass(node, ...args) {\n    const oldInAbstractClass = this.state.inAbstractClass;\n    this.state.inAbstractClass = !!node.abstract;\n\n    try {\n      return super.parseClass(node, ...args);\n    } finally {\n      this.state.inAbstractClass = oldInAbstractClass;\n    }\n  }\n\n  tsParseAbstractDeclaration(node) {\n    if (this.match(types._class)) {\n      node.abstract = true;\n      return this.parseClass(node, true, false);\n    } else if (this.isContextual(\"interface\")) {\n      if (!this.hasFollowingLineBreak()) {\n        node.abstract = true;\n        this.raise(node.start, TSErrors.NonClassMethodPropertyHasAbstractModifer);\n        this.next();\n        return this.tsParseInterfaceDeclaration(node);\n      }\n    } else {\n      this.unexpected(null, types._class);\n    }\n  }\n\n  parseMethod(...args) {\n    const method = super.parseMethod(...args);\n\n    if (method.abstract) {\n      const hasBody = this.hasPlugin(\"estree\") ? !!method.value.body : !!method.body;\n\n      if (hasBody) {\n        const {\n          key\n        } = method;\n        this.raise(method.start, TSErrors.AbstractMethodHasImplementation, key.type === \"Identifier\" ? key.name : `[${this.input.slice(key.start, key.end)}]`);\n      }\n    }\n\n    return method;\n  }\n\n  shouldParseAsAmbientContext() {\n    return !!this.getPluginOption(\"typescript\", \"dts\");\n  }\n\n  parse() {\n    if (this.shouldParseAsAmbientContext()) {\n      this.state.isAmbientContext = true;\n    }\n\n    return super.parse();\n  }\n\n  getExpression() {\n    if (this.shouldParseAsAmbientContext()) {\n      this.state.isAmbientContext = true;\n    }\n\n    return super.getExpression();\n  }\n\n});\n\ntypes.placeholder = new TokenType(\"%%\", {\n  startsExpr: true\n});\nconst PlaceHolderErrors = makeErrorTemplates({\n  ClassNameIsRequired: \"A class name is required.\"\n}, ErrorCodes.SyntaxError);\nvar placeholders = (superClass => class extends superClass {\n  parsePlaceholder(expectedNode) {\n    if (this.match(types.placeholder)) {\n      const node = this.startNode();\n      this.next();\n      this.assertNoSpace(\"Unexpected space in placeholder.\");\n      node.name = super.parseIdentifier(true);\n      this.assertNoSpace(\"Unexpected space in placeholder.\");\n      this.expect(types.placeholder);\n      return this.finishPlaceholder(node, expectedNode);\n    }\n  }\n\n  finishPlaceholder(node, expectedNode) {\n    const isFinished = !!(node.expectedNode && node.type === \"Placeholder\");\n    node.expectedNode = expectedNode;\n    return isFinished ? node : this.finishNode(node, \"Placeholder\");\n  }\n\n  getTokenFromCode(code) {\n    if (code === 37 && this.input.charCodeAt(this.state.pos + 1) === 37) {\n      return this.finishOp(types.placeholder, 2);\n    }\n\n    return super.getTokenFromCode(...arguments);\n  }\n\n  parseExprAtom() {\n    return this.parsePlaceholder(\"Expression\") || super.parseExprAtom(...arguments);\n  }\n\n  parseIdentifier() {\n    return this.parsePlaceholder(\"Identifier\") || super.parseIdentifier(...arguments);\n  }\n\n  checkReservedWord(word) {\n    if (word !== undefined) super.checkReservedWord(...arguments);\n  }\n\n  parseBindingAtom() {\n    return this.parsePlaceholder(\"Pattern\") || super.parseBindingAtom(...arguments);\n  }\n\n  checkLVal(expr) {\n    if (expr.type !== \"Placeholder\") super.checkLVal(...arguments);\n  }\n\n  toAssignable(node) {\n    if (node && node.type === \"Placeholder\" && node.expectedNode === \"Expression\") {\n      node.expectedNode = \"Pattern\";\n      return node;\n    }\n\n    return super.toAssignable(...arguments);\n  }\n\n  isLet(context) {\n    if (super.isLet(context)) {\n      return true;\n    }\n\n    if (!this.isContextual(\"let\")) {\n      return false;\n    }\n\n    if (context) return false;\n    const nextToken = this.lookahead();\n\n    if (nextToken.type === types.placeholder) {\n      return true;\n    }\n\n    return false;\n  }\n\n  verifyBreakContinue(node) {\n    if (node.label && node.label.type === \"Placeholder\") return;\n    super.verifyBreakContinue(...arguments);\n  }\n\n  parseExpressionStatement(node, expr) {\n    if (expr.type !== \"Placeholder\" || expr.extra && expr.extra.parenthesized) {\n      return super.parseExpressionStatement(...arguments);\n    }\n\n    if (this.match(types.colon)) {\n      const stmt = node;\n      stmt.label = this.finishPlaceholder(expr, \"Identifier\");\n      this.next();\n      stmt.body = this.parseStatement(\"label\");\n      return this.finishNode(stmt, \"LabeledStatement\");\n    }\n\n    this.semicolon();\n    node.name = expr.name;\n    return this.finishPlaceholder(node, \"Statement\");\n  }\n\n  parseBlock() {\n    return this.parsePlaceholder(\"BlockStatement\") || super.parseBlock(...arguments);\n  }\n\n  parseFunctionId() {\n    return this.parsePlaceholder(\"Identifier\") || super.parseFunctionId(...arguments);\n  }\n\n  parseClass(node, isStatement, optionalId) {\n    const type = isStatement ? \"ClassDeclaration\" : \"ClassExpression\";\n    this.next();\n    this.takeDecorators(node);\n    const oldStrict = this.state.strict;\n    const placeholder = this.parsePlaceholder(\"Identifier\");\n\n    if (placeholder) {\n      if (this.match(types._extends) || this.match(types.placeholder) || this.match(types.braceL)) {\n        node.id = placeholder;\n      } else if (optionalId || !isStatement) {\n        node.id = null;\n        node.body = this.finishPlaceholder(placeholder, \"ClassBody\");\n        return this.finishNode(node, type);\n      } else {\n        this.unexpected(null, PlaceHolderErrors.ClassNameIsRequired);\n      }\n    } else {\n      this.parseClassId(node, isStatement, optionalId);\n    }\n\n    this.parseClassSuper(node);\n    node.body = this.parsePlaceholder(\"ClassBody\") || this.parseClassBody(!!node.superClass, oldStrict);\n    return this.finishNode(node, type);\n  }\n\n  parseExport(node) {\n    const placeholder = this.parsePlaceholder(\"Identifier\");\n    if (!placeholder) return super.parseExport(...arguments);\n\n    if (!this.isContextual(\"from\") && !this.match(types.comma)) {\n      node.specifiers = [];\n      node.source = null;\n      node.declaration = this.finishPlaceholder(placeholder, \"Declaration\");\n      return this.finishNode(node, \"ExportNamedDeclaration\");\n    }\n\n    this.expectPlugin(\"exportDefaultFrom\");\n    const specifier = this.startNode();\n    specifier.exported = placeholder;\n    node.specifiers = [this.finishNode(specifier, \"ExportDefaultSpecifier\")];\n    return super.parseExport(node);\n  }\n\n  isExportDefaultSpecifier() {\n    if (this.match(types._default)) {\n      const next = this.nextTokenStart();\n\n      if (this.isUnparsedContextual(next, \"from\")) {\n        if (this.input.startsWith(types.placeholder.label, this.nextTokenStartSince(next + 4))) {\n          return true;\n        }\n      }\n    }\n\n    return super.isExportDefaultSpecifier();\n  }\n\n  maybeParseExportDefaultSpecifier(node) {\n    if (node.specifiers && node.specifiers.length > 0) {\n      return true;\n    }\n\n    return super.maybeParseExportDefaultSpecifier(...arguments);\n  }\n\n  checkExport(node) {\n    const {\n      specifiers\n    } = node;\n\n    if (specifiers != null && specifiers.length) {\n      node.specifiers = specifiers.filter(node => node.exported.type === \"Placeholder\");\n    }\n\n    super.checkExport(node);\n    node.specifiers = specifiers;\n  }\n\n  parseImport(node) {\n    const placeholder = this.parsePlaceholder(\"Identifier\");\n    if (!placeholder) return super.parseImport(...arguments);\n    node.specifiers = [];\n\n    if (!this.isContextual(\"from\") && !this.match(types.comma)) {\n      node.source = this.finishPlaceholder(placeholder, \"StringLiteral\");\n      this.semicolon();\n      return this.finishNode(node, \"ImportDeclaration\");\n    }\n\n    const specifier = this.startNodeAtNode(placeholder);\n    specifier.local = placeholder;\n    this.finishNode(specifier, \"ImportDefaultSpecifier\");\n    node.specifiers.push(specifier);\n\n    if (this.eat(types.comma)) {\n      const hasStarImport = this.maybeParseStarImportSpecifier(node);\n      if (!hasStarImport) this.parseNamedImportSpecifiers(node);\n    }\n\n    this.expectContextual(\"from\");\n    node.source = this.parseImportSource();\n    this.semicolon();\n    return this.finishNode(node, \"ImportDeclaration\");\n  }\n\n  parseImportSource() {\n    return this.parsePlaceholder(\"StringLiteral\") || super.parseImportSource(...arguments);\n  }\n\n});\n\nvar v8intrinsic = (superClass => class extends superClass {\n  parseV8Intrinsic() {\n    if (this.match(types.modulo)) {\n      const v8IntrinsicStart = this.state.start;\n      const node = this.startNode();\n      this.eat(types.modulo);\n\n      if (this.match(types.name)) {\n        const name = this.parseIdentifierName(this.state.start);\n        const identifier = this.createIdentifier(node, name);\n        identifier.type = \"V8IntrinsicIdentifier\";\n\n        if (this.match(types.parenL)) {\n          return identifier;\n        }\n      }\n\n      this.unexpected(v8IntrinsicStart);\n    }\n  }\n\n  parseExprAtom() {\n    return this.parseV8Intrinsic() || super.parseExprAtom(...arguments);\n  }\n\n});\n\nfunction hasPlugin(plugins, name) {\n  return plugins.some(plugin => {\n    if (Array.isArray(plugin)) {\n      return plugin[0] === name;\n    } else {\n      return plugin === name;\n    }\n  });\n}\nfunction getPluginOption(plugins, name, option) {\n  const plugin = plugins.find(plugin => {\n    if (Array.isArray(plugin)) {\n      return plugin[0] === name;\n    } else {\n      return plugin === name;\n    }\n  });\n\n  if (plugin && Array.isArray(plugin)) {\n    return plugin[1][option];\n  }\n\n  return null;\n}\nconst PIPELINE_PROPOSALS = [\"minimal\", \"smart\", \"fsharp\"];\nconst RECORD_AND_TUPLE_SYNTAX_TYPES = [\"hash\", \"bar\"];\nfunction validatePlugins(plugins) {\n  if (hasPlugin(plugins, \"decorators\")) {\n    if (hasPlugin(plugins, \"decorators-legacy\")) {\n      throw new Error(\"Cannot use the decorators and decorators-legacy plugin together\");\n    }\n\n    const decoratorsBeforeExport = getPluginOption(plugins, \"decorators\", \"decoratorsBeforeExport\");\n\n    if (decoratorsBeforeExport == null) {\n      throw new Error(\"The 'decorators' plugin requires a 'decoratorsBeforeExport' option,\" + \" whose value must be a boolean. If you are migrating from\" + \" Babylon/Babel 6 or want to use the old decorators proposal, you\" + \" should use the 'decorators-legacy' plugin instead of 'decorators'.\");\n    } else if (typeof decoratorsBeforeExport !== \"boolean\") {\n      throw new Error(\"'decoratorsBeforeExport' must be a boolean.\");\n    }\n  }\n\n  if (hasPlugin(plugins, \"flow\") && hasPlugin(plugins, \"typescript\")) {\n    throw new Error(\"Cannot combine flow and typescript plugins.\");\n  }\n\n  if (hasPlugin(plugins, \"placeholders\") && hasPlugin(plugins, \"v8intrinsic\")) {\n    throw new Error(\"Cannot combine placeholders and v8intrinsic plugins.\");\n  }\n\n  if (hasPlugin(plugins, \"pipelineOperator\") && !PIPELINE_PROPOSALS.includes(getPluginOption(plugins, \"pipelineOperator\", \"proposal\"))) {\n    throw new Error(\"'pipelineOperator' requires 'proposal' option whose value should be one of: \" + PIPELINE_PROPOSALS.map(p => `'${p}'`).join(\", \"));\n  }\n\n  if (hasPlugin(plugins, \"moduleAttributes\")) {\n    if (hasPlugin(plugins, \"importAssertions\")) {\n      throw new Error(\"Cannot combine importAssertions and moduleAttributes plugins.\");\n    }\n\n    const moduleAttributesVerionPluginOption = getPluginOption(plugins, \"moduleAttributes\", \"version\");\n\n    if (moduleAttributesVerionPluginOption !== \"may-2020\") {\n      throw new Error(\"The 'moduleAttributes' plugin requires a 'version' option,\" + \" representing the last proposal update. Currently, the\" + \" only supported value is 'may-2020'.\");\n    }\n  }\n\n  if (hasPlugin(plugins, \"recordAndTuple\") && !RECORD_AND_TUPLE_SYNTAX_TYPES.includes(getPluginOption(plugins, \"recordAndTuple\", \"syntaxType\"))) {\n    throw new Error(\"'recordAndTuple' requires 'syntaxType' option whose value should be one of: \" + RECORD_AND_TUPLE_SYNTAX_TYPES.map(p => `'${p}'`).join(\", \"));\n  }\n\n  if (hasPlugin(plugins, \"asyncDoExpressions\") && !hasPlugin(plugins, \"doExpressions\")) {\n    const error = new Error(\"'asyncDoExpressions' requires 'doExpressions', please add 'doExpressions' to parser plugins.\");\n    error.missingPlugins = \"doExpressions\";\n    throw error;\n  }\n}\nconst mixinPlugins = {\n  estree,\n  jsx,\n  flow,\n  typescript,\n  v8intrinsic,\n  placeholders\n};\nconst mixinPluginNames = Object.keys(mixinPlugins);\n\nconst defaultOptions = {\n  sourceType: \"script\",\n  sourceFilename: undefined,\n  startLine: 1,\n  allowAwaitOutsideFunction: false,\n  allowReturnOutsideFunction: false,\n  allowImportExportEverywhere: false,\n  allowSuperOutsideMethod: false,\n  allowUndeclaredExports: false,\n  plugins: [],\n  strictMode: null,\n  ranges: false,\n  tokens: false,\n  createParenthesizedExpressions: false,\n  errorRecovery: false\n};\nfunction getOptions(opts) {\n  const options = {};\n\n  for (const key of Object.keys(defaultOptions)) {\n    options[key] = opts && opts[key] != null ? opts[key] : defaultOptions[key];\n  }\n\n  return options;\n}\n\nclass State {\n  constructor() {\n    this.strict = void 0;\n    this.curLine = void 0;\n    this.startLoc = void 0;\n    this.endLoc = void 0;\n    this.errors = [];\n    this.potentialArrowAt = -1;\n    this.noArrowAt = [];\n    this.noArrowParamsConversionAt = [];\n    this.maybeInArrowParameters = false;\n    this.inPipeline = false;\n    this.inType = false;\n    this.noAnonFunctionType = false;\n    this.inPropertyName = false;\n    this.hasFlowComment = false;\n    this.isIterator = false;\n    this.isAmbientContext = false;\n    this.inAbstractClass = false;\n    this.topicContext = {\n      maxNumOfResolvableTopics: 0,\n      maxTopicIndex: null\n    };\n    this.soloAwait = false;\n    this.inFSharpPipelineDirectBody = false;\n    this.labels = [];\n    this.decoratorStack = [[]];\n    this.comments = [];\n    this.trailingComments = [];\n    this.leadingComments = [];\n    this.commentStack = [];\n    this.commentPreviousNode = null;\n    this.pos = 0;\n    this.lineStart = 0;\n    this.type = types.eof;\n    this.value = null;\n    this.start = 0;\n    this.end = 0;\n    this.lastTokEndLoc = null;\n    this.lastTokStartLoc = null;\n    this.lastTokStart = 0;\n    this.lastTokEnd = 0;\n    this.context = [types$1.braceStatement];\n    this.exprAllowed = true;\n    this.containsEsc = false;\n    this.strictErrors = new Map();\n    this.exportedIdentifiers = [];\n    this.tokensLength = 0;\n  }\n\n  init(options) {\n    this.strict = options.strictMode === false ? false : options.sourceType === \"module\";\n    this.curLine = options.startLine;\n    this.startLoc = this.endLoc = this.curPosition();\n  }\n\n  curPosition() {\n    return new Position(this.curLine, this.pos - this.lineStart);\n  }\n\n  clone(skipArrays) {\n    const state = new State();\n    const keys = Object.keys(this);\n\n    for (let i = 0, length = keys.length; i < length; i++) {\n      const key = keys[i];\n      let val = this[key];\n\n      if (!skipArrays && Array.isArray(val)) {\n        val = val.slice();\n      }\n\n      state[key] = val;\n    }\n\n    return state;\n  }\n\n}\n\nvar _isDigit = function isDigit(code) {\n  return code >= 48 && code <= 57;\n};\nconst VALID_REGEX_FLAGS = new Set([\"g\", \"m\", \"s\", \"i\", \"y\", \"u\"]);\nconst forbiddenNumericSeparatorSiblings = {\n  decBinOct: [46, 66, 69, 79, 95, 98, 101, 111],\n  hex: [46, 88, 95, 120]\n};\nconst allowedNumericSeparatorSiblings = {};\nallowedNumericSeparatorSiblings.bin = [48, 49];\nallowedNumericSeparatorSiblings.oct = [...allowedNumericSeparatorSiblings.bin, 50, 51, 52, 53, 54, 55];\nallowedNumericSeparatorSiblings.dec = [...allowedNumericSeparatorSiblings.oct, 56, 57];\nallowedNumericSeparatorSiblings.hex = [...allowedNumericSeparatorSiblings.dec, 65, 66, 67, 68, 69, 70, 97, 98, 99, 100, 101, 102];\nclass Token {\n  constructor(state) {\n    this.type = state.type;\n    this.value = state.value;\n    this.start = state.start;\n    this.end = state.end;\n    this.loc = new SourceLocation(state.startLoc, state.endLoc);\n  }\n\n}\nclass Tokenizer extends ParserError {\n  constructor(options, input) {\n    super();\n    this.isLookahead = void 0;\n    this.tokens = [];\n    this.state = new State();\n    this.state.init(options);\n    this.input = input;\n    this.length = input.length;\n    this.isLookahead = false;\n  }\n\n  pushToken(token) {\n    this.tokens.length = this.state.tokensLength;\n    this.tokens.push(token);\n    ++this.state.tokensLength;\n  }\n\n  next() {\n    if (!this.isLookahead) {\n      this.checkKeywordEscapes();\n\n      if (this.options.tokens) {\n        this.pushToken(new Token(this.state));\n      }\n    }\n\n    this.state.lastTokEnd = this.state.end;\n    this.state.lastTokStart = this.state.start;\n    this.state.lastTokEndLoc = this.state.endLoc;\n    this.state.lastTokStartLoc = this.state.startLoc;\n    this.nextToken();\n  }\n\n  eat(type) {\n    if (this.match(type)) {\n      this.next();\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  match(type) {\n    return this.state.type === type;\n  }\n\n  lookahead() {\n    const old = this.state;\n    this.state = old.clone(true);\n    this.isLookahead = true;\n    this.next();\n    this.isLookahead = false;\n    const curr = this.state;\n    this.state = old;\n    return curr;\n  }\n\n  nextTokenStart() {\n    return this.nextTokenStartSince(this.state.pos);\n  }\n\n  nextTokenStartSince(pos) {\n    skipWhiteSpace.lastIndex = pos;\n    const skip = skipWhiteSpace.exec(this.input);\n    return pos + skip[0].length;\n  }\n\n  lookaheadCharCode() {\n    return this.input.charCodeAt(this.nextTokenStart());\n  }\n\n  setStrict(strict) {\n    this.state.strict = strict;\n\n    if (strict) {\n      this.state.strictErrors.forEach((message, pos) => this.raise(pos, message));\n      this.state.strictErrors.clear();\n    }\n  }\n\n  curContext() {\n    return this.state.context[this.state.context.length - 1];\n  }\n\n  nextToken() {\n    const curContext = this.curContext();\n    if (!(curContext != null && curContext.preserveSpace)) this.skipSpace();\n    this.state.start = this.state.pos;\n    this.state.startLoc = this.state.curPosition();\n\n    if (this.state.pos >= this.length) {\n      this.finishToken(types.eof);\n      return;\n    }\n\n    const override = curContext == null ? void 0 : curContext.override;\n\n    if (override) {\n      override(this);\n    } else {\n      this.getTokenFromCode(this.input.codePointAt(this.state.pos));\n    }\n  }\n\n  pushComment(block, text, start, end, startLoc, endLoc) {\n    const comment = {\n      type: block ? \"CommentBlock\" : \"CommentLine\",\n      value: text,\n      start: start,\n      end: end,\n      loc: new SourceLocation(startLoc, endLoc)\n    };\n    if (this.options.tokens) this.pushToken(comment);\n    this.state.comments.push(comment);\n    this.addComment(comment);\n  }\n\n  skipBlockComment() {\n    const startLoc = this.state.curPosition();\n    const start = this.state.pos;\n    const end = this.input.indexOf(\"*/\", this.state.pos + 2);\n    if (end === -1) throw this.raise(start, ErrorMessages.UnterminatedComment);\n    this.state.pos = end + 2;\n    lineBreakG.lastIndex = start;\n    let match;\n\n    while ((match = lineBreakG.exec(this.input)) && match.index < this.state.pos) {\n      ++this.state.curLine;\n      this.state.lineStart = match.index + match[0].length;\n    }\n\n    if (this.isLookahead) return;\n    this.pushComment(true, this.input.slice(start + 2, end), start, this.state.pos, startLoc, this.state.curPosition());\n  }\n\n  skipLineComment(startSkip) {\n    const start = this.state.pos;\n    const startLoc = this.state.curPosition();\n    let ch = this.input.charCodeAt(this.state.pos += startSkip);\n\n    if (this.state.pos < this.length) {\n      while (!isNewLine(ch) && ++this.state.pos < this.length) {\n        ch = this.input.charCodeAt(this.state.pos);\n      }\n    }\n\n    if (this.isLookahead) return;\n    this.pushComment(false, this.input.slice(start + startSkip, this.state.pos), start, this.state.pos, startLoc, this.state.curPosition());\n  }\n\n  skipSpace() {\n    loop: while (this.state.pos < this.length) {\n      const ch = this.input.charCodeAt(this.state.pos);\n\n      switch (ch) {\n        case 32:\n        case 160:\n        case 9:\n          ++this.state.pos;\n          break;\n\n        case 13:\n          if (this.input.charCodeAt(this.state.pos + 1) === 10) {\n            ++this.state.pos;\n          }\n\n        case 10:\n        case 8232:\n        case 8233:\n          ++this.state.pos;\n          ++this.state.curLine;\n          this.state.lineStart = this.state.pos;\n          break;\n\n        case 47:\n          switch (this.input.charCodeAt(this.state.pos + 1)) {\n            case 42:\n              this.skipBlockComment();\n              break;\n\n            case 47:\n              this.skipLineComment(2);\n              break;\n\n            default:\n              break loop;\n          }\n\n          break;\n\n        default:\n          if (isWhitespace(ch)) {\n            ++this.state.pos;\n          } else {\n            break loop;\n          }\n\n      }\n    }\n  }\n\n  finishToken(type, val) {\n    this.state.end = this.state.pos;\n    this.state.endLoc = this.state.curPosition();\n    const prevType = this.state.type;\n    this.state.type = type;\n    this.state.value = val;\n    if (!this.isLookahead) this.updateContext(prevType);\n  }\n\n  readToken_numberSign() {\n    if (this.state.pos === 0 && this.readToken_interpreter()) {\n      return;\n    }\n\n    const nextPos = this.state.pos + 1;\n    const next = this.input.charCodeAt(nextPos);\n\n    if (next >= 48 && next <= 57) {\n      throw this.raise(this.state.pos, ErrorMessages.UnexpectedDigitAfterHash);\n    }\n\n    if (next === 123 || next === 91 && this.hasPlugin(\"recordAndTuple\")) {\n      this.expectPlugin(\"recordAndTuple\");\n\n      if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"hash\") {\n        throw this.raise(this.state.pos, next === 123 ? ErrorMessages.RecordExpressionHashIncorrectStartSyntaxType : ErrorMessages.TupleExpressionHashIncorrectStartSyntaxType);\n      }\n\n      if (next === 123) {\n        this.finishToken(types.braceHashL);\n      } else {\n        this.finishToken(types.bracketHashL);\n      }\n\n      this.state.pos += 2;\n    } else {\n      this.finishOp(types.hash, 1);\n    }\n  }\n\n  readToken_dot() {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next >= 48 && next <= 57) {\n      this.readNumber(true);\n      return;\n    }\n\n    if (next === 46 && this.input.charCodeAt(this.state.pos + 2) === 46) {\n      this.state.pos += 3;\n      this.finishToken(types.ellipsis);\n    } else {\n      ++this.state.pos;\n      this.finishToken(types.dot);\n    }\n  }\n\n  readToken_slash() {\n    if (this.state.exprAllowed && !this.state.inType) {\n      ++this.state.pos;\n      this.readRegexp();\n      return;\n    }\n\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next === 61) {\n      this.finishOp(types.assign, 2);\n    } else {\n      this.finishOp(types.slash, 1);\n    }\n  }\n\n  readToken_interpreter() {\n    if (this.state.pos !== 0 || this.length < 2) return false;\n    let ch = this.input.charCodeAt(this.state.pos + 1);\n    if (ch !== 33) return false;\n    const start = this.state.pos;\n    this.state.pos += 1;\n\n    while (!isNewLine(ch) && ++this.state.pos < this.length) {\n      ch = this.input.charCodeAt(this.state.pos);\n    }\n\n    const value = this.input.slice(start + 2, this.state.pos);\n    this.finishToken(types.interpreterDirective, value);\n    return true;\n  }\n\n  readToken_mult_modulo(code) {\n    let type = code === 42 ? types.star : types.modulo;\n    let width = 1;\n    let next = this.input.charCodeAt(this.state.pos + 1);\n    const exprAllowed = this.state.exprAllowed;\n\n    if (code === 42 && next === 42) {\n      width++;\n      next = this.input.charCodeAt(this.state.pos + 2);\n      type = types.exponent;\n    }\n\n    if (next === 61 && !exprAllowed) {\n      width++;\n      type = types.assign;\n    }\n\n    this.finishOp(type, width);\n  }\n\n  readToken_pipe_amp(code) {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next === code) {\n      if (this.input.charCodeAt(this.state.pos + 2) === 61) {\n        this.finishOp(types.assign, 3);\n      } else {\n        this.finishOp(code === 124 ? types.logicalOR : types.logicalAND, 2);\n      }\n\n      return;\n    }\n\n    if (code === 124) {\n      if (next === 62) {\n        this.finishOp(types.pipeline, 2);\n        return;\n      }\n\n      if (this.hasPlugin(\"recordAndTuple\") && next === 125) {\n        if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n          throw this.raise(this.state.pos, ErrorMessages.RecordExpressionBarIncorrectEndSyntaxType);\n        }\n\n        this.finishOp(types.braceBarR, 2);\n        return;\n      }\n\n      if (this.hasPlugin(\"recordAndTuple\") && next === 93) {\n        if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n          throw this.raise(this.state.pos, ErrorMessages.TupleExpressionBarIncorrectEndSyntaxType);\n        }\n\n        this.finishOp(types.bracketBarR, 2);\n        return;\n      }\n    }\n\n    if (next === 61) {\n      this.finishOp(types.assign, 2);\n      return;\n    }\n\n    this.finishOp(code === 124 ? types.bitwiseOR : types.bitwiseAND, 1);\n  }\n\n  readToken_caret() {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next === 61) {\n      this.finishOp(types.assign, 2);\n    } else {\n      this.finishOp(types.bitwiseXOR, 1);\n    }\n  }\n\n  readToken_plus_min(code) {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next === code) {\n      if (next === 45 && !this.inModule && this.input.charCodeAt(this.state.pos + 2) === 62 && (this.state.lastTokEnd === 0 || this.hasPrecedingLineBreak())) {\n        this.skipLineComment(3);\n        this.skipSpace();\n        this.nextToken();\n        return;\n      }\n\n      this.finishOp(types.incDec, 2);\n      return;\n    }\n\n    if (next === 61) {\n      this.finishOp(types.assign, 2);\n    } else {\n      this.finishOp(types.plusMin, 1);\n    }\n  }\n\n  readToken_lt_gt(code) {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n    let size = 1;\n\n    if (next === code) {\n      size = code === 62 && this.input.charCodeAt(this.state.pos + 2) === 62 ? 3 : 2;\n\n      if (this.input.charCodeAt(this.state.pos + size) === 61) {\n        this.finishOp(types.assign, size + 1);\n        return;\n      }\n\n      this.finishOp(types.bitShift, size);\n      return;\n    }\n\n    if (next === 33 && code === 60 && !this.inModule && this.input.charCodeAt(this.state.pos + 2) === 45 && this.input.charCodeAt(this.state.pos + 3) === 45) {\n      this.skipLineComment(4);\n      this.skipSpace();\n      this.nextToken();\n      return;\n    }\n\n    if (next === 61) {\n      size = 2;\n    }\n\n    this.finishOp(types.relational, size);\n  }\n\n  readToken_eq_excl(code) {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next === 61) {\n      this.finishOp(types.equality, this.input.charCodeAt(this.state.pos + 2) === 61 ? 3 : 2);\n      return;\n    }\n\n    if (code === 61 && next === 62) {\n      this.state.pos += 2;\n      this.finishToken(types.arrow);\n      return;\n    }\n\n    this.finishOp(code === 61 ? types.eq : types.bang, 1);\n  }\n\n  readToken_question() {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n    const next2 = this.input.charCodeAt(this.state.pos + 2);\n\n    if (next === 63) {\n      if (next2 === 61) {\n        this.finishOp(types.assign, 3);\n      } else {\n        this.finishOp(types.nullishCoalescing, 2);\n      }\n    } else if (next === 46 && !(next2 >= 48 && next2 <= 57)) {\n      this.state.pos += 2;\n      this.finishToken(types.questionDot);\n    } else {\n      ++this.state.pos;\n      this.finishToken(types.question);\n    }\n  }\n\n  getTokenFromCode(code) {\n    switch (code) {\n      case 46:\n        this.readToken_dot();\n        return;\n\n      case 40:\n        ++this.state.pos;\n        this.finishToken(types.parenL);\n        return;\n\n      case 41:\n        ++this.state.pos;\n        this.finishToken(types.parenR);\n        return;\n\n      case 59:\n        ++this.state.pos;\n        this.finishToken(types.semi);\n        return;\n\n      case 44:\n        ++this.state.pos;\n        this.finishToken(types.comma);\n        return;\n\n      case 91:\n        if (this.hasPlugin(\"recordAndTuple\") && this.input.charCodeAt(this.state.pos + 1) === 124) {\n          if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n            throw this.raise(this.state.pos, ErrorMessages.TupleExpressionBarIncorrectStartSyntaxType);\n          }\n\n          this.finishToken(types.bracketBarL);\n          this.state.pos += 2;\n        } else {\n          ++this.state.pos;\n          this.finishToken(types.bracketL);\n        }\n\n        return;\n\n      case 93:\n        ++this.state.pos;\n        this.finishToken(types.bracketR);\n        return;\n\n      case 123:\n        if (this.hasPlugin(\"recordAndTuple\") && this.input.charCodeAt(this.state.pos + 1) === 124) {\n          if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n            throw this.raise(this.state.pos, ErrorMessages.RecordExpressionBarIncorrectStartSyntaxType);\n          }\n\n          this.finishToken(types.braceBarL);\n          this.state.pos += 2;\n        } else {\n          ++this.state.pos;\n          this.finishToken(types.braceL);\n        }\n\n        return;\n\n      case 125:\n        ++this.state.pos;\n        this.finishToken(types.braceR);\n        return;\n\n      case 58:\n        if (this.hasPlugin(\"functionBind\") && this.input.charCodeAt(this.state.pos + 1) === 58) {\n          this.finishOp(types.doubleColon, 2);\n        } else {\n          ++this.state.pos;\n          this.finishToken(types.colon);\n        }\n\n        return;\n\n      case 63:\n        this.readToken_question();\n        return;\n\n      case 96:\n        ++this.state.pos;\n        this.finishToken(types.backQuote);\n        return;\n\n      case 48:\n        {\n          const next = this.input.charCodeAt(this.state.pos + 1);\n\n          if (next === 120 || next === 88) {\n            this.readRadixNumber(16);\n            return;\n          }\n\n          if (next === 111 || next === 79) {\n            this.readRadixNumber(8);\n            return;\n          }\n\n          if (next === 98 || next === 66) {\n            this.readRadixNumber(2);\n            return;\n          }\n        }\n\n      case 49:\n      case 50:\n      case 51:\n      case 52:\n      case 53:\n      case 54:\n      case 55:\n      case 56:\n      case 57:\n        this.readNumber(false);\n        return;\n\n      case 34:\n      case 39:\n        this.readString(code);\n        return;\n\n      case 47:\n        this.readToken_slash();\n        return;\n\n      case 37:\n      case 42:\n        this.readToken_mult_modulo(code);\n        return;\n\n      case 124:\n      case 38:\n        this.readToken_pipe_amp(code);\n        return;\n\n      case 94:\n        this.readToken_caret();\n        return;\n\n      case 43:\n      case 45:\n        this.readToken_plus_min(code);\n        return;\n\n      case 60:\n      case 62:\n        this.readToken_lt_gt(code);\n        return;\n\n      case 61:\n      case 33:\n        this.readToken_eq_excl(code);\n        return;\n\n      case 126:\n        this.finishOp(types.tilde, 1);\n        return;\n\n      case 64:\n        ++this.state.pos;\n        this.finishToken(types.at);\n        return;\n\n      case 35:\n        this.readToken_numberSign();\n        return;\n\n      case 92:\n        this.readWord();\n        return;\n\n      default:\n        if (isIdentifierStart(code)) {\n          this.readWord();\n          return;\n        }\n\n    }\n\n    throw this.raise(this.state.pos, ErrorMessages.InvalidOrUnexpectedToken, String.fromCodePoint(code));\n  }\n\n  finishOp(type, size) {\n    const str = this.input.slice(this.state.pos, this.state.pos + size);\n    this.state.pos += size;\n    this.finishToken(type, str);\n  }\n\n  readRegexp() {\n    const start = this.state.pos;\n    let escaped, inClass;\n\n    for (;;) {\n      if (this.state.pos >= this.length) {\n        throw this.raise(start, ErrorMessages.UnterminatedRegExp);\n      }\n\n      const ch = this.input.charAt(this.state.pos);\n\n      if (lineBreak.test(ch)) {\n        throw this.raise(start, ErrorMessages.UnterminatedRegExp);\n      }\n\n      if (escaped) {\n        escaped = false;\n      } else {\n        if (ch === \"[\") {\n          inClass = true;\n        } else if (ch === \"]\" && inClass) {\n          inClass = false;\n        } else if (ch === \"/\" && !inClass) {\n          break;\n        }\n\n        escaped = ch === \"\\\\\";\n      }\n\n      ++this.state.pos;\n    }\n\n    const content = this.input.slice(start, this.state.pos);\n    ++this.state.pos;\n    let mods = \"\";\n\n    while (this.state.pos < this.length) {\n      const char = this.input[this.state.pos];\n      const charCode = this.input.codePointAt(this.state.pos);\n\n      if (VALID_REGEX_FLAGS.has(char)) {\n        if (mods.indexOf(char) > -1) {\n          this.raise(this.state.pos + 1, ErrorMessages.DuplicateRegExpFlags);\n        }\n      } else if (isIdentifierChar(charCode) || charCode === 92) {\n        this.raise(this.state.pos + 1, ErrorMessages.MalformedRegExpFlags);\n      } else {\n        break;\n      }\n\n      ++this.state.pos;\n      mods += char;\n    }\n\n    this.finishToken(types.regexp, {\n      pattern: content,\n      flags: mods\n    });\n  }\n\n  readInt(radix, len, forceLen, allowNumSeparator = true) {\n    const start = this.state.pos;\n    const forbiddenSiblings = radix === 16 ? forbiddenNumericSeparatorSiblings.hex : forbiddenNumericSeparatorSiblings.decBinOct;\n    const allowedSiblings = radix === 16 ? allowedNumericSeparatorSiblings.hex : radix === 10 ? allowedNumericSeparatorSiblings.dec : radix === 8 ? allowedNumericSeparatorSiblings.oct : allowedNumericSeparatorSiblings.bin;\n    let invalid = false;\n    let total = 0;\n\n    for (let i = 0, e = len == null ? Infinity : len; i < e; ++i) {\n      const code = this.input.charCodeAt(this.state.pos);\n      let val;\n\n      if (code === 95) {\n        const prev = this.input.charCodeAt(this.state.pos - 1);\n        const next = this.input.charCodeAt(this.state.pos + 1);\n\n        if (allowedSiblings.indexOf(next) === -1) {\n          this.raise(this.state.pos, ErrorMessages.UnexpectedNumericSeparator);\n        } else if (forbiddenSiblings.indexOf(prev) > -1 || forbiddenSiblings.indexOf(next) > -1 || Number.isNaN(next)) {\n          this.raise(this.state.pos, ErrorMessages.UnexpectedNumericSeparator);\n        }\n\n        if (!allowNumSeparator) {\n          this.raise(this.state.pos, ErrorMessages.NumericSeparatorInEscapeSequence);\n        }\n\n        ++this.state.pos;\n        continue;\n      }\n\n      if (code >= 97) {\n        val = code - 97 + 10;\n      } else if (code >= 65) {\n        val = code - 65 + 10;\n      } else if (_isDigit(code)) {\n        val = code - 48;\n      } else {\n        val = Infinity;\n      }\n\n      if (val >= radix) {\n        if (this.options.errorRecovery && val <= 9) {\n          val = 0;\n          this.raise(this.state.start + i + 2, ErrorMessages.InvalidDigit, radix);\n        } else if (forceLen) {\n          val = 0;\n          invalid = true;\n        } else {\n          break;\n        }\n      }\n\n      ++this.state.pos;\n      total = total * radix + val;\n    }\n\n    if (this.state.pos === start || len != null && this.state.pos - start !== len || invalid) {\n      return null;\n    }\n\n    return total;\n  }\n\n  readRadixNumber(radix) {\n    const start = this.state.pos;\n    let isBigInt = false;\n    this.state.pos += 2;\n    const val = this.readInt(radix);\n\n    if (val == null) {\n      this.raise(this.state.start + 2, ErrorMessages.InvalidDigit, radix);\n    }\n\n    const next = this.input.charCodeAt(this.state.pos);\n\n    if (next === 110) {\n      ++this.state.pos;\n      isBigInt = true;\n    } else if (next === 109) {\n      throw this.raise(start, ErrorMessages.InvalidDecimal);\n    }\n\n    if (isIdentifierStart(this.input.codePointAt(this.state.pos))) {\n      throw this.raise(this.state.pos, ErrorMessages.NumberIdentifier);\n    }\n\n    if (isBigInt) {\n      const str = this.input.slice(start, this.state.pos).replace(/[_n]/g, \"\");\n      this.finishToken(types.bigint, str);\n      return;\n    }\n\n    this.finishToken(types.num, val);\n  }\n\n  readNumber(startsWithDot) {\n    const start = this.state.pos;\n    let isFloat = false;\n    let isBigInt = false;\n    let isDecimal = false;\n    let hasExponent = false;\n    let isOctal = false;\n\n    if (!startsWithDot && this.readInt(10) === null) {\n      this.raise(start, ErrorMessages.InvalidNumber);\n    }\n\n    const hasLeadingZero = this.state.pos - start >= 2 && this.input.charCodeAt(start) === 48;\n\n    if (hasLeadingZero) {\n      const integer = this.input.slice(start, this.state.pos);\n      this.recordStrictModeErrors(start, ErrorMessages.StrictOctalLiteral);\n\n      if (!this.state.strict) {\n        const underscorePos = integer.indexOf(\"_\");\n\n        if (underscorePos > 0) {\n          this.raise(underscorePos + start, ErrorMessages.ZeroDigitNumericSeparator);\n        }\n      }\n\n      isOctal = hasLeadingZero && !/[89]/.test(integer);\n    }\n\n    let next = this.input.charCodeAt(this.state.pos);\n\n    if (next === 46 && !isOctal) {\n      ++this.state.pos;\n      this.readInt(10);\n      isFloat = true;\n      next = this.input.charCodeAt(this.state.pos);\n    }\n\n    if ((next === 69 || next === 101) && !isOctal) {\n      next = this.input.charCodeAt(++this.state.pos);\n\n      if (next === 43 || next === 45) {\n        ++this.state.pos;\n      }\n\n      if (this.readInt(10) === null) {\n        this.raise(start, ErrorMessages.InvalidOrMissingExponent);\n      }\n\n      isFloat = true;\n      hasExponent = true;\n      next = this.input.charCodeAt(this.state.pos);\n    }\n\n    if (next === 110) {\n      if (isFloat || hasLeadingZero) {\n        this.raise(start, ErrorMessages.InvalidBigIntLiteral);\n      }\n\n      ++this.state.pos;\n      isBigInt = true;\n    }\n\n    if (next === 109) {\n      this.expectPlugin(\"decimal\", this.state.pos);\n\n      if (hasExponent || hasLeadingZero) {\n        this.raise(start, ErrorMessages.InvalidDecimal);\n      }\n\n      ++this.state.pos;\n      isDecimal = true;\n    }\n\n    if (isIdentifierStart(this.input.codePointAt(this.state.pos))) {\n      throw this.raise(this.state.pos, ErrorMessages.NumberIdentifier);\n    }\n\n    const str = this.input.slice(start, this.state.pos).replace(/[_mn]/g, \"\");\n\n    if (isBigInt) {\n      this.finishToken(types.bigint, str);\n      return;\n    }\n\n    if (isDecimal) {\n      this.finishToken(types.decimal, str);\n      return;\n    }\n\n    const val = isOctal ? parseInt(str, 8) : parseFloat(str);\n    this.finishToken(types.num, val);\n  }\n\n  readCodePoint(throwOnInvalid) {\n    const ch = this.input.charCodeAt(this.state.pos);\n    let code;\n\n    if (ch === 123) {\n      const codePos = ++this.state.pos;\n      code = this.readHexChar(this.input.indexOf(\"}\", this.state.pos) - this.state.pos, true, throwOnInvalid);\n      ++this.state.pos;\n\n      if (code !== null && code > 0x10ffff) {\n        if (throwOnInvalid) {\n          this.raise(codePos, ErrorMessages.InvalidCodePoint);\n        } else {\n          return null;\n        }\n      }\n    } else {\n      code = this.readHexChar(4, false, throwOnInvalid);\n    }\n\n    return code;\n  }\n\n  readString(quote) {\n    let out = \"\",\n        chunkStart = ++this.state.pos;\n\n    for (;;) {\n      if (this.state.pos >= this.length) {\n        throw this.raise(this.state.start, ErrorMessages.UnterminatedString);\n      }\n\n      const ch = this.input.charCodeAt(this.state.pos);\n      if (ch === quote) break;\n\n      if (ch === 92) {\n        out += this.input.slice(chunkStart, this.state.pos);\n        out += this.readEscapedChar(false);\n        chunkStart = this.state.pos;\n      } else if (ch === 8232 || ch === 8233) {\n        ++this.state.pos;\n        ++this.state.curLine;\n        this.state.lineStart = this.state.pos;\n      } else if (isNewLine(ch)) {\n        throw this.raise(this.state.start, ErrorMessages.UnterminatedString);\n      } else {\n        ++this.state.pos;\n      }\n    }\n\n    out += this.input.slice(chunkStart, this.state.pos++);\n    this.finishToken(types.string, out);\n  }\n\n  readTmplToken() {\n    let out = \"\",\n        chunkStart = this.state.pos,\n        containsInvalid = false;\n\n    for (;;) {\n      if (this.state.pos >= this.length) {\n        throw this.raise(this.state.start, ErrorMessages.UnterminatedTemplate);\n      }\n\n      const ch = this.input.charCodeAt(this.state.pos);\n\n      if (ch === 96 || ch === 36 && this.input.charCodeAt(this.state.pos + 1) === 123) {\n        if (this.state.pos === this.state.start && this.match(types.template)) {\n          if (ch === 36) {\n            this.state.pos += 2;\n            this.finishToken(types.dollarBraceL);\n            return;\n          } else {\n            ++this.state.pos;\n            this.finishToken(types.backQuote);\n            return;\n          }\n        }\n\n        out += this.input.slice(chunkStart, this.state.pos);\n        this.finishToken(types.template, containsInvalid ? null : out);\n        return;\n      }\n\n      if (ch === 92) {\n        out += this.input.slice(chunkStart, this.state.pos);\n        const escaped = this.readEscapedChar(true);\n\n        if (escaped === null) {\n          containsInvalid = true;\n        } else {\n          out += escaped;\n        }\n\n        chunkStart = this.state.pos;\n      } else if (isNewLine(ch)) {\n        out += this.input.slice(chunkStart, this.state.pos);\n        ++this.state.pos;\n\n        switch (ch) {\n          case 13:\n            if (this.input.charCodeAt(this.state.pos) === 10) {\n              ++this.state.pos;\n            }\n\n          case 10:\n            out += \"\\n\";\n            break;\n\n          default:\n            out += String.fromCharCode(ch);\n            break;\n        }\n\n        ++this.state.curLine;\n        this.state.lineStart = this.state.pos;\n        chunkStart = this.state.pos;\n      } else {\n        ++this.state.pos;\n      }\n    }\n  }\n\n  recordStrictModeErrors(pos, message) {\n    if (this.state.strict && !this.state.strictErrors.has(pos)) {\n      this.raise(pos, message);\n    } else {\n      this.state.strictErrors.set(pos, message);\n    }\n  }\n\n  readEscapedChar(inTemplate) {\n    const throwOnInvalid = !inTemplate;\n    const ch = this.input.charCodeAt(++this.state.pos);\n    ++this.state.pos;\n\n    switch (ch) {\n      case 110:\n        return \"\\n\";\n\n      case 114:\n        return \"\\r\";\n\n      case 120:\n        {\n          const code = this.readHexChar(2, false, throwOnInvalid);\n          return code === null ? null : String.fromCharCode(code);\n        }\n\n      case 117:\n        {\n          const code = this.readCodePoint(throwOnInvalid);\n          return code === null ? null : String.fromCodePoint(code);\n        }\n\n      case 116:\n        return \"\\t\";\n\n      case 98:\n        return \"\\b\";\n\n      case 118:\n        return \"\\u000b\";\n\n      case 102:\n        return \"\\f\";\n\n      case 13:\n        if (this.input.charCodeAt(this.state.pos) === 10) {\n          ++this.state.pos;\n        }\n\n      case 10:\n        this.state.lineStart = this.state.pos;\n        ++this.state.curLine;\n\n      case 8232:\n      case 8233:\n        return \"\";\n\n      case 56:\n      case 57:\n        if (inTemplate) {\n          return null;\n        } else {\n          this.recordStrictModeErrors(this.state.pos - 1, ErrorMessages.StrictNumericEscape);\n        }\n\n      default:\n        if (ch >= 48 && ch <= 55) {\n          const codePos = this.state.pos - 1;\n          const match = this.input.substr(this.state.pos - 1, 3).match(/^[0-7]+/);\n          let octalStr = match[0];\n          let octal = parseInt(octalStr, 8);\n\n          if (octal > 255) {\n            octalStr = octalStr.slice(0, -1);\n            octal = parseInt(octalStr, 8);\n          }\n\n          this.state.pos += octalStr.length - 1;\n          const next = this.input.charCodeAt(this.state.pos);\n\n          if (octalStr !== \"0\" || next === 56 || next === 57) {\n            if (inTemplate) {\n              return null;\n            } else {\n              this.recordStrictModeErrors(codePos, ErrorMessages.StrictNumericEscape);\n            }\n          }\n\n          return String.fromCharCode(octal);\n        }\n\n        return String.fromCharCode(ch);\n    }\n  }\n\n  readHexChar(len, forceLen, throwOnInvalid) {\n    const codePos = this.state.pos;\n    const n = this.readInt(16, len, forceLen, false);\n\n    if (n === null) {\n      if (throwOnInvalid) {\n        this.raise(codePos, ErrorMessages.InvalidEscapeSequence);\n      } else {\n        this.state.pos = codePos - 1;\n      }\n    }\n\n    return n;\n  }\n\n  readWord1() {\n    let word = \"\";\n    this.state.containsEsc = false;\n    const start = this.state.pos;\n    let chunkStart = this.state.pos;\n\n    while (this.state.pos < this.length) {\n      const ch = this.input.codePointAt(this.state.pos);\n\n      if (isIdentifierChar(ch)) {\n        this.state.pos += ch <= 0xffff ? 1 : 2;\n      } else if (this.state.isIterator && ch === 64) {\n        ++this.state.pos;\n      } else if (ch === 92) {\n        this.state.containsEsc = true;\n        word += this.input.slice(chunkStart, this.state.pos);\n        const escStart = this.state.pos;\n        const identifierCheck = this.state.pos === start ? isIdentifierStart : isIdentifierChar;\n\n        if (this.input.charCodeAt(++this.state.pos) !== 117) {\n          this.raise(this.state.pos, ErrorMessages.MissingUnicodeEscape);\n          continue;\n        }\n\n        ++this.state.pos;\n        const esc = this.readCodePoint(true);\n\n        if (esc !== null) {\n          if (!identifierCheck(esc)) {\n            this.raise(escStart, ErrorMessages.EscapedCharNotAnIdentifier);\n          }\n\n          word += String.fromCodePoint(esc);\n        }\n\n        chunkStart = this.state.pos;\n      } else {\n        break;\n      }\n    }\n\n    return word + this.input.slice(chunkStart, this.state.pos);\n  }\n\n  isIterator(word) {\n    return word === \"@@iterator\" || word === \"@@asyncIterator\";\n  }\n\n  readWord() {\n    const word = this.readWord1();\n    const type = keywords.get(word) || types.name;\n\n    if (this.state.isIterator && (!this.isIterator(word) || !this.state.inType)) {\n      this.raise(this.state.pos, ErrorMessages.InvalidIdentifier, word);\n    }\n\n    this.finishToken(type, word);\n  }\n\n  checkKeywordEscapes() {\n    const kw = this.state.type.keyword;\n\n    if (kw && this.state.containsEsc) {\n      this.raise(this.state.start, ErrorMessages.InvalidEscapedReservedWord, kw);\n    }\n  }\n\n  braceIsBlock(prevType) {\n    const parent = this.curContext();\n\n    if (parent === types$1.functionExpression || parent === types$1.functionStatement) {\n      return true;\n    }\n\n    if (prevType === types.colon && (parent === types$1.braceStatement || parent === types$1.braceExpression)) {\n      return !parent.isExpr;\n    }\n\n    if (prevType === types._return || prevType === types.name && this.state.exprAllowed) {\n      return this.hasPrecedingLineBreak();\n    }\n\n    if (prevType === types._else || prevType === types.semi || prevType === types.eof || prevType === types.parenR || prevType === types.arrow) {\n      return true;\n    }\n\n    if (prevType === types.braceL) {\n      return parent === types$1.braceStatement;\n    }\n\n    if (prevType === types._var || prevType === types._const || prevType === types.name) {\n      return false;\n    }\n\n    if (prevType === types.relational) {\n      return true;\n    }\n\n    return !this.state.exprAllowed;\n  }\n\n  updateContext(prevType) {\n    const type = this.state.type;\n    let update;\n\n    if (type.keyword && (prevType === types.dot || prevType === types.questionDot)) {\n      this.state.exprAllowed = false;\n    } else if (update = type.updateContext) {\n      update.call(this, prevType);\n    } else {\n      this.state.exprAllowed = type.beforeExpr;\n    }\n  }\n\n}\n\nclass ClassScope {\n  constructor() {\n    this.privateNames = new Set();\n    this.loneAccessors = new Map();\n    this.undefinedPrivateNames = new Map();\n  }\n\n}\nclass ClassScopeHandler {\n  constructor(raise) {\n    this.stack = [];\n    this.undefinedPrivateNames = new Map();\n    this.raise = raise;\n  }\n\n  current() {\n    return this.stack[this.stack.length - 1];\n  }\n\n  enter() {\n    this.stack.push(new ClassScope());\n  }\n\n  exit() {\n    const oldClassScope = this.stack.pop();\n    const current = this.current();\n\n    for (const [name, pos] of Array.from(oldClassScope.undefinedPrivateNames)) {\n      if (current) {\n        if (!current.undefinedPrivateNames.has(name)) {\n          current.undefinedPrivateNames.set(name, pos);\n        }\n      } else {\n        this.raise(pos, ErrorMessages.InvalidPrivateFieldResolution, name);\n      }\n    }\n  }\n\n  declarePrivateName(name, elementType, pos) {\n    const classScope = this.current();\n    let redefined = classScope.privateNames.has(name);\n\n    if (elementType & CLASS_ELEMENT_KIND_ACCESSOR) {\n      const accessor = redefined && classScope.loneAccessors.get(name);\n\n      if (accessor) {\n        const oldStatic = accessor & CLASS_ELEMENT_FLAG_STATIC;\n        const newStatic = elementType & CLASS_ELEMENT_FLAG_STATIC;\n        const oldKind = accessor & CLASS_ELEMENT_KIND_ACCESSOR;\n        const newKind = elementType & CLASS_ELEMENT_KIND_ACCESSOR;\n        redefined = oldKind === newKind || oldStatic !== newStatic;\n        if (!redefined) classScope.loneAccessors.delete(name);\n      } else if (!redefined) {\n        classScope.loneAccessors.set(name, elementType);\n      }\n    }\n\n    if (redefined) {\n      this.raise(pos, ErrorMessages.PrivateNameRedeclaration, name);\n    }\n\n    classScope.privateNames.add(name);\n    classScope.undefinedPrivateNames.delete(name);\n  }\n\n  usePrivateName(name, pos) {\n    let classScope;\n\n    for (classScope of this.stack) {\n      if (classScope.privateNames.has(name)) return;\n    }\n\n    if (classScope) {\n      classScope.undefinedPrivateNames.set(name, pos);\n    } else {\n      this.raise(pos, ErrorMessages.InvalidPrivateFieldResolution, name);\n    }\n  }\n\n}\n\nconst kExpression = 0,\n      kMaybeArrowParameterDeclaration = 1,\n      kMaybeAsyncArrowParameterDeclaration = 2,\n      kParameterDeclaration = 3;\n\nclass ExpressionScope {\n  constructor(type = kExpression) {\n    this.type = void 0;\n    this.type = type;\n  }\n\n  canBeArrowParameterDeclaration() {\n    return this.type === kMaybeAsyncArrowParameterDeclaration || this.type === kMaybeArrowParameterDeclaration;\n  }\n\n  isCertainlyParameterDeclaration() {\n    return this.type === kParameterDeclaration;\n  }\n\n}\n\nclass ArrowHeadParsingScope extends ExpressionScope {\n  constructor(type) {\n    super(type);\n    this.errors = new Map();\n  }\n\n  recordDeclarationError(pos, template) {\n    this.errors.set(pos, template);\n  }\n\n  clearDeclarationError(pos) {\n    this.errors.delete(pos);\n  }\n\n  iterateErrors(iterator) {\n    this.errors.forEach(iterator);\n  }\n\n}\n\nclass ExpressionScopeHandler {\n  constructor(raise) {\n    this.stack = [new ExpressionScope()];\n    this.raise = raise;\n  }\n\n  enter(scope) {\n    this.stack.push(scope);\n  }\n\n  exit() {\n    this.stack.pop();\n  }\n\n  recordParameterInitializerError(pos, template) {\n    const {\n      stack\n    } = this;\n    let i = stack.length - 1;\n    let scope = stack[i];\n\n    while (!scope.isCertainlyParameterDeclaration()) {\n      if (scope.canBeArrowParameterDeclaration()) {\n        scope.recordDeclarationError(pos, template);\n      } else {\n        return;\n      }\n\n      scope = stack[--i];\n    }\n\n    this.raise(pos, template);\n  }\n\n  recordParenthesizedIdentifierError(pos, template) {\n    const {\n      stack\n    } = this;\n    const scope = stack[stack.length - 1];\n\n    if (scope.isCertainlyParameterDeclaration()) {\n      this.raise(pos, template);\n    } else if (scope.canBeArrowParameterDeclaration()) {\n      scope.recordDeclarationError(pos, template);\n    } else {\n      return;\n    }\n  }\n\n  recordAsyncArrowParametersError(pos, template) {\n    const {\n      stack\n    } = this;\n    let i = stack.length - 1;\n    let scope = stack[i];\n\n    while (scope.canBeArrowParameterDeclaration()) {\n      if (scope.type === kMaybeAsyncArrowParameterDeclaration) {\n        scope.recordDeclarationError(pos, template);\n      }\n\n      scope = stack[--i];\n    }\n  }\n\n  validateAsPattern() {\n    const {\n      stack\n    } = this;\n    const currentScope = stack[stack.length - 1];\n    if (!currentScope.canBeArrowParameterDeclaration()) return;\n    currentScope.iterateErrors((template, pos) => {\n      this.raise(pos, template);\n      let i = stack.length - 2;\n      let scope = stack[i];\n\n      while (scope.canBeArrowParameterDeclaration()) {\n        scope.clearDeclarationError(pos);\n        scope = stack[--i];\n      }\n    });\n  }\n\n}\nfunction newParameterDeclarationScope() {\n  return new ExpressionScope(kParameterDeclaration);\n}\nfunction newArrowHeadScope() {\n  return new ArrowHeadParsingScope(kMaybeArrowParameterDeclaration);\n}\nfunction newAsyncArrowScope() {\n  return new ArrowHeadParsingScope(kMaybeAsyncArrowParameterDeclaration);\n}\nfunction newExpressionScope() {\n  return new ExpressionScope();\n}\n\nclass UtilParser extends Tokenizer {\n  addExtra(node, key, val) {\n    if (!node) return;\n    const extra = node.extra = node.extra || {};\n    extra[key] = val;\n  }\n\n  isRelational(op) {\n    return this.match(types.relational) && this.state.value === op;\n  }\n\n  expectRelational(op) {\n    if (this.isRelational(op)) {\n      this.next();\n    } else {\n      this.unexpected(null, types.relational);\n    }\n  }\n\n  isContextual(name) {\n    return this.match(types.name) && this.state.value === name && !this.state.containsEsc;\n  }\n\n  isUnparsedContextual(nameStart, name) {\n    const nameEnd = nameStart + name.length;\n    return this.input.slice(nameStart, nameEnd) === name && (nameEnd === this.input.length || !isIdentifierChar(this.input.charCodeAt(nameEnd)));\n  }\n\n  isLookaheadContextual(name) {\n    const next = this.nextTokenStart();\n    return this.isUnparsedContextual(next, name);\n  }\n\n  eatContextual(name) {\n    return this.isContextual(name) && this.eat(types.name);\n  }\n\n  expectContextual(name, template) {\n    if (!this.eatContextual(name)) this.unexpected(null, template);\n  }\n\n  canInsertSemicolon() {\n    return this.match(types.eof) || this.match(types.braceR) || this.hasPrecedingLineBreak();\n  }\n\n  hasPrecedingLineBreak() {\n    return lineBreak.test(this.input.slice(this.state.lastTokEnd, this.state.start));\n  }\n\n  hasFollowingLineBreak() {\n    return lineBreak.test(this.input.slice(this.state.end, this.nextTokenStart()));\n  }\n\n  isLineTerminator() {\n    return this.eat(types.semi) || this.canInsertSemicolon();\n  }\n\n  semicolon(allowAsi = true) {\n    if (allowAsi ? this.isLineTerminator() : this.eat(types.semi)) return;\n    this.raise(this.state.lastTokEnd, ErrorMessages.MissingSemicolon);\n  }\n\n  expect(type, pos) {\n    this.eat(type) || this.unexpected(pos, type);\n  }\n\n  assertNoSpace(message = \"Unexpected space.\") {\n    if (this.state.start > this.state.lastTokEnd) {\n      this.raise(this.state.lastTokEnd, {\n        code: ErrorCodes.SyntaxError,\n        reasonCode: \"UnexpectedSpace\",\n        template: message\n      });\n    }\n  }\n\n  unexpected(pos, messageOrType = {\n    code: ErrorCodes.SyntaxError,\n    reasonCode: \"UnexpectedToken\",\n    template: \"Unexpected token\"\n  }) {\n    if (messageOrType instanceof TokenType) {\n      messageOrType = {\n        code: ErrorCodes.SyntaxError,\n        reasonCode: \"UnexpectedToken\",\n        template: `Unexpected token, expected \"${messageOrType.label}\"`\n      };\n    }\n\n    throw this.raise(pos != null ? pos : this.state.start, messageOrType);\n  }\n\n  expectPlugin(name, pos) {\n    if (!this.hasPlugin(name)) {\n      throw this.raiseWithData(pos != null ? pos : this.state.start, {\n        missingPlugin: [name]\n      }, `This experimental syntax requires enabling the parser plugin: '${name}'`);\n    }\n\n    return true;\n  }\n\n  expectOnePlugin(names, pos) {\n    if (!names.some(n => this.hasPlugin(n))) {\n      throw this.raiseWithData(pos != null ? pos : this.state.start, {\n        missingPlugin: names\n      }, `This experimental syntax requires enabling one of the following parser plugin(s): '${names.join(\", \")}'`);\n    }\n  }\n\n  tryParse(fn, oldState = this.state.clone()) {\n    const abortSignal = {\n      node: null\n    };\n\n    try {\n      const node = fn((node = null) => {\n        abortSignal.node = node;\n        throw abortSignal;\n      });\n\n      if (this.state.errors.length > oldState.errors.length) {\n        const failState = this.state;\n        this.state = oldState;\n        return {\n          node,\n          error: failState.errors[oldState.errors.length],\n          thrown: false,\n          aborted: false,\n          failState\n        };\n      }\n\n      return {\n        node,\n        error: null,\n        thrown: false,\n        aborted: false,\n        failState: null\n      };\n    } catch (error) {\n      const failState = this.state;\n      this.state = oldState;\n\n      if (error instanceof SyntaxError) {\n        return {\n          node: null,\n          error,\n          thrown: true,\n          aborted: false,\n          failState\n        };\n      }\n\n      if (error === abortSignal) {\n        return {\n          node: abortSignal.node,\n          error: null,\n          thrown: false,\n          aborted: true,\n          failState\n        };\n      }\n\n      throw error;\n    }\n  }\n\n  checkExpressionErrors(refExpressionErrors, andThrow) {\n    if (!refExpressionErrors) return false;\n    const {\n      shorthandAssign,\n      doubleProto\n    } = refExpressionErrors;\n    if (!andThrow) return shorthandAssign >= 0 || doubleProto >= 0;\n\n    if (shorthandAssign >= 0) {\n      this.unexpected(shorthandAssign);\n    }\n\n    if (doubleProto >= 0) {\n      this.raise(doubleProto, ErrorMessages.DuplicateProto);\n    }\n  }\n\n  isLiteralPropertyName() {\n    return this.match(types.name) || !!this.state.type.keyword || this.match(types.string) || this.match(types.num) || this.match(types.bigint) || this.match(types.decimal);\n  }\n\n  isPrivateName(node) {\n    return node.type === \"PrivateName\";\n  }\n\n  getPrivateNameSV(node) {\n    return node.id.name;\n  }\n\n  hasPropertyAsPrivateName(node) {\n    return (node.type === \"MemberExpression\" || node.type === \"OptionalMemberExpression\") && this.isPrivateName(node.property);\n  }\n\n  isOptionalChain(node) {\n    return node.type === \"OptionalMemberExpression\" || node.type === \"OptionalCallExpression\";\n  }\n\n  isObjectProperty(node) {\n    return node.type === \"ObjectProperty\";\n  }\n\n  isObjectMethod(node) {\n    return node.type === \"ObjectMethod\";\n  }\n\n  initializeScopes(inModule = this.options.sourceType === \"module\") {\n    const oldLabels = this.state.labels;\n    this.state.labels = [];\n    const oldExportedIdentifiers = this.state.exportedIdentifiers;\n    this.state.exportedIdentifiers = [];\n    const oldInModule = this.inModule;\n    this.inModule = inModule;\n    const oldScope = this.scope;\n    const ScopeHandler = this.getScopeHandler();\n    this.scope = new ScopeHandler(this.raise.bind(this), this.inModule);\n    const oldProdParam = this.prodParam;\n    this.prodParam = new ProductionParameterHandler();\n    const oldClassScope = this.classScope;\n    this.classScope = new ClassScopeHandler(this.raise.bind(this));\n    const oldExpressionScope = this.expressionScope;\n    this.expressionScope = new ExpressionScopeHandler(this.raise.bind(this));\n    return () => {\n      this.state.labels = oldLabels;\n      this.state.exportedIdentifiers = oldExportedIdentifiers;\n      this.inModule = oldInModule;\n      this.scope = oldScope;\n      this.prodParam = oldProdParam;\n      this.classScope = oldClassScope;\n      this.expressionScope = oldExpressionScope;\n    };\n  }\n\n  enterInitialScopes() {\n    let paramFlags = PARAM;\n\n    if (this.hasPlugin(\"topLevelAwait\") && this.inModule) {\n      paramFlags |= PARAM_AWAIT;\n    }\n\n    this.scope.enter(SCOPE_PROGRAM);\n    this.prodParam.enter(paramFlags);\n  }\n\n}\nclass ExpressionErrors {\n  constructor() {\n    this.shorthandAssign = -1;\n    this.doubleProto = -1;\n  }\n\n}\n\nclass Node {\n  constructor(parser, pos, loc) {\n    this.type = void 0;\n    this.start = void 0;\n    this.end = void 0;\n    this.loc = void 0;\n    this.range = void 0;\n    this.leadingComments = void 0;\n    this.trailingComments = void 0;\n    this.innerComments = void 0;\n    this.extra = void 0;\n    this.type = \"\";\n    this.start = pos;\n    this.end = 0;\n    this.loc = new SourceLocation(loc);\n    if (parser != null && parser.options.ranges) this.range = [pos, 0];\n    if (parser != null && parser.filename) this.loc.filename = parser.filename;\n  }\n\n  __clone() {\n    const newNode = new Node();\n    const keys = Object.keys(this);\n\n    for (let i = 0, length = keys.length; i < length; i++) {\n      const key = keys[i];\n\n      if (key !== \"leadingComments\" && key !== \"trailingComments\" && key !== \"innerComments\") {\n        newNode[key] = this[key];\n      }\n    }\n\n    return newNode;\n  }\n\n}\n\nclass NodeUtils extends UtilParser {\n  startNode() {\n    return new Node(this, this.state.start, this.state.startLoc);\n  }\n\n  startNodeAt(pos, loc) {\n    return new Node(this, pos, loc);\n  }\n\n  startNodeAtNode(type) {\n    return this.startNodeAt(type.start, type.loc.start);\n  }\n\n  finishNode(node, type) {\n    return this.finishNodeAt(node, type, this.state.lastTokEnd, this.state.lastTokEndLoc);\n  }\n\n  finishNodeAt(node, type, pos, loc) {\n\n    node.type = type;\n    node.end = pos;\n    node.loc.end = loc;\n    if (this.options.ranges) node.range[1] = pos;\n    this.processComment(node);\n    return node;\n  }\n\n  resetStartLocation(node, start, startLoc) {\n    node.start = start;\n    node.loc.start = startLoc;\n    if (this.options.ranges) node.range[0] = start;\n  }\n\n  resetEndLocation(node, end = this.state.lastTokEnd, endLoc = this.state.lastTokEndLoc) {\n    node.end = end;\n    node.loc.end = endLoc;\n    if (this.options.ranges) node.range[1] = end;\n  }\n\n  resetStartLocationFromNode(node, locationNode) {\n    this.resetStartLocation(node, locationNode.start, locationNode.loc.start);\n  }\n\n}\n\nconst unwrapParenthesizedExpression = node => {\n  return node.type === \"ParenthesizedExpression\" ? unwrapParenthesizedExpression(node.expression) : node;\n};\n\nclass LValParser extends NodeUtils {\n  toAssignable(node, isLHS = false) {\n    var _node$extra, _node$extra3;\n\n    let parenthesized = undefined;\n\n    if (node.type === \"ParenthesizedExpression\" || (_node$extra = node.extra) != null && _node$extra.parenthesized) {\n      parenthesized = unwrapParenthesizedExpression(node);\n\n      if (isLHS) {\n        if (parenthesized.type === \"Identifier\") {\n          this.expressionScope.recordParenthesizedIdentifierError(node.start, ErrorMessages.InvalidParenthesizedAssignment);\n        } else if (parenthesized.type !== \"MemberExpression\") {\n          this.raise(node.start, ErrorMessages.InvalidParenthesizedAssignment);\n        }\n      } else {\n        this.raise(node.start, ErrorMessages.InvalidParenthesizedAssignment);\n      }\n    }\n\n    switch (node.type) {\n      case \"Identifier\":\n      case \"ObjectPattern\":\n      case \"ArrayPattern\":\n      case \"AssignmentPattern\":\n        break;\n\n      case \"ObjectExpression\":\n        node.type = \"ObjectPattern\";\n\n        for (let i = 0, length = node.properties.length, last = length - 1; i < length; i++) {\n          var _node$extra2;\n\n          const prop = node.properties[i];\n          const isLast = i === last;\n          this.toAssignableObjectExpressionProp(prop, isLast, isLHS);\n\n          if (isLast && prop.type === \"RestElement\" && (_node$extra2 = node.extra) != null && _node$extra2.trailingComma) {\n            this.raiseRestNotLast(node.extra.trailingComma);\n          }\n        }\n\n        break;\n\n      case \"ObjectProperty\":\n        this.toAssignable(node.value, isLHS);\n        break;\n\n      case \"SpreadElement\":\n        {\n          this.checkToRestConversion(node);\n          node.type = \"RestElement\";\n          const arg = node.argument;\n          this.toAssignable(arg, isLHS);\n          break;\n        }\n\n      case \"ArrayExpression\":\n        node.type = \"ArrayPattern\";\n        this.toAssignableList(node.elements, (_node$extra3 = node.extra) == null ? void 0 : _node$extra3.trailingComma, isLHS);\n        break;\n\n      case \"AssignmentExpression\":\n        if (node.operator !== \"=\") {\n          this.raise(node.left.end, ErrorMessages.MissingEqInAssignment);\n        }\n\n        node.type = \"AssignmentPattern\";\n        delete node.operator;\n        this.toAssignable(node.left, isLHS);\n        break;\n\n      case \"ParenthesizedExpression\":\n        this.toAssignable(parenthesized, isLHS);\n        break;\n    }\n\n    return node;\n  }\n\n  toAssignableObjectExpressionProp(prop, isLast, isLHS) {\n    if (prop.type === \"ObjectMethod\") {\n      const error = prop.kind === \"get\" || prop.kind === \"set\" ? ErrorMessages.PatternHasAccessor : ErrorMessages.PatternHasMethod;\n      this.raise(prop.key.start, error);\n    } else if (prop.type === \"SpreadElement\" && !isLast) {\n      this.raiseRestNotLast(prop.start);\n    } else {\n      this.toAssignable(prop, isLHS);\n    }\n  }\n\n  toAssignableList(exprList, trailingCommaPos, isLHS) {\n    let end = exprList.length;\n\n    if (end) {\n      const last = exprList[end - 1];\n\n      if ((last == null ? void 0 : last.type) === \"RestElement\") {\n        --end;\n      } else if ((last == null ? void 0 : last.type) === \"SpreadElement\") {\n        last.type = \"RestElement\";\n        let arg = last.argument;\n        this.toAssignable(arg, isLHS);\n        arg = unwrapParenthesizedExpression(arg);\n\n        if (arg.type !== \"Identifier\" && arg.type !== \"MemberExpression\" && arg.type !== \"ArrayPattern\" && arg.type !== \"ObjectPattern\") {\n          this.unexpected(arg.start);\n        }\n\n        if (trailingCommaPos) {\n          this.raiseTrailingCommaAfterRest(trailingCommaPos);\n        }\n\n        --end;\n      }\n    }\n\n    for (let i = 0; i < end; i++) {\n      const elt = exprList[i];\n\n      if (elt) {\n        this.toAssignable(elt, isLHS);\n\n        if (elt.type === \"RestElement\") {\n          this.raiseRestNotLast(elt.start);\n        }\n      }\n    }\n\n    return exprList;\n  }\n\n  toReferencedList(exprList, isParenthesizedExpr) {\n    return exprList;\n  }\n\n  toReferencedListDeep(exprList, isParenthesizedExpr) {\n    this.toReferencedList(exprList, isParenthesizedExpr);\n\n    for (const expr of exprList) {\n      if ((expr == null ? void 0 : expr.type) === \"ArrayExpression\") {\n        this.toReferencedListDeep(expr.elements);\n      }\n    }\n  }\n\n  parseSpread(refExpressionErrors, refNeedsArrowPos) {\n    const node = this.startNode();\n    this.next();\n    node.argument = this.parseMaybeAssignAllowIn(refExpressionErrors, undefined, refNeedsArrowPos);\n    return this.finishNode(node, \"SpreadElement\");\n  }\n\n  parseRestBinding() {\n    const node = this.startNode();\n    this.next();\n    node.argument = this.parseBindingAtom();\n    return this.finishNode(node, \"RestElement\");\n  }\n\n  parseBindingAtom() {\n    switch (this.state.type) {\n      case types.bracketL:\n        {\n          const node = this.startNode();\n          this.next();\n          node.elements = this.parseBindingList(types.bracketR, 93, true);\n          return this.finishNode(node, \"ArrayPattern\");\n        }\n\n      case types.braceL:\n        return this.parseObjectLike(types.braceR, true);\n    }\n\n    return this.parseIdentifier();\n  }\n\n  parseBindingList(close, closeCharCode, allowEmpty, allowModifiers) {\n    const elts = [];\n    let first = true;\n\n    while (!this.eat(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(types.comma);\n      }\n\n      if (allowEmpty && this.match(types.comma)) {\n        elts.push(null);\n      } else if (this.eat(close)) {\n        break;\n      } else if (this.match(types.ellipsis)) {\n        elts.push(this.parseAssignableListItemTypes(this.parseRestBinding()));\n        this.checkCommaAfterRest(closeCharCode);\n        this.expect(close);\n        break;\n      } else {\n        const decorators = [];\n\n        if (this.match(types.at) && this.hasPlugin(\"decorators\")) {\n          this.raise(this.state.start, ErrorMessages.UnsupportedParameterDecorator);\n        }\n\n        while (this.match(types.at)) {\n          decorators.push(this.parseDecorator());\n        }\n\n        elts.push(this.parseAssignableListItem(allowModifiers, decorators));\n      }\n    }\n\n    return elts;\n  }\n\n  parseAssignableListItem(allowModifiers, decorators) {\n    const left = this.parseMaybeDefault();\n    this.parseAssignableListItemTypes(left);\n    const elt = this.parseMaybeDefault(left.start, left.loc.start, left);\n\n    if (decorators.length) {\n      left.decorators = decorators;\n    }\n\n    return elt;\n  }\n\n  parseAssignableListItemTypes(param) {\n    return param;\n  }\n\n  parseMaybeDefault(startPos, startLoc, left) {\n    var _startLoc, _startPos, _left;\n\n    startLoc = (_startLoc = startLoc) != null ? _startLoc : this.state.startLoc;\n    startPos = (_startPos = startPos) != null ? _startPos : this.state.start;\n    left = (_left = left) != null ? _left : this.parseBindingAtom();\n    if (!this.eat(types.eq)) return left;\n    const node = this.startNodeAt(startPos, startLoc);\n    node.left = left;\n    node.right = this.parseMaybeAssignAllowIn();\n    return this.finishNode(node, \"AssignmentPattern\");\n  }\n\n  checkLVal(expr, contextDescription, bindingType = BIND_NONE, checkClashes, disallowLetBinding, strictModeChanged = false) {\n    switch (expr.type) {\n      case \"Identifier\":\n        {\n          const {\n            name\n          } = expr;\n\n          if (this.state.strict && (strictModeChanged ? isStrictBindReservedWord(name, this.inModule) : isStrictBindOnlyReservedWord(name))) {\n            this.raise(expr.start, bindingType === BIND_NONE ? ErrorMessages.StrictEvalArguments : ErrorMessages.StrictEvalArgumentsBinding, name);\n          }\n\n          if (checkClashes) {\n            if (checkClashes.has(name)) {\n              this.raise(expr.start, ErrorMessages.ParamDupe);\n            } else {\n              checkClashes.add(name);\n            }\n          }\n\n          if (disallowLetBinding && name === \"let\") {\n            this.raise(expr.start, ErrorMessages.LetInLexicalBinding);\n          }\n\n          if (!(bindingType & BIND_NONE)) {\n            this.scope.declareName(name, bindingType, expr.start);\n          }\n\n          break;\n        }\n\n      case \"MemberExpression\":\n        if (bindingType !== BIND_NONE) {\n          this.raise(expr.start, ErrorMessages.InvalidPropertyBindingPattern);\n        }\n\n        break;\n\n      case \"ObjectPattern\":\n        for (let prop of expr.properties) {\n          if (this.isObjectProperty(prop)) prop = prop.value;else if (this.isObjectMethod(prop)) continue;\n          this.checkLVal(prop, \"object destructuring pattern\", bindingType, checkClashes, disallowLetBinding);\n        }\n\n        break;\n\n      case \"ArrayPattern\":\n        for (const elem of expr.elements) {\n          if (elem) {\n            this.checkLVal(elem, \"array destructuring pattern\", bindingType, checkClashes, disallowLetBinding);\n          }\n        }\n\n        break;\n\n      case \"AssignmentPattern\":\n        this.checkLVal(expr.left, \"assignment pattern\", bindingType, checkClashes);\n        break;\n\n      case \"RestElement\":\n        this.checkLVal(expr.argument, \"rest element\", bindingType, checkClashes);\n        break;\n\n      case \"ParenthesizedExpression\":\n        this.checkLVal(expr.expression, \"parenthesized expression\", bindingType, checkClashes);\n        break;\n\n      default:\n        {\n          this.raise(expr.start, bindingType === BIND_NONE ? ErrorMessages.InvalidLhs : ErrorMessages.InvalidLhsBinding, contextDescription);\n        }\n    }\n  }\n\n  checkToRestConversion(node) {\n    if (node.argument.type !== \"Identifier\" && node.argument.type !== \"MemberExpression\") {\n      this.raise(node.argument.start, ErrorMessages.InvalidRestAssignmentPattern);\n    }\n  }\n\n  checkCommaAfterRest(close) {\n    if (this.match(types.comma)) {\n      if (this.lookaheadCharCode() === close) {\n        this.raiseTrailingCommaAfterRest(this.state.start);\n      } else {\n        this.raiseRestNotLast(this.state.start);\n      }\n    }\n  }\n\n  raiseRestNotLast(pos) {\n    throw this.raise(pos, ErrorMessages.ElementAfterRest);\n  }\n\n  raiseTrailingCommaAfterRest(pos) {\n    this.raise(pos, ErrorMessages.RestTrailingComma);\n  }\n\n}\n\nclass ExpressionParser extends LValParser {\n  checkProto(prop, isRecord, protoRef, refExpressionErrors) {\n    if (prop.type === \"SpreadElement\" || this.isObjectMethod(prop) || prop.computed || prop.shorthand) {\n      return;\n    }\n\n    const key = prop.key;\n    const name = key.type === \"Identifier\" ? key.name : key.value;\n\n    if (name === \"__proto__\") {\n      if (isRecord) {\n        this.raise(key.start, ErrorMessages.RecordNoProto);\n        return;\n      }\n\n      if (protoRef.used) {\n        if (refExpressionErrors) {\n          if (refExpressionErrors.doubleProto === -1) {\n            refExpressionErrors.doubleProto = key.start;\n          }\n        } else {\n          this.raise(key.start, ErrorMessages.DuplicateProto);\n        }\n      }\n\n      protoRef.used = true;\n    }\n  }\n\n  shouldExitDescending(expr, potentialArrowAt) {\n    return expr.type === \"ArrowFunctionExpression\" && expr.start === potentialArrowAt;\n  }\n\n  getExpression() {\n    let paramFlags = PARAM;\n\n    if (this.hasPlugin(\"topLevelAwait\") && this.inModule) {\n      paramFlags |= PARAM_AWAIT;\n    }\n\n    this.scope.enter(SCOPE_PROGRAM);\n    this.prodParam.enter(paramFlags);\n    this.nextToken();\n    const expr = this.parseExpression();\n\n    if (!this.match(types.eof)) {\n      this.unexpected();\n    }\n\n    expr.comments = this.state.comments;\n    expr.errors = this.state.errors;\n\n    if (this.options.tokens) {\n      expr.tokens = this.tokens;\n    }\n\n    return expr;\n  }\n\n  parseExpression(disallowIn, refExpressionErrors) {\n    if (disallowIn) {\n      return this.disallowInAnd(() => this.parseExpressionBase(refExpressionErrors));\n    }\n\n    return this.allowInAnd(() => this.parseExpressionBase(refExpressionErrors));\n  }\n\n  parseExpressionBase(refExpressionErrors) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const expr = this.parseMaybeAssign(refExpressionErrors);\n\n    if (this.match(types.comma)) {\n      const node = this.startNodeAt(startPos, startLoc);\n      node.expressions = [expr];\n\n      while (this.eat(types.comma)) {\n        node.expressions.push(this.parseMaybeAssign(refExpressionErrors));\n      }\n\n      this.toReferencedList(node.expressions);\n      return this.finishNode(node, \"SequenceExpression\");\n    }\n\n    return expr;\n  }\n\n  parseMaybeAssignDisallowIn(refExpressionErrors, afterLeftParse, refNeedsArrowPos) {\n    return this.disallowInAnd(() => this.parseMaybeAssign(refExpressionErrors, afterLeftParse, refNeedsArrowPos));\n  }\n\n  parseMaybeAssignAllowIn(refExpressionErrors, afterLeftParse, refNeedsArrowPos) {\n    return this.allowInAnd(() => this.parseMaybeAssign(refExpressionErrors, afterLeftParse, refNeedsArrowPos));\n  }\n\n  parseMaybeAssign(refExpressionErrors, afterLeftParse, refNeedsArrowPos) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n\n    if (this.isContextual(\"yield\")) {\n      if (this.prodParam.hasYield) {\n        this.state.exprAllowed = true;\n        let left = this.parseYield();\n\n        if (afterLeftParse) {\n          left = afterLeftParse.call(this, left, startPos, startLoc);\n        }\n\n        return left;\n      }\n    }\n\n    let ownExpressionErrors;\n\n    if (refExpressionErrors) {\n      ownExpressionErrors = false;\n    } else {\n      refExpressionErrors = new ExpressionErrors();\n      ownExpressionErrors = true;\n    }\n\n    if (this.match(types.parenL) || this.match(types.name)) {\n      this.state.potentialArrowAt = this.state.start;\n    }\n\n    let left = this.parseMaybeConditional(refExpressionErrors, refNeedsArrowPos);\n\n    if (afterLeftParse) {\n      left = afterLeftParse.call(this, left, startPos, startLoc);\n    }\n\n    if (this.state.type.isAssign) {\n      const node = this.startNodeAt(startPos, startLoc);\n      const operator = this.state.value;\n      node.operator = operator;\n\n      if (this.match(types.eq)) {\n        node.left = this.toAssignable(left, true);\n        refExpressionErrors.doubleProto = -1;\n      } else {\n        node.left = left;\n      }\n\n      if (refExpressionErrors.shorthandAssign >= node.left.start) {\n        refExpressionErrors.shorthandAssign = -1;\n      }\n\n      this.checkLVal(left, \"assignment expression\");\n      this.next();\n      node.right = this.parseMaybeAssign();\n      return this.finishNode(node, \"AssignmentExpression\");\n    } else if (ownExpressionErrors) {\n      this.checkExpressionErrors(refExpressionErrors, true);\n    }\n\n    return left;\n  }\n\n  parseMaybeConditional(refExpressionErrors, refNeedsArrowPos) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const potentialArrowAt = this.state.potentialArrowAt;\n    const expr = this.parseExprOps(refExpressionErrors);\n\n    if (this.shouldExitDescending(expr, potentialArrowAt)) {\n      return expr;\n    }\n\n    return this.parseConditional(expr, startPos, startLoc, refNeedsArrowPos);\n  }\n\n  parseConditional(expr, startPos, startLoc, refNeedsArrowPos) {\n    if (this.eat(types.question)) {\n      const node = this.startNodeAt(startPos, startLoc);\n      node.test = expr;\n      node.consequent = this.parseMaybeAssignAllowIn();\n      this.expect(types.colon);\n      node.alternate = this.parseMaybeAssign();\n      return this.finishNode(node, \"ConditionalExpression\");\n    }\n\n    return expr;\n  }\n\n  parseExprOps(refExpressionErrors) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const potentialArrowAt = this.state.potentialArrowAt;\n    const expr = this.parseMaybeUnary(refExpressionErrors);\n\n    if (this.shouldExitDescending(expr, potentialArrowAt)) {\n      return expr;\n    }\n\n    return this.parseExprOp(expr, startPos, startLoc, -1);\n  }\n\n  parseExprOp(left, leftStartPos, leftStartLoc, minPrec) {\n    let prec = this.state.type.binop;\n\n    if (prec != null && (this.prodParam.hasIn || !this.match(types._in))) {\n      if (prec > minPrec) {\n        const op = this.state.type;\n\n        if (op === types.pipeline) {\n          this.expectPlugin(\"pipelineOperator\");\n\n          if (this.state.inFSharpPipelineDirectBody) {\n            return left;\n          }\n\n          this.state.inPipeline = true;\n          this.checkPipelineAtInfixOperator(left, leftStartPos);\n        }\n\n        const node = this.startNodeAt(leftStartPos, leftStartLoc);\n        node.left = left;\n        node.operator = this.state.value;\n        const logical = op === types.logicalOR || op === types.logicalAND;\n        const coalesce = op === types.nullishCoalescing;\n\n        if (coalesce) {\n          prec = types.logicalAND.binop;\n        }\n\n        this.next();\n\n        if (op === types.pipeline && this.getPluginOption(\"pipelineOperator\", \"proposal\") === \"minimal\") {\n          if (this.match(types.name) && this.state.value === \"await\" && this.prodParam.hasAwait) {\n            throw this.raise(this.state.start, ErrorMessages.UnexpectedAwaitAfterPipelineBody);\n          }\n        }\n\n        node.right = this.parseExprOpRightExpr(op, prec);\n        this.finishNode(node, logical || coalesce ? \"LogicalExpression\" : \"BinaryExpression\");\n        const nextOp = this.state.type;\n\n        if (coalesce && (nextOp === types.logicalOR || nextOp === types.logicalAND) || logical && nextOp === types.nullishCoalescing) {\n          throw this.raise(this.state.start, ErrorMessages.MixingCoalesceWithLogical);\n        }\n\n        return this.parseExprOp(node, leftStartPos, leftStartLoc, minPrec);\n      }\n    }\n\n    return left;\n  }\n\n  parseExprOpRightExpr(op, prec) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n\n    switch (op) {\n      case types.pipeline:\n        switch (this.getPluginOption(\"pipelineOperator\", \"proposal\")) {\n          case \"smart\":\n            return this.withTopicPermittingContext(() => {\n              return this.parseSmartPipelineBody(this.parseExprOpBaseRightExpr(op, prec), startPos, startLoc);\n            });\n\n          case \"fsharp\":\n            return this.withSoloAwaitPermittingContext(() => {\n              return this.parseFSharpPipelineBody(prec);\n            });\n        }\n\n      default:\n        return this.parseExprOpBaseRightExpr(op, prec);\n    }\n  }\n\n  parseExprOpBaseRightExpr(op, prec) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    return this.parseExprOp(this.parseMaybeUnary(), startPos, startLoc, op.rightAssociative ? prec - 1 : prec);\n  }\n\n  checkExponentialAfterUnary(node) {\n    if (this.match(types.exponent)) {\n      this.raise(node.argument.start, ErrorMessages.UnexpectedTokenUnaryExponentiation);\n    }\n  }\n\n  parseMaybeUnary(refExpressionErrors, sawUnary) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const isAwait = this.isContextual(\"await\");\n\n    if (isAwait && this.isAwaitAllowed()) {\n      this.next();\n      const expr = this.parseAwait(startPos, startLoc);\n      if (!sawUnary) this.checkExponentialAfterUnary(expr);\n      return expr;\n    }\n\n    if (this.isContextual(\"module\") && this.lookaheadCharCode() === 123 && !this.hasFollowingLineBreak()) {\n      return this.parseModuleExpression();\n    }\n\n    const update = this.match(types.incDec);\n    const node = this.startNode();\n\n    if (this.state.type.prefix) {\n      node.operator = this.state.value;\n      node.prefix = true;\n\n      if (this.match(types._throw)) {\n        this.expectPlugin(\"throwExpressions\");\n      }\n\n      const isDelete = this.match(types._delete);\n      this.next();\n      node.argument = this.parseMaybeUnary(null, true);\n      this.checkExpressionErrors(refExpressionErrors, true);\n\n      if (this.state.strict && isDelete) {\n        const arg = node.argument;\n\n        if (arg.type === \"Identifier\") {\n          this.raise(node.start, ErrorMessages.StrictDelete);\n        } else if (this.hasPropertyAsPrivateName(arg)) {\n          this.raise(node.start, ErrorMessages.DeletePrivateField);\n        }\n      }\n\n      if (!update) {\n        if (!sawUnary) this.checkExponentialAfterUnary(node);\n        return this.finishNode(node, \"UnaryExpression\");\n      }\n    }\n\n    const expr = this.parseUpdate(node, update, refExpressionErrors);\n\n    if (isAwait) {\n      const startsExpr = this.hasPlugin(\"v8intrinsic\") ? this.state.type.startsExpr : this.state.type.startsExpr && !this.match(types.modulo);\n\n      if (startsExpr && !this.isAmbiguousAwait()) {\n        this.raiseOverwrite(startPos, this.hasPlugin(\"topLevelAwait\") ? ErrorMessages.AwaitNotInAsyncContext : ErrorMessages.AwaitNotInAsyncFunction);\n        return this.parseAwait(startPos, startLoc);\n      }\n    }\n\n    return expr;\n  }\n\n  parseUpdate(node, update, refExpressionErrors) {\n    if (update) {\n      this.checkLVal(node.argument, \"prefix operation\");\n      return this.finishNode(node, \"UpdateExpression\");\n    }\n\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    let expr = this.parseExprSubscripts(refExpressionErrors);\n    if (this.checkExpressionErrors(refExpressionErrors, false)) return expr;\n\n    while (this.state.type.postfix && !this.canInsertSemicolon()) {\n      const node = this.startNodeAt(startPos, startLoc);\n      node.operator = this.state.value;\n      node.prefix = false;\n      node.argument = expr;\n      this.checkLVal(expr, \"postfix operation\");\n      this.next();\n      expr = this.finishNode(node, \"UpdateExpression\");\n    }\n\n    return expr;\n  }\n\n  parseExprSubscripts(refExpressionErrors) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const potentialArrowAt = this.state.potentialArrowAt;\n    const expr = this.parseExprAtom(refExpressionErrors);\n\n    if (this.shouldExitDescending(expr, potentialArrowAt)) {\n      return expr;\n    }\n\n    return this.parseSubscripts(expr, startPos, startLoc);\n  }\n\n  parseSubscripts(base, startPos, startLoc, noCalls) {\n    const state = {\n      optionalChainMember: false,\n      maybeAsyncArrow: this.atPossibleAsyncArrow(base),\n      stop: false\n    };\n\n    do {\n      base = this.parseSubscript(base, startPos, startLoc, noCalls, state);\n      state.maybeAsyncArrow = false;\n    } while (!state.stop);\n\n    return base;\n  }\n\n  parseSubscript(base, startPos, startLoc, noCalls, state) {\n    if (!noCalls && this.eat(types.doubleColon)) {\n      return this.parseBind(base, startPos, startLoc, noCalls, state);\n    } else if (this.match(types.backQuote)) {\n      return this.parseTaggedTemplateExpression(base, startPos, startLoc, state);\n    }\n\n    let optional = false;\n\n    if (this.match(types.questionDot)) {\n      if (noCalls && this.lookaheadCharCode() === 40) {\n        state.stop = true;\n        return base;\n      }\n\n      state.optionalChainMember = optional = true;\n      this.next();\n    }\n\n    if (!noCalls && this.match(types.parenL)) {\n      return this.parseCoverCallAndAsyncArrowHead(base, startPos, startLoc, state, optional);\n    } else if (optional || this.match(types.bracketL) || this.eat(types.dot)) {\n      return this.parseMember(base, startPos, startLoc, state, optional);\n    } else {\n      state.stop = true;\n      return base;\n    }\n  }\n\n  parseMember(base, startPos, startLoc, state, optional) {\n    const node = this.startNodeAt(startPos, startLoc);\n    const computed = this.eat(types.bracketL);\n    node.object = base;\n    node.computed = computed;\n    const property = computed ? this.parseExpression() : this.parseMaybePrivateName(true);\n\n    if (this.isPrivateName(property)) {\n      if (node.object.type === \"Super\") {\n        this.raise(startPos, ErrorMessages.SuperPrivateField);\n      }\n\n      this.classScope.usePrivateName(this.getPrivateNameSV(property), property.start);\n    }\n\n    node.property = property;\n\n    if (computed) {\n      this.expect(types.bracketR);\n    }\n\n    if (state.optionalChainMember) {\n      node.optional = optional;\n      return this.finishNode(node, \"OptionalMemberExpression\");\n    } else {\n      return this.finishNode(node, \"MemberExpression\");\n    }\n  }\n\n  parseBind(base, startPos, startLoc, noCalls, state) {\n    const node = this.startNodeAt(startPos, startLoc);\n    node.object = base;\n    node.callee = this.parseNoCallExpr();\n    state.stop = true;\n    return this.parseSubscripts(this.finishNode(node, \"BindExpression\"), startPos, startLoc, noCalls);\n  }\n\n  parseCoverCallAndAsyncArrowHead(base, startPos, startLoc, state, optional) {\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n    this.state.maybeInArrowParameters = true;\n    this.next();\n    let node = this.startNodeAt(startPos, startLoc);\n    node.callee = base;\n\n    if (state.maybeAsyncArrow) {\n      this.expressionScope.enter(newAsyncArrowScope());\n    }\n\n    if (state.optionalChainMember) {\n      node.optional = optional;\n    }\n\n    if (optional) {\n      node.arguments = this.parseCallExpressionArguments(types.parenR, false);\n    } else {\n      node.arguments = this.parseCallExpressionArguments(types.parenR, state.maybeAsyncArrow, base.type === \"Import\", base.type !== \"Super\", node);\n    }\n\n    this.finishCallExpression(node, state.optionalChainMember);\n\n    if (state.maybeAsyncArrow && this.shouldParseAsyncArrow() && !optional) {\n      state.stop = true;\n      this.expressionScope.validateAsPattern();\n      this.expressionScope.exit();\n      node = this.parseAsyncArrowFromCallExpression(this.startNodeAt(startPos, startLoc), node);\n    } else {\n      if (state.maybeAsyncArrow) {\n        this.expressionScope.exit();\n      }\n\n      this.toReferencedArguments(node);\n    }\n\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n    return node;\n  }\n\n  toReferencedArguments(node, isParenthesizedExpr) {\n    this.toReferencedListDeep(node.arguments, isParenthesizedExpr);\n  }\n\n  parseTaggedTemplateExpression(base, startPos, startLoc, state) {\n    const node = this.startNodeAt(startPos, startLoc);\n    node.tag = base;\n    node.quasi = this.parseTemplate(true);\n\n    if (state.optionalChainMember) {\n      this.raise(startPos, ErrorMessages.OptionalChainingNoTemplate);\n    }\n\n    return this.finishNode(node, \"TaggedTemplateExpression\");\n  }\n\n  atPossibleAsyncArrow(base) {\n    return base.type === \"Identifier\" && base.name === \"async\" && this.state.lastTokEnd === base.end && !this.canInsertSemicolon() && base.end - base.start === 5 && base.start === this.state.potentialArrowAt;\n  }\n\n  finishCallExpression(node, optional) {\n    if (node.callee.type === \"Import\") {\n      if (node.arguments.length === 2) {\n        if (!this.hasPlugin(\"moduleAttributes\")) {\n          this.expectPlugin(\"importAssertions\");\n        }\n      }\n\n      if (node.arguments.length === 0 || node.arguments.length > 2) {\n        this.raise(node.start, ErrorMessages.ImportCallArity, this.hasPlugin(\"importAssertions\") || this.hasPlugin(\"moduleAttributes\") ? \"one or two arguments\" : \"one argument\");\n      } else {\n        for (const arg of node.arguments) {\n          if (arg.type === \"SpreadElement\") {\n            this.raise(arg.start, ErrorMessages.ImportCallSpreadArgument);\n          }\n        }\n      }\n    }\n\n    return this.finishNode(node, optional ? \"OptionalCallExpression\" : \"CallExpression\");\n  }\n\n  parseCallExpressionArguments(close, possibleAsyncArrow, dynamicImport, allowPlaceholder, nodeForExtra) {\n    const elts = [];\n    let first = true;\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = false;\n\n    while (!this.eat(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(types.comma);\n\n        if (this.match(close)) {\n          if (dynamicImport && !this.hasPlugin(\"importAssertions\") && !this.hasPlugin(\"moduleAttributes\")) {\n            this.raise(this.state.lastTokStart, ErrorMessages.ImportCallArgumentTrailingComma);\n          }\n\n          if (nodeForExtra) {\n            this.addExtra(nodeForExtra, \"trailingComma\", this.state.lastTokStart);\n          }\n\n          this.next();\n          break;\n        }\n      }\n\n      elts.push(this.parseExprListItem(false, possibleAsyncArrow ? new ExpressionErrors() : undefined, possibleAsyncArrow ? {\n        start: 0\n      } : undefined, allowPlaceholder));\n    }\n\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n    return elts;\n  }\n\n  shouldParseAsyncArrow() {\n    return this.match(types.arrow) && !this.canInsertSemicolon();\n  }\n\n  parseAsyncArrowFromCallExpression(node, call) {\n    var _call$extra;\n\n    this.expect(types.arrow);\n    this.parseArrowExpression(node, call.arguments, true, (_call$extra = call.extra) == null ? void 0 : _call$extra.trailingComma);\n    return node;\n  }\n\n  parseNoCallExpr() {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    return this.parseSubscripts(this.parseExprAtom(), startPos, startLoc, true);\n  }\n\n  parseExprAtom(refExpressionErrors) {\n    if (this.state.type === types.slash) this.readRegexp();\n    const canBeArrow = this.state.potentialArrowAt === this.state.start;\n    let node;\n\n    switch (this.state.type) {\n      case types._super:\n        return this.parseSuper();\n\n      case types._import:\n        node = this.startNode();\n        this.next();\n\n        if (this.match(types.dot)) {\n          return this.parseImportMetaProperty(node);\n        }\n\n        if (!this.match(types.parenL)) {\n          this.raise(this.state.lastTokStart, ErrorMessages.UnsupportedImport);\n        }\n\n        return this.finishNode(node, \"Import\");\n\n      case types._this:\n        node = this.startNode();\n        this.next();\n        return this.finishNode(node, \"ThisExpression\");\n\n      case types.name:\n        {\n          const containsEsc = this.state.containsEsc;\n          const id = this.parseIdentifier();\n\n          if (!containsEsc && id.name === \"async\" && !this.canInsertSemicolon()) {\n            if (this.match(types._function)) {\n              const last = this.state.context.length - 1;\n\n              if (this.state.context[last] !== types$1.functionStatement) {\n                throw new Error(\"Internal error\");\n              }\n\n              this.state.context[last] = types$1.functionExpression;\n              this.next();\n              return this.parseFunction(this.startNodeAtNode(id), undefined, true);\n            } else if (this.match(types.name)) {\n              if (this.lookaheadCharCode() === 61) {\n                return this.parseAsyncArrowUnaryFunction(id);\n              } else {\n                return id;\n              }\n            } else if (this.match(types._do)) {\n              return this.parseDo(true);\n            }\n          }\n\n          if (canBeArrow && this.match(types.arrow) && !this.canInsertSemicolon()) {\n            this.next();\n            return this.parseArrowExpression(this.startNodeAtNode(id), [id], false);\n          }\n\n          return id;\n        }\n\n      case types._do:\n        {\n          return this.parseDo(false);\n        }\n\n      case types.regexp:\n        {\n          const value = this.state.value;\n          node = this.parseLiteral(value.value, \"RegExpLiteral\");\n          node.pattern = value.pattern;\n          node.flags = value.flags;\n          return node;\n        }\n\n      case types.num:\n        return this.parseLiteral(this.state.value, \"NumericLiteral\");\n\n      case types.bigint:\n        return this.parseLiteral(this.state.value, \"BigIntLiteral\");\n\n      case types.decimal:\n        return this.parseLiteral(this.state.value, \"DecimalLiteral\");\n\n      case types.string:\n        return this.parseLiteral(this.state.value, \"StringLiteral\");\n\n      case types._null:\n        node = this.startNode();\n        this.next();\n        return this.finishNode(node, \"NullLiteral\");\n\n      case types._true:\n      case types._false:\n        return this.parseBooleanLiteral();\n\n      case types.parenL:\n        return this.parseParenAndDistinguishExpression(canBeArrow);\n\n      case types.bracketBarL:\n      case types.bracketHashL:\n        {\n          return this.parseArrayLike(this.state.type === types.bracketBarL ? types.bracketBarR : types.bracketR, false, true, refExpressionErrors);\n        }\n\n      case types.bracketL:\n        {\n          return this.parseArrayLike(types.bracketR, true, false, refExpressionErrors);\n        }\n\n      case types.braceBarL:\n      case types.braceHashL:\n        {\n          return this.parseObjectLike(this.state.type === types.braceBarL ? types.braceBarR : types.braceR, false, true, refExpressionErrors);\n        }\n\n      case types.braceL:\n        {\n          return this.parseObjectLike(types.braceR, false, false, refExpressionErrors);\n        }\n\n      case types._function:\n        return this.parseFunctionOrFunctionSent();\n\n      case types.at:\n        this.parseDecorators();\n\n      case types._class:\n        node = this.startNode();\n        this.takeDecorators(node);\n        return this.parseClass(node, false);\n\n      case types._new:\n        return this.parseNewOrNewTarget();\n\n      case types.backQuote:\n        return this.parseTemplate(false);\n\n      case types.doubleColon:\n        {\n          node = this.startNode();\n          this.next();\n          node.object = null;\n          const callee = node.callee = this.parseNoCallExpr();\n\n          if (callee.type === \"MemberExpression\") {\n            return this.finishNode(node, \"BindExpression\");\n          } else {\n            throw this.raise(callee.start, ErrorMessages.UnsupportedBind);\n          }\n        }\n\n      case types.hash:\n        {\n          if (this.state.inPipeline) {\n            node = this.startNode();\n\n            if (this.getPluginOption(\"pipelineOperator\", \"proposal\") !== \"smart\") {\n              this.raise(node.start, ErrorMessages.PrimaryTopicRequiresSmartPipeline);\n            }\n\n            this.next();\n\n            if (!this.primaryTopicReferenceIsAllowedInCurrentTopicContext()) {\n              this.raise(node.start, ErrorMessages.PrimaryTopicNotAllowed);\n            }\n\n            this.registerTopicReference();\n            return this.finishNode(node, \"PipelinePrimaryTopicReference\");\n          }\n\n          const nextCh = this.input.codePointAt(this.state.end);\n\n          if (isIdentifierStart(nextCh) || nextCh === 92) {\n            const start = this.state.start;\n            node = this.parseMaybePrivateName(true);\n\n            if (this.match(types._in)) {\n              this.expectPlugin(\"privateIn\");\n              this.classScope.usePrivateName(this.getPrivateNameSV(node), node.start);\n            } else if (this.hasPlugin(\"privateIn\")) {\n              this.raise(this.state.start, ErrorMessages.PrivateInExpectedIn, this.getPrivateNameSV(node));\n            } else {\n              throw this.unexpected(start);\n            }\n\n            return node;\n          }\n        }\n\n      case types.relational:\n        {\n          if (this.state.value === \"<\") {\n            const lookaheadCh = this.input.codePointAt(this.nextTokenStart());\n\n            if (isIdentifierStart(lookaheadCh) || lookaheadCh === 62) {\n                this.expectOnePlugin([\"jsx\", \"flow\", \"typescript\"]);\n              }\n          }\n        }\n\n      default:\n        throw this.unexpected();\n    }\n  }\n\n  parseAsyncArrowUnaryFunction(id) {\n    const node = this.startNodeAtNode(id);\n    this.prodParam.enter(functionFlags(true, this.prodParam.hasYield));\n    const params = [this.parseIdentifier()];\n    this.prodParam.exit();\n\n    if (this.hasPrecedingLineBreak()) {\n      this.raise(this.state.pos, ErrorMessages.LineTerminatorBeforeArrow);\n    }\n\n    this.expect(types.arrow);\n    this.parseArrowExpression(node, params, true);\n    return node;\n  }\n\n  parseDo(isAsync) {\n    this.expectPlugin(\"doExpressions\");\n\n    if (isAsync) {\n      this.expectPlugin(\"asyncDoExpressions\");\n    }\n\n    const node = this.startNode();\n    node.async = isAsync;\n    this.next();\n    const oldLabels = this.state.labels;\n    this.state.labels = [];\n\n    if (isAsync) {\n      this.prodParam.enter(PARAM_AWAIT);\n      node.body = this.parseBlock();\n      this.prodParam.exit();\n    } else {\n      node.body = this.parseBlock();\n    }\n\n    this.state.labels = oldLabels;\n    return this.finishNode(node, \"DoExpression\");\n  }\n\n  parseSuper() {\n    const node = this.startNode();\n    this.next();\n\n    if (this.match(types.parenL) && !this.scope.allowDirectSuper && !this.options.allowSuperOutsideMethod) {\n      this.raise(node.start, ErrorMessages.SuperNotAllowed);\n    } else if (!this.scope.allowSuper && !this.options.allowSuperOutsideMethod) {\n      this.raise(node.start, ErrorMessages.UnexpectedSuper);\n    }\n\n    if (!this.match(types.parenL) && !this.match(types.bracketL) && !this.match(types.dot)) {\n      this.raise(node.start, ErrorMessages.UnsupportedSuper);\n    }\n\n    return this.finishNode(node, \"Super\");\n  }\n\n  parseBooleanLiteral() {\n    const node = this.startNode();\n    node.value = this.match(types._true);\n    this.next();\n    return this.finishNode(node, \"BooleanLiteral\");\n  }\n\n  parseMaybePrivateName(isPrivateNameAllowed) {\n    const isPrivate = this.match(types.hash);\n\n    if (isPrivate) {\n      if (!isPrivateNameAllowed) {\n        this.raise(this.state.pos, ErrorMessages.UnexpectedPrivateField);\n      }\n\n      const node = this.startNode();\n      this.next();\n      this.assertNoSpace(\"Unexpected space between # and identifier\");\n      node.id = this.parseIdentifier(true);\n      return this.finishNode(node, \"PrivateName\");\n    } else {\n      return this.parseIdentifier(true);\n    }\n  }\n\n  parseFunctionOrFunctionSent() {\n    const node = this.startNode();\n    this.next();\n\n    if (this.prodParam.hasYield && this.match(types.dot)) {\n      const meta = this.createIdentifier(this.startNodeAtNode(node), \"function\");\n      this.next();\n      return this.parseMetaProperty(node, meta, \"sent\");\n    }\n\n    return this.parseFunction(node);\n  }\n\n  parseMetaProperty(node, meta, propertyName) {\n    node.meta = meta;\n\n    if (meta.name === \"function\" && propertyName === \"sent\") {\n      if (this.isContextual(propertyName)) {\n        this.expectPlugin(\"functionSent\");\n      } else if (!this.hasPlugin(\"functionSent\")) {\n        this.unexpected();\n      }\n    }\n\n    const containsEsc = this.state.containsEsc;\n    node.property = this.parseIdentifier(true);\n\n    if (node.property.name !== propertyName || containsEsc) {\n      this.raise(node.property.start, ErrorMessages.UnsupportedMetaProperty, meta.name, propertyName);\n    }\n\n    return this.finishNode(node, \"MetaProperty\");\n  }\n\n  parseImportMetaProperty(node) {\n    const id = this.createIdentifier(this.startNodeAtNode(node), \"import\");\n    this.next();\n\n    if (this.isContextual(\"meta\")) {\n      if (!this.inModule) {\n        this.raise(id.start, SourceTypeModuleErrorMessages.ImportMetaOutsideModule);\n      }\n\n      this.sawUnambiguousESM = true;\n    }\n\n    return this.parseMetaProperty(node, id, \"meta\");\n  }\n\n  parseLiteral(value, type, startPos, startLoc) {\n    startPos = startPos || this.state.start;\n    startLoc = startLoc || this.state.startLoc;\n    const node = this.startNodeAt(startPos, startLoc);\n    this.addExtra(node, \"rawValue\", value);\n    this.addExtra(node, \"raw\", this.input.slice(startPos, this.state.end));\n    node.value = value;\n    this.next();\n    return this.finishNode(node, type);\n  }\n\n  parseParenAndDistinguishExpression(canBeArrow) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    let val;\n    this.next();\n    this.expressionScope.enter(newArrowHeadScope());\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.maybeInArrowParameters = true;\n    this.state.inFSharpPipelineDirectBody = false;\n    const innerStartPos = this.state.start;\n    const innerStartLoc = this.state.startLoc;\n    const exprList = [];\n    const refExpressionErrors = new ExpressionErrors();\n    const refNeedsArrowPos = {\n      start: 0\n    };\n    let first = true;\n    let spreadStart;\n    let optionalCommaStart;\n\n    while (!this.match(types.parenR)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(types.comma, refNeedsArrowPos.start || null);\n\n        if (this.match(types.parenR)) {\n          optionalCommaStart = this.state.start;\n          break;\n        }\n      }\n\n      if (this.match(types.ellipsis)) {\n        const spreadNodeStartPos = this.state.start;\n        const spreadNodeStartLoc = this.state.startLoc;\n        spreadStart = this.state.start;\n        exprList.push(this.parseParenItem(this.parseRestBinding(), spreadNodeStartPos, spreadNodeStartLoc));\n        this.checkCommaAfterRest(41);\n        break;\n      } else {\n        exprList.push(this.parseMaybeAssignAllowIn(refExpressionErrors, this.parseParenItem, refNeedsArrowPos));\n      }\n    }\n\n    const innerEndPos = this.state.lastTokEnd;\n    const innerEndLoc = this.state.lastTokEndLoc;\n    this.expect(types.parenR);\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n    let arrowNode = this.startNodeAt(startPos, startLoc);\n\n    if (canBeArrow && this.shouldParseArrow() && (arrowNode = this.parseArrow(arrowNode))) {\n      this.expressionScope.validateAsPattern();\n      this.expressionScope.exit();\n      this.parseArrowExpression(arrowNode, exprList, false);\n      return arrowNode;\n    }\n\n    this.expressionScope.exit();\n\n    if (!exprList.length) {\n      this.unexpected(this.state.lastTokStart);\n    }\n\n    if (optionalCommaStart) this.unexpected(optionalCommaStart);\n    if (spreadStart) this.unexpected(spreadStart);\n    this.checkExpressionErrors(refExpressionErrors, true);\n    if (refNeedsArrowPos.start) this.unexpected(refNeedsArrowPos.start);\n    this.toReferencedListDeep(exprList, true);\n\n    if (exprList.length > 1) {\n      val = this.startNodeAt(innerStartPos, innerStartLoc);\n      val.expressions = exprList;\n      this.finishNodeAt(val, \"SequenceExpression\", innerEndPos, innerEndLoc);\n    } else {\n      val = exprList[0];\n    }\n\n    if (!this.options.createParenthesizedExpressions) {\n      this.addExtra(val, \"parenthesized\", true);\n      this.addExtra(val, \"parenStart\", startPos);\n      return val;\n    }\n\n    const parenExpression = this.startNodeAt(startPos, startLoc);\n    parenExpression.expression = val;\n    this.finishNode(parenExpression, \"ParenthesizedExpression\");\n    return parenExpression;\n  }\n\n  shouldParseArrow() {\n    return !this.canInsertSemicolon();\n  }\n\n  parseArrow(node) {\n    if (this.eat(types.arrow)) {\n      return node;\n    }\n  }\n\n  parseParenItem(node, startPos, startLoc) {\n    return node;\n  }\n\n  parseNewOrNewTarget() {\n    const node = this.startNode();\n    this.next();\n\n    if (this.match(types.dot)) {\n      const meta = this.createIdentifier(this.startNodeAtNode(node), \"new\");\n      this.next();\n      const metaProp = this.parseMetaProperty(node, meta, \"target\");\n\n      if (!this.scope.inNonArrowFunction && !this.scope.inClass) {\n        this.raise(metaProp.start, ErrorMessages.UnexpectedNewTarget);\n      }\n\n      return metaProp;\n    }\n\n    return this.parseNew(node);\n  }\n\n  parseNew(node) {\n    node.callee = this.parseNoCallExpr();\n\n    if (node.callee.type === \"Import\") {\n      this.raise(node.callee.start, ErrorMessages.ImportCallNotNewExpression);\n    } else if (this.isOptionalChain(node.callee)) {\n      this.raise(this.state.lastTokEnd, ErrorMessages.OptionalChainingNoNew);\n    } else if (this.eat(types.questionDot)) {\n      this.raise(this.state.start, ErrorMessages.OptionalChainingNoNew);\n    }\n\n    this.parseNewArguments(node);\n    return this.finishNode(node, \"NewExpression\");\n  }\n\n  parseNewArguments(node) {\n    if (this.eat(types.parenL)) {\n      const args = this.parseExprList(types.parenR);\n      this.toReferencedList(args);\n      node.arguments = args;\n    } else {\n      node.arguments = [];\n    }\n  }\n\n  parseTemplateElement(isTagged) {\n    const elem = this.startNode();\n\n    if (this.state.value === null) {\n      if (!isTagged) {\n        this.raise(this.state.start + 1, ErrorMessages.InvalidEscapeSequenceTemplate);\n      }\n    }\n\n    elem.value = {\n      raw: this.input.slice(this.state.start, this.state.end).replace(/\\r\\n?/g, \"\\n\"),\n      cooked: this.state.value\n    };\n    this.next();\n    elem.tail = this.match(types.backQuote);\n    return this.finishNode(elem, \"TemplateElement\");\n  }\n\n  parseTemplate(isTagged) {\n    const node = this.startNode();\n    this.next();\n    node.expressions = [];\n    let curElt = this.parseTemplateElement(isTagged);\n    node.quasis = [curElt];\n\n    while (!curElt.tail) {\n      this.expect(types.dollarBraceL);\n      node.expressions.push(this.parseTemplateSubstitution());\n      this.expect(types.braceR);\n      node.quasis.push(curElt = this.parseTemplateElement(isTagged));\n    }\n\n    this.next();\n    return this.finishNode(node, \"TemplateLiteral\");\n  }\n\n  parseTemplateSubstitution() {\n    return this.parseExpression();\n  }\n\n  parseObjectLike(close, isPattern, isRecord, refExpressionErrors) {\n    if (isRecord) {\n      this.expectPlugin(\"recordAndTuple\");\n    }\n\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = false;\n    const propHash = Object.create(null);\n    let first = true;\n    const node = this.startNode();\n    node.properties = [];\n    this.next();\n\n    while (!this.match(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(types.comma);\n\n        if (this.match(close)) {\n          this.addExtra(node, \"trailingComma\", this.state.lastTokStart);\n          break;\n        }\n      }\n\n      const prop = this.parsePropertyDefinition(isPattern, refExpressionErrors);\n\n      if (!isPattern) {\n        this.checkProto(prop, isRecord, propHash, refExpressionErrors);\n      }\n\n      if (isRecord && !this.isObjectProperty(prop) && prop.type !== \"SpreadElement\") {\n        this.raise(prop.start, ErrorMessages.InvalidRecordProperty);\n      }\n\n      if (prop.shorthand) {\n        this.addExtra(prop, \"shorthand\", true);\n      }\n\n      node.properties.push(prop);\n    }\n\n    this.state.exprAllowed = false;\n    this.next();\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n    let type = \"ObjectExpression\";\n\n    if (isPattern) {\n      type = \"ObjectPattern\";\n    } else if (isRecord) {\n      type = \"RecordExpression\";\n    }\n\n    return this.finishNode(node, type);\n  }\n\n  maybeAsyncOrAccessorProp(prop) {\n    return !prop.computed && prop.key.type === \"Identifier\" && (this.isLiteralPropertyName() || this.match(types.bracketL) || this.match(types.star));\n  }\n\n  parsePropertyDefinition(isPattern, refExpressionErrors) {\n    let decorators = [];\n\n    if (this.match(types.at)) {\n      if (this.hasPlugin(\"decorators\")) {\n        this.raise(this.state.start, ErrorMessages.UnsupportedPropertyDecorator);\n      }\n\n      while (this.match(types.at)) {\n        decorators.push(this.parseDecorator());\n      }\n    }\n\n    const prop = this.startNode();\n    let isGenerator = false;\n    let isAsync = false;\n    let isAccessor = false;\n    let startPos;\n    let startLoc;\n\n    if (this.match(types.ellipsis)) {\n      if (decorators.length) this.unexpected();\n\n      if (isPattern) {\n        this.next();\n        prop.argument = this.parseIdentifier();\n        this.checkCommaAfterRest(125);\n        return this.finishNode(prop, \"RestElement\");\n      }\n\n      return this.parseSpread();\n    }\n\n    if (decorators.length) {\n      prop.decorators = decorators;\n      decorators = [];\n    }\n\n    prop.method = false;\n\n    if (isPattern || refExpressionErrors) {\n      startPos = this.state.start;\n      startLoc = this.state.startLoc;\n    }\n\n    if (!isPattern) {\n      isGenerator = this.eat(types.star);\n    }\n\n    const containsEsc = this.state.containsEsc;\n    const key = this.parsePropertyName(prop, false);\n\n    if (!isPattern && !isGenerator && !containsEsc && this.maybeAsyncOrAccessorProp(prop)) {\n      const keyName = key.name;\n\n      if (keyName === \"async\" && !this.hasPrecedingLineBreak()) {\n        isAsync = true;\n        isGenerator = this.eat(types.star);\n        this.parsePropertyName(prop, false);\n      }\n\n      if (keyName === \"get\" || keyName === \"set\") {\n        isAccessor = true;\n        prop.kind = keyName;\n\n        if (this.match(types.star)) {\n          isGenerator = true;\n          this.raise(this.state.pos, ErrorMessages.AccessorIsGenerator, keyName);\n          this.next();\n        }\n\n        this.parsePropertyName(prop, false);\n      }\n    }\n\n    this.parseObjPropValue(prop, startPos, startLoc, isGenerator, isAsync, isPattern, isAccessor, refExpressionErrors);\n    return prop;\n  }\n\n  getGetterSetterExpectedParamCount(method) {\n    return method.kind === \"get\" ? 0 : 1;\n  }\n\n  getObjectOrClassMethodParams(method) {\n    return method.params;\n  }\n\n  checkGetterSetterParams(method) {\n    var _params;\n\n    const paramCount = this.getGetterSetterExpectedParamCount(method);\n    const params = this.getObjectOrClassMethodParams(method);\n    const start = method.start;\n\n    if (params.length !== paramCount) {\n      if (method.kind === \"get\") {\n        this.raise(start, ErrorMessages.BadGetterArity);\n      } else {\n        this.raise(start, ErrorMessages.BadSetterArity);\n      }\n    }\n\n    if (method.kind === \"set\" && ((_params = params[params.length - 1]) == null ? void 0 : _params.type) === \"RestElement\") {\n      this.raise(start, ErrorMessages.BadSetterRestParameter);\n    }\n  }\n\n  parseObjectMethod(prop, isGenerator, isAsync, isPattern, isAccessor) {\n    if (isAccessor) {\n      this.parseMethod(prop, isGenerator, false, false, false, \"ObjectMethod\");\n      this.checkGetterSetterParams(prop);\n      return prop;\n    }\n\n    if (isAsync || isGenerator || this.match(types.parenL)) {\n      if (isPattern) this.unexpected();\n      prop.kind = \"method\";\n      prop.method = true;\n      return this.parseMethod(prop, isGenerator, isAsync, false, false, \"ObjectMethod\");\n    }\n  }\n\n  parseObjectProperty(prop, startPos, startLoc, isPattern, refExpressionErrors) {\n    prop.shorthand = false;\n\n    if (this.eat(types.colon)) {\n      prop.value = isPattern ? this.parseMaybeDefault(this.state.start, this.state.startLoc) : this.parseMaybeAssignAllowIn(refExpressionErrors);\n      return this.finishNode(prop, \"ObjectProperty\");\n    }\n\n    if (!prop.computed && prop.key.type === \"Identifier\") {\n      this.checkReservedWord(prop.key.name, prop.key.start, true, false);\n\n      if (isPattern) {\n        prop.value = this.parseMaybeDefault(startPos, startLoc, prop.key.__clone());\n      } else if (this.match(types.eq) && refExpressionErrors) {\n        if (refExpressionErrors.shorthandAssign === -1) {\n          refExpressionErrors.shorthandAssign = this.state.start;\n        }\n\n        prop.value = this.parseMaybeDefault(startPos, startLoc, prop.key.__clone());\n      } else {\n        prop.value = prop.key.__clone();\n      }\n\n      prop.shorthand = true;\n      return this.finishNode(prop, \"ObjectProperty\");\n    }\n  }\n\n  parseObjPropValue(prop, startPos, startLoc, isGenerator, isAsync, isPattern, isAccessor, refExpressionErrors) {\n    const node = this.parseObjectMethod(prop, isGenerator, isAsync, isPattern, isAccessor) || this.parseObjectProperty(prop, startPos, startLoc, isPattern, refExpressionErrors);\n    if (!node) this.unexpected();\n    return node;\n  }\n\n  parsePropertyName(prop, isPrivateNameAllowed) {\n    if (this.eat(types.bracketL)) {\n      prop.computed = true;\n      prop.key = this.parseMaybeAssignAllowIn();\n      this.expect(types.bracketR);\n    } else {\n      const oldInPropertyName = this.state.inPropertyName;\n      this.state.inPropertyName = true;\n      prop.key = this.match(types.num) || this.match(types.string) || this.match(types.bigint) || this.match(types.decimal) ? this.parseExprAtom() : this.parseMaybePrivateName(isPrivateNameAllowed);\n\n      if (!this.isPrivateName(prop.key)) {\n        prop.computed = false;\n      }\n\n      this.state.inPropertyName = oldInPropertyName;\n    }\n\n    return prop.key;\n  }\n\n  initFunction(node, isAsync) {\n    node.id = null;\n    node.generator = false;\n    node.async = !!isAsync;\n  }\n\n  parseMethod(node, isGenerator, isAsync, isConstructor, allowDirectSuper, type, inClassScope = false) {\n    this.initFunction(node, isAsync);\n    node.generator = !!isGenerator;\n    const allowModifiers = isConstructor;\n    this.scope.enter(SCOPE_FUNCTION | SCOPE_SUPER | (inClassScope ? SCOPE_CLASS : 0) | (allowDirectSuper ? SCOPE_DIRECT_SUPER : 0));\n    this.prodParam.enter(functionFlags(isAsync, node.generator));\n    this.parseFunctionParams(node, allowModifiers);\n    this.parseFunctionBodyAndFinish(node, type, true);\n    this.prodParam.exit();\n    this.scope.exit();\n    return node;\n  }\n\n  parseArrayLike(close, canBePattern, isTuple, refExpressionErrors) {\n    if (isTuple) {\n      this.expectPlugin(\"recordAndTuple\");\n    }\n\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = false;\n    const node = this.startNode();\n    this.next();\n    node.elements = this.parseExprList(close, !isTuple, refExpressionErrors, node);\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n    return this.finishNode(node, isTuple ? \"TupleExpression\" : \"ArrayExpression\");\n  }\n\n  parseArrowExpression(node, params, isAsync, trailingCommaPos) {\n    this.scope.enter(SCOPE_FUNCTION | SCOPE_ARROW);\n    let flags = functionFlags(isAsync, false);\n\n    if (!this.match(types.bracketL) && this.prodParam.hasIn) {\n      flags |= PARAM_IN;\n    }\n\n    this.prodParam.enter(flags);\n    this.initFunction(node, isAsync);\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n\n    if (params) {\n      this.state.maybeInArrowParameters = true;\n      this.setArrowFunctionParameters(node, params, trailingCommaPos);\n    }\n\n    this.state.maybeInArrowParameters = false;\n    this.parseFunctionBody(node, true);\n    this.prodParam.exit();\n    this.scope.exit();\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n    return this.finishNode(node, \"ArrowFunctionExpression\");\n  }\n\n  setArrowFunctionParameters(node, params, trailingCommaPos) {\n    node.params = this.toAssignableList(params, trailingCommaPos, false);\n  }\n\n  parseFunctionBodyAndFinish(node, type, isMethod = false) {\n    this.parseFunctionBody(node, false, isMethod);\n    this.finishNode(node, type);\n  }\n\n  parseFunctionBody(node, allowExpression, isMethod = false) {\n    const isExpression = allowExpression && !this.match(types.braceL);\n    this.expressionScope.enter(newExpressionScope());\n\n    if (isExpression) {\n      node.body = this.parseMaybeAssign();\n      this.checkParams(node, false, allowExpression, false);\n    } else {\n      const oldStrict = this.state.strict;\n      const oldLabels = this.state.labels;\n      this.state.labels = [];\n      this.prodParam.enter(this.prodParam.currentFlags() | PARAM_RETURN);\n      node.body = this.parseBlock(true, false, hasStrictModeDirective => {\n        const nonSimple = !this.isSimpleParamList(node.params);\n\n        if (hasStrictModeDirective && nonSimple) {\n          const errorPos = (node.kind === \"method\" || node.kind === \"constructor\") && !!node.key ? node.key.end : node.start;\n          this.raise(errorPos, ErrorMessages.IllegalLanguageModeDirective);\n        }\n\n        const strictModeChanged = !oldStrict && this.state.strict;\n        this.checkParams(node, !this.state.strict && !allowExpression && !isMethod && !nonSimple, allowExpression, strictModeChanged);\n\n        if (this.state.strict && node.id) {\n          this.checkLVal(node.id, \"function name\", BIND_OUTSIDE, undefined, undefined, strictModeChanged);\n        }\n      });\n      this.prodParam.exit();\n      this.expressionScope.exit();\n      this.state.labels = oldLabels;\n    }\n  }\n\n  isSimpleParamList(params) {\n    for (let i = 0, len = params.length; i < len; i++) {\n      if (params[i].type !== \"Identifier\") return false;\n    }\n\n    return true;\n  }\n\n  checkParams(node, allowDuplicates, isArrowFunction, strictModeChanged = true) {\n    const checkClashes = new Set();\n\n    for (const param of node.params) {\n      this.checkLVal(param, \"function parameter list\", BIND_VAR, allowDuplicates ? null : checkClashes, undefined, strictModeChanged);\n    }\n  }\n\n  parseExprList(close, allowEmpty, refExpressionErrors, nodeForExtra) {\n    const elts = [];\n    let first = true;\n\n    while (!this.eat(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(types.comma);\n\n        if (this.match(close)) {\n          if (nodeForExtra) {\n            this.addExtra(nodeForExtra, \"trailingComma\", this.state.lastTokStart);\n          }\n\n          this.next();\n          break;\n        }\n      }\n\n      elts.push(this.parseExprListItem(allowEmpty, refExpressionErrors));\n    }\n\n    return elts;\n  }\n\n  parseExprListItem(allowEmpty, refExpressionErrors, refNeedsArrowPos, allowPlaceholder) {\n    let elt;\n\n    if (this.match(types.comma)) {\n      if (!allowEmpty) {\n        this.raise(this.state.pos, ErrorMessages.UnexpectedToken, \",\");\n      }\n\n      elt = null;\n    } else if (this.match(types.ellipsis)) {\n      const spreadNodeStartPos = this.state.start;\n      const spreadNodeStartLoc = this.state.startLoc;\n      elt = this.parseParenItem(this.parseSpread(refExpressionErrors, refNeedsArrowPos), spreadNodeStartPos, spreadNodeStartLoc);\n    } else if (this.match(types.question)) {\n      this.expectPlugin(\"partialApplication\");\n\n      if (!allowPlaceholder) {\n        this.raise(this.state.start, ErrorMessages.UnexpectedArgumentPlaceholder);\n      }\n\n      const node = this.startNode();\n      this.next();\n      elt = this.finishNode(node, \"ArgumentPlaceholder\");\n    } else {\n      elt = this.parseMaybeAssignAllowIn(refExpressionErrors, this.parseParenItem, refNeedsArrowPos);\n    }\n\n    return elt;\n  }\n\n  parseIdentifier(liberal) {\n    const node = this.startNode();\n    const name = this.parseIdentifierName(node.start, liberal);\n    return this.createIdentifier(node, name);\n  }\n\n  createIdentifier(node, name) {\n    node.name = name;\n    node.loc.identifierName = name;\n    return this.finishNode(node, \"Identifier\");\n  }\n\n  parseIdentifierName(pos, liberal) {\n    let name;\n    const {\n      start,\n      type\n    } = this.state;\n\n    if (type === types.name) {\n      name = this.state.value;\n    } else if (type.keyword) {\n      name = type.keyword;\n      const curContext = this.curContext();\n\n      if ((type === types._class || type === types._function) && (curContext === types$1.functionStatement || curContext === types$1.functionExpression)) {\n        this.state.context.pop();\n      }\n    } else {\n      throw this.unexpected();\n    }\n\n    if (liberal) {\n      this.state.type = types.name;\n    } else {\n      this.checkReservedWord(name, start, !!type.keyword, false);\n    }\n\n    this.next();\n    return name;\n  }\n\n  checkReservedWord(word, startLoc, checkKeywords, isBinding) {\n    if (this.prodParam.hasYield && word === \"yield\") {\n      this.raise(startLoc, ErrorMessages.YieldBindingIdentifier);\n      return;\n    }\n\n    if (word === \"await\") {\n      if (this.prodParam.hasAwait) {\n        this.raise(startLoc, ErrorMessages.AwaitBindingIdentifier);\n        return;\n      } else if (this.scope.inStaticBlock && !this.scope.inNonArrowFunction) {\n        this.raise(startLoc, ErrorMessages.AwaitBindingIdentifierInStaticBlock);\n        return;\n      } else {\n        this.expressionScope.recordAsyncArrowParametersError(startLoc, ErrorMessages.AwaitBindingIdentifier);\n      }\n    }\n\n    if (this.scope.inClass && !this.scope.inNonArrowFunction && word === \"arguments\") {\n      this.raise(startLoc, ErrorMessages.ArgumentsInClass);\n      return;\n    }\n\n    if (checkKeywords && isKeyword(word)) {\n      this.raise(startLoc, ErrorMessages.UnexpectedKeyword, word);\n      return;\n    }\n\n    const reservedTest = !this.state.strict ? isReservedWord : isBinding ? isStrictBindReservedWord : isStrictReservedWord;\n\n    if (reservedTest(word, this.inModule)) {\n      this.raise(startLoc, ErrorMessages.UnexpectedReservedWord, word);\n    }\n  }\n\n  isAwaitAllowed() {\n    if (this.prodParam.hasAwait) return true;\n\n    if (this.options.allowAwaitOutsideFunction && !this.scope.inFunction) {\n      return true;\n    }\n\n    return false;\n  }\n\n  parseAwait(startPos, startLoc) {\n    const node = this.startNodeAt(startPos, startLoc);\n    this.expressionScope.recordParameterInitializerError(node.start, ErrorMessages.AwaitExpressionFormalParameter);\n\n    if (this.eat(types.star)) {\n      this.raise(node.start, ErrorMessages.ObsoleteAwaitStar);\n    }\n\n    if (!this.scope.inFunction && !this.options.allowAwaitOutsideFunction) {\n      if (this.isAmbiguousAwait()) {\n        this.ambiguousScriptDifferentAst = true;\n      } else {\n        this.sawUnambiguousESM = true;\n      }\n    }\n\n    if (!this.state.soloAwait) {\n      node.argument = this.parseMaybeUnary(null, true);\n    }\n\n    return this.finishNode(node, \"AwaitExpression\");\n  }\n\n  isAmbiguousAwait() {\n    return this.hasPrecedingLineBreak() || this.match(types.plusMin) || this.match(types.parenL) || this.match(types.bracketL) || this.match(types.backQuote) || this.match(types.regexp) || this.match(types.slash) || this.hasPlugin(\"v8intrinsic\") && this.match(types.modulo);\n  }\n\n  parseYield() {\n    const node = this.startNode();\n    this.expressionScope.recordParameterInitializerError(node.start, ErrorMessages.YieldInParameter);\n    this.next();\n\n    if (this.match(types.semi) || !this.match(types.star) && !this.state.type.startsExpr || this.hasPrecedingLineBreak()) {\n      node.delegate = false;\n      node.argument = null;\n    } else {\n      node.delegate = this.eat(types.star);\n      node.argument = this.parseMaybeAssign();\n    }\n\n    return this.finishNode(node, \"YieldExpression\");\n  }\n\n  checkPipelineAtInfixOperator(left, leftStartPos) {\n    if (this.getPluginOption(\"pipelineOperator\", \"proposal\") === \"smart\") {\n      if (left.type === \"SequenceExpression\") {\n        this.raise(leftStartPos, ErrorMessages.PipelineHeadSequenceExpression);\n      }\n    }\n  }\n\n  parseSmartPipelineBody(childExpression, startPos, startLoc) {\n    this.checkSmartPipelineBodyEarlyErrors(childExpression, startPos);\n    return this.parseSmartPipelineBodyInStyle(childExpression, startPos, startLoc);\n  }\n\n  checkSmartPipelineBodyEarlyErrors(childExpression, startPos) {\n    if (this.match(types.arrow)) {\n      throw this.raise(this.state.start, ErrorMessages.PipelineBodyNoArrow);\n    } else if (childExpression.type === \"SequenceExpression\") {\n      this.raise(startPos, ErrorMessages.PipelineBodySequenceExpression);\n    }\n  }\n\n  parseSmartPipelineBodyInStyle(childExpression, startPos, startLoc) {\n    const bodyNode = this.startNodeAt(startPos, startLoc);\n    const isSimpleReference = this.isSimpleReference(childExpression);\n\n    if (isSimpleReference) {\n      bodyNode.callee = childExpression;\n    } else {\n      if (!this.topicReferenceWasUsedInCurrentTopicContext()) {\n        this.raise(startPos, ErrorMessages.PipelineTopicUnused);\n      }\n\n      bodyNode.expression = childExpression;\n    }\n\n    return this.finishNode(bodyNode, isSimpleReference ? \"PipelineBareFunction\" : \"PipelineTopicExpression\");\n  }\n\n  isSimpleReference(expression) {\n    switch (expression.type) {\n      case \"MemberExpression\":\n        return !expression.computed && this.isSimpleReference(expression.object);\n\n      case \"Identifier\":\n        return true;\n\n      default:\n        return false;\n    }\n  }\n\n  withTopicPermittingContext(callback) {\n    const outerContextTopicState = this.state.topicContext;\n    this.state.topicContext = {\n      maxNumOfResolvableTopics: 1,\n      maxTopicIndex: null\n    };\n\n    try {\n      return callback();\n    } finally {\n      this.state.topicContext = outerContextTopicState;\n    }\n  }\n\n  withTopicForbiddingContext(callback) {\n    const outerContextTopicState = this.state.topicContext;\n    this.state.topicContext = {\n      maxNumOfResolvableTopics: 0,\n      maxTopicIndex: null\n    };\n\n    try {\n      return callback();\n    } finally {\n      this.state.topicContext = outerContextTopicState;\n    }\n  }\n\n  withSoloAwaitPermittingContext(callback) {\n    const outerContextSoloAwaitState = this.state.soloAwait;\n    this.state.soloAwait = true;\n\n    try {\n      return callback();\n    } finally {\n      this.state.soloAwait = outerContextSoloAwaitState;\n    }\n  }\n\n  allowInAnd(callback) {\n    const flags = this.prodParam.currentFlags();\n    const prodParamToSet = PARAM_IN & ~flags;\n\n    if (prodParamToSet) {\n      this.prodParam.enter(flags | PARAM_IN);\n\n      try {\n        return callback();\n      } finally {\n        this.prodParam.exit();\n      }\n    }\n\n    return callback();\n  }\n\n  disallowInAnd(callback) {\n    const flags = this.prodParam.currentFlags();\n    const prodParamToClear = PARAM_IN & flags;\n\n    if (prodParamToClear) {\n      this.prodParam.enter(flags & ~PARAM_IN);\n\n      try {\n        return callback();\n      } finally {\n        this.prodParam.exit();\n      }\n    }\n\n    return callback();\n  }\n\n  registerTopicReference() {\n    this.state.topicContext.maxTopicIndex = 0;\n  }\n\n  primaryTopicReferenceIsAllowedInCurrentTopicContext() {\n    return this.state.topicContext.maxNumOfResolvableTopics >= 1;\n  }\n\n  topicReferenceWasUsedInCurrentTopicContext() {\n    return this.state.topicContext.maxTopicIndex != null && this.state.topicContext.maxTopicIndex >= 0;\n  }\n\n  parseFSharpPipelineBody(prec) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    this.state.potentialArrowAt = this.state.start;\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = true;\n    const ret = this.parseExprOp(this.parseMaybeUnary(), startPos, startLoc, prec);\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n    return ret;\n  }\n\n  parseModuleExpression() {\n    this.expectPlugin(\"moduleBlocks\");\n    const node = this.startNode();\n    this.next();\n    this.eat(types.braceL);\n    const revertScopes = this.initializeScopes(true);\n    this.enterInitialScopes();\n    const program = this.startNode();\n\n    try {\n      node.body = this.parseProgram(program, types.braceR, \"module\");\n    } finally {\n      revertScopes();\n    }\n\n    this.eat(types.braceR);\n    return this.finishNode(node, \"ModuleExpression\");\n  }\n\n}\n\nconst loopLabel = {\n  kind: \"loop\"\n},\n      switchLabel = {\n  kind: \"switch\"\n};\nconst FUNC_NO_FLAGS = 0b000,\n      FUNC_STATEMENT = 0b001,\n      FUNC_HANGING_STATEMENT = 0b010,\n      FUNC_NULLABLE_ID = 0b100;\nconst loneSurrogate = /[\\uD800-\\uDFFF]/u;\nclass StatementParser extends ExpressionParser {\n  parseTopLevel(file, program) {\n    file.program = this.parseProgram(program);\n    file.comments = this.state.comments;\n    if (this.options.tokens) file.tokens = this.tokens;\n    return this.finishNode(file, \"File\");\n  }\n\n  parseProgram(program, end = types.eof, sourceType = this.options.sourceType) {\n    program.sourceType = sourceType;\n    program.interpreter = this.parseInterpreterDirective();\n    this.parseBlockBody(program, true, true, end);\n\n    if (this.inModule && !this.options.allowUndeclaredExports && this.scope.undefinedExports.size > 0) {\n      for (const [name] of Array.from(this.scope.undefinedExports)) {\n        const pos = this.scope.undefinedExports.get(name);\n        this.raise(pos, ErrorMessages.ModuleExportUndefined, name);\n      }\n    }\n\n    return this.finishNode(program, \"Program\");\n  }\n\n  stmtToDirective(stmt) {\n    const expr = stmt.expression;\n    const directiveLiteral = this.startNodeAt(expr.start, expr.loc.start);\n    const directive = this.startNodeAt(stmt.start, stmt.loc.start);\n    const raw = this.input.slice(expr.start, expr.end);\n    const val = directiveLiteral.value = raw.slice(1, -1);\n    this.addExtra(directiveLiteral, \"raw\", raw);\n    this.addExtra(directiveLiteral, \"rawValue\", val);\n    directive.value = this.finishNodeAt(directiveLiteral, \"DirectiveLiteral\", expr.end, expr.loc.end);\n    return this.finishNodeAt(directive, \"Directive\", stmt.end, stmt.loc.end);\n  }\n\n  parseInterpreterDirective() {\n    if (!this.match(types.interpreterDirective)) {\n      return null;\n    }\n\n    const node = this.startNode();\n    node.value = this.state.value;\n    this.next();\n    return this.finishNode(node, \"InterpreterDirective\");\n  }\n\n  isLet(context) {\n    if (!this.isContextual(\"let\")) {\n      return false;\n    }\n\n    return this.isLetKeyword(context);\n  }\n\n  isLetKeyword(context) {\n    const next = this.nextTokenStart();\n    const nextCh = this.input.charCodeAt(next);\n    if (nextCh === 91) return true;\n    if (context) return false;\n    if (nextCh === 123) return true;\n\n    if (isIdentifierStart(nextCh)) {\n      let pos = next + 1;\n\n      while (isIdentifierChar(this.input.charCodeAt(pos))) {\n        ++pos;\n      }\n\n      const ident = this.input.slice(next, pos);\n      if (!keywordRelationalOperator.test(ident)) return true;\n    }\n\n    return false;\n  }\n\n  parseStatement(context, topLevel) {\n    if (this.match(types.at)) {\n      this.parseDecorators(true);\n    }\n\n    return this.parseStatementContent(context, topLevel);\n  }\n\n  parseStatementContent(context, topLevel) {\n    let starttype = this.state.type;\n    const node = this.startNode();\n    let kind;\n\n    if (this.isLet(context)) {\n      starttype = types._var;\n      kind = \"let\";\n    }\n\n    switch (starttype) {\n      case types._break:\n      case types._continue:\n        return this.parseBreakContinueStatement(node, starttype.keyword);\n\n      case types._debugger:\n        return this.parseDebuggerStatement(node);\n\n      case types._do:\n        return this.parseDoStatement(node);\n\n      case types._for:\n        return this.parseForStatement(node);\n\n      case types._function:\n        if (this.lookaheadCharCode() === 46) break;\n\n        if (context) {\n          if (this.state.strict) {\n            this.raise(this.state.start, ErrorMessages.StrictFunction);\n          } else if (context !== \"if\" && context !== \"label\") {\n            this.raise(this.state.start, ErrorMessages.SloppyFunction);\n          }\n        }\n\n        return this.parseFunctionStatement(node, false, !context);\n\n      case types._class:\n        if (context) this.unexpected();\n        return this.parseClass(node, true);\n\n      case types._if:\n        return this.parseIfStatement(node);\n\n      case types._return:\n        return this.parseReturnStatement(node);\n\n      case types._switch:\n        return this.parseSwitchStatement(node);\n\n      case types._throw:\n        return this.parseThrowStatement(node);\n\n      case types._try:\n        return this.parseTryStatement(node);\n\n      case types._const:\n      case types._var:\n        kind = kind || this.state.value;\n\n        if (context && kind !== \"var\") {\n          this.raise(this.state.start, ErrorMessages.UnexpectedLexicalDeclaration);\n        }\n\n        return this.parseVarStatement(node, kind);\n\n      case types._while:\n        return this.parseWhileStatement(node);\n\n      case types._with:\n        return this.parseWithStatement(node);\n\n      case types.braceL:\n        return this.parseBlock();\n\n      case types.semi:\n        return this.parseEmptyStatement(node);\n\n      case types._import:\n        {\n          const nextTokenCharCode = this.lookaheadCharCode();\n\n          if (nextTokenCharCode === 40 || nextTokenCharCode === 46) {\n              break;\n            }\n        }\n\n      case types._export:\n        {\n          if (!this.options.allowImportExportEverywhere && !topLevel) {\n            this.raise(this.state.start, ErrorMessages.UnexpectedImportExport);\n          }\n\n          this.next();\n          let result;\n\n          if (starttype === types._import) {\n            result = this.parseImport(node);\n\n            if (result.type === \"ImportDeclaration\" && (!result.importKind || result.importKind === \"value\")) {\n              this.sawUnambiguousESM = true;\n            }\n          } else {\n            result = this.parseExport(node);\n\n            if (result.type === \"ExportNamedDeclaration\" && (!result.exportKind || result.exportKind === \"value\") || result.type === \"ExportAllDeclaration\" && (!result.exportKind || result.exportKind === \"value\") || result.type === \"ExportDefaultDeclaration\") {\n              this.sawUnambiguousESM = true;\n            }\n          }\n\n          this.assertModuleNodeAllowed(node);\n          return result;\n        }\n\n      default:\n        {\n          if (this.isAsyncFunction()) {\n            if (context) {\n              this.raise(this.state.start, ErrorMessages.AsyncFunctionInSingleStatementContext);\n            }\n\n            this.next();\n            return this.parseFunctionStatement(node, true, !context);\n          }\n        }\n    }\n\n    const maybeName = this.state.value;\n    const expr = this.parseExpression();\n\n    if (starttype === types.name && expr.type === \"Identifier\" && this.eat(types.colon)) {\n      return this.parseLabeledStatement(node, maybeName, expr, context);\n    } else {\n      return this.parseExpressionStatement(node, expr);\n    }\n  }\n\n  assertModuleNodeAllowed(node) {\n    if (!this.options.allowImportExportEverywhere && !this.inModule) {\n      this.raise(node.start, SourceTypeModuleErrorMessages.ImportOutsideModule);\n    }\n  }\n\n  takeDecorators(node) {\n    const decorators = this.state.decoratorStack[this.state.decoratorStack.length - 1];\n\n    if (decorators.length) {\n      node.decorators = decorators;\n      this.resetStartLocationFromNode(node, decorators[0]);\n      this.state.decoratorStack[this.state.decoratorStack.length - 1] = [];\n    }\n  }\n\n  canHaveLeadingDecorator() {\n    return this.match(types._class);\n  }\n\n  parseDecorators(allowExport) {\n    const currentContextDecorators = this.state.decoratorStack[this.state.decoratorStack.length - 1];\n\n    while (this.match(types.at)) {\n      const decorator = this.parseDecorator();\n      currentContextDecorators.push(decorator);\n    }\n\n    if (this.match(types._export)) {\n      if (!allowExport) {\n        this.unexpected();\n      }\n\n      if (this.hasPlugin(\"decorators\") && !this.getPluginOption(\"decorators\", \"decoratorsBeforeExport\")) {\n        this.raise(this.state.start, ErrorMessages.DecoratorExportClass);\n      }\n    } else if (!this.canHaveLeadingDecorator()) {\n      throw this.raise(this.state.start, ErrorMessages.UnexpectedLeadingDecorator);\n    }\n  }\n\n  parseDecorator() {\n    this.expectOnePlugin([\"decorators-legacy\", \"decorators\"]);\n    const node = this.startNode();\n    this.next();\n\n    if (this.hasPlugin(\"decorators\")) {\n      this.state.decoratorStack.push([]);\n      const startPos = this.state.start;\n      const startLoc = this.state.startLoc;\n      let expr;\n\n      if (this.eat(types.parenL)) {\n        expr = this.parseExpression();\n        this.expect(types.parenR);\n      } else {\n        expr = this.parseIdentifier(false);\n\n        while (this.eat(types.dot)) {\n          const node = this.startNodeAt(startPos, startLoc);\n          node.object = expr;\n          node.property = this.parseIdentifier(true);\n          node.computed = false;\n          expr = this.finishNode(node, \"MemberExpression\");\n        }\n      }\n\n      node.expression = this.parseMaybeDecoratorArguments(expr);\n      this.state.decoratorStack.pop();\n    } else {\n      node.expression = this.parseExprSubscripts();\n    }\n\n    return this.finishNode(node, \"Decorator\");\n  }\n\n  parseMaybeDecoratorArguments(expr) {\n    if (this.eat(types.parenL)) {\n      const node = this.startNodeAtNode(expr);\n      node.callee = expr;\n      node.arguments = this.parseCallExpressionArguments(types.parenR, false);\n      this.toReferencedList(node.arguments);\n      return this.finishNode(node, \"CallExpression\");\n    }\n\n    return expr;\n  }\n\n  parseBreakContinueStatement(node, keyword) {\n    const isBreak = keyword === \"break\";\n    this.next();\n\n    if (this.isLineTerminator()) {\n      node.label = null;\n    } else {\n      node.label = this.parseIdentifier();\n      this.semicolon();\n    }\n\n    this.verifyBreakContinue(node, keyword);\n    return this.finishNode(node, isBreak ? \"BreakStatement\" : \"ContinueStatement\");\n  }\n\n  verifyBreakContinue(node, keyword) {\n    const isBreak = keyword === \"break\";\n    let i;\n\n    for (i = 0; i < this.state.labels.length; ++i) {\n      const lab = this.state.labels[i];\n\n      if (node.label == null || lab.name === node.label.name) {\n        if (lab.kind != null && (isBreak || lab.kind === \"loop\")) break;\n        if (node.label && isBreak) break;\n      }\n    }\n\n    if (i === this.state.labels.length) {\n      this.raise(node.start, ErrorMessages.IllegalBreakContinue, keyword);\n    }\n  }\n\n  parseDebuggerStatement(node) {\n    this.next();\n    this.semicolon();\n    return this.finishNode(node, \"DebuggerStatement\");\n  }\n\n  parseHeaderExpression() {\n    this.expect(types.parenL);\n    const val = this.parseExpression();\n    this.expect(types.parenR);\n    return val;\n  }\n\n  parseDoStatement(node) {\n    this.next();\n    this.state.labels.push(loopLabel);\n    node.body = this.withTopicForbiddingContext(() => this.parseStatement(\"do\"));\n    this.state.labels.pop();\n    this.expect(types._while);\n    node.test = this.parseHeaderExpression();\n    this.eat(types.semi);\n    return this.finishNode(node, \"DoWhileStatement\");\n  }\n\n  parseForStatement(node) {\n    this.next();\n    this.state.labels.push(loopLabel);\n    let awaitAt = -1;\n\n    if (this.isAwaitAllowed() && this.eatContextual(\"await\")) {\n      awaitAt = this.state.lastTokStart;\n    }\n\n    this.scope.enter(SCOPE_OTHER);\n    this.expect(types.parenL);\n\n    if (this.match(types.semi)) {\n      if (awaitAt > -1) {\n        this.unexpected(awaitAt);\n      }\n\n      return this.parseFor(node, null);\n    }\n\n    const startsWithLet = this.isContextual(\"let\");\n    const isLet = startsWithLet && this.isLetKeyword();\n\n    if (this.match(types._var) || this.match(types._const) || isLet) {\n      const init = this.startNode();\n      const kind = isLet ? \"let\" : this.state.value;\n      this.next();\n      this.parseVar(init, true, kind);\n      this.finishNode(init, \"VariableDeclaration\");\n\n      if ((this.match(types._in) || this.isContextual(\"of\")) && init.declarations.length === 1) {\n        return this.parseForIn(node, init, awaitAt);\n      }\n\n      if (awaitAt > -1) {\n        this.unexpected(awaitAt);\n      }\n\n      return this.parseFor(node, init);\n    }\n\n    const startsWithUnescapedName = this.match(types.name) && !this.state.containsEsc;\n    const refExpressionErrors = new ExpressionErrors();\n    const init = this.parseExpression(true, refExpressionErrors);\n    const isForOf = this.isContextual(\"of\");\n\n    if (isForOf) {\n      if (startsWithLet) {\n        this.raise(init.start, ErrorMessages.ForOfLet);\n      } else if (awaitAt === -1 && startsWithUnescapedName && init.type === \"Identifier\" && init.name === \"async\") {\n        this.raise(init.start, ErrorMessages.ForOfAsync);\n      }\n    }\n\n    if (isForOf || this.match(types._in)) {\n      this.toAssignable(init, true);\n      const description = isForOf ? \"for-of statement\" : \"for-in statement\";\n      this.checkLVal(init, description);\n      return this.parseForIn(node, init, awaitAt);\n    } else {\n      this.checkExpressionErrors(refExpressionErrors, true);\n    }\n\n    if (awaitAt > -1) {\n      this.unexpected(awaitAt);\n    }\n\n    return this.parseFor(node, init);\n  }\n\n  parseFunctionStatement(node, isAsync, declarationPosition) {\n    this.next();\n    return this.parseFunction(node, FUNC_STATEMENT | (declarationPosition ? 0 : FUNC_HANGING_STATEMENT), isAsync);\n  }\n\n  parseIfStatement(node) {\n    this.next();\n    node.test = this.parseHeaderExpression();\n    node.consequent = this.parseStatement(\"if\");\n    node.alternate = this.eat(types._else) ? this.parseStatement(\"if\") : null;\n    return this.finishNode(node, \"IfStatement\");\n  }\n\n  parseReturnStatement(node) {\n    if (!this.prodParam.hasReturn && !this.options.allowReturnOutsideFunction) {\n      this.raise(this.state.start, ErrorMessages.IllegalReturn);\n    }\n\n    this.next();\n\n    if (this.isLineTerminator()) {\n      node.argument = null;\n    } else {\n      node.argument = this.parseExpression();\n      this.semicolon();\n    }\n\n    return this.finishNode(node, \"ReturnStatement\");\n  }\n\n  parseSwitchStatement(node) {\n    this.next();\n    node.discriminant = this.parseHeaderExpression();\n    const cases = node.cases = [];\n    this.expect(types.braceL);\n    this.state.labels.push(switchLabel);\n    this.scope.enter(SCOPE_OTHER);\n    let cur;\n\n    for (let sawDefault; !this.match(types.braceR);) {\n      if (this.match(types._case) || this.match(types._default)) {\n        const isCase = this.match(types._case);\n        if (cur) this.finishNode(cur, \"SwitchCase\");\n        cases.push(cur = this.startNode());\n        cur.consequent = [];\n        this.next();\n\n        if (isCase) {\n          cur.test = this.parseExpression();\n        } else {\n          if (sawDefault) {\n            this.raise(this.state.lastTokStart, ErrorMessages.MultipleDefaultsInSwitch);\n          }\n\n          sawDefault = true;\n          cur.test = null;\n        }\n\n        this.expect(types.colon);\n      } else {\n        if (cur) {\n          cur.consequent.push(this.parseStatement(null));\n        } else {\n          this.unexpected();\n        }\n      }\n    }\n\n    this.scope.exit();\n    if (cur) this.finishNode(cur, \"SwitchCase\");\n    this.next();\n    this.state.labels.pop();\n    return this.finishNode(node, \"SwitchStatement\");\n  }\n\n  parseThrowStatement(node) {\n    this.next();\n\n    if (this.hasPrecedingLineBreak()) {\n      this.raise(this.state.lastTokEnd, ErrorMessages.NewlineAfterThrow);\n    }\n\n    node.argument = this.parseExpression();\n    this.semicolon();\n    return this.finishNode(node, \"ThrowStatement\");\n  }\n\n  parseCatchClauseParam() {\n    const param = this.parseBindingAtom();\n    const simple = param.type === \"Identifier\";\n    this.scope.enter(simple ? SCOPE_SIMPLE_CATCH : 0);\n    this.checkLVal(param, \"catch clause\", BIND_LEXICAL);\n    return param;\n  }\n\n  parseTryStatement(node) {\n    this.next();\n    node.block = this.parseBlock();\n    node.handler = null;\n\n    if (this.match(types._catch)) {\n      const clause = this.startNode();\n      this.next();\n\n      if (this.match(types.parenL)) {\n        this.expect(types.parenL);\n        clause.param = this.parseCatchClauseParam();\n        this.expect(types.parenR);\n      } else {\n        clause.param = null;\n        this.scope.enter(SCOPE_OTHER);\n      }\n\n      clause.body = this.withTopicForbiddingContext(() => this.parseBlock(false, false));\n      this.scope.exit();\n      node.handler = this.finishNode(clause, \"CatchClause\");\n    }\n\n    node.finalizer = this.eat(types._finally) ? this.parseBlock() : null;\n\n    if (!node.handler && !node.finalizer) {\n      this.raise(node.start, ErrorMessages.NoCatchOrFinally);\n    }\n\n    return this.finishNode(node, \"TryStatement\");\n  }\n\n  parseVarStatement(node, kind) {\n    this.next();\n    this.parseVar(node, false, kind);\n    this.semicolon();\n    return this.finishNode(node, \"VariableDeclaration\");\n  }\n\n  parseWhileStatement(node) {\n    this.next();\n    node.test = this.parseHeaderExpression();\n    this.state.labels.push(loopLabel);\n    node.body = this.withTopicForbiddingContext(() => this.parseStatement(\"while\"));\n    this.state.labels.pop();\n    return this.finishNode(node, \"WhileStatement\");\n  }\n\n  parseWithStatement(node) {\n    if (this.state.strict) {\n      this.raise(this.state.start, ErrorMessages.StrictWith);\n    }\n\n    this.next();\n    node.object = this.parseHeaderExpression();\n    node.body = this.withTopicForbiddingContext(() => this.parseStatement(\"with\"));\n    return this.finishNode(node, \"WithStatement\");\n  }\n\n  parseEmptyStatement(node) {\n    this.next();\n    return this.finishNode(node, \"EmptyStatement\");\n  }\n\n  parseLabeledStatement(node, maybeName, expr, context) {\n    for (const label of this.state.labels) {\n      if (label.name === maybeName) {\n        this.raise(expr.start, ErrorMessages.LabelRedeclaration, maybeName);\n      }\n    }\n\n    const kind = this.state.type.isLoop ? \"loop\" : this.match(types._switch) ? \"switch\" : null;\n\n    for (let i = this.state.labels.length - 1; i >= 0; i--) {\n      const label = this.state.labels[i];\n\n      if (label.statementStart === node.start) {\n        label.statementStart = this.state.start;\n        label.kind = kind;\n      } else {\n        break;\n      }\n    }\n\n    this.state.labels.push({\n      name: maybeName,\n      kind: kind,\n      statementStart: this.state.start\n    });\n    node.body = this.parseStatement(context ? context.indexOf(\"label\") === -1 ? context + \"label\" : context : \"label\");\n    this.state.labels.pop();\n    node.label = expr;\n    return this.finishNode(node, \"LabeledStatement\");\n  }\n\n  parseExpressionStatement(node, expr) {\n    node.expression = expr;\n    this.semicolon();\n    return this.finishNode(node, \"ExpressionStatement\");\n  }\n\n  parseBlock(allowDirectives = false, createNewLexicalScope = true, afterBlockParse) {\n    const node = this.startNode();\n\n    if (allowDirectives) {\n      this.state.strictErrors.clear();\n    }\n\n    this.expect(types.braceL);\n\n    if (createNewLexicalScope) {\n      this.scope.enter(SCOPE_OTHER);\n    }\n\n    this.parseBlockBody(node, allowDirectives, false, types.braceR, afterBlockParse);\n\n    if (createNewLexicalScope) {\n      this.scope.exit();\n    }\n\n    return this.finishNode(node, \"BlockStatement\");\n  }\n\n  isValidDirective(stmt) {\n    return stmt.type === \"ExpressionStatement\" && stmt.expression.type === \"StringLiteral\" && !stmt.expression.extra.parenthesized;\n  }\n\n  parseBlockBody(node, allowDirectives, topLevel, end, afterBlockParse) {\n    const body = node.body = [];\n    const directives = node.directives = [];\n    this.parseBlockOrModuleBlockBody(body, allowDirectives ? directives : undefined, topLevel, end, afterBlockParse);\n  }\n\n  parseBlockOrModuleBlockBody(body, directives, topLevel, end, afterBlockParse) {\n    const oldStrict = this.state.strict;\n    let hasStrictModeDirective = false;\n    let parsedNonDirective = false;\n\n    while (!this.match(end)) {\n      const stmt = this.parseStatement(null, topLevel);\n\n      if (directives && !parsedNonDirective) {\n        if (this.isValidDirective(stmt)) {\n          const directive = this.stmtToDirective(stmt);\n          directives.push(directive);\n\n          if (!hasStrictModeDirective && directive.value.value === \"use strict\") {\n            hasStrictModeDirective = true;\n            this.setStrict(true);\n          }\n\n          continue;\n        }\n\n        parsedNonDirective = true;\n        this.state.strictErrors.clear();\n      }\n\n      body.push(stmt);\n    }\n\n    if (afterBlockParse) {\n      afterBlockParse.call(this, hasStrictModeDirective);\n    }\n\n    if (!oldStrict) {\n      this.setStrict(false);\n    }\n\n    this.next();\n  }\n\n  parseFor(node, init) {\n    node.init = init;\n    this.semicolon(false);\n    node.test = this.match(types.semi) ? null : this.parseExpression();\n    this.semicolon(false);\n    node.update = this.match(types.parenR) ? null : this.parseExpression();\n    this.expect(types.parenR);\n    node.body = this.withTopicForbiddingContext(() => this.parseStatement(\"for\"));\n    this.scope.exit();\n    this.state.labels.pop();\n    return this.finishNode(node, \"ForStatement\");\n  }\n\n  parseForIn(node, init, awaitAt) {\n    const isForIn = this.match(types._in);\n    this.next();\n\n    if (isForIn) {\n      if (awaitAt > -1) this.unexpected(awaitAt);\n    } else {\n      node.await = awaitAt > -1;\n    }\n\n    if (init.type === \"VariableDeclaration\" && init.declarations[0].init != null && (!isForIn || this.state.strict || init.kind !== \"var\" || init.declarations[0].id.type !== \"Identifier\")) {\n      this.raise(init.start, ErrorMessages.ForInOfLoopInitializer, isForIn ? \"for-in\" : \"for-of\");\n    } else if (init.type === \"AssignmentPattern\") {\n      this.raise(init.start, ErrorMessages.InvalidLhs, \"for-loop\");\n    }\n\n    node.left = init;\n    node.right = isForIn ? this.parseExpression() : this.parseMaybeAssignAllowIn();\n    this.expect(types.parenR);\n    node.body = this.withTopicForbiddingContext(() => this.parseStatement(\"for\"));\n    this.scope.exit();\n    this.state.labels.pop();\n    return this.finishNode(node, isForIn ? \"ForInStatement\" : \"ForOfStatement\");\n  }\n\n  parseVar(node, isFor, kind) {\n    const declarations = node.declarations = [];\n    const isTypescript = this.hasPlugin(\"typescript\");\n    node.kind = kind;\n\n    for (;;) {\n      const decl = this.startNode();\n      this.parseVarId(decl, kind);\n\n      if (this.eat(types.eq)) {\n        decl.init = isFor ? this.parseMaybeAssignDisallowIn() : this.parseMaybeAssignAllowIn();\n      } else {\n        if (kind === \"const\" && !(this.match(types._in) || this.isContextual(\"of\"))) {\n          if (!isTypescript) {\n            this.raise(this.state.lastTokEnd, ErrorMessages.DeclarationMissingInitializer, \"Const declarations\");\n          }\n        } else if (decl.id.type !== \"Identifier\" && !(isFor && (this.match(types._in) || this.isContextual(\"of\")))) {\n          this.raise(this.state.lastTokEnd, ErrorMessages.DeclarationMissingInitializer, \"Complex binding patterns\");\n        }\n\n        decl.init = null;\n      }\n\n      declarations.push(this.finishNode(decl, \"VariableDeclarator\"));\n      if (!this.eat(types.comma)) break;\n    }\n\n    return node;\n  }\n\n  parseVarId(decl, kind) {\n    decl.id = this.parseBindingAtom();\n    this.checkLVal(decl.id, \"variable declaration\", kind === \"var\" ? BIND_VAR : BIND_LEXICAL, undefined, kind !== \"var\");\n  }\n\n  parseFunction(node, statement = FUNC_NO_FLAGS, isAsync = false) {\n    const isStatement = statement & FUNC_STATEMENT;\n    const isHangingStatement = statement & FUNC_HANGING_STATEMENT;\n    const requireId = !!isStatement && !(statement & FUNC_NULLABLE_ID);\n    this.initFunction(node, isAsync);\n\n    if (this.match(types.star) && isHangingStatement) {\n      this.raise(this.state.start, ErrorMessages.GeneratorInSingleStatementContext);\n    }\n\n    node.generator = this.eat(types.star);\n\n    if (isStatement) {\n      node.id = this.parseFunctionId(requireId);\n    }\n\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n    this.state.maybeInArrowParameters = false;\n    this.scope.enter(SCOPE_FUNCTION);\n    this.prodParam.enter(functionFlags(isAsync, node.generator));\n\n    if (!isStatement) {\n      node.id = this.parseFunctionId();\n    }\n\n    this.parseFunctionParams(node, false);\n    this.withTopicForbiddingContext(() => {\n      this.parseFunctionBodyAndFinish(node, isStatement ? \"FunctionDeclaration\" : \"FunctionExpression\");\n    });\n    this.prodParam.exit();\n    this.scope.exit();\n\n    if (isStatement && !isHangingStatement) {\n      this.registerFunctionStatementId(node);\n    }\n\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n    return node;\n  }\n\n  parseFunctionId(requireId) {\n    return requireId || this.match(types.name) ? this.parseIdentifier() : null;\n  }\n\n  parseFunctionParams(node, allowModifiers) {\n    this.expect(types.parenL);\n    this.expressionScope.enter(newParameterDeclarationScope());\n    node.params = this.parseBindingList(types.parenR, 41, false, allowModifiers);\n    this.expressionScope.exit();\n  }\n\n  registerFunctionStatementId(node) {\n    if (!node.id) return;\n    this.scope.declareName(node.id.name, this.state.strict || node.generator || node.async ? this.scope.treatFunctionsAsVar ? BIND_VAR : BIND_LEXICAL : BIND_FUNCTION, node.id.start);\n  }\n\n  parseClass(node, isStatement, optionalId) {\n    this.next();\n    this.takeDecorators(node);\n    const oldStrict = this.state.strict;\n    this.state.strict = true;\n    this.parseClassId(node, isStatement, optionalId);\n    this.parseClassSuper(node);\n    node.body = this.parseClassBody(!!node.superClass, oldStrict);\n    return this.finishNode(node, isStatement ? \"ClassDeclaration\" : \"ClassExpression\");\n  }\n\n  isClassProperty() {\n    return this.match(types.eq) || this.match(types.semi) || this.match(types.braceR);\n  }\n\n  isClassMethod() {\n    return this.match(types.parenL);\n  }\n\n  isNonstaticConstructor(method) {\n    return !method.computed && !method.static && (method.key.name === \"constructor\" || method.key.value === \"constructor\");\n  }\n\n  parseClassBody(hadSuperClass, oldStrict) {\n    this.classScope.enter();\n    const state = {\n      hadConstructor: false,\n      hadSuperClass\n    };\n    let decorators = [];\n    const classBody = this.startNode();\n    classBody.body = [];\n    this.expect(types.braceL);\n    this.withTopicForbiddingContext(() => {\n      while (!this.match(types.braceR)) {\n        if (this.eat(types.semi)) {\n          if (decorators.length > 0) {\n            throw this.raise(this.state.lastTokEnd, ErrorMessages.DecoratorSemicolon);\n          }\n\n          continue;\n        }\n\n        if (this.match(types.at)) {\n          decorators.push(this.parseDecorator());\n          continue;\n        }\n\n        const member = this.startNode();\n\n        if (decorators.length) {\n          member.decorators = decorators;\n          this.resetStartLocationFromNode(member, decorators[0]);\n          decorators = [];\n        }\n\n        this.parseClassMember(classBody, member, state);\n\n        if (member.kind === \"constructor\" && member.decorators && member.decorators.length > 0) {\n          this.raise(member.start, ErrorMessages.DecoratorConstructor);\n        }\n      }\n    });\n    this.state.strict = oldStrict;\n    this.next();\n\n    if (decorators.length) {\n      throw this.raise(this.state.start, ErrorMessages.TrailingDecorator);\n    }\n\n    this.classScope.exit();\n    return this.finishNode(classBody, \"ClassBody\");\n  }\n\n  parseClassMemberFromModifier(classBody, member) {\n    const key = this.parseIdentifier(true);\n\n    if (this.isClassMethod()) {\n      const method = member;\n      method.kind = \"method\";\n      method.computed = false;\n      method.key = key;\n      method.static = false;\n      this.pushClassMethod(classBody, method, false, false, false, false);\n      return true;\n    } else if (this.isClassProperty()) {\n      const prop = member;\n      prop.computed = false;\n      prop.key = key;\n      prop.static = false;\n      classBody.body.push(this.parseClassProperty(prop));\n      return true;\n    }\n\n    return false;\n  }\n\n  parseClassMember(classBody, member, state) {\n    const isStatic = this.isContextual(\"static\");\n\n    if (isStatic) {\n      if (this.parseClassMemberFromModifier(classBody, member)) {\n        return;\n      }\n\n      if (this.eat(types.braceL)) {\n        this.parseClassStaticBlock(classBody, member);\n        return;\n      }\n    }\n\n    this.parseClassMemberWithIsStatic(classBody, member, state, isStatic);\n  }\n\n  parseClassMemberWithIsStatic(classBody, member, state, isStatic) {\n    const publicMethod = member;\n    const privateMethod = member;\n    const publicProp = member;\n    const privateProp = member;\n    const method = publicMethod;\n    const publicMember = publicMethod;\n    member.static = isStatic;\n\n    if (this.eat(types.star)) {\n      method.kind = \"method\";\n      this.parseClassElementName(method);\n\n      if (this.isPrivateName(method.key)) {\n        this.pushClassPrivateMethod(classBody, privateMethod, true, false);\n        return;\n      }\n\n      if (this.isNonstaticConstructor(publicMethod)) {\n        this.raise(publicMethod.key.start, ErrorMessages.ConstructorIsGenerator);\n      }\n\n      this.pushClassMethod(classBody, publicMethod, true, false, false, false);\n      return;\n    }\n\n    const containsEsc = this.state.containsEsc;\n    const key = this.parseClassElementName(member);\n    const isPrivate = this.isPrivateName(key);\n    const isSimple = key.type === \"Identifier\";\n    const maybeQuestionTokenStart = this.state.start;\n    this.parsePostMemberNameModifiers(publicMember);\n\n    if (this.isClassMethod()) {\n      method.kind = \"method\";\n\n      if (isPrivate) {\n        this.pushClassPrivateMethod(classBody, privateMethod, false, false);\n        return;\n      }\n\n      const isConstructor = this.isNonstaticConstructor(publicMethod);\n      let allowsDirectSuper = false;\n\n      if (isConstructor) {\n        publicMethod.kind = \"constructor\";\n\n        if (state.hadConstructor && !this.hasPlugin(\"typescript\")) {\n          this.raise(key.start, ErrorMessages.DuplicateConstructor);\n        }\n\n        if (isConstructor && this.hasPlugin(\"typescript\") && member.override) {\n          this.raise(key.start, ErrorMessages.OverrideOnConstructor);\n        }\n\n        state.hadConstructor = true;\n        allowsDirectSuper = state.hadSuperClass;\n      }\n\n      this.pushClassMethod(classBody, publicMethod, false, false, isConstructor, allowsDirectSuper);\n    } else if (this.isClassProperty()) {\n      if (isPrivate) {\n        this.pushClassPrivateProperty(classBody, privateProp);\n      } else {\n        this.pushClassProperty(classBody, publicProp);\n      }\n    } else if (isSimple && key.name === \"async\" && !containsEsc && !this.isLineTerminator()) {\n      const isGenerator = this.eat(types.star);\n\n      if (publicMember.optional) {\n        this.unexpected(maybeQuestionTokenStart);\n      }\n\n      method.kind = \"method\";\n      this.parseClassElementName(method);\n      this.parsePostMemberNameModifiers(publicMember);\n\n      if (this.isPrivateName(method.key)) {\n        this.pushClassPrivateMethod(classBody, privateMethod, isGenerator, true);\n      } else {\n        if (this.isNonstaticConstructor(publicMethod)) {\n          this.raise(publicMethod.key.start, ErrorMessages.ConstructorIsAsync);\n        }\n\n        this.pushClassMethod(classBody, publicMethod, isGenerator, true, false, false);\n      }\n    } else if (isSimple && (key.name === \"get\" || key.name === \"set\") && !containsEsc && !(this.match(types.star) && this.isLineTerminator())) {\n      method.kind = key.name;\n      this.parseClassElementName(publicMethod);\n\n      if (this.isPrivateName(method.key)) {\n        this.pushClassPrivateMethod(classBody, privateMethod, false, false);\n      } else {\n        if (this.isNonstaticConstructor(publicMethod)) {\n          this.raise(publicMethod.key.start, ErrorMessages.ConstructorIsAccessor);\n        }\n\n        this.pushClassMethod(classBody, publicMethod, false, false, false, false);\n      }\n\n      this.checkGetterSetterParams(publicMethod);\n    } else if (this.isLineTerminator()) {\n      if (isPrivate) {\n        this.pushClassPrivateProperty(classBody, privateProp);\n      } else {\n        this.pushClassProperty(classBody, publicProp);\n      }\n    } else {\n      this.unexpected();\n    }\n  }\n\n  parseClassElementName(member) {\n    const key = this.parsePropertyName(member, true);\n\n    if (!member.computed && member.static && (key.name === \"prototype\" || key.value === \"prototype\")) {\n      this.raise(key.start, ErrorMessages.StaticPrototype);\n    }\n\n    if (this.isPrivateName(key) && this.getPrivateNameSV(key) === \"constructor\") {\n      this.raise(key.start, ErrorMessages.ConstructorClassPrivateField);\n    }\n\n    return key;\n  }\n\n  parseClassStaticBlock(classBody, member) {\n    var _member$decorators;\n\n    this.expectPlugin(\"classStaticBlock\", member.start);\n    this.scope.enter(SCOPE_CLASS | SCOPE_STATIC_BLOCK | SCOPE_SUPER);\n    const oldLabels = this.state.labels;\n    this.state.labels = [];\n    this.prodParam.enter(PARAM);\n    const body = member.body = [];\n    this.parseBlockOrModuleBlockBody(body, undefined, false, types.braceR);\n    this.prodParam.exit();\n    this.scope.exit();\n    this.state.labels = oldLabels;\n    classBody.body.push(this.finishNode(member, \"StaticBlock\"));\n\n    if ((_member$decorators = member.decorators) != null && _member$decorators.length) {\n      this.raise(member.start, ErrorMessages.DecoratorStaticBlock);\n    }\n  }\n\n  pushClassProperty(classBody, prop) {\n    if (!prop.computed && (prop.key.name === \"constructor\" || prop.key.value === \"constructor\")) {\n      this.raise(prop.key.start, ErrorMessages.ConstructorClassField);\n    }\n\n    classBody.body.push(this.parseClassProperty(prop));\n  }\n\n  pushClassPrivateProperty(classBody, prop) {\n    const node = this.parseClassPrivateProperty(prop);\n    classBody.body.push(node);\n    this.classScope.declarePrivateName(this.getPrivateNameSV(node.key), CLASS_ELEMENT_OTHER, node.key.start);\n  }\n\n  pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper) {\n    classBody.body.push(this.parseMethod(method, isGenerator, isAsync, isConstructor, allowsDirectSuper, \"ClassMethod\", true));\n  }\n\n  pushClassPrivateMethod(classBody, method, isGenerator, isAsync) {\n    const node = this.parseMethod(method, isGenerator, isAsync, false, false, \"ClassPrivateMethod\", true);\n    classBody.body.push(node);\n    const kind = node.kind === \"get\" ? node.static ? CLASS_ELEMENT_STATIC_GETTER : CLASS_ELEMENT_INSTANCE_GETTER : node.kind === \"set\" ? node.static ? CLASS_ELEMENT_STATIC_SETTER : CLASS_ELEMENT_INSTANCE_SETTER : CLASS_ELEMENT_OTHER;\n    this.classScope.declarePrivateName(this.getPrivateNameSV(node.key), kind, node.key.start);\n  }\n\n  parsePostMemberNameModifiers(methodOrProp) {}\n\n  parseClassPrivateProperty(node) {\n    this.parseInitializer(node);\n    this.semicolon();\n    return this.finishNode(node, \"ClassPrivateProperty\");\n  }\n\n  parseClassProperty(node) {\n    this.parseInitializer(node);\n    this.semicolon();\n    return this.finishNode(node, \"ClassProperty\");\n  }\n\n  parseInitializer(node) {\n    this.scope.enter(SCOPE_CLASS | SCOPE_SUPER);\n    this.expressionScope.enter(newExpressionScope());\n    this.prodParam.enter(PARAM);\n    node.value = this.eat(types.eq) ? this.parseMaybeAssignAllowIn() : null;\n    this.expressionScope.exit();\n    this.prodParam.exit();\n    this.scope.exit();\n  }\n\n  parseClassId(node, isStatement, optionalId, bindingType = BIND_CLASS) {\n    if (this.match(types.name)) {\n      node.id = this.parseIdentifier();\n\n      if (isStatement) {\n        this.checkLVal(node.id, \"class name\", bindingType);\n      }\n    } else {\n      if (optionalId || !isStatement) {\n        node.id = null;\n      } else {\n        this.unexpected(null, ErrorMessages.MissingClassName);\n      }\n    }\n  }\n\n  parseClassSuper(node) {\n    node.superClass = this.eat(types._extends) ? this.parseExprSubscripts() : null;\n  }\n\n  parseExport(node) {\n    const hasDefault = this.maybeParseExportDefaultSpecifier(node);\n    const parseAfterDefault = !hasDefault || this.eat(types.comma);\n    const hasStar = parseAfterDefault && this.eatExportStar(node);\n    const hasNamespace = hasStar && this.maybeParseExportNamespaceSpecifier(node);\n    const parseAfterNamespace = parseAfterDefault && (!hasNamespace || this.eat(types.comma));\n    const isFromRequired = hasDefault || hasStar;\n\n    if (hasStar && !hasNamespace) {\n      if (hasDefault) this.unexpected();\n      this.parseExportFrom(node, true);\n      return this.finishNode(node, \"ExportAllDeclaration\");\n    }\n\n    const hasSpecifiers = this.maybeParseExportNamedSpecifiers(node);\n\n    if (hasDefault && parseAfterDefault && !hasStar && !hasSpecifiers || hasNamespace && parseAfterNamespace && !hasSpecifiers) {\n      throw this.unexpected(null, types.braceL);\n    }\n\n    let hasDeclaration;\n\n    if (isFromRequired || hasSpecifiers) {\n      hasDeclaration = false;\n      this.parseExportFrom(node, isFromRequired);\n    } else {\n      hasDeclaration = this.maybeParseExportDeclaration(node);\n    }\n\n    if (isFromRequired || hasSpecifiers || hasDeclaration) {\n      this.checkExport(node, true, false, !!node.source);\n      return this.finishNode(node, \"ExportNamedDeclaration\");\n    }\n\n    if (this.eat(types._default)) {\n      node.declaration = this.parseExportDefaultExpression();\n      this.checkExport(node, true, true);\n      return this.finishNode(node, \"ExportDefaultDeclaration\");\n    }\n\n    throw this.unexpected(null, types.braceL);\n  }\n\n  eatExportStar(node) {\n    return this.eat(types.star);\n  }\n\n  maybeParseExportDefaultSpecifier(node) {\n    if (this.isExportDefaultSpecifier()) {\n      this.expectPlugin(\"exportDefaultFrom\");\n      const specifier = this.startNode();\n      specifier.exported = this.parseIdentifier(true);\n      node.specifiers = [this.finishNode(specifier, \"ExportDefaultSpecifier\")];\n      return true;\n    }\n\n    return false;\n  }\n\n  maybeParseExportNamespaceSpecifier(node) {\n    if (this.isContextual(\"as\")) {\n      if (!node.specifiers) node.specifiers = [];\n      const specifier = this.startNodeAt(this.state.lastTokStart, this.state.lastTokStartLoc);\n      this.next();\n      specifier.exported = this.parseModuleExportName();\n      node.specifiers.push(this.finishNode(specifier, \"ExportNamespaceSpecifier\"));\n      return true;\n    }\n\n    return false;\n  }\n\n  maybeParseExportNamedSpecifiers(node) {\n    if (this.match(types.braceL)) {\n      if (!node.specifiers) node.specifiers = [];\n      node.specifiers.push(...this.parseExportSpecifiers());\n      node.source = null;\n      node.declaration = null;\n      return true;\n    }\n\n    return false;\n  }\n\n  maybeParseExportDeclaration(node) {\n    if (this.shouldParseExportDeclaration()) {\n      node.specifiers = [];\n      node.source = null;\n      node.declaration = this.parseExportDeclaration(node);\n      return true;\n    }\n\n    return false;\n  }\n\n  isAsyncFunction() {\n    if (!this.isContextual(\"async\")) return false;\n    const next = this.nextTokenStart();\n    return !lineBreak.test(this.input.slice(this.state.pos, next)) && this.isUnparsedContextual(next, \"function\");\n  }\n\n  parseExportDefaultExpression() {\n    const expr = this.startNode();\n    const isAsync = this.isAsyncFunction();\n\n    if (this.match(types._function) || isAsync) {\n      this.next();\n\n      if (isAsync) {\n        this.next();\n      }\n\n      return this.parseFunction(expr, FUNC_STATEMENT | FUNC_NULLABLE_ID, isAsync);\n    } else if (this.match(types._class)) {\n      return this.parseClass(expr, true, true);\n    } else if (this.match(types.at)) {\n      if (this.hasPlugin(\"decorators\") && this.getPluginOption(\"decorators\", \"decoratorsBeforeExport\")) {\n        this.raise(this.state.start, ErrorMessages.DecoratorBeforeExport);\n      }\n\n      this.parseDecorators(false);\n      return this.parseClass(expr, true, true);\n    } else if (this.match(types._const) || this.match(types._var) || this.isLet()) {\n      throw this.raise(this.state.start, ErrorMessages.UnsupportedDefaultExport);\n    } else {\n      const res = this.parseMaybeAssignAllowIn();\n      this.semicolon();\n      return res;\n    }\n  }\n\n  parseExportDeclaration(node) {\n    return this.parseStatement(null);\n  }\n\n  isExportDefaultSpecifier() {\n    if (this.match(types.name)) {\n      const value = this.state.value;\n\n      if (value === \"async\" && !this.state.containsEsc || value === \"let\") {\n        return false;\n      }\n\n      if ((value === \"type\" || value === \"interface\") && !this.state.containsEsc) {\n        const l = this.lookahead();\n\n        if (l.type === types.name && l.value !== \"from\" || l.type === types.braceL) {\n          this.expectOnePlugin([\"flow\", \"typescript\"]);\n          return false;\n        }\n      }\n    } else if (!this.match(types._default)) {\n      return false;\n    }\n\n    const next = this.nextTokenStart();\n    const hasFrom = this.isUnparsedContextual(next, \"from\");\n\n    if (this.input.charCodeAt(next) === 44 || this.match(types.name) && hasFrom) {\n      return true;\n    }\n\n    if (this.match(types._default) && hasFrom) {\n      const nextAfterFrom = this.input.charCodeAt(this.nextTokenStartSince(next + 4));\n      return nextAfterFrom === 34 || nextAfterFrom === 39;\n    }\n\n    return false;\n  }\n\n  parseExportFrom(node, expect) {\n    if (this.eatContextual(\"from\")) {\n      node.source = this.parseImportSource();\n      this.checkExport(node);\n      const assertions = this.maybeParseImportAssertions();\n\n      if (assertions) {\n        node.assertions = assertions;\n      }\n    } else {\n      if (expect) {\n        this.unexpected();\n      } else {\n        node.source = null;\n      }\n    }\n\n    this.semicolon();\n  }\n\n  shouldParseExportDeclaration() {\n    if (this.match(types.at)) {\n      this.expectOnePlugin([\"decorators\", \"decorators-legacy\"]);\n\n      if (this.hasPlugin(\"decorators\")) {\n        if (this.getPluginOption(\"decorators\", \"decoratorsBeforeExport\")) {\n          this.unexpected(this.state.start, ErrorMessages.DecoratorBeforeExport);\n        } else {\n          return true;\n        }\n      }\n    }\n\n    return this.state.type.keyword === \"var\" || this.state.type.keyword === \"const\" || this.state.type.keyword === \"function\" || this.state.type.keyword === \"class\" || this.isLet() || this.isAsyncFunction();\n  }\n\n  checkExport(node, checkNames, isDefault, isFrom) {\n    if (checkNames) {\n      if (isDefault) {\n        this.checkDuplicateExports(node, \"default\");\n\n        if (this.hasPlugin(\"exportDefaultFrom\")) {\n          var _declaration$extra;\n\n          const declaration = node.declaration;\n\n          if (declaration.type === \"Identifier\" && declaration.name === \"from\" && declaration.end - declaration.start === 4 && !((_declaration$extra = declaration.extra) != null && _declaration$extra.parenthesized)) {\n            this.raise(declaration.start, ErrorMessages.ExportDefaultFromAsIdentifier);\n          }\n        }\n      } else if (node.specifiers && node.specifiers.length) {\n        for (const specifier of node.specifiers) {\n          const {\n            exported\n          } = specifier;\n          const exportedName = exported.type === \"Identifier\" ? exported.name : exported.value;\n          this.checkDuplicateExports(specifier, exportedName);\n\n          if (!isFrom && specifier.local) {\n            const {\n              local\n            } = specifier;\n\n            if (local.type === \"StringLiteral\") {\n              this.raise(specifier.start, ErrorMessages.ExportBindingIsString, local.value, exportedName);\n            } else {\n              this.checkReservedWord(local.name, local.start, true, false);\n              this.scope.checkLocalExport(local);\n            }\n          }\n        }\n      } else if (node.declaration) {\n        if (node.declaration.type === \"FunctionDeclaration\" || node.declaration.type === \"ClassDeclaration\") {\n          const id = node.declaration.id;\n          if (!id) throw new Error(\"Assertion failure\");\n          this.checkDuplicateExports(node, id.name);\n        } else if (node.declaration.type === \"VariableDeclaration\") {\n          for (const declaration of node.declaration.declarations) {\n            this.checkDeclaration(declaration.id);\n          }\n        }\n      }\n    }\n\n    const currentContextDecorators = this.state.decoratorStack[this.state.decoratorStack.length - 1];\n\n    if (currentContextDecorators.length) {\n      throw this.raise(node.start, ErrorMessages.UnsupportedDecoratorExport);\n    }\n  }\n\n  checkDeclaration(node) {\n    if (node.type === \"Identifier\") {\n      this.checkDuplicateExports(node, node.name);\n    } else if (node.type === \"ObjectPattern\") {\n      for (const prop of node.properties) {\n        this.checkDeclaration(prop);\n      }\n    } else if (node.type === \"ArrayPattern\") {\n      for (const elem of node.elements) {\n        if (elem) {\n          this.checkDeclaration(elem);\n        }\n      }\n    } else if (node.type === \"ObjectProperty\") {\n      this.checkDeclaration(node.value);\n    } else if (node.type === \"RestElement\") {\n      this.checkDeclaration(node.argument);\n    } else if (node.type === \"AssignmentPattern\") {\n      this.checkDeclaration(node.left);\n    }\n  }\n\n  checkDuplicateExports(node, name) {\n    if (this.state.exportedIdentifiers.indexOf(name) > -1) {\n      this.raise(node.start, name === \"default\" ? ErrorMessages.DuplicateDefaultExport : ErrorMessages.DuplicateExport, name);\n    }\n\n    this.state.exportedIdentifiers.push(name);\n  }\n\n  parseExportSpecifiers() {\n    const nodes = [];\n    let first = true;\n    this.expect(types.braceL);\n\n    while (!this.eat(types.braceR)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(types.comma);\n        if (this.eat(types.braceR)) break;\n      }\n\n      const node = this.startNode();\n      node.local = this.parseModuleExportName();\n      node.exported = this.eatContextual(\"as\") ? this.parseModuleExportName() : node.local.__clone();\n      nodes.push(this.finishNode(node, \"ExportSpecifier\"));\n    }\n\n    return nodes;\n  }\n\n  parseModuleExportName() {\n    if (this.match(types.string)) {\n      const result = this.parseLiteral(this.state.value, \"StringLiteral\");\n      const surrogate = result.value.match(loneSurrogate);\n\n      if (surrogate) {\n        this.raise(result.start, ErrorMessages.ModuleExportNameHasLoneSurrogate, surrogate[0].charCodeAt(0).toString(16));\n      }\n\n      return result;\n    }\n\n    return this.parseIdentifier(true);\n  }\n\n  parseImport(node) {\n    node.specifiers = [];\n\n    if (!this.match(types.string)) {\n      const hasDefault = this.maybeParseDefaultImportSpecifier(node);\n      const parseNext = !hasDefault || this.eat(types.comma);\n      const hasStar = parseNext && this.maybeParseStarImportSpecifier(node);\n      if (parseNext && !hasStar) this.parseNamedImportSpecifiers(node);\n      this.expectContextual(\"from\");\n    }\n\n    node.source = this.parseImportSource();\n    const assertions = this.maybeParseImportAssertions();\n\n    if (assertions) {\n      node.assertions = assertions;\n    } else {\n        const attributes = this.maybeParseModuleAttributes();\n\n        if (attributes) {\n          node.attributes = attributes;\n        }\n      }\n\n    this.semicolon();\n    return this.finishNode(node, \"ImportDeclaration\");\n  }\n\n  parseImportSource() {\n    if (!this.match(types.string)) this.unexpected();\n    return this.parseExprAtom();\n  }\n\n  shouldParseDefaultImport(node) {\n    return this.match(types.name);\n  }\n\n  parseImportSpecifierLocal(node, specifier, type, contextDescription) {\n    specifier.local = this.parseIdentifier();\n    this.checkLVal(specifier.local, contextDescription, BIND_LEXICAL);\n    node.specifiers.push(this.finishNode(specifier, type));\n  }\n\n  parseAssertEntries() {\n    const attrs = [];\n    const attrNames = new Set();\n\n    do {\n      if (this.match(types.braceR)) {\n        break;\n      }\n\n      const node = this.startNode();\n      const keyName = this.state.value;\n\n      if (this.match(types.string)) {\n        node.key = this.parseLiteral(keyName, \"StringLiteral\");\n      } else {\n        node.key = this.parseIdentifier(true);\n      }\n\n      this.expect(types.colon);\n\n      if (keyName !== \"type\") {\n        this.raise(node.key.start, ErrorMessages.ModuleAttributeDifferentFromType, keyName);\n      }\n\n      if (attrNames.has(keyName)) {\n        this.raise(node.key.start, ErrorMessages.ModuleAttributesWithDuplicateKeys, keyName);\n      }\n\n      attrNames.add(keyName);\n\n      if (!this.match(types.string)) {\n        throw this.unexpected(this.state.start, ErrorMessages.ModuleAttributeInvalidValue);\n      }\n\n      node.value = this.parseLiteral(this.state.value, \"StringLiteral\");\n      this.finishNode(node, \"ImportAttribute\");\n      attrs.push(node);\n    } while (this.eat(types.comma));\n\n    return attrs;\n  }\n\n  maybeParseModuleAttributes() {\n    if (this.match(types._with) && !this.hasPrecedingLineBreak()) {\n      this.expectPlugin(\"moduleAttributes\");\n      this.next();\n    } else {\n      if (this.hasPlugin(\"moduleAttributes\")) return [];\n      return null;\n    }\n\n    const attrs = [];\n    const attributes = new Set();\n\n    do {\n      const node = this.startNode();\n      node.key = this.parseIdentifier(true);\n\n      if (node.key.name !== \"type\") {\n        this.raise(node.key.start, ErrorMessages.ModuleAttributeDifferentFromType, node.key.name);\n      }\n\n      if (attributes.has(node.key.name)) {\n        this.raise(node.key.start, ErrorMessages.ModuleAttributesWithDuplicateKeys, node.key.name);\n      }\n\n      attributes.add(node.key.name);\n      this.expect(types.colon);\n\n      if (!this.match(types.string)) {\n        throw this.unexpected(this.state.start, ErrorMessages.ModuleAttributeInvalidValue);\n      }\n\n      node.value = this.parseLiteral(this.state.value, \"StringLiteral\");\n      this.finishNode(node, \"ImportAttribute\");\n      attrs.push(node);\n    } while (this.eat(types.comma));\n\n    return attrs;\n  }\n\n  maybeParseImportAssertions() {\n    if (this.isContextual(\"assert\") && !this.hasPrecedingLineBreak()) {\n      this.expectPlugin(\"importAssertions\");\n      this.next();\n    } else {\n      if (this.hasPlugin(\"importAssertions\")) return [];\n      return null;\n    }\n\n    this.eat(types.braceL);\n    const attrs = this.parseAssertEntries();\n    this.eat(types.braceR);\n    return attrs;\n  }\n\n  maybeParseDefaultImportSpecifier(node) {\n    if (this.shouldParseDefaultImport(node)) {\n      this.parseImportSpecifierLocal(node, this.startNode(), \"ImportDefaultSpecifier\", \"default import specifier\");\n      return true;\n    }\n\n    return false;\n  }\n\n  maybeParseStarImportSpecifier(node) {\n    if (this.match(types.star)) {\n      const specifier = this.startNode();\n      this.next();\n      this.expectContextual(\"as\");\n      this.parseImportSpecifierLocal(node, specifier, \"ImportNamespaceSpecifier\", \"import namespace specifier\");\n      return true;\n    }\n\n    return false;\n  }\n\n  parseNamedImportSpecifiers(node) {\n    let first = true;\n    this.expect(types.braceL);\n\n    while (!this.eat(types.braceR)) {\n      if (first) {\n        first = false;\n      } else {\n        if (this.eat(types.colon)) {\n          throw this.raise(this.state.start, ErrorMessages.DestructureNamedImport);\n        }\n\n        this.expect(types.comma);\n        if (this.eat(types.braceR)) break;\n      }\n\n      this.parseImportSpecifier(node);\n    }\n  }\n\n  parseImportSpecifier(node) {\n    const specifier = this.startNode();\n    specifier.imported = this.parseModuleExportName();\n\n    if (this.eatContextual(\"as\")) {\n      specifier.local = this.parseIdentifier();\n    } else {\n      const {\n        imported\n      } = specifier;\n\n      if (imported.type === \"StringLiteral\") {\n        throw this.raise(specifier.start, ErrorMessages.ImportBindingIsString, imported.value);\n      }\n\n      this.checkReservedWord(imported.name, specifier.start, true, true);\n      specifier.local = imported.__clone();\n    }\n\n    this.checkLVal(specifier.local, \"import specifier\", BIND_LEXICAL);\n    node.specifiers.push(this.finishNode(specifier, \"ImportSpecifier\"));\n  }\n\n  isThisParam(param) {\n    return param.type === \"Identifier\" && param.name === \"this\";\n  }\n\n}\n\nclass Parser extends StatementParser {\n  constructor(options, input) {\n    options = getOptions(options);\n    super(options, input);\n    this.options = options;\n    this.initializeScopes();\n    this.plugins = pluginsMap(this.options.plugins);\n    this.filename = options.sourceFilename;\n  }\n\n  getScopeHandler() {\n    return ScopeHandler;\n  }\n\n  parse() {\n    this.enterInitialScopes();\n    const file = this.startNode();\n    const program = this.startNode();\n    this.nextToken();\n    file.errors = null;\n    this.parseTopLevel(file, program);\n    file.errors = this.state.errors;\n    return file;\n  }\n\n}\n\nfunction pluginsMap(plugins) {\n  const pluginMap = new Map();\n\n  for (const plugin of plugins) {\n    const [name, options] = Array.isArray(plugin) ? plugin : [plugin, {}];\n    if (!pluginMap.has(name)) pluginMap.set(name, options || {});\n  }\n\n  return pluginMap;\n}\n\nfunction parse(input, options) {\n  var _options;\n\n  if (((_options = options) == null ? void 0 : _options.sourceType) === \"unambiguous\") {\n    options = Object.assign({}, options);\n\n    try {\n      options.sourceType = \"module\";\n      const parser = getParser(options, input);\n      const ast = parser.parse();\n\n      if (parser.sawUnambiguousESM) {\n        return ast;\n      }\n\n      if (parser.ambiguousScriptDifferentAst) {\n        try {\n          options.sourceType = \"script\";\n          return getParser(options, input).parse();\n        } catch (_unused) {}\n      } else {\n        ast.program.sourceType = \"script\";\n      }\n\n      return ast;\n    } catch (moduleError) {\n      try {\n        options.sourceType = \"script\";\n        return getParser(options, input).parse();\n      } catch (_unused2) {}\n\n      throw moduleError;\n    }\n  } else {\n    return getParser(options, input).parse();\n  }\n}\nfunction parseExpression(input, options) {\n  const parser = getParser(options, input);\n\n  if (parser.options.strictMode) {\n    parser.state.strict = true;\n  }\n\n  return parser.getExpression();\n}\n\nfunction getParser(options, input) {\n  let cls = Parser;\n\n  if (options != null && options.plugins) {\n    validatePlugins(options.plugins);\n    cls = getParserClass(options.plugins);\n  }\n\n  return new cls(options, input);\n}\n\nconst parserClassCache = {};\n\nfunction getParserClass(pluginsFromOptions) {\n  const pluginList = mixinPluginNames.filter(name => hasPlugin(pluginsFromOptions, name));\n  const key = pluginList.join(\"/\");\n  let cls = parserClassCache[key];\n\n  if (!cls) {\n    cls = Parser;\n\n    for (const plugin of pluginList) {\n      cls = mixinPlugins[plugin](cls);\n    }\n\n    parserClassCache[key] = cls;\n  }\n\n  return cls;\n}\n\nexports.parse = parse;\nexports.parseExpression = parseExpression;\nexports.tokTypes = types;\n//# sourceMappingURL=index.js.map\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.codeFrameColumns = codeFrameColumns;\nexports.default = _default;\n\nvar _highlight = _interopRequireWildcard(require(\"@babel/highlight\"));\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nlet deprecationWarningShown = false;\n\nfunction getDefs(chalk) {\n  return {\n    gutter: chalk.grey,\n    marker: chalk.red.bold,\n    message: chalk.red.bold\n  };\n}\n\nconst NEWLINE = /\\r\\n|[\\n\\r\\u2028\\u2029]/;\n\nfunction getMarkerLines(loc, source, opts) {\n  const startLoc = Object.assign({\n    column: 0,\n    line: -1\n  }, loc.start);\n  const endLoc = Object.assign({}, startLoc, loc.end);\n  const {\n    linesAbove = 2,\n    linesBelow = 3\n  } = opts || {};\n  const startLine = startLoc.line;\n  const startColumn = startLoc.column;\n  const endLine = endLoc.line;\n  const endColumn = endLoc.column;\n  let start = Math.max(startLine - (linesAbove + 1), 0);\n  let end = Math.min(source.length, endLine + linesBelow);\n\n  if (startLine === -1) {\n    start = 0;\n  }\n\n  if (endLine === -1) {\n    end = source.length;\n  }\n\n  const lineDiff = endLine - startLine;\n  const markerLines = {};\n\n  if (lineDiff) {\n    for (let i = 0; i <= lineDiff; i++) {\n      const lineNumber = i + startLine;\n\n      if (!startColumn) {\n        markerLines[lineNumber] = true;\n      } else if (i === 0) {\n        const sourceLength = source[lineNumber - 1].length;\n        markerLines[lineNumber] = [startColumn, sourceLength - startColumn + 1];\n      } else if (i === lineDiff) {\n        markerLines[lineNumber] = [0, endColumn];\n      } else {\n        const sourceLength = source[lineNumber - i].length;\n        markerLines[lineNumber] = [0, sourceLength];\n      }\n    }\n  } else {\n    if (startColumn === endColumn) {\n      if (startColumn) {\n        markerLines[startLine] = [startColumn, 0];\n      } else {\n        markerLines[startLine] = true;\n      }\n    } else {\n      markerLines[startLine] = [startColumn, endColumn - startColumn];\n    }\n  }\n\n  return {\n    start,\n    end,\n    markerLines\n  };\n}\n\nfunction codeFrameColumns(rawLines, loc, opts = {}) {\n  const highlighted = (opts.highlightCode || opts.forceColor) && (0, _highlight.shouldHighlight)(opts);\n  const chalk = (0, _highlight.getChalk)(opts);\n  const defs = getDefs(chalk);\n\n  const maybeHighlight = (chalkFn, string) => {\n    return highlighted ? chalkFn(string) : string;\n  };\n\n  const lines = rawLines.split(NEWLINE);\n  const {\n    start,\n    end,\n    markerLines\n  } = getMarkerLines(loc, lines, opts);\n  const hasColumns = loc.start && typeof loc.start.column === \"number\";\n  const numberMaxWidth = String(end).length;\n  const highlightedLines = highlighted ? (0, _highlight.default)(rawLines, opts) : rawLines;\n  let frame = highlightedLines.split(NEWLINE).slice(start, end).map((line, index) => {\n    const number = start + 1 + index;\n    const paddedNumber = ` ${number}`.slice(-numberMaxWidth);\n    const gutter = ` ${paddedNumber} |`;\n    const hasMarker = markerLines[number];\n    const lastMarkerLine = !markerLines[number + 1];\n\n    if (hasMarker) {\n      let markerLine = \"\";\n\n      if (Array.isArray(hasMarker)) {\n        const markerSpacing = line.slice(0, Math.max(hasMarker[0] - 1, 0)).replace(/[^\\t]/g, \" \");\n        const numberOfMarkers = hasMarker[1] || 1;\n        markerLine = [\"\\n \", maybeHighlight(defs.gutter, gutter.replace(/\\d/g, \" \")), \" \", markerSpacing, maybeHighlight(defs.marker, \"^\").repeat(numberOfMarkers)].join(\"\");\n\n        if (lastMarkerLine && opts.message) {\n          markerLine += \" \" + maybeHighlight(defs.message, opts.message);\n        }\n      }\n\n      return [maybeHighlight(defs.marker, \">\"), maybeHighlight(defs.gutter, gutter), line.length > 0 ? ` ${line}` : \"\", markerLine].join(\"\");\n    } else {\n      return ` ${maybeHighlight(defs.gutter, gutter)}${line.length > 0 ? ` ${line}` : \"\"}`;\n    }\n  }).join(\"\\n\");\n\n  if (opts.message && !hasColumns) {\n    frame = `${\" \".repeat(numberMaxWidth + 1)}${opts.message}\\n${frame}`;\n  }\n\n  if (highlighted) {\n    return chalk.reset(frame);\n  } else {\n    return frame;\n  }\n}\n\nfunction _default(rawLines, lineNumber, colNumber, opts = {}) {\n  if (!deprecationWarningShown) {\n    deprecationWarningShown = true;\n    const message = \"Passing lineNumber and colNumber is deprecated to @babel/code-frame. Please use `codeFrameColumns`.\";\n\n    if (process.emitWarning) {\n      process.emitWarning(message, \"DeprecationWarning\");\n    } else {\n      const deprecationError = new Error(message);\n      deprecationError.name = \"DeprecationWarning\";\n      console.warn(new Error(message));\n    }\n  }\n\n  colNumber = Math.max(colNumber, 0);\n  const location = {\n    start: {\n      column: colNumber,\n      line: lineNumber\n    }\n  };\n  return codeFrameColumns(rawLines, location, opts);\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.merge = merge;\nexports.validate = validate;\nexports.normalizeReplacements = normalizeReplacements;\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction merge(a, b) {\n  const {\n    placeholderWhitelist = a.placeholderWhitelist,\n    placeholderPattern = a.placeholderPattern,\n    preserveComments = a.preserveComments,\n    syntacticPlaceholders = a.syntacticPlaceholders\n  } = b;\n  return {\n    parser: Object.assign({}, a.parser, b.parser),\n    placeholderWhitelist,\n    placeholderPattern,\n    preserveComments,\n    syntacticPlaceholders\n  };\n}\n\nfunction validate(opts) {\n  if (opts != null && typeof opts !== \"object\") {\n    throw new Error(\"Unknown template options.\");\n  }\n\n  const _ref = opts || {},\n        {\n    placeholderWhitelist,\n    placeholderPattern,\n    preserveComments,\n    syntacticPlaceholders\n  } = _ref,\n        parser = _objectWithoutPropertiesLoose(_ref, [\"placeholderWhitelist\", \"placeholderPattern\", \"preserveComments\", \"syntacticPlaceholders\"]);\n\n  if (placeholderWhitelist != null && !(placeholderWhitelist instanceof Set)) {\n    throw new Error(\"'.placeholderWhitelist' must be a Set, null, or undefined\");\n  }\n\n  if (placeholderPattern != null && !(placeholderPattern instanceof RegExp) && placeholderPattern !== false) {\n    throw new Error(\"'.placeholderPattern' must be a RegExp, false, null, or undefined\");\n  }\n\n  if (preserveComments != null && typeof preserveComments !== \"boolean\") {\n    throw new Error(\"'.preserveComments' must be a boolean, null, or undefined\");\n  }\n\n  if (syntacticPlaceholders != null && typeof syntacticPlaceholders !== \"boolean\") {\n    throw new Error(\"'.syntacticPlaceholders' must be a boolean, null, or undefined\");\n  }\n\n  if (syntacticPlaceholders === true && (placeholderWhitelist != null || placeholderPattern != null)) {\n    throw new Error(\"'.placeholderWhitelist' and '.placeholderPattern' aren't compatible\" + \" with '.syntacticPlaceholders: true'\");\n  }\n\n  return {\n    parser,\n    placeholderWhitelist: placeholderWhitelist || undefined,\n    placeholderPattern: placeholderPattern == null ? undefined : placeholderPattern,\n    preserveComments: preserveComments == null ? undefined : preserveComments,\n    syntacticPlaceholders: syntacticPlaceholders == null ? undefined : syntacticPlaceholders\n  };\n}\n\nfunction normalizeReplacements(replacements) {\n  if (Array.isArray(replacements)) {\n    return replacements.reduce((acc, replacement, i) => {\n      acc[\"$\" + i] = replacement;\n      return acc;\n    }, {});\n  } else if (typeof replacements === \"object\" || replacements == null) {\n    return replacements || undefined;\n  }\n\n  throw new Error(\"Template replacements must be an array, object, null, or undefined\");\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = parseAndBuildMetadata;\n\nvar t = _interopRequireWildcard(require(\"@babel/types\"));\n\nvar _parser = require(\"@babel/parser\");\n\nvar _codeFrame = require(\"@babel/code-frame\");\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nconst PATTERN = /^[_$A-Z0-9]+$/;\n\nfunction parseAndBuildMetadata(formatter, code, opts) {\n  const {\n    placeholderWhitelist,\n    placeholderPattern,\n    preserveComments,\n    syntacticPlaceholders\n  } = opts;\n  const ast = parseWithCodeFrame(code, opts.parser, syntacticPlaceholders);\n  t.removePropertiesDeep(ast, {\n    preserveComments\n  });\n  formatter.validate(ast);\n  const syntactic = {\n    placeholders: [],\n    placeholderNames: new Set()\n  };\n  const legacy = {\n    placeholders: [],\n    placeholderNames: new Set()\n  };\n  const isLegacyRef = {\n    value: undefined\n  };\n  t.traverse(ast, placeholderVisitorHandler, {\n    syntactic,\n    legacy,\n    isLegacyRef,\n    placeholderWhitelist,\n    placeholderPattern,\n    syntacticPlaceholders\n  });\n  return Object.assign({\n    ast\n  }, isLegacyRef.value ? legacy : syntactic);\n}\n\nfunction placeholderVisitorHandler(node, ancestors, state) {\n  var _state$placeholderWhi;\n\n  let name;\n\n  if (t.isPlaceholder(node)) {\n    if (state.syntacticPlaceholders === false) {\n      throw new Error(\"%%foo%%-style placeholders can't be used when \" + \"'.syntacticPlaceholders' is false.\");\n    } else {\n      name = node.name.name;\n      state.isLegacyRef.value = false;\n    }\n  } else if (state.isLegacyRef.value === false || state.syntacticPlaceholders) {\n    return;\n  } else if (t.isIdentifier(node) || t.isJSXIdentifier(node)) {\n    name = node.name;\n    state.isLegacyRef.value = true;\n  } else if (t.isStringLiteral(node)) {\n    name = node.value;\n    state.isLegacyRef.value = true;\n  } else {\n    return;\n  }\n\n  if (!state.isLegacyRef.value && (state.placeholderPattern != null || state.placeholderWhitelist != null)) {\n    throw new Error(\"'.placeholderWhitelist' and '.placeholderPattern' aren't compatible\" + \" with '.syntacticPlaceholders: true'\");\n  }\n\n  if (state.isLegacyRef.value && (state.placeholderPattern === false || !(state.placeholderPattern || PATTERN).test(name)) && !((_state$placeholderWhi = state.placeholderWhitelist) == null ? void 0 : _state$placeholderWhi.has(name))) {\n    return;\n  }\n\n  ancestors = ancestors.slice();\n  const {\n    node: parent,\n    key\n  } = ancestors[ancestors.length - 1];\n  let type;\n\n  if (t.isStringLiteral(node) || t.isPlaceholder(node, {\n    expectedNode: \"StringLiteral\"\n  })) {\n    type = \"string\";\n  } else if (t.isNewExpression(parent) && key === \"arguments\" || t.isCallExpression(parent) && key === \"arguments\" || t.isFunction(parent) && key === \"params\") {\n    type = \"param\";\n  } else if (t.isExpressionStatement(parent) && !t.isPlaceholder(node)) {\n    type = \"statement\";\n    ancestors = ancestors.slice(0, -1);\n  } else if (t.isStatement(node) && t.isPlaceholder(node)) {\n    type = \"statement\";\n  } else {\n    type = \"other\";\n  }\n\n  const {\n    placeholders,\n    placeholderNames\n  } = state.isLegacyRef.value ? state.legacy : state.syntactic;\n  placeholders.push({\n    name,\n    type,\n    resolve: ast => resolveAncestors(ast, ancestors),\n    isDuplicate: placeholderNames.has(name)\n  });\n  placeholderNames.add(name);\n}\n\nfunction resolveAncestors(ast, ancestors) {\n  let parent = ast;\n\n  for (let i = 0; i < ancestors.length - 1; i++) {\n    const {\n      key,\n      index\n    } = ancestors[i];\n\n    if (index === undefined) {\n      parent = parent[key];\n    } else {\n      parent = parent[key][index];\n    }\n  }\n\n  const {\n    key,\n    index\n  } = ancestors[ancestors.length - 1];\n  return {\n    parent,\n    key,\n    index\n  };\n}\n\nfunction parseWithCodeFrame(code, parserOpts, syntacticPlaceholders) {\n  const plugins = (parserOpts.plugins || []).slice();\n\n  if (syntacticPlaceholders !== false) {\n    plugins.push(\"placeholders\");\n  }\n\n  parserOpts = Object.assign({\n    allowReturnOutsideFunction: true,\n    allowSuperOutsideMethod: true,\n    sourceType: \"module\"\n  }, parserOpts, {\n    plugins\n  });\n\n  try {\n    return (0, _parser.parse)(code, parserOpts);\n  } catch (err) {\n    const loc = err.loc;\n\n    if (loc) {\n      err.message += \"\\n\" + (0, _codeFrame.codeFrameColumns)(code, {\n        start: loc\n      });\n      err.code = \"BABEL_TEMPLATE_PARSE_ERROR\";\n    }\n\n    throw err;\n  }\n}","/* MIT license */\nvar cssKeywords = require('color-name');\n\n// NOTE: conversions should only return primitive values (i.e. arrays, or\n//       values that give correct `typeof` results).\n//       do not use box values types (i.e. Number(), String(), etc.)\n\nvar reverseKeywords = {};\nfor (var key in cssKeywords) {\n\tif (cssKeywords.hasOwnProperty(key)) {\n\t\treverseKeywords[cssKeywords[key]] = key;\n\t}\n}\n\nvar convert = module.exports = {\n\trgb: {channels: 3, labels: 'rgb'},\n\thsl: {channels: 3, labels: 'hsl'},\n\thsv: {channels: 3, labels: 'hsv'},\n\thwb: {channels: 3, labels: 'hwb'},\n\tcmyk: {channels: 4, labels: 'cmyk'},\n\txyz: {channels: 3, labels: 'xyz'},\n\tlab: {channels: 3, labels: 'lab'},\n\tlch: {channels: 3, labels: 'lch'},\n\thex: {channels: 1, labels: ['hex']},\n\tkeyword: {channels: 1, labels: ['keyword']},\n\tansi16: {channels: 1, labels: ['ansi16']},\n\tansi256: {channels: 1, labels: ['ansi256']},\n\thcg: {channels: 3, labels: ['h', 'c', 'g']},\n\tapple: {channels: 3, labels: ['r16', 'g16', 'b16']},\n\tgray: {channels: 1, labels: ['gray']}\n};\n\n// hide .channels and .labels properties\nfor (var model in convert) {\n\tif (convert.hasOwnProperty(model)) {\n\t\tif (!('channels' in convert[model])) {\n\t\t\tthrow new Error('missing channels property: ' + model);\n\t\t}\n\n\t\tif (!('labels' in convert[model])) {\n\t\t\tthrow new Error('missing channel labels property: ' + model);\n\t\t}\n\n\t\tif (convert[model].labels.length !== convert[model].channels) {\n\t\t\tthrow new Error('channel and label counts mismatch: ' + model);\n\t\t}\n\n\t\tvar channels = convert[model].channels;\n\t\tvar labels = convert[model].labels;\n\t\tdelete convert[model].channels;\n\t\tdelete convert[model].labels;\n\t\tObject.defineProperty(convert[model], 'channels', {value: channels});\n\t\tObject.defineProperty(convert[model], 'labels', {value: labels});\n\t}\n}\n\nconvert.rgb.hsl = function (rgb) {\n\tvar r = rgb[0] / 255;\n\tvar g = rgb[1] / 255;\n\tvar b = rgb[2] / 255;\n\tvar min = Math.min(r, g, b);\n\tvar max = Math.max(r, g, b);\n\tvar delta = max - min;\n\tvar h;\n\tvar s;\n\tvar l;\n\n\tif (max === min) {\n\t\th = 0;\n\t} else if (r === max) {\n\t\th = (g - b) / delta;\n\t} else if (g === max) {\n\t\th = 2 + (b - r) / delta;\n\t} else if (b === max) {\n\t\th = 4 + (r - g) / delta;\n\t}\n\n\th = Math.min(h * 60, 360);\n\n\tif (h < 0) {\n\t\th += 360;\n\t}\n\n\tl = (min + max) / 2;\n\n\tif (max === min) {\n\t\ts = 0;\n\t} else if (l <= 0.5) {\n\t\ts = delta / (max + min);\n\t} else {\n\t\ts = delta / (2 - max - min);\n\t}\n\n\treturn [h, s * 100, l * 100];\n};\n\nconvert.rgb.hsv = function (rgb) {\n\tvar rdif;\n\tvar gdif;\n\tvar bdif;\n\tvar h;\n\tvar s;\n\n\tvar r = rgb[0] / 255;\n\tvar g = rgb[1] / 255;\n\tvar b = rgb[2] / 255;\n\tvar v = Math.max(r, g, b);\n\tvar diff = v - Math.min(r, g, b);\n\tvar diffc = function (c) {\n\t\treturn (v - c) / 6 / diff + 1 / 2;\n\t};\n\n\tif (diff === 0) {\n\t\th = s = 0;\n\t} else {\n\t\ts = diff / v;\n\t\trdif = diffc(r);\n\t\tgdif = diffc(g);\n\t\tbdif = diffc(b);\n\n\t\tif (r === v) {\n\t\t\th = bdif - gdif;\n\t\t} else if (g === v) {\n\t\t\th = (1 / 3) + rdif - bdif;\n\t\t} else if (b === v) {\n\t\t\th = (2 / 3) + gdif - rdif;\n\t\t}\n\t\tif (h < 0) {\n\t\t\th += 1;\n\t\t} else if (h > 1) {\n\t\t\th -= 1;\n\t\t}\n\t}\n\n\treturn [\n\t\th * 360,\n\t\ts * 100,\n\t\tv * 100\n\t];\n};\n\nconvert.rgb.hwb = function (rgb) {\n\tvar r = rgb[0];\n\tvar g = rgb[1];\n\tvar b = rgb[2];\n\tvar h = convert.rgb.hsl(rgb)[0];\n\tvar w = 1 / 255 * Math.min(r, Math.min(g, b));\n\n\tb = 1 - 1 / 255 * Math.max(r, Math.max(g, b));\n\n\treturn [h, w * 100, b * 100];\n};\n\nconvert.rgb.cmyk = function (rgb) {\n\tvar r = rgb[0] / 255;\n\tvar g = rgb[1] / 255;\n\tvar b = rgb[2] / 255;\n\tvar c;\n\tvar m;\n\tvar y;\n\tvar k;\n\n\tk = Math.min(1 - r, 1 - g, 1 - b);\n\tc = (1 - r - k) / (1 - k) || 0;\n\tm = (1 - g - k) / (1 - k) || 0;\n\ty = (1 - b - k) / (1 - k) || 0;\n\n\treturn [c * 100, m * 100, y * 100, k * 100];\n};\n\n/**\n * See https://en.m.wikipedia.org/wiki/Euclidean_distance#Squared_Euclidean_distance\n * */\nfunction comparativeDistance(x, y) {\n\treturn (\n\t\tMath.pow(x[0] - y[0], 2) +\n\t\tMath.pow(x[1] - y[1], 2) +\n\t\tMath.pow(x[2] - y[2], 2)\n\t);\n}\n\nconvert.rgb.keyword = function (rgb) {\n\tvar reversed = reverseKeywords[rgb];\n\tif (reversed) {\n\t\treturn reversed;\n\t}\n\n\tvar currentClosestDistance = Infinity;\n\tvar currentClosestKeyword;\n\n\tfor (var keyword in cssKeywords) {\n\t\tif (cssKeywords.hasOwnProperty(keyword)) {\n\t\t\tvar value = cssKeywords[keyword];\n\n\t\t\t// Compute comparative distance\n\t\t\tvar distance = comparativeDistance(rgb, value);\n\n\t\t\t// Check if its less, if so set as closest\n\t\t\tif (distance < currentClosestDistance) {\n\t\t\t\tcurrentClosestDistance = distance;\n\t\t\t\tcurrentClosestKeyword = keyword;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn currentClosestKeyword;\n};\n\nconvert.keyword.rgb = function (keyword) {\n\treturn cssKeywords[keyword];\n};\n\nconvert.rgb.xyz = function (rgb) {\n\tvar r = rgb[0] / 255;\n\tvar g = rgb[1] / 255;\n\tvar b = rgb[2] / 255;\n\n\t// assume sRGB\n\tr = r > 0.04045 ? Math.pow(((r + 0.055) / 1.055), 2.4) : (r / 12.92);\n\tg = g > 0.04045 ? Math.pow(((g + 0.055) / 1.055), 2.4) : (g / 12.92);\n\tb = b > 0.04045 ? Math.pow(((b + 0.055) / 1.055), 2.4) : (b / 12.92);\n\n\tvar x = (r * 0.4124) + (g * 0.3576) + (b * 0.1805);\n\tvar y = (r * 0.2126) + (g * 0.7152) + (b * 0.0722);\n\tvar z = (r * 0.0193) + (g * 0.1192) + (b * 0.9505);\n\n\treturn [x * 100, y * 100, z * 100];\n};\n\nconvert.rgb.lab = function (rgb) {\n\tvar xyz = convert.rgb.xyz(rgb);\n\tvar x = xyz[0];\n\tvar y = xyz[1];\n\tvar z = xyz[2];\n\tvar l;\n\tvar a;\n\tvar b;\n\n\tx /= 95.047;\n\ty /= 100;\n\tz /= 108.883;\n\n\tx = x > 0.008856 ? Math.pow(x, 1 / 3) : (7.787 * x) + (16 / 116);\n\ty = y > 0.008856 ? Math.pow(y, 1 / 3) : (7.787 * y) + (16 / 116);\n\tz = z > 0.008856 ? Math.pow(z, 1 / 3) : (7.787 * z) + (16 / 116);\n\n\tl = (116 * y) - 16;\n\ta = 500 * (x - y);\n\tb = 200 * (y - z);\n\n\treturn [l, a, b];\n};\n\nconvert.hsl.rgb = function (hsl) {\n\tvar h = hsl[0] / 360;\n\tvar s = hsl[1] / 100;\n\tvar l = hsl[2] / 100;\n\tvar t1;\n\tvar t2;\n\tvar t3;\n\tvar rgb;\n\tvar val;\n\n\tif (s === 0) {\n\t\tval = l * 255;\n\t\treturn [val, val, val];\n\t}\n\n\tif (l < 0.5) {\n\t\tt2 = l * (1 + s);\n\t} else {\n\t\tt2 = l + s - l * s;\n\t}\n\n\tt1 = 2 * l - t2;\n\n\trgb = [0, 0, 0];\n\tfor (var i = 0; i < 3; i++) {\n\t\tt3 = h + 1 / 3 * -(i - 1);\n\t\tif (t3 < 0) {\n\t\t\tt3++;\n\t\t}\n\t\tif (t3 > 1) {\n\t\t\tt3--;\n\t\t}\n\n\t\tif (6 * t3 < 1) {\n\t\t\tval = t1 + (t2 - t1) * 6 * t3;\n\t\t} else if (2 * t3 < 1) {\n\t\t\tval = t2;\n\t\t} else if (3 * t3 < 2) {\n\t\t\tval = t1 + (t2 - t1) * (2 / 3 - t3) * 6;\n\t\t} else {\n\t\t\tval = t1;\n\t\t}\n\n\t\trgb[i] = val * 255;\n\t}\n\n\treturn rgb;\n};\n\nconvert.hsl.hsv = function (hsl) {\n\tvar h = hsl[0];\n\tvar s = hsl[1] / 100;\n\tvar l = hsl[2] / 100;\n\tvar smin = s;\n\tvar lmin = Math.max(l, 0.01);\n\tvar sv;\n\tvar v;\n\n\tl *= 2;\n\ts *= (l <= 1) ? l : 2 - l;\n\tsmin *= lmin <= 1 ? lmin : 2 - lmin;\n\tv = (l + s) / 2;\n\tsv = l === 0 ? (2 * smin) / (lmin + smin) : (2 * s) / (l + s);\n\n\treturn [h, sv * 100, v * 100];\n};\n\nconvert.hsv.rgb = function (hsv) {\n\tvar h = hsv[0] / 60;\n\tvar s = hsv[1] / 100;\n\tvar v = hsv[2] / 100;\n\tvar hi = Math.floor(h) % 6;\n\n\tvar f = h - Math.floor(h);\n\tvar p = 255 * v * (1 - s);\n\tvar q = 255 * v * (1 - (s * f));\n\tvar t = 255 * v * (1 - (s * (1 - f)));\n\tv *= 255;\n\n\tswitch (hi) {\n\t\tcase 0:\n\t\t\treturn [v, t, p];\n\t\tcase 1:\n\t\t\treturn [q, v, p];\n\t\tcase 2:\n\t\t\treturn [p, v, t];\n\t\tcase 3:\n\t\t\treturn [p, q, v];\n\t\tcase 4:\n\t\t\treturn [t, p, v];\n\t\tcase 5:\n\t\t\treturn [v, p, q];\n\t}\n};\n\nconvert.hsv.hsl = function (hsv) {\n\tvar h = hsv[0];\n\tvar s = hsv[1] / 100;\n\tvar v = hsv[2] / 100;\n\tvar vmin = Math.max(v, 0.01);\n\tvar lmin;\n\tvar sl;\n\tvar l;\n\n\tl = (2 - s) * v;\n\tlmin = (2 - s) * vmin;\n\tsl = s * vmin;\n\tsl /= (lmin <= 1) ? lmin : 2 - lmin;\n\tsl = sl || 0;\n\tl /= 2;\n\n\treturn [h, sl * 100, l * 100];\n};\n\n// http://dev.w3.org/csswg/css-color/#hwb-to-rgb\nconvert.hwb.rgb = function (hwb) {\n\tvar h = hwb[0] / 360;\n\tvar wh = hwb[1] / 100;\n\tvar bl = hwb[2] / 100;\n\tvar ratio = wh + bl;\n\tvar i;\n\tvar v;\n\tvar f;\n\tvar n;\n\n\t// wh + bl cant be > 1\n\tif (ratio > 1) {\n\t\twh /= ratio;\n\t\tbl /= ratio;\n\t}\n\n\ti = Math.floor(6 * h);\n\tv = 1 - bl;\n\tf = 6 * h - i;\n\n\tif ((i & 0x01) !== 0) {\n\t\tf = 1 - f;\n\t}\n\n\tn = wh + f * (v - wh); // linear interpolation\n\n\tvar r;\n\tvar g;\n\tvar b;\n\tswitch (i) {\n\t\tdefault:\n\t\tcase 6:\n\t\tcase 0: r = v; g = n; b = wh; break;\n\t\tcase 1: r = n; g = v; b = wh; break;\n\t\tcase 2: r = wh; g = v; b = n; break;\n\t\tcase 3: r = wh; g = n; b = v; break;\n\t\tcase 4: r = n; g = wh; b = v; break;\n\t\tcase 5: r = v; g = wh; b = n; break;\n\t}\n\n\treturn [r * 255, g * 255, b * 255];\n};\n\nconvert.cmyk.rgb = function (cmyk) {\n\tvar c = cmyk[0] / 100;\n\tvar m = cmyk[1] / 100;\n\tvar y = cmyk[2] / 100;\n\tvar k = cmyk[3] / 100;\n\tvar r;\n\tvar g;\n\tvar b;\n\n\tr = 1 - Math.min(1, c * (1 - k) + k);\n\tg = 1 - Math.min(1, m * (1 - k) + k);\n\tb = 1 - Math.min(1, y * (1 - k) + k);\n\n\treturn [r * 255, g * 255, b * 255];\n};\n\nconvert.xyz.rgb = function (xyz) {\n\tvar x = xyz[0] / 100;\n\tvar y = xyz[1] / 100;\n\tvar z = xyz[2] / 100;\n\tvar r;\n\tvar g;\n\tvar b;\n\n\tr = (x * 3.2406) + (y * -1.5372) + (z * -0.4986);\n\tg = (x * -0.9689) + (y * 1.8758) + (z * 0.0415);\n\tb = (x * 0.0557) + (y * -0.2040) + (z * 1.0570);\n\n\t// assume sRGB\n\tr = r > 0.0031308\n\t\t? ((1.055 * Math.pow(r, 1.0 / 2.4)) - 0.055)\n\t\t: r * 12.92;\n\n\tg = g > 0.0031308\n\t\t? ((1.055 * Math.pow(g, 1.0 / 2.4)) - 0.055)\n\t\t: g * 12.92;\n\n\tb = b > 0.0031308\n\t\t? ((1.055 * Math.pow(b, 1.0 / 2.4)) - 0.055)\n\t\t: b * 12.92;\n\n\tr = Math.min(Math.max(0, r), 1);\n\tg = Math.min(Math.max(0, g), 1);\n\tb = Math.min(Math.max(0, b), 1);\n\n\treturn [r * 255, g * 255, b * 255];\n};\n\nconvert.xyz.lab = function (xyz) {\n\tvar x = xyz[0];\n\tvar y = xyz[1];\n\tvar z = xyz[2];\n\tvar l;\n\tvar a;\n\tvar b;\n\n\tx /= 95.047;\n\ty /= 100;\n\tz /= 108.883;\n\n\tx = x > 0.008856 ? Math.pow(x, 1 / 3) : (7.787 * x) + (16 / 116);\n\ty = y > 0.008856 ? Math.pow(y, 1 / 3) : (7.787 * y) + (16 / 116);\n\tz = z > 0.008856 ? Math.pow(z, 1 / 3) : (7.787 * z) + (16 / 116);\n\n\tl = (116 * y) - 16;\n\ta = 500 * (x - y);\n\tb = 200 * (y - z);\n\n\treturn [l, a, b];\n};\n\nconvert.lab.xyz = function (lab) {\n\tvar l = lab[0];\n\tvar a = lab[1];\n\tvar b = lab[2];\n\tvar x;\n\tvar y;\n\tvar z;\n\n\ty = (l + 16) / 116;\n\tx = a / 500 + y;\n\tz = y - b / 200;\n\n\tvar y2 = Math.pow(y, 3);\n\tvar x2 = Math.pow(x, 3);\n\tvar z2 = Math.pow(z, 3);\n\ty = y2 > 0.008856 ? y2 : (y - 16 / 116) / 7.787;\n\tx = x2 > 0.008856 ? x2 : (x - 16 / 116) / 7.787;\n\tz = z2 > 0.008856 ? z2 : (z - 16 / 116) / 7.787;\n\n\tx *= 95.047;\n\ty *= 100;\n\tz *= 108.883;\n\n\treturn [x, y, z];\n};\n\nconvert.lab.lch = function (lab) {\n\tvar l = lab[0];\n\tvar a = lab[1];\n\tvar b = lab[2];\n\tvar hr;\n\tvar h;\n\tvar c;\n\n\thr = Math.atan2(b, a);\n\th = hr * 360 / 2 / Math.PI;\n\n\tif (h < 0) {\n\t\th += 360;\n\t}\n\n\tc = Math.sqrt(a * a + b * b);\n\n\treturn [l, c, h];\n};\n\nconvert.lch.lab = function (lch) {\n\tvar l = lch[0];\n\tvar c = lch[1];\n\tvar h = lch[2];\n\tvar a;\n\tvar b;\n\tvar hr;\n\n\thr = h / 360 * 2 * Math.PI;\n\ta = c * Math.cos(hr);\n\tb = c * Math.sin(hr);\n\n\treturn [l, a, b];\n};\n\nconvert.rgb.ansi16 = function (args) {\n\tvar r = args[0];\n\tvar g = args[1];\n\tvar b = args[2];\n\tvar value = 1 in arguments ? arguments[1] : convert.rgb.hsv(args)[2]; // hsv -> ansi16 optimization\n\n\tvalue = Math.round(value / 50);\n\n\tif (value === 0) {\n\t\treturn 30;\n\t}\n\n\tvar ansi = 30\n\t\t+ ((Math.round(b / 255) << 2)\n\t\t| (Math.round(g / 255) << 1)\n\t\t| Math.round(r / 255));\n\n\tif (value === 2) {\n\t\tansi += 60;\n\t}\n\n\treturn ansi;\n};\n\nconvert.hsv.ansi16 = function (args) {\n\t// optimization here; we already know the value and don't need to get\n\t// it converted for us.\n\treturn convert.rgb.ansi16(convert.hsv.rgb(args), args[2]);\n};\n\nconvert.rgb.ansi256 = function (args) {\n\tvar r = args[0];\n\tvar g = args[1];\n\tvar b = args[2];\n\n\t// we use the extended greyscale palette here, with the exception of\n\t// black and white. normal palette only has 4 greyscale shades.\n\tif (r === g && g === b) {\n\t\tif (r < 8) {\n\t\t\treturn 16;\n\t\t}\n\n\t\tif (r > 248) {\n\t\t\treturn 231;\n\t\t}\n\n\t\treturn Math.round(((r - 8) / 247) * 24) + 232;\n\t}\n\n\tvar ansi = 16\n\t\t+ (36 * Math.round(r / 255 * 5))\n\t\t+ (6 * Math.round(g / 255 * 5))\n\t\t+ Math.round(b / 255 * 5);\n\n\treturn ansi;\n};\n\nconvert.ansi16.rgb = function (args) {\n\tvar color = args % 10;\n\n\t// handle greyscale\n\tif (color === 0 || color === 7) {\n\t\tif (args > 50) {\n\t\t\tcolor += 3.5;\n\t\t}\n\n\t\tcolor = color / 10.5 * 255;\n\n\t\treturn [color, color, color];\n\t}\n\n\tvar mult = (~~(args > 50) + 1) * 0.5;\n\tvar r = ((color & 1) * mult) * 255;\n\tvar g = (((color >> 1) & 1) * mult) * 255;\n\tvar b = (((color >> 2) & 1) * mult) * 255;\n\n\treturn [r, g, b];\n};\n\nconvert.ansi256.rgb = function (args) {\n\t// handle greyscale\n\tif (args >= 232) {\n\t\tvar c = (args - 232) * 10 + 8;\n\t\treturn [c, c, c];\n\t}\n\n\targs -= 16;\n\n\tvar rem;\n\tvar r = Math.floor(args / 36) / 5 * 255;\n\tvar g = Math.floor((rem = args % 36) / 6) / 5 * 255;\n\tvar b = (rem % 6) / 5 * 255;\n\n\treturn [r, g, b];\n};\n\nconvert.rgb.hex = function (args) {\n\tvar integer = ((Math.round(args[0]) & 0xFF) << 16)\n\t\t+ ((Math.round(args[1]) & 0xFF) << 8)\n\t\t+ (Math.round(args[2]) & 0xFF);\n\n\tvar string = integer.toString(16).toUpperCase();\n\treturn '000000'.substring(string.length) + string;\n};\n\nconvert.hex.rgb = function (args) {\n\tvar match = args.toString(16).match(/[a-f0-9]{6}|[a-f0-9]{3}/i);\n\tif (!match) {\n\t\treturn [0, 0, 0];\n\t}\n\n\tvar colorString = match[0];\n\n\tif (match[0].length === 3) {\n\t\tcolorString = colorString.split('').map(function (char) {\n\t\t\treturn char + char;\n\t\t}).join('');\n\t}\n\n\tvar integer = parseInt(colorString, 16);\n\tvar r = (integer >> 16) & 0xFF;\n\tvar g = (integer >> 8) & 0xFF;\n\tvar b = integer & 0xFF;\n\n\treturn [r, g, b];\n};\n\nconvert.rgb.hcg = function (rgb) {\n\tvar r = rgb[0] / 255;\n\tvar g = rgb[1] / 255;\n\tvar b = rgb[2] / 255;\n\tvar max = Math.max(Math.max(r, g), b);\n\tvar min = Math.min(Math.min(r, g), b);\n\tvar chroma = (max - min);\n\tvar grayscale;\n\tvar hue;\n\n\tif (chroma < 1) {\n\t\tgrayscale = min / (1 - chroma);\n\t} else {\n\t\tgrayscale = 0;\n\t}\n\n\tif (chroma <= 0) {\n\t\thue = 0;\n\t} else\n\tif (max === r) {\n\t\thue = ((g - b) / chroma) % 6;\n\t} else\n\tif (max === g) {\n\t\thue = 2 + (b - r) / chroma;\n\t} else {\n\t\thue = 4 + (r - g) / chroma + 4;\n\t}\n\n\thue /= 6;\n\thue %= 1;\n\n\treturn [hue * 360, chroma * 100, grayscale * 100];\n};\n\nconvert.hsl.hcg = function (hsl) {\n\tvar s = hsl[1] / 100;\n\tvar l = hsl[2] / 100;\n\tvar c = 1;\n\tvar f = 0;\n\n\tif (l < 0.5) {\n\t\tc = 2.0 * s * l;\n\t} else {\n\t\tc = 2.0 * s * (1.0 - l);\n\t}\n\n\tif (c < 1.0) {\n\t\tf = (l - 0.5 * c) / (1.0 - c);\n\t}\n\n\treturn [hsl[0], c * 100, f * 100];\n};\n\nconvert.hsv.hcg = function (hsv) {\n\tvar s = hsv[1] / 100;\n\tvar v = hsv[2] / 100;\n\n\tvar c = s * v;\n\tvar f = 0;\n\n\tif (c < 1.0) {\n\t\tf = (v - c) / (1 - c);\n\t}\n\n\treturn [hsv[0], c * 100, f * 100];\n};\n\nconvert.hcg.rgb = function (hcg) {\n\tvar h = hcg[0] / 360;\n\tvar c = hcg[1] / 100;\n\tvar g = hcg[2] / 100;\n\n\tif (c === 0.0) {\n\t\treturn [g * 255, g * 255, g * 255];\n\t}\n\n\tvar pure = [0, 0, 0];\n\tvar hi = (h % 1) * 6;\n\tvar v = hi % 1;\n\tvar w = 1 - v;\n\tvar mg = 0;\n\n\tswitch (Math.floor(hi)) {\n\t\tcase 0:\n\t\t\tpure[0] = 1; pure[1] = v; pure[2] = 0; break;\n\t\tcase 1:\n\t\t\tpure[0] = w; pure[1] = 1; pure[2] = 0; break;\n\t\tcase 2:\n\t\t\tpure[0] = 0; pure[1] = 1; pure[2] = v; break;\n\t\tcase 3:\n\t\t\tpure[0] = 0; pure[1] = w; pure[2] = 1; break;\n\t\tcase 4:\n\t\t\tpure[0] = v; pure[1] = 0; pure[2] = 1; break;\n\t\tdefault:\n\t\t\tpure[0] = 1; pure[1] = 0; pure[2] = w;\n\t}\n\n\tmg = (1.0 - c) * g;\n\n\treturn [\n\t\t(c * pure[0] + mg) * 255,\n\t\t(c * pure[1] + mg) * 255,\n\t\t(c * pure[2] + mg) * 255\n\t];\n};\n\nconvert.hcg.hsv = function (hcg) {\n\tvar c = hcg[1] / 100;\n\tvar g = hcg[2] / 100;\n\n\tvar v = c + g * (1.0 - c);\n\tvar f = 0;\n\n\tif (v > 0.0) {\n\t\tf = c / v;\n\t}\n\n\treturn [hcg[0], f * 100, v * 100];\n};\n\nconvert.hcg.hsl = function (hcg) {\n\tvar c = hcg[1] / 100;\n\tvar g = hcg[2] / 100;\n\n\tvar l = g * (1.0 - c) + 0.5 * c;\n\tvar s = 0;\n\n\tif (l > 0.0 && l < 0.5) {\n\t\ts = c / (2 * l);\n\t} else\n\tif (l >= 0.5 && l < 1.0) {\n\t\ts = c / (2 * (1 - l));\n\t}\n\n\treturn [hcg[0], s * 100, l * 100];\n};\n\nconvert.hcg.hwb = function (hcg) {\n\tvar c = hcg[1] / 100;\n\tvar g = hcg[2] / 100;\n\tvar v = c + g * (1.0 - c);\n\treturn [hcg[0], (v - c) * 100, (1 - v) * 100];\n};\n\nconvert.hwb.hcg = function (hwb) {\n\tvar w = hwb[1] / 100;\n\tvar b = hwb[2] / 100;\n\tvar v = 1 - b;\n\tvar c = v - w;\n\tvar g = 0;\n\n\tif (c < 1) {\n\t\tg = (v - c) / (1 - c);\n\t}\n\n\treturn [hwb[0], c * 100, g * 100];\n};\n\nconvert.apple.rgb = function (apple) {\n\treturn [(apple[0] / 65535) * 255, (apple[1] / 65535) * 255, (apple[2] / 65535) * 255];\n};\n\nconvert.rgb.apple = function (rgb) {\n\treturn [(rgb[0] / 255) * 65535, (rgb[1] / 255) * 65535, (rgb[2] / 255) * 65535];\n};\n\nconvert.gray.rgb = function (args) {\n\treturn [args[0] / 100 * 255, args[0] / 100 * 255, args[0] / 100 * 255];\n};\n\nconvert.gray.hsl = convert.gray.hsv = function (args) {\n\treturn [0, 0, args[0]];\n};\n\nconvert.gray.hwb = function (gray) {\n\treturn [0, 100, gray[0]];\n};\n\nconvert.gray.cmyk = function (gray) {\n\treturn [0, 0, 0, gray[0]];\n};\n\nconvert.gray.lab = function (gray) {\n\treturn [gray[0], 0, 0];\n};\n\nconvert.gray.hex = function (gray) {\n\tvar val = Math.round(gray[0] / 100 * 255) & 0xFF;\n\tvar integer = (val << 16) + (val << 8) + val;\n\n\tvar string = integer.toString(16).toUpperCase();\n\treturn '000000'.substring(string.length) + string;\n};\n\nconvert.rgb.gray = function (rgb) {\n\tvar val = (rgb[0] + rgb[1] + rgb[2]) / 3;\n\treturn [val / 255 * 100];\n};\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = populatePlaceholders;\n\nvar t = _interopRequireWildcard(require(\"@babel/types\"));\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction populatePlaceholders(metadata, replacements) {\n  const ast = t.cloneNode(metadata.ast);\n\n  if (replacements) {\n    metadata.placeholders.forEach(placeholder => {\n      if (!Object.prototype.hasOwnProperty.call(replacements, placeholder.name)) {\n        const placeholderName = placeholder.name;\n        throw new Error(`Error: No substitution given for \"${placeholderName}\". If this is not meant to be a\n            placeholder you may want to consider passing one of the following options to @babel/template:\n            - { placeholderPattern: false, placeholderWhitelist: new Set(['${placeholderName}'])}\n            - { placeholderPattern: /^${placeholderName}$/ }`);\n      }\n    });\n    Object.keys(replacements).forEach(key => {\n      if (!metadata.placeholderNames.has(key)) {\n        throw new Error(`Unknown substitution \"${key}\" given`);\n      }\n    });\n  }\n\n  metadata.placeholders.slice().reverse().forEach(placeholder => {\n    try {\n      applyReplacement(placeholder, ast, replacements && replacements[placeholder.name] || null);\n    } catch (e) {\n      e.message = `@babel/template placeholder \"${placeholder.name}\": ${e.message}`;\n      throw e;\n    }\n  });\n  return ast;\n}\n\nfunction applyReplacement(placeholder, ast, replacement) {\n  if (placeholder.isDuplicate) {\n    if (Array.isArray(replacement)) {\n      replacement = replacement.map(node => t.cloneNode(node));\n    } else if (typeof replacement === \"object\") {\n      replacement = t.cloneNode(replacement);\n    }\n  }\n\n  const {\n    parent,\n    key,\n    index\n  } = placeholder.resolve(ast);\n\n  if (placeholder.type === \"string\") {\n    if (typeof replacement === \"string\") {\n      replacement = t.stringLiteral(replacement);\n    }\n\n    if (!replacement || !t.isStringLiteral(replacement)) {\n      throw new Error(\"Expected string substitution\");\n    }\n  } else if (placeholder.type === \"statement\") {\n    if (index === undefined) {\n      if (!replacement) {\n        replacement = t.emptyStatement();\n      } else if (Array.isArray(replacement)) {\n        replacement = t.blockStatement(replacement);\n      } else if (typeof replacement === \"string\") {\n        replacement = t.expressionStatement(t.identifier(replacement));\n      } else if (!t.isStatement(replacement)) {\n        replacement = t.expressionStatement(replacement);\n      }\n    } else {\n      if (replacement && !Array.isArray(replacement)) {\n        if (typeof replacement === \"string\") {\n          replacement = t.identifier(replacement);\n        }\n\n        if (!t.isStatement(replacement)) {\n          replacement = t.expressionStatement(replacement);\n        }\n      }\n    }\n  } else if (placeholder.type === \"param\") {\n    if (typeof replacement === \"string\") {\n      replacement = t.identifier(replacement);\n    }\n\n    if (index === undefined) throw new Error(\"Assertion failure.\");\n  } else {\n    if (typeof replacement === \"string\") {\n      replacement = t.identifier(replacement);\n    }\n\n    if (Array.isArray(replacement)) {\n      throw new Error(\"Cannot replace single expression with an array.\");\n    }\n  }\n\n  if (index === undefined) {\n    t.validate(parent, key, replacement);\n    parent[key] = replacement;\n  } else {\n    const items = parent[key].slice();\n\n    if (placeholder.type === \"statement\" || placeholder.type === \"param\") {\n      if (replacement == null) {\n        items.splice(index, 1);\n      } else if (Array.isArray(replacement)) {\n        items.splice(index, 1, ...replacement);\n      } else {\n        items[index] = replacement;\n      }\n    } else {\n      items[index] = replacement;\n    }\n\n    t.validate(parent, key, items);\n    parent[key] = items;\n  }\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _helperPluginUtils = require(\"@babel/helper-plugin-utils\");\n\nvar _helperAnnotateAsPure = _interopRequireDefault(require(\"@babel/helper-annotate-as-pure\"));\n\nvar _helperFunctionName = _interopRequireDefault(require(\"@babel/helper-function-name\"));\n\nvar _helperSplitExportDeclaration = _interopRequireDefault(require(\"@babel/helper-split-export-declaration\"));\n\nvar _core = require(\"@babel/core\");\n\nvar _globals = _interopRequireDefault(require(\"globals\"));\n\nvar _transformClass = _interopRequireDefault(require(\"./transformClass\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst getBuiltinClasses = category => Object.keys(_globals.default[category]).filter(name => /^[A-Z]/.test(name));\n\nconst builtinClasses = new Set([...getBuiltinClasses(\"builtin\"), ...getBuiltinClasses(\"browser\")]);\n\nvar _default = (0, _helperPluginUtils.declare)((api, options) => {\n  var _api$assumption, _api$assumption2, _api$assumption3, _api$assumption4;\n\n  api.assertVersion(7);\n  const {\n    loose\n  } = options;\n  const setClassMethods = (_api$assumption = api.assumption(\"setClassMethods\")) != null ? _api$assumption : options.loose;\n  const constantSuper = (_api$assumption2 = api.assumption(\"constantSuper\")) != null ? _api$assumption2 : options.loose;\n  const superIsCallableConstructor = (_api$assumption3 = api.assumption(\"superIsCallableConstructor\")) != null ? _api$assumption3 : options.loose;\n  const noClassCalls = (_api$assumption4 = api.assumption(\"noClassCalls\")) != null ? _api$assumption4 : options.loose;\n  const VISITED = Symbol();\n  return {\n    name: \"transform-classes\",\n    visitor: {\n      ExportDefaultDeclaration(path) {\n        if (!path.get(\"declaration\").isClassDeclaration()) return;\n        (0, _helperSplitExportDeclaration.default)(path);\n      },\n\n      ClassDeclaration(path) {\n        const {\n          node\n        } = path;\n        const ref = node.id || path.scope.generateUidIdentifier(\"class\");\n        path.replaceWith(_core.types.variableDeclaration(\"let\", [_core.types.variableDeclarator(ref, _core.types.toExpression(node))]));\n      },\n\n      ClassExpression(path, state) {\n        const {\n          node\n        } = path;\n        if (node[VISITED]) return;\n        const inferred = (0, _helperFunctionName.default)(path);\n\n        if (inferred && inferred !== node) {\n          path.replaceWith(inferred);\n          return;\n        }\n\n        node[VISITED] = true;\n        path.replaceWith((0, _transformClass.default)(path, state.file, builtinClasses, loose, {\n          setClassMethods,\n          constantSuper,\n          superIsCallableConstructor,\n          noClassCalls\n        }));\n\n        if (path.isCallExpression()) {\n          (0, _helperAnnotateAsPure.default)(path);\n\n          if (path.get(\"callee\").isArrowFunctionExpression()) {\n            path.get(\"callee\").arrowFunctionToExpression();\n          }\n        }\n      }\n\n    }\n  };\n});\n\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.program = exports.expression = exports.statement = exports.statements = exports.smart = void 0;\n\nvar t = _interopRequireWildcard(require(\"@babel/types\"));\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction makeStatementFormatter(fn) {\n  return {\n    code: str => `/* @babel/template */;\\n${str}`,\n    validate: () => {},\n    unwrap: ast => {\n      return fn(ast.program.body.slice(1));\n    }\n  };\n}\n\nconst smart = makeStatementFormatter(body => {\n  if (body.length > 1) {\n    return body;\n  } else {\n    return body[0];\n  }\n});\nexports.smart = smart;\nconst statements = makeStatementFormatter(body => body);\nexports.statements = statements;\nconst statement = makeStatementFormatter(body => {\n  if (body.length === 0) {\n    throw new Error(\"Found nothing to return.\");\n  }\n\n  if (body.length > 1) {\n    throw new Error(\"Found multiple statements but wanted one\");\n  }\n\n  return body[0];\n});\nexports.statement = statement;\nconst expression = {\n  code: str => `(\\n${str}\\n)`,\n  validate: ast => {\n    if (ast.program.body.length > 1) {\n      throw new Error(\"Found multiple statements but wanted one\");\n    }\n\n    if (expression.unwrap(ast).start === 0) {\n      throw new Error(\"Parse result included parens.\");\n    }\n  },\n  unwrap: ({\n    program\n  }) => {\n    const [stmt] = program.body;\n    t.assertExpressionStatement(stmt);\n    return stmt.expression;\n  }\n};\nexports.expression = expression;\nconst program = {\n  code: str => str,\n  validate: () => {},\n  unwrap: ast => ast.program\n};\nexports.program = program;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = createTemplateBuilder;\n\nvar _options = require(\"./options\");\n\nvar _string = _interopRequireDefault(require(\"./string\"));\n\nvar _literal = _interopRequireDefault(require(\"./literal\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst NO_PLACEHOLDER = (0, _options.validate)({\n  placeholderPattern: false\n});\n\nfunction createTemplateBuilder(formatter, defaultOpts) {\n  const templateFnCache = new WeakMap();\n  const templateAstCache = new WeakMap();\n  const cachedOpts = defaultOpts || (0, _options.validate)(null);\n  return Object.assign((tpl, ...args) => {\n    if (typeof tpl === \"string\") {\n      if (args.length > 1) throw new Error(\"Unexpected extra params.\");\n      return extendedTrace((0, _string.default)(formatter, tpl, (0, _options.merge)(cachedOpts, (0, _options.validate)(args[0]))));\n    } else if (Array.isArray(tpl)) {\n      let builder = templateFnCache.get(tpl);\n\n      if (!builder) {\n        builder = (0, _literal.default)(formatter, tpl, cachedOpts);\n        templateFnCache.set(tpl, builder);\n      }\n\n      return extendedTrace(builder(args));\n    } else if (typeof tpl === \"object\" && tpl) {\n      if (args.length > 0) throw new Error(\"Unexpected extra params.\");\n      return createTemplateBuilder(formatter, (0, _options.merge)(cachedOpts, (0, _options.validate)(tpl)));\n    }\n\n    throw new Error(`Unexpected template param ${typeof tpl}`);\n  }, {\n    ast: (tpl, ...args) => {\n      if (typeof tpl === \"string\") {\n        if (args.length > 1) throw new Error(\"Unexpected extra params.\");\n        return (0, _string.default)(formatter, tpl, (0, _options.merge)((0, _options.merge)(cachedOpts, (0, _options.validate)(args[0])), NO_PLACEHOLDER))();\n      } else if (Array.isArray(tpl)) {\n        let builder = templateAstCache.get(tpl);\n\n        if (!builder) {\n          builder = (0, _literal.default)(formatter, tpl, (0, _options.merge)(cachedOpts, NO_PLACEHOLDER));\n          templateAstCache.set(tpl, builder);\n        }\n\n        return builder(args)();\n      }\n\n      throw new Error(`Unexpected template param ${typeof tpl}`);\n    }\n  });\n}\n\nfunction extendedTrace(fn) {\n  let rootStack = \"\";\n\n  try {\n    throw new Error();\n  } catch (error) {\n    if (error.stack) {\n      rootStack = error.stack.split(\"\\n\").slice(3).join(\"\\n\");\n    }\n  }\n\n  return arg => {\n    try {\n      return fn(arg);\n    } catch (err) {\n      err.stack += `\\n    =============\\n${rootStack}`;\n      throw err;\n    }\n  };\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = stringTemplate;\n\nvar _options = require(\"./options\");\n\nvar _parse = _interopRequireDefault(require(\"./parse\"));\n\nvar _populate = _interopRequireDefault(require(\"./populate\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction stringTemplate(formatter, code, opts) {\n  code = formatter.code(code);\n  let metadata;\n  return arg => {\n    const replacements = (0, _options.normalizeReplacements)(arg);\n    if (!metadata) metadata = (0, _parse.default)(formatter, code, opts);\n    return formatter.unwrap((0, _populate.default)(metadata, replacements));\n  };\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.shouldHighlight = shouldHighlight;\nexports.getChalk = getChalk;\nexports.default = highlight;\n\nvar _helperValidatorIdentifier = require(\"@babel/helper-validator-identifier\");\n\nconst jsTokens = require(\"js-tokens\");\n\nconst Chalk = require(\"chalk\");\n\nconst sometimesKeywords = new Set([\"as\", \"async\", \"from\", \"get\", \"of\", \"set\"]);\n\nfunction getDefs(chalk) {\n  return {\n    keyword: chalk.cyan,\n    capitalized: chalk.yellow,\n    jsxIdentifier: chalk.yellow,\n    punctuator: chalk.yellow,\n    number: chalk.magenta,\n    string: chalk.green,\n    regex: chalk.magenta,\n    comment: chalk.grey,\n    invalid: chalk.white.bgRed.bold\n  };\n}\n\nconst NEWLINE = /\\r\\n|[\\n\\r\\u2028\\u2029]/;\nconst BRACKET = /^[()[\\]{}]$/;\nlet tokenize;\n{\n  const JSX_TAG = /^[a-z][\\w-]*$/i;\n\n  const getTokenType = function (token, offset, text) {\n    if (token.type === \"name\") {\n      if ((0, _helperValidatorIdentifier.isKeyword)(token.value) || (0, _helperValidatorIdentifier.isStrictReservedWord)(token.value, true) || sometimesKeywords.has(token.value)) {\n        return \"keyword\";\n      }\n\n      if (JSX_TAG.test(token.value) && (text[offset - 1] === \"<\" || text.substr(offset - 2, 2) == \"</\")) {\n        return \"jsxIdentifier\";\n      }\n\n      if (token.value[0] !== token.value[0].toLowerCase()) {\n        return \"capitalized\";\n      }\n    }\n\n    if (token.type === \"punctuator\" && BRACKET.test(token.value)) {\n      return \"bracket\";\n    }\n\n    if (token.type === \"invalid\" && (token.value === \"@\" || token.value === \"#\")) {\n      return \"punctuator\";\n    }\n\n    return token.type;\n  };\n\n  tokenize = function* (text) {\n    let match;\n\n    while (match = jsTokens.default.exec(text)) {\n      const token = jsTokens.matchToToken(match);\n      yield {\n        type: getTokenType(token, match.index, text),\n        value: token.value\n      };\n    }\n  };\n}\n\nfunction highlightTokens(defs, text) {\n  let highlighted = \"\";\n\n  for (const {\n    type,\n    value\n  } of tokenize(text)) {\n    const colorize = defs[type];\n\n    if (colorize) {\n      highlighted += value.split(NEWLINE).map(str => colorize(str)).join(\"\\n\");\n    } else {\n      highlighted += value;\n    }\n  }\n\n  return highlighted;\n}\n\nfunction shouldHighlight(options) {\n  return !!Chalk.supportsColor || options.forceColor;\n}\n\nfunction getChalk(options) {\n  return options.forceColor ? new Chalk.constructor({\n    enabled: true,\n    level: 1\n  }) : Chalk;\n}\n\nfunction highlight(code, options = {}) {\n  if (shouldHighlight(options)) {\n    const chalk = getChalk(options);\n    const defs = getDefs(chalk);\n    return highlightTokens(defs, code);\n  } else {\n    return code;\n  }\n}","'use strict';\nconst escapeStringRegexp = require('escape-string-regexp');\nconst ansiStyles = require('ansi-styles');\nconst stdoutColor = require('supports-color').stdout;\n\nconst template = require('./templates.js');\n\nconst isSimpleWindowsTerm = process.platform === 'win32' && !(process.env.TERM || '').toLowerCase().startsWith('xterm');\n\n// `supportsColor.level` → `ansiStyles.color[name]` mapping\nconst levelMapping = ['ansi', 'ansi', 'ansi256', 'ansi16m'];\n\n// `color-convert` models to exclude from the Chalk API due to conflicts and such\nconst skipModels = new Set(['gray']);\n\nconst styles = Object.create(null);\n\nfunction applyOptions(obj, options) {\n\toptions = options || {};\n\n\t// Detect level if not set manually\n\tconst scLevel = stdoutColor ? stdoutColor.level : 0;\n\tobj.level = options.level === undefined ? scLevel : options.level;\n\tobj.enabled = 'enabled' in options ? options.enabled : obj.level > 0;\n}\n\nfunction Chalk(options) {\n\t// We check for this.template here since calling `chalk.constructor()`\n\t// by itself will have a `this` of a previously constructed chalk object\n\tif (!this || !(this instanceof Chalk) || this.template) {\n\t\tconst chalk = {};\n\t\tapplyOptions(chalk, options);\n\n\t\tchalk.template = function () {\n\t\t\tconst args = [].slice.call(arguments);\n\t\t\treturn chalkTag.apply(null, [chalk.template].concat(args));\n\t\t};\n\n\t\tObject.setPrototypeOf(chalk, Chalk.prototype);\n\t\tObject.setPrototypeOf(chalk.template, chalk);\n\n\t\tchalk.template.constructor = Chalk;\n\n\t\treturn chalk.template;\n\t}\n\n\tapplyOptions(this, options);\n}\n\n// Use bright blue on Windows as the normal blue color is illegible\nif (isSimpleWindowsTerm) {\n\tansiStyles.blue.open = '\\u001B[94m';\n}\n\nfor (const key of Object.keys(ansiStyles)) {\n\tansiStyles[key].closeRe = new RegExp(escapeStringRegexp(ansiStyles[key].close), 'g');\n\n\tstyles[key] = {\n\t\tget() {\n\t\t\tconst codes = ansiStyles[key];\n\t\t\treturn build.call(this, this._styles ? this._styles.concat(codes) : [codes], this._empty, key);\n\t\t}\n\t};\n}\n\nstyles.visible = {\n\tget() {\n\t\treturn build.call(this, this._styles || [], true, 'visible');\n\t}\n};\n\nansiStyles.color.closeRe = new RegExp(escapeStringRegexp(ansiStyles.color.close), 'g');\nfor (const model of Object.keys(ansiStyles.color.ansi)) {\n\tif (skipModels.has(model)) {\n\t\tcontinue;\n\t}\n\n\tstyles[model] = {\n\t\tget() {\n\t\t\tconst level = this.level;\n\t\t\treturn function () {\n\t\t\t\tconst open = ansiStyles.color[levelMapping[level]][model].apply(null, arguments);\n\t\t\t\tconst codes = {\n\t\t\t\t\topen,\n\t\t\t\t\tclose: ansiStyles.color.close,\n\t\t\t\t\tcloseRe: ansiStyles.color.closeRe\n\t\t\t\t};\n\t\t\t\treturn build.call(this, this._styles ? this._styles.concat(codes) : [codes], this._empty, model);\n\t\t\t};\n\t\t}\n\t};\n}\n\nansiStyles.bgColor.closeRe = new RegExp(escapeStringRegexp(ansiStyles.bgColor.close), 'g');\nfor (const model of Object.keys(ansiStyles.bgColor.ansi)) {\n\tif (skipModels.has(model)) {\n\t\tcontinue;\n\t}\n\n\tconst bgModel = 'bg' + model[0].toUpperCase() + model.slice(1);\n\tstyles[bgModel] = {\n\t\tget() {\n\t\t\tconst level = this.level;\n\t\t\treturn function () {\n\t\t\t\tconst open = ansiStyles.bgColor[levelMapping[level]][model].apply(null, arguments);\n\t\t\t\tconst codes = {\n\t\t\t\t\topen,\n\t\t\t\t\tclose: ansiStyles.bgColor.close,\n\t\t\t\t\tcloseRe: ansiStyles.bgColor.closeRe\n\t\t\t\t};\n\t\t\t\treturn build.call(this, this._styles ? this._styles.concat(codes) : [codes], this._empty, model);\n\t\t\t};\n\t\t}\n\t};\n}\n\nconst proto = Object.defineProperties(() => {}, styles);\n\nfunction build(_styles, _empty, key) {\n\tconst builder = function () {\n\t\treturn applyStyle.apply(builder, arguments);\n\t};\n\n\tbuilder._styles = _styles;\n\tbuilder._empty = _empty;\n\n\tconst self = this;\n\n\tObject.defineProperty(builder, 'level', {\n\t\tenumerable: true,\n\t\tget() {\n\t\t\treturn self.level;\n\t\t},\n\t\tset(level) {\n\t\t\tself.level = level;\n\t\t}\n\t});\n\n\tObject.defineProperty(builder, 'enabled', {\n\t\tenumerable: true,\n\t\tget() {\n\t\t\treturn self.enabled;\n\t\t},\n\t\tset(enabled) {\n\t\t\tself.enabled = enabled;\n\t\t}\n\t});\n\n\t// See below for fix regarding invisible grey/dim combination on Windows\n\tbuilder.hasGrey = this.hasGrey || key === 'gray' || key === 'grey';\n\n\t// `__proto__` is used because we must return a function, but there is\n\t// no way to create a function with a different prototype\n\tbuilder.__proto__ = proto; // eslint-disable-line no-proto\n\n\treturn builder;\n}\n\nfunction applyStyle() {\n\t// Support varags, but simply cast to string in case there's only one arg\n\tconst args = arguments;\n\tconst argsLen = args.length;\n\tlet str = String(arguments[0]);\n\n\tif (argsLen === 0) {\n\t\treturn '';\n\t}\n\n\tif (argsLen > 1) {\n\t\t// Don't slice `arguments`, it prevents V8 optimizations\n\t\tfor (let a = 1; a < argsLen; a++) {\n\t\t\tstr += ' ' + args[a];\n\t\t}\n\t}\n\n\tif (!this.enabled || this.level <= 0 || !str) {\n\t\treturn this._empty ? '' : str;\n\t}\n\n\t// Turns out that on Windows dimmed gray text becomes invisible in cmd.exe,\n\t// see https://github.com/chalk/chalk/issues/58\n\t// If we're on Windows and we're dealing with a gray color, temporarily make 'dim' a noop.\n\tconst originalDim = ansiStyles.dim.open;\n\tif (isSimpleWindowsTerm && this.hasGrey) {\n\t\tansiStyles.dim.open = '';\n\t}\n\n\tfor (const code of this._styles.slice().reverse()) {\n\t\t// Replace any instances already present with a re-opening code\n\t\t// otherwise only the part of the string until said closing code\n\t\t// will be colored, and the rest will simply be 'plain'.\n\t\tstr = code.open + str.replace(code.closeRe, code.open) + code.close;\n\n\t\t// Close the styling before a linebreak and reopen\n\t\t// after next line to fix a bleed issue on macOS\n\t\t// https://github.com/chalk/chalk/pull/92\n\t\tstr = str.replace(/\\r?\\n/g, `${code.close}$&${code.open}`);\n\t}\n\n\t// Reset the original `dim` if we changed it to work around the Windows dimmed gray issue\n\tansiStyles.dim.open = originalDim;\n\n\treturn str;\n}\n\nfunction chalkTag(chalk, strings) {\n\tif (!Array.isArray(strings)) {\n\t\t// If chalk() was called by itself or with a string,\n\t\t// return the string itself as a string.\n\t\treturn [].slice.call(arguments, 1).join(' ');\n\t}\n\n\tconst args = [].slice.call(arguments, 2);\n\tconst parts = [strings.raw[0]];\n\n\tfor (let i = 1; i < strings.length; i++) {\n\t\tparts.push(String(args[i - 1]).replace(/[{}\\\\]/g, '\\\\$&'));\n\t\tparts.push(String(strings.raw[i]));\n\t}\n\n\treturn template(chalk, parts.join(''));\n}\n\nObject.defineProperties(Chalk.prototype, styles);\n\nmodule.exports = Chalk(); // eslint-disable-line new-cap\nmodule.exports.supportsColor = stdoutColor;\nmodule.exports.default = module.exports; // For TypeScript\n","'use strict';\nconst colorConvert = require('color-convert');\n\nconst wrapAnsi16 = (fn, offset) => function () {\n\tconst code = fn.apply(colorConvert, arguments);\n\treturn `\\u001B[${code + offset}m`;\n};\n\nconst wrapAnsi256 = (fn, offset) => function () {\n\tconst code = fn.apply(colorConvert, arguments);\n\treturn `\\u001B[${38 + offset};5;${code}m`;\n};\n\nconst wrapAnsi16m = (fn, offset) => function () {\n\tconst rgb = fn.apply(colorConvert, arguments);\n\treturn `\\u001B[${38 + offset};2;${rgb[0]};${rgb[1]};${rgb[2]}m`;\n};\n\nfunction assembleStyles() {\n\tconst codes = new Map();\n\tconst styles = {\n\t\tmodifier: {\n\t\t\treset: [0, 0],\n\t\t\t// 21 isn't widely supported and 22 does the same thing\n\t\t\tbold: [1, 22],\n\t\t\tdim: [2, 22],\n\t\t\titalic: [3, 23],\n\t\t\tunderline: [4, 24],\n\t\t\tinverse: [7, 27],\n\t\t\thidden: [8, 28],\n\t\t\tstrikethrough: [9, 29]\n\t\t},\n\t\tcolor: {\n\t\t\tblack: [30, 39],\n\t\t\tred: [31, 39],\n\t\t\tgreen: [32, 39],\n\t\t\tyellow: [33, 39],\n\t\t\tblue: [34, 39],\n\t\t\tmagenta: [35, 39],\n\t\t\tcyan: [36, 39],\n\t\t\twhite: [37, 39],\n\t\t\tgray: [90, 39],\n\n\t\t\t// Bright color\n\t\t\tredBright: [91, 39],\n\t\t\tgreenBright: [92, 39],\n\t\t\tyellowBright: [93, 39],\n\t\t\tblueBright: [94, 39],\n\t\t\tmagentaBright: [95, 39],\n\t\t\tcyanBright: [96, 39],\n\t\t\twhiteBright: [97, 39]\n\t\t},\n\t\tbgColor: {\n\t\t\tbgBlack: [40, 49],\n\t\t\tbgRed: [41, 49],\n\t\t\tbgGreen: [42, 49],\n\t\t\tbgYellow: [43, 49],\n\t\t\tbgBlue: [44, 49],\n\t\t\tbgMagenta: [45, 49],\n\t\t\tbgCyan: [46, 49],\n\t\t\tbgWhite: [47, 49],\n\n\t\t\t// Bright color\n\t\t\tbgBlackBright: [100, 49],\n\t\t\tbgRedBright: [101, 49],\n\t\t\tbgGreenBright: [102, 49],\n\t\t\tbgYellowBright: [103, 49],\n\t\t\tbgBlueBright: [104, 49],\n\t\t\tbgMagentaBright: [105, 49],\n\t\t\tbgCyanBright: [106, 49],\n\t\t\tbgWhiteBright: [107, 49]\n\t\t}\n\t};\n\n\t// Fix humans\n\tstyles.color.grey = styles.color.gray;\n\n\tfor (const groupName of Object.keys(styles)) {\n\t\tconst group = styles[groupName];\n\n\t\tfor (const styleName of Object.keys(group)) {\n\t\t\tconst style = group[styleName];\n\n\t\t\tstyles[styleName] = {\n\t\t\t\topen: `\\u001B[${style[0]}m`,\n\t\t\t\tclose: `\\u001B[${style[1]}m`\n\t\t\t};\n\n\t\t\tgroup[styleName] = styles[styleName];\n\n\t\t\tcodes.set(style[0], style[1]);\n\t\t}\n\n\t\tObject.defineProperty(styles, groupName, {\n\t\t\tvalue: group,\n\t\t\tenumerable: false\n\t\t});\n\n\t\tObject.defineProperty(styles, 'codes', {\n\t\t\tvalue: codes,\n\t\t\tenumerable: false\n\t\t});\n\t}\n\n\tconst ansi2ansi = n => n;\n\tconst rgb2rgb = (r, g, b) => [r, g, b];\n\n\tstyles.color.close = '\\u001B[39m';\n\tstyles.bgColor.close = '\\u001B[49m';\n\n\tstyles.color.ansi = {\n\t\tansi: wrapAnsi16(ansi2ansi, 0)\n\t};\n\tstyles.color.ansi256 = {\n\t\tansi256: wrapAnsi256(ansi2ansi, 0)\n\t};\n\tstyles.color.ansi16m = {\n\t\trgb: wrapAnsi16m(rgb2rgb, 0)\n\t};\n\n\tstyles.bgColor.ansi = {\n\t\tansi: wrapAnsi16(ansi2ansi, 10)\n\t};\n\tstyles.bgColor.ansi256 = {\n\t\tansi256: wrapAnsi256(ansi2ansi, 10)\n\t};\n\tstyles.bgColor.ansi16m = {\n\t\trgb: wrapAnsi16m(rgb2rgb, 10)\n\t};\n\n\tfor (let key of Object.keys(colorConvert)) {\n\t\tif (typeof colorConvert[key] !== 'object') {\n\t\t\tcontinue;\n\t\t}\n\n\t\tconst suite = colorConvert[key];\n\n\t\tif (key === 'ansi16') {\n\t\t\tkey = 'ansi';\n\t\t}\n\n\t\tif ('ansi16' in suite) {\n\t\t\tstyles.color.ansi[key] = wrapAnsi16(suite.ansi16, 0);\n\t\t\tstyles.bgColor.ansi[key] = wrapAnsi16(suite.ansi16, 10);\n\t\t}\n\n\t\tif ('ansi256' in suite) {\n\t\t\tstyles.color.ansi256[key] = wrapAnsi256(suite.ansi256, 0);\n\t\t\tstyles.bgColor.ansi256[key] = wrapAnsi256(suite.ansi256, 10);\n\t\t}\n\n\t\tif ('rgb' in suite) {\n\t\t\tstyles.color.ansi16m[key] = wrapAnsi16m(suite.rgb, 0);\n\t\t\tstyles.bgColor.ansi16m[key] = wrapAnsi16m(suite.rgb, 10);\n\t\t}\n\t}\n\n\treturn styles;\n}\n\n// Make the export immutable\nObject.defineProperty(module, 'exports', {\n\tenumerable: true,\n\tget: assembleStyles\n});\n","var conversions = require('./conversions');\nvar route = require('./route');\n\nvar convert = {};\n\nvar models = Object.keys(conversions);\n\nfunction wrapRaw(fn) {\n\tvar wrappedFn = function (args) {\n\t\tif (args === undefined || args === null) {\n\t\t\treturn args;\n\t\t}\n\n\t\tif (arguments.length > 1) {\n\t\t\targs = Array.prototype.slice.call(arguments);\n\t\t}\n\n\t\treturn fn(args);\n\t};\n\n\t// preserve .conversion property if there is one\n\tif ('conversion' in fn) {\n\t\twrappedFn.conversion = fn.conversion;\n\t}\n\n\treturn wrappedFn;\n}\n\nfunction wrapRounded(fn) {\n\tvar wrappedFn = function (args) {\n\t\tif (args === undefined || args === null) {\n\t\t\treturn args;\n\t\t}\n\n\t\tif (arguments.length > 1) {\n\t\t\targs = Array.prototype.slice.call(arguments);\n\t\t}\n\n\t\tvar result = fn(args);\n\n\t\t// we're assuming the result is an array here.\n\t\t// see notice in conversions.js; don't use box types\n\t\t// in conversion functions.\n\t\tif (typeof result === 'object') {\n\t\t\tfor (var len = result.length, i = 0; i < len; i++) {\n\t\t\t\tresult[i] = Math.round(result[i]);\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t};\n\n\t// preserve .conversion property if there is one\n\tif ('conversion' in fn) {\n\t\twrappedFn.conversion = fn.conversion;\n\t}\n\n\treturn wrappedFn;\n}\n\nmodels.forEach(function (fromModel) {\n\tconvert[fromModel] = {};\n\n\tObject.defineProperty(convert[fromModel], 'channels', {value: conversions[fromModel].channels});\n\tObject.defineProperty(convert[fromModel], 'labels', {value: conversions[fromModel].labels});\n\n\tvar routes = route(fromModel);\n\tvar routeModels = Object.keys(routes);\n\n\trouteModels.forEach(function (toModel) {\n\t\tvar fn = routes[toModel];\n\n\t\tconvert[fromModel][toModel] = wrapRounded(fn);\n\t\tconvert[fromModel][toModel].raw = wrapRaw(fn);\n\t});\n});\n\nmodule.exports = convert;\n","'use strict'\r\n\r\nmodule.exports = {\r\n\t\"aliceblue\": [240, 248, 255],\r\n\t\"antiquewhite\": [250, 235, 215],\r\n\t\"aqua\": [0, 255, 255],\r\n\t\"aquamarine\": [127, 255, 212],\r\n\t\"azure\": [240, 255, 255],\r\n\t\"beige\": [245, 245, 220],\r\n\t\"bisque\": [255, 228, 196],\r\n\t\"black\": [0, 0, 0],\r\n\t\"blanchedalmond\": [255, 235, 205],\r\n\t\"blue\": [0, 0, 255],\r\n\t\"blueviolet\": [138, 43, 226],\r\n\t\"brown\": [165, 42, 42],\r\n\t\"burlywood\": [222, 184, 135],\r\n\t\"cadetblue\": [95, 158, 160],\r\n\t\"chartreuse\": [127, 255, 0],\r\n\t\"chocolate\": [210, 105, 30],\r\n\t\"coral\": [255, 127, 80],\r\n\t\"cornflowerblue\": [100, 149, 237],\r\n\t\"cornsilk\": [255, 248, 220],\r\n\t\"crimson\": [220, 20, 60],\r\n\t\"cyan\": [0, 255, 255],\r\n\t\"darkblue\": [0, 0, 139],\r\n\t\"darkcyan\": [0, 139, 139],\r\n\t\"darkgoldenrod\": [184, 134, 11],\r\n\t\"darkgray\": [169, 169, 169],\r\n\t\"darkgreen\": [0, 100, 0],\r\n\t\"darkgrey\": [169, 169, 169],\r\n\t\"darkkhaki\": [189, 183, 107],\r\n\t\"darkmagenta\": [139, 0, 139],\r\n\t\"darkolivegreen\": [85, 107, 47],\r\n\t\"darkorange\": [255, 140, 0],\r\n\t\"darkorchid\": [153, 50, 204],\r\n\t\"darkred\": [139, 0, 0],\r\n\t\"darksalmon\": [233, 150, 122],\r\n\t\"darkseagreen\": [143, 188, 143],\r\n\t\"darkslateblue\": [72, 61, 139],\r\n\t\"darkslategray\": [47, 79, 79],\r\n\t\"darkslategrey\": [47, 79, 79],\r\n\t\"darkturquoise\": [0, 206, 209],\r\n\t\"darkviolet\": [148, 0, 211],\r\n\t\"deeppink\": [255, 20, 147],\r\n\t\"deepskyblue\": [0, 191, 255],\r\n\t\"dimgray\": [105, 105, 105],\r\n\t\"dimgrey\": [105, 105, 105],\r\n\t\"dodgerblue\": [30, 144, 255],\r\n\t\"firebrick\": [178, 34, 34],\r\n\t\"floralwhite\": [255, 250, 240],\r\n\t\"forestgreen\": [34, 139, 34],\r\n\t\"fuchsia\": [255, 0, 255],\r\n\t\"gainsboro\": [220, 220, 220],\r\n\t\"ghostwhite\": [248, 248, 255],\r\n\t\"gold\": [255, 215, 0],\r\n\t\"goldenrod\": [218, 165, 32],\r\n\t\"gray\": [128, 128, 128],\r\n\t\"green\": [0, 128, 0],\r\n\t\"greenyellow\": [173, 255, 47],\r\n\t\"grey\": [128, 128, 128],\r\n\t\"honeydew\": [240, 255, 240],\r\n\t\"hotpink\": [255, 105, 180],\r\n\t\"indianred\": [205, 92, 92],\r\n\t\"indigo\": [75, 0, 130],\r\n\t\"ivory\": [255, 255, 240],\r\n\t\"khaki\": [240, 230, 140],\r\n\t\"lavender\": [230, 230, 250],\r\n\t\"lavenderblush\": [255, 240, 245],\r\n\t\"lawngreen\": [124, 252, 0],\r\n\t\"lemonchiffon\": [255, 250, 205],\r\n\t\"lightblue\": [173, 216, 230],\r\n\t\"lightcoral\": [240, 128, 128],\r\n\t\"lightcyan\": [224, 255, 255],\r\n\t\"lightgoldenrodyellow\": [250, 250, 210],\r\n\t\"lightgray\": [211, 211, 211],\r\n\t\"lightgreen\": [144, 238, 144],\r\n\t\"lightgrey\": [211, 211, 211],\r\n\t\"lightpink\": [255, 182, 193],\r\n\t\"lightsalmon\": [255, 160, 122],\r\n\t\"lightseagreen\": [32, 178, 170],\r\n\t\"lightskyblue\": [135, 206, 250],\r\n\t\"lightslategray\": [119, 136, 153],\r\n\t\"lightslategrey\": [119, 136, 153],\r\n\t\"lightsteelblue\": [176, 196, 222],\r\n\t\"lightyellow\": [255, 255, 224],\r\n\t\"lime\": [0, 255, 0],\r\n\t\"limegreen\": [50, 205, 50],\r\n\t\"linen\": [250, 240, 230],\r\n\t\"magenta\": [255, 0, 255],\r\n\t\"maroon\": [128, 0, 0],\r\n\t\"mediumaquamarine\": [102, 205, 170],\r\n\t\"mediumblue\": [0, 0, 205],\r\n\t\"mediumorchid\": [186, 85, 211],\r\n\t\"mediumpurple\": [147, 112, 219],\r\n\t\"mediumseagreen\": [60, 179, 113],\r\n\t\"mediumslateblue\": [123, 104, 238],\r\n\t\"mediumspringgreen\": [0, 250, 154],\r\n\t\"mediumturquoise\": [72, 209, 204],\r\n\t\"mediumvioletred\": [199, 21, 133],\r\n\t\"midnightblue\": [25, 25, 112],\r\n\t\"mintcream\": [245, 255, 250],\r\n\t\"mistyrose\": [255, 228, 225],\r\n\t\"moccasin\": [255, 228, 181],\r\n\t\"navajowhite\": [255, 222, 173],\r\n\t\"navy\": [0, 0, 128],\r\n\t\"oldlace\": [253, 245, 230],\r\n\t\"olive\": [128, 128, 0],\r\n\t\"olivedrab\": [107, 142, 35],\r\n\t\"orange\": [255, 165, 0],\r\n\t\"orangered\": [255, 69, 0],\r\n\t\"orchid\": [218, 112, 214],\r\n\t\"palegoldenrod\": [238, 232, 170],\r\n\t\"palegreen\": [152, 251, 152],\r\n\t\"paleturquoise\": [175, 238, 238],\r\n\t\"palevioletred\": [219, 112, 147],\r\n\t\"papayawhip\": [255, 239, 213],\r\n\t\"peachpuff\": [255, 218, 185],\r\n\t\"peru\": [205, 133, 63],\r\n\t\"pink\": [255, 192, 203],\r\n\t\"plum\": [221, 160, 221],\r\n\t\"powderblue\": [176, 224, 230],\r\n\t\"purple\": [128, 0, 128],\r\n\t\"rebeccapurple\": [102, 51, 153],\r\n\t\"red\": [255, 0, 0],\r\n\t\"rosybrown\": [188, 143, 143],\r\n\t\"royalblue\": [65, 105, 225],\r\n\t\"saddlebrown\": [139, 69, 19],\r\n\t\"salmon\": [250, 128, 114],\r\n\t\"sandybrown\": [244, 164, 96],\r\n\t\"seagreen\": [46, 139, 87],\r\n\t\"seashell\": [255, 245, 238],\r\n\t\"sienna\": [160, 82, 45],\r\n\t\"silver\": [192, 192, 192],\r\n\t\"skyblue\": [135, 206, 235],\r\n\t\"slateblue\": [106, 90, 205],\r\n\t\"slategray\": [112, 128, 144],\r\n\t\"slategrey\": [112, 128, 144],\r\n\t\"snow\": [255, 250, 250],\r\n\t\"springgreen\": [0, 255, 127],\r\n\t\"steelblue\": [70, 130, 180],\r\n\t\"tan\": [210, 180, 140],\r\n\t\"teal\": [0, 128, 128],\r\n\t\"thistle\": [216, 191, 216],\r\n\t\"tomato\": [255, 99, 71],\r\n\t\"turquoise\": [64, 224, 208],\r\n\t\"violet\": [238, 130, 238],\r\n\t\"wheat\": [245, 222, 179],\r\n\t\"white\": [255, 255, 255],\r\n\t\"whitesmoke\": [245, 245, 245],\r\n\t\"yellow\": [255, 255, 0],\r\n\t\"yellowgreen\": [154, 205, 50]\r\n};\r\n","var conversions = require('./conversions');\n\n/*\n\tthis function routes a model to all other models.\n\n\tall functions that are routed have a property `.conversion` attached\n\tto the returned synthetic function. This property is an array\n\tof strings, each with the steps in between the 'from' and 'to'\n\tcolor models (inclusive).\n\n\tconversions that are not possible simply are not included.\n*/\n\nfunction buildGraph() {\n\tvar graph = {};\n\t// https://jsperf.com/object-keys-vs-for-in-with-closure/3\n\tvar models = Object.keys(conversions);\n\n\tfor (var len = models.length, i = 0; i < len; i++) {\n\t\tgraph[models[i]] = {\n\t\t\t// http://jsperf.com/1-vs-infinity\n\t\t\t// micro-opt, but this is simple.\n\t\t\tdistance: -1,\n\t\t\tparent: null\n\t\t};\n\t}\n\n\treturn graph;\n}\n\n// https://en.wikipedia.org/wiki/Breadth-first_search\nfunction deriveBFS(fromModel) {\n\tvar graph = buildGraph();\n\tvar queue = [fromModel]; // unshift -> queue -> pop\n\n\tgraph[fromModel].distance = 0;\n\n\twhile (queue.length) {\n\t\tvar current = queue.pop();\n\t\tvar adjacents = Object.keys(conversions[current]);\n\n\t\tfor (var len = adjacents.length, i = 0; i < len; i++) {\n\t\t\tvar adjacent = adjacents[i];\n\t\t\tvar node = graph[adjacent];\n\n\t\t\tif (node.distance === -1) {\n\t\t\t\tnode.distance = graph[current].distance + 1;\n\t\t\t\tnode.parent = current;\n\t\t\t\tqueue.unshift(adjacent);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn graph;\n}\n\nfunction link(from, to) {\n\treturn function (args) {\n\t\treturn to(from(args));\n\t};\n}\n\nfunction wrapConversion(toModel, graph) {\n\tvar path = [graph[toModel].parent, toModel];\n\tvar fn = conversions[graph[toModel].parent][toModel];\n\n\tvar cur = graph[toModel].parent;\n\twhile (graph[cur].parent) {\n\t\tpath.unshift(graph[cur].parent);\n\t\tfn = link(conversions[graph[cur].parent][cur], fn);\n\t\tcur = graph[cur].parent;\n\t}\n\n\tfn.conversion = path;\n\treturn fn;\n}\n\nmodule.exports = function (fromModel) {\n\tvar graph = deriveBFS(fromModel);\n\tvar conversion = {};\n\n\tvar models = Object.keys(graph);\n\tfor (var len = models.length, i = 0; i < len; i++) {\n\t\tvar toModel = models[i];\n\t\tvar node = graph[toModel];\n\n\t\tif (node.parent === null) {\n\t\t\t// no possible conversion, or this node is the source model.\n\t\t\tcontinue;\n\t\t}\n\n\t\tconversion[toModel] = wrapConversion(toModel, graph);\n\t}\n\n\treturn conversion;\n};\n\n","'use strict';\nmodule.exports = {\n\tstdout: false,\n\tstderr: false\n};\n","'use strict';\nconst TEMPLATE_REGEX = /(?:\\\\(u[a-f\\d]{4}|x[a-f\\d]{2}|.))|(?:\\{(~)?(\\w+(?:\\([^)]*\\))?(?:\\.\\w+(?:\\([^)]*\\))?)*)(?:[ \\t]|(?=\\r?\\n)))|(\\})|((?:.|[\\r\\n\\f])+?)/gi;\nconst STYLE_REGEX = /(?:^|\\.)(\\w+)(?:\\(([^)]*)\\))?/g;\nconst STRING_REGEX = /^(['\"])((?:\\\\.|(?!\\1)[^\\\\])*)\\1$/;\nconst ESCAPE_REGEX = /\\\\(u[a-f\\d]{4}|x[a-f\\d]{2}|.)|([^\\\\])/gi;\n\nconst ESCAPES = new Map([\n\t['n', '\\n'],\n\t['r', '\\r'],\n\t['t', '\\t'],\n\t['b', '\\b'],\n\t['f', '\\f'],\n\t['v', '\\v'],\n\t['0', '\\0'],\n\t['\\\\', '\\\\'],\n\t['e', '\\u001B'],\n\t['a', '\\u0007']\n]);\n\nfunction unescape(c) {\n\tif ((c[0] === 'u' && c.length === 5) || (c[0] === 'x' && c.length === 3)) {\n\t\treturn String.fromCharCode(parseInt(c.slice(1), 16));\n\t}\n\n\treturn ESCAPES.get(c) || c;\n}\n\nfunction parseArguments(name, args) {\n\tconst results = [];\n\tconst chunks = args.trim().split(/\\s*,\\s*/g);\n\tlet matches;\n\n\tfor (const chunk of chunks) {\n\t\tif (!isNaN(chunk)) {\n\t\t\tresults.push(Number(chunk));\n\t\t} else if ((matches = chunk.match(STRING_REGEX))) {\n\t\t\tresults.push(matches[2].replace(ESCAPE_REGEX, (m, escape, chr) => escape ? unescape(escape) : chr));\n\t\t} else {\n\t\t\tthrow new Error(`Invalid Chalk template style argument: ${chunk} (in style '${name}')`);\n\t\t}\n\t}\n\n\treturn results;\n}\n\nfunction parseStyle(style) {\n\tSTYLE_REGEX.lastIndex = 0;\n\n\tconst results = [];\n\tlet matches;\n\n\twhile ((matches = STYLE_REGEX.exec(style)) !== null) {\n\t\tconst name = matches[1];\n\n\t\tif (matches[2]) {\n\t\t\tconst args = parseArguments(name, matches[2]);\n\t\t\tresults.push([name].concat(args));\n\t\t} else {\n\t\t\tresults.push([name]);\n\t\t}\n\t}\n\n\treturn results;\n}\n\nfunction buildStyle(chalk, styles) {\n\tconst enabled = {};\n\n\tfor (const layer of styles) {\n\t\tfor (const style of layer.styles) {\n\t\t\tenabled[style[0]] = layer.inverse ? null : style.slice(1);\n\t\t}\n\t}\n\n\tlet current = chalk;\n\tfor (const styleName of Object.keys(enabled)) {\n\t\tif (Array.isArray(enabled[styleName])) {\n\t\t\tif (!(styleName in current)) {\n\t\t\t\tthrow new Error(`Unknown Chalk style: ${styleName}`);\n\t\t\t}\n\n\t\t\tif (enabled[styleName].length > 0) {\n\t\t\t\tcurrent = current[styleName].apply(current, enabled[styleName]);\n\t\t\t} else {\n\t\t\t\tcurrent = current[styleName];\n\t\t\t}\n\t\t}\n\t}\n\n\treturn current;\n}\n\nmodule.exports = (chalk, tmp) => {\n\tconst styles = [];\n\tconst chunks = [];\n\tlet chunk = [];\n\n\t// eslint-disable-next-line max-params\n\ttmp.replace(TEMPLATE_REGEX, (m, escapeChar, inverse, style, close, chr) => {\n\t\tif (escapeChar) {\n\t\t\tchunk.push(unescape(escapeChar));\n\t\t} else if (style) {\n\t\t\tconst str = chunk.join('');\n\t\t\tchunk = [];\n\t\t\tchunks.push(styles.length === 0 ? str : buildStyle(chalk, styles)(str));\n\t\t\tstyles.push({inverse, styles: parseStyle(style)});\n\t\t} else if (close) {\n\t\t\tif (styles.length === 0) {\n\t\t\t\tthrow new Error('Found extraneous } in Chalk template literal');\n\t\t\t}\n\n\t\t\tchunks.push(buildStyle(chalk, styles)(chunk.join('')));\n\t\t\tchunk = [];\n\t\t\tstyles.pop();\n\t\t} else {\n\t\t\tchunk.push(chr);\n\t\t}\n\t});\n\n\tchunks.push(chunk.join(''));\n\n\tif (styles.length > 0) {\n\t\tconst errMsg = `Chalk template literal is missing ${styles.length} closing bracket${styles.length === 1 ? '' : 's'} (\\`}\\`)`;\n\t\tthrow new Error(errMsg);\n\t}\n\n\treturn chunks.join('');\n};\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = literalTemplate;\n\nvar _options = require(\"./options\");\n\nvar _parse = _interopRequireDefault(require(\"./parse\"));\n\nvar _populate = _interopRequireDefault(require(\"./populate\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction literalTemplate(formatter, tpl, opts) {\n  const {\n    metadata,\n    names\n  } = buildLiteralData(formatter, tpl, opts);\n  return arg => {\n    const defaultReplacements = {};\n    arg.forEach((replacement, i) => {\n      defaultReplacements[names[i]] = replacement;\n    });\n    return arg => {\n      const replacements = (0, _options.normalizeReplacements)(arg);\n\n      if (replacements) {\n        Object.keys(replacements).forEach(key => {\n          if (Object.prototype.hasOwnProperty.call(defaultReplacements, key)) {\n            throw new Error(\"Unexpected replacement overlap.\");\n          }\n        });\n      }\n\n      return formatter.unwrap((0, _populate.default)(metadata, replacements ? Object.assign(replacements, defaultReplacements) : defaultReplacements));\n    };\n  };\n}\n\nfunction buildLiteralData(formatter, tpl, opts) {\n  let names;\n  let nameSet;\n  let metadata;\n  let prefix = \"\";\n\n  do {\n    prefix += \"$\";\n    const result = buildTemplateCode(tpl, prefix);\n    names = result.names;\n    nameSet = new Set(names);\n    metadata = (0, _parse.default)(formatter, formatter.code(result.code), {\n      parser: opts.parser,\n      placeholderWhitelist: new Set(result.names.concat(opts.placeholderWhitelist ? Array.from(opts.placeholderWhitelist) : [])),\n      placeholderPattern: opts.placeholderPattern,\n      preserveComments: opts.preserveComments,\n      syntacticPlaceholders: opts.syntacticPlaceholders\n    });\n  } while (metadata.placeholders.some(placeholder => placeholder.isDuplicate && nameSet.has(placeholder.name)));\n\n  return {\n    metadata,\n    names\n  };\n}\n\nfunction buildTemplateCode(tpl, prefix) {\n  const names = [];\n  let code = tpl[0];\n\n  for (let i = 1; i < tpl.length; i++) {\n    const value = `${prefix}${i - 1}`;\n    names.push(value);\n    code += value + tpl[i];\n  }\n\n  return {\n    names,\n    code\n  };\n}"],"sourceRoot":""}