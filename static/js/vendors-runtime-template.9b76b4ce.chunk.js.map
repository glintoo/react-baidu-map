{"version":3,"sources":["../node_modules/@babel/template/lib/index.js","../node_modules/@babel/plugin-transform-classes/lib/transformClass.js","../node_modules/@babel/plugin-transform-classes/lib/inline-createSuper-helpers.js","../node_modules/@babel/parser/lib/index.js","../node_modules/@babel/code-frame/lib/index.js","../node_modules/@babel/template/lib/options.js","../node_modules/@babel/template/lib/parse.js","../node_modules/@babel/template/lib/populate.js","../node_modules/@babel/plugin-transform-classes/lib/index.js","../node_modules/@babel/template/lib/formatters.js","../node_modules/@babel/template/lib/builder.js","../node_modules/@babel/template/lib/string.js","../node_modules/@babel/highlight/lib/index.js","../node_modules/@babel/template/lib/literal.js"],"names":["Object","defineProperty","exports","value","default","program","expression","statements","statement","smart","obj","formatters","__esModule","cache","_getRequireWildcardCache","has","get","newObj","hasPropertyDescriptor","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","_interopRequireWildcard","require","_builder","WeakMap","_default","assign","bind","undefined","ast","path","file","builtinClasses","isLoose","classState","parent","scope","node","classId","classRef","superFnId","superName","superReturns","isDerived","extendsNative","construct","constructorBody","userConstructor","userConstructorPath","hasConstructor","instancePropBody","instancePropRefs","staticPropBody","body","superThises","pushedConstructor","pushedInherits","protoAlias","hasInstanceDescriptors","hasStaticDescriptors","instanceMutatorMap","staticMutatorMap","setState","newState","findThisesVisitor","_core","traverse","visitors","merge","_helperReplaceSupers","environmentVisitor","ThisExpression","push","buildBody","paths","equals","params","constructor","template","types","blockStatement","unshiftContainer","classMethod","identifier","maybeCreateConstructor","classBodyPaths","isClassProperty","buildCodeFrameError","decorators","isClassMethod","isConstructor","kind","methodPath","objectRef","superRef","replace","ReturnStatement","getFunctionParent","isArrowFunctionExpression","pushConstructor","pushMethod","pushBody","thisRef","ref","generateDeclaredUidIdentifier","cloneNode","thisPath","parentPath","isMemberExpression","object","replaceWith","callExpression","addHelper","bareSupers","Set","Super","isCallExpression","callee","add","wrapReturn","guaranteedSuperBeforeFinish","size","bareSuper","wrapSuperCall","find","isLoop","isConditional","returnArg","thisExpr","logicalExpression","concat","bodyPaths","length","pop","isReturnStatement","pushContainer","returnStatement","returnPath","argument","verifyConstructor","inherits","pushDescriptors","pushInheritsToBody","instanceProps","staticProps","defineMap","toClassObject","toComputedObjectFromClass","args","nullLiteral","lastNonNullIndex","i","isNullLiteral","slice","expressionStatement","bareSuperNode","arguments","unshift","thisExpression","isSpreadElement","isIdentifier","name","memberExpression","_helperOptimiseCallExpression","isExpressionStatement","container","assignmentExpression","static","generateUidIdentifier","classProto","protoDeclaration","variableDeclaration","variableDeclarator","insertProtoAliasOnce","methodName","computed","isLiteral","func","functionExpression","generator","async","toComputedKey","isStringLiteral","_helperFunctionName","id","expr","inheritsComments","processMethod","enumerable","mutatorMap","map","booleanLiteral","pushToMap","method","hasOwnBinding","rename","directives","pushConstructorToBody","_inlineCreateSuperHelpers","superClass","hasBinding","buildConstructor","closureParams","closureArgs","arg","_helperAnnotateAsPure","param","generateUidIdentifierBasedOnNode","setupClosureParamsArgs","fn","isStrict","isInStrictMode","constructorOnly","directive","directiveLiteral","toExpression","arrowFunctionExpression","classTransformer","_interopRequireDefault","functionDeclaration","helperIDs","clone","_unused","helper","CREATE_SUPER","GET_PROTOTYPE_OF","POSSIBLE_CONSTRUCTOR_RETURN","registerDeclaration","beforeExpr","startsExpr","prefix","TokenType","label","conf","this","keyword","rightAssociative","isAssign","postfix","binop","updateContext","keywords","Map","createKeyword","options","token","createBinop","num","bigint","decimal","regexp","string","eof","bracketL","bracketHashL","bracketBarL","bracketR","bracketBarR","braceL","braceBarL","braceHashL","braceR","braceBarR","parenL","parenR","comma","semi","colon","doubleColon","dot","question","questionDot","arrow","ellipsis","backQuote","dollarBraceL","at","hash","interpreterDirective","eq","incDec","bang","tilde","pipeline","nullishCoalescing","logicalOR","logicalAND","bitwiseOR","bitwiseXOR","bitwiseAND","equality","relational","bitShift","plusMin","modulo","star","slash","exponent","_break","_case","_catch","_continue","_debugger","_do","_else","_finally","_for","_function","_if","_return","_switch","_throw","_try","_var","_const","_while","_with","_new","_this","_super","_class","_extends","_export","_import","_null","_true","_false","_in","_instanceof","_typeof","_void","_delete","lineBreak","lineBreakG","RegExp","source","isNewLine","code","skipWhiteSpace","isWhitespace","Position","line","col","column","SourceLocation","start","end","filename","identifierName","last","stack","CommentsParser","comment","loc","state","trailingComments","leadingComments","elements","takeAllComments","lastElement","j","commentPreviousNode","splice","newTrailingComments","leadingComment","type","firstChild","lastChild","commentStack","lastInStack","adjustCommentsAfterTrailingComma","properties","innerComments","firstTrailingCommentIndex","findIndex","sawUnambiguousESM","ambiguousScriptDifferentAst","plugins","plugin","hasPlugin","ErrorMessages","freeze","AccessorIsGenerator","ArgumentsInClass","AsyncFunctionInSingleStatementContext","AwaitBindingIdentifier","AwaitBindingIdentifierInStaticBlock","AwaitExpressionFormalParameter","AwaitNotInAsyncContext","AwaitNotInAsyncFunction","BadGetterArity","BadSetterArity","BadSetterRestParameter","ConstructorClassField","ConstructorClassPrivateField","ConstructorIsAccessor","ConstructorIsAsync","ConstructorIsGenerator","DeclarationMissingInitializer","DecoratorBeforeExport","DecoratorConstructor","DecoratorExportClass","DecoratorSemicolon","DecoratorStaticBlock","DeletePrivateField","DestructureNamedImport","DuplicateConstructor","DuplicateDefaultExport","DuplicateExport","DuplicateProto","DuplicateRegExpFlags","DuplicateStaticBlock","ElementAfterRest","EscapedCharNotAnIdentifier","ExportBindingIsString","ExportDefaultFromAsIdentifier","ForInOfLoopInitializer","GeneratorInSingleStatementContext","IllegalBreakContinue","IllegalLanguageModeDirective","IllegalReturn","ImportBindingIsString","ImportCallArgumentTrailingComma","ImportCallArity","ImportCallNotNewExpression","ImportCallSpreadArgument","ImportMetaOutsideModule","ImportOutsideModule","InvalidBigIntLiteral","InvalidCodePoint","InvalidDecimal","InvalidDigit","InvalidEscapeSequence","InvalidEscapeSequenceTemplate","InvalidEscapedReservedWord","InvalidIdentifier","InvalidLhs","InvalidLhsBinding","InvalidNumber","InvalidOrMissingExponent","InvalidOrUnexpectedToken","InvalidParenthesizedAssignment","InvalidPrivateFieldResolution","InvalidPropertyBindingPattern","InvalidRecordProperty","InvalidRestAssignmentPattern","LabelRedeclaration","LetInLexicalBinding","LineTerminatorBeforeArrow","MalformedRegExpFlags","MissingClassName","MissingEqInAssignment","MissingSemicolon","MissingUnicodeEscape","MixingCoalesceWithLogical","ModuleAttributeDifferentFromType","ModuleAttributeInvalidValue","ModuleAttributesWithDuplicateKeys","ModuleExportNameHasLoneSurrogate","ModuleExportUndefined","MultipleDefaultsInSwitch","NewlineAfterThrow","NoCatchOrFinally","NumberIdentifier","NumericSeparatorInEscapeSequence","ObsoleteAwaitStar","OptionalChainingNoNew","OptionalChainingNoTemplate","ParamDupe","PatternHasAccessor","PatternHasMethod","PipelineBodyNoArrow","PipelineBodySequenceExpression","PipelineHeadSequenceExpression","PipelineTopicUnused","PrimaryTopicNotAllowed","PrimaryTopicRequiresSmartPipeline","PrivateInExpectedIn","PrivateNameRedeclaration","RecordExpressionBarIncorrectEndSyntaxType","RecordExpressionBarIncorrectStartSyntaxType","RecordExpressionHashIncorrectStartSyntaxType","RecordNoProto","RestTrailingComma","SloppyFunction","StaticPrototype","StrictDelete","StrictEvalArguments","StrictEvalArgumentsBinding","StrictFunction","StrictNumericEscape","StrictOctalLiteral","StrictWith","SuperNotAllowed","SuperPrivateField","TrailingDecorator","TupleExpressionBarIncorrectEndSyntaxType","TupleExpressionBarIncorrectStartSyntaxType","TupleExpressionHashIncorrectStartSyntaxType","UnexpectedArgumentPlaceholder","UnexpectedAwaitAfterPipelineBody","UnexpectedDigitAfterHash","UnexpectedImportExport","UnexpectedKeyword","UnexpectedLeadingDecorator","UnexpectedLexicalDeclaration","UnexpectedNewTarget","UnexpectedNumericSeparator","UnexpectedPrivateField","UnexpectedReservedWord","UnexpectedSuper","UnexpectedToken","UnexpectedTokenUnaryExponentiation","UnsupportedBind","UnsupportedDecoratorExport","UnsupportedDefaultExport","UnsupportedImport","UnsupportedMetaProperty","UnsupportedParameterDecorator","UnsupportedPropertyDecorator","UnsupportedSuper","UnterminatedComment","UnterminatedRegExp","UnterminatedString","UnterminatedTemplate","VarRedeclaration","YieldBindingIdentifier","YieldInParameter","ZeroDigitNumericSeparator","ParserError","pos","startLoc","lastTokStart","lastTokStartLoc","endLoc","lastTokEnd","lastTokEndLoc","input","offset","match","lineStart","lastIndex","exec","index","getLineInfo","errorTemplate","raiseWithData","getLocationForPosition","message","_","errorRecovery","errors","error","_raise","data","errorContext","err","SyntaxError","isLookahead","TokContext","isExpr","preserveSpace","override","types$1","braceStatement","braceExpression","recordExpression","templateQuasi","parenStatement","parenExpression","p","readTmplToken","functionStatement","context","out","curContext","exprAllowed","prevType","allowed","isIterator","braceIsBlock","statementParens","hasPrecedingLineBreak","b_stat","nonASCIIidentifierStartChars","nonASCIIidentifierChars","nonASCIIidentifierStart","nonASCIIidentifier","astralIdentifierStartCodes","astralIdentifierCodes","isInAstralSet","isIdentifierStart","test","String","fromCharCode","isIdentifierChar","reservedWords","keywords$1","reservedWordsStrictSet","reservedWordsStrictBindSet","isReservedWord","word","inModule","isStrictReservedWord","isStrictBindOnlyReservedWord","isStrictBindReservedWord","isKeyword","keywordRelationalOperator","SCOPE_CLASS","SCOPE_TS_MODULE","BIND_FLAGS_CLASS","BIND_FLAGS_TS_ENUM","BIND_FLAGS_TS_CONST_ENUM","BIND_FLAGS_TS_EXPORT_ONLY","BIND_FLAGS_FLOW_DECLARE_FN","BIND_TS_AMBIENT","BIND_NONE","Scope","flags","var","lexical","functions","ScopeHandler","raise","scopeStack","undefinedExports","undefinedPrivateNames","createScope","bindingType","currentScope","checkRedeclarationInScope","maybeExportDefined","SCOPE_PROGRAM","delete","isRedeclaredInScope","indexOf","treatFunctionsAsVarInScope","currentVarScope","currentThisScope","FlowScope","declareFunctions","FlowScopeHandler","includes","reservedTypes","FlowErrors","AmbiguousConditionalArrow","AmbiguousDeclareModuleKind","AssignReservedType","DeclareClassElement","DeclareClassFieldInitializer","DuplicateDeclareModuleExports","EnumBooleanMemberNotInitialized","EnumDuplicateMemberName","EnumInconsistentMemberValues","EnumInvalidExplicitType","EnumInvalidExplicitTypeUnknownSupplied","EnumInvalidMemberInitializerPrimaryType","EnumInvalidMemberInitializerSymbolType","EnumInvalidMemberInitializerUnknownType","EnumInvalidMemberName","EnumNumberMemberNotInitialized","EnumStringMemberInconsistentlyInitailized","GetterMayNotHaveThisParam","ImportTypeShorthandOnlyInPureImport","InexactInsideExact","InexactInsideNonObject","InexactVariance","InvalidNonTypeImportInDeclareModule","MissingTypeParamDefault","NestedDeclareModule","NestedFlowComment","OptionalBindingPattern","SetterMayNotHaveThisParam","SpreadVariance","ThisParamAnnotationRequired","ThisParamBannedInConstructor","ThisParamMayNotBeOptional","ThisParamMustBeFirst","ThisParamNoDefault","TypeBeforeInitializer","TypeCastInPattern","UnexpectedExplicitInexactInObject","UnexpectedReservedType","UnexpectedReservedUnderscore","UnexpectedSpaceBetweenModuloChecks","UnexpectedSpreadType","UnexpectedSubtractionOperand","UnexpectedTokenAfterTypeParameter","UnexpectedTypeParameterBeforeAsyncArrowFunction","UnsupportedDeclareExportKind","UnsupportedStatementInDeclareModule","UnterminatedFlowComment","hasTypeImportKind","importKind","isMaybeDefaultImport","exportSuggestions","const","let","interface","FLOW_PRAGMA_REGEX","entities","quot","amp","apos","lt","gt","nbsp","iexcl","cent","pound","curren","yen","brvbar","sect","uml","copy","ordf","laquo","not","shy","reg","macr","deg","plusmn","sup2","sup3","acute","micro","para","middot","cedil","sup1","ordm","raquo","frac14","frac12","frac34","iquest","Agrave","Aacute","Acirc","Atilde","Auml","Aring","AElig","Ccedil","Egrave","Eacute","Ecirc","Euml","Igrave","Iacute","Icirc","Iuml","ETH","Ntilde","Ograve","Oacute","Ocirc","Otilde","Ouml","times","Oslash","Ugrave","Uacute","Ucirc","Uuml","Yacute","THORN","szlig","agrave","aacute","acirc","atilde","auml","aring","aelig","ccedil","egrave","eacute","ecirc","euml","igrave","iacute","icirc","iuml","eth","ntilde","ograve","oacute","ocirc","otilde","ouml","divide","oslash","ugrave","uacute","ucirc","uuml","yacute","thorn","yuml","OElig","oelig","Scaron","scaron","Yuml","fnof","circ","Alpha","Beta","Gamma","Delta","Epsilon","Zeta","Eta","Theta","Iota","Kappa","Lambda","Mu","Nu","Xi","Omicron","Pi","Rho","Sigma","Tau","Upsilon","Phi","Chi","Psi","Omega","alpha","beta","gamma","delta","epsilon","zeta","eta","theta","iota","kappa","lambda","mu","nu","xi","omicron","pi","rho","sigmaf","sigma","tau","upsilon","phi","chi","psi","omega","thetasym","upsih","piv","ensp","emsp","thinsp","zwnj","zwj","lrm","rlm","ndash","mdash","lsquo","rsquo","sbquo","ldquo","rdquo","bdquo","dagger","Dagger","bull","hellip","permil","prime","Prime","lsaquo","rsaquo","oline","frasl","euro","image","weierp","real","trade","alefsym","larr","uarr","rarr","darr","harr","crarr","lArr","uArr","rArr","dArr","hArr","forall","part","exist","empty","nabla","isin","notin","ni","prod","sum","minus","lowast","radic","prop","infin","ang","and","or","cap","cup","int","there4","sim","cong","asymp","ne","equiv","le","ge","sub","sup","nsub","sube","supe","oplus","otimes","perp","sdot","lceil","rceil","lfloor","rfloor","lang","rang","loz","spades","clubs","hearts","diams","HEX_NUMBER","DECIMAL_NUMBER","JsxErrors","AttributeIsEmpty","MissingClosingTagFragment","MissingClosingTagElement","UnexpectedSequenceExpression","UnsupportedJsxValue","UnterminatedJsxContent","UnwrappedAdjacentJSXElements","isFragment","getQualifiedJSXName","namespace","property","Error","j_oTag","j_cTag","j_expr","jsxName","jsxText","jsxTagStart","jsxTagEnd","TypeScriptScope","enums","constEnums","classes","exportOnlyBindings","TypeScriptScopeHandler","isConst","wasConst","ProductionParameterHandler","stacks","currentFlags","functionFlags","isAsync","isGenerator","nonNull","x","assert","TSErrors","ClassMethodHasDeclare","ClassMethodHasReadonly","ConstructorHasTypeParameters","DeclareClassFieldHasInitializer","DeclareFunctionHasImplementation","DuplicateModifier","DuplicateAccessibilityModifier","EmptyHeritageClauseType","EmptyTypeArguments","EmptyTypeParameters","ExpectedAmbientAfterExportDeclare","IndexSignatureHasAbstract","IndexSignatureHasAccessibility","IndexSignatureHasStatic","IndexSignatureHasDeclare","InvalidModifierOnTypeMember","InvalidTupleMemberLabel","MixedLabeledAndUnlabeledElements","NonAbstractClassHasAbstractMethod","NonClassMethodPropertyHasAbstractModifer","OptionalTypeBeforeRequired","PatternIsOptional","PrivateElementHasAbstract","PrivateElementHasAccessibility","ReadonlyForMethodSignature","TypeAnnotationAfterAssign","UnexpectedParameterModifier","UnexpectedReadonly","UnexpectedTypeAnnotation","UnexpectedTypeCastInParameter","UnsupportedImportTypeArgument","UnsupportedParameterPropertyKind","UnsupportedSignatureParameterKind","tsIsAccessModifier","modifier","placeholder","some","Array","isArray","getPluginOption","option","PIPELINE_PROPOSALS","RECORD_AND_TUPLE_SYNTAX_TYPES","mixinPlugins","estree","pattern","regex","e","estreeParseLiteral","bigInt","BigInt","parseLiteral","stmt","startNodeAt","extra","expressionValue","raw","finishNodeAt","isObjectProperty","checkDeclaration","_stmt$expression$extr","parenthesized","addExtra","directiveStatements","d","directiveToStmt","classBody","allowsDirectSuper","parseMethod","typeParameters","refExpressionErrors","estreeParseRegExpLiteral","estreeParseBigIntLiteral","estreeParseDecimalLiteral","convertPrivateNameToPrivateIdentifier","startPos","allowExpression","isMethod","allowDirectSuper","inClassScope","funcNode","startNode","finishNode","propertyNode","isPattern","isAccessor","shorthand","isLHS","toAssignable","optional","exported","specifiers","base","noCalls","optionalChainMember","substring","stop","chain","startNodeAtNode","jsx","chunkStart","ch","charCodeAt","finishToken","jsxReadEntity","jsxReadNewLine","normalizeCRLF","curLine","quote","entity","str","count","substr","fromCodePoint","parseInt","unexpected","next","jsxParseIdentifier","eat","jsxParseNamespacedName","newNode","jsxParseExpressionContainer","parseExprAtom","parseExpression","expect","jsxParseEmptyExpression","parseMaybeAssignAllowIn","jsxParseAttributeValue","jsxParseElementName","jsxParseOpeningElementAfterName","attributes","jsxParseAttribute","selfClosing","children","openingElement","jsxParseOpeningElementAt","closingElement","contents","jsxParseClosingElementAt","jsxParseElementAt","jsxParseSpreadChild","openingFragment","closingFragment","isRelational","jsxParseElement","inPropertyName","jsxReadToken","jsxReadWord","jsxReadString","flow","flowPragma","val","matches","tok","oldInType","inType","flowParseType","moduloLoc","moduloPos","checksLoc","expectContextual","predicate","flowParsePredicate","flowParseInterfaceish","parseIdentifier","typeNode","typeContainer","flowParseTypeParameterDeclaration","tmp","flowParseFunctionTypeParams","rest","flowParseTypeAndPredicateInitialiser","returnType","typeAnnotation","resetEndLocation","semicolon","declareName","insideModule","flowParseDeclareClass","flowParseDeclareFunction","flowParseDeclareVariable","eatContextual","flowParseDeclareModuleExports","flowParseDeclareModule","isContextual","flowParseDeclareTypeAlias","flowParseDeclareOpaqueType","flowParseDeclareInterface","flowParseDeclareExportDeclaration","flowParseTypeAnnotatableIdentifier","BIND_KIND_VALUE","enter","bodyNode","parseImport","flowParseDeclare","exit","hasModuleExport","forEach","bodyElement","declaration","isEsModuleType","isLet","suggestion","parseExport","exportKind","flowParseTypeAnnotation","flowParseTypeAlias","flowParseOpaqueType","isClass","flowParseRestrictedIdentifier","extends","implements","mixins","flowParseInterfaceExtends","flowParseObjectType","allowStatic","allowExact","allowSpread","allowProto","allowInexact","flowParseQualifiedTypeIdentifier","flowParseTypeParameterInstantiation","liberal","checkReservedType","right","flowParseTypeInitialiser","declare","supertype","impltype","requireDefault","nodeStart","variance","flowParseVariance","ident","bound","defaultRequired","typeParameter","flowParseTypeParameter","expectRelational","oldNoAnonFunctionType","noAnonFunctionType","flowParseTypeOrImplicitInstantiation","isStatic","lookahead","flowParseObjectPropertyKey","flowParseObjectTypeMethodish","flowParseFunctionTypeParam","valueNode","endDelim","exact","callProperties","indexers","internalSlots","inexact","protoStart","inexactStart","flowParseObjectTypeInternalSlot","flowParseObjectTypeIndexer","flowParseObjectTypeCallProperty","propOrInexact","flowParseObjectTypeProperty","flowObjectTypeSemicolon","proto","flowCheckGetterSetterParams","paramCount","node2","qualification","flowParsePrimaryType","first","lh","isThis","checkNotUnderscore","flowParseGenericType","isGroupedType","flowParseInterfaceType","flowIdentToTypeAnnotation","flowParseTupleType","reinterpretTypeAsFunctionTypeParam","flowParseTypeofType","canInsertSemicolon","elementType","flowParsePrefixType","flowParsePostfixType","flowParseAnonFunctionWithoutParens","flowParseIntersectionType","flowParseUnionType","allowPrimitiveOverride","allowExpressionBody","forwardNoArrowParamsConversionAt","topLevel","strict","flowParseInterface","shouldParseEnums","flowParseEnumDeclaration","isValidDirective","refNeedsArrowPos","result","tryParse","failState","originalNoArrowAt","noArrowAt","tryParseConditionalConsequent","consequent","failed","getArrowLikeExpressions","valid","invalid","alternate","parseMaybeAssign","noArrowParamsConversionAt","disallowInvalid","arrows","finishArrowValidation","list","list1","list2","partition","every","isAssignable","_node$extra","toAssignableList","trailingComma","SCOPE_FUNCTION","parse","typeCastNode","decl","declarationNode","parseExportSpecifiers","parseExportFrom","hasNamespace","isStatement","optionalId","member","parseClassMemberFromModifier","finishOp","current","isIteratorStart","isBinding","element","operator","typeCastToParameter","exprList","trailingCommaPos","isParenthesizedExpr","_expr$extra","close","canBePattern","isTuple","maybeInArrowParameters","toReferencedList","isThisParam","superTypeParameters","implemented","getObjectOrClassMethodParams","isPrivateNameAllowed","left","specifier","contextDescription","local","checkLVal","firstIdentLoc","firstIdent","parseModuleExportName","specifierTypeKind","isLookaheadContextual","as_ident","imported","__clone","nodeIsTypeImport","specifierIsTypeImport","checkReservedWord","allowModifiers","afterLeftParse","_jsx","_jsx2","_jsx3","abort","_arrowExpression$extr","arrowExpression","resetStartLocationFromNode","maybeUnwrapTypeCastExpression","aborted","thrown","allowDuplicates","isArrowFunction","canBeArrow","parseCallExpressionArguments","parseAsyncArrowWithTypeParameters","subscriptState","isLookaheadToken_lt","typeArguments","finishCallExpression","shouldParseTypes","flowParseTypeParameterInstantiationCallOrNew","targs","parseFunctionParams","parseArrow","parseArrowExpression","hasFlowComment","nextToken","fileNode","skipFlowComment","hasFlowCommentCompletion","shiftToFirstNonWhiteSpace","ch2","ch3","enumName","memberName","toUpperCase","suppliedType","explicitType","endOfInit","literal","parseBooleanLiteral","init","flowEnumMemberInit","expectedType","flowEnumErrorInvalidMemberInitializer","seenNames","members","booleanMembers","numberMembers","stringMembers","defaultedMembers","hasUnknownMembers","memberNode","flowEnumMemberRaw","flowEnumErrorInvalidMemberName","flowEnumErrorDuplicateMemberName","flowEnumCheckExplicitTypeMismatch","flowEnumErrorBooleanMemberNotInitialized","flowEnumErrorNumberMemberNotInitialized","initializedMembers","_i","flowEnumErrorStringMemberInconsistentlyInitailized","_i2","flowEnumErrorInvalidExplicitType","nameLoc","flowEnumParseExplicitType","flowEnumMembers","flowEnumStringMembers","boolsLen","numsLen","strsLen","defaultedLen","_i3","_members$defaultedMem","_i4","_members$defaultedMem2","flowEnumErrorInconsistentMemberValues","flowEnumBody","nextTokenStart","afterNext","typescript","isLiteralPropertyName","allowedModifiers","tsTryParse","tsNextTokenCanFollowModifier","modified","disallowedModifiers","tsParseModifier","accessibility","parseElement","tsIsListTerminator","tsParseDelimitedListWorker","expectSuccess","bracket","skipFirstToken","tsParseDelimitedList","qualifier","tsParseEntityName","tsParseTypeArguments","allowReservedWords","typeName","lhs","parameterName","tsParseTypeAnnotation","asserts","exprName","tsParseImportType","parseIdentifierName","constraint","tsEatThenParseType","tsParseTypeParameters","tsParseBracketedList","tsParseTypeParameter","tsParseTypeReference","returnToken","signature","returnTokenRequired","tsTryParseTypeParameters","parameters","tsParseBindingListForSignature","tsParseTypeOrTypePredicateAnnotation","parseBindingList","tsFillSignature","tsParseTypeMemberSemicolon","tsLookAhead","tsIsUnambiguouslyIndexSignature","tsTryParseTypeAnnotation","readonly","nodeAny","tsParseSignatureMember","createIdentifier","tsParsePropertyOrMethodSignature","tsParseModifiers","idx","tsTryParseIndexSignature","parsePropertyName","tsParseObjectTypeMembers","tsParseList","tsParseTypeMember","tsIsIdentifier","tsExpectThenParseType","tsParseMappedTypeParameter","nameType","tsParseType","tsTryParseType","elementTypes","tsParseTupleElementType","seenOptionalElement","labeledElements","elementNode","_labeledElements","isLabeled","labeledNode","optionalTypeNode","restNode","abstract","parseTemplate","thisKeyword","tsParseThisTypeNode","tsParseThisTypePredicate","keywordTypeFromName","lookaheadCharCode","tsParseLiteralTypeNode","parseMaybeUnary","tsParseThisTypeOrThisTypePredicate","tsParseTypeQuery","tsIsStartOfMappedType","tsParseMappedType","tsParseTypeLiteral","tsParseTupleType","tsParseParenthesizedType","tsParseTemplateLiteralType","tsParseNonArrayType","objectType","indexType","tsParseTypeOperatorOrHigher","tsCheckTypeAnnotationForReadOnly","kw","tsParseTypeOperator","tsParseInferType","tsParseArrayTypeOrHigher","parseConstituentType","hasLeadingOperator","tsParseUnionOrIntersectionType","tsParseIntersectionTypeOrHigher","tsIsUnambiguouslyStartOfFunctionType","braceStackCounter","tsSkipParameterStart","tsInType","t","tsParseTypePredicateAsserts","thisTypePredicate","typePredicateVariable","tsParseTypePredicatePrefix","containsEsc","eatColon","tsParseNonConditionalType","checkType","extendsType","trueType","falseType","tsIsStartOfFunctionType","tsParseFunctionOrConstructorType","isAbstractConstructorSignature","tsParseUnionTypeOrHigher","tsTryNextParseConstantContext","tsNextThenParseType","descriptor","originalStart","delimitedList","tsParseExpressionWithTypeArguments","tsParseHeritageClause","cb","oldContext","tsDoThenParseType","initializer","BIND_TS_ENUM","tsParseEnumMember","parseBlockOrModuleBlockBody","nested","inner","tsParseModuleOrNamespaceDeclaration","prodParam","tsParseModuleBlock","global","isExport","moduleReference","tsParseModuleReference","tsIsExternalModuleReference","tsParseExternalModuleReference","f","res","nany","isLineTerminator","starttype","tsInDeclareContext","parseFunctionStatement","parseClass","tsParseEnumDeclaration","parseVarStatement","tsParseAmbientExternalModuleDeclaration","tsParseDeclaration","tsTryParseDeclare","mod","tsCheckLineTerminator","tsParseAbstractDeclaration","tsParseInterfaceDeclaration","tsParseTypeAliasDeclaration","hasFollowingLineBreak","oldMaybeInArrowParameters","tsTryParseAndCatch","tsTryParseTypeOrTypePredicateAnnotation","tsInNoContext","tsIsDeclarationStart","parseAccessModifier","parseMaybeDefault","parseAssignableListItemTypes","elt","pp","parameter","bodilessType","isDeclareContext","items","isInParens","tsCheckForInvalidTypeCasts","nonNullExpression","atPossibleAsyncArrow","asyncArrowFn","tsTryParseGenericAsyncArrowFunction","parseTaggedTemplateExpression","leftStartPos","leftStartLoc","minPrec","reScan_lt_gt","parseExprOp","checkKeywords","ahead","tsParseImportEqualsDeclaration","importNode","isAbstractClass","cls","callParseClassMember","inAbstractClass","methodOrProp","tsParseExpressionStatement","isDeclare","shouldParseExportDeclaration","tsTryParseExportDeclaration","resetStartLocation","definite","parseClassPropertyAnnotation","_typeCast","_typeCast2","_jsx4","_typeCast3","typeCast","_typeParameters","tsParseTypeAssertion","readToken_lt_gt","baseCount","firstParam","oldIsDeclareContext","oldInAbstractClass","v8intrinsic","v8IntrinsicStart","parseV8Intrinsic","placeholders","expectedNode","assertNoSpace","finishPlaceholder","isFinished","parsePlaceholder","parseStatement","takeDecorators","oldStrict","parseClassId","parseClassSuper","parseClassBody","expectPlugin","isUnparsedContextual","startsWith","nextTokenStartSince","filter","hasStarImport","maybeParseStarImportSpecifier","parseNamedImportSpecifiers","parseImportSource","mixinPluginNames","keys","defaultOptions","sourceType","sourceFilename","startLine","allowAwaitOutsideFunction","allowReturnOutsideFunction","allowImportExportEverywhere","allowSuperOutsideMethod","allowUndeclaredExports","strictMode","ranges","tokens","createParenthesizedExpressions","State","potentialArrowAt","inPipeline","topicContext","maxNumOfResolvableTopics","maxTopicIndex","soloAwait","inFSharpPipelineDirectBody","labels","decoratorStack","comments","strictErrors","exportedIdentifiers","tokensLength","curPosition","skipArrays","_isDigit","VALID_REGEX_FLAGS","forbiddenNumericSeparatorSiblings","decBinOct","hex","allowedNumericSeparatorSiblings","oct","bin","dec","Token","Tokenizer","checkKeywordEscapes","pushToken","old","curr","clear","skipSpace","getTokenFromCode","codePointAt","block","text","addComment","pushComment","startSkip","loop","skipBlockComment","skipLineComment","readToken_interpreter","nextPos","readNumber","readRegexp","width","next2","readToken_dot","readToken_question","readRadixNumber","readString","readToken_slash","readToken_mult_modulo","readToken_pipe_amp","readToken_caret","readToken_plus_min","readToken_eq_excl","readToken_numberSign","readWord","escaped","inClass","charAt","content","mods","char","charCode","radix","len","forceLen","allowNumSeparator","forbiddenSiblings","allowedSiblings","total","Infinity","prev","Number","isNaN","isBigInt","readInt","startsWithDot","isFloat","isDecimal","hasExponent","isOctal","hasLeadingZero","integer","recordStrictModeErrors","underscorePos","parseFloat","throwOnInvalid","codePos","readHexChar","readEscapedChar","containsInvalid","inTemplate","readCodePoint","octalStr","octal","n","escStart","identifierCheck","esc","readWord1","update","ClassScope","privateNames","loneAccessors","ClassScopeHandler","oldClassScope","_Array$from","from","classScope","redefined","CLASS_ELEMENT_KIND_GETTER","accessor","_this$stack","ExpressionScope","ArrowHeadParsingScope","iterator","ExpressionScopeHandler","isCertainlyParameterDeclaration","canBeArrowParameterDeclaration","recordDeclarationError","iterateErrors","clearDeclarationError","newExpressionScope","UtilParser","op","nameStart","nameEnd","allowAsi","messageOrType","missingPlugin","names","join","oldState","abortSignal","andThrow","shorthandAssign","doubleProto","isPrivateName","oldLabels","oldExportedIdentifiers","oldInModule","oldScope","getScopeHandler","oldProdParam","oldExpressionScope","expressionScope","paramFlags","ExpressionErrors","Node","parser","range","unwrapParenthesizedExpression","loopLabel","switchLabel","loneSurrogate","Parser","opts","_Object$keys","getOptions","initializeScopes","pluginMap","pluginsMap","enterInitialScopes","parseTopLevel","parseProgram","interpreter","parseInterpreterDirective","parseBlockBody","nextCh","parseDecorators","parseStatementContent","parseBreakContinueStatement","parseDebuggerStatement","parseDoStatement","parseForStatement","parseIfStatement","parseReturnStatement","parseSwitchStatement","parseThrowStatement","parseTryStatement","parseWhileStatement","parseWithStatement","parseBlock","parseEmptyStatement","nextTokenCharCode","assertModuleNodeAllowed","isAsyncFunction","maybeName","parseLabeledStatement","parseExpressionStatement","allowExport","currentContextDecorators","decorator","parseDecorator","canHaveLeadingDecorator","expectOnePlugin","parseMaybeDecoratorArguments","parseExprSubscripts","isBreak","verifyBreakContinue","lab","withTopicForbiddingContext","parseHeaderExpression","awaitAt","isAwaitAllowed","parseFor","parseVar","declarations","parseForIn","description","checkExpressionErrors","declarationPosition","parseFunction","hasReturn","discriminant","cur","sawDefault","cases","isCase","parseBindingAtom","simple","handler","clause","parseCatchClauseParam","finalizer","_this$state$labels","statementStart","allowDirectives","createNewLexicalScope","afterBlockParse","hasStrictModeDirective","parsedNonDirective","stmtToDirective","setStrict","isForIn","await","isFor","isTypescript","parseVarId","parseMaybeAssignDisallowIn","isHangingStatement","requireId","initFunction","parseFunctionId","parseFunctionBodyAndFinish","registerFunctionStatementId","treatFunctionsAsVar","constructorAllowsSuper","hadConstructor","hadStaticBlock","parseClassMember","pushClassMethod","parseClassProperty","parseClassStaticBlock","parseClassMemberWithIsStatic","publicMethod","privateMethod","publicProp","privateProp","publicMember","parseClassElementName","pushClassPrivateMethod","isNonstaticConstructor","isPrivate","isSimple","maybeQuestionTokenStart","parsePostMemberNameModifiers","pushClassPrivateProperty","pushClassProperty","checkGetterSetterParams","getPrivateNameSV","_member$decorators","parseClassPrivateProperty","declarePrivateName","CLASS_ELEMENT_KIND_SETTER","parseInitializer","hasDefault","maybeParseExportDefaultSpecifier","parseAfterDefault","hasStar","eatExportStar","maybeParseExportNamespaceSpecifier","parseAfterNamespace","isFromRequired","hasDeclaration","hasSpecifiers","maybeParseExportNamedSpecifiers","maybeParseExportDeclaration","checkExport","parseExportDefaultExpression","isExportDefaultSpecifier","parseExportDeclaration","FUNC_STATEMENT","l","hasFrom","nextAfterFrom","assertions","maybeParseImportAssertions","checkNames","isDefault","isFrom","checkDuplicateExports","_declaration$extra","_node$specifiers","exportedName","checkLocalExport","_node$declaration$dec","_i5","_node$properties","_i6","_node$elements","elem","nodes","surrogate","toString","parseNext","maybeParseDefaultImportSpecifier","maybeParseModuleAttributes","attrs","attrNames","keyName","parseAssertEntries","shouldParseDefaultImport","parseImportSpecifierLocal","parseImportSpecifier","isRecord","protoRef","isObjectMethod","used","disallowIn","disallowInAnd","parseExpressionBase","allowInAnd","expressions","ownExpressionErrors","hasYield","parseYield","parseMaybeConditional","parseExprOps","shouldExitDescending","parseConditional","prec","hasIn","checkPipelineAtInfixOperator","logical","coalesce","hasAwait","parseExprOpRightExpr","nextOp","withTopicPermittingContext","parseSmartPipelineBody","parseExprOpBaseRightExpr","withSoloAwaitPermittingContext","parseFSharpPipelineBody","isAwait","parseAwait","parseModuleExpression","isDelete","hasPropertyAsPrivateName","parseUpdate","isAmbiguousAwait","raiseOverwrite","parseSubscripts","maybeAsyncArrow","parseSubscript","parseBind","parseCoverCallAndAsyncArrowHead","parseMember","parseMaybePrivateName","usePrivateName","parseNoCallExpr","shouldParseAsyncArrow","validateAsPattern","parseAsyncArrowFromCallExpression","toReferencedArguments","toReferencedListDeep","tag","quasi","_node$arguments","possibleAsyncArrow","dynamicImport","allowPlaceholder","nodeForExtra","elts","oldInFSharpPipelineDirectBody","parseExprListItem","_call$extra","parseSuper","parseImportMetaProperty","parseAsyncArrowUnaryFunction","parseDo","parseParenAndDistinguishExpression","parseArrayLike","parseObjectLike","parseFunctionOrFunctionSent","parseNewOrNewTarget","primaryTopicReferenceIsAllowedInCurrentTopicContext","registerTopicReference","lookaheadCh","allowSuper","meta","parseMetaProperty","propertyName","spreadStart","optionalCommaStart","innerStartPos","innerStartLoc","spreadNodeStartPos","spreadNodeStartLoc","parseParenItem","parseRestBinding","checkCommaAfterRest","innerEndPos","innerEndLoc","arrowNode","shouldParseArrow","metaProp","inNonArrowFunction","parseNew","isOptionalChain","parseNewArguments","parseExprList","isTagged","cooked","tail","curElt","parseTemplateElement","quasis","parseTemplateSubstitution","propHash","create","parsePropertyDefinition","checkProto","parseSpread","maybeAsyncOrAccessorProp","parseObjPropValue","_params","getGetterSetterExpectedParamCount","parseObjectMethod","parseObjectProperty","oldInPropertyName","setArrowFunctionParameters","parseFunctionBody","isExpression","checkParams","nonSimple","isSimpleParamList","errorPos","strictModeChanged","checkClashes","_node$params","allowEmpty","inStaticBlock","recordAsyncArrowParametersError","inFunction","recordParameterInitializerError","delegate","childExpression","checkSmartPipelineBodyEarlyErrors","parseSmartPipelineBodyInStyle","isSimpleReference","topicReferenceWasUsedInCurrentTopicContext","callback","outerContextTopicState","outerContextSoloAwaitState","ret","revertScopes","_node$extra3","recordParenthesizedIdentifierError","_node$extra2","isLast","toAssignableObjectExpressionProp","raiseRestNotLast","checkToRestConversion","raiseTrailingCommaAfterRest","closeCharCode","parseAssignableListItem","_startLoc","_startPos","_left","disallowLetBinding","_expr$properties","_expr$elements","processComment","locationNode","getParser","decoratorsBeforeExport","validatePlugins","pluginsFromOptions","pluginList","parserClassCache","getParserClass","_options","moduleError","_unused2","getExpression","tokTypes","codeFrameColumns","rawLines","lineNumber","colNumber","deprecationWarningShown","process","emitWarning","deprecationError","console","warn","location","Math","max","_highlight","getDefs","chalk","gutter","grey","marker","red","bold","NEWLINE","getMarkerLines","linesAbove","linesBelow","startColumn","endLine","endColumn","min","lineDiff","markerLines","sourceLength","highlighted","highlightCode","forceColor","shouldHighlight","getChalk","defs","maybeHighlight","chalkFn","lines","split","hasColumns","numberMaxWidth","highlightedLines","frame","number","paddedNumber","hasMarker","lastMarkerLine","markerLine","markerSpacing","numberOfMarkers","repeat","reset","a","b","placeholderWhitelist","placeholderPattern","preserveComments","syntacticPlaceholders","validate","_ref","excluded","target","sourceKeys","_objectWithoutPropertiesLoose","normalizeReplacements","replacements","reduce","acc","replacement","formatter","parserOpts","_parser","_codeFrame","parseWithCodeFrame","removePropertiesDeep","syntactic","placeholderNames","legacy","isLegacyRef","placeholderVisitorHandler","PATTERN","ancestors","_state$placeholderWhi","isPlaceholder","isJSXIdentifier","isNewExpression","isFunction","resolve","resolveAncestors","isDuplicate","metadata","placeholderName","reverse","stringLiteral","emptyStatement","applyReplacement","_helperPluginUtils","_helperSplitExportDeclaration","_globals","_transformClass","getBuiltinClasses","category","api","assertVersion","loose","VISITED","Symbol","visitor","ExportDefaultDeclaration","isClassDeclaration","ClassDeclaration","ClassExpression","inferred","arrowFunctionToExpression","makeStatementFormatter","unwrap","assertExpressionStatement","createTemplateBuilder","defaultOpts","templateFnCache","templateAstCache","cachedOpts","tpl","extendedTrace","_string","builder","_literal","NO_PLACEHOLDER","rootStack","_parse","_populate","highlightTokens","jsTokensNs","_helperValidatorIdentifier","_chalk","sometimesKeywords","cyan","capitalized","yellow","jsxIdentifier","punctuator","magenta","green","white","bgRed","tokenize","BRACKET","matchToToken","JSX_TAG","getTokenType","toLowerCase","colorize","supportsColor","enabled","level","nameSet","buildTemplateCode","buildLiteralData","defaultReplacements"],"mappings":"oIAEAA,OAAOC,eAAeC,EAAS,aAAc,CAC3CC,OAAO,IAETD,EAAQE,QAAUF,EAAQG,QAAUH,EAAQI,WAAaJ,EAAQK,WAAaL,EAAQM,UAAYN,EAAQO,WAAQ,EAElH,IAIgCC,EAJ5BC,EAQJ,SAAiCD,GAAO,GAAIA,GAAOA,EAAIE,WAAc,OAAOF,EAAO,GAAY,OAARA,GAA+B,kBAARA,GAAmC,oBAARA,EAAsB,MAAO,CAAEN,QAASM,GAAS,IAAIG,EAAQC,IAA4B,GAAID,GAASA,EAAME,IAAIL,GAAQ,OAAOG,EAAMG,IAAIN,GAAQ,IAAIO,EAAS,GAAQC,EAAwBlB,OAAOC,gBAAkBD,OAAOmB,yBAA0B,IAAK,IAAIC,KAAOV,EAAO,GAAIV,OAAOqB,UAAUC,eAAeC,KAAKb,EAAKU,GAAM,CAAE,IAAII,EAAON,EAAwBlB,OAAOmB,yBAAyBT,EAAKU,GAAO,KAAUI,IAASA,EAAKR,KAAOQ,EAAKC,KAAQzB,OAAOC,eAAegB,EAAQG,EAAKI,GAAgBP,EAAOG,GAAOV,EAAIU,GAAYH,EAAOb,QAAUM,EAASG,GAASA,EAAMY,IAAIf,EAAKO,GAAW,OAAOA,EAR7sBS,CAAwBC,EAAQ,MAE7CC,GAE4BlB,EAFMiB,EAAQ,OAEOjB,EAAIE,WAAaF,EAAM,CAAEN,QAASM,GAEvF,SAASI,IAA6B,GAAuB,oBAAZe,QAAwB,OAAO,KAAM,IAAIhB,EAAQ,IAAIgB,QAAqE,OAA1Df,EAA2B,WAAc,OAAOD,GAAiBA,EAIlL,IAAMJ,GAAQ,EAAImB,EAASxB,SAASO,EAAWF,OAC/CP,EAAQO,MAAQA,EAChB,IAAMD,GAAY,EAAIoB,EAASxB,SAASO,EAAWH,WACnDN,EAAQM,UAAYA,EACpB,IAAMD,GAAa,EAAIqB,EAASxB,SAASO,EAAWJ,YACpDL,EAAQK,WAAaA,EACrB,IAAMD,GAAa,EAAIsB,EAASxB,SAASO,EAAWL,YACpDJ,EAAQI,WAAaA,EACrB,IAAMD,GAAU,EAAIuB,EAASxB,SAASO,EAAWN,SACjDH,EAAQG,QAAUA,EAElB,IAAIyB,EAAW9B,OAAO+B,OAAOtB,EAAMuB,UAAKC,GAAY,CAClDxB,QACAD,YACAD,aACAD,aACAD,UACA6B,IAAKzB,EAAMyB,MAGbhC,EAAQE,QAAU0B,G,wDCnClB9B,OAAOC,eAAeC,EAAS,aAAc,CAC3CC,OAAO,IAETD,EAAQE,QA8BR,SAAwB+B,EAAMC,EAAMC,EAAgBC,GAClD,IAAMC,EAAa,CACjBC,YAAQP,EACRQ,WAAOR,EACPS,UAAMT,EACNE,UAAMF,EACNG,UAAMH,EACNU,aAASV,EACTW,cAAUX,EACVY,eAAWZ,EACXa,eAAWb,EACXc,aAAc,GACdC,WAAW,EACXC,eAAe,EACfC,eAAWjB,EACXkB,qBAAiBlB,EACjBmB,qBAAiBnB,EACjBoB,yBAAqBpB,EACrBqB,gBAAgB,EAChBC,iBAAkB,GAClBC,iBAAkB,GAClBC,eAAgB,GAChBC,KAAM,GACNC,YAAa,GACbC,mBAAmB,EACnBC,gBAAgB,EAChBC,WAAY,KACZxB,SAAS,EACTyB,wBAAwB,EACxBC,sBAAsB,EACtBC,mBAAoB,GACpBC,iBAAkB,IAGdC,EAAW,SAAAC,GACfpE,OAAO+B,OAAOQ,EAAY6B,IAGtBC,EAAoBC,EAAMC,SAASC,SAASC,MAAM,CAACC,EAAqBC,mBAAoB,CAChGC,eADgG,SACjFzC,GACbI,EAAWoB,YAAYkB,KAAK1C,OAyDhC,SAAS2C,IAKP,GAjCF,WACE,IADgC,EAC5BxB,GAAiB,EACfyB,EAAQxC,EAAWJ,KAAKnB,IAAI,aAFF,IAIb+D,GAJa,IAIhC,6BACEzB,EADwB,QACF0B,OAAO,OAAQ,mBALP,8BAShC,IAAI1B,EAAJ,CACA,IAAI2B,EAAQvB,EAEZ,GAAInB,EAAWS,UAAW,CACxB,IAAMkC,EAAcZ,EAAMa,SAAS7E,WAAW4B,IAA7B,4FAKjB+C,EAASC,EAAYD,OACrBvB,EAAOwB,EAAYxB,UAEnBuB,EAAS,GACTvB,EAAOY,EAAMc,MAAMC,eAAe,IAGpC9C,EAAWJ,KAAKnB,IAAI,QAAQsE,iBAAiB,OAAQhB,EAAMc,MAAMG,YAAY,cAAejB,EAAMc,MAAMI,WAAW,eAAgBP,EAAQvB,KAI3I+B,GAoBF,WACE,IADkB,EACZC,EAAiBnD,EAAWJ,KAAKnB,IAAI,aADzB,IAGC0E,GAHD,IAGlB,2BAAmC,KAAxBvD,EAAwB,QAC3BO,EAAOP,EAAKO,KAElB,GAAIP,EAAKwD,kBACP,MAAMxD,EAAKyD,oBAAoB,uCAGjC,GAAIlD,EAAKmD,WACP,MAAM1D,EAAKyD,oBAAoB,2EAG7BtB,EAAMc,MAAMU,cAAcpD,IAAO,WACnC,IAAMqD,EAA8B,gBAAdrD,EAAKsD,KACL,IAAItB,EAAqBtE,QAAQ,CACrD6F,WAAY9D,EACZ+D,UAAW3D,EAAWK,SACtBuD,SAAU5D,EAAWO,UACrBR,QAASC,EAAWD,QACpBF,KAAMG,EAAWH,OAELgE,UACd,IAAMrD,EAAe,GACrBZ,EAAKoC,SAASD,EAAMC,SAASC,SAASC,MAAM,CAACC,EAAqBC,mBAAoB,CACpF0B,gBADoF,SACpElE,GACTA,EAAKmE,oBAAoBC,6BAC5BxD,EAAa8B,KAAK1C,QAMpB4D,EACFS,EAAgBzD,EAAcL,EAAMP,GAEpCsE,EAAW/D,EAAMP,GAvBgB,IAdrB,+BAnBlBuE,GAgJF,WACE,IAAKnE,EAAWS,UAAW,OAC3B,IAAMb,EAAOI,EAAWc,oBAClBK,EAAOvB,EAAKnB,IAAI,QACtBmB,EAAKoC,SAASF,GAEd,IAN2B,EAMvBsC,EAAU,WACZ,IAAMC,EAAMzE,EAAKM,MAAMoE,8BAA8B,QAIrD,OAFAF,EAAU,kBAAMrC,EAAMc,MAAM0B,UAAUF,IAE/BA,GAXkB,IAcJrE,EAAWoB,aAdP,IAc3B,2BAA+C,KAApCoD,EAAoC,QAE3CrE,EAEEqE,EAFFrE,KAEEqE,EADFC,WAGaC,mBAAmB,CAChCC,OAAQxE,IAERqE,EAASI,YAAYR,KAIvBI,EAASI,YAAY7C,EAAMc,MAAMgC,eAAe7E,EAAWH,KAAKiF,UAAU,yBAA0B,CAACV,QA3B5E,8BA8B3B,IAAMW,EAAa,IAAIC,IACvBpF,EAAKoC,SAASD,EAAMC,SAASC,SAASC,MAAM,CAACC,EAAqBC,mBAAoB,CACpF6C,MADoF,SAC9ErF,GAAM,IAERO,EAEEP,EAFFO,KACAsE,EACE7E,EADF6E,WAGEA,EAAWS,iBAAiB,CAC9BC,OAAQhF,KAER4E,EAAWK,IAAIX,QAKrB,IA9C2B,EAiEvBY,EAnBAC,IAAgCP,EAAWQ,KA9CpB,IAgDHR,GAhDG,IAgD3B,2BAAoC,KAAzBS,EAAyB,QAClCC,EAAcD,EAAWxF,EAAWO,UAAW6D,EAASjD,GAEpDmE,GACFE,EAAUE,MAAK,SAAUjB,GACvB,OAAIA,IAAe7E,IAIf6E,EAAWkB,UAAYlB,EAAWmB,iBAAmBnB,EAAWT,6BAClEsB,GAA8B,GACvB,QAFT,OAzDqB,8BAoEzBD,EADErF,EAAWD,QACA,SAAA8F,GACX,IAAMC,EAAW/D,EAAMc,MAAMgC,eAAe7E,EAAWH,KAAKiF,UAAU,yBAA0B,CAACV,MAEjG,OAAOyB,EAAY9D,EAAMc,MAAMkD,kBAAkB,KAAMF,EAAWC,GAAYA,GAGnE,SAAAD,GAAS,OAAI9D,EAAMc,MAAMgC,eAAe7E,EAAWH,KAAKiF,UAAU,6BAA8B,CAACV,KAAW4B,OAAOH,GAAa,MAG/I,IAAMI,EAAY9E,EAAK1C,IAAI,QAEtBwH,EAAUC,QAAWD,EAAUE,MAAMC,qBACxCjF,EAAKkF,cAAc,OAAQtE,EAAMc,MAAMyD,gBAAgBhB,EAA8BlB,IAAYiB,MAhFxE,UAmFFrF,EAAWQ,cAnFT,IAmF3B,2BAAkD,KAAvC+F,EAAuC,QAChDA,EAAW9H,IAAI,YAAYmG,YAAYS,EAAWkB,EAAWpG,KAAKqG,YApFzC,+BA/I3BC,GAEIzG,EAAWa,gBAAiB,KAE5BD,EAGEZ,EAHFY,gBACAC,EAEEb,EAFFa,gBACAF,EACEX,EADFW,UAEFC,EAAgBO,KAAOP,EAAgBO,KAAK6E,OAAOnF,EAAgBM,KAAKA,MAExEY,EAAMc,MAAM6D,SAAS/F,EAAWE,GAEhCkB,EAAMc,MAAM6D,SAAS9F,EAAiBC,EAAgBM,MAGxDwF,IAuDF,SAASA,IACPC,IADyB,IAKrBC,EACAC,EAHF3F,EACEnB,EADFmB,KAaF,GARInB,EAAWwB,yBACbqF,EAAgBE,EAAUC,cAAchH,EAAW0B,qBAGjD1B,EAAWyB,uBACbqF,EAAcC,EAAUC,cAAchH,EAAW2B,mBAG/CkF,GAAiBC,EAAa,CAC5BD,IACFA,EAAgBE,EAAUE,0BAA0BJ,IAGlDC,IACFA,EAAcC,EAAUE,0BAA0BH,IAGpD,IAAII,EAAO,CAACnF,EAAMc,MAAM0B,UAAUvE,EAAWK,UAAW0B,EAAMc,MAAMsE,cAAepF,EAAMc,MAAMsE,eAC3FN,IAAeK,EAAK,GAAKL,GACzBC,IAAaI,EAAK,GAAKJ,GAG3B,IAFA,IAAIM,EAAmB,EAEdC,EAAI,EAAGA,EAAIH,EAAKhB,OAAQmB,IAC1BtF,EAAMc,MAAMyE,cAAcJ,EAAKG,MAAKD,EAAmBC,GAG9DH,EAAOA,EAAKK,MAAM,EAAGH,EAAmB,GACxCjG,EAAKmB,KAAKP,EAAMc,MAAM2E,oBAAoBzF,EAAMc,MAAMgC,eAAe7E,EAAWH,KAAKiF,UAAU,eAAgBoC,KA3CjHtF,EAAS,CACPJ,wBAAwB,EACxBC,sBAAsB,EACtBC,mBAAoB,GACpBC,iBAAkB,KA6CtB,SAAS8D,EAAcD,EAAW5B,EAAUQ,EAASjD,GACnD,IACInC,EADEyI,EAAgBjC,EAAUrF,KAG5BH,EAAWD,SACb0H,EAAcC,UAAUC,QAAQ5F,EAAMc,MAAM+E,kBAEL,IAAnCH,EAAcC,UAAUxB,QAAgBnE,EAAMc,MAAMgF,gBAAgBJ,EAAcC,UAAU,KAAO3F,EAAMc,MAAMiF,aAAaL,EAAcC,UAAU,GAAGlB,SAAU,CACnKuB,KAAM,eAENN,EAAcC,UAAU,GAAKD,EAAcC,UAAU,GAAGlB,SACxDiB,EAActC,OAASpD,EAAMc,MAAMmF,iBAAiBjG,EAAMc,MAAM0B,UAAUX,GAAW7B,EAAMc,MAAMI,WAAW,WAE5GwE,EAActC,OAASpD,EAAMc,MAAMmF,iBAAiBjG,EAAMc,MAAM0B,UAAUX,GAAW7B,EAAMc,MAAMI,WAAW,SAG9GjE,EAAO+C,EAAMc,MAAMkD,kBAAkB,KAAM0B,EAAe1F,EAAMc,MAAM+E,mBAEtE5I,GAAO,EAAIiJ,EAA8BpK,SAASkE,EAAMc,MAAM0B,UAAUvE,EAAWM,WAAYyB,EAAMc,MAAM+E,iBAAkBH,EAAcC,WAGzIlC,EAAUf,WAAWyD,yBAA2B1C,EAAUf,WAAW0D,YAAchH,EAAKhB,KAAKgB,MAAQA,EAAKhB,KAAKgB,KAAK+E,OAAS,IAAMV,EAAUf,WAAW5F,KACtJmB,EAAWoB,YAAY8E,SACzBlH,EAAO+C,EAAMc,MAAMuF,qBAAqB,IAAKhE,IAAWpF,IAG1DwG,EAAUf,WAAWG,YAAY7C,EAAMc,MAAMyD,gBAAgBtH,KAE7DwG,EAAUZ,YAAY7C,EAAMc,MAAMuF,qBAAqB,IAAKhE,IAAWpF,IA4F3E,SAASkF,EAAW/D,EAAMP,GACxB,IAAMM,EAAQN,EAAOA,EAAKM,MAAQF,EAAWE,MAE3B,WAAdC,EAAKsD,MAOX,SAAuBtD,EAAMD,GAC3B,GAAIF,EAAWD,UAAYI,EAAKmD,WAAY,KAExCjD,EACEL,EADFK,SAGGF,EAAKkI,UAgCd,WACE,GAA8B,OAA1BrI,EAAWuB,WAAqB,CAClCK,EAAS,CACPL,WAAYvB,EAAWE,MAAMoI,sBAAsB,WAGrD,IAAMC,EAAaxG,EAAMc,MAAMmF,iBAAiBhI,EAAWK,SAAU0B,EAAMc,MAAMI,WAAW,cAEtFuF,EAAmBzG,EAAMc,MAAM4F,oBAAoB,MAAO,CAAC1G,EAAMc,MAAM6F,mBAAmB1I,EAAWuB,WAAYgH,KAEvHvI,EAAWmB,KAAKmB,KAAKkG,IAzCnBG,GACAtI,EAAWL,EAAWuB,YAGxB,IAAMqH,EAAa7G,EAAMc,MAAMmF,iBAAiBjG,EAAMc,MAAM0B,UAAUlE,GAAWF,EAAKtB,IAAKsB,EAAK0I,UAAY9G,EAAMc,MAAMiG,UAAU3I,EAAKtB,MAEnIkK,EAAOhH,EAAMc,MAAMmG,mBAAmB,KAAM7I,EAAKuC,OAAQvC,EAAKgB,KAAMhB,EAAK8I,UAAW9I,EAAK+I,OAE7FnH,EAAMc,MAAM6D,SAASqC,EAAM5I,GAE3B,IAAMtB,EAAMkD,EAAMc,MAAMsG,cAAchJ,EAAMA,EAAKtB,KAE7CkD,EAAMc,MAAMuG,gBAAgBvK,KAC9BkK,GAAO,EAAIM,EAAoBxL,SAAS,CACtCsC,KAAM4I,EACNO,GAAIzK,EACJqB,WAIJ,IAAMqJ,EAAOxH,EAAMc,MAAM2E,oBAAoBzF,EAAMc,MAAMuF,qBAAqB,IAAKQ,EAAYG,IAK/F,OAHAhH,EAAMc,MAAM2G,iBAAiBD,EAAMpJ,GAEnCH,EAAWmB,KAAKmB,KAAKiH,IACd,EAGT,OAAO,EAzCDE,CAActJ,EAAMD,IAlS5B,SAAmBC,EAAMuJ,GAAmC,IACtDC,EAD+BlG,EAAuB,uDAAhB,QAASvD,EAAO,uCAGtDC,EAAKkI,QACPzG,EAAS,CACPH,sBAAsB,IAExBkI,EAAa3J,EAAW2B,mBAExBC,EAAS,CACPJ,wBAAwB,IAE1BmI,EAAa3J,EAAW0B,oBAG1B,IAAMkI,EAAM7C,EAAUzE,KAAKqH,EAAYxJ,EAAMsD,EAAMzD,EAAWH,KAAMK,GAEhEwJ,IACFE,EAAIF,WAAa3H,EAAMc,MAAMgH,gBAAe,IAmR9CC,CAAU3J,GAAM,EAAO,KAAMD,GAuD/B,SAAS+D,EAAgBzD,EAAcuJ,EAAQnK,GACzCA,EAAKM,MAAM8J,cAAchK,EAAWK,SAAS0H,OAC/CnI,EAAKM,MAAM+J,OAAOjK,EAAWK,SAAS0H,MAGxCnG,EAAS,CACPd,oBAAqBlB,EACrBiB,gBAAiBkJ,EACjBhJ,gBAAgB,EAChBP,iBATiD,IAYjDG,EACEX,EADFW,UAGFoB,EAAMc,MAAM2G,iBAAiB7I,EAAWoJ,GAExCpJ,EAAU+B,OAASqH,EAAOrH,OAE1BX,EAAMc,MAAM6D,SAAS/F,EAAUQ,KAAM4I,EAAO5I,MAE5CR,EAAUQ,KAAK+I,WAAaH,EAAO5I,KAAK+I,WAI1C,WACE,GAAIlK,EAAWqB,kBAAmB,OAClCrB,EAAWqB,mBAAoB,GAE3BrB,EAAWwB,wBAA0BxB,EAAWyB,uBAClDkF,IAGF3G,EAAWmB,KAAKmB,KAAKtC,EAAWW,WAChCiG,IAZAuD,GAeF,SAASvD,IACP,GAAK5G,EAAWS,YAAaT,EAAWsB,eAAxC,CACA,IAAMhB,EAAYV,EAAKM,MAAMoI,sBAAsB,SACnD1G,EAAS,CACPN,gBAAgB,EAChBhB,cAGGN,EAAWD,SACdC,EAAWmB,KAAKwG,QAAQ5F,EAAMc,MAAM4F,oBAAoB,MAAO,CAAC1G,EAAMc,MAAM6F,mBAAmBpI,EAAWyB,EAAMc,MAAMgC,gBAAe,EAAIuF,EAA0BvM,SAASmC,EAAWH,MAAO,CAACkC,EAAMc,MAAM0B,UAAUvE,EAAWK,gBAGlOL,EAAWmB,KAAKwG,QAAQ5F,EAAMc,MAAM2E,oBAAoBzF,EAAMc,MAAMgC,eAAe7E,EAAWH,KAAKiF,UAAU9E,EAAWD,QAAU,gBAAkB,YAAa,CAACgC,EAAMc,MAAM0B,UAAUvE,EAAWK,UAAW0B,EAAMc,MAAM0B,UAAUvE,EAAWO,gBAsGjP,OAtEA,SAA0BX,EAAMC,EAAMC,EAAgBC,GACpD6B,EAAS,CACP3B,OAAQL,EAAKK,OACbC,MAAON,EAAKM,MACZC,KAAMP,EAAKO,KACXP,OACAC,OACAE,YAEF6B,EAAS,CACPxB,QAASJ,EAAWG,KAAKmJ,GACzBjJ,SAAUL,EAAWG,KAAKmJ,GAAKvH,EAAMc,MAAMI,WAAWjD,EAAWG,KAAKmJ,GAAGvB,MAAQ/H,EAAWE,MAAMoI,sBAAsB,SACxH/H,UAAWP,EAAWG,KAAKkK,WAC3B5J,YAAaT,EAAWG,KAAKkK,WAC7BzJ,gBAAiBmB,EAAMc,MAAMC,eAAe,MAE9ClB,EAAS,CACPlB,cAAeV,EAAWS,WAAaX,EAAetB,IAAIwB,EAAWO,UAAUwH,QAAU/H,EAAWE,MAAMoK,WAAWtK,EAAWO,UAAUwH,MAAM,KAjBrF,IAoB3D1H,EAGEL,EAHFK,SACAF,EAEEH,EAFFG,KACAS,EACEZ,EADFY,gBAEFgB,EAAS,CACPjB,UAAW4J,EAAiBlK,EAAUO,EAAiBT,KAzBI,IA4B3DgB,EACEnB,EADFmB,KA5B2D,EA7B/D,WAAkC,IAE9BZ,EACEP,EADFO,UAEIiK,EAAgB,GAChBC,EAAc,GAEpB,GAAIzK,EAAWS,UAAW,CACxB,IAAIiK,EAAM3I,EAAMc,MAAM0B,UAAUhE,GAE5BP,EAAWU,gBACbgK,EAAM3I,EAAMc,MAAMgC,eAAe7E,EAAWH,KAAKiF,UAAU,mBAAoB,CAAC4F,KAChF,EAAIC,EAAsB9M,SAAS6M,IAGrC,IAAME,EAAQ5K,EAAWE,MAAM2K,iCAAiCtK,GAChEiK,EAAclI,KAAKsI,GACnBH,EAAYnI,KAAKoI,GACjB9I,EAAS,CACPrB,UAAWwB,EAAMc,MAAM0B,UAAUqG,KAIrC,MAAO,CACLJ,gBACAC,eAqCEK,GAFFN,EA/B2D,EA+B3DA,cACAC,EAhC2D,EAgC3DA,YAEFlI,IAEKvC,EAAWD,SACda,EAAgBO,KAAKwG,QAAQ5F,EAAMc,MAAM2E,oBAAoBzF,EAAMc,MAAMgC,eAAe7E,EAAWH,KAAKiF,UAAU,kBAAmB,CAAC/C,EAAMc,MAAM+E,iBAAkB7F,EAAMc,MAAM0B,UAAUvE,EAAWK,cAGvMc,EAAOA,EAAK6E,OAAOhG,EAAWkB,eAAe0I,KAAI,SAAAmB,GAAE,OAAIA,EAAGhJ,EAAMc,MAAM0B,UAAUvE,EAAWK,eAC3F,IAAM2K,EAAWpL,EAAKqL,iBAClBC,EAAkBlL,EAAWI,SAA2B,IAAhBe,EAAK+E,OAEjD,GAAIgF,IAAoBF,EAAU,WACZhL,EAAWW,UAAU+B,QADT,IAChC,2BAAiD,KAAtCkI,EAAsC,QAC/C,IAAK7I,EAAMc,MAAMiF,aAAa8C,GAAQ,CACpCM,GAAkB,EAClB,QAJ4B,+BASlC,IAAMhB,EAAagB,EAAkB/J,EAAK,GAAGA,KAAK+I,WAAa,GAM/D,GAJKc,GACHd,EAAW5H,KAAKP,EAAMc,MAAMsI,UAAUpJ,EAAMc,MAAMuI,iBAAiB,gBAGjEF,EACF,OAAOnJ,EAAMc,MAAMwI,aAAalK,EAAK,IAGvCA,EAAKmB,KAAKP,EAAMc,MAAMyD,gBAAgBvE,EAAMc,MAAM0B,UAAUvE,EAAWK,YAEvE,IAAM8H,EAAYpG,EAAMc,MAAMyI,wBAAwBd,EAAezI,EAAMc,MAAMC,eAAe3B,EAAM+I,IAEtG,OAAOnI,EAAMc,MAAMgC,eAAesD,EAAWsC,GAGxCc,CAAiB3L,EAAMC,EAAMC,EAAgBC,IA5jBtD,IAAIsJ,EAAsBmC,EAAuBpM,EAAQ,MAErD+C,EAAuBhD,EAAwBC,EAAQ,MAEvD6I,EAAgCuD,EAAuBpM,EAAQ,MAE/D2H,EAAY5H,EAAwBC,EAAQ,OAE5C2C,EAAQ3C,EAAQ,KAEhBuL,EAAwBa,EAAuBpM,EAAQ,MAEvDgL,EAA4BoB,EAAuBpM,EAAQ,OAE/D,SAASb,IAA6B,GAAuB,oBAAZe,QAAwB,OAAO,KAAM,IAAIhB,EAAQ,IAAIgB,QAAqE,OAA1Df,EAA2B,WAAc,OAAOD,GAAiBA,EAElL,SAASa,EAAwBhB,GAAO,GAAIA,GAAOA,EAAIE,WAAc,OAAOF,EAAO,GAAY,OAARA,GAA+B,kBAARA,GAAmC,oBAARA,EAAsB,MAAO,CAAEN,QAASM,GAAS,IAAIG,EAAQC,IAA4B,GAAID,GAASA,EAAME,IAAIL,GAAQ,OAAOG,EAAMG,IAAIN,GAAQ,IAAIO,EAAS,GAAQC,EAAwBlB,OAAOC,gBAAkBD,OAAOmB,yBAA0B,IAAK,IAAIC,KAAOV,EAAO,GAAIV,OAAOqB,UAAUC,eAAeC,KAAKb,EAAKU,GAAM,CAAE,IAAII,EAAON,EAAwBlB,OAAOmB,yBAAyBT,EAAKU,GAAO,KAAUI,IAASA,EAAKR,KAAOQ,EAAKC,KAAQzB,OAAOC,eAAegB,EAAQG,EAAKI,GAAgBP,EAAOG,GAAOV,EAAIU,GAAyE,OAA7DH,EAAOb,QAAUM,EAASG,GAASA,EAAMY,IAAIf,EAAKO,GAAkBA,EAE9tB,SAAS8M,EAAuBrN,GAAO,OAAOA,GAAOA,EAAIE,WAAaF,EAAM,CAAEN,QAASM,GAEvF,SAASoM,EAAiBlK,EAAUO,EAAiBT,GACnD,IAAM4I,EAAOhH,EAAMc,MAAM4I,oBAAoB1J,EAAMc,MAAM0B,UAAUlE,GAAW,GAAIO,GAIlF,OAFAmB,EAAMc,MAAM6D,SAASqC,EAAM5I,GAEpB4I,I,gDC9BTtL,OAAOC,eAAeC,EAAS,aAAc,CAC3CC,OAAO,IAETD,EAAQE,QAMR,SAA8BgC,GAC5B,GAAI6L,EAAUlN,IAAIqB,GAChB,OAAQkC,EAAMc,MAAM0B,WAAaxC,EAAMc,MAAM8I,OAAOD,EAAUjN,IAAIoB,IAGpE,IACE,OAAOA,EAAKiF,UAAU,eACtB,MAAO8G,IAET,IAAMtC,EAAKzJ,EAAKK,MAAMoI,sBAAsB,eAC5CoD,EAAUxM,IAAIW,EAAMyJ,GACpB,IAAMyB,EAAKc,EAAO,CAChBC,aAAcxC,EACdyC,iBAAkBlM,EAAKiF,UAAU,kBACjCkH,4BAA6BnM,EAAKiF,UAAU,+BAI9C,OAFAjF,EAAKD,KAAKmD,iBAAiB,OAAQ,CAACgI,IACpClL,EAAKK,MAAM+L,oBAAoBpM,EAAKD,KAAKnB,IAAI,WACtCsD,EAAMc,MAAM0B,UAAU+E,IAtB/B,IAAIvH,EAAQ3C,EAAQ,KAEdsM,EAAY,IAAIpM,QAuBtB,IAAMuM,EAAS9J,EAAMa,SAAS3E,UAAlB,+hD,qGC9BZR,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IAEtD,IAAMsO,GAAa,EACbC,GAAa,EACbxG,GAAS,EAETyG,GAAS,EAETC,EACJ,WAAYC,GAAkB,IAAXC,EAAW,uDAAJ,GAAI,UAC5BC,KAAKF,WAAQ,EACbE,KAAKC,aAAU,EACfD,KAAKN,gBAAa,EAClBM,KAAKL,gBAAa,EAClBK,KAAKE,sBAAmB,EACxBF,KAAK7G,YAAS,EACd6G,KAAKG,cAAW,EAChBH,KAAKJ,YAAS,EACdI,KAAKI,aAAU,EACfJ,KAAKK,WAAQ,EACbL,KAAKM,mBAAgB,EACrBN,KAAKF,MAAQA,EACbE,KAAKC,QAAUF,EAAKE,QACpBD,KAAKN,aAAeK,EAAKL,WACzBM,KAAKL,aAAeI,EAAKJ,WACzBK,KAAKE,mBAAqBH,EAAKG,iBAC/BF,KAAK7G,SAAW4G,EAAK5G,OACrB6G,KAAKG,WAAaJ,EAAKI,SACvBH,KAAKJ,SAAWG,EAAKH,OACrBI,KAAKI,UAAYL,EAAKK,QACtBJ,KAAKK,MAAsB,MAAdN,EAAKM,MAAgBN,EAAKM,MAAQ,KAC/CL,KAAKM,cAAgB,MAInBC,EAAW,IAAIC,IAErB,SAASC,EAAclF,GAAoB,IAAdmF,EAAc,uDAAJ,GACrCA,EAAQT,QAAU1E,EAClB,IAAMoF,EAAQ,IAAId,EAAUtE,EAAMmF,GAElC,OADAH,EAAS7N,IAAI6I,EAAMoF,GACZA,EAGT,SAASC,EAAYrF,EAAM8E,GACzB,OAAO,IAAIR,EAAUtE,EAAM,CACzBmE,aACAW,UAIJ,IAAMhK,EAAQ,CACZwK,IAAK,IAAIhB,EAAU,MAAO,CACxBF,eAEFmB,OAAQ,IAAIjB,EAAU,SAAU,CAC9BF,eAEFoB,QAAS,IAAIlB,EAAU,UAAW,CAChCF,eAEFqB,OAAQ,IAAInB,EAAU,SAAU,CAC9BF,eAEFsB,OAAQ,IAAIpB,EAAU,SAAU,CAC9BF,eAEFpE,KAAM,IAAIsE,EAAU,OAAQ,CAC1BF,eAEFuB,IAAK,IAAIrB,EAAU,OACnBsB,SAAU,IAAItB,EAAU,IAAK,CAC3BH,aACAC,eAEFyB,aAAc,IAAIvB,EAAU,KAAM,CAChCH,aACAC,eAEF0B,YAAa,IAAIxB,EAAU,KAAM,CAC/BH,aACAC,eAEF2B,SAAU,IAAIzB,EAAU,KACxB0B,YAAa,IAAI1B,EAAU,MAC3B2B,OAAQ,IAAI3B,EAAU,IAAK,CACzBH,aACAC,eAEF8B,UAAW,IAAI5B,EAAU,KAAM,CAC7BH,aACAC,eAEF+B,WAAY,IAAI7B,EAAU,KAAM,CAC9BH,aACAC,eAEFgC,OAAQ,IAAI9B,EAAU,KACtB+B,UAAW,IAAI/B,EAAU,MACzBgC,OAAQ,IAAIhC,EAAU,IAAK,CACzBH,aACAC,eAEFmC,OAAQ,IAAIjC,EAAU,KACtBkC,MAAO,IAAIlC,EAAU,IAAK,CACxBH,eAEFsC,KAAM,IAAInC,EAAU,IAAK,CACvBH,eAEFuC,MAAO,IAAIpC,EAAU,IAAK,CACxBH,eAEFwC,YAAa,IAAIrC,EAAU,KAAM,CAC/BH,eAEFyC,IAAK,IAAItC,EAAU,KACnBuC,SAAU,IAAIvC,EAAU,IAAK,CAC3BH,eAEF2C,YAAa,IAAIxC,EAAU,MAC3ByC,MAAO,IAAIzC,EAAU,KAAM,CACzBH,eAEFtJ,SAAU,IAAIyJ,EAAU,YACxB0C,SAAU,IAAI1C,EAAU,MAAO,CAC7BH,eAEF8C,UAAW,IAAI3C,EAAU,IAAK,CAC5BF,eAEF8C,aAAc,IAAI5C,EAAU,KAAM,CAChCH,aACAC,eAEF+C,GAAI,IAAI7C,EAAU,KAClB8C,KAAM,IAAI9C,EAAU,IAAK,CACvBF,eAEFiD,qBAAsB,IAAI/C,EAAU,SACpCgD,GAAI,IAAIhD,EAAU,IAAK,CACrBH,aACAS,SAzIa,OA2IfnN,OAAQ,IAAI6M,EAAU,KAAM,CAC1BH,aACAS,SA7Ia,OA+If2C,OAAQ,IAAIjD,EAAU,QAAS,CAC7BD,SACAQ,SA/IY,EAgJZT,eAEFoD,KAAM,IAAIlD,EAAU,IAAK,CACvBH,aACAE,SACAD,eAEFqD,MAAO,IAAInD,EAAU,IAAK,CACxBH,aACAE,SACAD,eAEFsD,SAAUrC,EAAY,KAAM,GAC5BsC,kBAAmBtC,EAAY,KAAM,GACrCuC,UAAWvC,EAAY,KAAM,GAC7BwC,WAAYxC,EAAY,KAAM,GAC9ByC,UAAWzC,EAAY,IAAK,GAC5B0C,WAAY1C,EAAY,IAAK,GAC7B2C,WAAY3C,EAAY,IAAK,GAC7B4C,SAAU5C,EAAY,gBAAiB,GACvC6C,WAAY7C,EAAY,YAAa,GACrC8C,SAAU9C,EAAY,YAAa,GACnC+C,QAAS,IAAI9D,EAAU,MAAO,CAC5BH,aACAW,MAAO,EACPT,SACAD,eAEFiE,OAAQ,IAAI/D,EAAU,IAAK,CACzBH,aACAW,MAAO,GACPV,eAEFkE,KAAM,IAAIhE,EAAU,IAAK,CACvBQ,MAAO,KAETyD,MAAOlD,EAAY,IAAK,IACxBmD,SAAU,IAAIlE,EAAU,KAAM,CAC5BH,aACAW,MAAO,GACPH,kBAAkB,IAEpB8D,OAAQvD,EAAc,SACtBwD,MAAOxD,EAAc,OAAQ,CAC3Bf,eAEFwE,OAAQzD,EAAc,SACtB0D,UAAW1D,EAAc,YACzB2D,UAAW3D,EAAc,YACzB1N,SAAU0N,EAAc,UAAW,CACjCf,eAEF2E,IAAK5D,EAAc,KAAM,CACvBtH,SACAuG,eAEF4E,MAAO7D,EAAc,OAAQ,CAC3Bf,eAEF6E,SAAU9D,EAAc,WACxB+D,KAAM/D,EAAc,MAAO,CACzBtH,WAEFsL,UAAWhE,EAAc,WAAY,CACnCd,eAEF+E,IAAKjE,EAAc,MACnBkE,QAASlE,EAAc,SAAU,CAC/Bf,eAEFkF,QAASnE,EAAc,UACvBoE,OAAQpE,EAAc,QAAS,CAC7Bf,aACAE,SACAD,eAEFmF,KAAMrE,EAAc,OACpBsE,KAAMtE,EAAc,OACpBuE,OAAQvE,EAAc,SACtBwE,OAAQxE,EAAc,QAAS,CAC7BtH,WAEF+L,MAAOzE,EAAc,QACrB0E,KAAM1E,EAAc,MAAO,CACzBf,aACAC,eAEFyF,MAAO3E,EAAc,OAAQ,CAC3Bd,eAEF0F,OAAQ5E,EAAc,QAAS,CAC7Bd,eAEF2F,OAAQ7E,EAAc,QAAS,CAC7Bd,eAEF4F,SAAU9E,EAAc,UAAW,CACjCf,eAEF8F,QAAS/E,EAAc,UACvBgF,QAAShF,EAAc,SAAU,CAC/Bd,eAEF+F,MAAOjF,EAAc,OAAQ,CAC3Bd,eAEFgG,MAAOlF,EAAc,OAAQ,CAC3Bd,eAEFiG,OAAQnF,EAAc,QAAS,CAC7Bd,eAEFkG,IAAKpF,EAAc,KAAM,CACvBf,aACAW,MAAO,IAETyF,YAAarF,EAAc,aAAc,CACvCf,aACAW,MAAO,IAET0F,QAAStF,EAAc,SAAU,CAC/Bf,aACAE,SACAD,eAEFqG,MAAOvF,EAAc,OAAQ,CAC3Bf,aACAE,SACAD,eAEFsG,QAASxF,EAAc,SAAU,CAC/Bf,aACAE,SACAD,gBAIEuG,EAAY,yBACZC,EAAa,IAAIC,OAAOF,EAAUG,OAAQ,KAChD,SAASC,EAAUC,GACjB,OAAQA,GACN,KAAK,GACL,KAAK,GACL,KAAK,KACL,KAAK,KACH,OAAO,EAET,QACE,OAAO,GAGb,IAAMC,EAAiB,gCACvB,SAASC,EAAaF,GACpB,OAAQA,GACN,KAAK,EACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,IACL,KAAK,KACL,KAAK,KACL,KAAK,KACL,KAAK,KACL,KAAK,KACL,KAAK,KACL,KAAK,KACL,KAAK,KACL,KAAK,KACL,KAAK,KACL,KAAK,KACL,KAAK,KACL,KAAK,KACL,KAAK,KACL,KAAK,MACL,KAAK,MACH,OAAO,EAET,QACE,OAAO,G,IAIPG,EACJ,WAAYC,EAAMC,GAAK,UACrB5G,KAAK2G,UAAO,EACZ3G,KAAK6G,YAAS,EACd7G,KAAK2G,KAAOA,EACZ3G,KAAK6G,OAASD,GAIZE,EACJ,WAAYC,EAAOC,GAAK,UACtBhH,KAAK+G,WAAQ,EACb/G,KAAKgH,SAAM,EACXhH,KAAKiH,cAAW,EAChBjH,KAAKkH,oBAAiB,EACtBlH,KAAK+G,MAAQA,EACb/G,KAAKgH,IAAMA,GAkCf,SAASG,EAAKC,GACZ,OAAOA,EAAMA,EAAM1N,OAAS,G,IAGxB2N,E,iIACOC,GACLtH,KAAKiH,WAAUK,EAAQC,IAAIN,SAAWjH,KAAKiH,UAC/CjH,KAAKwH,MAAMC,iBAAiB3R,KAAKwR,GACjCtH,KAAKwH,MAAME,gBAAgB5R,KAAKwR,K,uDAGD3T,EAAMgU,EAAUC,GAC/C,GAA0C,IAAtC5H,KAAKwH,MAAME,gBAAgBhO,OAA/B,CAOA,IAHA,IAAImO,EAAc,KACdhN,EAAI8M,EAASjO,OAEM,OAAhBmO,GAAwBhN,EAAI,GACjCgN,EAAcF,IAAW9M,GAG3B,GAAoB,OAAhBgN,EAAJ,CAIA,IAAK,IAAIC,EAAI,EAAGA,EAAI9H,KAAKwH,MAAME,gBAAgBhO,OAAQoO,IACjD9H,KAAKwH,MAAME,gBAAgBI,GAAGd,IAAMhH,KAAKwH,MAAMO,oBAAoBf,MACrEhH,KAAKwH,MAAME,gBAAgBM,OAAOF,EAAG,GACrCA,KAMJ,IAFA,IAAMG,EAAsB,GAEnBpN,EAAI,EAAGA,EAAImF,KAAKwH,MAAME,gBAAgBhO,OAAQmB,IAAK,CAC1D,IAAMqN,EAAiBlI,KAAKwH,MAAME,gBAAgB7M,GAE9CqN,EAAelB,IAAMrT,EAAKqT,KAC5BiB,EAAoBnS,KAAKoS,GAEpBN,IACH5H,KAAKwH,MAAME,gBAAgBM,OAAOnN,EAAG,GACrCA,YAG4B3H,IAA1BS,EAAK8T,mBACP9T,EAAK8T,iBAAmB,IAG1B9T,EAAK8T,iBAAiB3R,KAAKoS,IAI3BN,IAAiB5H,KAAKwH,MAAME,gBAAkB,IAE9CO,EAAoBvO,OAAS,EAC/BmO,EAAYJ,iBAAmBQ,OACW/U,IAAjC2U,EAAYJ,mBACrBI,EAAYJ,iBAAmB,Q,qCAIpB9T,GACb,KAAkB,YAAdA,EAAKwU,MAAsBxU,EAAKgB,KAAK+E,OAAS,GAAlD,CACA,IACI0O,EAAYC,EAAWZ,EAAkB5M,EAAGiN,EAD1CV,EAAQpH,KAAKwH,MAAMc,aAGzB,GAAItI,KAAKwH,MAAMC,iBAAiB/N,OAAS,EACnCsG,KAAKwH,MAAMC,iBAAiB,GAAGV,OAASpT,EAAKqT,KAC/CS,EAAmBzH,KAAKwH,MAAMC,iBAC9BzH,KAAKwH,MAAMC,iBAAmB,IAE9BzH,KAAKwH,MAAMC,iBAAiB/N,OAAS,OAElC,GAAI0N,EAAM1N,OAAS,EAAG,CAC3B,IAAM6O,EAAcpB,EAAKC,GAErBmB,EAAYd,kBAAoBc,EAAYd,iBAAiB,GAAGV,OAASpT,EAAKqT,MAChFS,EAAmBc,EAAYd,wBACxBc,EAAYd,kBAQvB,IAJIL,EAAM1N,OAAS,GAAKyN,EAAKC,GAAOL,OAASpT,EAAKoT,QAChDqB,EAAahB,EAAMzN,OAGdyN,EAAM1N,OAAS,GAAKyN,EAAKC,GAAOL,OAASpT,EAAKoT,OACnDsB,EAAYjB,EAAMzN,MAKpB,IAFK0O,GAAaD,IAAYC,EAAYD,GAEtCA,EACF,OAAQzU,EAAKwU,MACX,IAAK,mBACHnI,KAAKwI,iCAAiC7U,EAAMA,EAAK8U,YACjD,MAEF,IAAK,gBACHzI,KAAKwI,iCAAiC7U,EAAMA,EAAK8U,YAAY,GAC7D,MAEF,IAAK,iBACHzI,KAAKwI,iCAAiC7U,EAAMA,EAAKuH,WACjD,MAEF,IAAK,kBACH8E,KAAKwI,iCAAiC7U,EAAMA,EAAKgU,UACjD,MAEF,IAAK,eACH3H,KAAKwI,iCAAiC7U,EAAMA,EAAKgU,UAAU,QAGtD3H,KAAKwH,MAAMO,sBAAgE,oBAAxC/H,KAAKwH,MAAMO,oBAAoBI,MAA4C,oBAAdxU,EAAKwU,MAAsE,oBAAxCnI,KAAKwH,MAAMO,oBAAoBI,MAA4C,oBAAdxU,EAAKwU,OAC9MnI,KAAKwI,iCAAiC7U,EAAM,CAACqM,KAAKwH,MAAMO,sBAG1D,GAAIM,GACF,GAAIA,EAAUX,gBACZ,GAAIW,IAAc1U,GAAQ0U,EAAUX,gBAAgBhO,OAAS,GAAKyN,EAAKkB,EAAUX,iBAAiBV,KAAOrT,EAAKoT,MAC5GpT,EAAK+T,gBAAkBW,EAAUX,uBAC1BW,EAAUX,qBAEjB,IAAK7M,EAAIwN,EAAUX,gBAAgBhO,OAAS,EAAGmB,GAAK,IAAKA,EACvD,GAAIwN,EAAUX,gBAAgB7M,GAAGmM,KAAOrT,EAAKoT,MAAO,CAClDpT,EAAK+T,gBAAkBW,EAAUX,gBAAgBM,OAAO,EAAGnN,EAAI,GAC/D,YAKH,GAAImF,KAAKwH,MAAME,gBAAgBhO,OAAS,EAC7C,GAAIyN,EAAKnH,KAAKwH,MAAME,iBAAiBV,KAAOrT,EAAKoT,MAAO,CACtD,GAAI/G,KAAKwH,MAAMO,oBACb,IAAKD,EAAI,EAAGA,EAAI9H,KAAKwH,MAAME,gBAAgBhO,OAAQoO,IAC7C9H,KAAKwH,MAAME,gBAAgBI,GAAGd,IAAMhH,KAAKwH,MAAMO,oBAAoBf,MACrEhH,KAAKwH,MAAME,gBAAgBM,OAAOF,EAAG,GACrCA,KAKF9H,KAAKwH,MAAME,gBAAgBhO,OAAS,IACtC/F,EAAK+T,gBAAkB1H,KAAKwH,MAAME,gBAClC1H,KAAKwH,MAAME,gBAAkB,QAE1B,CACL,IAAK7M,EAAI,EAAGA,EAAImF,KAAKwH,MAAME,gBAAgBhO,UACrCsG,KAAKwH,MAAME,gBAAgB7M,GAAGmM,IAAMrT,EAAKoT,OADIlM,KAMnD,IAAM6M,EAAkB1H,KAAKwH,MAAME,gBAAgB3M,MAAM,EAAGF,GAExD6M,EAAgBhO,SAClB/F,EAAK+T,gBAAkBA,GAKO,KAFhCD,EAAmBzH,KAAKwH,MAAME,gBAAgB3M,MAAMF,IAE/BnB,SACnB+N,EAAmB,MAOzB,GAFAzH,KAAKwH,MAAMO,oBAAsBpU,EAE7B8T,EACF,GAAIA,EAAiB/N,QAAU+N,EAAiB,GAAGV,OAASpT,EAAKoT,OAASI,EAAKM,GAAkBT,KAAOrT,EAAKqT,IAC3GrT,EAAK+U,cAAgBjB,MAChB,CACL,IAAMkB,EAA4BlB,EAAiBmB,WAAU,SAAAtB,GAAO,OAAIA,EAAQN,KAAOrT,EAAKqT,OAExF2B,EAA4B,GAC9BhV,EAAK+U,cAAgBjB,EAAiB1M,MAAM,EAAG4N,GAC/ChV,EAAK8T,iBAAmBA,EAAiB1M,MAAM4N,IAE/ChV,EAAK8T,iBAAmBA,EAK9BL,EAAMtR,KAAKnC,Q,cA3Mb,aAAc,UACZqM,KAAK6I,mBAAoB,EACzB7I,KAAK8I,6BAA8B,E,4CAG3BvN,GACR,OAAOyE,KAAK+I,QAAQ/W,IAAIuJ,K,sCAGVyN,EAAQzN,GACtB,GAAIyE,KAAKiJ,UAAUD,GAAS,OAAOhJ,KAAK+I,QAAQ9W,IAAI+W,GAAQzN,O,MAsM1D2N,EAAgBjY,OAAOkY,OAAO,CAClCC,oBAAqB,gCACrBC,iBAAkB,6DAClBC,sCAAuC,0EACvCC,uBAAwB,6DACxBC,oCAAqC,0DACrCC,+BAAgC,oDAChCC,uBAAwB,kFACxBC,wBAAyB,iDACzBC,eAAgB,6CAChBC,eAAgB,gDAChBC,uBAAwB,wDACxBC,sBAAuB,mDACvBC,6BAA8B,4DAC9BC,sBAAuB,2CACvBC,mBAAoB,yCACpBC,uBAAwB,mCACxBC,8BAA+B,qCAC/BC,sBAAuB,mKACvBC,qBAAsB,kFACtBC,qBAAsB,mHACtBC,mBAAoB,iDACpBC,qBAAsB,+CACtBC,mBAAoB,0CACpBC,uBAAwB,qGACxBC,qBAAsB,0CACtBC,uBAAwB,8CACxBC,gBAAiB,uEACjBC,eAAgB,qCAChBC,qBAAsB,oCACtBC,qBAAsB,2CACtBC,iBAAkB,oCAClBC,2BAA4B,yBAC5BC,sBAAuB,uIACvBC,8BAA+B,gEAC/BC,uBAAwB,2DACxBC,kCAAmC,qEACnCC,qBAAsB,iBACtBC,6BAA8B,4EAC9BC,cAAe,+BACfC,sBAAuB,oGACvBC,gCAAiC,4DACjCC,gBAAiB,+BACjBC,2BAA4B,kCAC5BC,yBAA0B,iCAC1BC,wBAAyB,4DACzBC,oBAAqB,sEACrBC,qBAAsB,wBACtBC,iBAAkB,2BAClBC,eAAgB,kBAChBC,aAAc,8BACdC,sBAAuB,gCACvBC,8BAA+B,sCAC/BC,2BAA4B,gCAC5BC,kBAAmB,wBACnBC,WAAY,+BACZC,kBAAmB,uCACnBC,cAAe,iBACfC,yBAA0B,gEAC1BC,yBAA0B,4BAC1BC,+BAAgC,2CAChCC,8BAA+B,kCAC/BC,8BAA+B,4BAC/BC,sBAAuB,wEACvBC,6BAA8B,mCAC9BC,mBAAoB,iCACpBC,oBAAqB,8EACrBC,0BAA2B,uCAC3BC,qBAAsB,kCACtBC,iBAAkB,2BAClBC,sBAAuB,8DACvBC,iBAAkB,oBAClBC,qBAAsB,4CACtBC,0BAA2B,qFAC3BC,iCAAkC,+CAClCC,4BAA6B,8DAC7BC,kCAAmC,yDACnCC,iCAAkC,gEAClCC,sBAAuB,6BACvBC,yBAA0B,2BAC1BC,kBAAmB,8BACnBC,iBAAkB,kCAClBC,iBAAkB,mCAClBC,iCAAkC,6FAClCC,kBAAmB,wFACnBC,sBAAuB,0DACvBC,2BAA4B,4DAC5BC,UAAW,sBACXC,mBAAoB,gDACpBC,iBAAkB,uCAClBC,oBAAqB,mGACrBC,+BAAgC,iEAChCC,+BAAgC,oEAChCC,oBAAqB,8DACrBC,uBAAwB,sEACxBC,kCAAmC,+FACnCC,oBAAqB,wGACrBC,yBAA0B,6BAC1BC,0CAA2C,mIAC3CC,4CAA6C,qIAC7CC,6CAA8C,sIAC9CC,cAAe,mDACfC,kBAAmB,+CACnBC,eAAgB,0HAChBC,gBAAiB,uDACjBC,aAAc,yCACdC,oBAAqB,mCACrBC,2BAA4B,8BAC5BC,eAAgB,qFAChBC,oBAAqB,wDACrBC,mBAAoB,uDACpBC,WAAY,wBACZC,gBAAiB,kJACjBC,kBAAmB,4CACnBC,kBAAmB,iDACnBC,yCAA0C,kIAC1CC,2CAA4C,oIAC5CC,4CAA6C,qIAC7CC,8BAA+B,kCAC/BC,iCAAkC,0FAClCC,yBAA0B,oCAC1BC,uBAAwB,yDACxBC,kBAAmB,0BACnBC,2BAA4B,6DAC5BC,6BAA8B,kEAC9BC,oBAAqB,2CACrBC,2BAA4B,yDAC5BC,uBAAwB,0JACxBC,uBAAwB,gCACxBC,gBAAiB,sDACjBC,gBAAiB,wBACjBC,mCAAoC,mFACpCC,gBAAiB,kDACjBC,2BAA4B,qDAC5BC,yBAA0B,8EAC1BC,kBAAmB,qDACnBC,wBAAyB,+CACzBC,8BAA+B,mDAC/BC,6BAA8B,kEAC9BC,iBAAkB,qHAClBC,oBAAqB,uBACrBC,mBAAoB,kCACpBC,mBAAoB,+BACpBC,qBAAsB,wBACtBC,iBAAkB,4CAClBC,uBAAwB,uDACxBC,iBAAkB,uDAClBC,0BAA2B,sDAGvBC,E,6IACmBC,GAGrB,OADIA,IAAQxS,KAAKwH,MAAMT,MAAa/G,KAAKwH,MAAMiL,SAAkBD,IAAQxS,KAAKwH,MAAMkL,aAAoB1S,KAAKwH,MAAMmL,gBAAyBH,IAAQxS,KAAKwH,MAAMR,IAAWhH,KAAKwH,MAAMoL,OAAgBJ,IAAQxS,KAAKwH,MAAMqL,WAAkB7S,KAAKwH,MAAMsL,cAxXzP,SAAqBC,EAAOC,GAC1B,IAEIC,EAFAtM,EAAO,EACPuM,EAAY,EAIhB,IAFA/M,EAAWgN,UAAY,GAEfF,EAAQ9M,EAAWiN,KAAKL,KAAWE,EAAMI,MAAQL,GACvDrM,IACAuM,EAAY/M,EAAWgN,UAGzB,OAAO,IAAIzM,EAASC,EAAMqM,EAASE,GA6W6OI,CAAYtT,KAAK+S,MAAOP,K,4BAIlSA,EAAKe,GAA0B,2BAARrd,EAAQ,iCAARA,EAAQ,kBACnC,OAAO8J,KAAKwT,cAAL,MAAAxT,KAAA,CAAmBwS,OAAKtf,EAAWqgB,GAAnC,OAAqDrd,M,qCAG/Csc,EAAKe,GAA0B,2BAARrd,EAAQ,iCAARA,EAAQ,kBAC5C,IAAMqR,EAAMvH,KAAKyT,uBAAuBjB,GAClCkB,EAAUH,EAAclc,QAAQ,WAAW,SAACsc,EAAG9Y,GAAJ,OAAU3E,EAAO2E,MAAlD,YAA6D0M,EAAIZ,KAAjE,YAAyEY,EAAIV,OAA7E,KAEhB,GAAI7G,KAAKU,QAAQkT,cAGf,IAFA,IAAMC,EAAS7T,KAAKwH,MAAMqM,OAEjBhZ,EAAIgZ,EAAOna,OAAS,EAAGmB,GAAK,EAAGA,IAAK,CAC3C,IAAMiZ,EAAQD,EAAOhZ,GAErB,GAAIiZ,EAAMtB,MAAQA,EAChB,OAAOvhB,OAAO+B,OAAO8gB,EAAO,CAC1BJ,YAEG,GAAII,EAAMtB,IAAMA,EACrB,MAKN,OAAOxS,KAAK+T,OAAO,CACjBxM,MACAiL,OACCkB,K,oCAGSlB,EAAKwB,EAAMT,GAA0B,2BAARrd,EAAQ,iCAARA,EAAQ,kBACjD,IAAMqR,EAAMvH,KAAKyT,uBAAuBjB,GAClCkB,EAAUH,EAAclc,QAAQ,WAAW,SAACsc,EAAG9Y,GAAJ,OAAU3E,EAAO2E,MAAlD,YAA6D0M,EAAIZ,KAAjE,YAAyEY,EAAIV,OAA7E,KAChB,OAAO7G,KAAK+T,OAAO9iB,OAAO+B,OAAO,CAC/BuU,MACAiL,OACCwB,GAAON,K,6BAGLO,EAAcP,GACnB,IAAMQ,EAAM,IAAIC,YAAYT,GAG5B,GAFAziB,OAAO+B,OAAOkhB,EAAKD,GAEfjU,KAAKU,QAAQkT,cAEf,OADK5T,KAAKoU,aAAapU,KAAKwH,MAAMqM,OAAO/d,KAAKoe,GACvCA,EAEP,MAAMA,M,GAtDc7M,GAkZpBgN,EACJ,WAAY1T,EAAO2T,EAAQC,EAAeC,GAAU,UAClDxU,KAAKW,WAAQ,EACbX,KAAKsU,YAAS,EACdtU,KAAKuU,mBAAgB,EACrBvU,KAAKwU,cAAW,EAChBxU,KAAKW,MAAQA,EACbX,KAAKsU,SAAWA,EAChBtU,KAAKuU,gBAAkBA,EACvBvU,KAAKwU,SAAWA,GAIdC,EAAU,CACdC,eAAgB,IAAIL,EAAW,KAAK,GACpCM,gBAAiB,IAAIN,EAAW,KAAK,GACrCO,iBAAkB,IAAIP,EAAW,MAAM,GACvCQ,cAAe,IAAIR,EAAW,MAAM,GACpCS,eAAgB,IAAIT,EAAW,KAAK,GACpCU,gBAAiB,IAAIV,EAAW,KAAK,GACrCje,SAAU,IAAIie,EAAW,KAAK,GAAM,GAAM,SAAAW,GAAC,OAAIA,EAAEC,mBACjDzY,mBAAoB,IAAI6X,EAAW,YAAY,GAC/Ca,kBAAmB,IAAIb,EAAW,YAAY,IAGhDhe,EAAMyL,OAAOxB,cAAgBjK,EAAMsL,OAAOrB,cAAgB,WACxD,GAAkC,IAA9BN,KAAKwH,MAAM2N,QAAQzb,OAAvB,CAKA,IAAI0b,EAAMpV,KAAKwH,MAAM2N,QAAQxb,MAEzByb,IAAQX,EAAQC,gBAA8C,aAA5B1U,KAAKqV,aAAa1U,QACtDyU,EAAMpV,KAAKwH,MAAM2N,QAAQxb,OAG3BqG,KAAKwH,MAAM8N,aAAeF,EAAId,YAV5BtU,KAAKwH,MAAM8N,aAAc,GAa7Bjf,EAAMkF,KAAK+E,cAAgB,SAAUiV,GACnC,IAAIC,GAAU,EAEVD,IAAalf,EAAM8L,MACI,OAArBnC,KAAKwH,MAAMpW,OAAmB4O,KAAKwH,MAAM8N,aAAeC,IAAalf,EAAMoO,WAAa8Q,IAAalf,EAAMiP,SAC7GkQ,GAAU,IAIdxV,KAAKwH,MAAM8N,YAAcE,EAErBxV,KAAKwH,MAAMiO,aACbzV,KAAKwH,MAAMiO,YAAa,IAI5Bpf,EAAMmL,OAAOlB,cAAgB,SAAUiV,GACrCvV,KAAKwH,MAAM2N,QAAQrf,KAAKkK,KAAK0V,aAAaH,GAAYd,EAAQC,eAAiBD,EAAQE,iBACvF3U,KAAKwH,MAAM8N,aAAc,GAG3Bjf,EAAMoM,aAAanC,cAAgB,WACjCN,KAAKwH,MAAM2N,QAAQrf,KAAK2e,EAAQI,eAChC7U,KAAKwH,MAAM8N,aAAc,GAG3Bjf,EAAMwL,OAAOvB,cAAgB,SAAUiV,GACrC,IAAMI,EAAkBJ,IAAalf,EAAMqO,KAAO6Q,IAAalf,EAAMmO,MAAQ+Q,IAAalf,EAAM6O,OAASqQ,IAAalf,EAAM4O,OAC5HjF,KAAKwH,MAAM2N,QAAQrf,KAAK6f,EAAkBlB,EAAQK,eAAiBL,EAAQM,iBAC3E/U,KAAKwH,MAAM8N,aAAc,GAG3Bjf,EAAMyM,OAAOxC,cAAgB,aAE7BjK,EAAMoO,UAAUnE,cAAgBjK,EAAMiP,OAAOhF,cAAgB,SAAUiV,IACjEA,EAAS7V,YAAc6V,IAAalf,EAAM2L,MAAQuT,IAAalf,EAAMiO,OAAWiR,IAAalf,EAAMsO,SAAW3E,KAAK4V,0BAA+BL,IAAalf,EAAM4L,OAASsT,IAAalf,EAAMmL,SAAWxB,KAAKqV,eAAiBZ,EAAQoB,OAG5O7V,KAAKwH,MAAM2N,QAAQrf,KAAK2e,EAAQS,mBAFhClV,KAAKwH,MAAM2N,QAAQrf,KAAK2e,EAAQjY,oBAKlCwD,KAAKwH,MAAM8N,aAAc,GAG3Bjf,EAAMmM,UAAUlC,cAAgB,WAC1BN,KAAKqV,eAAiBZ,EAAQre,SAChC4J,KAAKwH,MAAM2N,QAAQxb,MAEnBqG,KAAKwH,MAAM2N,QAAQrf,KAAK2e,EAAQre,UAGlC4J,KAAKwH,MAAM8N,aAAc,GAG3Bjf,EAAMqL,WAAWpB,cAAgB,WAC/BN,KAAKwH,MAAM2N,QAAQrf,KAAK2e,EAAQG,kBAChC5U,KAAKwH,MAAM8N,aAAc,GAG3B,IAAIQ,EAA+B,wrIAC/BC,EAA0B,ujFACxBC,EAA0B,IAAI5P,OAAO,IAAM0P,EAA+B,KAC1EG,EAAqB,IAAI7P,OAAO,IAAM0P,EAA+BC,EAA0B,KACrGD,EAA+BC,EAA0B,KACzwDC,EAAwB,CAAC,IAAK,EAAG,IAAK,EAAG,IAAK,EAAG,IAAK,EAAG,KAAM,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,IAAK,EAAG,IAAK,EAAG,EAAG,EAAG,IAAK,EAAG,IAAK,GAAI,IAAK,EAAG,GAAI,GAAI,GAAI,EAAG,GAAI,EAAG,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,GAAI,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,EAAG,EAAG,IAAK,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,GAAI,GAAI,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,EAAG,IAAK,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,GAAI,GAAI,EAAG,GAAI,GAAI,EAAG,EAAG,GAAI,GAAI,EAAG,EAAG,IAAK,GAAI,IAAK,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,IAAK,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,GAAI,EAAG,GAAI,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,MAAO,EAAG,IAAK,EAAG,GAAI,EAAG,GAAI,EAAG,KAAM,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,MAAO,EAAG,KAAM,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,IAAK,EAAG,KAAM,GAAI,IAAK,GAAI,EAAG,GAAI,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,GAAI,KAAM,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,GAAI,EAAG,IAAK,GAAI,KAAM,EAAG,IAAK,EAAG,EAAG,EAAG,KAAM,EAAG,OAAQ,KAE55B,SAASC,EAAc7P,EAAM7T,GAG3B,IAFA,IAAI8f,EAAM,MAED3X,EAAI,EAAGnB,EAAShH,EAAIgH,OAAQmB,EAAInB,EAAQmB,GAAK,EAAG,CAEvD,IADA2X,GAAO9f,EAAImI,IACD0L,EAAM,OAAO,EAEvB,IADAiM,GAAO9f,EAAImI,EAAI,KACJ0L,EAAM,OAAO,EAG1B,OAAO,EAGT,SAAS8P,EAAkB9P,GACzB,OAAIA,EAAO,GAAoB,KAATA,EAClBA,GAAQ,KACRA,EAAO,GAAoB,KAATA,EAClBA,GAAQ,MAERA,GAAQ,MACHA,GAAQ,KAAQyP,EAAwBM,KAAKC,OAAOC,aAAajQ,IAGnE6P,EAAc7P,EAAM2P,KAE7B,SAASO,EAAiBlQ,GACxB,OAAIA,EAAO,GAAoB,KAATA,EAClBA,EAAO,MACPA,EAAO,MACPA,GAAQ,KACRA,EAAO,GAAoB,KAATA,EAClBA,GAAQ,MAERA,GAAQ,MACHA,GAAQ,KAAQ0P,EAAmBK,KAAKC,OAAOC,aAAajQ,IAG9D6P,EAAc7P,EAAM2P,IAA+BE,EAAc7P,EAAM4P,MAGhF,IAAMO,EAEI,CAAC,aAAc,YAAa,MAAO,UAAW,UAAW,YAAa,SAAU,SAAU,SAF9FA,EAGQ,CAAC,OAAQ,aAEjBC,EAAa,IAAIne,IAJZ,CAAC,QAAS,OAAQ,QAAS,WAAY,WAAY,UAAW,KAAM,OAAQ,UAAW,MAAO,WAAY,KAAM,SAAU,SAAU,QAAS,MAAO,MAAO,QAAS,QAAS,OAAQ,MAAO,OAAQ,QAAS,QAAS,UAAW,SAAU,SAAU,OAAQ,OAAQ,QAAS,KAAM,aAAc,SAAU,OAAQ,WAKzToe,EAAyB,IAAIpe,IAAIke,GACjCG,EAA6B,IAAIre,IAAIke,GAC3C,SAASI,EAAeC,EAAMC,GAC5B,OAAOA,GAAqB,UAATD,GAA6B,SAATA,EAEzC,SAASE,EAAqBF,EAAMC,GAClC,OAAOF,EAAeC,EAAMC,IAAaJ,EAAuB5kB,IAAI+kB,GAEtE,SAASG,EAA6BH,GACpC,OAAOF,EAA2B7kB,IAAI+kB,GAExC,SAASI,EAAyBJ,EAAMC,GACtC,OAAOC,EAAqBF,EAAMC,IAAaE,EAA6BH,GAE9E,SAASK,EAAUL,GACjB,OAAOJ,EAAW3kB,IAAI+kB,GAGxB,IAAMM,EAA4B,kBAKlC,IAOMC,EAAc,GAEdC,GAAkB,IAQlBC,GAAmB,IACnBC,GAAqB,IACrBC,GAA2B,IAC3BC,GAA4B,KAC5BC,GAA6B,KAQ7BC,GAAkB,KAClBC,GAAY,GAeZC,GACJ,WAAYC,GAAO,UACjBhY,KAAKgY,WAAQ,EACbhY,KAAKiY,IAAM,GACXjY,KAAKkY,QAAU,GACflY,KAAKmY,UAAY,GACjBnY,KAAKgY,MAAQA,GAIXI,G,WACJ,WAAYC,EAAOrB,GAAU,UAC3BhX,KAAKsY,WAAa,GAClBtY,KAAKuY,iBAAmB,IAAI/X,IAC5BR,KAAKwY,sBAAwB,IAAIhY,IACjCR,KAAKqY,MAAQA,EACbrY,KAAKgX,SAAWA,E,8CA+BNgB,GACV,OAAO,IAAID,GAAMC,K,4BAGbA,GACJhY,KAAKsY,WAAWxiB,KAAKkK,KAAKyY,YAAYT,M,6BAItChY,KAAKsY,WAAW3e,Q,iDAGSjG,GACzB,SAvGmB,EAuGTA,EAAMskB,QAA2BhY,KAAKgX,UAxG9B,EAwG0CtjB,EAAMskB,S,kCAGxDzc,EAAMmd,EAAalG,GAC7B,IAAI9e,EAAQsM,KAAK2Y,eAEjB,GAjGuB,EAiGnBD,GAhGoB,GAgGgBA,EACtC1Y,KAAK4Y,0BAA0BllB,EAAO6H,EAAMmd,EAAalG,GAjGnC,GAmGlBkG,EACFhlB,EAAMykB,UAAUriB,KAAKyF,GAErB7H,EAAMwkB,QAAQpiB,KAAKyF,GAvGA,EA0GjBmd,GACF1Y,KAAK6Y,mBAAmBnlB,EAAO6H,QAE5B,GA9GY,EA8GRmd,EACT,IAAK,IAAI7d,EAAImF,KAAKsY,WAAW5e,OAAS,EAAGmB,GAAK,IAC5CnH,EAAQsM,KAAKsY,WAAWzd,GACxBmF,KAAK4Y,0BAA0BllB,EAAO6H,EAAMmd,EAAalG,GACzD9e,EAAMukB,IAAIniB,KAAKyF,GACfyE,KAAK6Y,mBAAmBnlB,EAAO6H,KAtHrBud,IAuHNplB,EAAMskB,UALuCnd,GASjDmF,KAAKgX,UApIS,EAoIGtjB,EAAMskB,OACzBhY,KAAKuY,iBAAiBQ,OAAOxd,K,yCAId7H,EAAO6H,GACpByE,KAAKgX,UA1IS,EA0IGtjB,EAAMskB,OACzBhY,KAAKuY,iBAAiBQ,OAAOxd,K,gDAIP7H,EAAO6H,EAAMmd,EAAalG,GAC9CxS,KAAKgZ,oBAAoBtlB,EAAO6H,EAAMmd,IACxC1Y,KAAKqY,MAAM7F,EAAKtJ,EAAciJ,iBAAkB5W,K,0CAIhC7H,EAAO6H,EAAMmd,GAC/B,SA5IoB,EA4IdA,KAzIiB,EA2InBA,EACKhlB,EAAMwkB,QAAQe,QAAQ1d,IAAS,GAAK7H,EAAMykB,UAAUc,QAAQ1d,IAAS,GAAK7H,EAAMukB,IAAIgB,QAAQ1d,IAAS,EA3ItF,GA8IpBmd,EACKhlB,EAAMwkB,QAAQe,QAAQ1d,IAAS,IAAMyE,KAAKkZ,2BAA2BxlB,IAAUA,EAAMukB,IAAIgB,QAAQ1d,IAAS,EAG5G7H,EAAMwkB,QAAQe,QAAQ1d,IAAS,KA7Jf,EA6JsB7H,EAAMskB,OAA8BtkB,EAAMwkB,QAAQ,KAAO3c,KAAUyE,KAAKkZ,2BAA2BxlB,IAAUA,EAAMykB,UAAUc,QAAQ1d,IAAS,K,uCAG5KuB,IACsC,IAAjDkD,KAAKsY,WAAW,GAAGJ,QAAQe,QAAQnc,EAAGvB,QAA6D,IAA7CyE,KAAKsY,WAAW,GAAGL,IAAIgB,QAAQnc,EAAGvB,QAAmE,IAAnDyE,KAAKsY,WAAW,GAAGH,UAAUc,QAAQnc,EAAGvB,OAClJyE,KAAKuY,iBAAiB7lB,IAAIoK,EAAGvB,KAAMuB,EAAGiK,S,qCAKxC,OAAO/G,KAAKsY,WAAWtY,KAAKsY,WAAW5e,OAAS,K,wCAIhD,IAAK,IAAImB,EAAImF,KAAKsY,WAAW5e,OAAS,GAAImB,IAAK,CAC7C,IAAMnH,EAAQsM,KAAKsY,WAAWzd,GAE9B,GAxKYie,IAwKRplB,EAAMskB,MACR,OAAOtkB,K,yCAMX,IAAK,IAAImH,EAAImF,KAAKsY,WAAW5e,OAAS,GAAImB,IAAK,CAC7C,IAAMnH,EAAQsM,KAAKsY,WAAWzd,GAE9B,IAlLYie,IAkLPplB,EAAMskB,OAAqBtkB,EAAMskB,MAAQV,MAzLhC,EAyLkD5jB,EAAMskB,OACpE,OAAOtkB,K,iCA5HX,OA/DmB,EA+DXsM,KAAKmZ,kBAAkBnB,OAA0B,I,iCAIzD,OAhEgB,GAgERhY,KAAKoZ,mBAAmBpB,OAAuB,I,uCAIvD,OAnEuB,GAmEfhY,KAAKoZ,mBAAmBpB,OAA8B,I,8BAI9D,OAAQhY,KAAKoZ,mBAAmBpB,MAAQV,GAAe,I,oCAIvD,OAzEuB,IAyEftX,KAAKoZ,mBAAmBpB,OAA8B,I,yCAI9D,OAnFmB,EAmFXhY,KAAKoZ,mBAAmBpB,OAA0B,I,0CAI1D,OAAOhY,KAAKkZ,2BAA2BlZ,KAAK2Y,oB,KA2G1CU,G,8BACJ,aAAqB,2CAAN3e,EAAM,yBAANA,EAAM,uBACnB,+BAASA,KACJ4e,iBAAmB,GAFL,E,UADCvB,IAQlBwB,G,kIACQvB,GACV,OAAO,IAAIqB,GAAUrB,K,kCAGXzc,EAAMmd,EAAalG,GAC7B,IAAM9e,EAAQsM,KAAK2Y,eAEnB,GAAID,EAAcd,GAIhB,OAHA5X,KAAK4Y,0BAA0BllB,EAAO6H,EAAMmd,EAAalG,GACzDxS,KAAK6Y,mBAAmBnlB,EAAO6H,QAC/B7H,EAAM4lB,iBAAiBxjB,KAAKyF,GAI9B,gDAAqBL,a,0CAGHxH,EAAO6H,EAAMmd,GAC/B,gEAAiCxd,eAE7Bwd,EAAcd,OACRlkB,EAAM4lB,iBAAiBE,SAASje,KAAU7H,EAAMwkB,QAAQsB,SAASje,IAAS7H,EAAMykB,UAAUqB,SAASje,O,uCAM9FuB,IAC+C,IAA1DkD,KAAKsY,WAAW,GAAGgB,iBAAiBL,QAAQnc,EAAGvB,OACjD,oDAAuBuB,O,GA9BEsb,IAoCzBqB,GAAgB,IAAIjhB,IAAI,CAAC,IAAK,MAAO,OAAQ,UAAW,QAAS,UAAW,QAAS,YAAa,QAAS,OAAQ,SAAU,SAAU,SAAU,OAAQ,SAAU,SACnKkhB,GAAazoB,OAAOkY,OAAO,CAC/BwQ,0BAA2B,iFAC3BC,2BAA4B,wKAC5BC,mBAAoB,oCACpBC,oBAAqB,0DACrBC,6BAA8B,sEAC9BC,8BAA+B,+CAC/BC,gCAAiC,sGACjCC,wBAAyB,oGACzBC,6BAA8B,+KAC9BC,wBAAyB,mGACzBC,uCAAwC,uGACxCC,wCAAyC,gFACzCC,uCAAwC,qEACxCC,wCAAyC,iHACzCC,sBAAuB,2HACvBC,+BAAgC,0EAChCC,0CAA2C,8GAC3CC,0BAA2B,2CAC3BC,oCAAqC,wKACrCC,mBAAoB,6EACpBC,uBAAwB,0EACxBC,gBAAiB,+CACjBC,oCAAqC,yFACrCC,wBAAyB,0GACzBC,oBAAqB,kEACrBC,kBAAmB,yDACnBC,uBAAwB,iFACxBC,0BAA2B,2CAC3BC,eAAgB,yCAChBC,4BAA6B,0DAC7BC,6BAA8B,oGAC9BC,0BAA2B,2CAC3BC,qBAAsB,6DACtBC,mBAAoB,qDACpBC,sBAAuB,mHACvBC,kBAAmB,sEACnBC,kCAAmC,sEACnCC,uBAAwB,8BACxBC,6BAA8B,wDAC9BC,mCAAoC,wDACpCC,qBAAsB,kEACtBC,6BAA8B,kDAC9BC,kCAAmC,mEACnCC,gDAAiD,mHACjDC,6BAA8B,yDAC9BC,oCAAqC,mEACrCC,wBAAyB,8BAO3B,SAASC,GAAkB/oB,GACzB,MAA2B,SAApBA,EAAKgpB,YAA6C,WAApBhpB,EAAKgpB,WAG5C,SAASC,GAAqBpV,GAC5B,OAAQA,EAAMW,OAAS9R,EAAMkF,QAAUiM,EAAMW,KAAKlI,UAA4B,SAAhBuH,EAAMpW,MAGtE,IAAMyrB,GAAoB,CACxBC,MAAO,qBACPC,IAAK,qBACL5U,KAAM,cACN6U,UAAW,oBAcb,IAAMC,GAAoB,yBAiyFpBC,GAAW,CACfC,KAAM,IACNC,IAAK,IACLC,KAAM,IACNC,GAAI,IACJC,GAAI,IACJC,KAAM,OACNC,MAAO,OACPC,KAAM,OACNC,MAAO,OACPC,OAAQ,OACRC,IAAK,OACLC,OAAQ,OACRC,KAAM,OACNC,IAAK,OACLC,KAAM,OACNC,KAAM,OACNC,MAAO,OACPC,IAAK,OACLC,IAAK,OACLC,IAAK,OACLC,KAAM,OACNC,IAAK,OACLC,OAAQ,OACRC,KAAM,OACNC,KAAM,OACNC,MAAO,OACPC,MAAO,OACPC,KAAM,OACNC,OAAQ,OACRC,MAAO,OACPC,KAAM,OACNC,KAAM,OACNC,MAAO,OACPC,OAAQ,OACRC,OAAQ,OACRC,OAAQ,OACRC,OAAQ,OACRC,OAAQ,OACRC,OAAQ,OACRC,MAAO,OACPC,OAAQ,OACRC,KAAM,OACNC,MAAO,OACPC,MAAO,OACPC,OAAQ,OACRC,OAAQ,OACRC,OAAQ,OACRC,MAAO,OACPC,KAAM,OACNC,OAAQ,OACRC,OAAQ,OACRC,MAAO,OACPC,KAAM,OACNC,IAAK,OACLC,OAAQ,OACRC,OAAQ,OACRC,OAAQ,OACRC,MAAO,OACPC,OAAQ,OACRC,KAAM,OACNC,MAAO,OACPC,OAAQ,OACRC,OAAQ,OACRC,OAAQ,OACRC,MAAO,OACPC,KAAM,OACNC,OAAQ,OACRC,MAAO,OACPC,MAAO,OACPC,OAAQ,OACRC,OAAQ,OACRC,MAAO,OACPC,OAAQ,OACRC,KAAM,OACNC,MAAO,OACPC,MAAO,OACPC,OAAQ,OACRC,OAAQ,OACRC,OAAQ,OACRC,MAAO,OACPC,KAAM,OACNC,OAAQ,OACRC,OAAQ,OACRC,MAAO,OACPC,KAAM,OACNC,IAAK,OACLC,OAAQ,OACRC,OAAQ,OACRC,OAAQ,OACRC,MAAO,OACPC,OAAQ,OACRC,KAAM,OACNC,OAAQ,OACRC,OAAQ,OACRC,OAAQ,OACRC,OAAQ,OACRC,MAAO,OACPC,KAAM,OACNC,OAAQ,OACRC,MAAO,OACPC,KAAM,OACNC,MAAO,SACPC,MAAO,SACPC,OAAQ,SACRC,OAAQ,SACRC,KAAM,SACNC,KAAM,SACNC,KAAM,SACN9gB,MAAO,SACP+gB,MAAO,SACPC,KAAM,SACNC,MAAO,SACPC,MAAO,SACPC,QAAS,SACTC,KAAM,SACNC,IAAK,SACLC,MAAO,SACPC,KAAM,SACNC,MAAO,SACPC,OAAQ,SACRC,GAAI,SACJC,GAAI,SACJC,GAAI,SACJC,QAAS,SACTC,GAAI,SACJC,IAAK,SACLC,MAAO,SACPC,IAAK,SACLC,QAAS,SACTC,IAAK,SACLC,IAAK,SACLC,IAAK,SACLC,MAAO,SACPC,MAAO,SACPC,KAAM,SACNC,MAAO,SACPC,MAAO,SACPC,QAAS,SACTC,KAAM,SACNC,IAAK,SACLC,MAAO,SACPC,KAAM,SACNC,MAAO,SACPC,OAAQ,SACRC,GAAI,SACJC,GAAI,SACJC,GAAI,SACJC,QAAS,SACTC,GAAI,SACJC,IAAK,SACLC,OAAQ,SACRC,MAAO,SACPC,IAAK,SACLC,QAAS,SACTC,IAAK,SACLC,IAAK,SACLC,IAAK,SACLC,MAAO,SACPC,SAAU,SACVC,MAAO,SACPC,IAAK,SACLC,KAAM,SACNC,KAAM,SACNC,OAAQ,SACRC,KAAM,SACNC,IAAK,SACLC,IAAK,SACLC,IAAK,SACLC,MAAO,SACPC,MAAO,SACPC,MAAO,SACPC,MAAO,SACPC,MAAO,SACPC,MAAO,SACPC,MAAO,SACPC,MAAO,SACPC,OAAQ,SACRC,OAAQ,SACRC,KAAM,SACNC,OAAQ,SACRC,OAAQ,SACRC,MAAO,SACPC,MAAO,SACPC,OAAQ,SACRC,OAAQ,SACRC,MAAO,SACPC,MAAO,SACPC,KAAM,SACNC,MAAO,SACPC,OAAQ,SACRC,KAAM,SACNC,MAAO,SACPC,QAAS,SACTC,KAAM,SACNC,KAAM,SACNC,KAAM,SACNC,KAAM,SACNC,KAAM,SACNC,MAAO,SACPC,KAAM,SACNC,KAAM,SACNC,KAAM,SACNC,KAAM,SACNC,KAAM,SACNC,OAAQ,SACRC,KAAM,SACNC,MAAO,SACPC,MAAO,SACPC,MAAO,SACPC,KAAM,SACNC,MAAO,SACPC,GAAI,SACJC,KAAM,SACNC,IAAK,SACLC,MAAO,SACPC,OAAQ,SACRC,MAAO,SACPC,KAAM,SACNC,MAAO,SACPC,IAAK,SACLC,IAAK,SACLC,GAAI,SACJC,IAAK,SACLC,IAAK,SACLC,IAAK,SACLC,OAAQ,SACRC,IAAK,SACLC,KAAM,SACNC,MAAO,SACPC,GAAI,SACJC,MAAO,SACPC,GAAI,SACJC,GAAI,SACJC,IAAK,SACLC,IAAK,SACLC,KAAM,SACNC,KAAM,SACNC,KAAM,SACNC,MAAO,SACPC,OAAQ,SACRC,KAAM,SACNC,KAAM,SACNC,MAAO,SACPC,MAAO,SACPC,OAAQ,SACRC,OAAQ,SACRC,KAAM,SACNC,KAAM,SACNC,IAAK,SACLC,OAAQ,SACRC,MAAO,SACPC,OAAQ,SACRC,MAAO,UAGHC,GAAa,gBACbC,GAAiB,QACjBC,GAAYh8B,OAAOkY,OAAO,CAC9B+jB,iBAAkB,8DAClBC,0BAA2B,gDAC3BC,yBAA0B,kDAC1BC,6BAA8B,2GAC9BC,oBAAqB,gEACrBC,uBAAwB,4BACxBC,6BAA8B,qGA+BhC,SAASC,GAAWt1B,GAClB,QAAOA,IAAyB,uBAAhBA,EAAOgQ,MAAiD,uBAAhBhQ,EAAOgQ,MAGjE,SAASulB,GAAoBv1B,GAC3B,GAAoB,kBAAhBA,EAAOgQ,KACT,OAAOhQ,EAAOoD,KAGhB,GAAoB,sBAAhBpD,EAAOgQ,KACT,OAAOhQ,EAAOw1B,UAAUpyB,KAAO,IAAMpD,EAAOoD,KAAKA,KAGnD,GAAoB,wBAAhBpD,EAAOgQ,KACT,OAAOulB,GAAoBv1B,EAAOA,QAAU,IAAMu1B,GAAoBv1B,EAAOy1B,UAG/E,MAAM,IAAIC,MAAM,6BAA+B11B,EAAOgQ,MA9CxDsM,EAAQqZ,OAAS,IAAIzZ,EAAW,QAAQ,GACxCI,EAAQsZ,OAAS,IAAI1Z,EAAW,SAAS,GACzCI,EAAQuZ,OAAS,IAAI3Z,EAAW,kBAAkB,GAAM,GACxDhe,EAAM43B,QAAU,IAAIpuB,EAAU,WAC9BxJ,EAAM63B,QAAU,IAAIruB,EAAU,UAAW,CACvCH,YAAY,IAEdrJ,EAAM83B,YAAc,IAAItuB,EAAU,cAAe,CAC/CF,YAAY,IAEdtJ,EAAM+3B,UAAY,IAAIvuB,EAAU,aAEhCxJ,EAAM83B,YAAY7tB,cAAgB,WAChCN,KAAKwH,MAAM2N,QAAQrf,KAAK2e,EAAQuZ,QAChChuB,KAAKwH,MAAM2N,QAAQrf,KAAK2e,EAAQqZ,QAChC9tB,KAAKwH,MAAM8N,aAAc,GAG3Bjf,EAAM+3B,UAAU9tB,cAAgB,SAAUiV,GACxC,IAAMH,EAAMpV,KAAKwH,MAAM2N,QAAQxb,MAE3Byb,IAAQX,EAAQqZ,QAAUvY,IAAalf,EAAMyN,OAASsR,IAAQX,EAAQsZ,QACxE/tB,KAAKwH,MAAM2N,QAAQxb,MACnBqG,KAAKwH,MAAM8N,YAActV,KAAKqV,eAAiBZ,EAAQuZ,QAEvDhuB,KAAKwH,MAAM8N,aAAc,GAwB7B,IA2bM+Y,G,8BACJ,aAAqB,2CAAN3zB,EAAM,yBAANA,EAAM,uBACnB,+BAASA,KACJrE,MAAQ,GACb,EAAKi4B,MAAQ,GACb,EAAKC,WAAa,GAClB,EAAKC,QAAU,GACf,EAAKC,mBAAqB,GANP,E,UADO1W,IAYxB2W,G,kIACQ1W,GACV,OAAO,IAAIqW,GAAgBrW,K,kCAGjBzc,EAAMmd,EAAalG,GAC7B,IAAM9e,EAAQsM,KAAK2Y,eAEnB,GAAID,EAAcf,GAGhB,OAFA3X,KAAK6Y,mBAAmBnlB,EAAO6H,QAC/B7H,EAAM+6B,mBAAmB34B,KAAKyF,GAIhC,gDAAqBL,WAv2HF,EAy2Hfwd,IA12HgB,EA22HZA,IACJ1Y,KAAK4Y,0BAA0BllB,EAAO6H,EAAMmd,EAAalG,GACzDxS,KAAK6Y,mBAAmBnlB,EAAO6H,IAGjC7H,EAAM2C,MAAMP,KAAKyF,IAGfmd,EAAcjB,IAAoB/jB,EAAM46B,MAAMx4B,KAAKyF,GACnDmd,EAAchB,IAA0BhkB,EAAM66B,WAAWz4B,KAAKyF,GAC9Dmd,EAAclB,IAAkB9jB,EAAM86B,QAAQ14B,KAAKyF,K,0CAGrC7H,EAAO6H,EAAMmd,GAC/B,GAAIhlB,EAAM46B,MAAMrV,QAAQ1d,IAAS,EAAG,CAClC,GAAImd,EAAcjB,GAAoB,CACpC,IAAMkX,KAAajW,EAAchB,IAC3BkX,EAAWl7B,EAAM66B,WAAWtV,QAAQ1d,IAAS,EACnD,OAAOozB,IAAYC,EAGrB,OAAO,EAGT,OAAIlW,EAAclB,IAAoB9jB,EAAM86B,QAAQvV,QAAQ1d,IAAS,EAC/D7H,EAAMwkB,QAAQe,QAAQ1d,IAAS,MAp4HjB,EAq4HNmd,MAp4HK,EA04HfA,GAAgChlB,EAAM2C,MAAM4iB,QAAQ1d,IAAS,IAIjE,wDAAoCL,a,uCAGrB4B,IACoC,IAA/CkD,KAAKsY,WAAW,GAAGjiB,MAAM4iB,QAAQnc,EAAGvB,QAA4E,IAA5DyE,KAAKsY,WAAW,GAAGmW,mBAAmBxV,QAAQnc,EAAGvB,OACvG,oDAAuBuB,O,GA1DQsb,IAqE/ByW,G,WACJ,aAAc,UACZ7uB,KAAK8uB,OAAS,G,wCAGV9W,GACJhY,KAAK8uB,OAAOh5B,KAAKkiB,K,6BAIjBhY,KAAK8uB,OAAOn1B,Q,qCAIZ,OAAOqG,KAAK8uB,OAAO9uB,KAAK8uB,OAAOp1B,OAAS,K,+BAIxC,OArBgB,EAqBRsG,KAAK+uB,gBAAgC,I,+BAI7C,OA1BgB,EA0BR/uB,KAAK+uB,gBAAgC,I,gCAI7C,OA5BiB,EA4BT/uB,KAAK+uB,gBAAiC,I,4BAI9C,OA/Ba,EA+BL/uB,KAAK+uB,gBAA6B,M,KAI9C,SAASC,GAAcC,EAASC,GAC9B,OAAQD,EAtCU,EAsCc,IAAMC,EAvCpB,EAuCgD,GAGpE,SAASC,GAAQC,GACf,GAAS,MAALA,EACF,MAAM,IAAIvB,MAAJ,qBAAwBuB,EAAxB,YAGR,OAAOA,EAGT,SAASC,GAAOD,GACd,IAAKA,EACH,MAAM,IAAIvB,MAAM,eAIpB,IAAMyB,GAAWr+B,OAAOkY,OAAO,CAC7BomB,sBAAuB,mDACvBC,uBAAwB,oDACxBC,6BAA8B,8DAC9BC,gCAAiC,oDACjCC,iCAAkC,4DAClCC,kBAAmB,2BACnBC,+BAAgC,uCAChCC,wBAAyB,6BACzBC,mBAAoB,sCACpBC,oBAAqB,uCACrBC,kCAAmC,+DACnCC,0BAA2B,uDAC3BC,+BAAgC,gEAChCC,wBAAyB,qDACzBC,yBAA0B,sDAC1BC,4BAA6B,gDAC7BC,wBAAyB,0DACzBC,iCAAkC,2DAClCC,kCAAmC,6DACnCC,yCAA0C,mFAC1CC,2BAA4B,wDAC5BC,kBAAmB,iFACnBC,0BAA2B,wDAC3BC,+BAAgC,gEAChCC,2BAA4B,oFAC5BC,0BAA2B,mHAC3BC,4BAA6B,wEAC7BC,mBAAoB,+EACpBC,yBAA0B,yCAC1BC,8BAA+B,8CAC/BC,8BAA+B,qDAC/BC,iCAAkC,oEAClCC,kCAAmC,6FAwCrC,SAASC,GAAmBC,GAC1B,MAAoB,YAAbA,GAAuC,WAAbA,GAAsC,cAAbA,EA2rE5Dp7B,EAAMq7B,YAAc,IAAI7xB,EAAU,KAAM,CACtCF,YAAY,IAuPd,SAASsJ,GAAUF,EAASxN,GAC1B,OAAOwN,EAAQ4oB,MAAK,SAAA3oB,GAClB,OAAI4oB,MAAMC,QAAQ7oB,GACTA,EAAO,KAAOzN,EAEdyN,IAAWzN,KAIxB,SAASu2B,GAAgB/oB,EAASxN,EAAMw2B,GACtC,IAAM/oB,EAASD,EAAQ7P,MAAK,SAAA8P,GAC1B,OAAI4oB,MAAMC,QAAQ7oB,GACTA,EAAO,KAAOzN,EAEdyN,IAAWzN,KAItB,OAAIyN,GAAU4oB,MAAMC,QAAQ7oB,GACnBA,EAAO,GAAG+oB,GAGZ,KAET,IAAMC,GAAqB,CAAC,UAAW,QAAS,UAC1CC,GAAgC,CAAC,OAAQ,OA4C/C,IAAMC,GAAe,CACnBC,OAviOY,SAAAt0B,GAAU,yJAInB,IAFDu0B,EAEC,EAFDA,QACApa,EACC,EADDA,MAEIqa,EAAQ,KAEZ,IACEA,EAAQ,IAAIjsB,OAAOgsB,EAASpa,GAC5B,MAAOsa,IAET,IAAM3+B,EAAOqM,KAAKuyB,mBAAmBF,GAKrC,OAJA1+B,EAAK0+B,MAAQ,CACXD,UACApa,SAEKrkB,IAhBa,+CAmBGvC,GACvB,IAAIohC,EAEJ,IACEA,EAASC,OAAOrhC,GAChB,MAAOgO,GACPozB,EAAS,KAGX,IAAM7+B,EAAOqM,KAAKuyB,mBAAmBC,GAErC,OADA7+B,EAAKmN,OAASyV,OAAO5iB,EAAKvC,OAASA,GAC5BuC,IA9Ba,gDAiCIvC,GACxB,IACMuC,EAAOqM,KAAKuyB,mBADF,MAGhB,OADA5+B,EAAKoN,QAAUwV,OAAO5iB,EAAKvC,OAASA,GAC7BuC,IArCa,yCAwCHvC,GACjB,OAAO4O,KAAK0yB,aAAathC,EAAO,aAzCZ,sCA4CNuN,GACd,IAAMC,EAAmBD,EAAUvN,MAC7BuhC,EAAO3yB,KAAK4yB,YAAYj0B,EAAUoI,MAAOpI,EAAU4I,IAAIR,OACvDxV,EAAayO,KAAK4yB,YAAYh0B,EAAiBmI,MAAOnI,EAAiB2I,IAAIR,OAKjF,OAJAxV,EAAWH,MAAQwN,EAAiBi0B,MAAMC,gBAC1CvhC,EAAWwhC,IAAMn0B,EAAiBi0B,MAAME,IACxCJ,EAAKphC,WAAayO,KAAKgzB,aAAazhC,EAAY,UAAWqN,EAAiBoI,IAAKpI,EAAiB2I,IAAIP,KACtG2rB,EAAKh0B,UAAYC,EAAiBi0B,MAAME,IAAIh4B,MAAM,GAAI,GAC/CiF,KAAKgzB,aAAaL,EAAM,sBAAuBh0B,EAAUqI,IAAKrI,EAAU4I,IAAIP,OApD/D,mCAuDTrT,EAAMs7B,GACjB,gDAAmBt7B,EAAMs7B,GACzBt7B,EAAKpC,YAAa,IAzDE,uCA4DLoC,GACH,MAARA,GAAgBqM,KAAKizB,iBAAiBt/B,GACxCqM,KAAKkzB,iBAAiBv/B,EAAKvC,OAE3B,oDAAuBuC,KAhEL,mDAoEO4J,GAC3B,OAAOA,EAAOnM,MAAM8E,SArEA,uCAwELy8B,GACf,IAAIQ,EAEJ,MAAqB,wBAAdR,EAAKxqB,MAA2D,YAAzBwqB,EAAKphC,WAAW4W,MAAuD,kBAA1BwqB,EAAKphC,WAAWH,SAA2E,OAAlD+hC,EAAwBR,EAAKphC,WAAWshC,YAAiB,EAASM,EAAsBC,iBA3ExM,sCA8ENT,GACd,IAAMh0B,EAAY,EAAH,iDAAyBg0B,GAClCvhC,EAAQuhC,EAAKphC,WAAWH,MAE9B,OADA4O,KAAKqzB,SAAS10B,EAAUvN,MAAO,kBAAmBA,GAC3CuN,IAlFa,qCAqFPhL,GAAe,oCAAN+G,EAAM,iCAANA,EAAM,mBAC5B,8DAAqB/G,GAArB,OAA8B+G,IAC9B,IAAM44B,EAAsB3/B,EAAK+J,WAAWN,KAAI,SAAAm2B,GAAC,OAAI,EAAKC,gBAAgBD,MAC1E5/B,EAAKgB,KAAO2+B,EAAoB95B,OAAO7F,EAAKgB,aACrChB,EAAK+J,aAzFQ,sCA4FN+1B,EAAWl2B,EAAQ2xB,EAAaD,EAASj4B,EAAe08B,GACtE1zB,KAAK2zB,YAAYp2B,EAAQ2xB,EAAaD,EAASj4B,EAAe08B,EAAmB,eAAe,GAE5Fn2B,EAAOq2B,iBACTr2B,EAAOnM,MAAMwiC,eAAiBr2B,EAAOq2B,sBAC9Br2B,EAAOq2B,gBAGhBH,EAAU9+B,KAAKmB,KAAKyH,KApGA,oCAuGRs2B,GACZ,OAAQ7zB,KAAKwH,MAAMW,MACjB,KAAK9R,EAAMwK,IACX,KAAKxK,EAAM4K,OACT,OAAOjB,KAAKuyB,mBAAmBvyB,KAAKwH,MAAMpW,OAE5C,KAAKiF,EAAM2K,OACT,OAAOhB,KAAK8zB,yBAAyB9zB,KAAKwH,MAAMpW,OAElD,KAAKiF,EAAMyK,OACT,OAAOd,KAAK+zB,yBAAyB/zB,KAAKwH,MAAMpW,OAElD,KAAKiF,EAAM0K,QACT,OAAOf,KAAKg0B,0BAA0Bh0B,KAAKwH,MAAMpW,OAEnD,KAAKiF,EAAMqP,MACT,OAAO1F,KAAKuyB,mBAAmB,MAEjC,KAAKl8B,EAAMsP,MACT,OAAO3F,KAAKuyB,oBAAmB,GAEjC,KAAKl8B,EAAMuP,OACT,OAAO5F,KAAKuyB,oBAAmB,GAEjC,QACE,wDAA2BsB,MAhIX,8CAoIS,6BAANn5B,EAAM,yBAANA,EAAM,gBAC7B,IAAM/G,GAAI,6EAAkC+G,IAE5C,MAAkB,gBAAd/G,EAAKwU,MAA0BnI,KAAK8xB,gBAAgB,SAAU,iBACzD9xB,KAAKi0B,sCAAsCtgC,GAG7CA,IA3Ia,4DA8IgBA,GACpC,IAAM4H,EAAO,EAAH,kDAA0B5H,GAKpC,cAJAA,EAAOA,GACKmJ,GACZnJ,EAAK4H,KAAOA,EACZ5H,EAAKwU,KAAO,oBACLxU,IApJa,oCAuJRA,GACZ,OAAKqM,KAAK8xB,gBAAgB,SAAU,iBAIf,sBAAdn+B,EAAKwU,KAHV,iDAA2BxU,KAzJT,uCA+JLA,GACf,OAAKqM,KAAK8xB,gBAAgB,SAAU,iBAI7Bn+B,EAAK4H,KAHV,oDAA8B5H,KAjKZ,mCAuKTvC,EAAO+W,EAAM+rB,EAAUzhB,GAClC,IAAM9e,EAAO,EAAH,8CAAsBvC,EAAO+W,EAAM+rB,EAAUzhB,GAGvD,OAFA9e,EAAKo/B,IAAMp/B,EAAKk/B,MAAME,WACfp/B,EAAKk/B,MACLl/B,IA3Ka,wCA8KJA,EAAMwgC,GAAmC,IAAlBC,EAAkB,wDACzD,qDAAwBzgC,EAAMwgC,EAAiBC,GAC/CzgC,EAAKpC,WAAgC,mBAAnBoC,EAAKgB,KAAKwT,OAhLR,kCAmLVxU,EAAMu7B,EAAaD,EAASj4B,EAAeq9B,EAAkBlsB,GAA4B,IAAtBmsB,EAAsB,wDAC/FC,EAAWv0B,KAAKw0B,YAYpB,OAXAD,EAASt9B,KAAOtD,EAAKsD,MACrBs9B,EAAW,EAAH,6CAAqBA,EAAUrF,EAAaD,EAASj4B,EAAeq9B,EAAkBlsB,EAAMmsB,IAC3FnsB,KAAO,4BACTosB,EAASt9B,KAChBtD,EAAKvC,MAAQmjC,EAEA,uBAATpsB,IACFxU,EAAK0I,UAAW,GAGlB8L,EAAO,mBACAnI,KAAKy0B,WAAW9gC,EAAMwU,KAhMT,2CAmMM,6BAANzN,EAAM,yBAANA,EAAM,gBAC1B,IAAMg6B,GAAY,0EAA+Bh6B,IAMjD,OAJIsF,KAAK8xB,gBAAgB,SAAU,mBACjC4C,EAAavsB,KAAO,sBAGfusB,IA1Ma,kDA6Ma,6BAANh6B,EAAM,yBAANA,EAAM,gBACjC,IAAMg6B,GAAY,iFAAsCh6B,IAOxD,OALIsF,KAAK8xB,gBAAgB,SAAU,mBACjC4C,EAAavsB,KAAO,qBACpBusB,EAAar4B,UAAW,GAGnBq4B,IArNa,wCAwNJ/J,EAAMuE,EAAaD,EAAS0F,EAAWC,GACvD,IAAMjhC,EAAO,EAAH,mDAA2Bg3B,EAAMuE,EAAaD,EAAS0F,EAAWC,GAQ5E,OANIjhC,IACFA,EAAKwU,KAAO,WACM,WAAdxU,EAAKsD,OAAmBtD,EAAKsD,KAAO,QACxCtD,EAAKkhC,WAAY,GAGZlhC,IAjOa,0CAoOFg3B,EAAMuJ,EAAUzhB,EAAUkiB,EAAWd,GACvD,IAAMlgC,EAAO,EAAH,qDAA6Bg3B,EAAMuJ,EAAUzhB,EAAUkiB,EAAWd,GAO5E,OALIlgC,IACFA,EAAKsD,KAAO,OACZtD,EAAKwU,KAAO,YAGPxU,IA5Oa,mCA+OTA,GAAqB,IAAfmhC,EAAe,wDAChC,OAAY,MAARnhC,GAAgBqM,KAAKizB,iBAAiBt/B,IACxCqM,KAAK+0B,aAAaphC,EAAKvC,MAAO0jC,GACvBnhC,GAGT,gDAA0BA,EAAMmhC,KArPZ,uDAwPWnK,GAC/B,GAAkB,QAAdA,EAAK1zB,MAAgC,QAAd0zB,EAAK1zB,KAC9B+I,KAAKqY,MAAMsS,EAAKt4B,IAAI0U,MAAOmC,EAAcyF,yBACpC,GAAIgc,EAAKptB,OACdyC,KAAKqY,MAAMsS,EAAKt4B,IAAI0U,MAAOmC,EAAc0F,sBACpC,8BALiClU,EAKjC,iCALiCA,EAKjC,mBACL,gFAAuCiwB,GAAvC,OAAgDjwB,OA9P9B,2CAkQD/G,EAAMqhC,GAUzB,OATA,wDAA2BrhC,EAAMqhC,GAER,WAArBrhC,EAAKgF,OAAOwP,OACdxU,EAAKwU,KAAO,mBACZxU,EAAK0S,OAAS1S,EAAKuH,UAAU,UACtBvH,EAAKuH,iBACLvH,EAAKgF,QAGPhF,IA5Qa,4CA+QAA,GACF,qBAAdA,EAAKwU,MAIT,yDAA4BxU,KApRR,kCAuRVA,GAGV,OAFA,+CAAkBA,GAEVA,EAAKwU,MACX,IAAK,uBACHxU,EAAKshC,SAAW,KAChB,MAEF,IAAK,yBAC4B,IAA3BthC,EAAKuhC,WAAWx7B,QAA4C,6BAA5B/F,EAAKuhC,WAAW,GAAG/sB,OACrDxU,EAAKwU,KAAO,uBACZxU,EAAKshC,SAAWthC,EAAKuhC,WAAW,GAAGD,gBAC5BthC,EAAKuhC,YAMlB,OAAOvhC,IAzSa,qCA4SPwhC,EAAMjB,EAAUzhB,EAAU2iB,EAAS5tB,GAChD,IAAM7T,EAAO,EAAH,gDAAwBwhC,EAAMjB,EAAUzhB,EAAU2iB,EAAS5tB,GAErE,GAAIA,EAAM6tB,qBAKR,GAJkB,6BAAd1hC,EAAKwU,MAAqD,2BAAdxU,EAAKwU,OACnDxU,EAAKwU,KAAOxU,EAAKwU,KAAKmtB,UAAU,IAG9B9tB,EAAM+tB,KAAM,CACd,IAAMC,EAAQx1B,KAAKy1B,gBAAgB9hC,GAEnC,OADA6hC,EAAMjkC,WAAaoC,EACZqM,KAAKy0B,WAAWe,EAAO,wBAET,qBAAd7hC,EAAKwU,MAA6C,mBAAdxU,EAAKwU,OAClDxU,EAAKqhC,UAAW,GAGlB,OAAOrhC,IA7Ta,+CAgUGA,GAKvB,MAJkB,oBAAdA,EAAKwU,OACPxU,EAAOA,EAAKpC,YAGd,4DAAsCoC,KArUlB,sCAwUNA,GACd,MAAqB,oBAAdA,EAAKwU,OAzUQ,uCA4ULxU,GACf,MAAqB,aAAdA,EAAKwU,MAAqC,SAAdxU,EAAKsD,OAAoBtD,EAAK4J,SA7U7C,qCAgVP5J,GACb,OAAOA,EAAK4J,QAAwB,QAAd5J,EAAKsD,MAAgC,QAAdtD,EAAKsD,SAjV9B,GAAkB4G,IAwiOxC63B,IApoGS,SAAA73B,GAAU,4IAKjB,IAHA,IAAIuX,EAAM,GACNugB,EAAa31B,KAAKwH,MAAMgL,MAEnB,CACP,GAAIxS,KAAKwH,MAAMgL,KAAOxS,KAAKtG,OACzB,MAAMsG,KAAKqY,MAAMrY,KAAKwH,MAAMT,MAAOkmB,GAAUM,wBAG/C,IAAMqI,EAAK51B,KAAK+S,MAAM8iB,WAAW71B,KAAKwH,MAAMgL,KAE5C,OAAQojB,GACN,KAAK,GACL,KAAK,IACH,OAAI51B,KAAKwH,MAAMgL,MAAQxS,KAAKwH,MAAMT,MACrB,KAAP6uB,GAAa51B,KAAKwH,MAAM8N,eACxBtV,KAAKwH,MAAMgL,IACNxS,KAAK81B,YAAYz/B,EAAM83B,cAGhC,oDAA8ByH,IAGhCxgB,GAAOpV,KAAK+S,MAAMhY,MAAM46B,EAAY31B,KAAKwH,MAAMgL,KACxCxS,KAAK81B,YAAYz/B,EAAM63B,QAAS9Y,IAEzC,KAAK,GACHA,GAAOpV,KAAK+S,MAAMhY,MAAM46B,EAAY31B,KAAKwH,MAAMgL,KAC/C4C,GAAOpV,KAAK+1B,gBACZJ,EAAa31B,KAAKwH,MAAMgL,IACxB,MAEF,KAAK,GACL,KAAK,IAEL,QACMlM,EAAUsvB,IACZxgB,GAAOpV,KAAK+S,MAAMhY,MAAM46B,EAAY31B,KAAKwH,MAAMgL,KAC/C4C,GAAOpV,KAAKg2B,gBAAe,GAC3BL,EAAa31B,KAAKwH,MAAMgL,OAEtBxS,KAAKwH,MAAMgL,QA1CJ,qCAiDJyjB,GACb,IACI7gB,EADEwgB,EAAK51B,KAAK+S,MAAM8iB,WAAW71B,KAAKwH,MAAMgL,KAa5C,QAXExS,KAAKwH,MAAMgL,IAEF,KAAPojB,GAAuD,KAA1C51B,KAAK+S,MAAM8iB,WAAW71B,KAAKwH,MAAMgL,QAC9CxS,KAAKwH,MAAMgL,IACb4C,EAAM6gB,EAAgB,KAAO,QAE7B7gB,EAAMmB,OAAOC,aAAaof,KAG1B51B,KAAKwH,MAAM0uB,QACbl2B,KAAKwH,MAAM0L,UAAYlT,KAAKwH,MAAMgL,IAC3B4C,IA/DU,oCAkEL+gB,GAIZ,IAHA,IAAI/gB,EAAM,GACNugB,IAAe31B,KAAKwH,MAAMgL,MAErB,CACP,GAAIxS,KAAKwH,MAAMgL,KAAOxS,KAAKtG,OACzB,MAAMsG,KAAKqY,MAAMrY,KAAKwH,MAAMT,MAAOmC,EAAc+I,oBAGnD,IAAM2jB,EAAK51B,KAAK+S,MAAM8iB,WAAW71B,KAAKwH,MAAMgL,KAC5C,GAAIojB,IAAOO,EAAO,MAEP,KAAPP,GACFxgB,GAAOpV,KAAK+S,MAAMhY,MAAM46B,EAAY31B,KAAKwH,MAAMgL,KAC/C4C,GAAOpV,KAAK+1B,gBACZJ,EAAa31B,KAAKwH,MAAMgL,KACflM,EAAUsvB,IACnBxgB,GAAOpV,KAAK+S,MAAMhY,MAAM46B,EAAY31B,KAAKwH,MAAMgL,KAC/C4C,GAAOpV,KAAKg2B,gBAAe,GAC3BL,EAAa31B,KAAKwH,MAAMgL,OAEtBxS,KAAKwH,MAAMgL,IAKjB,OADA4C,GAAOpV,KAAK+S,MAAMhY,MAAM46B,EAAY31B,KAAKwH,MAAMgL,OACxCxS,KAAK81B,YAAYz/B,EAAM4K,OAAQmU,KA5FrB,sCAsGjB,IANA,IAEIghB,EAFAC,EAAM,GACNC,EAAQ,EAERV,EAAK51B,KAAK+S,MAAM/S,KAAKwH,MAAMgL,KACzB0hB,IAAal0B,KAAKwH,MAAMgL,IAEvBxS,KAAKwH,MAAMgL,IAAMxS,KAAKtG,QAAU48B,IAAU,IAAI,CAGnD,GAAW,OAFXV,EAAK51B,KAAK+S,MAAM/S,KAAKwH,MAAMgL,QAEX,CACC,MAAX6jB,EAAI,GACS,MAAXA,EAAI,IACNA,EAAMA,EAAIE,OAAO,GAEbxJ,GAAWzW,KAAK+f,KAClBD,EAAS7f,OAAOigB,cAAcC,SAASJ,EAAK,QAG9CA,EAAMA,EAAIE,OAAO,GAEbvJ,GAAe1W,KAAK+f,KACtBD,EAAS7f,OAAOigB,cAAcC,SAASJ,EAAK,OAIhDD,EAASlZ,GAASmZ,GAGpB,MAGFA,GAAOT,EAGT,OAAKQ,IACHp2B,KAAKwH,MAAMgL,IAAM0hB,EACV,OApIQ,oCA2IjB,IAAI0B,EACE7uB,EAAQ/G,KAAKwH,MAAMgL,IAEzB,GACEojB,EAAK51B,KAAK+S,MAAM8iB,aAAa71B,KAAKwH,MAAMgL,WACjCiE,EAAiBmf,IAAc,KAAPA,GAEjC,OAAO51B,KAAK81B,YAAYz/B,EAAM43B,QAASjuB,KAAK+S,MAAMhY,MAAMgM,EAAO/G,KAAKwH,MAAMgL,QAlJzD,2CAsJjB,IAAM7e,EAAOqM,KAAKw0B,YAWlB,OATIx0B,KAAKiT,MAAM5c,EAAM43B,SACnBt6B,EAAK4H,KAAOyE,KAAKwH,MAAMpW,MACd4O,KAAKwH,MAAMW,KAAKlI,QACzBtM,EAAK4H,KAAOyE,KAAKwH,MAAMW,KAAKlI,QAE5BD,KAAK02B,aAGP12B,KAAK22B,OACE32B,KAAKy0B,WAAW9gC,EAAM,mBAjKZ,+CAqKjB,IAAMugC,EAAWl0B,KAAKwH,MAAMT,MACtB0L,EAAWzS,KAAKwH,MAAMiL,SACtBlX,EAAOyE,KAAK42B,qBAClB,IAAK52B,KAAK62B,IAAIxgC,EAAM4L,OAAQ,OAAO1G,EACnC,IAAM5H,EAAOqM,KAAK4yB,YAAYsB,EAAUzhB,GAGxC,OAFA9e,EAAKg6B,UAAYpyB,EACjB5H,EAAK4H,KAAOyE,KAAK42B,qBACV52B,KAAKy0B,WAAW9gC,EAAM,uBA5KZ,4CAgLjB,IAAMugC,EAAWl0B,KAAKwH,MAAMT,MACtB0L,EAAWzS,KAAKwH,MAAMiL,SACxB9e,EAAOqM,KAAK82B,yBAEhB,GAAkB,sBAAdnjC,EAAKwU,KACP,OAAOxU,EAGT,KAAOqM,KAAK62B,IAAIxgC,EAAM8L,MAAM,CAC1B,IAAM40B,EAAU/2B,KAAK4yB,YAAYsB,EAAUzhB,GAC3CskB,EAAQ5+B,OAASxE,EACjBojC,EAAQnJ,SAAW5tB,KAAK42B,qBACxBjjC,EAAOqM,KAAKy0B,WAAWsC,EAAS,uBAGlC,OAAOpjC,IA/LU,+CAmMjB,IAAIA,EAEJ,OAAQqM,KAAKwH,MAAMW,MACjB,KAAK9R,EAAMmL,OAST,OARA7N,EAAOqM,KAAKw0B,YACZx0B,KAAK22B,OAGwB,wBAF7BhjC,EAAOqM,KAAKg3B,4BAA4BrjC,IAE/BpC,WAAW4W,MAClBnI,KAAKqY,MAAM1kB,EAAKoT,MAAOkmB,GAAUC,kBAG5Bv5B,EAET,KAAK0C,EAAM83B,YACX,KAAK93B,EAAM4K,OACT,OAAOjB,KAAKi3B,gBAEd,QACE,MAAMj3B,KAAKqY,MAAMrY,KAAKwH,MAAMT,MAAOkmB,GAAUK,wBAtNhC,gDA2NjB,IAAM35B,EAAOqM,KAAK4yB,YAAY5yB,KAAKwH,MAAMqL,WAAY7S,KAAKwH,MAAMsL,eAChE,OAAO9S,KAAKgzB,aAAar/B,EAAM,qBAAsBqM,KAAKwH,MAAMT,MAAO/G,KAAKwH,MAAMiL,YA5NjE,0CA+NC9e,GAIlB,OAHAqM,KAAK22B,OACLhjC,EAAKpC,WAAayO,KAAKk3B,kBACvBl3B,KAAKm3B,OAAO9gC,EAAMsL,QACX3B,KAAKy0B,WAAW9gC,EAAM,oBAnOZ,kDAsOSA,GAC1B,GAAIqM,KAAKiT,MAAM5c,EAAMsL,QACnBhO,EAAKpC,WAAayO,KAAKo3B,8BAClB,CACL,IAAM7lC,EAAayO,KAAKk3B,kBACxBvjC,EAAKpC,WAAaA,EAIpB,OADAyO,KAAKm3B,OAAO9gC,EAAMsL,QACX3B,KAAKy0B,WAAW9gC,EAAM,4BA/OZ,0CAmPjB,IAAMA,EAAOqM,KAAKw0B,YAElB,OAAIx0B,KAAK62B,IAAIxgC,EAAMmL,SACjBxB,KAAKm3B,OAAO9gC,EAAMkM,UAClB5O,EAAKqG,SAAWgG,KAAKq3B,0BACrBr3B,KAAKm3B,OAAO9gC,EAAMsL,QACX3B,KAAKy0B,WAAW9gC,EAAM,wBAG/BA,EAAK4H,KAAOyE,KAAK82B,yBACjBnjC,EAAKvC,MAAQ4O,KAAK62B,IAAIxgC,EAAMwM,IAAM7C,KAAKs3B,yBAA2B,KAC3Dt3B,KAAKy0B,WAAW9gC,EAAM,mBA9PZ,+CAiQMugC,EAAUzhB,GACjC,IAAM9e,EAAOqM,KAAK4yB,YAAYsB,EAAUzhB,GAExC,OAAIzS,KAAKiT,MAAM5c,EAAM+3B,YACnBpuB,KAAKm3B,OAAO9gC,EAAM+3B,WACXpuB,KAAKy0B,WAAW9gC,EAAM,wBAG/BA,EAAK4H,KAAOyE,KAAKu3B,sBACVv3B,KAAKw3B,gCAAgC7jC,MA1Q3B,sDA6QaA,GAG9B,IAFA,IAAM8jC,EAAa,IAEXz3B,KAAKiT,MAAM5c,EAAMyN,SAAW9D,KAAKiT,MAAM5c,EAAM+3B,YACnDqJ,EAAW3hC,KAAKkK,KAAK03B,qBAMvB,OAHA/jC,EAAK8jC,WAAaA,EAClB9jC,EAAKgkC,YAAc33B,KAAK62B,IAAIxgC,EAAMyN,OAClC9D,KAAKm3B,OAAO9gC,EAAM+3B,WACXpuB,KAAKy0B,WAAW9gC,EAAM,uBAvRZ,+CA0RMugC,EAAUzhB,GACjC,IAAM9e,EAAOqM,KAAK4yB,YAAYsB,EAAUzhB,GAExC,OAAIzS,KAAKiT,MAAM5c,EAAM+3B,YACnBpuB,KAAKm3B,OAAO9gC,EAAM+3B,WACXpuB,KAAKy0B,WAAW9gC,EAAM,wBAG/BA,EAAK4H,KAAOyE,KAAKu3B,sBACjBv3B,KAAKm3B,OAAO9gC,EAAM+3B,WACXpuB,KAAKy0B,WAAW9gC,EAAM,wBApSZ,wCAuSDugC,EAAUzhB,GAC1B,IAAM9e,EAAOqM,KAAK4yB,YAAYsB,EAAUzhB,GAClCmlB,EAAW,GACXC,EAAiB73B,KAAK83B,yBAAyB5D,EAAUzhB,GAC3DslB,EAAiB,KAErB,IAAKF,EAAeF,YAAa,CAC/BK,EAAU,OACR,OAAQh4B,KAAKwH,MAAMW,MACjB,KAAK9R,EAAM83B,YAKT,GAJA+F,EAAWl0B,KAAKwH,MAAMT,MACtB0L,EAAWzS,KAAKwH,MAAMiL,SACtBzS,KAAK22B,OAED32B,KAAK62B,IAAIxgC,EAAMyN,OAAQ,CACzBi0B,EAAiB/3B,KAAKi4B,yBAAyB/D,EAAUzhB,GACzD,MAAMulB,EAGRJ,EAAS9hC,KAAKkK,KAAKk4B,kBAAkBhE,EAAUzhB,IAC/C,MAEF,KAAKpc,EAAM63B,QACT0J,EAAS9hC,KAAKkK,KAAKi3B,iBACnB,MAEF,KAAK5gC,EAAMmL,OAEP,IAAM7N,EAAOqM,KAAKw0B,YAClBx0B,KAAK22B,OAED32B,KAAKiT,MAAM5c,EAAMkM,UACnBq1B,EAAS9hC,KAAKkK,KAAKm4B,oBAAoBxkC,IAEvCikC,EAAS9hC,KAAKkK,KAAKg3B,4BAA4BrjC,IAGjD,MAGJ,QACE,MAAMqM,KAAK02B,aAIbjJ,GAAWoK,KAAoBpK,GAAWsK,GAC5C/3B,KAAKqY,MAAM0f,EAAehxB,MAAOkmB,GAAUE,4BACjCM,GAAWoK,IAAmBpK,GAAWsK,GACnD/3B,KAAKqY,MAAM0f,EAAehxB,MAAOkmB,GAAUG,yBAA0BM,GAAoBmK,EAAet8B,OAC9FkyB,GAAWoK,IAAoBpK,GAAWsK,IAChDrK,GAAoBqK,EAAex8B,QAAUmyB,GAAoBmK,EAAet8B,OAClFyE,KAAKqY,MAAM0f,EAAehxB,MAAOkmB,GAAUG,yBAA0BM,GAAoBmK,EAAet8B,OAe9G,GAVIkyB,GAAWoK,IACblkC,EAAKykC,gBAAkBP,EACvBlkC,EAAK0kC,gBAAkBN,IAEvBpkC,EAAKkkC,eAAiBA,EACtBlkC,EAAKokC,eAAiBA,GAGxBpkC,EAAKikC,SAAWA,EAEZ53B,KAAKs4B,aAAa,KACpB,MAAMt4B,KAAKqY,MAAMrY,KAAKwH,MAAMT,MAAOkmB,GAAUO,8BAG/C,OAAOC,GAAWoK,GAAkB73B,KAAKy0B,WAAW9gC,EAAM,eAAiBqM,KAAKy0B,WAAW9gC,EAAM,gBA7WhF,wCAiXjB,IAAMugC,EAAWl0B,KAAKwH,MAAMT,MACtB0L,EAAWzS,KAAKwH,MAAMiL,SAE5B,OADAzS,KAAK22B,OACE32B,KAAKk4B,kBAAkBhE,EAAUzhB,KApXvB,oCAuXLohB,GACZ,OAAI7zB,KAAKiT,MAAM5c,EAAM63B,SACZluB,KAAK0yB,aAAa1yB,KAAKwH,MAAMpW,MAAO,WAClC4O,KAAKiT,MAAM5c,EAAM83B,aACnBnuB,KAAKu4B,kBACHv4B,KAAKs4B,aAAa,MAAkD,KAA1Ct4B,KAAK+S,MAAM8iB,WAAW71B,KAAKwH,MAAMgL,MACpExS,KAAK81B,YAAYz/B,EAAM83B,aAChBnuB,KAAKu4B,mBAEZ,iDAA2B1E,KAhYZ,uCAoYFttB,GACf,GAAIvG,KAAKwH,MAAMgxB,eAAgB,OAAO,EAAP,kDAA8BjyB,GAC7D,IAAM4O,EAAUnV,KAAKqV,aAErB,GAAIF,IAAYV,EAAQuZ,OACtB,OAAOhuB,KAAKy4B,eAGd,GAAItjB,IAAYV,EAAQqZ,QAAU3Y,IAAYV,EAAQsZ,OAAQ,CAC5D,GAAI1X,EAAkB9P,GACpB,OAAOvG,KAAK04B,cAGd,GAAa,KAATnyB,EAEF,QADEvG,KAAKwH,MAAMgL,IACNxS,KAAK81B,YAAYz/B,EAAM+3B,WAGhC,IAAc,KAAT7nB,GAAwB,KAATA,IAAgB4O,IAAYV,EAAQqZ,OACtD,OAAO9tB,KAAK24B,cAAcpyB,GAI9B,OAAa,KAATA,GAAevG,KAAKwH,MAAM8N,aAA6D,KAA9CtV,KAAK+S,MAAM8iB,WAAW71B,KAAKwH,MAAMgL,IAAM,MAChFxS,KAAKwH,MAAMgL,IACNxS,KAAK81B,YAAYz/B,EAAM83B,cAGhC,oDAA8B5nB,KAhab,oCAmaLgP,GACZ,GAAIvV,KAAKiT,MAAM5c,EAAMmL,QAAS,CAC5B,IAAM6T,EAAarV,KAAKqV,aAEpBA,IAAeZ,EAAQqZ,OACzB9tB,KAAKwH,MAAM2N,QAAQrf,KAAK2e,EAAQE,iBACvBU,IAAeZ,EAAQuZ,OAChChuB,KAAKwH,MAAM2N,QAAQrf,KAAK2e,EAAQI,eAEhC,iDAAoBU,GAGtBvV,KAAKwH,MAAM8N,aAAc,MACpB,KAAItV,KAAKiT,MAAM5c,EAAMyN,QAAUyR,IAAalf,EAAM83B,YAKvD,wDAA2B5Y,GAJ3BvV,KAAKwH,MAAM2N,QAAQzb,QAAU,EAC7BsG,KAAKwH,MAAM2N,QAAQrf,KAAK2e,EAAQsZ,QAChC/tB,KAAKwH,MAAM8N,aAAc,OAnbV,GAAkBzX,IAqoGrC+6B,KAjuMU,SAAA/6B,GAGV,OAAY,8BACV,aAAqB,2CAANnD,EAAM,yBAANA,EAAM,uBACnB,+BAASA,KACJm+B,gBAAa3lC,EAFC,EADX,oDAOR,OAAOqmB,KAPC,yCAWR,OAAOvZ,KAAK8xB,gBAAgB,OAAQ,QAA8B,SAApB9xB,KAAK64B,aAX3C,yCAeR,QAAS74B,KAAK8xB,gBAAgB,OAAQ,WAf9B,kCAkBE3pB,EAAM2wB,GAOhB,OANI3wB,IAAS9R,EAAM4K,QAAUkH,IAAS9R,EAAM2L,MAAQmG,IAAS9R,EAAMuM,2BACzC1P,IAApB8M,KAAK64B,aACP74B,KAAK64B,WAAa,MAItB,+CAAyB1wB,EAAM2wB,KAzBvB,iCA4BCxxB,GACT,QAAwBpU,IAApB8M,KAAK64B,WAA0B,CACjC,IAAME,EAAU9b,GAAkB7J,KAAK9L,EAAQlW,OAE/C,GAAK2nC,EAAgB,GAAmB,SAAfA,EAAQ,GAC/B/4B,KAAK64B,WAAa,WACb,IAAmB,WAAfE,EAAQ,GAGjB,MAAM,IAAIlL,MAAM,0BAFhB7tB,KAAK64B,WAAa,eAMtB,qDAAwBvxB,KAzChB,+CA4Ce0xB,GACvB,IAAMC,EAAYj5B,KAAKwH,MAAM0xB,OAC7Bl5B,KAAKwH,MAAM0xB,QAAS,EACpBl5B,KAAKm3B,OAAO6B,GAAO3iC,EAAM4L,OACzB,IAAMkG,EAAOnI,KAAKm5B,gBAElB,OADAn5B,KAAKwH,MAAM0xB,OAASD,EACb9wB,IAlDC,2CAsDR,IAAMxU,EAAOqM,KAAKw0B,YACZ4E,EAAYp5B,KAAKwH,MAAMiL,SACvB4mB,EAAYr5B,KAAKwH,MAAMT,MAC7B/G,KAAKm3B,OAAO9gC,EAAMuN,QAClB,IAAM01B,EAAYt5B,KAAKwH,MAAMiL,SAO7B,OANAzS,KAAKu5B,iBAAiB,UAElBH,EAAUzyB,OAAS2yB,EAAU3yB,MAAQyyB,EAAUvyB,SAAWyyB,EAAUzyB,OAAS,GAC/E7G,KAAKqY,MAAMghB,EAAW3f,GAAWwC,oCAG/Blc,KAAK62B,IAAIxgC,EAAMwL,SACjBlO,EAAKvC,MAAQ4O,KAAKk3B,kBAClBl3B,KAAKm3B,OAAO9gC,EAAMyL,QACX9B,KAAKy0B,WAAW9gC,EAAM,sBAEtBqM,KAAKy0B,WAAW9gC,EAAM,uBAtEvB,6DA2ER,IAAMslC,EAAYj5B,KAAKwH,MAAM0xB,OAC7Bl5B,KAAKwH,MAAM0xB,QAAS,EACpBl5B,KAAKm3B,OAAO9gC,EAAM4L,OAClB,IAAIkG,EAAO,KACPqxB,EAAY,KAchB,OAZIx5B,KAAKiT,MAAM5c,EAAMuN,SACnB5D,KAAKwH,MAAM0xB,OAASD,EACpBO,EAAYx5B,KAAKy5B,uBAEjBtxB,EAAOnI,KAAKm5B,gBACZn5B,KAAKwH,MAAM0xB,OAASD,EAEhBj5B,KAAKiT,MAAM5c,EAAMuN,UACnB41B,EAAYx5B,KAAKy5B,uBAId,CAACtxB,EAAMqxB,KA7FN,4CAgGY7lC,GAGpB,OAFAqM,KAAK22B,OACL32B,KAAK05B,sBAAsB/lC,GAAM,GAC1BqM,KAAKy0B,WAAW9gC,EAAM,kBAnGrB,+CAsGeA,GACvBqM,KAAK22B,OACL,IAAM75B,EAAKnJ,EAAKmJ,GAAKkD,KAAK25B,kBACpBC,EAAW55B,KAAKw0B,YAChBqF,EAAgB75B,KAAKw0B,YAEvBx0B,KAAKs4B,aAAa,KACpBsB,EAAShG,eAAiB5zB,KAAK85B,oCAE/BF,EAAShG,eAAiB,KAG5B5zB,KAAKm3B,OAAO9gC,EAAMwL,QAClB,IAAMk4B,EAAM/5B,KAAKg6B,8BACjBJ,EAAS1jC,OAAS6jC,EAAI7jC,OACtB0jC,EAASK,KAAOF,EAAIE,KACpBL,EAAS55B,KAAO+5B,EAAI30B,MACpBpF,KAAKm3B,OAAO9gC,EAAMyL,QAjBW,MAkBW9B,KAAKk6B,uCAlBhB,SAwB7B,OANCN,EAASO,WAlBmB,KAkBPxmC,EAAK6lC,UAlBE,KAmB7BK,EAAcO,eAAiBp6B,KAAKy0B,WAAWmF,EAAU,0BACzD98B,EAAGs9B,eAAiBp6B,KAAKy0B,WAAWoF,EAAe,kBACnD75B,KAAKq6B,iBAAiBv9B,GACtBkD,KAAKs6B,YACLt6B,KAAKtM,MAAM6mC,YAAY5mC,EAAKmJ,GAAGvB,KAhaRqc,KAgaoCjkB,EAAKmJ,GAAGiK,OAC5D/G,KAAKy0B,WAAW9gC,EAAM,qBA9HrB,uCAiIOA,EAAM6mC,GACrB,GAAIx6B,KAAKiT,MAAM5c,EAAMiP,QACnB,OAAOtF,KAAKy6B,sBAAsB9mC,GAC7B,GAAIqM,KAAKiT,MAAM5c,EAAMoO,WAC1B,OAAOzE,KAAK06B,yBAAyB/mC,GAChC,GAAIqM,KAAKiT,MAAM5c,EAAM0O,MAC1B,OAAO/E,KAAK26B,yBAAyBhnC,GAChC,GAAIqM,KAAK46B,cAAc,UAC5B,OAAI56B,KAAKiT,MAAM5c,EAAM8L,KACZnC,KAAK66B,8BAA8BlnC,IAEtC6mC,GACFx6B,KAAKqY,MAAMrY,KAAKwH,MAAMkL,aAAcgH,GAAWyB,qBAG1Cnb,KAAK86B,uBAAuBnnC,IAEhC,GAAIqM,KAAK+6B,aAAa,QAC3B,OAAO/6B,KAAKg7B,0BAA0BrnC,GACjC,GAAIqM,KAAK+6B,aAAa,UAC3B,OAAO/6B,KAAKi7B,2BAA2BtnC,GAClC,GAAIqM,KAAK+6B,aAAa,aAC3B,OAAO/6B,KAAKk7B,0BAA0BvnC,GACjC,GAAIqM,KAAKiT,MAAM5c,EAAMmP,SAC1B,OAAOxF,KAAKm7B,kCAAkCxnC,EAAM6mC,GAEpD,MAAMx6B,KAAK02B,eA3JL,+CA+Je/iC,GAKvB,OAJAqM,KAAK22B,OACLhjC,EAAKmJ,GAAKkD,KAAKo7B,oCAAmC,GAClDp7B,KAAKtM,MAAM6mC,YAAY5mC,EAAKmJ,GAAGvB,KA/cpB8/B,EA+coC1nC,EAAKmJ,GAAGiK,OACvD/G,KAAKs6B,YACEt6B,KAAKy0B,WAAW9gC,EAAM,qBApKrB,6CAuKaA,GAAM,WAC3BqM,KAAKtM,MAAM4nC,MA7eG,GA+eVt7B,KAAKiT,MAAM5c,EAAM4K,QACnBtN,EAAKmJ,GAAKkD,KAAKi3B,gBAEftjC,EAAKmJ,GAAKkD,KAAK25B,kBAGjB,IAAM4B,EAAW5nC,EAAKgB,KAAOqL,KAAKw0B,YAC5B7/B,EAAO4mC,EAAS5mC,KAAO,GAG7B,IAFAqL,KAAKm3B,OAAO9gC,EAAMmL,SAEVxB,KAAKiT,MAAM5c,EAAMsL,SAAS,CAChC,IAAI45B,EAAWv7B,KAAKw0B,YAEhBx0B,KAAKiT,MAAM5c,EAAMoP,UACnBzF,KAAK22B,OAEA32B,KAAK+6B,aAAa,SAAY/6B,KAAKiT,MAAM5c,EAAM0P,UAClD/F,KAAKqY,MAAMrY,KAAKwH,MAAMkL,aAAcgH,GAAWuB,qCAGjDjb,KAAKw7B,YAAYD,KAEjBv7B,KAAKu5B,iBAAiB,UAAW7f,GAAW8C,qCAC5C+e,EAAWv7B,KAAKy7B,iBAAiBF,GAAU,IAG7C5mC,EAAKmB,KAAKylC,GAGZv7B,KAAKtM,MAAMgoC,OACX17B,KAAKm3B,OAAO9gC,EAAMsL,QAClB3B,KAAKy0B,WAAW8G,EAAU,kBAC1B,IAAItkC,EAAO,KACP0kC,GAAkB,EAsBtB,OArBAhnC,EAAKinC,SAAQ,SAAAC,IA9OnB,SAAwBA,GACtB,MAA4B,gCAArBA,EAAY1zB,MAA+D,6BAArB0zB,EAAY1zB,QAAyC0zB,EAAYC,aAAgD,cAAjCD,EAAYC,YAAY3zB,MAAyD,yBAAjC0zB,EAAYC,YAAY3zB,MA8O3M4zB,CAAeF,GAMa,yBAArBA,EAAY1zB,OACjBwzB,GACF,EAAKtjB,MAAMwjB,EAAY90B,MAAO2S,GAAWM,+BAG9B,OAAT/iB,GACF,EAAKohB,MAAMwjB,EAAY90B,MAAO2S,GAAWE,4BAG3C3iB,EAAO,WACP0kC,GAAkB,IAfL,aAAT1kC,GACF,EAAKohB,MAAMwjB,EAAY90B,MAAO2S,GAAWE,4BAG3C3iB,EAAO,SAcXtD,EAAKsD,KAAOA,GAAQ,WACb+I,KAAKy0B,WAAW9gC,EAAM,mBAjOrB,wDAoOwBA,EAAM6mC,GAGtC,GAFAx6B,KAAKm3B,OAAO9gC,EAAMmP,SAEdxF,KAAK62B,IAAIxgC,EAAMtD,UASjB,OARIiN,KAAKiT,MAAM5c,EAAMoO,YAAczE,KAAKiT,MAAM5c,EAAMiP,QAClD3R,EAAKmoC,YAAc97B,KAAKy7B,iBAAiBz7B,KAAKw0B,cAE9C7gC,EAAKmoC,YAAc97B,KAAKm5B,gBACxBn5B,KAAKs6B,aAGP3mC,EAAKtC,SAAU,EACR2O,KAAKy0B,WAAW9gC,EAAM,4BAE7B,GAAIqM,KAAKiT,MAAM5c,EAAM2O,SAAWhF,KAAKg8B,UAAYh8B,KAAK+6B,aAAa,SAAW/6B,KAAK+6B,aAAa,gBAAkBP,EAAc,CAC9H,IAAM16B,EAAQE,KAAKwH,MAAMpW,MACnB6qC,EAAapf,GAAkB/c,GACrC,MAAME,KAAKqY,MAAMrY,KAAKwH,MAAMT,MAAO2S,GAAW6C,6BAA8Bzc,EAAOm8B,GAGrF,GAAIj8B,KAAKiT,MAAM5c,EAAM0O,OAAS/E,KAAKiT,MAAM5c,EAAMoO,YAAczE,KAAKiT,MAAM5c,EAAMiP,SAAWtF,KAAK+6B,aAAa,UAGvG,OAFApnC,EAAKmoC,YAAc97B,KAAKy7B,iBAAiBz7B,KAAKw0B,aAC9C7gC,EAAKtC,SAAU,EACR2O,KAAKy0B,WAAW9gC,EAAM,4BACxB,GAAIqM,KAAKiT,MAAM5c,EAAMwN,OAAS7D,KAAKiT,MAAM5c,EAAMmL,SAAWxB,KAAK+6B,aAAa,cAAgB/6B,KAAK+6B,aAAa,SAAW/6B,KAAK+6B,aAAa,UAUhJ,MAPkB,4BAFlBpnC,EAAOqM,KAAKk8B,YAAYvoC,IAEfwU,OACPxU,EAAKwU,KAAO,oBACZxU,EAAKtC,SAAU,SACRsC,EAAKwoC,YAGdxoC,EAAKwU,KAAO,UAAYxU,EAAKwU,KACtBxU,EAIb,MAAMqM,KAAK02B,eA1QH,oDA6QoB/iC,GAK5B,OAJAqM,KAAK22B,OACL32B,KAAKu5B,iBAAiB,WACtB5lC,EAAKymC,eAAiBp6B,KAAKo8B,0BAC3Bp8B,KAAKs6B,YACEt6B,KAAKy0B,WAAW9gC,EAAM,0BAlRrB,gDAqRgBA,GAIxB,OAHAqM,KAAK22B,OACL32B,KAAKq8B,mBAAmB1oC,GACxBA,EAAKwU,KAAO,mBACLxU,IAzRC,iDA4RiBA,GAIzB,OAHAqM,KAAK22B,OACL32B,KAAKs8B,oBAAoB3oC,GAAM,GAC/BA,EAAKwU,KAAO,oBACLxU,IAhSC,gDAmSgBA,GAGxB,OAFAqM,KAAK22B,OACL32B,KAAK05B,sBAAsB/lC,GACpBqM,KAAKy0B,WAAW9gC,EAAM,sBAtSrB,4CAySYA,GAAuB,IAAjB4oC,EAAiB,wDAc3C,GAbA5oC,EAAKmJ,GAAKkD,KAAKw8B,+BAA+BD,GAAS,GACvDv8B,KAAKtM,MAAM6mC,YAAY5mC,EAAKmJ,GAAGvB,KAAMghC,EAvlBrBlB,GAFDA,EAylB8D1nC,EAAKmJ,GAAGiK,OAEjF/G,KAAKs4B,aAAa,KACpB3kC,EAAKigC,eAAiB5zB,KAAK85B,oCAE3BnmC,EAAKigC,eAAiB,KAGxBjgC,EAAK8oC,QAAU,GACf9oC,EAAK+oC,WAAa,GAClB/oC,EAAKgpC,OAAS,GAEV38B,KAAK62B,IAAIxgC,EAAMkP,UACjB,GACE5R,EAAK8oC,QAAQ3mC,KAAKkK,KAAK48B,oCACfL,GAAWv8B,KAAK62B,IAAIxgC,EAAM0L,QAGtC,GAAI/B,KAAK+6B,aAAa,UAAW,CAC/B/6B,KAAK22B,OAEL,GACEhjC,EAAKgpC,OAAO7mC,KAAKkK,KAAK48B,mCACf58B,KAAK62B,IAAIxgC,EAAM0L,QAG1B,GAAI/B,KAAK+6B,aAAa,cAAe,CACnC/6B,KAAK22B,OAEL,GACEhjC,EAAK+oC,WAAW5mC,KAAKkK,KAAK48B,mCACnB58B,KAAK62B,IAAIxgC,EAAM0L,QAG1BpO,EAAKgB,KAAOqL,KAAK68B,oBAAoB,CACnCC,YAAaP,EACbQ,YAAY,EACZC,aAAa,EACbC,WAAYV,EACZW,cAAc,MAlVR,kDAuVR,IAAMvpC,EAAOqM,KAAKw0B,YASlB,OARA7gC,EAAKmJ,GAAKkD,KAAKm9B,mCAEXn9B,KAAKs4B,aAAa,KACpB3kC,EAAKigC,eAAiB5zB,KAAKo9B,sCAE3BzpC,EAAKigC,eAAiB,KAGjB5zB,KAAKy0B,WAAW9gC,EAAM,sBAhWrB,yCAmWSA,GAEjB,OADAqM,KAAK05B,sBAAsB/lC,GACpBqM,KAAKy0B,WAAW9gC,EAAM,0BArWrB,yCAwWSojB,GACJ,MAATA,GACF/W,KAAKqY,MAAMrY,KAAKwH,MAAMT,MAAO2S,GAAWuC,gCA1WlC,wCA8WQlF,EAAMtE,EAAUqpB,GAC3BriB,GAAcznB,IAAI+kB,IACvB/W,KAAKqY,MAAM5F,EAAUqpB,EAAcpiB,GAAWG,mBAAqBH,GAAWsC,uBAAwBjF,KAhX9F,oDAmXoBsmB,EAASvB,GAErC,OADA97B,KAAKs9B,kBAAkBt9B,KAAKwH,MAAMpW,MAAO4O,KAAKwH,MAAMT,MAAO+0B,GACpD97B,KAAK25B,gBAAgB0D,KArXpB,yCAwXS1pC,GAYjB,OAXAA,EAAKmJ,GAAKkD,KAAKw8B,+BAA8B,GAAO,GACpDx8B,KAAKtM,MAAM6mC,YAAY5mC,EAAKmJ,GAAGvB,KAxqBhB8/B,EAwqBoC1nC,EAAKmJ,GAAGiK,OAEvD/G,KAAKs4B,aAAa,KACpB3kC,EAAKigC,eAAiB5zB,KAAK85B,oCAE3BnmC,EAAKigC,eAAiB,KAGxBjgC,EAAK4pC,MAAQv9B,KAAKw9B,yBAAyBnnC,EAAMwM,IACjD7C,KAAKs6B,YACEt6B,KAAKy0B,WAAW9gC,EAAM,eApYrB,0CAuYUA,EAAM8pC,GAwBxB,OAvBAz9B,KAAKu5B,iBAAiB,QACtB5lC,EAAKmJ,GAAKkD,KAAKw8B,+BAA8B,GAAM,GACnDx8B,KAAKtM,MAAM6mC,YAAY5mC,EAAKmJ,GAAGvB,KAxrBhB8/B,EAwrBoC1nC,EAAKmJ,GAAGiK,OAEvD/G,KAAKs4B,aAAa,KACpB3kC,EAAKigC,eAAiB5zB,KAAK85B,oCAE3BnmC,EAAKigC,eAAiB,KAGxBjgC,EAAK+pC,UAAY,KAEb19B,KAAKiT,MAAM5c,EAAM4L,SACnBtO,EAAK+pC,UAAY19B,KAAKw9B,yBAAyBnnC,EAAM4L,QAGvDtO,EAAKgqC,SAAW,KAEXF,IACH9pC,EAAKgqC,SAAW39B,KAAKw9B,yBAAyBnnC,EAAMwM,KAGtD7C,KAAKs6B,YACEt6B,KAAKy0B,WAAW9gC,EAAM,gBA/ZrB,+CAkaqC,IAAxBiqC,EAAwB,wDACvCC,EAAY79B,KAAKwH,MAAMT,MACvBpT,EAAOqM,KAAKw0B,YACZsJ,EAAW99B,KAAK+9B,oBAChBC,EAAQh+B,KAAKo7B,qCAcnB,OAbAznC,EAAK4H,KAAOyiC,EAAMziC,KAClB5H,EAAKmqC,SAAWA,EAChBnqC,EAAKsqC,MAAQD,EAAM5D,eAEfp6B,KAAKiT,MAAM5c,EAAMwM,KACnB7C,KAAK62B,IAAIxgC,EAAMwM,IACflP,EAAKtC,QAAU2O,KAAKm5B,iBAEhByE,GACF59B,KAAKqY,MAAMwlB,EAAWnkB,GAAWwB,yBAI9Blb,KAAKy0B,WAAW9gC,EAAM,mBApbrB,0DAwbR,IAAMslC,EAAYj5B,KAAKwH,MAAM0xB,OACvBvlC,EAAOqM,KAAKw0B,YAClB7gC,EAAKuC,OAAS,GACd8J,KAAKwH,MAAM0xB,QAAS,EAEhBl5B,KAAKs4B,aAAa,MAAQt4B,KAAKiT,MAAM5c,EAAM83B,aAC7CnuB,KAAK22B,OAEL32B,KAAK02B,aAGP,IAAIwH,GAAkB,EAEtB,EAAG,CACD,IAAMC,EAAgBn+B,KAAKo+B,uBAAuBF,GAClDvqC,EAAKuC,OAAOJ,KAAKqoC,GAEbA,EAAc9sC,UAChB6sC,GAAkB,GAGfl+B,KAAKs4B,aAAa,MACrBt4B,KAAKm3B,OAAO9gC,EAAM0L,cAEZ/B,KAAKs4B,aAAa,MAI5B,OAFAt4B,KAAKq+B,iBAAiB,KACtBr+B,KAAKwH,MAAM0xB,OAASD,EACbj5B,KAAKy0B,WAAW9gC,EAAM,8BApdrB,4DAwdR,IAAMA,EAAOqM,KAAKw0B,YACZyE,EAAYj5B,KAAKwH,MAAM0xB,OAC7BvlC,EAAKuC,OAAS,GACd8J,KAAKwH,MAAM0xB,QAAS,EACpBl5B,KAAKq+B,iBAAiB,KACtB,IAAMC,EAAwBt+B,KAAKwH,MAAM+2B,mBAGzC,IAFAv+B,KAAKwH,MAAM+2B,oBAAqB,GAExBv+B,KAAKs4B,aAAa,MACxB3kC,EAAKuC,OAAOJ,KAAKkK,KAAKm5B,iBAEjBn5B,KAAKs4B,aAAa,MACrBt4B,KAAKm3B,OAAO9gC,EAAM0L,OAOtB,OAHA/B,KAAKwH,MAAM+2B,mBAAqBD,EAChCt+B,KAAKq+B,iBAAiB,KACtBr+B,KAAKwH,MAAM0xB,OAASD,EACbj5B,KAAKy0B,WAAW9gC,EAAM,gCA3erB,qEA+eR,IAAMA,EAAOqM,KAAKw0B,YACZyE,EAAYj5B,KAAKwH,MAAM0xB,OAK7B,IAJAvlC,EAAKuC,OAAS,GACd8J,KAAKwH,MAAM0xB,QAAS,EACpBl5B,KAAKq+B,iBAAiB,MAEdr+B,KAAKs4B,aAAa,MACxB3kC,EAAKuC,OAAOJ,KAAKkK,KAAKw+B,wCAEjBx+B,KAAKs4B,aAAa,MACrBt4B,KAAKm3B,OAAO9gC,EAAM0L,OAMtB,OAFA/B,KAAKq+B,iBAAiB,KACtBr+B,KAAKwH,MAAM0xB,OAASD,EACbj5B,KAAKy0B,WAAW9gC,EAAM,gCA/frB,+CAmgBR,IAAMA,EAAOqM,KAAKw0B,YAIlB,GAHAx0B,KAAKu5B,iBAAiB,aACtB5lC,EAAK8oC,QAAU,GAEXz8B,KAAK62B,IAAIxgC,EAAMkP,UACjB,GACE5R,EAAK8oC,QAAQ3mC,KAAKkK,KAAK48B,mCAChB58B,KAAK62B,IAAIxgC,EAAM0L,QAU1B,OAPApO,EAAKgB,KAAOqL,KAAK68B,oBAAoB,CACnCC,aAAa,EACbC,YAAY,EACZC,aAAa,EACbC,YAAY,EACZC,cAAc,IAETl9B,KAAKy0B,WAAW9gC,EAAM,6BAphBrB,mDAwhBR,OAAOqM,KAAKiT,MAAM5c,EAAMwK,MAAQb,KAAKiT,MAAM5c,EAAM4K,QAAUjB,KAAKi3B,gBAAkBj3B,KAAK25B,iBAAgB,KAxhB/F,iDA2hBiBhmC,EAAM8qC,EAAUX,GAczC,OAbAnqC,EAAKkI,OAAS4iC,EAEVz+B,KAAK0+B,YAAYv2B,OAAS9R,EAAM4L,OAClCtO,EAAKmJ,GAAKkD,KAAK2+B,6BACfhrC,EAAKtB,IAAM2N,KAAKw9B,6BAEhB7pC,EAAKmJ,GAAK,KACVnJ,EAAKtB,IAAM2N,KAAKm5B,iBAGlBn5B,KAAKm3B,OAAO9gC,EAAMiL,UAClB3N,EAAKvC,MAAQ4O,KAAKw9B,2BAClB7pC,EAAKmqC,SAAWA,EACT99B,KAAKy0B,WAAW9gC,EAAM,uBAziBrB,sDA4iBsBA,EAAM8qC,GAoBpC,OAnBA9qC,EAAKkI,OAAS4iC,EACd9qC,EAAKmJ,GAAKkD,KAAK2+B,6BACf3+B,KAAKm3B,OAAO9gC,EAAMiL,UAClBtB,KAAKm3B,OAAO9gC,EAAMiL,UAEdtB,KAAKs4B,aAAa,MAAQt4B,KAAKiT,MAAM5c,EAAMwL,SAC7ClO,EAAK4J,QAAS,EACd5J,EAAKqhC,UAAW,EAChBrhC,EAAKvC,MAAQ4O,KAAK4+B,6BAA6B5+B,KAAK4yB,YAAYj/B,EAAKoT,MAAOpT,EAAK4T,IAAIR,UAErFpT,EAAK4J,QAAS,EAEVyC,KAAK62B,IAAIxgC,EAAM+L,YACjBzO,EAAKqhC,UAAW,GAGlBrhC,EAAKvC,MAAQ4O,KAAKw9B,4BAGbx9B,KAAKy0B,WAAW9gC,EAAM,4BAhkBrB,mDAmkBmBA,GAqB3B,IApBAA,EAAKuC,OAAS,GACdvC,EAAKsmC,KAAO,KACZtmC,EAAKigC,eAAiB,KACtBjgC,EAAKqM,KAAO,KAERA,KAAKs4B,aAAa,OACpB3kC,EAAKigC,eAAiB5zB,KAAK85B,qCAG7B95B,KAAKm3B,OAAO9gC,EAAMwL,QAEd7B,KAAKiT,MAAM5c,EAAM+O,SACnBzR,EAAKqM,KAAOA,KAAK6+B,4BAA2B,GAC5ClrC,EAAKqM,KAAKzE,KAAO,KAEZyE,KAAKiT,MAAM5c,EAAMyL,SACpB9B,KAAKm3B,OAAO9gC,EAAM0L,SAId/B,KAAKiT,MAAM5c,EAAMyL,UAAY9B,KAAKiT,MAAM5c,EAAMkM,WACpD5O,EAAKuC,OAAOJ,KAAKkK,KAAK6+B,4BAA2B,IAE5C7+B,KAAKiT,MAAM5c,EAAMyL,SACpB9B,KAAKm3B,OAAO9gC,EAAM0L,OAUtB,OANI/B,KAAK62B,IAAIxgC,EAAMkM,YACjB5O,EAAKsmC,KAAOj6B,KAAK6+B,4BAA2B,IAG9C7+B,KAAKm3B,OAAO9gC,EAAMyL,QAClBnO,EAAKwmC,WAAan6B,KAAKw9B,2BAChBx9B,KAAKy0B,WAAW9gC,EAAM,4BAtmBrB,sDAymBsBA,EAAM8qC,GACpC,IAAMK,EAAY9+B,KAAKw0B,YAGvB,OAFA7gC,EAAKkI,OAAS4iC,EACd9qC,EAAKvC,MAAQ4O,KAAK4+B,6BAA6BE,GACxC9+B,KAAKy0B,WAAW9gC,EAAM,4BA7mBrB,6CAsnBP,IALDmpC,EAKC,EALDA,YACAC,EAIC,EAJDA,WACAC,EAGC,EAHDA,YACAC,EAEC,EAFDA,WACAC,EACC,EADDA,aAEMjE,EAAYj5B,KAAKwH,MAAM0xB,OAC7Bl5B,KAAKwH,MAAM0xB,QAAS,EACpB,IAKI6F,EACAC,EANEnB,EAAY79B,KAAKw0B,YACvBqJ,EAAUoB,eAAiB,GAC3BpB,EAAUp1B,WAAa,GACvBo1B,EAAUqB,SAAW,GACrBrB,EAAUsB,cAAgB,GAG1B,IAAIC,GAAU,EAcd,IAZIrC,GAAc/8B,KAAKiT,MAAM5c,EAAMoL,YACjCzB,KAAKm3B,OAAO9gC,EAAMoL,WAClBs9B,EAAW1oC,EAAMuL,UACjBo9B,GAAQ,IAERh/B,KAAKm3B,OAAO9gC,EAAMmL,QAClBu9B,EAAW1oC,EAAMsL,OACjBq9B,GAAQ,GAGVnB,EAAUmB,MAAQA,GAEVh/B,KAAKiT,MAAM8rB,IAAW,CAC5B,IAAIN,GAAW,EACXY,EAAa,KACbC,EAAe,KACb3rC,EAAOqM,KAAKw0B,YAElB,GAAIyI,GAAcj9B,KAAK+6B,aAAa,SAAU,CAC5C,IAAM2D,EAAY1+B,KAAK0+B,YAEnBA,EAAUv2B,OAAS9R,EAAM4L,OAASy8B,EAAUv2B,OAAS9R,EAAM+L,WAC7DpC,KAAK22B,OACL0I,EAAar/B,KAAKwH,MAAMT,MACxB+1B,GAAc,GAIlB,GAAIA,GAAe98B,KAAK+6B,aAAa,UAAW,CAC9C,IAAM2D,EAAY1+B,KAAK0+B,YAEnBA,EAAUv2B,OAAS9R,EAAM4L,OAASy8B,EAAUv2B,OAAS9R,EAAM+L,WAC7DpC,KAAK22B,OACL8H,GAAW,GAIf,IAAMX,EAAW99B,KAAK+9B,oBAEtB,GAAI/9B,KAAK62B,IAAIxgC,EAAM8K,UACC,MAAdk+B,GACFr/B,KAAK02B,WAAW2I,GAGdr/B,KAAK62B,IAAIxgC,EAAM8K,WACb28B,GACF99B,KAAK02B,WAAWoH,EAAS/2B,OAG3B82B,EAAUsB,cAAcrpC,KAAKkK,KAAKu/B,gCAAgC5rC,EAAM8qC,KAExEZ,EAAUqB,SAASppC,KAAKkK,KAAKw/B,2BAA2B7rC,EAAM8qC,EAAUX,SAErE,GAAI99B,KAAKiT,MAAM5c,EAAMwL,SAAW7B,KAAKs4B,aAAa,KACrC,MAAd+G,GACFr/B,KAAK02B,WAAW2I,GAGdvB,GACF99B,KAAK02B,WAAWoH,EAAS/2B,OAG3B82B,EAAUoB,eAAenpC,KAAKkK,KAAKy/B,gCAAgC9rC,EAAM8qC,QACpE,CACL,IAAIxnC,EAAO,OAEX,GAAI+I,KAAK+6B,aAAa,QAAU/6B,KAAK+6B,aAAa,OAAQ,CACxD,IAAM2D,EAAY1+B,KAAK0+B,YAEnBA,EAAUv2B,OAAS9R,EAAMkF,MAAQmjC,EAAUv2B,OAAS9R,EAAM4K,QAAUy9B,EAAUv2B,OAAS9R,EAAMwK,MAC/F5J,EAAO+I,KAAKwH,MAAMpW,MAClB4O,KAAK22B,QAIT,IAAM+I,EAAgB1/B,KAAK2/B,4BAA4BhsC,EAAM8qC,EAAUY,EAAYvB,EAAU7mC,EAAM+lC,EAA6B,MAAhBE,EAAuBA,GAAgB8B,GAEjI,OAAlBU,GACFN,GAAU,EACVE,EAAet/B,KAAKwH,MAAMkL,cAE1BmrB,EAAUp1B,WAAW3S,KAAK4pC,GAI9B1/B,KAAK4/B,2BAEDN,GAAiBt/B,KAAKiT,MAAM5c,EAAMsL,SAAY3B,KAAKiT,MAAM5c,EAAMuL,YACjE5B,KAAKqY,MAAMinB,EAAc5lB,GAAWqC,mCAIxC/b,KAAKm3B,OAAO4H,GAER/B,IACFa,EAAUuB,QAAUA,GAGtB,IAAMhqB,EAAMpV,KAAKy0B,WAAWoJ,EAAW,wBAEvC,OADA79B,KAAKwH,MAAM0xB,OAASD,EACb7jB,IAtuBC,kDAyuBkBzhB,EAAM8qC,EAAUY,EAAYvB,EAAU7mC,EAAM+lC,EAAaE,GACnF,GAAIl9B,KAAK62B,IAAIxgC,EAAMkM,UAGjB,OAFuBvC,KAAKiT,MAAM5c,EAAM0L,QAAU/B,KAAKiT,MAAM5c,EAAM2L,OAAShC,KAAKiT,MAAM5c,EAAMsL,SAAW3B,KAAKiT,MAAM5c,EAAMuL,YAGlHo7B,EAEOE,GACVl9B,KAAKqY,MAAMrY,KAAKwH,MAAMkL,aAAcgH,GAAWoB,oBAF/C9a,KAAKqY,MAAMrY,KAAKwH,MAAMkL,aAAcgH,GAAWqB,wBAK7C+iB,GACF99B,KAAKqY,MAAMylB,EAAS/2B,MAAO2S,GAAWsB,iBAGjC,OAGJgiB,GACHh9B,KAAKqY,MAAMrY,KAAKwH,MAAMkL,aAAcgH,GAAWyC,sBAG/B,MAAdkjB,GACFr/B,KAAK02B,WAAW2I,GAGdvB,GACF99B,KAAKqY,MAAMylB,EAAS/2B,MAAO2S,GAAW6B,gBAGxC5nB,EAAKqG,SAAWgG,KAAKm5B,gBACdn5B,KAAKy0B,WAAW9gC,EAAM,6BAE7BA,EAAKtB,IAAM2N,KAAK2+B,6BAChBhrC,EAAKkI,OAAS4iC,EACd9qC,EAAKksC,MAAsB,MAAdR,EACb1rC,EAAKsD,KAAOA,EACZ,IAAI+9B,GAAW,EAmCf,OAjCIh1B,KAAKs4B,aAAa,MAAQt4B,KAAKiT,MAAM5c,EAAMwL,SAC7ClO,EAAK4J,QAAS,EAEI,MAAd8hC,GACFr/B,KAAK02B,WAAW2I,GAGdvB,GACF99B,KAAK02B,WAAWoH,EAAS/2B,OAG3BpT,EAAKvC,MAAQ4O,KAAK4+B,6BAA6B5+B,KAAK4yB,YAAYj/B,EAAKoT,MAAOpT,EAAK4T,IAAIR,QAExE,QAAT9P,GAA2B,QAATA,GACpB+I,KAAK8/B,4BAA4BnsC,IAG9BqpC,GAAiC,gBAAlBrpC,EAAKtB,IAAIkJ,MAA0B5H,EAAKvC,MAAM4O,MAChEA,KAAKqY,MAAM1kB,EAAKvC,MAAM4O,KAAK+G,MAAO2S,GAAW+B,gCAGlC,SAATxkB,GAAiB+I,KAAK02B,aAC1B/iC,EAAK4J,QAAS,EAEVyC,KAAK62B,IAAIxgC,EAAM+L,YACjB4yB,GAAW,GAGbrhC,EAAKvC,MAAQ4O,KAAKw9B,2BAClB7pC,EAAKmqC,SAAWA,GAGlBnqC,EAAKqhC,SAAWA,EACTh1B,KAAKy0B,WAAW9gC,EAAM,wBAjzBvB,kDAqzBkBi6B,GAC1B,IAAMmS,EAA+B,QAAlBnS,EAAS32B,KAAiB,EAAI,EAC3C8P,EAAQ6mB,EAAS7mB,MACjBrN,EAASk0B,EAASx8B,MAAM8E,OAAOwD,QAAUk0B,EAASx8B,MAAM6oC,KAAO,EAAI,GAErErM,EAASx8B,MAAM4O,MACjBA,KAAKqY,MAAMuV,EAASx8B,MAAM4O,KAAK+G,MAAyB,QAAlB6mB,EAAS32B,KAAiByiB,GAAWkB,0BAA4BlB,GAAW4B,2BAGhH5hB,IAAWqmC,IACS,QAAlBnS,EAAS32B,KACX+I,KAAKqY,MAAMtR,EAAOmC,EAAcU,gBAEhC5J,KAAKqY,MAAMtR,EAAOmC,EAAcW,iBAId,QAAlB+jB,EAAS32B,MAAkB22B,EAASx8B,MAAM6oC,MAC5Cj6B,KAAKqY,MAAMtR,EAAOmC,EAAcY,0BAv0B1B,gDA40BH9J,KAAK62B,IAAIxgC,EAAM2L,OAAUhC,KAAK62B,IAAIxgC,EAAM0L,QAAW/B,KAAKiT,MAAM5c,EAAMsL,SAAY3B,KAAKiT,MAAM5c,EAAMuL,YACpG5B,KAAK02B,eA70BC,uDAi1BuBxC,EAAUzhB,EAAU3V,GACnDo3B,EAAWA,GAAYl0B,KAAKwH,MAAMT,MAClC0L,EAAWA,GAAYzS,KAAKwH,MAAMiL,SAGlC,IAFA,IAAI9e,EAAOmJ,GAAMkD,KAAKw8B,+BAA8B,GAE7Cx8B,KAAK62B,IAAIxgC,EAAM8L,MAAM,CAC1B,IAAM69B,EAAQhgC,KAAK4yB,YAAYsB,EAAUzhB,GACzCutB,EAAMC,cAAgBtsC,EACtBqsC,EAAMljC,GAAKkD,KAAKw8B,+BAA8B,GAC9C7oC,EAAOqM,KAAKy0B,WAAWuL,EAAO,2BAGhC,OAAOrsC,IA71BC,2CAg2BWugC,EAAUzhB,EAAU3V,GACvC,IAAMnJ,EAAOqM,KAAK4yB,YAAYsB,EAAUzhB,GAQxC,OAPA9e,EAAKigC,eAAiB,KACtBjgC,EAAKmJ,GAAKkD,KAAKm9B,iCAAiCjJ,EAAUzhB,EAAU3V,GAEhEkD,KAAKs4B,aAAa,OACpB3kC,EAAKigC,eAAiB5zB,KAAKo9B,uCAGtBp9B,KAAKy0B,WAAW9gC,EAAM,2BAz2BrB,4CA62BR,IAAMA,EAAOqM,KAAKw0B,YAGlB,OAFAx0B,KAAKm3B,OAAO9gC,EAAM0P,SAClBpS,EAAKqG,SAAWgG,KAAKkgC,uBACdlgC,KAAKy0B,WAAW9gC,EAAM,0BAh3BrB,2CAo3BR,IAAMA,EAAOqM,KAAKw0B,YAIlB,IAHA7gC,EAAK0C,MAAQ,GACb2J,KAAKm3B,OAAO9gC,EAAM8K,UAEXnB,KAAKwH,MAAMgL,IAAMxS,KAAKtG,SAAWsG,KAAKiT,MAAM5c,EAAMiL,YACvD3N,EAAK0C,MAAMP,KAAKkK,KAAKm5B,kBACjBn5B,KAAKiT,MAAM5c,EAAMiL,YACrBtB,KAAKm3B,OAAO9gC,EAAM0L,OAIpB,OADA/B,KAAKm3B,OAAO9gC,EAAMiL,UACXtB,KAAKy0B,WAAW9gC,EAAM,yBA/3BrB,iDAk4BiBwsC,GACzB,IAAI5kC,EAAO,KACPy5B,GAAW,EACXoF,EAAiB,KACfzmC,EAAOqM,KAAKw0B,YACZ4L,EAAKpgC,KAAK0+B,YACV2B,EAASrgC,KAAKwH,MAAMW,OAAS9R,EAAM+O,MAyBzC,OAvBIg7B,EAAGj4B,OAAS9R,EAAM4L,OAASm+B,EAAGj4B,OAAS9R,EAAM+L,UAC3Ci+B,IAAWF,GACbngC,KAAKqY,MAAM1kB,EAAKoT,MAAO2S,GAAWiC,sBAGpCpgB,EAAOyE,KAAK25B,gBAAgB0G,GAExBrgC,KAAK62B,IAAIxgC,EAAM+L,YACjB4yB,GAAW,EAEPqL,GACFrgC,KAAKqY,MAAM1kB,EAAKoT,MAAO2S,GAAWgC,4BAItC0e,EAAiBp6B,KAAKw9B,4BAEtBpD,EAAiBp6B,KAAKm5B,gBAGxBxlC,EAAK4H,KAAOA,EACZ5H,EAAKqhC,SAAWA,EAChBrhC,EAAKymC,eAAiBA,EACfp6B,KAAKy0B,WAAW9gC,EAAM,uBAj6BrB,yDAo6ByBwU,GACjC,IAAMxU,EAAOqM,KAAK4yB,YAAYzqB,EAAKpB,MAAOoB,EAAKZ,IAAIR,OAInD,OAHApT,EAAK4H,KAAO,KACZ5H,EAAKqhC,UAAW,EAChBrhC,EAAKymC,eAAiBjyB,EACfnI,KAAKy0B,WAAW9gC,EAAM,uBAz6BrB,oDA46B+B,IAAbuC,EAAa,uDAAJ,GAC/B+jC,EAAO,KACP70B,EAAQ,KAWZ,IATIpF,KAAKiT,MAAM5c,EAAM+O,UACnBA,EAAQpF,KAAK6+B,4BAA2B,IAClCtjC,KAAO,KAERyE,KAAKiT,MAAM5c,EAAMyL,SACpB9B,KAAKm3B,OAAO9gC,EAAM0L,SAId/B,KAAKiT,MAAM5c,EAAMyL,UAAY9B,KAAKiT,MAAM5c,EAAMkM,WACpDrM,EAAOJ,KAAKkK,KAAK6+B,4BAA2B,IAEvC7+B,KAAKiT,MAAM5c,EAAMyL,SACpB9B,KAAKm3B,OAAO9gC,EAAM0L,OAQtB,OAJI/B,KAAK62B,IAAIxgC,EAAMkM,YACjB03B,EAAOj6B,KAAK6+B,4BAA2B,IAGlC,CACL3oC,SACA+jC,OACA70B,WAx8BM,gDA48BgB8uB,EAAUzhB,EAAU9e,EAAMmJ,GAClD,OAAQA,EAAGvB,MACT,IAAK,MACH,OAAOyE,KAAKy0B,WAAW9gC,EAAM,qBAE/B,IAAK,OACL,IAAK,UACH,OAAOqM,KAAKy0B,WAAW9gC,EAAM,yBAE/B,IAAK,QACH,OAAOqM,KAAKy0B,WAAW9gC,EAAM,uBAE/B,IAAK,QACH,OAAOqM,KAAKy0B,WAAW9gC,EAAM,uBAE/B,IAAK,SACH,OAAOqM,KAAKy0B,WAAW9gC,EAAM,wBAE/B,IAAK,SACH,OAAOqM,KAAKy0B,WAAW9gC,EAAM,wBAE/B,IAAK,SACH,OAAOqM,KAAKy0B,WAAW9gC,EAAM,wBAE/B,QAEE,OADAqM,KAAKsgC,mBAAmBxjC,EAAGvB,MACpByE,KAAKugC,qBAAqBrM,EAAUzhB,EAAU3V,MAt+BjD,6CA2+BR,IAGIi9B,EACA5xB,EAJE+rB,EAAWl0B,KAAKwH,MAAMT,MACtB0L,EAAWzS,KAAKwH,MAAMiL,SACtB9e,EAAOqM,KAAKw0B,YAGdgM,GAAgB,EACdlC,EAAwBt+B,KAAKwH,MAAM+2B,mBAEzC,OAAQv+B,KAAKwH,MAAMW,MACjB,KAAK9R,EAAMkF,KACT,OAAIyE,KAAK+6B,aAAa,aACb/6B,KAAKygC,yBAGPzgC,KAAK0gC,0BAA0BxM,EAAUzhB,EAAU9e,EAAMqM,KAAK25B,mBAEvE,KAAKtjC,EAAMmL,OACT,OAAOxB,KAAK68B,oBAAoB,CAC9BC,aAAa,EACbC,YAAY,EACZC,aAAa,EACbC,YAAY,EACZC,cAAc,IAGlB,KAAK7mC,EAAMoL,UACT,OAAOzB,KAAK68B,oBAAoB,CAC9BC,aAAa,EACbC,YAAY,EACZC,aAAa,EACbC,YAAY,EACZC,cAAc,IAGlB,KAAK7mC,EAAM8K,SAIT,OAHAnB,KAAKwH,MAAM+2B,oBAAqB,EAChCp2B,EAAOnI,KAAK2gC,qBACZ3gC,KAAKwH,MAAM+2B,mBAAqBD,EACzBn2B,EAET,KAAK9R,EAAMoN,WACT,GAAyB,MAArBzD,KAAKwH,MAAMpW,MAUb,OATAuC,EAAKigC,eAAiB5zB,KAAK85B,oCAC3B95B,KAAKm3B,OAAO9gC,EAAMwL,QAClBk4B,EAAM/5B,KAAKg6B,8BACXrmC,EAAKuC,OAAS6jC,EAAI7jC,OAClBvC,EAAKsmC,KAAOF,EAAIE,KAChBtmC,EAAKqM,KAAO+5B,EAAI30B,MAChBpF,KAAKm3B,OAAO9gC,EAAMyL,QAClB9B,KAAKm3B,OAAO9gC,EAAMiM,OAClB3O,EAAKwmC,WAAan6B,KAAKm5B,gBAChBn5B,KAAKy0B,WAAW9gC,EAAM,0BAG/B,MAEF,KAAK0C,EAAMwL,OAGT,GAFA7B,KAAK22B,QAEA32B,KAAKiT,MAAM5c,EAAMyL,UAAY9B,KAAKiT,MAAM5c,EAAMkM,UACjD,GAAIvC,KAAKiT,MAAM5c,EAAMkF,OAASyE,KAAKiT,MAAM5c,EAAM+O,OAAQ,CACrD,IAAMzE,EAAQX,KAAK0+B,YAAYv2B,KAC/Bq4B,EAAgB7/B,IAAUtK,EAAM+L,UAAYzB,IAAUtK,EAAM4L,WAE5Du+B,GAAgB,EAIpB,GAAIA,EAAe,CAKjB,GAJAxgC,KAAKwH,MAAM+2B,oBAAqB,EAChCp2B,EAAOnI,KAAKm5B,gBACZn5B,KAAKwH,MAAM+2B,mBAAqBD,EAE5Bt+B,KAAKwH,MAAM+2B,sBAAwBv+B,KAAKiT,MAAM5c,EAAM0L,QAAU/B,KAAKiT,MAAM5c,EAAMyL,SAAW9B,KAAK0+B,YAAYv2B,OAAS9R,EAAMiM,OAE5H,OADAtC,KAAKm3B,OAAO9gC,EAAMyL,QACXqG,EAEPnI,KAAK62B,IAAIxgC,EAAM0L,OAiBnB,OAZEg4B,EADE5xB,EACInI,KAAKg6B,4BAA4B,CAACh6B,KAAK4gC,mCAAmCz4B,KAE1EnI,KAAKg6B,8BAGbrmC,EAAKuC,OAAS6jC,EAAI7jC,OAClBvC,EAAKsmC,KAAOF,EAAIE,KAChBtmC,EAAKqM,KAAO+5B,EAAI30B,MAChBpF,KAAKm3B,OAAO9gC,EAAMyL,QAClB9B,KAAKm3B,OAAO9gC,EAAMiM,OAClB3O,EAAKwmC,WAAan6B,KAAKm5B,gBACvBxlC,EAAKigC,eAAiB,KACf5zB,KAAKy0B,WAAW9gC,EAAM,0BAE/B,KAAK0C,EAAM4K,OACT,OAAOjB,KAAK0yB,aAAa1yB,KAAKwH,MAAMpW,MAAO,+BAE7C,KAAKiF,EAAMsP,MACX,KAAKtP,EAAMuP,OAGT,OAFAjS,EAAKvC,MAAQ4O,KAAKiT,MAAM5c,EAAMsP,OAC9B3F,KAAK22B,OACE32B,KAAKy0B,WAAW9gC,EAAM,gCAE/B,KAAK0C,EAAMsN,QACT,GAAyB,MAArB3D,KAAKwH,MAAMpW,MAAe,CAG5B,GAFA4O,KAAK22B,OAED32B,KAAKiT,MAAM5c,EAAMwK,KACnB,OAAOb,KAAK0yB,cAAc1yB,KAAKwH,MAAMpW,MAAO,8BAA+BuC,EAAKoT,MAAOpT,EAAK4T,IAAIR,OAGlG,GAAI/G,KAAKiT,MAAM5c,EAAMyK,QACnB,OAAOd,KAAK0yB,cAAc1yB,KAAKwH,MAAMpW,MAAO,8BAA+BuC,EAAKoT,MAAOpT,EAAK4T,IAAIR,OAGlG,MAAM/G,KAAKqY,MAAMrY,KAAKwH,MAAMT,MAAO2S,GAAW0C,8BAGhD,MAAMpc,KAAK02B,aAEb,KAAKrgC,EAAMwK,IACT,OAAOb,KAAK0yB,aAAa1yB,KAAKwH,MAAMpW,MAAO,+BAE7C,KAAKiF,EAAMyK,OACT,OAAOd,KAAK0yB,aAAa1yB,KAAKwH,MAAMpW,MAAO,+BAE7C,KAAKiF,EAAM2P,MAET,OADAhG,KAAK22B,OACE32B,KAAKy0B,WAAW9gC,EAAM,sBAE/B,KAAK0C,EAAMqP,MAET,OADA1F,KAAK22B,OACE32B,KAAKy0B,WAAW9gC,EAAM,6BAE/B,KAAK0C,EAAM+O,MAET,OADApF,KAAK22B,OACE32B,KAAKy0B,WAAW9gC,EAAM,sBAE/B,KAAK0C,EAAMwN,KAET,OADA7D,KAAK22B,OACE32B,KAAKy0B,WAAW9gC,EAAM,wBAE/B,QACE,GAAgC,WAA5BqM,KAAKwH,MAAMW,KAAKlI,QAClB,OAAOD,KAAK6gC,sBACP,GAAI7gC,KAAKwH,MAAMW,KAAKlI,QAAS,CAClC,IAAMH,EAAQE,KAAKwH,MAAMW,KAAKrI,MAE9B,OADAE,KAAK22B,OACL,oDAA8BhjC,EAAMmM,IAK1C,MAAME,KAAK02B,eAtoCH,6CA8oCR,IAJA,IAAMxC,EAAWl0B,KAAKwH,MAAMT,MACtB0L,EAAWzS,KAAKwH,MAAMiL,SACxBtK,EAAOnI,KAAKkgC,uBAETlgC,KAAKiT,MAAM5c,EAAM8K,YAAcnB,KAAK8gC,sBAAsB,CAC/D,IAAMntC,EAAOqM,KAAK4yB,YAAYsB,EAAUzhB,GACxC9e,EAAKotC,YAAc54B,EACnBnI,KAAKm3B,OAAO9gC,EAAM8K,UAClBnB,KAAKm3B,OAAO9gC,EAAMiL,UAClB6G,EAAOnI,KAAKy0B,WAAW9gC,EAAM,uBAG/B,OAAOwU,IAtpCC,4CA0pCR,IAAMxU,EAAOqM,KAAKw0B,YAElB,OAAIx0B,KAAK62B,IAAIxgC,EAAM+L,WACjBzO,EAAKymC,eAAiBp6B,KAAKghC,sBACpBhhC,KAAKy0B,WAAW9gC,EAAM,2BAEtBqM,KAAKihC,yBAhqCN,2DAqqCR,IAAM7iC,EAAQ4B,KAAKghC,sBAEnB,IAAKhhC,KAAKwH,MAAM+2B,oBAAsBv+B,KAAK62B,IAAIxgC,EAAMiM,OAAQ,CAC3D,IAAM3O,EAAOqM,KAAK4yB,YAAYx0B,EAAM2I,MAAO3I,EAAMmJ,IAAIR,OAKrD,OAJApT,EAAKuC,OAAS,CAAC8J,KAAK4gC,mCAAmCxiC,IACvDzK,EAAKsmC,KAAO,KACZtmC,EAAKwmC,WAAan6B,KAAKm5B,gBACvBxlC,EAAKigC,eAAiB,KACf5zB,KAAKy0B,WAAW9gC,EAAM,0BAG/B,OAAOyK,IAhrCC,kDAorCR,IAAMzK,EAAOqM,KAAKw0B,YAClBx0B,KAAK62B,IAAIxgC,EAAMkN,YACf,IAAM4E,EAAOnI,KAAKkhC,qCAGlB,IAFAvtC,EAAK0C,MAAQ,CAAC8R,GAEPnI,KAAK62B,IAAIxgC,EAAMkN,aACpB5P,EAAK0C,MAAMP,KAAKkK,KAAKkhC,sCAGvB,OAA6B,IAAtBvtC,EAAK0C,MAAMqD,OAAeyO,EAAOnI,KAAKy0B,WAAW9gC,EAAM,gCA7rCtD,2CAisCR,IAAMA,EAAOqM,KAAKw0B,YAClBx0B,KAAK62B,IAAIxgC,EAAMgN,WACf,IAAM8E,EAAOnI,KAAKmhC,4BAGlB,IAFAxtC,EAAK0C,MAAQ,CAAC8R,GAEPnI,KAAK62B,IAAIxgC,EAAMgN,YACpB1P,EAAK0C,MAAMP,KAAKkK,KAAKmhC,6BAGvB,OAA6B,IAAtBxtC,EAAK0C,MAAMqD,OAAeyO,EAAOnI,KAAKy0B,WAAW9gC,EAAM,yBA1sCtD,sCA8sCR,IAAMslC,EAAYj5B,KAAKwH,MAAM0xB,OAC7Bl5B,KAAKwH,MAAM0xB,QAAS,EACpB,IAAM/wB,EAAOnI,KAAKohC,qBAGlB,OAFAphC,KAAKwH,MAAM0xB,OAASD,EACpBj5B,KAAKwH,MAAM8N,YAActV,KAAKwH,MAAM8N,aAAetV,KAAKwH,MAAM+2B,mBACvDp2B,IAntCC,6DAutCR,GAAInI,KAAKwH,MAAMW,OAAS9R,EAAMkF,MAA6B,MAArByE,KAAKwH,MAAMpW,MAAe,CAC9D,IAAM8iC,EAAWl0B,KAAKwH,MAAMT,MACtB0L,EAAWzS,KAAKwH,MAAMiL,SACtB9e,EAAOqM,KAAK25B,kBAClB,OAAO35B,KAAKugC,qBAAqBrM,EAAUzhB,EAAU9e,GAErD,OAAOqM,KAAKm5B,kBA7tCN,gDAkuCR,IAAMxlC,EAAOqM,KAAKw0B,YAElB,OADA7gC,EAAKymC,eAAiBp6B,KAAKw9B,2BACpBx9B,KAAKy0B,WAAW9gC,EAAM,oBApuCrB,yDAuuCyB0tC,GACjC,IAAMrD,EAAQqD,EAAyBrhC,KAAK25B,kBAAoB35B,KAAKw8B,gCAOrE,OALIx8B,KAAKiT,MAAM5c,EAAM4L,SACnB+7B,EAAM5D,eAAiBp6B,KAAKo8B,0BAC5Bp8B,KAAKq6B,iBAAiB2D,IAGjBA,IA/uCC,0CAkvCUrqC,GAGlB,OAFAA,EAAKpC,WAAW6oC,eAAiBzmC,EAAKymC,eACtCp6B,KAAKq6B,iBAAiB1mC,EAAKpC,WAAYoC,EAAKymC,eAAepzB,IAAKrT,EAAKymC,eAAe7yB,IAAIP,KACjFrT,EAAKpC,aArvCJ,0CAyvCR,IAAIusC,EAAW,KAef,OAbI99B,KAAKiT,MAAM5c,EAAMsN,WACnBm6B,EAAW99B,KAAKw0B,YAES,MAArBx0B,KAAKwH,MAAMpW,MACb0sC,EAAS7mC,KAAO,OAEhB6mC,EAAS7mC,KAAO,QAGlB+I,KAAK22B,OACL32B,KAAKy0B,WAAWqJ,EAAU,aAGrBA,IAxwCC,wCA2wCQnqC,EAAM2tC,GAAuC,WAAlBlN,EAAkB,wDAC7D,OAAIkN,EACKthC,KAAKuhC,iCAAiC5tC,GAAM,iEAA8BA,GAAM,EAAMygC,MAG/F,qDAA+BzgC,GAAM,EAAOygC,KAhxCpC,iDAmxCiBzgC,EAAMwU,GAAwB,IAAlBisB,EAAkB,wDACvD,GAAIp0B,KAAKiT,MAAM5c,EAAM4L,OAAQ,CAC3B,IAAM23B,EAAW55B,KAAKw0B,YADK,EAEiBx0B,KAAKk6B,uCAFtB,SAE1BN,EAASQ,eAFiB,KAEDzmC,EAAK6lC,UAFJ,KAG3B7lC,EAAKwmC,WAAaP,EAASQ,eAAiBp6B,KAAKy0B,WAAWmF,EAAU,kBAAoB,KAG5F,8DAAiCjmC,EAAMwU,EAAMisB,KA1xCrC,qCA6xCKjf,EAASqsB,GACtB,GAAIxhC,KAAKwH,MAAMi6B,QAAUzhC,KAAKiT,MAAM5c,EAAMkF,OAA8B,cAArByE,KAAKwH,MAAMpW,MAAuB,CACnF,IAAMstC,EAAY1+B,KAAK0+B,YAEvB,GAAIA,EAAUv2B,OAAS9R,EAAMkF,MAAQ6b,EAAUsnB,EAAUttC,OAAQ,CAC/D,IAAMuC,EAAOqM,KAAKw0B,YAElB,OADAx0B,KAAK22B,OACE32B,KAAK0hC,mBAAmB/tC,SAE5B,GAAIqM,KAAK2hC,oBAAsB3hC,KAAK+6B,aAAa,QAAS,CAC/D,IAAMpnC,EAAOqM,KAAKw0B,YAElB,OADAx0B,KAAK22B,OACE32B,KAAK4hC,yBAAyBjuC,GAGvC,IAAMg/B,EAAO,EAAH,gDAAwBxd,EAASqsB,GAM3C,YAJwBtuC,IAApB8M,KAAK64B,YAA6B74B,KAAK6hC,iBAAiBlP,KAC1D3yB,KAAK64B,WAAa,MAGblG,IAlzCC,+CAqzCeh/B,EAAMoJ,GAC7B,GAAkB,eAAdA,EAAKoL,KACP,GAAkB,YAAdpL,EAAKxB,MACP,GAAIyE,KAAKiT,MAAM5c,EAAMiP,SAAWtF,KAAKiT,MAAM5c,EAAMkF,OAASyE,KAAKiT,MAAM5c,EAAMoO,YAAczE,KAAKiT,MAAM5c,EAAM0O,OAAS/E,KAAKiT,MAAM5c,EAAMmP,SAClI,OAAOxF,KAAKy7B,iBAAiB9nC,QAE1B,GAAIqM,KAAKiT,MAAM5c,EAAMkF,MAAO,CACjC,GAAkB,cAAdwB,EAAKxB,KACP,OAAOyE,KAAK0hC,mBAAmB/tC,GAC1B,GAAkB,SAAdoJ,EAAKxB,KACd,OAAOyE,KAAKq8B,mBAAmB1oC,GAC1B,GAAkB,WAAdoJ,EAAKxB,KACd,OAAOyE,KAAKs8B,oBAAoB3oC,GAAM,GAK5C,mEAAsCA,EAAMoJ,KAt0CpC,qDA00CR,OAAOiD,KAAK+6B,aAAa,SAAW/6B,KAAK+6B,aAAa,cAAgB/6B,KAAK+6B,aAAa,WAAa/6B,KAAK2hC,oBAAsB3hC,KAAK+6B,aAAa,SAA3I,gDAAA/6B,MAAA,KAAAA,QA10CC,iDA80CR,QAAIA,KAAKiT,MAAM5c,EAAMkF,SAA+B,SAArByE,KAAKwH,MAAMpW,OAAyC,cAArB4O,KAAKwH,MAAMpW,OAA8C,WAArB4O,KAAKwH,MAAMpW,OAAsB4O,KAAK2hC,oBAA2C,SAArB3hC,KAAKwH,MAAMpW,SAIzK,+DAl1CQ,qDAs1CR,GAAI4O,KAAK2hC,oBAAsB3hC,KAAK+6B,aAAa,QAAS,CACxD,IAAMpnC,EAAOqM,KAAKw0B,YAElB,OADAx0B,KAAK22B,OACE32B,KAAK4hC,yBAAyBjuC,GAGvC,0EA51CQ,uCA+1COoJ,EAAMm3B,EAAUzhB,EAAUqvB,GAAkB,WAC3D,IAAK9hC,KAAKiT,MAAM5c,EAAM+L,UAAW,OAAOrF,EAExC,GAAI+kC,EAAkB,CACpB,IAAMC,EAAS/hC,KAAKgiC,UAAS,gEAA6BjlC,EAAMm3B,EAAUzhB,MAE1E,OAAKsvB,EAAOpuC,MAKRouC,EAAOjuB,QAAO9T,KAAKwH,MAAQu6B,EAAOE,WAC/BF,EAAOpuC,OALZmuC,EAAiB/6B,MAAQg7B,EAAOjuB,MAAMtB,KAAOxS,KAAKwH,MAAMT,MACjDhK,GAOXiD,KAAKm3B,OAAO9gC,EAAM+L,UAClB,IAAMoF,EAAQxH,KAAKwH,MAAMrI,QACnB+iC,EAAoBliC,KAAKwH,MAAM26B,UAC/BxuC,EAAOqM,KAAK4yB,YAAYsB,EAAUzhB,GAlBmB,EAsBvDzS,KAAKoiC,gCAFPC,EApByD,EAoBzDA,WACAC,EArByD,EAqBzDA,OArByD,EAuBpCtiC,KAAKuiC,wBAAwBF,GAvBO,SAuBtDG,EAvBsD,KAuB/CC,EAvB+C,KAyB3D,GAAIH,GAAUG,EAAQ/oC,OAAS,EAAG,CAChC,IAAMyoC,EAAY,EAAID,GAEtB,GAAIO,EAAQ/oC,OAAS,EAAG,CACtBsG,KAAKwH,MAAQA,EACbxH,KAAKwH,MAAM26B,UAAYA,EAEvB,IAAK,IAAItnC,EAAI,EAAGA,EAAI4nC,EAAQ/oC,OAAQmB,IAClCsnC,EAAUrsC,KAAK2sC,EAAQ5nC,GAAGkM,OALN,MAWlB/G,KAAKoiC,gCAFPC,EAToB,EASpBA,WACAC,EAVoB,EAUpBA,OAVoB,MAYHtiC,KAAKuiC,wBAAwBF,GAZ1B,SAYrBG,EAZqB,KAYdC,EAZc,KAmBxB,GAJIH,GAAUE,EAAM9oC,OAAS,GAC3BsG,KAAKqY,MAAM7Q,EAAMT,MAAO2S,GAAWC,2BAGjC2oB,GAA2B,IAAjBE,EAAM9oC,OAAc,CAChCsG,KAAKwH,MAAQA,EACbxH,KAAKwH,MAAM26B,UAAYA,EAAU3oC,OAAOgpC,EAAM,GAAGz7B,OAFjB,MAM5B/G,KAAKoiC,gCAFPC,EAJ8B,EAI9BA,WACAC,EAL8B,EAK9BA,QAWN,OANAtiC,KAAKuiC,wBAAwBF,GAAY,GACzCriC,KAAKwH,MAAM26B,UAAYD,EACvBliC,KAAKm3B,OAAO9gC,EAAM4L,OAClBtO,EAAK2iB,KAAOvZ,EACZpJ,EAAK0uC,WAAaA,EAClB1uC,EAAK+uC,UAAY1iC,KAAKuhC,iCAAiC5tC,GAAM,kBAAM,EAAKgvC,sBAAiBzvC,OAAWA,OAAWA,MACxG8M,KAAKy0B,WAAW9gC,EAAM,2BA95CrB,sDAk6CRqM,KAAKwH,MAAMo7B,0BAA0B9sC,KAAKkK,KAAKwH,MAAMT,OACrD,IAAMs7B,EAAariC,KAAKq3B,0BAClBiL,GAAUtiC,KAAKiT,MAAM5c,EAAM4L,OAEjC,OADAjC,KAAKwH,MAAMo7B,0BAA0BjpC,MAC9B,CACL0oC,aACAC,YAx6CM,8CA46Cc3uC,EAAMkvC,GAI5B,IAJ6C,WACvCz7B,EAAQ,CAACzT,GACTmvC,EAAS,GAES,IAAjB17B,EAAM1N,QAAc,CACzB,IAAM/F,EAAOyT,EAAMzN,MAED,4BAAdhG,EAAKwU,MACHxU,EAAKigC,iBAAmBjgC,EAAKwmC,WAC/Bn6B,KAAK+iC,sBAAsBpvC,GAE3BmvC,EAAOhtC,KAAKnC,GAGdyT,EAAMtR,KAAKnC,EAAKgB,OACO,0BAAdhB,EAAKwU,OACdf,EAAMtR,KAAKnC,EAAK0uC,YAChBj7B,EAAMtR,KAAKnC,EAAK+uC,YAIpB,OAAIG,GACFC,EAAOlH,SAAQ,SAAAjoC,GAAI,OAAI,EAAKovC,sBAAsBpvC,MAC3C,CAACmvC,EAAQ,KAl9CxB,SAAmBE,EAAM1sB,GAIvB,IAHA,IAAM2sB,EAAQ,GACRC,EAAQ,GAELroC,EAAI,EAAGA,EAAImoC,EAAKtpC,OAAQmB,KAC9Byb,EAAK0sB,EAAKnoC,GAAIA,EAAGmoC,GAAQC,EAAQC,GAAOptC,KAAKktC,EAAKnoC,IAGrD,MAAO,CAACooC,EAAOC,GA68CJC,CAAUL,GAAQ,SAAAnvC,GAAI,OAAIA,EAAKuC,OAAOktC,OAAM,SAAAhlC,GAAK,OAAI,EAAKilC,aAAajlC,GAAO,WAt8C7E,4CAy8CYzK,GACpB,IAAI2vC,EAEJtjC,KAAKujC,iBAAiB5vC,EAAKuC,OAAsC,OAA7BotC,EAAc3vC,EAAKk/B,YAAiB,EAASyQ,EAAYE,eAAe,GAC5GxjC,KAAKtM,MAAM4nC,MAAMmI,GACjB,+CAAkB9vC,GAAM,GAAO,GAC/BqM,KAAKtM,MAAMgoC,SA/8CH,uDAk9CuB/nC,EAAM+vC,GACrC,IAAI3B,EAUJ,OARkE,IAA9D/hC,KAAKwH,MAAMo7B,0BAA0B3pB,QAAQtlB,EAAKoT,QACpD/G,KAAKwH,MAAMo7B,0BAA0B9sC,KAAKkK,KAAKwH,MAAMT,OACrDg7B,EAAS2B,IACT1jC,KAAKwH,MAAMo7B,0BAA0BjpC,OAErCooC,EAAS2B,IAGJ3B,IA79CC,qCAg+CKpuC,EAAMugC,EAAUzhB,GAQ7B,GAPA9e,EAAO,EAAH,gDAAwBA,EAAMugC,EAAUzhB,GAExCzS,KAAK62B,IAAIxgC,EAAM+L,YACjBzO,EAAKqhC,UAAW,EAChBh1B,KAAKq6B,iBAAiB1mC,IAGpBqM,KAAKiT,MAAM5c,EAAM4L,OAAQ,CAC3B,IAAM0hC,EAAe3jC,KAAK4yB,YAAYsB,EAAUzhB,GAGhD,OAFAkxB,EAAapyC,WAAaoC,EAC1BgwC,EAAavJ,eAAiBp6B,KAAKo8B,0BAC5Bp8B,KAAKy0B,WAAWkP,EAAc,sBAGvC,OAAOhwC,IA/+CC,8CAk/CcA,GACJ,sBAAdA,EAAKwU,OAAqD,SAApBxU,EAAKgpB,YAA6C,WAApBhpB,EAAKgpB,aAA0C,2BAAdhpB,EAAKwU,MAAyD,SAApBxU,EAAKwoC,YAAuC,yBAAdxoC,EAAKwU,MAAuD,SAApBxU,EAAKwoC,YAI9N,2DAA8BxoC,KAv/CtB,kCA0/CEA,GACV,IAAMiwC,EAAO,EAAH,6CAAqBjwC,GAM/B,MAJkB,2BAAdiwC,EAAKz7B,MAAmD,yBAAdy7B,EAAKz7B,OACjDy7B,EAAKzH,WAAayH,EAAKzH,YAAc,SAGhCyH,IAjgDC,6CAogDajwC,GACrB,GAAIqM,KAAK+6B,aAAa,QAAS,CAC7BpnC,EAAKwoC,WAAa,OAClB,IAAM0H,EAAkB7jC,KAAKw0B,YAG7B,OAFAx0B,KAAK22B,OAED32B,KAAKiT,MAAM5c,EAAMmL,SACnB7N,EAAKuhC,WAAal1B,KAAK8jC,wBACvB9jC,KAAK+jC,gBAAgBpwC,GACd,MAEAqM,KAAKq8B,mBAAmBwH,GAE5B,GAAI7jC,KAAK+6B,aAAa,UAAW,CACtCpnC,EAAKwoC,WAAa,OAClB,IAAM0H,EAAkB7jC,KAAKw0B,YAE7B,OADAx0B,KAAK22B,OACE32B,KAAKs8B,oBAAoBuH,GAAiB,GAC5C,GAAI7jC,KAAK+6B,aAAa,aAAc,CACzCpnC,EAAKwoC,WAAa,OAClB,IAAM0H,EAAkB7jC,KAAKw0B,YAE7B,OADAx0B,KAAK22B,OACE32B,KAAK0hC,mBAAmBmC,GAC1B,GAAI7jC,KAAK2hC,oBAAsB3hC,KAAK+6B,aAAa,QAAS,CAC/DpnC,EAAKwoC,WAAa,QAClB,IAAM0H,EAAkB7jC,KAAKw0B,YAE7B,OADAx0B,KAAK22B,OACE32B,KAAK4hC,yBAAyBiC,GAErC,iEAAoClwC,KAjiD9B,oCAqiDIA,GACZ,0DAA2BuH,eAEvB8E,KAAK+6B,aAAa,SAAW/6B,KAAK0+B,YAAYv2B,OAAS9R,EAAMwN,QAC/DlQ,EAAKwoC,WAAa,OAClBn8B,KAAK22B,OACL32B,KAAK22B,QACE,KA5iDD,yDAkjDyBhjC,GACjC,IAAM6e,EAAMxS,KAAKwH,MAAMT,MACjBi9B,EAAe,EAAH,oEAA4CrwC,GAM9D,OAJIqwC,GAAoC,SAApBrwC,EAAKwoC,YACvBn8B,KAAK02B,WAAWlkB,GAGXwxB,IA1jDC,mCA6jDGrwC,EAAMswC,EAAaC,GAC9B,gDAAmBvwC,EAAMswC,EAAaC,GAElClkC,KAAKs4B,aAAa,OACpB3kC,EAAKigC,eAAiB5zB,KAAK85B,uCAjkDrB,uCAqkDOrG,EAAW0Q,EAAQ38B,GAClC,IAAMgL,EAAMxS,KAAKwH,MAAMT,MAEvB,GAAI/G,KAAK+6B,aAAa,WAAY,CAChC,GAAI/6B,KAAKokC,6BAA6B3Q,EAAW0Q,GAC/C,OAGFA,EAAO1G,SAAU,EAGnB,oDAAuBhK,EAAW0Q,EAAQ38B,GAEtC28B,EAAO1G,UACW,kBAAhB0G,EAAOh8B,MAA4C,yBAAhBg8B,EAAOh8B,MAAmD,uBAAhBg8B,EAAOh8B,KACpFnI,KAAKqY,MAAM7F,EAAKkH,GAAWI,qBAClBqqB,EAAO/yC,OAClB4O,KAAKqY,MAAM8rB,EAAO/yC,MAAM2V,MAAO2S,GAAWK,iCAtlDtC,uCA2lDOxT,GACf,IAAMowB,EAAO32B,KAAK+S,MAAM8iB,WAAW71B,KAAKwH,MAAMgL,IAAM,GAEpD,OAAa,MAATjM,GAAyB,MAATowB,EACX32B,KAAKqkC,SAAShuC,EAAMoL,UAAW,IAC7BzB,KAAKwH,MAAM0xB,QAAoB,KAAT3yB,GAAwB,KAATA,EAErCvG,KAAKwH,MAAM0xB,QAAmB,KAAT3yB,EACvBvG,KAAKqkC,SAAShuC,EAAM+L,SAAU,GA56D7C,SAAyBkiC,EAAS3N,GAChC,OAAmB,KAAZ2N,GAA2B,KAAT3N,EA46DV4N,CAAgBh+B,EAAMowB,IAC/B32B,KAAKwH,MAAMiO,YAAa,EACxB,8CAEA,oDAA8BlP,GAPvBvG,KAAKqkC,SAAShuC,EAAMoN,WAAY,KAjmDjC,mCA4mDG9P,EAAM6wC,GAAW,WAC5B,OAAQ7wC,EAAKwU,MACX,IAAK,aACL,IAAK,gBACL,IAAK,eACL,IAAK,oBACH,OAAO,EAET,IAAK,mBAED,IAAMhB,EAAOxT,EAAK8U,WAAW/O,OAAS,EACtC,OAAO/F,EAAK8U,WAAW26B,OAAM,SAACzY,EAAM9vB,GAClC,MAAqB,iBAAd8vB,EAAKxiB,OAA4BtN,IAAMsM,GAAsB,kBAAdwjB,EAAKxiB,OAA6B,EAAKk7B,aAAa1Y,MAIhH,IAAK,iBACH,OAAO3qB,KAAKqjC,aAAa1vC,EAAKvC,OAEhC,IAAK,gBACH,OAAO4O,KAAKqjC,aAAa1vC,EAAKqG,UAEhC,IAAK,kBACH,OAAOrG,EAAKgU,SAASy7B,OAAM,SAAAqB,GAAO,OAAI,EAAKpB,aAAaoB,MAE1D,IAAK,uBACH,MAAyB,MAAlB9wC,EAAK+wC,SAEd,IAAK,0BACL,IAAK,qBACH,OAAO1kC,KAAKqjC,aAAa1vC,EAAKpC,YAEhC,IAAK,mBACL,IAAK,2BACH,OAAQizC,EAEV,QACE,OAAO,KAjpDH,mCAqpDG7wC,GAAqB,IAAfmhC,EAAe,wDAChC,MAAkB,uBAAdnhC,EAAKwU,KACP,gDAA0BnI,KAAK2kC,oBAAoBhxC,GAAOmhC,GAE1D,gDAA0BnhC,EAAMmhC,KAzpD1B,uCA6pDO8P,EAAUC,EAAkB/P,GAC3C,IAAK,IAAIj6B,EAAI,EAAGA,EAAI+pC,EAASlrC,OAAQmB,IAAK,CACxC,IAAMkC,EAAO6nC,EAAS/pC,GAEsB,wBAA/B,MAARkC,OAAe,EAASA,EAAKoL,QAChCy8B,EAAS/pC,GAAKmF,KAAK2kC,oBAAoB5nC,IAI3C,2DAA8B6nC,EAAUC,EAAkB/P,KAtqDlD,uCAyqDO8P,EAAUE,GACzB,IAAK,IAAIjqC,EAAI,EAAGA,EAAI+pC,EAASlrC,OAAQmB,IAAK,CACxC,IAAIkqC,EAEEhoC,EAAO6nC,EAAS/pC,GAElBkC,GAAsB,uBAAdA,EAAKoL,QAAiE,OAA7B48B,EAAchoC,EAAK81B,YAAiB,EAASkS,EAAY3R,iBAAmBwR,EAASlrC,OAAS,IAAMorC,IACvJ9kC,KAAKqY,MAAMtb,EAAKq9B,eAAerzB,MAAO2S,GAAWoC,mBAIrD,OAAO8oB,IAprDC,qCAurDKI,EAAOC,EAAcC,EAASrR,GAC3C,IAAMlgC,EAAO,EAAH,gDAAwBqxC,EAAOC,EAAcC,EAASrR,GAMhE,OAJIoR,IAAiBjlC,KAAKwH,MAAM29B,wBAC9BnlC,KAAKolC,iBAAiBzxC,EAAKgU,UAGtBhU,IA9rDC,gCAisDAoJ,GACR,GAAkB,uBAAdA,EAAKoL,KAA+B,8BADvBzN,EACuB,iCADvBA,EACuB,kBACtC,gEAAuBqC,GAAvB,OAAgCrC,OAnsD1B,yCAusDS/G,GAKjB,OAJIqM,KAAKiT,MAAM5c,EAAM4L,SACnBtO,EAAKymC,eAAiBp6B,KAAKo8B,2BAG7B,sDAAgCzoC,KA5sDxB,gDA+sDgBA,GAKxB,OAJIqM,KAAKiT,MAAM5c,EAAM4L,SACnBtO,EAAKymC,eAAiBp6B,KAAKo8B,2BAG7B,6DAAuCzoC,KAptD/B,sCAwtDR,OAAOqM,KAAKs4B,aAAa,MAAlB,iCAAAt4B,MAAA,KAAAA,QAxtDC,wCA4tDR,OAAOA,KAAKiT,MAAM5c,EAAM4L,QAAjB,mCAAAjC,MAAA,KAAAA,QA5tDC,6CA+tDazC,GACrB,OAAQyC,KAAKiT,MAAM5c,EAAM4L,QAAlB,0DAAyD1E,KAhuDxD,kCAmuDEa,GACV,MAAsB,eAAfA,EAAM+J,MAAwC,SAAf/J,EAAM7C,OApuDpC,sCAuuDMk4B,EAAWl2B,EAAQ2xB,EAAaD,EAASj4B,EAAe08B,GAatE,GAZIn2B,EAAOugC,UACT99B,KAAK02B,WAAWn5B,EAAOugC,SAAS/2B,cAG3BxJ,EAAOugC,SAEV99B,KAAKs4B,aAAa,OACpB/6B,EAAOq2B,eAAiB5zB,KAAK85B,qCAG/B,mDAAsBrG,EAAWl2B,EAAQ2xB,EAAaD,EAASj4B,EAAe08B,GAE1En2B,EAAOrH,QAAUc,EAAe,CAClC,IAAMd,EAASqH,EAAOrH,OAElBA,EAAOwD,OAAS,GAAKsG,KAAKqlC,YAAYnvC,EAAO,KAC/C8J,KAAKqY,MAAM9a,EAAOwJ,MAAO2S,GAAW+B,mCAEjC,GAAoB,qBAAhBle,EAAO4K,MAA+BnR,GAAiBuG,EAAOnM,MAAM8E,OAAQ,CACrF,IAAMA,EAASqH,EAAOnM,MAAM8E,OAExBA,EAAOwD,OAAS,GAAKsG,KAAKqlC,YAAYnvC,EAAO,KAC/C8J,KAAKqY,MAAM9a,EAAOwJ,MAAO2S,GAAW+B,iCA9vDhC,6CAmwDagY,EAAWl2B,EAAQ2xB,EAAaD,GACjD1xB,EAAOugC,UACT99B,KAAK02B,WAAWn5B,EAAOugC,SAAS/2B,cAG3BxJ,EAAOugC,SAEV99B,KAAKs4B,aAAa,OACpB/6B,EAAOq2B,eAAiB5zB,KAAK85B,qCAG/B,0DAA6BrG,EAAWl2B,EAAQ2xB,EAAaD,KA9wDrD,sCAixDMt7B,GAOd,GANA,mDAAsBA,GAElBA,EAAKkK,YAAcmC,KAAKs4B,aAAa,OACvC3kC,EAAK2xC,oBAAsBtlC,KAAKo9B,uCAG9Bp9B,KAAK+6B,aAAa,cAAe,CACnC/6B,KAAK22B,OACL,IAAM4O,EAAc5xC,EAAK+oC,WAAa,GAEtC,EAAG,CACD,IAAM/oC,EAAOqM,KAAKw0B,YAClB7gC,EAAKmJ,GAAKkD,KAAKw8B,+BAA8B,GAEzCx8B,KAAKs4B,aAAa,KACpB3kC,EAAKigC,eAAiB5zB,KAAKo9B,sCAE3BzpC,EAAKigC,eAAiB,KAGxB2R,EAAYzvC,KAAKkK,KAAKy0B,WAAW9gC,EAAM,0BAChCqM,KAAK62B,IAAIxgC,EAAM0L,WAvyDlB,8CA2yDcxE,GACtB,2DAA8BA,GAC9B,IAAMrH,EAAS8J,KAAKwlC,6BAA6BjoC,GAEjD,GAAIrH,EAAOwD,OAAS,EAAG,CACrB,IAAM0E,EAAQlI,EAAO,GAEjB8J,KAAKqlC,YAAYjnC,IAA0B,QAAhBb,EAAOtG,KACpC+I,KAAKqY,MAAMja,EAAM2I,MAAO2S,GAAWkB,2BAC1B5a,KAAKqlC,YAAYjnC,IAC1B4B,KAAKqY,MAAMja,EAAM2I,MAAO2S,GAAW4B,8BArzD/B,wCA0zDQ3nB,EAAM8xC,GACtB,IAAM3H,EAAW99B,KAAK+9B,oBAChB1rC,EAAM,EAAH,mDAA2BsB,EAAM8xC,GAE1C,OADA9xC,EAAKmqC,SAAWA,EACTzrC,IA9zDC,wCAi0DQs4B,EAAMuJ,EAAUzhB,EAAUyc,EAAaD,EAAS0F,EAAWC,EAAYf,GAMvF,IAAID,EALAjJ,EAAKmT,UACP99B,KAAK02B,WAAW/L,EAAKmT,SAAS/2B,cAGzB4jB,EAAKmT,SAGR99B,KAAKs4B,aAAa,OAAS1D,IAC7BhB,EAAiB5zB,KAAK85B,oCACjB95B,KAAKiT,MAAM5c,EAAMwL,SAAS7B,KAAK02B,cAGtC,qDAAwB/L,EAAMuJ,EAAUzhB,EAAUyc,EAAaD,EAAS0F,EAAWC,EAAYf,GAE3FD,KACDjJ,EAAKv5B,OAASu5B,GAAMiJ,eAAiBA,KAj1DhC,mDAq1DmBx1B,GAwB3B,OAvBI4B,KAAK62B,IAAIxgC,EAAM+L,YACE,eAAfhE,EAAM+J,MACRnI,KAAKqY,MAAMja,EAAM2I,MAAO2S,GAAW2B,wBAGjCrb,KAAKqlC,YAAYjnC,IACnB4B,KAAKqY,MAAMja,EAAM2I,MAAO2S,GAAWgC,2BAGrCtd,EAAM42B,UAAW,GAGfh1B,KAAKiT,MAAM5c,EAAM4L,OACnB7D,EAAMg8B,eAAiBp6B,KAAKo8B,0BACnBp8B,KAAKqlC,YAAYjnC,IAC1B4B,KAAKqY,MAAMja,EAAM2I,MAAO2S,GAAW8B,6BAGjCxb,KAAKiT,MAAM5c,EAAMwM,KAAO7C,KAAKqlC,YAAYjnC,IAC3C4B,KAAKqY,MAAMja,EAAM2I,MAAO2S,GAAWkC,oBAGrC5b,KAAKq6B,iBAAiBj8B,GACfA,IA72DC,wCAg3DQ81B,EAAUzhB,EAAUizB,GACpC,IAAM/xC,EAAO,EAAH,mDAA2BugC,EAAUzhB,EAAUizB,GAMzD,MAJkB,sBAAd/xC,EAAKwU,MAAgCxU,EAAKymC,gBAAkBzmC,EAAK4pC,MAAMx2B,MAAQpT,EAAKymC,eAAerzB,OACrG/G,KAAKqY,MAAM1kB,EAAKymC,eAAerzB,MAAO2S,GAAWmC,uBAG5CloB,IAv3DC,+CA03DeA,GACvB,OAAK+oB,GAAkB/oB,GAIhBipB,GAAqB5c,KAAKwH,OAH/B,4DAAsC7T,KA53DhC,gDAk4DgBA,EAAMgyC,EAAWx9B,EAAMy9B,GAC/CD,EAAUE,MAAQnpB,GAAkB/oB,GAAQqM,KAAKw8B,+BAA8B,GAAM,GAAQx8B,KAAK25B,kBAClG35B,KAAK8lC,UAAUH,EAAUE,MAAOD,EAlrEjBvK,GAmrEf1nC,EAAKuhC,WAAWp/B,KAAKkK,KAAKy0B,WAAWkR,EAAWx9B,MAr4DxC,uDAw4DuBxU,GAC/BA,EAAKgpB,WAAa,QAClB,IAAI1lB,EAAO,KAQX,GANI+I,KAAKiT,MAAM5c,EAAM0P,SACnB9O,EAAO,SACE+I,KAAK+6B,aAAa,UAC3B9jC,EAAO,QAGLA,EAAM,CACR,IAAMmpC,EAAKpgC,KAAK0+B,YAEH,SAATznC,GAAmBmpC,EAAGj4B,OAAS9R,EAAMwN,MACvC7D,KAAK02B,WAAW0J,EAAGr5B,QAGjB6V,GAAqBwjB,IAAOA,EAAGj4B,OAAS9R,EAAMmL,QAAU4+B,EAAGj4B,OAAS9R,EAAMwN,QAC5E7D,KAAK22B,OACLhjC,EAAKgpB,WAAa1lB,GAItB,2EAA8CtD,KA/5DtC,2CAk6DWA,GACnB,IAAMgyC,EAAY3lC,KAAKw0B,YACjBuR,EAAgB/lC,KAAKwH,MAAMT,MAC3Bi/B,EAAahmC,KAAKimC,wBACpBC,EAAoB,KAEA,eAApBF,EAAW79B,OACW,SAApB69B,EAAWzqC,KACb2qC,EAAoB,OACS,WAApBF,EAAWzqC,OACpB2qC,EAAoB,WAIxB,IAAI1B,GAAY,EAEhB,GAAIxkC,KAAK+6B,aAAa,QAAU/6B,KAAKmmC,sBAAsB,MAAO,CAChE,IAAMC,EAAWpmC,KAAK25B,iBAAgB,GAEZ,OAAtBuM,GAA+BlmC,KAAKiT,MAAM5c,EAAMkF,OAAUyE,KAAKwH,MAAMW,KAAKlI,SAK5E0lC,EAAUU,SAAWL,EACrBL,EAAUhpB,WAAa,KACvBgpB,EAAUE,MAAQ7lC,KAAK25B,oBANvBgM,EAAUU,SAAWD,EACrBT,EAAUhpB,WAAaupB,EACvBP,EAAUE,MAAQO,EAASE,gBAMxB,GAA0B,OAAtBJ,IAA+BlmC,KAAKiT,MAAM5c,EAAMkF,OAASyE,KAAKwH,MAAMW,KAAKlI,SAClF0lC,EAAUU,SAAWrmC,KAAK25B,iBAAgB,GAC1CgM,EAAUhpB,WAAaupB,EAEnBlmC,KAAK46B,cAAc,MACrB+K,EAAUE,MAAQ7lC,KAAK25B,mBAEvB6K,GAAY,EACZmB,EAAUE,MAAQF,EAAUU,SAASC,eAElC,CACL,GAAwB,kBAApBN,EAAW79B,KACb,MAAMnI,KAAKqY,MAAMstB,EAAU5+B,MAAOmC,EAAcyC,sBAAuBq6B,EAAW50C,OAGpFozC,GAAY,EACZmB,EAAUU,SAAWL,EACrBL,EAAUhpB,WAAa,KACvBgpB,EAAUE,MAAQF,EAAUU,SAASC,UAGvC,IAAMC,EAAmB7pB,GAAkB/oB,GACrC6yC,EAAwB9pB,GAAkBipB,GAE5CY,GAAoBC,GACtBxmC,KAAKqY,MAAM0tB,EAAersB,GAAWmB,sCAGnC0rB,GAAoBC,IACtBxmC,KAAKs9B,kBAAkBqI,EAAUE,MAAMtqC,KAAMoqC,EAAUE,MAAM9+B,OAAO,IAGlEy9B,GAAc+B,GAAqBC,GACrCxmC,KAAKymC,kBAAkBd,EAAUE,MAAMtqC,KAAMoqC,EAAU5+B,OAAO,GAAM,GAGtE/G,KAAK8lC,UAAUH,EAAUE,MAAO,mBAhxEjBxK,GAixEf1nC,EAAKuhC,WAAWp/B,KAAKkK,KAAKy0B,WAAWkR,EAAW,sBAn+DxC,yCAu+DR,OAAQ3lC,KAAKwH,MAAMW,MACjB,KAAK9R,EAAM+O,MACT,OAAOpF,KAAK25B,iBAAgB,GAE9B,QACE,+DA5+DI,0CAg/DUhmC,EAAM+yC,GACxB,IAAMzvC,EAAOtD,EAAKsD,KAEL,QAATA,GAA2B,QAATA,GAAkB+I,KAAKs4B,aAAa,OACxD3kC,EAAKigC,eAAiB5zB,KAAK85B,qCAG7B,uDAA0BnmC,EAAM+yC,KAv/DxB,iCA0/DC9C,EAAM3sC,GACf,8CAAiB2sC,EAAM3sC,GAEnB+I,KAAKiT,MAAM5c,EAAM4L,SACnB2hC,EAAK9mC,GAAGs9B,eAAiBp6B,KAAKo8B,0BAC9Bp8B,KAAKq6B,iBAAiBuJ,EAAK9mC,OA//DrB,wDAmgEwBnJ,EAAMnB,GACtC,GAAIwN,KAAKiT,MAAM5c,EAAM4L,OAAQ,CAC3B,IAAMq8B,EAAwBt+B,KAAKwH,MAAM+2B,mBACzCv+B,KAAKwH,MAAM+2B,oBAAqB,EAChC5qC,EAAKwmC,WAAan6B,KAAKo8B,0BACvBp8B,KAAKwH,MAAM+2B,mBAAqBD,EAGlC,4EAA+C3qC,EAAMnB,KA3gE7C,8CA+gER,OAAOwN,KAAKiT,MAAM5c,EAAM4L,QAAjB,yCAAAjC,MAAA,KAAAA,QA/gEC,uCAkhEO6zB,EAAqB8S,EAAgB7E,GAAkB,IAClE8E,EAGAlR,EAJkE,OAGlEluB,EAAQ,KAGZ,GAAIxH,KAAKiJ,UAAU,SAAWjJ,KAAKiT,MAAM5c,EAAM83B,cAAgBnuB,KAAKs4B,aAAa,MAAO,CAGtF,GAFA9wB,EAAQxH,KAAKwH,MAAMrI,UACnBu2B,EAAM11B,KAAKgiC,UAAS,gEAA6BnO,EAAqB8S,EAAgB7E,KAAmBt6B,IAChGsM,MAAO,OAAO4hB,EAAI/hC,KAH2D,IAKpFwhB,EACEnV,KAAKwH,MADP2N,QAGEA,EAAQA,EAAQzb,OAAS,KAAO+a,EAAQqZ,OAC1C3Y,EAAQzb,QAAU,EACTyb,EAAQA,EAAQzb,OAAS,KAAO+a,EAAQuZ,SACjD7Y,EAAQzb,QAAU,GAItB,IAAqB,OAAfktC,EAAOlR,QAAe,EAASkR,EAAK9yB,QAAU9T,KAAKs4B,aAAa,KAAM,CAC1E,IAAIuO,EAAOC,EAGPlT,EADJpsB,EAAQA,GAASxH,KAAKwH,MAAMrI,QAE5B,IAAMmD,EAAQtC,KAAKgiC,UAAS,SAAA+E,GAC1B,IAAIC,EAEJpT,EAAiB,EAAKkG,oCACtB,IAAMmN,EAAkB,EAAK1F,iCAAiC3N,GAAgB,WAC5E,IAAMmO,EAAS,EAAH,4CAA0BlO,EAAqB8S,EAAgB7E,GAE3E,OADA,EAAKoF,2BAA2BnF,EAAQnO,GACjCmO,KAGoB,4BAAzBkF,EAAgB9+B,OAA0F,OAAlD6+B,EAAwBC,EAAgBpU,YAAiB,EAASmU,EAAsB5T,gBAClJ2T,IAGF,IAAMhqC,EAAO,EAAKoqC,8BAA8BF,GAGhD,OAFAlqC,EAAK62B,eAAiBA,EACtB,EAAKsT,2BAA2BnqC,EAAM62B,GAC/BqT,IACNz/B,GACCy/B,EAAkB,KAEtB,GAAI3kC,EAAM3O,MAAgE,4BAAxDqM,KAAKmnC,8BAA8B7kC,EAAM3O,MAAMwU,KAAoC,CACnG,IAAK7F,EAAMwR,QAAUxR,EAAM8kC,QAKzB,OAJI9kC,EAAM3O,KAAK+I,OACbsD,KAAKqY,MAAMub,EAAe7sB,MAAO2S,GAAW4C,iDAGvCha,EAAM3O,KAGfszC,EAAkB3kC,EAAM3O,KAG1B,GAAqB,OAAhBkzC,EAAQnR,QAAe,EAASmR,EAAMlzC,KAEzC,OADAqM,KAAKwH,MAAQkuB,EAAIuM,UACVvM,EAAI/hC,KAGb,GAAIszC,EAEF,OADAjnC,KAAKwH,MAAQlF,EAAM2/B,UACZgF,EAGT,GAAqB,OAAhBH,EAAQpR,QAAe,EAASoR,EAAMO,OAAQ,MAAM3R,EAAI5hB,MAC7D,GAAIxR,EAAM+kC,OAAQ,MAAM/kC,EAAMwR,MAC9B,MAAM9T,KAAKqY,MAAMub,EAAe7sB,MAAO2S,GAAW2C,mCAGpD,2DAA8BwX,EAAqB8S,EAAgB7E,KA5lE3D,iCA+lECnuC,GAAM,WACf,GAAIqM,KAAKiT,MAAM5c,EAAM4L,OAAQ,CAC3B,IAAM8/B,EAAS/hC,KAAKgiC,UAAS,WAC3B,IAAM1D,EAAwB,EAAK92B,MAAM+2B,mBACzC,EAAK/2B,MAAM+2B,oBAAqB,EAChC,IAAM3E,EAAW,EAAKpF,YAHW,EAIW,EAAK0F,uCAJhB,SAQjC,OAJCN,EAASQ,eAJuB,KAIPzmC,EAAK6lC,UAJE,KAKjC,EAAKhyB,MAAM+2B,mBAAqBD,EAC5B,EAAKwC,sBAAsB,EAAKpK,aAC/B,EAAKzjB,MAAM5c,EAAMiM,QAAQ,EAAKo0B,aAC5BkD,KAET,GAAImI,EAAOsF,OAAQ,OAAO,KACtBtF,EAAOjuB,QAAO9T,KAAKwH,MAAQu6B,EAAOE,WACtCtuC,EAAKwmC,WAAa4H,EAAOpuC,KAAKymC,eAAiBp6B,KAAKy0B,WAAWsN,EAAOpuC,KAAM,kBAAoB,KAGlG,qDAAwBA,KAhnEhB,yCAonER,OAAOqM,KAAKiT,MAAM5c,EAAM4L,QAAjB,oCAAAjC,MAAA,KAAAA,QApnEC,iDAunEiBrM,EAAMuC,IACmC,IAA9D8J,KAAKwH,MAAMo7B,0BAA0B3pB,QAAQtlB,EAAKoT,OACpDpT,EAAKuC,OAASA,EAEd,8DAAiCvC,EAAMuC,KA3nEjC,kCA+nEEvC,EAAM2zC,EAAiBC,GACjC,IAAIA,IAAiF,IAA9DvnC,KAAKwH,MAAMo7B,0BAA0B3pB,QAAQtlB,EAAKoT,OAAzE,CAIA,IAAK,IAAIlM,EAAI,EAAGA,EAAIlH,EAAKuC,OAAOwD,OAAQmB,IAClCmF,KAAKqlC,YAAY1xC,EAAKuC,OAAO2E,KAAOA,EAAI,GAC1CmF,KAAKqY,MAAM1kB,EAAKuC,OAAO2E,GAAGkM,MAAO2S,GAAWiC,sBAIhD,uDAA4BzgB,cA1oEpB,yDA6oEyBssC,GACjC,6EAAgDA,IAAkE,IAApDxnC,KAAKwH,MAAM26B,UAAUlpB,QAAQjZ,KAAKwH,MAAMT,UA9oE9F,sCAipEMouB,EAAMjB,EAAUzhB,EAAU2iB,GAAS,WACjD,GAAkB,eAAdD,EAAKhtB,MAAuC,UAAdgtB,EAAK55B,OAAgE,IAA5CyE,KAAKwH,MAAM26B,UAAUlpB,QAAQib,GAAkB,CACxGl0B,KAAK22B,OACL,IAAMhjC,EAAOqM,KAAK4yB,YAAYsB,EAAUzhB,GACxC9e,EAAKgF,OAASw8B,EACdxhC,EAAKuH,UAAY8E,KAAKynC,6BAA6BpxC,EAAMyL,QAAQ,GACjEqzB,EAAOn1B,KAAKy0B,WAAW9gC,EAAM,uBACxB,GAAkB,eAAdwhC,EAAKhtB,MAAuC,UAAdgtB,EAAK55B,MAAoByE,KAAKs4B,aAAa,KAAM,CACxF,IAAM9wB,EAAQxH,KAAKwH,MAAMrI,QACnBmD,EAAQtC,KAAKgiC,UAAS,SAAA+E,GAAK,OAAI,EAAKW,kCAAkCxT,EAAUzhB,IAAas0B,MAASv/B,GAC5G,IAAKlF,EAAMwR,QAAUxR,EAAM8kC,QAAS,OAAO9kC,EAAM3O,KACjD,IAAMouC,EAAS/hC,KAAKgiC,UAAS,+DAA4B7M,EAAMjB,EAAUzhB,EAAU2iB,KAAU5tB,GAC7F,GAAIu6B,EAAOpuC,OAASouC,EAAOjuB,MAAO,OAAOiuB,EAAOpuC,KAEhD,GAAI2O,EAAM3O,KAER,OADAqM,KAAKwH,MAAQlF,EAAM2/B,UACZ3/B,EAAM3O,KAGf,GAAIouC,EAAOpuC,KAET,OADAqM,KAAKwH,MAAQu6B,EAAOE,UACbF,EAAOpuC,KAGhB,MAAM2O,EAAMwR,OAASiuB,EAAOjuB,MAG9B,0DAA6BqhB,EAAMjB,EAAUzhB,EAAU2iB,KA5qE/C,qCA+qEKD,EAAMjB,EAAUzhB,EAAU2iB,EAASuS,GAAgB,WAChE,GAAI3nC,KAAKiT,MAAM5c,EAAMgM,cAAgBrC,KAAK4nC,sBAAuB,CAG/D,GAFAD,EAAetS,qBAAsB,EAEjCD,EAEF,OADAuS,EAAepS,MAAO,EACfJ,EAGTn1B,KAAK22B,OACL,IAAMhjC,EAAOqM,KAAK4yB,YAAYsB,EAAUzhB,GAMxC,OALA9e,EAAKgF,OAASw8B,EACdxhC,EAAKk0C,cAAgB7nC,KAAKo9B,sCAC1Bp9B,KAAKm3B,OAAO9gC,EAAMwL,QAClBlO,EAAKuH,UAAY8E,KAAKynC,6BAA6BpxC,EAAMyL,QAAQ,GACjEnO,EAAKqhC,UAAW,EACTh1B,KAAK8nC,qBAAqBn0C,GAAM,GAClC,IAAKyhC,GAAWp1B,KAAK+nC,oBAAsB/nC,KAAKs4B,aAAa,KAAM,CACxE,IAAM3kC,EAAOqM,KAAK4yB,YAAYsB,EAAUzhB,GACxC9e,EAAKgF,OAASw8B,EACd,IAAM4M,EAAS/hC,KAAKgiC,UAAS,WAK3B,OAJAruC,EAAKk0C,cAAgB,EAAKG,+CAC1B,EAAK7Q,OAAO9gC,EAAMwL,QAClBlO,EAAKuH,UAAY,EAAKusC,6BAA6BpxC,EAAMyL,QAAQ,GAC7D6lC,EAAetS,sBAAqB1hC,EAAKqhC,UAAW,GACjD,EAAK8S,qBAAqBn0C,EAAMg0C,EAAetS,wBAGxD,GAAI0M,EAAOpuC,KAET,OADIouC,EAAOjuB,QAAO9T,KAAKwH,MAAQu6B,EAAOE,WAC/BF,EAAOpuC,KAIlB,yDAA4BwhC,EAAMjB,EAAUzhB,EAAU2iB,EAASuS,KAjtEvD,wCAotEQh0C,GAAM,WAClBs0C,EAAQ,KAERjoC,KAAK+nC,oBAAsB/nC,KAAKs4B,aAAa,OAC/C2P,EAAQjoC,KAAKgiC,UAAS,kBAAM,EAAKgG,kDAAgDr0C,MAGnFA,EAAKk0C,cAAgBI,EACrB,qDAAwBt0C,KA5tEhB,wDA+tEwBugC,EAAUzhB,GAC1C,IAAM9e,EAAOqM,KAAK4yB,YAAYsB,EAAUzhB,GAExC,GADAzS,KAAKkoC,oBAAoBv0C,GACpBqM,KAAKmoC,WAAWx0C,GACrB,OAAOqM,KAAKooC,qBAAqBz0C,OAAMT,GAAW,KAnuE1C,4CAsuEYqT,GACpB,IAAMowB,EAAO32B,KAAK+S,MAAM8iB,WAAW71B,KAAKwH,MAAMgL,IAAM,GAEpD,GAAa,KAATjM,GAAwB,KAATowB,GAAe32B,KAAKwH,MAAM6gC,eAI3C,OAHAroC,KAAKwH,MAAM6gC,gBAAiB,EAC5BroC,KAAKwH,MAAMgL,KAAO,OAClBxS,KAAKsoC,YAIP,yDAA4B/hC,KAhvEpB,yCAmvESA,GACjB,IAAMowB,EAAO32B,KAAK+S,MAAM8iB,WAAW71B,KAAKwH,MAAMgL,IAAM,GAEvC,MAATjM,GAAyB,MAATowB,EAKpB,sDAAyBpwB,GAJvBvG,KAAKqkC,SAAShuC,EAAMuL,UAAW,KAvvEzB,oCA8vEIvO,EAAM/B,GAClB,IAAMi3C,EAAW,EAAH,+CAAuBl1C,EAAM/B,GAM3C,OAJI0O,KAAKwH,MAAM6gC,gBACbroC,KAAKqY,MAAMrY,KAAKwH,MAAMgL,IAAKkH,GAAW+C,yBAGjC8rB,IArwEC,yCAywER,GAAIvoC,KAAKiJ,UAAU,iBAAmBjJ,KAAKwoC,kBAQzC,OAPIxoC,KAAKwH,MAAM6gC,gBACbroC,KAAK02B,WAAW,KAAMhd,GAAW0B,mBAGnCpb,KAAKyoC,2BACLzoC,KAAKwH,MAAMgL,KAAOxS,KAAKwoC,uBACvBxoC,KAAKwH,MAAM6gC,gBAAiB,GAI9B,GAAIroC,KAAKwH,MAAM6gC,eAAf,CACE,IAAMrhC,EAAMhH,KAAK+S,MAAMkG,QAAQ,MAAOjZ,KAAKwH,MAAMgL,KAAO,GAExD,IAAa,IAATxL,EACF,MAAMhH,KAAKqY,MAAMrY,KAAKwH,MAAMgL,IAAM,EAAGtJ,EAAc6I,qBAGrD/R,KAAKwH,MAAMgL,IAAMxL,EAAM,OAIzB,uDA/xEQ,wCAwyER,IANgB,IAEdwL,EACExS,KAAKwH,MADPgL,IAEEk2B,EAA4B,EAEzB,CAAC,GAAI,GAAGlvB,SAASxZ,KAAK+S,MAAM8iB,WAAWrjB,EAAMk2B,KAClDA,IAGF,IAAMC,EAAM3oC,KAAK+S,MAAM8iB,WAAW6S,EAA4Bl2B,GACxDo2B,EAAM5oC,KAAK+S,MAAM8iB,WAAW6S,EAA4Bl2B,EAAM,GAEpE,OAAY,KAARm2B,GAAsB,KAARC,EACTF,EAA4B,EAG2D,iBAA5F1oC,KAAK+S,MAAMhY,MAAM2tC,EAA4Bl2B,EAAKk2B,EAA4Bl2B,EAAM,IAC/Ek2B,EAA4B,GAGzB,KAARC,GAAsB,KAARC,GACTF,IAxzED,iDAi0ER,IAAa,IAFD1oC,KAAK+S,MAAMkG,QAAQ,KAAMjZ,KAAKwH,MAAMgL,KAG9C,MAAMxS,KAAKqY,MAAMrY,KAAKwH,MAAMgL,IAAKtJ,EAAc6I,uBAl0EzC,+DAs0E+BS,EAt0E/B,GAy0EP,IAFDq2B,EAEC,EAFDA,SACAC,EACC,EADDA,WAEA9oC,KAAKqY,MAAM7F,EAAKkH,GAAWO,gCAAiC6uB,EAAYD,KA10EhE,qDA60EqBr2B,EA70ErB,GAg1EP,IAFDq2B,EAEC,EAFDA,SACAC,EACC,EADDA,WAEM7M,EAAa6M,EAAW,GAAGC,cAAgBD,EAAW/tC,MAAM,GAClEiF,KAAKqY,MAAM7F,EAAKkH,GAAWe,sBAAuBquB,EAAY7M,EAAY4M,KAl1ElE,uDAq1EuBr2B,EAr1EvB,GAw1EP,IAFDq2B,EAEC,EAFDA,SACAC,EACC,EADDA,WAEA9oC,KAAKqY,MAAM7F,EAAKkH,GAAWQ,wBAAyB4uB,EAAYD,KAz1ExD,4DA41E4Br2B,EA51E5B,GA81EP,IADDq2B,EACC,EADDA,SAEA7oC,KAAKqY,MAAM7F,EAAKkH,GAAWS,6BAA8B0uB,KA/1EjD,uDAk2EuBr2B,EAl2EvB,GAq2EP,IAFDq2B,EAEC,EAFDA,SACAG,EACC,EADDA,aAEA,OAAOhpC,KAAKqY,MAAM7F,EAAsB,OAAjBw2B,EAAwBtvB,GAAWW,uCAAyCX,GAAWU,wBAAyByuB,EAAUG,KAt2EzI,4DAy2E4Bx2B,EAz2E5B,GA62EP,IAHDq2B,EAGC,EAHDA,SACAI,EAEC,EAFDA,aACAH,EACC,EADDA,WAEIp1B,EAAU,KAEd,OAAQu1B,GACN,IAAK,UACL,IAAK,SACL,IAAK,SACHv1B,EAAUgG,GAAWY,wCACrB,MAEF,IAAK,SACH5G,EAAUgG,GAAWa,uCACrB,MAEF,QACE7G,EAAUgG,GAAWc,wCAGzB,OAAOxa,KAAKqY,MAAM7F,EAAKkB,EAASm1B,EAAUC,EAAYG,KA/3E9C,8DAk4E8Bz2B,EAl4E9B,GAq4EP,IAFDq2B,EAEC,EAFDA,SACAC,EACC,EADDA,WAEA9oC,KAAKqY,MAAM7F,EAAKkH,GAAWgB,+BAAgCmuB,EAAUC,KAt4E7D,yEAy4EyCt2B,EAz4EzC,GA24EP,IADDq2B,EACC,EADDA,SAEA7oC,KAAKqY,MAAM7F,EAAKkH,GAAWiB,0CAA2CkuB,KA54E9D,2CA+4EW,WACb3U,EAAWl0B,KAAKwH,MAAMT,MAEtBmiC,EAAY,kBAAM,EAAKj2B,MAAM5c,EAAM0L,QAAU,EAAKkR,MAAM5c,EAAMsL,SAEpE,OAAQ3B,KAAKwH,MAAMW,MACjB,KAAK9R,EAAMwK,IAEP,IAAMsoC,EAAUnpC,KAAK0yB,aAAa1yB,KAAKwH,MAAMpW,MAAO,kBAEpD,OAAI83C,IACK,CACL/gC,KAAM,SACNqK,IAAK22B,EAAQpiC,MACb3V,MAAO+3C,GAIJ,CACLhhC,KAAM,UACNqK,IAAK0hB,GAIX,KAAK79B,EAAM4K,OAEP,IAAMkoC,EAAUnpC,KAAK0yB,aAAa1yB,KAAKwH,MAAMpW,MAAO,iBAEpD,OAAI83C,IACK,CACL/gC,KAAM,SACNqK,IAAK22B,EAAQpiC,MACb3V,MAAO+3C,GAIJ,CACLhhC,KAAM,UACNqK,IAAK0hB,GAIX,KAAK79B,EAAMsP,MACX,KAAKtP,EAAMuP,OAEP,IAAMujC,EAAUnpC,KAAKopC,sBAErB,OAAIF,IACK,CACL/gC,KAAM,UACNqK,IAAK22B,EAAQpiC,MACb3V,MAAO+3C,GAIJ,CACLhhC,KAAM,UACNqK,IAAK0hB,GAIX,QACE,MAAO,CACL/rB,KAAM,UACNqK,IAAK0hB,MA/8EH,0CAq9ER,IAAM1hB,EAAMxS,KAAKwH,MAAMT,MAMvB,MAAO,CACLjK,GANSkD,KAAK25B,iBAAgB,GAO9B0P,KANWrpC,KAAK62B,IAAIxgC,EAAMwM,IAAM7C,KAAKspC,qBAAuB,CAC5DnhC,KAAM,OACNqK,UAz9EM,wDAi+EwBA,EAAK2C,EAASo0B,GAAc,IAE1DN,EACE9zB,EADF8zB,aAGmB,OAAjBA,GAIAA,IAAiBM,GACnBvpC,KAAKwpC,sCAAsCh3B,EAAK2C,KA3+E1C,yCA4/ER,IAVC,IAFD0zB,EAEC,EAFDA,SACAI,EACC,EADDA,aAEMQ,EAAY,IAAIjxC,IAChBkxC,EAAU,CACdC,eAAgB,GAChBC,cAAe,GACfC,cAAe,GACfC,iBAAkB,IAEhBC,GAAoB,GAEhB/pC,KAAKiT,MAAM5c,EAAMsL,SAAS,CAChC,GAAI3B,KAAK62B,IAAIxgC,EAAMkM,UAAW,CAC5BwnC,GAAoB,EACpB,MAGF,IAAMC,EAAahqC,KAAKw0B,YANQ,EAU5Bx0B,KAAKiqC,oBAFPntC,EAR8B,EAQ9BA,GACAusC,EAT8B,EAS9BA,KAEIP,EAAahsC,EAAGvB,KAEtB,GAAmB,KAAfutC,EAAJ,CAII,SAASxyB,KAAKwyB,IAChB9oC,KAAKkqC,+BAA+BptC,EAAGiK,MAAO,CAC5C8hC,WACAC,eAIAW,EAAUz3C,IAAI82C,IAChB9oC,KAAKmqC,iCAAiCrtC,EAAGiK,MAAO,CAC9C8hC,WACAC,eAIJW,EAAU7wC,IAAIkwC,GACd,IAAM3zB,EAAU,CACd0zB,WACAI,eACAH,cAIF,OAFAkB,EAAWltC,GAAKA,EAERusC,EAAKlhC,MACX,IAAK,UAEDnI,KAAKoqC,kCAAkCf,EAAK72B,IAAK2C,EAAS,WAC1D60B,EAAWX,KAAOA,EAAKj4C,MACvBs4C,EAAQC,eAAe7zC,KAAKkK,KAAKy0B,WAAWuV,EAAY,sBACxD,MAGJ,IAAK,SAEDhqC,KAAKoqC,kCAAkCf,EAAK72B,IAAK2C,EAAS,UAC1D60B,EAAWX,KAAOA,EAAKj4C,MACvBs4C,EAAQE,cAAc9zC,KAAKkK,KAAKy0B,WAAWuV,EAAY,qBACvD,MAGJ,IAAK,SAEDhqC,KAAKoqC,kCAAkCf,EAAK72B,IAAK2C,EAAS,UAC1D60B,EAAWX,KAAOA,EAAKj4C,MACvBs4C,EAAQG,cAAc/zC,KAAKkK,KAAKy0B,WAAWuV,EAAY,qBACvD,MAGJ,IAAK,UAED,MAAMhqC,KAAKwpC,sCAAsCH,EAAK72B,IAAK2C,GAG/D,IAAK,OAED,OAAQ8zB,GACN,IAAK,UACHjpC,KAAKqqC,yCAAyChB,EAAK72B,IAAK2C,GACxD,MAEF,IAAK,SACHnV,KAAKsqC,wCAAwCjB,EAAK72B,IAAK2C,GACvD,MAEF,QACEu0B,EAAQI,iBAAiBh0C,KAAKkK,KAAKy0B,WAAWuV,EAAY,yBAK/DhqC,KAAKiT,MAAM5c,EAAMsL,SACpB3B,KAAKm3B,OAAO9gC,EAAM0L,QAItB,MAAO,CACL2nC,UACAK,uBAzlFM,4CA6lFYQ,EAAoBT,EA7lFhC,GA+lFP,IADDjB,EACC,EADDA,SAEA,GAAkC,IAA9B0B,EAAmB7wC,OACrB,OAAOowC,EACF,GAAgC,IAA5BA,EAAiBpwC,OAC1B,OAAO6wC,EACF,GAAIT,EAAiBpwC,OAAS6wC,EAAmB7wC,OAAQ,CAC9D,IAAK,IAAI8wC,EAAK,EAAGA,EAAKD,EAAmB7wC,OAAQ8wC,IAAM,CACrD,IAAMrG,EAASoG,EAAmBC,GAClCxqC,KAAKyqC,mDAAmDtG,EAAOp9B,MAAO,CACpE8hC,aAIJ,OAAOiB,EAEP,IAAK,IAAIY,EAAM,EAAGA,EAAMZ,EAAiBpwC,OAAQgxC,IAAO,CACtD,IAAMvG,EAAS2F,EAAiBY,GAChC1qC,KAAKyqC,mDAAmDtG,EAAOp9B,MAAO,CACpE8hC,aAIJ,OAAO0B,IArnFD,mDA2nFP,IADD1B,EACC,EADDA,SAEA,GAAI7oC,KAAK46B,cAAc,MAAO,CAC5B,IAAK56B,KAAKiT,MAAM5c,EAAMkF,MACpB,MAAMyE,KAAK2qC,iCAAiC3qC,KAAKwH,MAAMT,MAAO,CAC5D8hC,WACAG,aAAc,OAJU,IAS1B53C,EACE4O,KAAKwH,MADPpW,MAWF,OATA4O,KAAK22B,OAES,YAAVvlC,GAAiC,WAAVA,GAAgC,WAAVA,GAAgC,WAAVA,GACrE4O,KAAK2qC,iCAAiC3qC,KAAKwH,MAAMT,MAAO,CACtD8hC,WACAG,aAAc53C,IAIXA,EAGT,OAAO,OAnpFC,mCAspFGuC,EAtpFH,GAypFP,WAFDk1C,EAEC,EAFDA,SACA+B,EACC,EADDA,QAEM3B,EAAejpC,KAAK6qC,0BAA0B,CAClDhC,aAEF7oC,KAAKm3B,OAAO9gC,EAAMmL,QAJjB,MAQGxB,KAAK8qC,gBAAgB,CACvBjC,WACAI,iBAJAS,EAND,EAMCA,QACAK,EAPD,EAOCA,kBAOF,OAFAp2C,EAAKo2C,kBAAoBA,EAEjBd,GACN,IAAK,UAIH,OAHAt1C,EAAKs1C,cAAe,EACpBt1C,EAAK+1C,QAAUA,EAAQC,eACvB3pC,KAAKm3B,OAAO9gC,EAAMsL,QACX3B,KAAKy0B,WAAW9gC,EAAM,mBAE/B,IAAK,SAIH,OAHAA,EAAKs1C,cAAe,EACpBt1C,EAAK+1C,QAAUA,EAAQE,cACvB5pC,KAAKm3B,OAAO9gC,EAAMsL,QACX3B,KAAKy0B,WAAW9gC,EAAM,kBAE/B,IAAK,SAMH,OALAA,EAAKs1C,cAAe,EACpBt1C,EAAK+1C,QAAU1pC,KAAK+qC,sBAAsBrB,EAAQG,cAAeH,EAAQI,iBAAkB,CACzFjB,aAEF7oC,KAAKm3B,OAAO9gC,EAAMsL,QACX3B,KAAKy0B,WAAW9gC,EAAM,kBAE/B,IAAK,SAGH,OAFAA,EAAK+1C,QAAUA,EAAQI,iBACvB9pC,KAAKm3B,OAAO9gC,EAAMsL,QACX3B,KAAKy0B,WAAW9gC,EAAM,kBAE/B,QAEI,IAAMs2B,EAAQ,WAGZ,OAFAt2B,EAAK+1C,QAAU,GACf,EAAKvS,OAAO9gC,EAAMsL,QACX,EAAK8yB,WAAW9gC,EAAM,mBAG/BA,EAAKs1C,cAAe,EACpB,IAAM+B,EAAWtB,EAAQC,eAAejwC,OAClCuxC,EAAUvB,EAAQE,cAAclwC,OAChCwxC,EAAUxB,EAAQG,cAAcnwC,OAChCyxC,EAAezB,EAAQI,iBAAiBpwC,OAE9C,GAAKsxC,GAAaC,GAAYC,GAAYC,EAEnC,IAAKH,GAAaC,EAMlB,KAAKA,IAAYC,GAAWF,GAAYG,EAAc,CAC3D,IAAK,IAAIC,EAAM,EAAGC,EAAwB3B,EAAQI,iBAAkBsB,EAAMC,EAAsB3xC,OAAQ0xC,IAAO,CAC7G,IAAMjH,EAASkH,EAAsBD,GACrCprC,KAAKqqC,yCAAyClG,EAAOp9B,MAAO,CAC1D8hC,WACAC,WAAY3E,EAAOrnC,GAAGvB,OAM1B,OAFA5H,EAAK+1C,QAAUA,EAAQC,eACvB3pC,KAAKm3B,OAAO9gC,EAAMsL,QACX3B,KAAKy0B,WAAW9gC,EAAM,mBACxB,IAAKq3C,IAAaE,GAAWD,GAAWE,EAAc,CAC3D,IAAK,IAAIG,EAAM,EAAGC,EAAyB7B,EAAQI,iBAAkBwB,EAAMC,EAAuB7xC,OAAQ4xC,IAAO,CAC/G,IAAMnH,EAASoH,EAAuBD,GACtCtrC,KAAKsqC,wCAAwCnG,EAAOp9B,MAAO,CACzD8hC,WACAC,WAAY3E,EAAOrnC,GAAGvB,OAM1B,OAFA5H,EAAK+1C,QAAUA,EAAQE,cACvB5pC,KAAKm3B,OAAO9gC,EAAMsL,QACX3B,KAAKy0B,WAAW9gC,EAAM,kBAK7B,OAHAqM,KAAKwrC,sCAAsCZ,EAAS,CAClD/B,aAEK5e,IA7BP,OAJAt2B,EAAK+1C,QAAU1pC,KAAK+qC,sBAAsBrB,EAAQG,cAAeH,EAAQI,iBAAkB,CACzFjB,aAEF7oC,KAAKm3B,OAAO9gC,EAAMsL,QACX3B,KAAKy0B,WAAW9gC,EAAM,kBAN7B,OAAOs2B,OAhtFP,+CAyvFet2B,GACvB,IAAMmJ,EAAKkD,KAAK25B,kBAMhB,OALAhmC,EAAKmJ,GAAKA,EACVnJ,EAAKgB,KAAOqL,KAAKyrC,aAAazrC,KAAKw0B,YAAa,CAC9CqU,SAAU/rC,EAAGvB,KACbqvC,QAAS9tC,EAAGiK,QAEP/G,KAAKy0B,WAAW9gC,EAAM,qBAhwFrB,oCAmwFI4hB,GACRvV,KAAKiT,MAAM5c,EAAMkF,OAA8B,OAArByE,KAAKwH,MAAMpW,OAAkBmkB,IAAalf,EAAMkF,MAA6E,cAArEyE,KAAK+S,MAAMhY,MAAMiF,KAAKwH,MAAMkL,aAAc1S,KAAKwH,MAAMqL,YACzI7S,KAAKwH,MAAM8N,aAAc,EAEzB,iDAAoBC,KAvwFd,4CA4wFR,IAAMohB,EAAO32B,KAAK0rC,iBAElB,GAAoC,KAAhC1rC,KAAK+S,MAAM8iB,WAAWc,GAAc,CACtC,IAAMgV,EAAY3rC,KAAK+S,MAAM8iB,WAAWc,EAAO,GAC/C,OAAqB,KAAdgV,GAAkC,KAAdA,EAG7B,OAAO,IAnxFC,oDAsxFoBh4C,GAC5B,MAAqB,uBAAdA,EAAKwU,KAAgCxU,EAAKpC,WAAaoC,MAvxFtD,GAAiBkK,IA+tM7B+tC,WAz/EgB,SAAA/tC,GAAU,+IAExB,OAAO6wB,KAFiB,uCAMxB,OAAO1uB,KAAKiT,MAAM5c,EAAMkF,QANA,qDAWxB,OADAyE,KAAK22B,QACG32B,KAAKiT,MAAM5c,EAAM8K,WAAanB,KAAKiT,MAAM5c,EAAMmL,SAAWxB,KAAKiT,MAAM5c,EAAMwN,OAAS7D,KAAKiT,MAAM5c,EAAMkM,WAAavC,KAAKiT,MAAM5c,EAAMsM,OAAS3C,KAAK6rC,2BAA6B7rC,KAAK4V,0BAXnK,sCAcVk2B,GACd,GAAK9rC,KAAKiT,MAAM5c,EAAMkF,MAAtB,CAIA,IAAMk2B,EAAWzxB,KAAKwH,MAAMpW,MAE5B,OAA4C,IAAxC06C,EAAiB7yB,QAAQwY,IAAoBzxB,KAAK+rC,WAAW/rC,KAAKgsC,6BAA6B/4C,KAAK+M,OAC/FyxB,OADT,KArBwB,uCA4BTwa,EAAUH,EAAkBI,EAAqB34B,GAChE,OAAS,CACP,IAAM2gB,EAAWl0B,KAAKwH,MAAMT,MACtB0qB,EAAWzxB,KAAKmsC,gBAAgBL,EAAiBtyC,OAA8B,MAAvB0yC,EAA8BA,EAAsB,KAClH,IAAKza,EAAU,MAEXD,GAAmBC,GACjBwa,EAASG,cACXpsC,KAAKqY,MAAM6b,EAAU5E,GAASO,gCAE9Boc,EAASG,cAAgB3a,GAGvBxgC,OAAOsB,eAAeC,KAAKy5C,EAAUxa,IACvCzxB,KAAKqY,MAAM6b,EAAU5E,GAASM,kBAAmB6B,GAGnDwa,EAASxa,IAAY,IAGI,MAAvBya,OAA8B,EAASA,EAAoB1yB,SAASiY,KACtEzxB,KAAKqY,MAAM6b,EAAU3gB,EAAeke,MAjDhB,yCAsDPx6B,GACjB,OAAQA,GACN,IAAK,cACL,IAAK,cACH,OAAO+I,KAAKiT,MAAM5c,EAAMsL,QAE1B,IAAK,wBACH,OAAO3B,KAAKiT,MAAM5c,EAAMmL,QAE1B,IAAK,oBACH,OAAOxB,KAAKiT,MAAM5c,EAAMiL,UAE1B,IAAK,4BACH,OAAOtB,KAAKs4B,aAAa,KAG7B,MAAM,IAAIzK,MAAM,iBAtEQ,kCAyEd52B,EAAMo1C,GAGhB,IAFA,IAAMtK,EAAS,IAEP/hC,KAAKssC,mBAAmBr1C,IAC9B8qC,EAAOjsC,KAAKu2C,KAGd,OAAOtK,IAhFiB,2CAmFL9qC,EAAMo1C,GACzB,OAAOld,GAAQnvB,KAAKusC,2BAA2Bt1C,EAAMo1C,GAAc,MApF3C,iDAuFCp1C,EAAMo1C,EAAcG,GAG7C,IAFA,IAAMzK,EAAS,IAGT/hC,KAAKssC,mBAAmBr1C,IADrB,CAKP,IAAMwtC,EAAU4H,IAEhB,GAAe,MAAX5H,EACF,OAKF,GAFA1C,EAAOjsC,KAAK2uC,IAERzkC,KAAK62B,IAAIxgC,EAAM0L,OAAnB,CAIA,GAAI/B,KAAKssC,mBAAmBr1C,GAC1B,MAOF,YAJIu1C,GACFxsC,KAAKm3B,OAAO9gC,EAAM0L,SAMtB,OAAOggC,IAtHiB,2CAyHL9qC,EAAMo1C,EAAcI,EAASC,GAC3CA,IACCD,EACFzsC,KAAKm3B,OAAO9gC,EAAM8K,UAElBnB,KAAKq+B,iBAAiB,MAI1B,IAAM0D,EAAS/hC,KAAK2sC,qBAAqB11C,EAAMo1C,GAQ/C,OANII,EACFzsC,KAAKm3B,OAAO9gC,EAAMiL,UAElBtB,KAAKq+B,iBAAiB,KAGjB0D,IA1IiB,0CA8IxB,IAAMpuC,EAAOqM,KAAKw0B,YAmBlB,OAlBAx0B,KAAKm3B,OAAO9gC,EAAMoP,SAClBzF,KAAKm3B,OAAO9gC,EAAMwL,QAEb7B,KAAKiT,MAAM5c,EAAM4K,SACpBjB,KAAKqY,MAAMrY,KAAKwH,MAAMT,MAAOuoB,GAAS+B,+BAGxC19B,EAAKqG,SAAWgG,KAAKi3B,gBACrBj3B,KAAKm3B,OAAO9gC,EAAMyL,QAEd9B,KAAK62B,IAAIxgC,EAAM8L,OACjBxO,EAAKi5C,UAAY5sC,KAAK6sC,mBAAkB,IAGtC7sC,KAAKs4B,aAAa,OACpB3kC,EAAKigC,eAAiB5zB,KAAK8sC,wBAGtB9sC,KAAKy0B,WAAW9gC,EAAM,kBAjKL,wCAoKRo5C,GAGhB,IAFA,IAAI3W,EAASp2B,KAAK25B,kBAEX35B,KAAK62B,IAAIxgC,EAAM8L,MAAM,CAC1B,IAAMxO,EAAOqM,KAAKy1B,gBAAgBW,GAClCziC,EAAK+xC,KAAOtP,EACZziC,EAAK4pC,MAAQv9B,KAAK25B,gBAAgBoT,GAClC3W,EAASp2B,KAAKy0B,WAAW9gC,EAAM,mBAGjC,OAAOyiC,IA9KiB,6CAkLxB,IAAMziC,EAAOqM,KAAKw0B,YAOlB,OANA7gC,EAAKq5C,SAAWhtC,KAAK6sC,mBAAkB,IAElC7sC,KAAK4V,yBAA2B5V,KAAKs4B,aAAa,OACrD3kC,EAAKigC,eAAiB5zB,KAAK8sC,wBAGtB9sC,KAAKy0B,WAAW9gC,EAAM,qBAzLL,+CA4LDs5C,GACvBjtC,KAAK22B,OACL,IAAMhjC,EAAOqM,KAAKy1B,gBAAgBwX,GAIlC,OAHAt5C,EAAKu5C,cAAgBD,EACrBt5C,EAAKymC,eAAiBp6B,KAAKmtC,uBAAsB,GACjDx5C,EAAKy5C,SAAU,EACRptC,KAAKy0B,WAAW9gC,EAAM,qBAlML,4CAsMxB,IAAMA,EAAOqM,KAAKw0B,YAElB,OADAx0B,KAAK22B,OACE32B,KAAKy0B,WAAW9gC,EAAM,gBAxML,yCA4MxB,IAAMA,EAAOqM,KAAKw0B,YASlB,OARAx0B,KAAKm3B,OAAO9gC,EAAM0P,SAEd/F,KAAKiT,MAAM5c,EAAMoP,SACnB9R,EAAK05C,SAAWrtC,KAAKstC,oBAErB35C,EAAK05C,SAAWrtC,KAAK6sC,mBAAkB,GAGlC7sC,KAAKy0B,WAAW9gC,EAAM,iBArNL,6CAyNxB,IAAMA,EAAOqM,KAAKw0B,YAIlB,OAHA7gC,EAAK4H,KAAOyE,KAAKutC,oBAAoB55C,EAAKoT,OAC1CpT,EAAK65C,WAAaxtC,KAAKytC,mBAAmBp3C,EAAMkP,UAChD5R,EAAKtC,QAAU2O,KAAKytC,mBAAmBp3C,EAAMwM,IACtC7C,KAAKy0B,WAAW9gC,EAAM,qBA7NL,iDAiOxB,GAAIqM,KAAKs4B,aAAa,KACpB,OAAOt4B,KAAK0tC,0BAlOU,8CAuOxB,IAAM/5C,EAAOqM,KAAKw0B,YAclB,OAZIx0B,KAAKs4B,aAAa,MAAQt4B,KAAKiT,MAAM5c,EAAM83B,aAC7CnuB,KAAK22B,OAEL32B,KAAK02B,aAGP/iC,EAAKuC,OAAS8J,KAAK2tC,qBAAqB,4BAA6B3tC,KAAK4tC,qBAAqB36C,KAAK+M,OAAO,GAAO,GAEvF,IAAvBrM,EAAKuC,OAAOwD,QACdsG,KAAKqY,MAAM1kB,EAAKoT,MAAOuoB,GAASU,qBAG3BhwB,KAAKy0B,WAAW9gC,EAAM,gCArPL,sDAyPxB,OAAIqM,KAAK0+B,YAAYv2B,OAAS9R,EAAM2O,QAClChF,KAAK22B,OACE32B,KAAK6tC,wBAGP,OA9PiB,sCAiQVC,EAAaC,GAC3B,IAAMC,EAAsBF,IAAgBz3C,EAAMiM,MAClDyrC,EAAUna,eAAiB5zB,KAAKiuC,2BAChCjuC,KAAKm3B,OAAO9gC,EAAMwL,QAClBksC,EAAUG,WAAaluC,KAAKmuC,kCAExBH,GAEOhuC,KAAKiT,MAAM66B,MADpBC,EAAU3T,eAAiBp6B,KAAKouC,qCAAqCN,MAxQ/C,uDA8QO,WAC/B,OAAO9tC,KAAKquC,iBAAiBh4C,EAAMyL,OAAQ,IAAI1E,KAAI,SAAAg1B,GAKjD,MAJqB,eAAjBA,EAAQjqB,MAA0C,gBAAjBiqB,EAAQjqB,MAA2C,kBAAjBiqB,EAAQjqB,MAA6C,iBAAjBiqB,EAAQjqB,MACjH,EAAKkQ,MAAM+Z,EAAQrrB,MAAOuoB,GAASiC,kCAAmCa,EAAQjqB,MAGzEiqB,OApRe,mDAyRnBpyB,KAAK62B,IAAIxgC,EAAM0L,QAClB/B,KAAKs6B,cA1RiB,6CA8RHrjC,EAAMtD,GAG3B,OAFAqM,KAAKsuC,gBAAgBj4C,EAAM4L,MAAOtO,GAClCqM,KAAKuuC,6BACEvuC,KAAKy0B,WAAW9gC,EAAMsD,KAjSL,wDAsSxB,OADA+I,KAAK22B,OACE32B,KAAK62B,IAAIxgC,EAAMkF,OAASyE,KAAKiT,MAAM5c,EAAM4L,SAtSxB,+CAySDtO,GACvB,GAAMqM,KAAKiT,MAAM5c,EAAM8K,WAAanB,KAAKwuC,YAAYxuC,KAAKyuC,gCAAgCx7C,KAAK+M,OAA/F,CAIAA,KAAKm3B,OAAO9gC,EAAM8K,UAClB,IAAMrE,EAAKkD,KAAK25B,kBAChB78B,EAAGs9B,eAAiBp6B,KAAKmtC,wBACzBntC,KAAKq6B,iBAAiBv9B,GACtBkD,KAAKm3B,OAAO9gC,EAAMiL,UAClB3N,EAAKu6C,WAAa,CAACpxC,GACnB,IAAMqL,EAAOnI,KAAK0uC,2BAGlB,OAFIvmC,IAAMxU,EAAKymC,eAAiBjyB,GAChCnI,KAAKuuC,6BACEvuC,KAAKy0B,WAAW9gC,EAAM,uBAvTL,uDA0TOA,EAAMg7C,GACjC3uC,KAAK62B,IAAIxgC,EAAM+L,YAAWzO,EAAKqhC,UAAW,GAC9C,IAAM4Z,EAAUj7C,EAEhB,GAAIqM,KAAKiT,MAAM5c,EAAMwL,SAAW7B,KAAKs4B,aAAa,KAAM,CAClDqW,GACF3uC,KAAKqY,MAAM1kB,EAAKoT,MAAOuoB,GAASyB,4BAGlC,IAAMxzB,EAASqxC,EAGf,OAFA5uC,KAAKsuC,gBAAgBj4C,EAAM4L,MAAO1E,GAClCyC,KAAKuuC,6BACEvuC,KAAKy0B,WAAWl3B,EAAQ,qBAE/B,IAAMqwB,EAAWghB,EACbD,IAAU/gB,EAAS+gB,UAAW,GAClC,IAAMxmC,EAAOnI,KAAK0uC,2BAGlB,OAFIvmC,IAAMylB,EAASwM,eAAiBjyB,GACpCnI,KAAKuuC,6BACEvuC,KAAKy0B,WAAW7G,EAAU,yBA7UX,0CAkVxB,IAAMj6B,EAAOqM,KAAKw0B,YAElB,GAAIx0B,KAAKiT,MAAM5c,EAAMwL,SAAW7B,KAAKs4B,aAAa,KAChD,OAAOt4B,KAAK6uC,uBAAuB,6BAA8Bl7C,GAGnE,GAAIqM,KAAKiT,MAAM5c,EAAM8O,MAAO,CAC1B,IAAMrI,EAAKkD,KAAKw0B,YAGhB,OAFAx0B,KAAK22B,OAED32B,KAAKiT,MAAM5c,EAAMwL,SAAW7B,KAAKs4B,aAAa,KACzCt4B,KAAK6uC,uBAAuB,kCAAmCl7C,IAEtEA,EAAKtB,IAAM2N,KAAK8uC,iBAAiBhyC,EAAI,OAC9BkD,KAAK+uC,iCAAiCp7C,GAAM,IAIvDqM,KAAKgvC,iBAAiBr7C,EAAM,CAAC,YAAa,CAAC,UAAW,WAAY,UAAW,YAAa,SAAU,UAAW27B,GAASgB,6BACxH,IAAM2e,EAAMjvC,KAAKkvC,yBAAyBv7C,GAE1C,OAAIs7C,IAIJjvC,KAAKmvC,kBAAkBx7C,GAAM,GACtBqM,KAAK+uC,iCAAiCp7C,IAAQA,EAAKg7C,aA5WlC,2CAgXxB,IAAMh7C,EAAOqM,KAAKw0B,YAElB,OADA7gC,EAAK+1C,QAAU1pC,KAAKovC,2BACbpvC,KAAKy0B,WAAW9gC,EAAM,mBAlXL,iDAsXxBqM,KAAKm3B,OAAO9gC,EAAMmL,QAClB,IAAMkoC,EAAU1pC,KAAKqvC,YAAY,cAAervC,KAAKsvC,kBAAkBr8C,KAAK+M,OAE5E,OADAA,KAAKm3B,OAAO9gC,EAAMsL,QACX+nC,IAzXiB,8CA+XxB,OAFA1pC,KAAK22B,OAED32B,KAAK62B,IAAIxgC,EAAMsN,SACV3D,KAAK+6B,aAAa,aAGvB/6B,KAAK+6B,aAAa,aACpB/6B,KAAK22B,SAGF32B,KAAKiT,MAAM5c,EAAM8K,YAItBnB,KAAK22B,SAEA32B,KAAKuvC,mBAIVvvC,KAAK22B,OACE32B,KAAKiT,MAAM5c,EAAMwP,UAlZA,mDAsZxB,IAAMlS,EAAOqM,KAAKw0B,YAGlB,OAFA7gC,EAAK4H,KAAOyE,KAAKutC,oBAAoB55C,EAAKoT,OAC1CpT,EAAK65C,WAAaxtC,KAAKwvC,sBAAsBn5C,EAAMwP,KAC5C7F,KAAKy0B,WAAW9gC,EAAM,qBAzZL,0CA6ZxB,IAAMA,EAAOqM,KAAKw0B,YA2BlB,OA1BAx0B,KAAKm3B,OAAO9gC,EAAMmL,QAEdxB,KAAKiT,MAAM5c,EAAMsN,UACnBhQ,EAAKg7C,SAAW3uC,KAAKwH,MAAMpW,MAC3B4O,KAAK22B,OACL32B,KAAKu5B,iBAAiB,aACbv5B,KAAK46B,cAAc,cAC5BjnC,EAAKg7C,UAAW,GAGlB3uC,KAAKm3B,OAAO9gC,EAAM8K,UAClBxN,EAAKwqC,cAAgBn+B,KAAKyvC,6BAC1B97C,EAAK+7C,SAAW1vC,KAAK46B,cAAc,MAAQ56B,KAAK2vC,cAAgB,KAChE3vC,KAAKm3B,OAAO9gC,EAAMiL,UAEdtB,KAAKiT,MAAM5c,EAAMsN,UACnBhQ,EAAKqhC,SAAWh1B,KAAKwH,MAAMpW,MAC3B4O,KAAK22B,OACL32B,KAAKm3B,OAAO9gC,EAAM+L,WACTpC,KAAK62B,IAAIxgC,EAAM+L,YACxBzO,EAAKqhC,UAAW,GAGlBrhC,EAAKymC,eAAiBp6B,KAAK4vC,iBAC3B5vC,KAAKs6B,YACLt6B,KAAKm3B,OAAO9gC,EAAMsL,QACX3B,KAAKy0B,WAAW9gC,EAAM,kBAxbL,yCA2bP,WACXA,EAAOqM,KAAKw0B,YAClB7gC,EAAKk8C,aAAe7vC,KAAK2tC,qBAAqB,oBAAqB3tC,KAAK8vC,wBAAwB78C,KAAK+M,OAAO,GAAM,GAClH,IAAI+vC,GAAsB,EACtBC,EAAkB,KA0BtB,OAzBAr8C,EAAKk8C,aAAajU,SAAQ,SAAAqU,GACxB,IAAIC,EAGF/nC,EACE8nC,EADF9nC,MAGE4nC,GAAgC,eAAT5nC,GAAkC,mBAATA,GAAwC,uBAATA,GAAiC8nC,EAAYjb,UAC9H,EAAK3c,MAAM43B,EAAYlpC,MAAOuoB,GAASqB,4BAGzCof,EAAsBA,GAAgC,uBAAT5nC,GAAiC8nC,EAAYjb,UAAqB,mBAAT7sB,EAEzF,eAATA,IAEFA,GADA8nC,EAAcA,EAAY7V,gBACPjyB,MAGrB,IAAMgoC,EAAqB,uBAAThoC,GAClB6nC,EAA0D,OAAvCE,EAAmBF,GAA2BE,EAAmBC,KAE5DA,GACtB,EAAK93B,MAAM43B,EAAYlpC,MAAOuoB,GAASkB,qCAGpCxwB,KAAKy0B,WAAW9gC,EAAM,iBAzdL,gDA4dA,MAIpBqM,KAAKwH,MAFA0sB,EAFe,EAEtBntB,MACA0L,EAHsB,EAGtBA,SAEIwnB,EAAOj6B,KAAK62B,IAAIxgC,EAAMkM,UACxB4F,EAAOnI,KAAK2vC,cACV3a,EAAWh1B,KAAK62B,IAAIxgC,EAAM+L,UAGhC,GAFgBpC,KAAK62B,IAAIxgC,EAAM4L,OAElB,CACX,IAAMmuC,EAAcpwC,KAAKy1B,gBAAgBttB,GACzCioC,EAAYpb,SAAWA,EAEL,oBAAd7sB,EAAKA,MAA+BA,EAAKyrB,gBAAyC,eAAvBzrB,EAAK6kC,SAAS7kC,MAG3EnI,KAAKqY,MAAMlQ,EAAKpB,MAAOuoB,GAASiB,yBAChC6f,EAAYtwC,MAAQqI,GAHpBioC,EAAYtwC,MAAQqI,EAAK6kC,SAM3BoD,EAAYrP,YAAc/gC,KAAK2vC,cAC/BxnC,EAAOnI,KAAKy0B,WAAW2b,EAAa,2BAC/B,GAAIpb,EAAU,CACnB,IAAMqb,EAAmBrwC,KAAKy1B,gBAAgBttB,GAC9CkoC,EAAiBjW,eAAiBjyB,EAClCA,EAAOnI,KAAKy0B,WAAW4b,EAAkB,kBAG3C,GAAIpW,EAAM,CACR,IAAMqW,EAAWtwC,KAAK4yB,YAAYsB,EAAUzhB,GAC5C69B,EAASlW,eAAiBjyB,EAC1BA,EAAOnI,KAAKy0B,WAAW6b,EAAU,cAGnC,OAAOnoC,IA/fiB,iDAmgBxB,IAAMxU,EAAOqM,KAAKw0B,YAIlB,OAHAx0B,KAAKm3B,OAAO9gC,EAAMwL,QAClBlO,EAAKymC,eAAiBp6B,KAAK2vC,cAC3B3vC,KAAKm3B,OAAO9gC,EAAMyL,QACX9B,KAAKy0B,WAAW9gC,EAAM,yBAvgBL,uDA0gBOwU,EAAMooC,GACrC,IAAM58C,EAAOqM,KAAKw0B,YASlB,MAPa,sBAATrsB,IACFxU,EAAK48C,WAAaA,EACdA,GAAUvwC,KAAK22B,OACnB32B,KAAK22B,QAGP32B,KAAKsuC,gBAAgBj4C,EAAMiM,MAAO3O,GAC3BqM,KAAKy0B,WAAW9gC,EAAMwU,KAphBL,+CAuhBD,WACjBxU,EAAOqM,KAAKw0B,YAgBlB,OAdA7gC,EAAKw1C,QAAW,WACd,OAAQ,EAAK3hC,MAAMW,MACjB,KAAK9R,EAAMwK,IACX,KAAKxK,EAAMyK,OACX,KAAKzK,EAAM4K,OACX,KAAK5K,EAAMsP,MACX,KAAKtP,EAAMuP,OACT,OAAO,EAAKqxB,gBAEd,QACE,MAAM,EAAKP,cAVD,GAcT12B,KAAKy0B,WAAW9gC,EAAM,mBAxiBL,mDA4iBxB,IAAMA,EAAOqM,KAAKw0B,YAElB,OADA7gC,EAAKw1C,QAAUnpC,KAAKwwC,eAAc,GAC3BxwC,KAAKy0B,WAAW9gC,EAAM,mBA9iBL,kDAkjBxB,OAAIqM,KAAKwH,MAAM0xB,OAAel5B,KAAK2vC,cACnC,gEAnjBwB,2DAujBxB,IAAMc,EAAczwC,KAAK0wC,sBAEzB,OAAI1wC,KAAK+6B,aAAa,QAAU/6B,KAAK4V,wBAC5B5V,KAAK2wC,yBAAyBF,GAE9BA,IA5jBe,4CAikBxB,OAAQzwC,KAAKwH,MAAMW,MACjB,KAAK9R,EAAMkF,KACX,KAAKlF,EAAM2P,MACX,KAAK3P,EAAMqP,MAEP,IAAMyC,EAAOnI,KAAKiT,MAAM5c,EAAM2P,OAAS,gBAAkBhG,KAAKiT,MAAM5c,EAAMqP,OAAS,gBA/mB7F,SAA6BtU,GAC3B,OAAQA,GACN,IAAK,MACH,MAAO,eAET,IAAK,UACH,MAAO,mBAET,IAAK,SACH,MAAO,kBAET,IAAK,QACH,MAAO,iBAET,IAAK,SACH,MAAO,kBAET,IAAK,SACH,MAAO,kBAET,IAAK,SACH,MAAO,kBAET,IAAK,SACH,MAAO,kBAET,IAAK,YACH,MAAO,qBAET,IAAK,UACH,MAAO,mBAET,QACE,QA8kByGw/C,CAAoB5wC,KAAKwH,MAAMpW,OAEpI,QAAa8B,IAATiV,GAAmD,KAA7BnI,KAAK6wC,oBAA4B,CACzD,IAAMl9C,EAAOqM,KAAKw0B,YAElB,OADAx0B,KAAK22B,OACE32B,KAAKy0B,WAAW9gC,EAAMwU,GAG/B,OAAOnI,KAAK6tC,uBAGhB,KAAKx3C,EAAM4K,OACX,KAAK5K,EAAMwK,IACX,KAAKxK,EAAMyK,OACX,KAAKzK,EAAMsP,MACX,KAAKtP,EAAMuP,OACT,OAAO5F,KAAK8wC,yBAEd,KAAKz6C,EAAMsN,QACT,GAAyB,MAArB3D,KAAKwH,MAAMpW,MAAe,CAC5B,IAAMuC,EAAOqM,KAAKw0B,YACZ8T,EAAYtoC,KAAK0+B,YAEvB,GAAI4J,EAAUngC,OAAS9R,EAAMwK,KAAOynC,EAAUngC,OAAS9R,EAAMyK,OAC3D,MAAMd,KAAK02B,aAIb,OADA/iC,EAAKw1C,QAAUnpC,KAAK+wC,kBACb/wC,KAAKy0B,WAAW9gC,EAAM,iBAG/B,MAEF,KAAK0C,EAAM+O,MACT,OAAOpF,KAAKgxC,qCAEd,KAAK36C,EAAM0P,QACT,OAAO/F,KAAKixC,mBAEd,KAAK56C,EAAMoP,QACT,OAAOzF,KAAKstC,oBAEd,KAAKj3C,EAAMmL,OACT,OAAOxB,KAAKwuC,YAAYxuC,KAAKkxC,sBAAsBj+C,KAAK+M,OAASA,KAAKmxC,oBAAsBnxC,KAAKoxC,qBAEnG,KAAK/6C,EAAM8K,SACT,OAAOnB,KAAKqxC,mBAEd,KAAKh7C,EAAMwL,OACT,OAAO7B,KAAKsxC,2BAEd,KAAKj7C,EAAMmM,UACT,OAAOxC,KAAKuxC,6BAGhB,MAAMvxC,KAAK02B,eA7nBa,iDAmoBxB,IAFA,IAAIvuB,EAAOnI,KAAKwxC,uBAERxxC,KAAK4V,yBAA2B5V,KAAK62B,IAAIxgC,EAAM8K,WACrD,GAAInB,KAAKiT,MAAM5c,EAAMiL,UAAW,CAC9B,IAAM3N,EAAOqM,KAAKy1B,gBAAgBttB,GAClCxU,EAAKotC,YAAc54B,EACnBnI,KAAKm3B,OAAO9gC,EAAMiL,UAClB6G,EAAOnI,KAAKy0B,WAAW9gC,EAAM,mBACxB,CACL,IAAMA,EAAOqM,KAAKy1B,gBAAgBttB,GAClCxU,EAAK89C,WAAatpC,EAClBxU,EAAK+9C,UAAY1xC,KAAK2vC,cACtB3vC,KAAKm3B,OAAO9gC,EAAMiL,UAClB6G,EAAOnI,KAAKy0B,WAAW9gC,EAAM,uBAIjC,OAAOwU,IAlpBiB,0CAqpBNu8B,GAClB,IAAM/wC,EAAOqM,KAAKw0B,YASlB,OARAx0B,KAAKu5B,iBAAiBmL,GACtB/wC,EAAK+wC,SAAWA,EAChB/wC,EAAKymC,eAAiBp6B,KAAK2xC,8BAEV,aAAbjN,GACF1kC,KAAK4xC,iCAAiCj+C,GAGjCqM,KAAKy0B,WAAW9gC,EAAM,oBA/pBL,uDAkqBOA,GAC/B,OAAQA,EAAKymC,eAAejyB,MAC1B,IAAK,cACL,IAAK,cACH,OAEF,QACEnI,KAAKqY,MAAM1kB,EAAKoT,MAAOuoB,GAAS4B,uBAzqBZ,yCA8qBxB,IAAMv9B,EAAOqM,KAAKw0B,YAClBx0B,KAAKu5B,iBAAiB,SACtB,IAAM4E,EAAgBn+B,KAAKw0B,YAG3B,OAFA2J,EAAc5iC,KAAOyE,KAAKutC,oBAAoBpP,EAAcp3B,OAC5DpT,EAAKwqC,cAAgBn+B,KAAKy0B,WAAW0J,EAAe,mBAC7Cn+B,KAAKy0B,WAAW9gC,EAAM,iBAnrBL,oDAsrBI,WACtB+wC,EAAW,CAAC,QAAS,SAAU,YAAYxrC,MAAK,SAAA24C,GAAE,OAAI,EAAK9W,aAAa8W,MAC9E,OAAOnN,EAAW1kC,KAAK8xC,oBAAoBpN,GAAY1kC,KAAK+6B,aAAa,SAAW/6B,KAAK+xC,mBAAqB/xC,KAAKgyC,6BAxrB3F,qDA2rBK/6C,EAAMg7C,EAAsBvN,GACzD,IAAM/wC,EAAOqM,KAAKw0B,YACZ0d,EAAqBlyC,KAAK62B,IAAI6N,GAC9BruC,EAAQ,GAEd,GACEA,EAAMP,KAAKm8C,WACJjyC,KAAK62B,IAAI6N,IAElB,OAAqB,IAAjBruC,EAAMqD,QAAiBw4C,GAI3Bv+C,EAAK0C,MAAQA,EACN2J,KAAKy0B,WAAW9gC,EAAMsD,IAJpBZ,EAAM,KArsBS,wDA6sBxB,OAAO2J,KAAKmyC,+BAA+B,qBAAsBnyC,KAAK2xC,4BAA4B1+C,KAAK+M,MAAO3J,EAAMkN,cA7sB5F,iDAitBxB,OAAOvD,KAAKmyC,+BAA+B,cAAenyC,KAAKoyC,gCAAgCn/C,KAAK+M,MAAO3J,EAAMgN,aAjtBzF,gDAqtBxB,QAAIrD,KAAKs4B,aAAa,MAIft4B,KAAKiT,MAAM5c,EAAMwL,SAAW7B,KAAKwuC,YAAYxuC,KAAKqyC,qCAAqCp/C,KAAK+M,SAztB3E,6CA6tBxB,GAAIA,KAAKiT,MAAM5c,EAAMkF,OAASyE,KAAKiT,MAAM5c,EAAM+O,OAE7C,OADApF,KAAK22B,QACE,EAGT,GAAI32B,KAAKiT,MAAM5c,EAAMmL,QAAS,CAC5B,IAAI8wC,EAAoB,EAGxB,IAFAtyC,KAAK22B,OAEE2b,EAAoB,GACrBtyC,KAAKiT,MAAM5c,EAAMmL,UACjB8wC,EACOtyC,KAAKiT,MAAM5c,EAAMsL,WACxB2wC,EAGJtyC,KAAK22B,OAGP,OAAO,EAGT,GAAI32B,KAAKiT,MAAM5c,EAAM8K,UAAW,CAC9B,IAAImxC,EAAoB,EAGxB,IAFAtyC,KAAK22B,OAEE2b,EAAoB,GACrBtyC,KAAKiT,MAAM5c,EAAM8K,YACjBmxC,EACOtyC,KAAKiT,MAAM5c,EAAMiL,aACxBgxC,EAGJtyC,KAAK22B,OAGP,OAAO,EAGT,OAAO,IApwBiB,6DA0wBxB,GAFA32B,KAAK22B,OAED32B,KAAKiT,MAAM5c,EAAMyL,SAAW9B,KAAKiT,MAAM5c,EAAMkM,UAC/C,OAAO,EAGT,GAAIvC,KAAKuyC,uBAAwB,CAC/B,GAAIvyC,KAAKiT,MAAM5c,EAAM4L,QAAUjC,KAAKiT,MAAM5c,EAAM0L,QAAU/B,KAAKiT,MAAM5c,EAAM+L,WAAapC,KAAKiT,MAAM5c,EAAMwM,IACvG,OAAO,EAGT,GAAI7C,KAAKiT,MAAM5c,EAAMyL,UACnB9B,KAAK22B,OAED32B,KAAKiT,MAAM5c,EAAMiM,QACnB,OAAO,EAKb,OAAO,IA5xBiB,2DA+xBWwrC,GAAa,WAChD,OAAO9tC,KAAKwyC,UAAS,WACnB,IAAMC,EAAI,EAAKje,YACf,EAAK2C,OAAO2W,GACZ,IAAMn6C,EAAO,EAAK6gC,YACZ4Y,IAAY,EAAKrB,WAAW,EAAK2G,4BAA4Bz/C,KAAK,IAExE,GAAIm6C,GAAW,EAAKn6B,MAAM5c,EAAM+O,OAAQ,CACtC,IAAIutC,EAAoB,EAAK3B,qCAY7B,MAV+B,eAA3B2B,EAAkBxqC,MACpBxU,EAAKu5C,cAAgByF,EACrBh/C,EAAKy5C,SAAU,EACfuF,EAAoB,EAAKle,WAAW9gC,EAAM,qBAE1C,EAAKuzC,2BAA2ByL,EAAmBh/C,GACnDg/C,EAAkBvF,SAAU,GAG9BqF,EAAErY,eAAiBuY,EACZ,EAAKle,WAAWge,EAAG,oBAG5B,IAAMG,EAAwB,EAAKrD,kBAAoB,EAAKxD,WAAW,EAAK8G,2BAA2B5/C,KAAK,IAE5G,IAAK2/C,EACH,OAAKxF,GAILz5C,EAAKu5C,cAAgB,EAAKvT,kBAC1BhmC,EAAKy5C,QAAUA,EACfqF,EAAErY,eAAiB,EAAK3F,WAAW9gC,EAAM,mBAClC,EAAK8gC,WAAWge,EAAG,qBANjB,EAAKtF,uBAAsB,EAAOsF,GAS7C,IAAMtqC,EAAO,EAAKglC,uBAAsB,GAKxC,OAJAx5C,EAAKu5C,cAAgB0F,EACrBj/C,EAAKymC,eAAiBjyB,EACtBxU,EAAKy5C,QAAUA,EACfqF,EAAErY,eAAiB,EAAK3F,WAAW9gC,EAAM,mBAClC,EAAK8gC,WAAWge,EAAG,yBAx0BJ,gEA60BxB,OAAOzyC,KAAKiT,MAAM5c,EAAM4L,OAASjC,KAAKouC,qCAAqC/3C,EAAM4L,YAAS/O,IA70BlE,iDAi1BxB,OAAO8M,KAAKiT,MAAM5c,EAAM4L,OAASjC,KAAKmtC,6BAA0Bj6C,IAj1BxC,uCAq1BxB,OAAO8M,KAAKytC,mBAAmBp3C,EAAM4L,SAr1Bb,mDAy1BxB,IAAMnF,EAAKkD,KAAK25B,kBAEhB,GAAI35B,KAAK+6B,aAAa,QAAU/6B,KAAK4V,wBAEnC,OADA5V,KAAK22B,OACE75B,IA71Be,oDAk2BxB,IAAKkD,KAAKiT,MAAM5c,EAAMkF,OAA8B,YAArByE,KAAKwH,MAAMpW,OAAuB4O,KAAK4V,wBACpE,OAAO,EAGT,IAAMk9B,EAAc9yC,KAAKwH,MAAMsrC,YAG/B,OAFA9yC,KAAK22B,UAEA32B,KAAKiT,MAAM5c,EAAMkF,QAAUyE,KAAKiT,MAAM5c,EAAM+O,UAI7C0tC,GACF9yC,KAAKqY,MAAMrY,KAAKwH,MAAMkL,aAAcxJ,EAAcsD,2BAA4B,YAGzE,KAj3BiB,8CAo3BmC,WAAvCumC,IAAuC,yDAAtBN,EAAsB,uDAAlBzyC,KAAKw0B,YAK9C,OAJAx0B,KAAKwyC,UAAS,WACRO,GAAU,EAAK5b,OAAO9gC,EAAM4L,OAChCwwC,EAAErY,eAAiB,EAAKuV,iBAEnB3vC,KAAKy0B,WAAWge,EAAG,sBAz3BF,oCA63BxBpjB,GAAOrvB,KAAKwH,MAAM0xB,QAClB,IAAM/wB,EAAOnI,KAAKgzC,4BAElB,GAAIhzC,KAAK4V,0BAA4B5V,KAAK62B,IAAIxgC,EAAMkP,UAClD,OAAO4C,EAGT,IAAMxU,EAAOqM,KAAKy1B,gBAAgBttB,GAOlC,OANAxU,EAAKs/C,UAAY9qC,EACjBxU,EAAKu/C,YAAclzC,KAAKgzC,4BACxBhzC,KAAKm3B,OAAO9gC,EAAM+L,UAClBzO,EAAKw/C,SAAWnzC,KAAK2vC,cACrB3vC,KAAKm3B,OAAO9gC,EAAM4L,OAClBtO,EAAKy/C,UAAYpzC,KAAK2vC,cACf3vC,KAAKy0B,WAAW9gC,EAAM,uBA34BL,uDA+4BxB,OAAOqM,KAAK+6B,aAAa,aAAe/6B,KAAK0+B,YAAYv2B,OAAS9R,EAAM8O,OA/4BhD,kDAm5BxB,OAAInF,KAAKqzC,0BACArzC,KAAKszC,iCAAiC,kBAG3CtzC,KAAKiT,MAAM5c,EAAM8O,MACZnF,KAAKszC,iCAAiC,qBACpCtzC,KAAKuzC,iCACPvzC,KAAKszC,iCAAiC,qBAAqB,GAG7DtzC,KAAKwzC,6BA75BY,6CAi6BxB,IAAM7/C,EAAOqM,KAAKw0B,YAEZxvB,EAAShF,KAAKyzC,gCAKpB,OAHA9/C,EAAKymC,eAAiBp1B,GAAUhF,KAAK0zC,sBACrC1zC,KAAKq+B,iBAAiB,KACtB1qC,EAAKpC,WAAayO,KAAK+wC,kBAChB/wC,KAAKy0B,WAAW9gC,EAAM,qBAx6BL,4CA26BJggD,GACpB,IAAMC,EAAgB5zC,KAAKwH,MAAMT,MAC3B8sC,EAAgB7zC,KAAK2sC,qBAAqB,wBAAyB3sC,KAAK8zC,mCAAmC7gD,KAAK+M,OAMtH,OAJK6zC,EAAcn6C,QACjBsG,KAAKqY,MAAMu7B,EAAetkB,GAASQ,wBAAyB6jB,GAGvDE,IAn7BiB,2DAu7BxB,IAAMlgD,EAAOqM,KAAKw0B,YAOlB,OANA7gC,EAAKpC,WAAayO,KAAK6sC,mBAAkB,GAErC7sC,KAAKs4B,aAAa,OACpB3kC,EAAKigC,eAAiB5zB,KAAK8sC,wBAGtB9sC,KAAKy0B,WAAW9gC,EAAM,mCA97BL,kDAi8BEA,GAC1BA,EAAKmJ,GAAKkD,KAAK25B,kBACf35B,KAAK8lC,UAAUnyC,EAAKmJ,GAAI,mCAp9JF,KAq9JtBnJ,EAAKigC,eAAiB5zB,KAAKiuC,2BAEvBjuC,KAAK62B,IAAIxgC,EAAMkP,YACjB5R,EAAK8oC,QAAUz8B,KAAK+zC,sBAAsB,YAG5C,IAAMp/C,EAAOqL,KAAKw0B,YAGlB,OAFA7/B,EAAKA,KAAOqL,KAAKwyC,SAASxyC,KAAKovC,yBAAyBn8C,KAAK+M,OAC7DrM,EAAKgB,KAAOqL,KAAKy0B,WAAW9/B,EAAM,mBAC3BqL,KAAKy0B,WAAW9gC,EAAM,4BA78BL,kDAg9BEA,GAAM,WAgBhC,OAfAA,EAAKmJ,GAAKkD,KAAK25B,kBACf35B,KAAK8lC,UAAUnyC,EAAKmJ,GAAI,wBAl+JP,GAm+JjBnJ,EAAKigC,eAAiB5zB,KAAKiuC,2BAC3Bt6C,EAAKymC,eAAiBp6B,KAAKwyC,UAAS,WAGlC,GAFA,EAAKrb,OAAO9gC,EAAMwM,IAEd,EAAKk4B,aAAa,cAAgB,EAAK2D,YAAYv2B,OAAS9R,EAAM8L,IAAK,CACzE,IAAMxO,EAAO,EAAK6gC,YAElB,OADA,EAAKmC,OACE,EAAKlC,WAAW9gC,EAAM,sBAG/B,OAAO,EAAKg8C,iBAEd3vC,KAAKs6B,YACEt6B,KAAKy0B,WAAW9gC,EAAM,4BAh+BL,oCAm+BZqgD,GACZ,IAAMC,EAAaj0C,KAAKwH,MAAM2N,QAC9BnV,KAAKwH,MAAM2N,QAAU,CAAC8+B,EAAW,IAEjC,IACE,OAAOD,IADT,QAGEh0C,KAAKwH,MAAM2N,QAAU8+B,KA1+BC,+BA8+BjBD,GACP,IAAM/a,EAAYj5B,KAAKwH,MAAM0xB,OAC7Bl5B,KAAKwH,MAAM0xB,QAAS,EAEpB,IACE,OAAO8a,IADT,QAGEh0C,KAAKwH,MAAM0xB,OAASD,KAr/BE,yCAy/BPt4B,GACjB,OAAQX,KAAKiT,MAAMtS,GAAqBX,KAAK0zC,2BAAjBxgD,IA1/BJ,4CA6/BJyN,GAAO,WAC3B,OAAOX,KAAKk0C,mBAAkB,kBAAM,EAAK/c,OAAOx2B,QA9/BxB,4CAigCJ,WACpB,OAAOX,KAAKk0C,mBAAkB,kBAAM,EAAKvd,YAlgCjB,wCAqgCRqd,GAAI,WACpB,OAAOh0C,KAAKwyC,UAAS,WAEnB,OADAwB,IACO,EAAKrE,mBAxgCU,0CA6gCxB,IAAMh8C,EAAOqM,KAAKw0B,YAOlB,OANA7gC,EAAKmJ,GAAKkD,KAAKiT,MAAM5c,EAAM4K,QAAUjB,KAAKi3B,gBAAkBj3B,KAAK25B,iBAAgB,GAE7E35B,KAAK62B,IAAIxgC,EAAMwM,MACjBlP,EAAKwgD,YAAcn0C,KAAKq3B,2BAGnBr3B,KAAKy0B,WAAW9gC,EAAM,kBAphCL,6CAuhCHA,EAAMg7B,GAO3B,OANIA,IAASh7B,EAAKmpB,OAAQ,GAC1BnpB,EAAKmJ,GAAKkD,KAAK25B,kBACf35B,KAAK8lC,UAAUnyC,EAAKmJ,GAAI,8BAA+B6xB,EAriKhCylB,IAJN/Y,KA0iKjBr7B,KAAKm3B,OAAO9gC,EAAMmL,QAClB7N,EAAK+1C,QAAU1pC,KAAK2sC,qBAAqB,cAAe3sC,KAAKq0C,kBAAkBphD,KAAK+M,OACpFA,KAAKm3B,OAAO9gC,EAAMsL,QACX3B,KAAKy0B,WAAW9gC,EAAM,uBA9hCL,2CAkiCxB,IAAMA,EAAOqM,KAAKw0B,YAKlB,OAJAx0B,KAAKtM,MAAM4nC,MA9kKK,GA+kKhBt7B,KAAKm3B,OAAO9gC,EAAMmL,QAClBxB,KAAKs0C,4BAA4B3gD,EAAKgB,KAAO,QAAIzB,GAAW,EAAMmD,EAAMsL,QACxE3B,KAAKtM,MAAMgoC,OACJ17B,KAAKy0B,WAAW9gC,EAAM,mBAviCL,0DA0iCUA,GAAsB,IAAhB4gD,EAAgB,wDAOxD,GANA5gD,EAAKmJ,GAAKkD,KAAK25B,kBAEV4a,GACHv0C,KAAK8lC,UAAUnyC,EAAKmJ,GAAI,kCAxjKJ,MA2jKlBkD,KAAK62B,IAAIxgC,EAAM8L,KAAM,CACvB,IAAMqyC,EAAQx0C,KAAKw0B,YACnBx0B,KAAKy0C,oCAAoCD,GAAO,GAChD7gD,EAAKgB,KAAO6/C,OAEZx0C,KAAKtM,MAAM4nC,MAAM/jB,IACjBvX,KAAK00C,UAAUpZ,MA7rCP,GA8rCR3nC,EAAKgB,KAAOqL,KAAK20C,qBACjB30C,KAAK00C,UAAUhZ,OACf17B,KAAKtM,MAAMgoC,OAGb,OAAO17B,KAAKy0B,WAAW9gC,EAAM,yBA7jCL,8DAgkCcA,GAoBtC,OAnBIqM,KAAK+6B,aAAa,WACpBpnC,EAAKihD,QAAS,EACdjhD,EAAKmJ,GAAKkD,KAAK25B,mBACN35B,KAAKiT,MAAM5c,EAAM4K,QAC1BtN,EAAKmJ,GAAKkD,KAAKi3B,gBAEfj3B,KAAK02B,aAGH12B,KAAKiT,MAAM5c,EAAMmL,SACnBxB,KAAKtM,MAAM4nC,MAAM/jB,IACjBvX,KAAK00C,UAAUpZ,MAltCP,GAmtCR3nC,EAAKgB,KAAOqL,KAAK20C,qBACjB30C,KAAK00C,UAAUhZ,OACf17B,KAAKtM,MAAMgoC,QAEX17B,KAAKs6B,YAGAt6B,KAAKy0B,WAAW9gC,EAAM,yBAplCL,qDAulCKA,EAAMkhD,GAOnC,OANAlhD,EAAKkhD,SAAWA,IAAY,EAC5BlhD,EAAKmJ,GAAKkD,KAAK25B,kBACf35B,KAAK8lC,UAAUnyC,EAAKmJ,GAAI,4BA9mKPu+B,GA+mKjBr7B,KAAKm3B,OAAO9gC,EAAMwM,IAClBlP,EAAKmhD,gBAAkB90C,KAAK+0C,yBAC5B/0C,KAAKs6B,YACEt6B,KAAKy0B,WAAW9gC,EAAM,+BA9lCL,oDAkmCxB,OAAOqM,KAAK+6B,aAAa,YAA2C,KAA7B/6B,KAAK6wC,sBAlmCpB,+CAsmCxB,OAAO7wC,KAAKg1C,8BAAgCh1C,KAAKi1C,iCAAmCj1C,KAAK6sC,mBAAkB,KAtmCnF,uDA0mCxB,IAAMl5C,EAAOqM,KAAKw0B,YAIlB,GAHAx0B,KAAKu5B,iBAAiB,WACtBv5B,KAAKm3B,OAAO9gC,EAAMwL,SAEb7B,KAAKiT,MAAM5c,EAAM4K,QACpB,MAAMjB,KAAK02B,aAKb,OAFA/iC,EAAKpC,WAAayO,KAAKi3B,gBACvBj3B,KAAKm3B,OAAO9gC,EAAMyL,QACX9B,KAAKy0B,WAAW9gC,EAAM,+BApnCL,kCAunCduhD,GACV,IAAM1tC,EAAQxH,KAAKwH,MAAMrI,QACnBg2C,EAAMD,IAEZ,OADAl1C,KAAKwH,MAAQA,EACN2tC,IA3nCiB,yCA8nCPD,GACjB,IAAMnT,EAAS/hC,KAAKgiC,UAAS,SAAA+E,GAAK,OAAImO,KAAOnO,OAC7C,IAAIhF,EAAOqF,SAAYrF,EAAOpuC,KAE9B,OADIouC,EAAOjuB,QAAO9T,KAAKwH,MAAQu6B,EAAOE,WAC/BF,EAAOpuC,OAloCU,iCAqoCfuhD,GACT,IAAM1tC,EAAQxH,KAAKwH,MAAMrI,QACnB4iC,EAASmT,IAEf,YAAehiD,IAAX6uC,IAAmC,IAAXA,EACnBA,OAEP/hC,KAAKwH,MAAQA,KA5oCS,wCAipCR4tC,GAAM,WACtB,IAAIp1C,KAAKq1C,mBAAT,CAIA,IACIp+C,EADAq+C,EAAYt1C,KAAKwH,MAAMW,KAQ3B,OALInI,KAAK+6B,aAAa,SACpBua,EAAYj/C,EAAM0O,KAClB9N,EAAO,OAGF+I,KAAKu1C,oBAAmB,WAC7B,OAAQD,GACN,KAAKj/C,EAAMoO,UAET,OADA2wC,EAAK3X,SAAU,EACR,EAAK+X,uBAAuBJ,GAAM,GAAO,GAElD,KAAK/+C,EAAMiP,OAET,OADA8vC,EAAK3X,SAAU,EACR,EAAKgY,WAAWL,GAAM,GAAM,GAErC,KAAK/+C,EAAM2O,OACT,GAAI,EAAKiO,MAAM5c,EAAM2O,SAAW,EAAKmhC,sBAAsB,QAGzD,OAFA,EAAKhP,OAAO9gC,EAAM2O,QAClB,EAAKu0B,iBAAiB,QACf,EAAKmc,uBAAuBN,GAAM,GAG7C,KAAK/+C,EAAM0O,KAET,OADA9N,EAAOA,GAAQ,EAAKuQ,MAAMpW,MACnB,EAAKukD,kBAAkBP,EAAMn+C,GAEtC,KAAKZ,EAAMkF,KAEP,IAAMnK,EAAQ,EAAKoW,MAAMpW,MAEzB,MAAc,WAAVA,EACK,EAAKwkD,wCAAwCR,GAE7C,EAAKS,mBAAmBT,EAAMhkD,GAAO,UA1rC9B,oDAksCxB,OAAO4O,KAAK61C,mBAAmB71C,KAAKw0B,YAAax0B,KAAKwH,MAAMpW,OAAO,KAlsC3C,iDAqsCCuC,EAAMoJ,GAC/B,OAAQA,EAAKxB,MACX,IAAK,UAED,IAAMugC,EAAc97B,KAAK81C,kBAAkBniD,GAE3C,GAAImoC,EAEF,OADAA,EAAY2B,SAAU,EACf3B,EAGT,MAGJ,IAAK,SACH,GAAI97B,KAAKiT,MAAM5c,EAAMmL,QAAS,CAC5BxB,KAAKtM,MAAM4nC,MAAM/jB,IACjBvX,KAAK00C,UAAUpZ,MA51CX,GA61CJ,IAAMya,EAAMpiD,EAMZ,OALAoiD,EAAInB,QAAS,EACbmB,EAAIj5C,GAAKC,EACTg5C,EAAIphD,KAAOqL,KAAK20C,qBAChB30C,KAAKtM,MAAMgoC,OACX17B,KAAK00C,UAAUhZ,OACR17B,KAAKy0B,WAAWshB,EAAK,uBAG9B,MAEF,QACE,OAAO/1C,KAAK61C,mBAAmBliD,EAAMoJ,EAAKxB,MAAM,MAnuC5B,yCAuuCP5H,EAAMvC,EAAOulC,GAC9B,OAAQvlC,GACN,IAAK,WACH,GAAI4O,KAAKg2C,sBAAsBrf,KAAU32B,KAAKiT,MAAM5c,EAAMiP,SAAWtF,KAAKiT,MAAM5c,EAAMkF,OACpF,OAAOyE,KAAKi2C,2BAA2BtiD,GAGzC,MAEF,IAAK,OACH,GAAIgjC,GAAQ32B,KAAKiT,MAAM5c,EAAMkF,MAE3B,OADIo7B,GAAM32B,KAAK22B,OACR32B,KAAK01C,uBAAuB/hD,GAAM,GAG3C,MAEF,IAAK,YACH,GAAIqM,KAAKg2C,sBAAsBrf,IAAS32B,KAAKiT,MAAM5c,EAAMkF,MACvD,OAAOyE,KAAKk2C,4BAA4BviD,GAG1C,MAEF,IAAK,SACH,GAAIqM,KAAKg2C,sBAAsBrf,GAAO,CACpC,GAAI32B,KAAKiT,MAAM5c,EAAM4K,QACnB,OAAOjB,KAAK41C,wCAAwCjiD,GAC/C,GAAIqM,KAAKiT,MAAM5c,EAAMkF,MAC1B,OAAOyE,KAAKy0C,oCAAoC9gD,GAIpD,MAEF,IAAK,YACH,GAAIqM,KAAKg2C,sBAAsBrf,IAAS32B,KAAKiT,MAAM5c,EAAMkF,MACvD,OAAOyE,KAAKy0C,oCAAoC9gD,GAGlD,MAEF,IAAK,OACH,GAAIqM,KAAKg2C,sBAAsBrf,IAAS32B,KAAKiT,MAAM5c,EAAMkF,MACvD,OAAOyE,KAAKm2C,4BAA4BxiD,MAnxCtB,4CA0xCJgjC,GACpB,OAAIA,GACE32B,KAAKo2C,0BACTp2C,KAAK22B,QACE,IAGD32B,KAAKq1C,qBAjyCW,0DAoyCUnhB,EAAUzhB,GAAU,WACtD,GAAKzS,KAAKs4B,aAAa,KAAvB,CAIA,IAAM+d,EAA4Br2C,KAAKwH,MAAM29B,uBAC7CnlC,KAAKwH,MAAM29B,wBAAyB,EACpC,IAAMgQ,EAAMn1C,KAAKs2C,oBAAmB,WAClC,IAAM3iD,EAAO,EAAKi/B,YAAYsB,EAAUzhB,GAKxC,OAJA9e,EAAKigC,eAAiB,EAAK8Z,wBAC3B,iDAA0B/5C,GAC1BA,EAAKwmC,WAAa,EAAKoc,0CACvB,EAAKpf,OAAO9gC,EAAMiM,OACX3O,KAIT,GAFAqM,KAAKwH,MAAM29B,uBAAyBkR,EAE/BlB,EAIL,OAAOn1C,KAAKooC,qBAAqB+M,EAAK,MAAM,MAzzCpB,6CA4zCH,WACfxhD,EAAOqM,KAAKw0B,YAYlB,OAXA7gC,EAAKuC,OAAS8J,KAAKwyC,UAAS,kBAAM,EAAKgE,eAAc,WAEnD,OADA,EAAKnY,iBAAiB,KACf,EAAKsO,qBAAqB,4BAA6B,EAAKgD,YAAY18C,KAAK,UAG3D,IAAvBU,EAAKuC,OAAOwD,QACdsG,KAAKqY,MAAM1kB,EAAKoT,MAAOuoB,GAASS,oBAGlC/vB,KAAKwH,MAAM8N,aAAc,EACzBtV,KAAKq+B,iBAAiB,KACfr+B,KAAKy0B,WAAW9gC,EAAM,kCAz0CL,6CA60CxB,GAAIqM,KAAKiT,MAAM5c,EAAMkF,MACnB,OAAQyE,KAAKwH,MAAMpW,OACjB,IAAK,WACL,IAAK,UACL,IAAK,OACL,IAAK,YACL,IAAK,SACL,IAAK,YACL,IAAK,OACH,OAAO,EAIb,OAAO,IA11CiB,iDA81CxB,OAAI4O,KAAKy2C,wBACT,+DA/1CwB,8CAk2CF/P,EAAgB5vC,GACtC,IAEIs1C,EAFElY,EAAWl0B,KAAKwH,MAAMT,MACtB0L,EAAWzS,KAAKwH,MAAMiL,SAExBk8B,GAAW,OAEQz7C,IAAnBwzC,IACF0F,EAAgBpsC,KAAK02C,sBACrB/H,IAAa3uC,KAAKmsC,gBAAgB,CAAC,cAEZ,IAAnBzF,IAA6B0F,GAAiBuC,IAChD3uC,KAAKqY,MAAM6b,EAAU5E,GAAS2B,8BAIlC,IAAMyU,EAAO1lC,KAAK22C,oBAClB32C,KAAK42C,6BAA6BlR,GAClC,IAAMmR,EAAM72C,KAAK22C,kBAAkBjR,EAAK3+B,MAAO2+B,EAAKn+B,IAAIR,MAAO2+B,GAE/D,GAAI0G,GAAiBuC,EAAU,CAC7B,IAAMmI,EAAK92C,KAAK4yB,YAAYsB,EAAUzhB,GActC,OAZI3b,EAAW4C,SACbo9C,EAAGhgD,WAAaA,GAGds1C,IAAe0K,EAAG1K,cAAgBA,GAClCuC,IAAUmI,EAAGnI,SAAWA,GAEX,eAAbkI,EAAI1uC,MAAsC,sBAAb0uC,EAAI1uC,MACnCnI,KAAKqY,MAAMy+B,EAAG/vC,MAAOuoB,GAASgC,kCAGhCwlB,EAAGC,UAAYF,EACR72C,KAAKy0B,WAAWqiB,EAAI,uBAO7B,OAJIhgD,EAAW4C,SACbgsC,EAAK5uC,WAAaA,GAGb+/C,IA34CiB,iDA84CCljD,EAAMwU,GAAwB,IAAlBisB,EAAkB,wDACnDp0B,KAAKiT,MAAM5c,EAAM4L,SACnBtO,EAAKwmC,WAAan6B,KAAKouC,qCAAqC/3C,EAAM4L,QAGpE,IAAM+0C,EAAwB,wBAAT7uC,EAAiC,oBAA+B,gBAATA,EAAyB,uBAAoBjV,EAErH8jD,IAAiBh3C,KAAKiT,MAAM5c,EAAMmL,SAAWxB,KAAKq1C,mBACpDr1C,KAAKy0B,WAAW9gC,EAAMqjD,GAIH,sBAAjBA,GAAwCh3C,KAAKwH,MAAMyvC,mBACrDj3C,KAAKqY,MAAM1kB,EAAKoT,MAAOuoB,GAASK,kCAE5Bh8B,EAAK8pC,SACP,8DAAiC9pC,EAAMqjD,EAAc5iB,GAKzD,8DAAiCzgC,EAAMwU,EAAMisB,KAn6CrB,kDAs6CEzgC,IACrBA,EAAKgB,MAAQhB,EAAKmJ,GACrBkD,KAAK8lC,UAAUnyC,EAAKmJ,GAAI,gBAAiB+a,IAEzC,gEAAqC3c,aA16Cf,iDA86CCg8C,GAAO,WAChCA,EAAMtb,SAAQ,SAAAjoC,GACgC,0BAA/B,MAARA,OAAe,EAASA,EAAKwU,OAChC,EAAKkQ,MAAM1kB,EAAKymC,eAAerzB,MAAOuoB,GAAS6B,+BAj7C3B,uCAs7CTyT,EAAUuS,GAEzB,OADAn3C,KAAKo3C,2BAA2BxS,GACzBA,IAx7CiB,uCA27CF,6BAANlqC,EAAM,yBAANA,EAAM,gBACtB,IAAM/G,GAAI,sEAA2B+G,IAMrC,MAJkB,oBAAd/G,EAAKwU,MACPnI,KAAKo3C,2BAA2BzjD,EAAKgU,UAGhChU,IAl8CiB,qCAq8CXwhC,EAAMjB,EAAUzhB,EAAU2iB,EAAS5tB,GAAO,WACvD,IAAKxH,KAAK4V,yBAA2B5V,KAAKiT,MAAM5c,EAAM0M,MAAO,CAC3D/C,KAAKwH,MAAM8N,aAAc,EACzBtV,KAAK22B,OACL,IAAM0gB,EAAoBr3C,KAAK4yB,YAAYsB,EAAUzhB,GAErD,OADA4kC,EAAkB9lD,WAAa4jC,EACxBn1B,KAAKy0B,WAAW4iB,EAAmB,uBAG5C,GAAIr3C,KAAKs4B,aAAa,KAAM,CAC1B,IAAMyJ,EAAS/hC,KAAKs2C,oBAAmB,WACrC,IAAKlhB,GAAW,EAAKkiB,qBAAqBniB,GAAO,CAC/C,IAAMoiB,EAAe,EAAKC,oCAAoCtjB,EAAUzhB,GAExE,GAAI8kC,EACF,OAAOA,EAIX,IAAM5jD,EAAO,EAAKi/B,YAAYsB,EAAUzhB,GACxC9e,EAAKgF,OAASw8B,EACd,IAAM0S,EAAgB,EAAKiF,uBAE3B,GAAIjF,EAAe,CACjB,IAAKzS,GAAW,EAAKyB,IAAIxgC,EAAMwL,QAS7B,OARAlO,EAAKuH,UAAY,EAAKusC,6BAA6BpxC,EAAMyL,QAAQ,GACjE,EAAKs1C,2BAA2BzjD,EAAKuH,WACrCvH,EAAKigC,eAAiBiU,EAElBrgC,EAAM6tB,sBACR1hC,EAAKqhC,UAAW,GAGX,EAAK8S,qBAAqBn0C,EAAM6T,EAAM6tB,qBACxC,GAAI,EAAKpiB,MAAM5c,EAAMmM,WAAY,CACtC,IAAMu/B,EAAS,EAAK0V,8BAA8BtiB,EAAMjB,EAAUzhB,EAAUjL,GAE5E,OADAu6B,EAAOnO,eAAiBiU,EACjB9F,GAIX,EAAKrL,gBAEP,GAAIqL,EAAQ,OAAOA,EAGrB,yDAA4B5M,EAAMjB,EAAUzhB,EAAU2iB,EAAS5tB,KAn/CvC,wCAs/CR7T,GAAM,WACtB,GAAIqM,KAAKs4B,aAAa,KAAM,CAC1B,IAAM1E,EAAiB5zB,KAAKs2C,oBAAmB,WAC7C,IAAM57C,EAAO,EAAKoyC,uBAElB,OADK,EAAK75B,MAAM5c,EAAMwL,SAAS,EAAK60B,aAC7Bh8B,KAGLk5B,IACFjgC,EAAKigC,eAAiBA,GAI1B,qDAAwBjgC,KAngDA,kCAsgDd+xC,EAAMgS,EAAcC,EAAcC,GAC5C,GAAIzoB,GAAQ94B,EAAMwP,IAAIxF,OAASu3C,IAAY53C,KAAK4V,yBAA2B5V,KAAK+6B,aAAa,MAAO,CAClG,IAAMpnC,EAAOqM,KAAK4yB,YAAY8kB,EAAcC,GAC5ChkD,EAAKpC,WAAam0C,EAElB,IAAM1gC,EAAShF,KAAKyzC,gCAUpB,OAPE9/C,EAAKymC,eADHp1B,GAGoBhF,KAAK0zC,sBAG7B1zC,KAAKy0B,WAAW9gC,EAAM,kBACtBqM,KAAK63C,eACE73C,KAAK83C,YAAYnkD,EAAM+jD,EAAcC,EAAcC,GAG5D,sDAAyBlS,EAAMgS,EAAcC,EAAcC,KAxhDnC,wCA2hDR7gC,EAAMtE,EAAUslC,EAAevT,MA3hDvB,mFA+hDd7wC,GACV,GAAIqM,KAAKiT,MAAM5c,EAAMkF,OAASyE,KAAKiT,MAAM5c,EAAMwN,OAAS7D,KAAKiT,MAAM5c,EAAMmL,QAAS,CAChF,IAAMw2C,EAAQh4C,KAAK0+B,YAEnB,GAAI1+B,KAAKiT,MAAM5c,EAAMkF,OAASy8C,EAAM7vC,OAAS9R,EAAMwM,GACjD,OAAO7C,KAAKi4C,+BAA+BtkD,IAGzCqM,KAAK+6B,aAAa,SAAWid,EAAM7vC,OAAS9R,EAAM0L,OAAWi2C,EAAM7vC,OAAS9R,EAAMkF,MAAwB,SAAhBy8C,EAAM5mD,QAClGuC,EAAKgpB,WAAa,OAClB3c,KAAK22B,QAIJhjC,EAAKgpB,aACRhpB,EAAKgpB,WAAa,SAGpB,IAAMu7B,EAAa,EAAH,6CAAqBvkD,GAMrC,MAJ8B,SAA1BukD,EAAWv7B,YAAyBu7B,EAAWhjB,WAAWx7B,OAAS,GAAuC,2BAAlCw+C,EAAWhjB,WAAW,GAAG/sB,MACnGnI,KAAKqY,MAAM6/B,EAAWnxC,MAAO,oFAGxBmxC,IAvjDiB,kCA0jDdvkD,GACV,GAAIqM,KAAKiT,MAAM5c,EAAMoP,SAEnB,OADAzF,KAAKm3B,OAAO9gC,EAAMoP,SACXzF,KAAKi4C,+BAA+BtkD,GAAM,GAC5C,GAAIqM,KAAK62B,IAAIxgC,EAAMwM,IAAK,CAC7B,IAAM7P,EAASW,EAGf,OAFAX,EAAOzB,WAAayO,KAAKk3B,kBACzBl3B,KAAKs6B,YACEt6B,KAAKy0B,WAAWzhC,EAAQ,sBAC1B,GAAIgN,KAAK46B,cAAc,MAAO,CACnC,IAAMgJ,EAAOjwC,EAIb,OAHAqM,KAAKu5B,iBAAiB,aACtBqK,EAAK9mC,GAAKkD,KAAK25B,kBACf35B,KAAKs6B,YACEt6B,KAAKy0B,WAAWmP,EAAM,gCAS7B,OAPI5jC,KAAK+6B,aAAa,SAAW/6B,KAAK0+B,YAAYv2B,OAAS9R,EAAMmL,QAC/DxB,KAAK22B,OACLhjC,EAAKwoC,WAAa,QAElBxoC,EAAKwoC,WAAa,QAGpB,+CAAyBxoC,KAjlDH,wCAslDxB,OAAOqM,KAAK+6B,aAAa,aAAe/6B,KAAK0+B,YAAYv2B,OAAS9R,EAAMiP,SAtlDhD,qDA0lDxB,GAAItF,KAAKm4C,kBAAmB,CAC1B,IAAMC,EAAMp4C,KAAKw0B,YAIjB,OAHAx0B,KAAK22B,OACLyhB,EAAI7H,UAAW,EACfvwC,KAAKy1C,WAAW2C,GAAK,GAAM,GACpBA,EAGT,GAAyB,cAArBp4C,KAAKwH,MAAMpW,MAAuB,CACpC,IAAM2wC,EAAS/hC,KAAK61C,mBAAmB71C,KAAKw0B,YAAax0B,KAAKwH,MAAMpW,OAAO,GAC3E,GAAI2wC,EAAQ,OAAOA,EAGrB,0EAvmDwB,4CA0mDJ5sB,EAASqsB,GAC7B,GAAIxhC,KAAKwH,MAAMW,OAAS9R,EAAM2O,OAAQ,CACpC,IAAMgzC,EAAQh4C,KAAK0+B,YAEnB,GAAIsZ,EAAM7vC,OAAS9R,EAAMkF,MAAwB,SAAhBy8C,EAAM5mD,MAAkB,CACvD,IAAMuC,EAAOqM,KAAKw0B,YAGlB,OAFAx0B,KAAKm3B,OAAO9gC,EAAM2O,QAClBhF,KAAKu5B,iBAAiB,QACfv5B,KAAK01C,uBAAuB/hD,GAAM,IAI7C,gEAAmCwhB,EAASqsB,KAtnDpB,4CA0nDxB,OAAOxhC,KAAKmsC,gBAAgB,CAAC,SAAU,YAAa,cA1nD5B,uCA6nDT1Y,EAAW0Q,EAAQ38B,GAAO,WACzCxH,KAAKgvC,iBAAiB7K,EAAQ,CAAC,UAAW,UAAW,SAAU,cAE/D,IAAMkU,EAAuB,WAC3B,8CAAuB5kB,EAAW0Q,EAAQ38B,IAGxC28B,EAAO1G,QACTz9B,KAAKu1C,mBAAmB8C,GAExBA,MAvoDsB,mDA2oDG5kB,EAAW0Q,EAAQ38B,EAAOi3B,GACrDz+B,KAAKgvC,iBAAiB7K,EAAQ,CAAC,WAAY,WAAY,YACvD,IAAM8K,EAAMjvC,KAAKkvC,yBAAyB/K,GAE1C,GAAI8K,EAmBF,OAlBAxb,EAAU9+B,KAAKmB,KAAKm5C,GAEhB9K,EAAOoM,UACTvwC,KAAKqY,MAAM8rB,EAAOp9B,MAAOuoB,GAASY,2BAGhCuO,GACFz+B,KAAKqY,MAAM8rB,EAAOp9B,MAAOuoB,GAASc,yBAGhC+T,EAAOiI,eACTpsC,KAAKqY,MAAM8rB,EAAOp9B,MAAOuoB,GAASa,+BAAgCgU,EAAOiI,oBAGvEjI,EAAO1G,SACTz9B,KAAKqY,MAAM8rB,EAAOp9B,MAAOuoB,GAASe,4BAMjCrwB,KAAKwH,MAAM8wC,iBAAmBnU,EAAOoM,UACxCvwC,KAAKqY,MAAM8rB,EAAOp9B,MAAOuoB,GAASmB,mCAGpC,gEAAmCgD,EAAW0Q,EAAQ38B,EAAOi3B,KAzqDrC,mDA4qDG8Z,GACVv4C,KAAK62B,IAAIxgC,EAAM+L,YAClBm2C,EAAavjB,UAAW,GAElCujB,EAAa5J,UAAY3uC,KAAKiT,MAAM5c,EAAMwL,SAC5C7B,KAAKqY,MAAMkgC,EAAaxxC,MAAOuoB,GAASE,wBAGtC+oB,EAAa9a,SAAWz9B,KAAKiT,MAAM5c,EAAMwL,SAC3C7B,KAAKqY,MAAMkgC,EAAaxxC,MAAOuoB,GAASC,yBArrDlB,+CAyrDD57B,EAAMoJ,GAE7B,OAD2B,eAAdA,EAAKoL,KAAwBnI,KAAKw4C,2BAA2B7kD,EAAMoJ,QAAQ7J,IACzE,EAAJ,0DAAmCS,EAAMoJ,KA3rD5B,qDA+rDxB,QAAIiD,KAAKy2C,wBACT,mEAhsDwB,uCAmsDT15C,EAAMm3B,EAAUzhB,EAAUqvB,GAAkB,WAC3D,IAAKA,IAAqB9hC,KAAKiT,MAAM5c,EAAM+L,UACzC,2DAA8BrF,EAAMm3B,EAAUzhB,EAAUqvB,GAG1D,IAAMC,EAAS/hC,KAAKgiC,UAAS,gEAA6BjlC,EAAMm3B,EAAUzhB,MAE1E,OAAKsvB,EAAOpuC,MAKRouC,EAAOjuB,QAAO9T,KAAKwH,MAAQu6B,EAAOE,WAC/BF,EAAOpuC,OALZmuC,EAAiB/6B,MAAQg7B,EAAOjuB,MAAMtB,KAAOxS,KAAKwH,MAAMT,MACjDhK,KA5sDe,qCAmtDXpJ,EAAMugC,EAAUzhB,GAQ7B,GAPA9e,EAAO,EAAH,gDAAwBA,EAAMugC,EAAUzhB,GAExCzS,KAAK62B,IAAIxgC,EAAM+L,YACjBzO,EAAKqhC,UAAW,EAChBh1B,KAAKq6B,iBAAiB1mC,IAGpBqM,KAAKiT,MAAM5c,EAAM4L,OAAQ,CAC3B,IAAM0hC,EAAe3jC,KAAK4yB,YAAYsB,EAAUzhB,GAGhD,OAFAkxB,EAAapyC,WAAaoC,EAC1BgwC,EAAavJ,eAAiBp6B,KAAKmtC,wBAC5BntC,KAAKy0B,WAAWkP,EAAc,wBAGvC,OAAOhwC,IAluDiB,6CAquDHA,GACrB,IAQImoC,EARE5H,EAAWl0B,KAAKwH,MAAMT,MACtB0L,EAAWzS,KAAKwH,MAAMiL,SACtBgmC,EAAYz4C,KAAK46B,cAAc,WAErC,GAAI6d,IAAcz4C,KAAK+6B,aAAa,aAAe/6B,KAAK04C,gCACtD,MAAM14C,KAAKqY,MAAMrY,KAAKwH,MAAMT,MAAOuoB,GAASW,mCAsB9C,OAjBIjwB,KAAKiT,MAAM5c,EAAMkF,QACnBugC,EAAc97B,KAAK24C,+BAGhB7c,IACHA,EAAc,EAAH,wDAAgCnoC,IAGzCmoC,IAAqC,2BAArBA,EAAY3zB,MAA0D,2BAArB2zB,EAAY3zB,MAAqCswC,KACpH9kD,EAAKwoC,WAAa,QAGhBL,GAAe2c,IACjBz4C,KAAK44C,mBAAmB9c,EAAa5H,EAAUzhB,GAC/CqpB,EAAY2B,SAAU,GAGjB3B,IAjwDiB,mCAowDbnoC,EAAMswC,EAAaC,GAC9B,GAAMD,IAAeC,IAAelkC,KAAK+6B,aAAa,cAAtD,CAIA,gDAAmBpnC,EAAMswC,EAAaC,EAAYvwC,EAAK8pC,QAAU5lB,GA9xLlDwjB,KA+xLf,IAAMzH,EAAiB5zB,KAAKiuC,2BACxBra,IAAgBjgC,EAAKigC,eAAiBA,MA3wDlB,mDA8wDGjgC,IACtBA,EAAKqhC,UAAYh1B,KAAK62B,IAAIxgC,EAAM0M,QACnCpP,EAAKklD,UAAW,GAGlB,IAAM1wC,EAAOnI,KAAK0uC,2BACdvmC,IAAMxU,EAAKymC,eAAiBjyB,KApxDR,yCAuxDPxU,GAOjB,OANAqM,KAAK84C,6BAA6BnlD,GAE9BqM,KAAKwH,MAAMyvC,kBAAoBj3C,KAAKiT,MAAM5c,EAAMwM,KAClD7C,KAAKqY,MAAMrY,KAAKwH,MAAMT,MAAOuoB,GAASI,iCAGxC,sDAAgC/7B,KA9xDR,gDAiyDAA,GAUxB,OATIA,EAAK48C,UACPvwC,KAAKqY,MAAM1kB,EAAKoT,MAAOuoB,GAASuB,2BAG9Bl9B,EAAKy4C,eACPpsC,KAAKqY,MAAM1kB,EAAKoT,MAAOuoB,GAASwB,+BAAgCn9B,EAAKy4C,eAGvEpsC,KAAK84C,6BAA6BnlD,GAClC,6DAAuCA,KA3yDf,sCA8yDV8/B,EAAWl2B,EAAQ2xB,EAAaD,EAASj4B,EAAe08B,GACtE,IAAME,EAAiB5zB,KAAKiuC,2BAExBra,GAAkB58B,GACpBgJ,KAAKqY,MAAMub,EAAe7sB,MAAOuoB,GAASG,8BAGxCmE,IAAgBr2B,EAAOq2B,eAAiBA,GAC5C,mDAAsBH,EAAWl2B,EAAQ2xB,EAAaD,EAASj4B,EAAe08B,KAtzDtD,6CAyzDHD,EAAWl2B,EAAQ2xB,EAAaD,GACrD,IAAM2E,EAAiB5zB,KAAKiuC,2BACxBra,IAAgBr2B,EAAOq2B,eAAiBA,GAC5C,0DAA6BH,EAAWl2B,EAAQ2xB,EAAaD,KA5zDrC,sCA+zDVt7B,GACd,mDAAsBA,GAElBA,EAAKkK,YAAcmC,KAAKs4B,aAAa,OACvC3kC,EAAK2xC,oBAAsBtlC,KAAK8sC,wBAG9B9sC,KAAK46B,cAAc,gBACrBjnC,EAAK+oC,WAAa18B,KAAK+zC,sBAAsB,iBAv0DvB,wCA20DRppB,GAAe,MACzBiJ,EAAiB5zB,KAAKiuC,2BACxBra,IAAgBjJ,EAAKiJ,eAAiBA,GAFX,2BAANl5B,EAAM,iCAANA,EAAM,mBAG/B,iEAAwBiwB,GAAxB,OAAiCjwB,MA90DT,0CAi1DN/G,EAAM+yC,GACxB,IAAM9S,EAAiB5zB,KAAKiuC,2BACxBra,IAAgBjgC,EAAKigC,eAAiBA,GAC1C,uDAA0BjgC,EAAM+yC,KAp1DR,iCAu1Df9C,EAAM3sC,GACf,8CAAiB2sC,EAAM3sC,GAEF,eAAjB2sC,EAAK9mC,GAAGqL,MAAyBnI,KAAK62B,IAAIxgC,EAAM0M,QAClD6gC,EAAKiV,UAAW,GAGlB,IAAM1wC,EAAOnI,KAAK0uC,2BAEdvmC,IACFy7B,EAAK9mC,GAAGs9B,eAAiBjyB,EACzBnI,KAAKq6B,iBAAiBuJ,EAAK9mC,OAl2DL,wDAs2DQnJ,EAAMnB,GAKtC,OAJIwN,KAAKiT,MAAM5c,EAAM4L,SACnBtO,EAAKwmC,WAAan6B,KAAKmtC,yBAGzB,qEAA+Cx5C,EAAMnB,KA32D7B,yCA82DA,QACpBo0C,EAAMC,EAAOkS,EAAWjS,EAAOkS,EAAYC,EAAOC,EAElD1xC,EACAkuB,EACAyjB,EAiB0E,EAI1EvlB,EA1BoB,0BAANl5B,EAAM,yBAANA,EAAM,gBAOxB,GAAIsF,KAAKiJ,UAAU,SAAWjJ,KAAKiT,MAAM5c,EAAM83B,cAAgBnuB,KAAKs4B,aAAa,MAAO,CAGtF,GAFA9wB,EAAQxH,KAAKwH,MAAMrI,UACnBu2B,EAAM11B,KAAKgiC,UAAS,0FAAgCtnC,MAAO8M,IAClDsM,MAAO,OAAO4hB,EAAI/hC,KAH2D,IAKpFwhB,EACEnV,KAAKwH,MADP2N,QAGEA,EAAQA,EAAQzb,OAAS,KAAO+a,EAAQqZ,OAC1C3Y,EAAQzb,QAAU,EACTyb,EAAQA,EAAQzb,OAAS,KAAO+a,EAAQuZ,SACjD7Y,EAAQzb,QAAU,GAItB,KAAsB,OAAfktC,EAAOlR,QAAe,EAASkR,EAAK9yB,SAAW9T,KAAKs4B,aAAa,KACtE,+EAAiC59B,IAInC8M,EAAQA,GAASxH,KAAKwH,MAAMrI,QAC5B,IAAMmD,EAAQtC,KAAKgiC,UAAS,SAAA+E,GAAS,MAC/BqS,EAEJxlB,EAAiB,EAAK8Z,wBACtB,IAAM3wC,GAAI,kEAA6BrC,IAWvC,OATkB,4BAAdqC,EAAKoL,MAAsCpL,EAAK81B,OAAS91B,EAAK81B,MAAMO,gBACtE2T,IAG4F,KAAnD,OAArCqS,EAAkBxlB,QAA0B,EAASwlB,EAAgBljD,OAAOwD,SAChF,EAAKwtC,2BAA2BnqC,EAAM62B,GAGxC72B,EAAK62B,eAAiBA,EACf72B,IACNyK,GACH,IAAKlF,EAAMwR,QAAUxR,EAAM8kC,QAAS,OAAO9kC,EAAM3O,KAEjD,IAAK+hC,IACHrG,IAAQrvB,KAAKiJ,UAAU,UACvBkwC,EAAWn5C,KAAKgiC,UAAS,0FAAgCtnC,MAAO8M,IAClDsM,OAAO,OAAOqlC,EAASxlD,KAGvC,GAAqB,OAAhBkzC,EAAQnR,QAAe,EAASmR,EAAMlzC,KAEzC,OADAqM,KAAKwH,MAAQkuB,EAAIuM,UACVvM,EAAI/hC,KAGb,GAAI2O,EAAM3O,KAER,OADAqM,KAAKwH,MAAQlF,EAAM2/B,UACZ3/B,EAAM3O,KAGf,GAA8B,OAAzBolD,EAAYI,QAAoB,EAASJ,EAAUplD,KAEtD,OADAqM,KAAKwH,MAAQ2xC,EAASlX,UACfkX,EAASxlD,KAGlB,GAAqB,OAAhBmzC,EAAQpR,QAAe,EAASoR,EAAMO,OAAQ,MAAM3R,EAAI5hB,MAC7D,GAAIxR,EAAM+kC,OAAQ,MAAM/kC,EAAMwR,MAC9B,GAA+B,OAA1BklC,EAAaG,QAAoB,EAASH,EAAW3R,OAAQ,MAAM8R,EAASrlC,MACjF,MAAwB,OAAhBmlC,EAAQvjB,QAAe,EAASujB,EAAMnlC,QAAUxR,EAAMwR,QAAqC,OAA1BolC,EAAaC,QAAoB,EAASD,EAAWplC,SAr7DtG,sCAw7DV+f,GACd,OAAK7zB,KAAKiJ,UAAU,QAAUjJ,KAAKs4B,aAAa,KACvCt4B,KAAKq5C,uBAEZ,mDAA6BxlB,KA57DP,iCAg8DflgC,GAAM,WACf,GAAIqM,KAAKiT,MAAM5c,EAAM4L,OAAQ,CAC3B,IAAM8/B,EAAS/hC,KAAKgiC,UAAS,SAAA+E,GAC3B,IAAM5M,EAAa,EAAKiU,qCAAqC/3C,EAAM4L,OAEnE,OADI,EAAK6+B,sBAAyB,EAAK7tB,MAAM5c,EAAMiM,QAAQykC,IACpD5M,KAET,GAAI4H,EAAOqF,QAAS,OAEfrF,EAAOsF,SACNtF,EAAOjuB,QAAO9T,KAAKwH,MAAQu6B,EAAOE,WACtCtuC,EAAKwmC,WAAa4H,EAAOpuC,MAI7B,qDAAwBA,KA/8DA,mDAk9DGyK,GACvB4B,KAAK62B,IAAIxgC,EAAM+L,YACE,eAAfhE,EAAM+J,MAA0BnI,KAAKwH,MAAMyvC,kBAAqBj3C,KAAKwH,MAAM0xB,QAC7El5B,KAAKqY,MAAMja,EAAM2I,MAAOuoB,GAASsB,mBAGnCxyB,EAAM42B,UAAW,GAGnB,IAAM7sB,EAAOnI,KAAK0uC,2BAGlB,OAFIvmC,IAAM/J,EAAMg8B,eAAiBjyB,GACjCnI,KAAKq6B,iBAAiBj8B,GACfA,IA99DiB,mCAi+DbzK,GAAqB,IAAfmhC,EAAe,wDAChC,OAAQnhC,EAAKwU,MACX,IAAK,uBACH,uDAA0BnI,KAAK2kC,oBAAoBhxC,GAAOmhC,GAE5D,IAAK,sBACH,uDAA0BnhC,EAAMmhC,GAElC,IAAK,iBACL,IAAK,sBACL,IAAK,kBAEH,OADAnhC,EAAKpC,WAAayO,KAAK+0B,aAAaphC,EAAKpC,WAAYujC,GAC9CnhC,EAET,QACE,uDAA0BA,EAAMmhC,MAh/DZ,gCAo/DhB/3B,EAAM6oC,GAA6B,6BAANlrC,EAAM,iCAANA,EAAM,kBAC3C,OAAQqC,EAAKoL,MACX,IAAK,uBACH,OAEF,IAAK,sBAEH,YADAnI,KAAK8lC,UAAL,MAAA9lC,KAAA,CAAejD,EAAKg6C,UAAW,sBAA/B,OAAwDr8C,IAG1D,IAAK,iBACL,IAAK,sBACL,IAAK,kBAEH,YADAsF,KAAK8lC,UAAL,MAAA9lC,KAAA,CAAejD,EAAKxL,WAAYq0C,GAAhC,OAAuDlrC,IAGzD,QAEE,YADA,yDAAgBqC,EAAM6oC,GAAtB,OAA6ClrC,OApgEzB,yCA0gExB,OAAQsF,KAAKwH,MAAMW,MACjB,KAAK9R,EAAM+O,MACT,OAAOpF,KAAK25B,iBAAgB,GAE9B,QACE,+DA/gEoB,mDAmhEG58B,GAC3B,GAAIiD,KAAKs4B,aAAa,KAAM,CAC1B,IAAMuP,EAAgB7nC,KAAK8sC,uBAE3B,GAAI9sC,KAAKiT,MAAM5c,EAAMwL,QAAS,CAC5B,IAAMrP,EAAO,EAAH,8DAAsCuK,GAEhD,OADAvK,EAAKohC,eAAiBiU,EACfr1C,EAGTwN,KAAK02B,WAAW12B,KAAKwH,MAAMT,MAAO1Q,EAAMwL,QAG1C,uEAA0C9E,KAhiElB,sCAoiExB,OAAOiD,KAAKs4B,aAAa,MAAlB,iCAAAt4B,MAAA,KAAAA,QApiEiB,wCAwiExB,OAAOA,KAAKiT,MAAM5c,EAAM0M,OAAS/C,KAAKiT,MAAM5c,EAAM4L,QAA3C,mCAAAjC,MAAA,KAAAA,QAxiEiB,0CA2iEC,6BAANtF,EAAM,yBAANA,EAAM,gBACzB,IAAM/G,GAAI,yEAA8B+G,IAMxC,MAJkB,sBAAd/G,EAAKwU,MAAgCxU,EAAKymC,gBAAkBzmC,EAAK4pC,MAAMx2B,MAAQpT,EAAKymC,eAAerzB,OACrG/G,KAAKqY,MAAM1kB,EAAKymC,eAAerzB,MAAOuoB,GAAS0B,2BAG1Cr9B,IAljEiB,uCAqjET4S,GACf,OAAIvG,KAAKwH,MAAM0xB,QAAoB,KAAT3yB,GAAwB,KAATA,EAGvC,oDAA8BA,GAFvBvG,KAAKqkC,SAAShuC,EAAMoN,WAAY,KAvjEjB,qCA8jExB,GAAIzD,KAAKiT,MAAM5c,EAAMoN,YAAa,CAChC,IAAM8C,EAAOvG,KAAK+S,MAAM8iB,WAAW71B,KAAKwH,MAAMT,OAEjC,KAATR,GAAwB,KAATA,IACjBvG,KAAKwH,MAAMgL,KAAO,EAClBxS,KAAKs5C,gBAAgB/yC,OAnkED,uCAwkETq+B,GACf,IAAK,IAAI/pC,EAAI,EAAGA,EAAI+pC,EAASlrC,OAAQmB,IAAK,CACxC,IAAMkC,EAAO6nC,EAAS/pC,GACtB,GAAKkC,EAEL,OAAQA,EAAKoL,MACX,IAAK,uBACHy8B,EAAS/pC,GAAKmF,KAAK2kC,oBAAoB5nC,GACvC,MAEF,IAAK,iBACL,IAAK,kBACEiD,KAAKwH,MAAM29B,uBAGdnlC,KAAKqY,MAAMtb,EAAKgK,MAAOuoB,GAAS8B,+BAFhCwT,EAAS/pC,GAAKmF,KAAK2kC,oBAAoB5nC,IAS/C,4DAAiC7B,aA9lET,0CAimENvH,GAGlB,OAFAA,EAAKpC,WAAW6oC,eAAiBzmC,EAAKymC,eACtCp6B,KAAKq6B,iBAAiB1mC,EAAKpC,WAAYoC,EAAKymC,eAAepzB,IAAKrT,EAAKymC,eAAe7yB,IAAIP,KACjFrT,EAAKpC,aApmEY,yCAwmExB,OAAOyO,KAAKiT,MAAM5c,EAAM4L,QAAjB,oCAAAjC,MAAA,KAAAA,QAxmEiB,8CA4mExB,OAAOA,KAAKiT,MAAM5c,EAAM4L,QAAjB,yCAAAjC,MAAA,KAAAA,QA5mEiB,gDAgnExB,OAAO,6DAAmCA,KAAKm4C,oBAhnEvB,sDAmnEMxkD,GAAM,WACpC,GAAIqM,KAAKs4B,aAAa,KAAM,CAC1B,IAAMuP,EAAgB7nC,KAAKs2C,oBAAmB,kBAAM,EAAKxJ,0BACrDjF,IAAel0C,EAAKigC,eAAiBiU,GAG3C,0EAA6Cl0C,KAznErB,wDA4nEQ4J,GAChC,IAAMg8C,EAAY,EAAH,mEAA2Ch8C,GAEpDi8C,EADSx5C,KAAKwlC,6BAA6BjoC,GACvB,GAE1B,OADwBi8C,GAAkC,eAApBA,EAAWrxC,MAA6C,SAApBqxC,EAAWj+C,KAC5Dg+C,EAAY,EAAIA,IAjoEjB,8CAqoExB,IAAMn7C,EAAQ,EAAH,wDACL+J,EAAOnI,KAAK0uC,2BAOlB,OALIvmC,IACF/J,EAAMg8B,eAAiBjyB,EACvBnI,KAAKq6B,iBAAiBj8B,IAGjBA,IA7oEiB,yCAgpEP41C,GACjB,IAAMyF,EAAsBz5C,KAAKwH,MAAMyvC,iBACvCj3C,KAAKwH,MAAMyvC,kBAAmB,EAE9B,IACE,OAAOjD,IADT,QAGEh0C,KAAKwH,MAAMyvC,iBAAmBwC,KAvpER,iCA2pEf9lD,GACT,IAAM+lD,EAAqB15C,KAAKwH,MAAM8wC,gBACtCt4C,KAAKwH,MAAM8wC,kBAAoB3kD,EAAK48C,SAEpC,IAAI,6BAJc71C,EAId,iCAJcA,EAId,kBACF,iEAAwB/G,GAAxB,OAAiC+G,IADnC,QAGEsF,KAAKwH,MAAM8wC,gBAAkBoB,KAlqEP,iDAsqEC/lD,GACzB,GAAIqM,KAAKiT,MAAM5c,EAAMiP,QAEnB,OADA3R,EAAK48C,UAAW,EACTvwC,KAAKy1C,WAAW9hD,GAAM,GAAM,GAC9B,GAAIqM,KAAK+6B,aAAa,cAC3B,IAAK/6B,KAAKo2C,wBAIR,OAHAziD,EAAK48C,UAAW,EAChBvwC,KAAKqY,MAAM1kB,EAAKoT,MAAOuoB,GAASoB,0CAChC1wB,KAAK22B,OACE32B,KAAKk2C,4BAA4BviD,QAG1CqM,KAAK02B,WAAW,KAAMrgC,EAAMiP,YAlrEN,GAAkBzH,IA0/E5C87C,YArGiB,SAAA97C,GAAU,gJAEzB,GAAImC,KAAKiT,MAAM5c,EAAMuN,QAAS,CAC5B,IAAMg2C,EAAmB55C,KAAKwH,MAAMT,MAC9BpT,EAAOqM,KAAKw0B,YAGlB,GAFAx0B,KAAK62B,IAAIxgC,EAAMuN,QAEX5D,KAAKiT,MAAM5c,EAAMkF,MAAO,CAC1B,IAAMA,EAAOyE,KAAKutC,oBAAoBvtC,KAAKwH,MAAMT,OAC3CtQ,EAAauJ,KAAK8uC,iBAAiBn7C,EAAM4H,GAG/C,GAFA9E,EAAW0R,KAAO,wBAEdnI,KAAKiT,MAAM5c,EAAMwL,QACnB,OAAOpL,EAIXuJ,KAAK02B,WAAWkjB,MAjBO,sCAsBzB,OAAO55C,KAAK65C,oBAAL,iCAAA75C,MAAA,MAAAA,KAAkD9E,eAtBhC,GAAkB2C,IAsG7Ci8C,aAhUkB,SAAAj8C,GAAU,8IACXk8C,GACf,GAAI/5C,KAAKiT,MAAM5c,EAAMq7B,aAAc,CACjC,IAAM/9B,EAAOqM,KAAKw0B,YAMlB,OALAx0B,KAAK22B,OACL32B,KAAKg6C,cAAc,oCACnBrmD,EAAK4H,KAAL,oDAAkC,GAClCyE,KAAKg6C,cAAc,oCACnBh6C,KAAKm3B,OAAO9gC,EAAMq7B,aACX1xB,KAAKi6C,kBAAkBtmD,EAAMomD,MATZ,wCAaVpmD,EAAMomD,GACtB,IAAMG,KAAgBvmD,EAAKomD,cAA8B,gBAAdpmD,EAAKwU,MAEhD,OADAxU,EAAKomD,aAAeA,EACbG,EAAavmD,EAAOqM,KAAKy0B,WAAW9gC,EAAM,iBAhBvB,uCAmBX4S,GACf,OAAa,KAATA,GAA6D,KAA9CvG,KAAK+S,MAAM8iB,WAAW71B,KAAKwH,MAAMgL,IAAM,GACjDxS,KAAKqkC,SAAShuC,EAAMq7B,YAAa,GAG1C,qDAAiCx2B,aAxBP,sCA4B1B,OAAO8E,KAAKm6C,iBAAiB,eAAtB,iCAAAn6C,MAAA,MAAAA,KAA8D9E,aA5B3C,wCAgC1B,OAAO8E,KAAKm6C,iBAAiB,eAAtB,mCAAAn6C,MAAA,MAAAA,KAAgE9E,aAhC7C,wCAmCV6b,QACH7jB,IAAT6jB,GAAoB,sDAA2B7b,aApCzB,yCAwC1B,OAAO8E,KAAKm6C,iBAAiB,YAAtB,oCAAAn6C,MAAA,MAAAA,KAA8D9E,aAxC3C,gCA2ClB6B,GACU,gBAAdA,EAAKoL,MAAwB,8CAAmBjN,aA5C1B,mCA+CfvH,GACX,OAAIA,GAAsB,gBAAdA,EAAKwU,MAAgD,eAAtBxU,EAAKomD,cAC9CpmD,EAAKomD,aAAe,UACbpmD,GAGT,iDAA6BuH,aArDH,4BAwDtBia,GACJ,iDAAgBA,MAIXnV,KAAK+6B,aAAa,UAInB5lB,GACcnV,KAAK0+B,YAETv2B,OAAS9R,EAAMq7B,eApEH,0CA2ER/9B,GACdA,EAAKmM,OAA6B,gBAApBnM,EAAKmM,MAAMqI,MAC7B,wDAA6BjN,aA7EH,+CAgFHvH,EAAMoJ,GAC7B,GAAkB,gBAAdA,EAAKoL,MAA0BpL,EAAK81B,OAAS91B,EAAK81B,MAAMO,cAC1D,oEAAyCl4B,WAG3C,GAAI8E,KAAKiT,MAAM5c,EAAM4L,OAAQ,CAC3B,IAAM0wB,EAAOh/B,EAIb,OAHAg/B,EAAK7yB,MAAQE,KAAKi6C,kBAAkBl9C,EAAM,cAC1CiD,KAAK22B,OACLhE,EAAKh+B,KAAOqL,KAAKo6C,eAAe,SACzBp6C,KAAKy0B,WAAW9B,EAAM,oBAK/B,OAFA3yB,KAAKs6B,YACL3mC,EAAK4H,KAAOwB,EAAKxB,KACVyE,KAAKi6C,kBAAkBtmD,EAAM,eA/FV,mCAmG1B,OAAOqM,KAAKm6C,iBAAiB,mBAAtB,8BAAAn6C,MAAA,MAAAA,KAA+D9E,aAnG5C,wCAuG1B,OAAO8E,KAAKm6C,iBAAiB,eAAtB,mCAAAn6C,MAAA,MAAAA,KAAgE9E,aAvG7C,iCA0GjBvH,EAAMswC,EAAaC,GAC5B,IAAM/7B,EAAO87B,EAAc,mBAAqB,kBAChDjkC,KAAK22B,OACL32B,KAAKq6C,eAAe1mD,GACpB,IAAM2mD,EAAYt6C,KAAKwH,MAAMi6B,OACvB/P,EAAc1xB,KAAKm6C,iBAAiB,cAE1C,GAAIzoB,EACF,GAAI1xB,KAAKiT,MAAM5c,EAAMkP,WAAavF,KAAKiT,MAAM5c,EAAMq7B,cAAgB1xB,KAAKiT,MAAM5c,EAAMmL,QAClF7N,EAAKmJ,GAAK40B,MACL,IAAIwS,IAAeD,EAGxB,OAFAtwC,EAAKmJ,GAAK,KACVnJ,EAAKgB,KAAOqL,KAAKi6C,kBAAkBvoB,EAAa,aACzC1xB,KAAKy0B,WAAW9gC,EAAMwU,GAE7BnI,KAAK02B,WAAW,KAAM,iCAGxB12B,KAAKu6C,aAAa5mD,EAAMswC,EAAaC,GAKvC,OAFAlkC,KAAKw6C,gBAAgB7mD,GACrBA,EAAKgB,KAAOqL,KAAKm6C,iBAAiB,cAAgBn6C,KAAKy6C,iBAAiB9mD,EAAKkK,WAAYy8C,GAClFt6C,KAAKy0B,WAAW9gC,EAAMwU,KAjIH,kCAoIhBxU,GACV,IAAM+9B,EAAc1xB,KAAKm6C,iBAAiB,cAC1C,IAAKzoB,EAAa,OAAO,EAAP,8CAA4Bx2B,WAE9C,IAAK8E,KAAK+6B,aAAa,UAAY/6B,KAAKiT,MAAM5c,EAAM0L,OAIlD,OAHApO,EAAKuhC,WAAa,GAClBvhC,EAAK0S,OAAS,KACd1S,EAAKmoC,YAAc97B,KAAKi6C,kBAAkBvoB,EAAa,eAChD1xB,KAAKy0B,WAAW9gC,EAAM,0BAG/BqM,KAAK06C,aAAa,qBAClB,IAAM/U,EAAY3lC,KAAKw0B,YAGvB,OAFAmR,EAAU1Q,SAAWvD,EACrB/9B,EAAKuhC,WAAa,CAACl1B,KAAKy0B,WAAWkR,EAAW,2BAC9C,+CAAyBhyC,KAnJC,iDAuJ1B,GAAIqM,KAAKiT,MAAM5c,EAAMtD,UAAW,CAC9B,IAAM4jC,EAAO32B,KAAK0rC,iBAElB,GAAI1rC,KAAK26C,qBAAqBhkB,EAAM,SAC9B32B,KAAK+S,MAAM6nC,WAAWvkD,EAAMq7B,YAAY5xB,MAAOE,KAAK66C,oBAAoBlkB,EAAO,IACjF,OAAO,EAKb,sEAjK0B,uDAoKKhjC,GAC/B,SAAIA,EAAKuhC,YAAcvhC,EAAKuhC,WAAWx7B,OAAS,IAIhD,qEAAiDwB,aAzKvB,kCA4KhBvH,GAAM,IAEduhC,EACEvhC,EADFuhC,YAGgB,MAAdA,OAAqB,EAASA,EAAWx7B,UAC3C/F,EAAKuhC,WAAaA,EAAW4lB,QAAO,SAAAnnD,GAAI,MAA2B,gBAAvBA,EAAKshC,SAAS9sB,SAG5D,+CAAkBxU,GAClBA,EAAKuhC,WAAaA,IAtLQ,kCAyLhBvhC,GACV,IAAM+9B,EAAc1xB,KAAKm6C,iBAAiB,cAC1C,IAAKzoB,EAAa,OAAO,EAAP,8CAA4Bx2B,WAG9C,GAFAvH,EAAKuhC,WAAa,IAEbl1B,KAAK+6B,aAAa,UAAY/6B,KAAKiT,MAAM5c,EAAM0L,OAGlD,OAFApO,EAAK0S,OAASrG,KAAKi6C,kBAAkBvoB,EAAa,iBAClD1xB,KAAKs6B,YACEt6B,KAAKy0B,WAAW9gC,EAAM,qBAG/B,IAAMgyC,EAAY3lC,KAAKy1B,gBAAgB/D,GAKvC,GAJAiU,EAAUE,MAAQnU,EAClB1xB,KAAKy0B,WAAWkR,EAAW,0BAC3BhyC,EAAKuhC,WAAWp/B,KAAK6vC,GAEjB3lC,KAAK62B,IAAIxgC,EAAM0L,OAAQ,CACzB,IAAMg5C,EAAgB/6C,KAAKg7C,8BAA8BrnD,GACpDonD,GAAe/6C,KAAKi7C,2BAA2BtnD,GAMtD,OAHAqM,KAAKu5B,iBAAiB,QACtB5lC,EAAK0S,OAASrG,KAAKk7C,oBACnBl7C,KAAKs6B,YACEt6B,KAAKy0B,WAAW9gC,EAAM,uBAjNH,0CAqN1B,OAAOqM,KAAKm6C,iBAAiB,kBAAtB,qCAAAn6C,MAAA,MAAAA,KAAqE9E,eArNlD,GAAkB2C,KAkU1Cs9C,GAAmBlqD,OAAOmqD,KAAKlpB,IAE/BmpB,GAAiB,CACrBC,WAAY,SACZC,oBAAgBroD,EAChBsoD,UAAW,EACXC,2BAA2B,EAC3BC,4BAA4B,EAC5BC,6BAA6B,EAC7BC,yBAAyB,EACzBC,wBAAwB,EACxB9yC,QAAS,GACT+yC,WAAY,KACZC,QAAQ,EACRC,QAAQ,EACRC,gCAAgC,EAChCroC,eAAe,G,IAaXsoC,G,WACJ,aAAc,UACZl8C,KAAKyhC,YAAS,EACdzhC,KAAKk2B,aAAU,EACfl2B,KAAKyS,cAAW,EAChBzS,KAAK4S,YAAS,EACd5S,KAAK6T,OAAS,GACd7T,KAAKm8C,kBAAoB,EACzBn8C,KAAKmiC,UAAY,GACjBniC,KAAK4iC,0BAA4B,GACjC5iC,KAAKmlC,wBAAyB,EAC9BnlC,KAAKo8C,YAAa,EAClBp8C,KAAKk5B,QAAS,EACdl5B,KAAKu+B,oBAAqB,EAC1Bv+B,KAAKw4B,gBAAiB,EACtBx4B,KAAKqoC,gBAAiB,EACtBroC,KAAKyV,YAAa,EAClBzV,KAAKi3C,kBAAmB,EACxBj3C,KAAKs4C,iBAAkB,EACvBt4C,KAAKq8C,aAAe,CAClBC,yBAA0B,EAC1BC,cAAe,MAEjBv8C,KAAKw8C,WAAY,EACjBx8C,KAAKy8C,4BAA6B,EAClCz8C,KAAK08C,OAAS,GACd18C,KAAK28C,eAAiB,CAAC,IACvB38C,KAAK48C,SAAW,GAChB58C,KAAKyH,iBAAmB,GACxBzH,KAAK0H,gBAAkB,GACvB1H,KAAKsI,aAAe,GACpBtI,KAAK+H,oBAAsB,KAC3B/H,KAAKwS,IAAM,EACXxS,KAAKkT,UAAY,EACjBlT,KAAKmI,KAAO9R,EAAM6K,IAClBlB,KAAK5O,MAAQ,KACb4O,KAAK+G,MAAQ,EACb/G,KAAKgH,IAAM,EACXhH,KAAK8S,cAAgB,KACrB9S,KAAK2S,gBAAkB,KACvB3S,KAAK0S,aAAe,EACpB1S,KAAK6S,WAAa,EAClB7S,KAAKmV,QAAU,CAACV,EAAQC,gBACxB1U,KAAKsV,aAAc,EACnBtV,KAAK8yC,aAAc,EACnB9yC,KAAK68C,aAAe,IAAIr8C,IACxBR,KAAK88C,oBAAsB,GAC3B98C,KAAK+8C,aAAe,E,uCAGjBr8C,GACHV,KAAKyhC,QAAgC,IAAvB/gC,EAAQo7C,YAAsD,WAAvBp7C,EAAQ46C,WAC7Dt7C,KAAKk2B,QAAUx1B,EAAQ86C,UACvBx7C,KAAKyS,SAAWzS,KAAK4S,OAAS5S,KAAKg9C,gB,oCAInC,OAAO,IAAIt2C,EAAS1G,KAAKk2B,QAASl2B,KAAKwS,IAAMxS,KAAKkT,a,4BAG9C+pC,GAIJ,IAHA,IAAMz1C,EAAQ,IAAI00C,EACZd,EAAOnqD,OAAOmqD,KAAKp7C,MAEhBnF,EAAI,EAAGnB,EAAS0hD,EAAK1hD,OAAQmB,EAAInB,EAAQmB,IAAK,CACrD,IAAMxI,EAAM+oD,EAAKvgD,GACbi+B,EAAM94B,KAAK3N,IAEV4qD,GAAcrrB,MAAMC,QAAQiH,KAC/BA,EAAMA,EAAI/9B,SAGZyM,EAAMnV,GAAOymC,EAGf,OAAOtxB,M,KAKP01C,GAAW,SAAiB32C,GAC9B,OAAOA,GAAQ,IAAMA,GAAQ,IAEzB42C,GAAoB,IAAI3kD,IAAI,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,MACtD4kD,GAAoC,CACxCC,UAAW,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,KACzCC,IAAK,CAAC,GAAI,GAAI,GAAI,MAEdC,GAAkC,CACxCA,IAAsC,CAAC,GAAI,KAC3CA,GAAgCC,IAAhC,YAA0CD,GAAgCE,KAA1E,CAA+E,GAAI,GAAI,GAAI,GAAI,GAAI,KACnGF,GAAgCG,IAAhC,YAA0CH,GAAgCC,KAA1E,CAA+E,GAAI,KACnFD,GAAgCD,IAAhC,YAA0CC,GAAgCG,KAA1E,CAA+E,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,M,IACvHC,GACJ,WAAYn2C,GAAO,UACjBxH,KAAKmI,KAAOX,EAAMW,KAClBnI,KAAK5O,MAAQoW,EAAMpW,MACnB4O,KAAK+G,MAAQS,EAAMT,MACnB/G,KAAKgH,IAAMQ,EAAMR,IACjBhH,KAAKuH,IAAM,IAAIT,EAAeU,EAAMiL,SAAUjL,EAAMoL,SAIlDgrC,G,8BACJ,WAAYl9C,EAASqS,GAAO,wBAC1B,gBACKqB,iBAAc,EACnB,EAAK4nC,OAAS,GACd,EAAKx0C,MAAQ,IAAI00C,GACjB,EAAK10C,MAAM6hC,KAAK3oC,GAChB,EAAKqS,MAAQA,EACb,EAAKrZ,OAASqZ,EAAMrZ,OACpB,EAAK0a,aAAc,EARO,E,4CAWlBzT,GACRX,KAAKg8C,OAAOtiD,OAASsG,KAAKwH,MAAMu1C,aAChC/8C,KAAKg8C,OAAOlmD,KAAK6K,KACfX,KAAKwH,MAAMu1C,e,6BAIR/8C,KAAKoU,cACRpU,KAAK69C,sBAED79C,KAAKU,QAAQs7C,QACfh8C,KAAK89C,UAAU,IAAIH,GAAM39C,KAAKwH,SAIlCxH,KAAKwH,MAAMqL,WAAa7S,KAAKwH,MAAMR,IACnChH,KAAKwH,MAAMkL,aAAe1S,KAAKwH,MAAMT,MACrC/G,KAAKwH,MAAMsL,cAAgB9S,KAAKwH,MAAMoL,OACtC5S,KAAKwH,MAAMmL,gBAAkB3S,KAAKwH,MAAMiL,SACxCzS,KAAKsoC,c,0BAGHngC,GACF,QAAInI,KAAKiT,MAAM9K,KACbnI,KAAK22B,QACE,K,4BAMLxuB,GACJ,OAAOnI,KAAKwH,MAAMW,OAASA,I,kCAI3B,IAAM41C,EAAM/9C,KAAKwH,MACjBxH,KAAKwH,MAAQu2C,EAAI5+C,OAAM,GACvBa,KAAKoU,aAAc,EACnBpU,KAAK22B,OACL32B,KAAKoU,aAAc,EACnB,IAAM4pC,EAAOh+C,KAAKwH,MAElB,OADAxH,KAAKwH,MAAQu2C,EACNC,I,uCAIP,OAAOh+C,KAAK66C,oBAAoB76C,KAAKwH,MAAMgL,O,0CAGzBA,GAGlB,OAFAhM,EAAe2M,UAAYX,EAEpBA,EADMhM,EAAe4M,KAAKpT,KAAK+S,OACpB,GAAGrZ,S,0CAIrB,OAAOsG,KAAK+S,MAAM8iB,WAAW71B,KAAK0rC,oB,gCAG1BjK,GAAQ,WAChBzhC,KAAKwH,MAAMi6B,OAASA,EAEhBA,IACFzhC,KAAKwH,MAAMq1C,aAAajhB,SAAQ,SAACloB,EAASlB,GAAV,OAAkB,EAAK6F,MAAM7F,EAAKkB,MAClE1T,KAAKwH,MAAMq1C,aAAaoB,W,mCAK1B,OAAOj+C,KAAKwH,MAAM2N,QAAQnV,KAAKwH,MAAM2N,QAAQzb,OAAS,K,kCAItD,IAAM2b,EAAarV,KAAKqV,aAKxB,IAJoB,MAAdA,OAAqB,EAASA,EAAWd,gBAAgBvU,KAAKk+C,YACpEl+C,KAAKwH,MAAMT,MAAQ/G,KAAKwH,MAAMgL,IAC9BxS,KAAKwH,MAAMiL,SAAWzS,KAAKwH,MAAMw1C,cAE7Bh9C,KAAKwH,MAAMgL,KAAOxS,KAAKtG,OACzBsG,KAAK81B,YAAYz/B,EAAM6K,SADzB,CAKA,IAAMsT,EAAyB,MAAda,OAAqB,EAASA,EAAWb,SAEtDA,EACFA,EAASxU,MAETA,KAAKm+C,iBAAiBn+C,KAAK+S,MAAMqrC,YAAYp+C,KAAKwH,MAAMgL,S,kCAIhD6rC,EAAOC,EAAMv3C,EAAOC,EAAKyL,EAAUG,GAC7C,IAAMtL,EAAU,CACda,KAAMk2C,EAAQ,eAAiB,cAC/BjtD,MAAOktD,EACPv3C,MAAOA,EACPC,IAAKA,EACLO,IAAK,IAAIT,EAAe2L,EAAUG,IAEhC5S,KAAKU,QAAQs7C,QAAQh8C,KAAK89C,UAAUx2C,GACxCtH,KAAKwH,MAAMo1C,SAAS9mD,KAAKwR,GACzBtH,KAAKu+C,WAAWj3C,K,yCAIhB,IAMI2L,EANER,EAAWzS,KAAKwH,MAAMw1C,cACtBj2C,EAAQ/G,KAAKwH,MAAMgL,IACnBxL,EAAMhH,KAAK+S,MAAMkG,QAAQ,KAAMjZ,KAAKwH,MAAMgL,IAAM,GACtD,IAAa,IAATxL,EAAY,MAAMhH,KAAKqY,MAAMtR,EAAOmC,EAAc6I,qBAKtD,IAJA/R,KAAKwH,MAAMgL,IAAMxL,EAAM,EACvBb,EAAWgN,UAAYpM,GAGfkM,EAAQ9M,EAAWiN,KAAKpT,KAAK+S,SAAWE,EAAMI,MAAQrT,KAAKwH,MAAMgL,OACrExS,KAAKwH,MAAM0uB,QACbl2B,KAAKwH,MAAM0L,UAAYD,EAAMI,MAAQJ,EAAM,GAAGvZ,OAG5CsG,KAAKoU,aACTpU,KAAKw+C,aAAY,EAAMx+C,KAAK+S,MAAMhY,MAAMgM,EAAQ,EAAGC,GAAMD,EAAO/G,KAAKwH,MAAMgL,IAAKC,EAAUzS,KAAKwH,MAAMw1C,iB,sCAGvFyB,GACd,IAAM13C,EAAQ/G,KAAKwH,MAAMgL,IACnBC,EAAWzS,KAAKwH,MAAMw1C,cACxBpnB,EAAK51B,KAAK+S,MAAM8iB,WAAW71B,KAAKwH,MAAMgL,KAAOisC,GAEjD,GAAIz+C,KAAKwH,MAAMgL,IAAMxS,KAAKtG,OACxB,MAAQ4M,EAAUsvB,MAAS51B,KAAKwH,MAAMgL,IAAMxS,KAAKtG,QAC/Ck8B,EAAK51B,KAAK+S,MAAM8iB,WAAW71B,KAAKwH,MAAMgL,KAItCxS,KAAKoU,aACTpU,KAAKw+C,aAAY,EAAOx+C,KAAK+S,MAAMhY,MAAMgM,EAAQ03C,EAAWz+C,KAAKwH,MAAMgL,KAAMzL,EAAO/G,KAAKwH,MAAMgL,IAAKC,EAAUzS,KAAKwH,MAAMw1C,iB,kCAIzH0B,EAAM,KAAO1+C,KAAKwH,MAAMgL,IAAMxS,KAAKtG,QAAQ,CACzC,IAAMk8B,EAAK51B,KAAK+S,MAAM8iB,WAAW71B,KAAKwH,MAAMgL,KAE5C,OAAQojB,GACN,KAAK,GACL,KAAK,IACL,KAAK,IACD51B,KAAKwH,MAAMgL,IACb,MAEF,KAAK,GAC+C,KAA9CxS,KAAK+S,MAAM8iB,WAAW71B,KAAKwH,MAAMgL,IAAM,MACvCxS,KAAKwH,MAAMgL,IAGjB,KAAK,GACL,KAAK,KACL,KAAK,OACDxS,KAAKwH,MAAMgL,MACXxS,KAAKwH,MAAM0uB,QACbl2B,KAAKwH,MAAM0L,UAAYlT,KAAKwH,MAAMgL,IAClC,MAEF,KAAK,GACH,OAAQxS,KAAK+S,MAAM8iB,WAAW71B,KAAKwH,MAAMgL,IAAM,IAC7C,KAAK,GACHxS,KAAK2+C,mBACL,MAEF,KAAK,GACH3+C,KAAK4+C,gBAAgB,GACrB,MAEF,QACE,MAAMF,EAGV,MAEF,QACE,IAAIj4C,EAAamvB,GAGf,MAAM8oB,IAFJ1+C,KAAKwH,MAAMgL,Q,kCASXrK,EAAM2wB,GAChB94B,KAAKwH,MAAMR,IAAMhH,KAAKwH,MAAMgL,IAC5BxS,KAAKwH,MAAMoL,OAAS5S,KAAKwH,MAAMw1C,cAC/B,IAAMznC,EAAWvV,KAAKwH,MAAMW,KAC5BnI,KAAKwH,MAAMW,KAAOA,EAClBnI,KAAKwH,MAAMpW,MAAQ0nC,EACd94B,KAAKoU,aAAapU,KAAKM,cAAciV,K,6CAI1C,GAAuB,IAAnBvV,KAAKwH,MAAMgL,MAAaxS,KAAK6+C,wBAAjC,CAIA,IAAMC,EAAU9+C,KAAKwH,MAAMgL,IAAM,EAC3BmkB,EAAO32B,KAAK+S,MAAM8iB,WAAWipB,GAEnC,GAAInoB,GAAQ,IAAMA,GAAQ,GACxB,MAAM32B,KAAKqY,MAAMrY,KAAKwH,MAAMgL,IAAKtJ,EAAcyH,0BAGjD,GAAa,MAATgmB,GAAyB,KAATA,GAAe32B,KAAKiJ,UAAU,kBAAmB,CAGnE,GAFAjJ,KAAK06C,aAAa,kBAE2C,SAAzD16C,KAAK8xB,gBAAgB,iBAAkB,cACzC,MAAM9xB,KAAKqY,MAAMrY,KAAKwH,MAAMgL,IAAc,MAATmkB,EAAeztB,EAAcqG,6CAA+CrG,EAAcsH,6CAGhH,MAATmmB,EACF32B,KAAK81B,YAAYz/B,EAAMqL,YAEvB1B,KAAK81B,YAAYz/B,EAAM+K,cAGzBpB,KAAKwH,MAAMgL,KAAO,OAElBxS,KAAKqkC,SAAShuC,EAAMsM,KAAM,M,sCAK5B,IAAMg0B,EAAO32B,KAAK+S,MAAM8iB,WAAW71B,KAAKwH,MAAMgL,IAAM,GAEhDmkB,GAAQ,IAAMA,GAAQ,GACxB32B,KAAK++C,YAAW,GAIL,KAATpoB,GAA6D,KAA9C32B,KAAK+S,MAAM8iB,WAAW71B,KAAKwH,MAAMgL,IAAM,IACxDxS,KAAKwH,MAAMgL,KAAO,EAClBxS,KAAK81B,YAAYz/B,EAAMkM,cAErBvC,KAAKwH,MAAMgL,IACbxS,KAAK81B,YAAYz/B,EAAM8L,Q,wCAKzB,GAAInC,KAAKwH,MAAM8N,cAAgBtV,KAAKwH,MAAM0xB,OAGxC,QAFEl5B,KAAKwH,MAAMgL,SACbxS,KAAKg/C,aAMM,KAFAh/C,KAAK+S,MAAM8iB,WAAW71B,KAAKwH,MAAMgL,IAAM,GAGlDxS,KAAKqkC,SAAShuC,EAAMrD,OAAQ,GAE5BgN,KAAKqkC,SAAShuC,EAAMyN,MAAO,K,8CAK7B,GAAuB,IAAnB9D,KAAKwH,MAAMgL,KAAaxS,KAAKtG,OAAS,EAAG,OAAO,EACpD,IAAIk8B,EAAK51B,KAAK+S,MAAM8iB,WAAW71B,KAAKwH,MAAMgL,IAAM,GAChD,GAAW,KAAPojB,EAAW,OAAO,EACtB,IAAM7uB,EAAQ/G,KAAKwH,MAAMgL,IAGzB,IAFAxS,KAAKwH,MAAMgL,KAAO,GAEVlM,EAAUsvB,MAAS51B,KAAKwH,MAAMgL,IAAMxS,KAAKtG,QAC/Ck8B,EAAK51B,KAAK+S,MAAM8iB,WAAW71B,KAAKwH,MAAMgL,KAGxC,IAAMphB,EAAQ4O,KAAK+S,MAAMhY,MAAMgM,EAAQ,EAAG/G,KAAKwH,MAAMgL,KAErD,OADAxS,KAAK81B,YAAYz/B,EAAMuM,qBAAsBxR,IACtC,I,4CAGamV,GACpB,IAAI4B,EAAgB,KAAT5B,EAAclQ,EAAMwN,KAAOxN,EAAMuN,OACxCq7C,EAAQ,EACRtoB,EAAO32B,KAAK+S,MAAM8iB,WAAW71B,KAAKwH,MAAMgL,IAAM,GAC5C8C,EAActV,KAAKwH,MAAM8N,YAElB,KAAT/O,GAAwB,KAATowB,IACjBsoB,IACAtoB,EAAO32B,KAAK+S,MAAM8iB,WAAW71B,KAAKwH,MAAMgL,IAAM,GAC9CrK,EAAO9R,EAAM0N,UAGF,KAAT4yB,GAAgBrhB,IAClB2pC,IACA92C,EAAO9R,EAAMrD,QAGfgN,KAAKqkC,SAASl8B,EAAM82C,K,yCAGH14C,GACjB,IAAMowB,EAAO32B,KAAK+S,MAAM8iB,WAAW71B,KAAKwH,MAAMgL,IAAM,GAEpD,GAAImkB,IAASpwB,EAAb,CAUA,GAAa,MAATA,EAAc,CAChB,GAAa,KAATowB,EAEF,YADA32B,KAAKqkC,SAAShuC,EAAM4M,SAAU,GAIhC,GAAIjD,KAAKiJ,UAAU,mBAA8B,MAAT0tB,EAAc,CACpD,GAA6D,QAAzD32B,KAAK8xB,gBAAgB,iBAAkB,cACzC,MAAM9xB,KAAKqY,MAAMrY,KAAKwH,MAAMgL,IAAKtJ,EAAcmG,2CAIjD,YADArP,KAAKqkC,SAAShuC,EAAMuL,UAAW,GAIjC,GAAI5B,KAAKiJ,UAAU,mBAA8B,KAAT0tB,EAAa,CACnD,GAA6D,QAAzD32B,KAAK8xB,gBAAgB,iBAAkB,cACzC,MAAM9xB,KAAKqY,MAAMrY,KAAKwH,MAAMgL,IAAKtJ,EAAcoH,0CAIjD,YADAtQ,KAAKqkC,SAAShuC,EAAMkL,YAAa,IAKxB,KAATo1B,EAKJ32B,KAAKqkC,SAAkB,MAAT99B,EAAelQ,EAAMgN,UAAYhN,EAAMkN,WAAY,GAJ/DvD,KAAKqkC,SAAShuC,EAAMrD,OAAQ,QAnCsB,KAA9CgN,KAAK+S,MAAM8iB,WAAW71B,KAAKwH,MAAMgL,IAAM,GACzCxS,KAAKqkC,SAAShuC,EAAMrD,OAAQ,GAE5BgN,KAAKqkC,SAAkB,MAAT99B,EAAelQ,EAAM8M,UAAY9M,EAAM+M,WAAY,K,wCA0CxD,KAFApD,KAAK+S,MAAM8iB,WAAW71B,KAAKwH,MAAMgL,IAAM,GAGlDxS,KAAKqkC,SAAShuC,EAAMrD,OAAQ,GAE5BgN,KAAKqkC,SAAShuC,EAAMiN,WAAY,K,yCAIjBiD,GACjB,IAAMowB,EAAO32B,KAAK+S,MAAM8iB,WAAW71B,KAAKwH,MAAMgL,IAAM,GAEpD,GAAImkB,IAASpwB,EACX,OAAa,KAATowB,GAAgB32B,KAAKgX,UAA0D,KAA9ChX,KAAK+S,MAAM8iB,WAAW71B,KAAKwH,MAAMgL,IAAM,IAAwC,IAA1BxS,KAAKwH,MAAMqL,aAAoB7S,KAAK4V,6BAO9H5V,KAAKqkC,SAAShuC,EAAMyM,OAAQ,IAN1B9C,KAAK4+C,gBAAgB,GACrB5+C,KAAKk+C,iBACLl+C,KAAKsoC,aAQI,KAAT3R,EACF32B,KAAKqkC,SAAShuC,EAAMrD,OAAQ,GAE5BgN,KAAKqkC,SAAShuC,EAAMsN,QAAS,K,sCAIjB4C,GACd,IAAMowB,EAAO32B,KAAK+S,MAAM8iB,WAAW71B,KAAKwH,MAAMgL,IAAM,GAChDzZ,EAAO,EAEX,OAAI49B,IAASpwB,GACXxN,EAAgB,KAATwN,GAA6D,KAA9CvG,KAAK+S,MAAM8iB,WAAW71B,KAAKwH,MAAMgL,IAAM,GAAY,EAAI,EAExB,KAAjDxS,KAAK+S,MAAM8iB,WAAW71B,KAAKwH,MAAMgL,IAAMzZ,QACzCiH,KAAKqkC,SAAShuC,EAAMrD,OAAQ+F,EAAO,QAIrCiH,KAAKqkC,SAAShuC,EAAMqN,SAAU3K,IAInB,KAAT49B,GAAwB,KAATpwB,GAAgBvG,KAAKgX,UAA0D,KAA9ChX,KAAK+S,MAAM8iB,WAAW71B,KAAKwH,MAAMgL,IAAM,IAA2D,KAA9CxS,KAAK+S,MAAM8iB,WAAW71B,KAAKwH,MAAMgL,IAAM,IAOlI,KAATmkB,IACF59B,EAAO,QAGTiH,KAAKqkC,SAAShuC,EAAMoN,WAAY1K,KAV9BiH,KAAK4+C,gBAAgB,GACrB5+C,KAAKk+C,iBACLl+C,KAAKsoC,e,wCAWS/hC,GAChB,IAAMowB,EAAO32B,KAAK+S,MAAM8iB,WAAW71B,KAAKwH,MAAMgL,IAAM,GAEpD,GAAa,KAATmkB,EAKJ,OAAa,KAATpwB,GAAwB,KAATowB,GACjB32B,KAAKwH,MAAMgL,KAAO,OAClBxS,KAAK81B,YAAYz/B,EAAMiM,aAIzBtC,KAAKqkC,SAAkB,KAAT99B,EAAclQ,EAAMwM,GAAKxM,EAAM0M,KAAM,GAVjD/C,KAAKqkC,SAAShuC,EAAMmN,SAAwD,KAA9CxD,KAAK+S,MAAM8iB,WAAW71B,KAAKwH,MAAMgL,IAAM,GAAY,EAAI,K,2CAcvF,IAAMmkB,EAAO32B,KAAK+S,MAAM8iB,WAAW71B,KAAKwH,MAAMgL,IAAM,GAC9C0sC,EAAQl/C,KAAK+S,MAAM8iB,WAAW71B,KAAKwH,MAAMgL,IAAM,GAExC,KAATmkB,EACY,KAAVuoB,EACFl/C,KAAKqkC,SAAShuC,EAAMrD,OAAQ,GAE5BgN,KAAKqkC,SAAShuC,EAAM6M,kBAAmB,GAEvB,KAATyzB,GAAiBuoB,GAAS,IAAMA,GAAS,MAIhDl/C,KAAKwH,MAAMgL,IACbxS,KAAK81B,YAAYz/B,EAAM+L,YAJvBpC,KAAKwH,MAAMgL,KAAO,EAClBxS,KAAK81B,YAAYz/B,EAAMgM,gB,uCAOVkE,GACf,OAAQA,GACN,KAAK,GAEH,YADAvG,KAAKm/C,gBAGP,KAAK,GAGH,QAFEn/C,KAAKwH,MAAMgL,SACbxS,KAAK81B,YAAYz/B,EAAMwL,QAGzB,KAAK,GAGH,QAFE7B,KAAKwH,MAAMgL,SACbxS,KAAK81B,YAAYz/B,EAAMyL,QAGzB,KAAK,GAGH,QAFE9B,KAAKwH,MAAMgL,SACbxS,KAAK81B,YAAYz/B,EAAM2L,MAGzB,KAAK,GAGH,QAFEhC,KAAKwH,MAAMgL,SACbxS,KAAK81B,YAAYz/B,EAAM0L,OAGzB,KAAK,GACH,GAAI/B,KAAKiJ,UAAU,mBAAmE,MAA9CjJ,KAAK+S,MAAM8iB,WAAW71B,KAAKwH,MAAMgL,IAAM,GAAY,CACzF,GAA6D,QAAzDxS,KAAK8xB,gBAAgB,iBAAkB,cACzC,MAAM9xB,KAAKqY,MAAMrY,KAAKwH,MAAMgL,IAAKtJ,EAAcqH,4CAGjDvQ,KAAK81B,YAAYz/B,EAAMgL,aACvBrB,KAAKwH,MAAMgL,KAAO,QAEhBxS,KAAKwH,MAAMgL,IACbxS,KAAK81B,YAAYz/B,EAAM8K,UAGzB,OAEF,KAAK,GAGH,QAFEnB,KAAKwH,MAAMgL,SACbxS,KAAK81B,YAAYz/B,EAAMiL,UAGzB,KAAK,IACH,GAAItB,KAAKiJ,UAAU,mBAAmE,MAA9CjJ,KAAK+S,MAAM8iB,WAAW71B,KAAKwH,MAAMgL,IAAM,GAAY,CACzF,GAA6D,QAAzDxS,KAAK8xB,gBAAgB,iBAAkB,cACzC,MAAM9xB,KAAKqY,MAAMrY,KAAKwH,MAAMgL,IAAKtJ,EAAcoG,6CAGjDtP,KAAK81B,YAAYz/B,EAAMoL,WACvBzB,KAAKwH,MAAMgL,KAAO,QAEhBxS,KAAKwH,MAAMgL,IACbxS,KAAK81B,YAAYz/B,EAAMmL,QAGzB,OAEF,KAAK,IAGH,QAFExB,KAAKwH,MAAMgL,SACbxS,KAAK81B,YAAYz/B,EAAMsL,QAGzB,KAAK,GAQH,YAPI3B,KAAKiJ,UAAU,iBAAiE,KAA9CjJ,KAAK+S,MAAM8iB,WAAW71B,KAAKwH,MAAMgL,IAAM,GAC3ExS,KAAKqkC,SAAShuC,EAAM6L,YAAa,MAE/BlC,KAAKwH,MAAMgL,IACbxS,KAAK81B,YAAYz/B,EAAM4L,SAK3B,KAAK,GAEH,YADAjC,KAAKo/C,qBAGP,KAAK,GAGH,QAFEp/C,KAAKwH,MAAMgL,SACbxS,KAAK81B,YAAYz/B,EAAMmM,WAGzB,KAAK,GAED,IAAMm0B,EAAO32B,KAAK+S,MAAM8iB,WAAW71B,KAAKwH,MAAMgL,IAAM,GAEpD,GAAa,MAATmkB,GAAyB,KAATA,EAElB,YADA32B,KAAKq/C,gBAAgB,IAIvB,GAAa,MAAT1oB,GAAyB,KAATA,EAElB,YADA32B,KAAKq/C,gBAAgB,GAIvB,GAAa,KAAT1oB,GAAwB,KAATA,EAEjB,YADA32B,KAAKq/C,gBAAgB,GAK3B,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GAEH,YADAr/C,KAAK++C,YAAW,GAGlB,KAAK,GACL,KAAK,GAEH,YADA/+C,KAAKs/C,WAAW/4C,GAGlB,KAAK,GAEH,YADAvG,KAAKu/C,kBAGP,KAAK,GACL,KAAK,GAEH,YADAv/C,KAAKw/C,sBAAsBj5C,GAG7B,KAAK,IACL,KAAK,GAEH,YADAvG,KAAKy/C,mBAAmBl5C,GAG1B,KAAK,GAEH,YADAvG,KAAK0/C,kBAGP,KAAK,GACL,KAAK,GAEH,YADA1/C,KAAK2/C,mBAAmBp5C,GAG1B,KAAK,GACL,KAAK,GAEH,YADAvG,KAAKs5C,gBAAgB/yC,GAGvB,KAAK,GACL,KAAK,GAEH,YADAvG,KAAK4/C,kBAAkBr5C,GAGzB,KAAK,IAEH,YADAvG,KAAKqkC,SAAShuC,EAAM2M,MAAO,GAG7B,KAAK,GAGH,QAFEhD,KAAKwH,MAAMgL,SACbxS,KAAK81B,YAAYz/B,EAAMqM,IAGzB,KAAK,GAEH,YADA1C,KAAK6/C,uBAGP,KAAK,GAEH,YADA7/C,KAAK8/C,WAGP,QACE,GAAIzpC,EAAkB9P,GAEpB,YADAvG,KAAK8/C,WAMX,MAAM9/C,KAAKqY,MAAMrY,KAAKwH,MAAMgL,IAAKtJ,EAAc4D,yBAA0ByJ,OAAOigB,cAAcjwB,M,+BAGvF4B,EAAMpP,GACb,IAAMs9B,EAAMr2B,KAAK+S,MAAMhY,MAAMiF,KAAKwH,MAAMgL,IAAKxS,KAAKwH,MAAMgL,IAAMzZ,GAC9DiH,KAAKwH,MAAMgL,KAAOzZ,EAClBiH,KAAK81B,YAAY3tB,EAAMkuB,K,mCAOvB,IAHA,IACI0pB,EAASC,EADPj5C,EAAQ/G,KAAKwH,MAAMgL,MAGhB,CACP,GAAIxS,KAAKwH,MAAMgL,KAAOxS,KAAKtG,OACzB,MAAMsG,KAAKqY,MAAMtR,EAAOmC,EAAc8I,oBAGxC,IAAM4jB,EAAK51B,KAAK+S,MAAMktC,OAAOjgD,KAAKwH,MAAMgL,KAExC,GAAItM,EAAUoQ,KAAKsf,GACjB,MAAM51B,KAAKqY,MAAMtR,EAAOmC,EAAc8I,oBAGxC,GAAI+tC,EACFA,GAAU,MACL,CACL,GAAW,MAAPnqB,EACFoqB,GAAU,OACL,GAAW,MAAPpqB,GAAcoqB,EACvBA,GAAU,OACL,GAAW,MAAPpqB,IAAeoqB,EACxB,MAGFD,EAAiB,OAAPnqB,IAGV51B,KAAKwH,MAAMgL,IAGf,IAAM0tC,EAAUlgD,KAAK+S,MAAMhY,MAAMgM,EAAO/G,KAAKwH,MAAMgL,OACjDxS,KAAKwH,MAAMgL,IAGb,IAFA,IAAI2tC,EAAO,GAEJngD,KAAKwH,MAAMgL,IAAMxS,KAAKtG,QAAQ,CACnC,IAAM0mD,EAAOpgD,KAAK+S,MAAM/S,KAAKwH,MAAMgL,KAC7B6tC,EAAWrgD,KAAK+S,MAAMqrC,YAAYp+C,KAAKwH,MAAMgL,KAEnD,GAAI2qC,GAAkBnrD,IAAIouD,GACpBD,EAAKlnC,QAAQmnC,IAAS,GACxBpgD,KAAKqY,MAAMrY,KAAKwH,MAAMgL,IAAM,EAAGtJ,EAAc8B,0BAE1C,KAAIyL,EAAiB4pC,IAA0B,KAAbA,EAGvC,MAFArgD,KAAKqY,MAAMrY,KAAKwH,MAAMgL,IAAM,EAAGtJ,EAAcqE,wBAK7CvN,KAAKwH,MAAMgL,IACb2tC,GAAQC,EAGVpgD,KAAK81B,YAAYz/B,EAAM2K,OAAQ,CAC7BoxB,QAAS8tB,EACTloC,MAAOmoC,M,8BAIHG,EAAOC,EAAKC,GAOlB,IAPsD,IAA1BC,IAA0B,yDAChD15C,EAAQ/G,KAAKwH,MAAMgL,IACnBkuC,EAA8B,KAAVJ,EAAelD,GAAkCE,IAAMF,GAAkCC,UAC7GsD,EAA4B,KAAVL,EAAe/C,GAAgCD,IAAgB,KAAVgD,EAAe/C,GAAgCG,IAAgB,IAAV4C,EAAc/C,GAAgCC,IAAMD,GAAgCE,IAClNhb,GAAU,EACVme,EAAQ,EAEH/lD,EAAI,EAAGy3B,EAAW,MAAPiuB,EAAcM,IAAWN,EAAK1lD,EAAIy3B,IAAKz3B,EAAG,CAC5D,IAAM0L,EAAOvG,KAAK+S,MAAM8iB,WAAW71B,KAAKwH,MAAMgL,KAC1CsmB,OAAG,EAEP,GAAa,KAATvyB,EAAJ,CA4BA,IATEuyB,EADEvyB,GAAQ,GACJA,EAAO,GAAK,GACTA,GAAQ,GACXA,EAAO,GAAK,GACT22C,GAAS32C,GACZA,EAAO,GAEPs6C,MAGGP,EACT,GAAItgD,KAAKU,QAAQkT,eAAiBklB,GAAO,EACvCA,EAAM,EACN94B,KAAKqY,MAAMrY,KAAKwH,MAAMT,MAAQlM,EAAI,EAAGqO,EAAcmD,aAAci0C,OAC5D,KAAIE,EAIT,MAHA1nB,EAAM,EACN2J,GAAU,IAMZziC,KAAKwH,MAAMgL,IACbouC,EAAQA,EAAQN,EAAQxnB,MAzCxB,CACE,IAAMgoB,EAAO9gD,KAAK+S,MAAM8iB,WAAW71B,KAAKwH,MAAMgL,IAAM,GAC9CmkB,EAAO32B,KAAK+S,MAAM8iB,WAAW71B,KAAKwH,MAAMgL,IAAM,KAEb,IAAnCmuC,EAAgB1nC,QAAQ0d,IAEjB+pB,EAAkBznC,QAAQ6nC,IAAS,GAAKJ,EAAkBznC,QAAQ0d,IAAS,GAAKoqB,OAAOC,MAAMrqB,KADtG32B,KAAKqY,MAAMrY,KAAKwH,MAAMgL,IAAKtJ,EAAc+H,4BAKtCwvC,GACHzgD,KAAKqY,MAAMrY,KAAKwH,MAAMgL,IAAKtJ,EAAcoF,oCAGzCtO,KAAKwH,MAAMgL,KA8BjB,OAAIxS,KAAKwH,MAAMgL,MAAQzL,GAAgB,MAAPw5C,GAAevgD,KAAKwH,MAAMgL,IAAMzL,IAAUw5C,GAAO9d,EACxE,KAGFme,I,sCAGON,GACd,IAAMv5C,EAAQ/G,KAAKwH,MAAMgL,IACrByuC,GAAW,EACfjhD,KAAKwH,MAAMgL,KAAO,EAClB,IAAMsmB,EAAM94B,KAAKkhD,QAAQZ,GAEd,MAAPxnB,GACF94B,KAAKqY,MAAMrY,KAAKwH,MAAMT,MAAQ,EAAGmC,EAAcmD,aAAci0C,GAG/D,IAAM3pB,EAAO32B,KAAK+S,MAAM8iB,WAAW71B,KAAKwH,MAAMgL,KAE9C,GAAa,MAATmkB,IACA32B,KAAKwH,MAAMgL,IACbyuC,GAAW,OACN,GAAa,MAATtqB,EACT,MAAM32B,KAAKqY,MAAMtR,EAAOmC,EAAckD,gBAGxC,GAAIiK,EAAkBrW,KAAK+S,MAAMqrC,YAAYp+C,KAAKwH,MAAMgL,MACtD,MAAMxS,KAAKqY,MAAMrY,KAAKwH,MAAMgL,IAAKtJ,EAAcmF,kBAGjD,GAAI4yC,EAAJ,CACE,IAAM5qB,EAAMr2B,KAAK+S,MAAMhY,MAAMgM,EAAO/G,KAAKwH,MAAMgL,KAAKnb,QAAQ,QAAS,IACrE2I,KAAK81B,YAAYz/B,EAAMyK,OAAQu1B,QAIjCr2B,KAAK81B,YAAYz/B,EAAMwK,IAAKi4B,K,iCAGnBqoB,GACT,IAAMp6C,EAAQ/G,KAAKwH,MAAMgL,IACrB4uC,GAAU,EACVH,GAAW,EACXI,GAAY,EACZC,GAAc,EACdC,GAAU,EAETJ,GAAsC,OAArBnhD,KAAKkhD,QAAQ,KACjClhD,KAAKqY,MAAMtR,EAAOmC,EAAc0D,eAGlC,IAAM40C,EAAiBxhD,KAAKwH,MAAMgL,IAAMzL,GAAS,GAAsC,KAAjC/G,KAAK+S,MAAM8iB,WAAW9uB,GAE5E,GAAIy6C,EAAgB,CAClB,IAAMC,EAAUzhD,KAAK+S,MAAMhY,MAAMgM,EAAO/G,KAAKwH,MAAMgL,KAGnD,GAFAxS,KAAK0hD,uBAAuB36C,EAAOmC,EAAc+G,qBAE5CjQ,KAAKwH,MAAMi6B,OAAQ,CACtB,IAAMkgB,EAAgBF,EAAQxoC,QAAQ,KAElC0oC,EAAgB,GAClB3hD,KAAKqY,MAAMspC,EAAgB56C,EAAOmC,EAAcoJ,2BAIpDivC,EAAUC,IAAmB,OAAOlrC,KAAKmrC,GAG3C,IAAI9qB,EAAO32B,KAAK+S,MAAM8iB,WAAW71B,KAAKwH,MAAMgL,KA6C5C,GA3Ca,KAATmkB,GAAgB4qB,MAChBvhD,KAAKwH,MAAMgL,IACbxS,KAAKkhD,QAAQ,IACbE,GAAU,EACVzqB,EAAO32B,KAAK+S,MAAM8iB,WAAW71B,KAAKwH,MAAMgL,MAG5B,KAATmkB,GAAwB,MAATA,GAAkB4qB,IAGvB,MAFb5qB,EAAO32B,KAAK+S,MAAM8iB,aAAa71B,KAAKwH,MAAMgL,OAEd,KAATmkB,KACf32B,KAAKwH,MAAMgL,IAGU,OAArBxS,KAAKkhD,QAAQ,KACflhD,KAAKqY,MAAMtR,EAAOmC,EAAc2D,0BAGlCu0C,GAAU,EACVE,GAAc,EACd3qB,EAAO32B,KAAK+S,MAAM8iB,WAAW71B,KAAKwH,MAAMgL,MAG7B,MAATmkB,KACEyqB,GAAWI,IACbxhD,KAAKqY,MAAMtR,EAAOmC,EAAcgD,wBAGhClM,KAAKwH,MAAMgL,IACbyuC,GAAW,GAGA,MAATtqB,IACF32B,KAAK06C,aAAa,UAAW16C,KAAKwH,MAAMgL,MAEpC8uC,GAAeE,IACjBxhD,KAAKqY,MAAMtR,EAAOmC,EAAckD,kBAGhCpM,KAAKwH,MAAMgL,IACb6uC,GAAY,GAGVhrC,EAAkBrW,KAAK+S,MAAMqrC,YAAYp+C,KAAKwH,MAAMgL,MACtD,MAAMxS,KAAKqY,MAAMrY,KAAKwH,MAAMgL,IAAKtJ,EAAcmF,kBAGjD,IAAMgoB,EAAMr2B,KAAK+S,MAAMhY,MAAMgM,EAAO/G,KAAKwH,MAAMgL,KAAKnb,QAAQ,SAAU,IAEtE,GAAI4pD,EACFjhD,KAAK81B,YAAYz/B,EAAMyK,OAAQu1B,QAIjC,GAAIgrB,EACFrhD,KAAK81B,YAAYz/B,EAAM0K,QAASs1B,OADlC,CAKA,IAAMyC,EAAMyoB,EAAU9qB,SAASJ,EAAK,GAAKurB,WAAWvrB,GACpDr2B,KAAK81B,YAAYz/B,EAAMwK,IAAKi4B,M,oCAGhB+oB,GACZ,IACIt7C,EAEJ,GAAW,MAHAvG,KAAK+S,MAAM8iB,WAAW71B,KAAKwH,MAAMgL,KAG5B,CACd,IAAMsvC,IAAY9hD,KAAKwH,MAAMgL,IAI7B,GAHAjM,EAAOvG,KAAK+hD,YAAY/hD,KAAK+S,MAAMkG,QAAQ,IAAKjZ,KAAKwH,MAAMgL,KAAOxS,KAAKwH,MAAMgL,KAAK,EAAMqvC,KACtF7hD,KAAKwH,MAAMgL,IAEA,OAATjM,GAAiBA,EAAO,QAAU,CACpC,IAAIs7C,EAGF,OAAO,KAFP7hD,KAAKqY,MAAMypC,EAAS54C,EAAciD,wBAMtC5F,EAAOvG,KAAK+hD,YAAY,GAAG,EAAOF,GAGpC,OAAOt7C,I,iCAGE4vB,GAIT,IAHA,IAAI/gB,EAAM,GACNugB,IAAe31B,KAAKwH,MAAMgL,MAErB,CACP,GAAIxS,KAAKwH,MAAMgL,KAAOxS,KAAKtG,OACzB,MAAMsG,KAAKqY,MAAMrY,KAAKwH,MAAMT,MAAOmC,EAAc+I,oBAGnD,IAAM2jB,EAAK51B,KAAK+S,MAAM8iB,WAAW71B,KAAKwH,MAAMgL,KAC5C,GAAIojB,IAAOO,EAAO,MAElB,GAAW,KAAPP,EACFxgB,GAAOpV,KAAK+S,MAAMhY,MAAM46B,EAAY31B,KAAKwH,MAAMgL,KAC/C4C,GAAOpV,KAAKgiD,iBAAgB,GAC5BrsB,EAAa31B,KAAKwH,MAAMgL,SACnB,GAAW,OAAPojB,GAAsB,OAAPA,IACtB51B,KAAKwH,MAAMgL,MACXxS,KAAKwH,MAAM0uB,QACbl2B,KAAKwH,MAAM0L,UAAYlT,KAAKwH,MAAMgL,QAC7B,IAAIlM,EAAUsvB,GACnB,MAAM51B,KAAKqY,MAAMrY,KAAKwH,MAAMT,MAAOmC,EAAc+I,sBAE/CjS,KAAKwH,MAAMgL,KAIjB4C,GAAOpV,KAAK+S,MAAMhY,MAAM46B,EAAY31B,KAAKwH,MAAMgL,OAC/CxS,KAAK81B,YAAYz/B,EAAM4K,OAAQmU,K,sCAQ/B,IAJA,IAAIA,EAAM,GACNugB,EAAa31B,KAAKwH,MAAMgL,IACxByvC,GAAkB,IAEb,CACP,GAAIjiD,KAAKwH,MAAMgL,KAAOxS,KAAKtG,OACzB,MAAMsG,KAAKqY,MAAMrY,KAAKwH,MAAMT,MAAOmC,EAAcgJ,sBAGnD,IAAM0jB,EAAK51B,KAAK+S,MAAM8iB,WAAW71B,KAAKwH,MAAMgL,KAE5C,GAAW,KAAPojB,GAAoB,KAAPA,GAA2D,MAA9C51B,KAAK+S,MAAM8iB,WAAW71B,KAAKwH,MAAMgL,IAAM,GACnE,OAAIxS,KAAKwH,MAAMgL,MAAQxS,KAAKwH,MAAMT,OAAS/G,KAAKiT,MAAM5c,EAAMD,UAC/C,KAAPw/B,GACF51B,KAAKwH,MAAMgL,KAAO,OAClBxS,KAAK81B,YAAYz/B,EAAMoM,kBAGrBzC,KAAKwH,MAAMgL,SACbxS,KAAK81B,YAAYz/B,EAAMmM,aAK3B4S,GAAOpV,KAAK+S,MAAMhY,MAAM46B,EAAY31B,KAAKwH,MAAMgL,UAC/CxS,KAAK81B,YAAYz/B,EAAMD,SAAU6rD,EAAkB,KAAO7sC,IAI5D,GAAW,KAAPwgB,EAAW,CACbxgB,GAAOpV,KAAK+S,MAAMhY,MAAM46B,EAAY31B,KAAKwH,MAAMgL,KAC/C,IAAMutC,EAAU//C,KAAKgiD,iBAAgB,GAErB,OAAZjC,EACFkC,GAAkB,EAElB7sC,GAAO2qC,EAGTpqB,EAAa31B,KAAKwH,MAAMgL,SACnB,GAAIlM,EAAUsvB,GAAK,CAIxB,OAHAxgB,GAAOpV,KAAK+S,MAAMhY,MAAM46B,EAAY31B,KAAKwH,MAAMgL,OAC7CxS,KAAKwH,MAAMgL,IAELojB,GACN,KAAK,GAC2C,KAA1C51B,KAAK+S,MAAM8iB,WAAW71B,KAAKwH,MAAMgL,QACjCxS,KAAKwH,MAAMgL,IAGjB,KAAK,GACH4C,GAAO,KACP,MAEF,QACEA,GAAOmB,OAAOC,aAAaof,KAI7B51B,KAAKwH,MAAM0uB,QACbl2B,KAAKwH,MAAM0L,UAAYlT,KAAKwH,MAAMgL,IAClCmjB,EAAa31B,KAAKwH,MAAMgL,UAEtBxS,KAAKwH,MAAMgL,O,6CAKIA,EAAKkB,GACtB1T,KAAKwH,MAAMi6B,SAAWzhC,KAAKwH,MAAMq1C,aAAa7qD,IAAIwgB,GACpDxS,KAAKqY,MAAM7F,EAAKkB,GAEhB1T,KAAKwH,MAAMq1C,aAAanqD,IAAI8f,EAAKkB,K,sCAIrBwuC,GACd,IAAML,GAAkBK,EAClBtsB,EAAK51B,KAAK+S,MAAM8iB,aAAa71B,KAAKwH,MAAMgL,KAG9C,SAFExS,KAAKwH,MAAMgL,IAELojB,GACN,KAAK,IACH,MAAO,KAET,KAAK,IACH,MAAO,KAET,KAAK,IAED,IAAMrvB,EAAOvG,KAAK+hD,YAAY,GAAG,EAAOF,GACxC,OAAgB,OAATt7C,EAAgB,KAAOgQ,OAAOC,aAAajQ,GAGtD,KAAK,IAED,IAAMA,EAAOvG,KAAKmiD,cAAcN,GAChC,OAAgB,OAATt7C,EAAgB,KAAOgQ,OAAOigB,cAAcjwB,GAGvD,KAAK,IACH,MAAO,KAET,KAAK,GACH,MAAO,KAET,KAAK,IACH,MAAO,KAET,KAAK,IACH,MAAO,KAET,KAAK,GAC2C,KAA1CvG,KAAK+S,MAAM8iB,WAAW71B,KAAKwH,MAAMgL,QACjCxS,KAAKwH,MAAMgL,IAGjB,KAAK,GACHxS,KAAKwH,MAAM0L,UAAYlT,KAAKwH,MAAMgL,MAChCxS,KAAKwH,MAAM0uB,QAEf,KAAK,KACL,KAAK,KACH,MAAO,GAET,KAAK,GACL,KAAK,GACH,GAAIgsB,EACF,OAAO,KAEPliD,KAAK0hD,uBAAuB1hD,KAAKwH,MAAMgL,IAAM,EAAGtJ,EAAc8G,qBAGlE,QACE,GAAI4lB,GAAM,IAAMA,GAAM,GAAI,CACxB,IAAMksB,EAAU9hD,KAAKwH,MAAMgL,IAAM,EAE7B4vC,EADUpiD,KAAK+S,MAAMwjB,OAAOv2B,KAAKwH,MAAMgL,IAAM,EAAG,GAAGS,MAAM,WACxC,GACjBovC,EAAQ5rB,SAAS2rB,EAAU,GAE3BC,EAAQ,MACVD,EAAWA,EAASrnD,MAAM,GAAI,GAC9BsnD,EAAQ5rB,SAAS2rB,EAAU,IAG7BpiD,KAAKwH,MAAMgL,KAAO4vC,EAAS1oD,OAAS,EACpC,IAAMi9B,EAAO32B,KAAK+S,MAAM8iB,WAAW71B,KAAKwH,MAAMgL,KAE9C,GAAiB,MAAb4vC,GAA6B,KAATzrB,GAAwB,KAATA,EAAa,CAClD,GAAIurB,EACF,OAAO,KAEPliD,KAAK0hD,uBAAuBI,EAAS54C,EAAc8G,qBAIvD,OAAOuG,OAAOC,aAAa6rC,GAG7B,OAAO9rC,OAAOC,aAAaof,M,kCAIrB2qB,EAAKC,EAAUqB,GACzB,IAAMC,EAAU9hD,KAAKwH,MAAMgL,IACrB8vC,EAAItiD,KAAKkhD,QAAQ,GAAIX,EAAKC,GAAU,GAU1C,OARU,OAAN8B,IACET,EACF7hD,KAAKqY,MAAMypC,EAAS54C,EAAcoD,uBAElCtM,KAAKwH,MAAMgL,IAAMsvC,EAAU,GAIxBQ,I,kCAIP,IAAIvrC,EAAO,GACX/W,KAAKwH,MAAMsrC,aAAc,EAIzB,IAHA,IAAM/rC,EAAQ/G,KAAKwH,MAAMgL,IACrBmjB,EAAa31B,KAAKwH,MAAMgL,IAErBxS,KAAKwH,MAAMgL,IAAMxS,KAAKtG,QAAQ,CACnC,IAAMk8B,EAAK51B,KAAK+S,MAAMqrC,YAAYp+C,KAAKwH,MAAMgL,KAE7C,GAAIiE,EAAiBmf,GACnB51B,KAAKwH,MAAMgL,KAAOojB,GAAM,MAAS,EAAI,OAChC,GAAI51B,KAAKwH,MAAMiO,YAAqB,KAAPmgB,IAChC51B,KAAKwH,MAAMgL,QACR,IAAW,KAAPojB,EAwBT,MAvBA51B,KAAKwH,MAAMsrC,aAAc,EACzB/7B,GAAQ/W,KAAK+S,MAAMhY,MAAM46B,EAAY31B,KAAKwH,MAAMgL,KAChD,IAAM+vC,EAAWviD,KAAKwH,MAAMgL,IACtBgwC,EAAkBxiD,KAAKwH,MAAMgL,MAAQzL,EAAQsP,EAAoBI,EAEvE,GAAgD,MAA5CzW,KAAK+S,MAAM8iB,aAAa71B,KAAKwH,MAAMgL,KAAc,CACnDxS,KAAKqY,MAAMrY,KAAKwH,MAAMgL,IAAKtJ,EAAcyE,sBACzC,WAGA3N,KAAKwH,MAAMgL,IACb,IAAMiwC,EAAMziD,KAAKmiD,eAAc,GAEnB,OAARM,IACGD,EAAgBC,IACnBziD,KAAKqY,MAAMkqC,EAAUr5C,EAAciC,4BAGrC4L,GAAQR,OAAOigB,cAAcisB,IAG/B9sB,EAAa31B,KAAKwH,MAAMgL,KAM5B,OAAOuE,EAAO/W,KAAK+S,MAAMhY,MAAM46B,EAAY31B,KAAKwH,MAAMgL,O,iCAG7CuE,GACT,MAAgB,eAATA,GAAkC,oBAATA,I,iCAIhC,IAAMA,EAAO/W,KAAK0iD,YACZv6C,EAAO5H,EAAStO,IAAI8kB,IAAS1gB,EAAMkF,MAErCyE,KAAKwH,MAAMiO,YAAgBzV,KAAKyV,WAAWsB,IAAU/W,KAAKwH,MAAM0xB,QAClEl5B,KAAKqY,MAAMrY,KAAKwH,MAAMgL,IAAKtJ,EAAcuD,kBAAmBsK,GAG9D/W,KAAK81B,YAAY3tB,EAAM4O,K,4CAIvB,IAAM86B,EAAK7xC,KAAKwH,MAAMW,KAAKlI,QAEvB4xC,GAAM7xC,KAAKwH,MAAMsrC,aACnB9yC,KAAKqY,MAAMrY,KAAKwH,MAAMT,MAAOmC,EAAcsD,2BAA4BqlC,K,mCAI9Dt8B,GACX,IAAM9hB,EAASuM,KAAKqV,aAEpB,OAAI5hB,IAAWghB,EAAQjY,oBAAsB/I,IAAWghB,EAAQS,oBAI5DK,IAAalf,EAAM4L,OAAUxO,IAAWghB,EAAQC,gBAAkBjhB,IAAWghB,EAAQE,gBAIrFY,IAAalf,EAAMsO,SAAW4Q,IAAalf,EAAMkF,MAAQyE,KAAKwH,MAAM8N,YAC/DtV,KAAK4V,wBAGVL,IAAalf,EAAMiO,OAASiR,IAAalf,EAAM2L,MAAQuT,IAAalf,EAAM6K,KAAOqU,IAAalf,EAAMyL,QAAUyT,IAAalf,EAAMiM,QAIjIiT,IAAalf,EAAMmL,OACd/N,IAAWghB,EAAQC,eAGxBa,IAAalf,EAAM0O,MAAQwQ,IAAalf,EAAM2O,QAAUuQ,IAAalf,EAAMkF,OAI3Ega,IAAalf,EAAMoN,aAIfzD,KAAKwH,MAAM8N,eAvBT7hB,EAAO6gB,U,oCA0BLiB,GACZ,IACIotC,EADEx6C,EAAOnI,KAAKwH,MAAMW,MAGpBA,EAAKlI,SAAYsV,IAAalf,EAAM8L,KAAOoT,IAAalf,EAAMgM,aAEvDsgD,EAASx6C,EAAK7H,eACvBqiD,EAAOnwD,KAAKwN,KAAMuV,GAElBvV,KAAKwH,MAAM8N,YAAcnN,EAAKzI,WAJ9BM,KAAKwH,MAAM8N,aAAc,M,GA/sCP/C,GAytClBqwC,GACJ,aAAc,UACZ5iD,KAAK6iD,aAAe,IAAIrqD,IACxBwH,KAAK8iD,cAAgB,IAAItiD,IACzBR,KAAKwY,sBAAwB,IAAIhY,KAI/BuiD,G,WACJ,WAAY1qC,GAAO,UACjBrY,KAAKoH,MAAQ,GACbpH,KAAKwY,sBAAwB,IAAIhY,IACjCR,KAAKqY,MAAQA,E,4CAIb,OAAOrY,KAAKoH,MAAMpH,KAAKoH,MAAM1N,OAAS,K,8BAItCsG,KAAKoH,MAAMtR,KAAK,IAAI8sD,M,6BAOpB,IAHA,IAAMI,EAAgBhjD,KAAKoH,MAAMzN,MAC3B2qC,EAAUtkC,KAAKskC,UAEZkG,EAAK,EAAGyY,EAAcrxB,MAAMsxB,KAAKF,EAAcxqC,uBAAwBgyB,EAAKyY,EAAYvpD,OAAQ8wC,IAAM,SACzFyY,EAAYzY,GAD6E,GACtGjvC,EADsG,KAChGiX,EADgG,KAGzG8xB,EACGA,EAAQ9rB,sBAAsBxmB,IAAIuJ,IACrC+oC,EAAQ9rB,sBAAsB9lB,IAAI6I,EAAMiX,GAG1CxS,KAAKqY,MAAM7F,EAAKtJ,EAAc8D,8BAA+BzR,M,yCAKhDA,EAAMwlC,EAAavuB,GACpC,IAAM2wC,EAAanjD,KAAKskC,UACpB8e,EAAYD,EAAWN,aAAa7wD,IAAIuJ,GAE5C,GA34PgC8nD,EA24P5BtiB,EAA2C,CAC7C,IAAMuiB,EAAWF,GAAaD,EAAWL,cAAc7wD,IAAIsJ,GAE3D,GAAI+nD,GAKFF,GAn5P4BC,EAi5PZC,MAj5PYD,EAk5PZtiB,KAr5PU,EAk5PRuiB,MAl5PQ,EAm5PRviB,KAIFoiB,EAAWL,cAAc/pC,OAAOxd,QACtC6nD,GACVD,EAAWL,cAAcpwD,IAAI6I,EAAMwlC,GAInCqiB,GACFpjD,KAAKqY,MAAM7F,EAAKtJ,EAAckG,yBAA0B7T,GAG1D4nD,EAAWN,aAAajqD,IAAI2C,GAC5B4nD,EAAW3qC,sBAAsBO,OAAOxd,K,qCAG3BA,EAAMiX,GAGnB,IAFA,IAAI2wC,EAEKzY,EAAM,EAAG6Y,EAAcvjD,KAAKoH,MAAOsjC,EAAM6Y,EAAY7pD,OAAQgxC,IAEpE,IADAyY,EAAaI,EAAY7Y,IACVmY,aAAa7wD,IAAIuJ,GAAO,OAGrC4nD,EACFA,EAAW3qC,sBAAsB9lB,IAAI6I,EAAMiX,GAE3CxS,KAAKqY,MAAM7F,EAAKtJ,EAAc8D,8BAA+BzR,O,KAW7DioD,G,WACJ,aAAgC,IAApBr7C,EAAoB,uDANd,EAMc,UAC9BnI,KAAKmI,UAAO,EACZnI,KAAKmI,KAAOA,E,mEAIZ,OAVyC,IAUlCnI,KAAKmI,MAXwB,IAWyBnI,KAAKmI,O,wDAIlE,OAb0B,IAanBnI,KAAKmI,S,KAKVs7C,G,8BACJ,WAAYt7C,GAAM,wBAChB,cAAMA,IACD0L,OAAS,IAAIrT,IAFF,E,yDAKKgS,EAAKkB,GAC1B1T,KAAK6T,OAAOnhB,IAAI8f,EAAKkB,K,4CAGDlB,GACpBxS,KAAK6T,OAAOkF,OAAOvG,K,oCAGPkxC,GACZ1jD,KAAK6T,OAAO+nB,QAAQ8nB,O,GAfYF,IAoB9BG,G,WACJ,WAAYtrC,GAAO,UACjBrY,KAAKoH,MAAQ,CAAC,IAAIo8C,IAClBxjD,KAAKqY,MAAQA,E,wCAGT3kB,GACJsM,KAAKoH,MAAMtR,KAAKpC,K,6BAIhBsM,KAAKoH,MAAMzN,Q,sDAGmB6Y,EAAKkB,GAOnC,IAP4C,IAE1CtM,EACEpH,KADFoH,MAEEvM,EAAIuM,EAAM1N,OAAS,EACnBhG,EAAQ0T,EAAMvM,IAEVnH,EAAMkwD,mCAAmC,CAC/C,IAAIlwD,EAAMmwD,iCAGR,OAFAnwD,EAAMowD,uBAAuBtxC,EAAKkB,GAKpChgB,EAAQ0T,IAAQvM,GAGlBmF,KAAKqY,MAAM7F,EAAKkB,K,yDAGiBlB,EAAKkB,GAAS,IAE7CtM,EACEpH,KADFoH,MAEI1T,EAAQ0T,EAAMA,EAAM1N,OAAS,GAEnC,GAAIhG,EAAMkwD,kCACR5jD,KAAKqY,MAAM7F,EAAKkB,OACX,KAAIhgB,EAAMmwD,iCAGf,OAFAnwD,EAAMowD,uBAAuBtxC,EAAKkB,M,sDAMNlB,EAAKkB,GAOnC,IAP4C,IAE1CtM,EACEpH,KADFoH,MAEEvM,EAAIuM,EAAM1N,OAAS,EACnBhG,EAAQ0T,EAAMvM,GAEXnH,EAAMmwD,kCA/F4B,IAgGnCnwD,EAAMyU,MACRzU,EAAMowD,uBAAuBtxC,EAAKkB,GAGpChgB,EAAQ0T,IAAQvM,K,0CAIA,WAEhBuM,EACEpH,KADFoH,MAEIuR,EAAevR,EAAMA,EAAM1N,OAAS,GACrCif,EAAakrC,kCAClBlrC,EAAaorC,eAAc,SAACrwC,EAASlB,GACnC,EAAK6F,MAAM7F,EAAKkB,GAIhB,IAHA,IAAI7Y,EAAIuM,EAAM1N,OAAS,EACnBhG,EAAQ0T,EAAMvM,GAEXnH,EAAMmwD,kCACXnwD,EAAMswD,sBAAsBxxC,GAC5B9e,EAAQ0T,IAAQvM,U,KAexB,SAASopD,KACP,OAAO,IAAIT,G,IAGPU,G,+HACKvwD,EAAMtB,EAAKymC,GACbnlC,KACSA,EAAKk/B,MAAQl/B,EAAKk/B,OAAS,IACnCxgC,GAAOymC,K,mCAGFqrB,GACX,OAAOnkD,KAAKiT,MAAM5c,EAAMoN,aAAezD,KAAKwH,MAAMpW,QAAU+yD,I,uCAG7CA,GACXnkD,KAAKs4B,aAAa6rB,GACpBnkD,KAAK22B,OAEL32B,KAAK02B,WAAW,KAAMrgC,EAAMoN,c,mCAInBlI,GACX,OAAOyE,KAAKiT,MAAM5c,EAAMkF,OAASyE,KAAKwH,MAAMpW,QAAUmK,IAASyE,KAAKwH,MAAMsrC,c,2CAGvDsR,EAAW7oD,GAC9B,IAAM8oD,EAAUD,EAAY7oD,EAAK7B,OACjC,OAAOsG,KAAK+S,MAAMhY,MAAMqpD,EAAWC,KAAa9oD,IAAS8oD,IAAYrkD,KAAK+S,MAAMrZ,SAAW+c,EAAiBzW,KAAK+S,MAAM8iB,WAAWwuB,O,4CAG9G9oD,GACpB,IAAMo7B,EAAO32B,KAAK0rC,iBAClB,OAAO1rC,KAAK26C,qBAAqBhkB,EAAMp7B,K,oCAG3BA,GACZ,OAAOyE,KAAK+6B,aAAax/B,IAASyE,KAAK62B,IAAIxgC,EAAMkF,Q,uCAGlCA,EAAMmY,GAChB1T,KAAK46B,cAAcr/B,IAAOyE,KAAK02B,WAAW,KAAMhjB,K,2CAIrD,OAAO1T,KAAKiT,MAAM5c,EAAM6K,MAAQlB,KAAKiT,MAAM5c,EAAMsL,SAAW3B,KAAK4V,0B,8CAIjE,OAAO1P,EAAUoQ,KAAKtW,KAAK+S,MAAMhY,MAAMiF,KAAKwH,MAAMqL,WAAY7S,KAAKwH,MAAMT,U,8CAIzE,OAAOb,EAAUoQ,KAAKtW,KAAK+S,MAAMhY,MAAMiF,KAAKwH,MAAMR,IAAKhH,KAAK0rC,qB,yCAI5D,OAAO1rC,KAAK62B,IAAIxgC,EAAM2L,OAAShC,KAAK8gC,uB,kCAGX,IAAjBwjB,IAAiB,0DACrBA,EAAWtkD,KAAKq1C,mBAAqBr1C,KAAK62B,IAAIxgC,EAAM2L,QACxDhC,KAAKqY,MAAMrY,KAAKwH,MAAMqL,WAAY3J,EAAcwE,oB,6BAG3CvF,EAAMqK,GACXxS,KAAK62B,IAAI1uB,IAASnI,KAAK02B,WAAWlkB,EAAKrK,K,sCAGI,IAA/BuL,EAA+B,uDAArB,oBAClB1T,KAAKwH,MAAMT,MAAQ/G,KAAKwH,MAAMqL,YAChC7S,KAAKqY,MAAMrY,KAAKwH,MAAMqL,WAAYa,K,iCAI3BlB,GAAyC,IAApC+xC,EAAoC,uDAApB,mBAK9B,KAJ6B,kBAAlBA,IACTA,EAAgB,+BAAH,OAAkCA,EAAczkD,MAAhD,MAGTE,KAAKqY,MAAa,MAAP7F,EAAcA,EAAMxS,KAAKwH,MAAMT,MAAOw9C,K,mCAG5ChpD,EAAMiX,GACjB,IAAKxS,KAAKiJ,UAAU1N,GAClB,MAAMyE,KAAKwT,cAAqB,MAAPhB,EAAcA,EAAMxS,KAAKwH,MAAMT,MAAO,CAC7Dy9C,cAAe,CAACjpD,IADZ,yEAE+DA,EAF/D,MAKR,OAAO,I,sCAGOkpD,EAAOjyC,GAAK,WAC1B,IAAKiyC,EAAM9yB,MAAK,SAAA2wB,GAAC,OAAI,EAAKr5C,UAAUq5C,MAClC,MAAMtiD,KAAKwT,cAAqB,MAAPhB,EAAcA,EAAMxS,KAAKwH,MAAMT,MAAO,CAC7Dy9C,cAAeC,GADX,6FAEmFA,EAAMC,KAAK,MAF9F,Q,+BAMDnmD,GAAmC,IAA/BomD,EAA+B,uDAApB3kD,KAAKwH,MAAMrI,QAC3BylD,EAAc,CAClBjxD,KAAM,MAGR,IACE,IAAMA,EAAO4K,GAAG,WAAiB,IAAhB5K,EAAgB,uDAAT,KAEtB,MADAixD,EAAYjxD,KAAOA,EACbixD,KAGR,GAAI5kD,KAAKwH,MAAMqM,OAAOna,OAASirD,EAAS9wC,OAAOna,OAAQ,CACrD,IAAMuoC,EAAYjiC,KAAKwH,MAEvB,OADAxH,KAAKwH,MAAQm9C,EACN,CACLhxD,OACAmgB,MAAOmuB,EAAUpuB,OAAO8wC,EAAS9wC,OAAOna,QACxC2tC,QAAQ,EACRD,SAAS,EACTnF,aAIJ,MAAO,CACLtuC,OACAmgB,MAAO,KACPuzB,QAAQ,EACRD,SAAS,EACTnF,UAAW,MAEb,MAAOnuB,GACP,IAAMmuB,EAAYjiC,KAAKwH,MAGvB,GAFAxH,KAAKwH,MAAQm9C,EAET7wC,aAAiBK,YACnB,MAAO,CACLxgB,KAAM,KACNmgB,QACAuzB,QAAQ,EACRD,SAAS,EACTnF,aAIJ,GAAInuB,IAAU8wC,EACZ,MAAO,CACLjxD,KAAMixD,EAAYjxD,KAClBmgB,MAAO,KACPuzB,QAAQ,EACRD,SAAS,EACTnF,aAIJ,MAAMnuB,K,4CAIY+f,EAAqBgxB,GACzC,IAAKhxB,EAAqB,OAAO,EADkB,IAGjDixB,EAEEjxB,EAFFixB,gBACAC,EACElxB,EADFkxB,YAEF,IAAKF,EAAU,OAAOC,GAAmB,GAAKC,GAAe,EAEzDD,GAAmB,GACrB9kD,KAAK02B,WAAWouB,GAGdC,GAAe,GACjB/kD,KAAKqY,MAAM0sC,EAAa77C,EAAc6B,kB,8CAKxC,OAAO/K,KAAKiT,MAAM5c,EAAMkF,SAAWyE,KAAKwH,MAAMW,KAAKlI,SAAWD,KAAKiT,MAAM5c,EAAM4K,SAAWjB,KAAKiT,MAAM5c,EAAMwK,MAAQb,KAAKiT,MAAM5c,EAAMyK,SAAWd,KAAKiT,MAAM5c,EAAM0K,W,oCAGpJpN,GACZ,MAAqB,gBAAdA,EAAKwU,O,uCAGGxU,GACf,OAAOA,EAAKmJ,GAAGvB,O,+CAGQ5H,GACvB,OAAsB,qBAAdA,EAAKwU,MAA6C,6BAAdxU,EAAKwU,OAAwCnI,KAAKglD,cAAcrxD,EAAKi6B,Y,sCAGnGj6B,GACd,MAAqB,6BAAdA,EAAKwU,MAAqD,2BAAdxU,EAAKwU,O,uCAGzCxU,GACf,MAAqB,mBAAdA,EAAKwU,O,qCAGCxU,GACb,MAAqB,iBAAdA,EAAKwU,O,yCAGoD,WAAjD6O,EAAiD,uDAAV,WAA5BhX,KAAKU,QAAQ46C,WACjC2J,EAAYjlD,KAAKwH,MAAMk1C,OAC7B18C,KAAKwH,MAAMk1C,OAAS,GACpB,IAAMwI,EAAyBllD,KAAKwH,MAAMs1C,oBAC1C98C,KAAKwH,MAAMs1C,oBAAsB,GACjC,IAAMqI,EAAcnlD,KAAKgX,SACzBhX,KAAKgX,SAAWA,EAChB,IAAMouC,EAAWplD,KAAKtM,MAChB0kB,EAAepY,KAAKqlD,kBAC1BrlD,KAAKtM,MAAQ,IAAI0kB,EAAapY,KAAKqY,MAAMplB,KAAK+M,MAAOA,KAAKgX,UAC1D,IAAMsuC,EAAetlD,KAAK00C,UAC1B10C,KAAK00C,UAAY,IAAI7lB,GACrB,IAAMm0B,EAAgBhjD,KAAKmjD,WAC3BnjD,KAAKmjD,WAAa,IAAIJ,GAAkB/iD,KAAKqY,MAAMplB,KAAK+M,OACxD,IAAMulD,EAAqBvlD,KAAKwlD,gBAEhC,OADAxlD,KAAKwlD,gBAAkB,IAAI7B,GAAuB3jD,KAAKqY,MAAMplB,KAAK+M,OAC3D,WACL,EAAKwH,MAAMk1C,OAASuI,EACpB,EAAKz9C,MAAMs1C,oBAAsBoI,EACjC,EAAKluC,SAAWmuC,EAChB,EAAKzxD,MAAQ0xD,EACb,EAAK1Q,UAAY4Q,EACjB,EAAKnC,WAAaH,EAClB,EAAKwC,gBAAkBD,K,2CAKzB,IAAIE,EAn6IM,EAq6INzlD,KAAKiJ,UAAU,kBAAoBjJ,KAAKgX,WAC1CyuC,GAp6Ic,GAu6IhBzlD,KAAKtM,MAAM4nC,MA70QO,GA80QlBt7B,KAAK00C,UAAUpZ,MAAMmqB,O,GA5OA7H,IAgPnB8H,GACJ,aAAc,UACZ1lD,KAAK8kD,iBAAmB,EACxB9kD,KAAK+kD,aAAe,GAKlBY,G,WACJ,WAAYC,EAAQpzC,EAAKjL,GAAK,UAC5BvH,KAAKmI,UAAO,EACZnI,KAAK+G,WAAQ,EACb/G,KAAKgH,SAAM,EACXhH,KAAKuH,SAAM,EACXvH,KAAK6lD,WAAQ,EACb7lD,KAAK0H,qBAAkB,EACvB1H,KAAKyH,sBAAmB,EACxBzH,KAAK0I,mBAAgB,EACrB1I,KAAK6yB,WAAQ,EACb7yB,KAAKmI,KAAO,GACZnI,KAAK+G,MAAQyL,EACbxS,KAAKgH,IAAM,EACXhH,KAAKuH,IAAM,IAAIT,EAAeS,IAChB,MAAVq+C,OAAiB,EAASA,EAAOllD,QAAQq7C,UAAQ/7C,KAAK6lD,MAAQ,CAACrzC,EAAK,KAC1D,MAAVozC,OAAiB,EAASA,EAAO3+C,YAAUjH,KAAKuH,IAAIN,SAAW2+C,EAAO3+C,U,4CAO1E,IAHA,IAAM8vB,EAAU,IAAI4uB,EACdvK,EAAOnqD,OAAOmqD,KAAKp7C,MAEhBnF,EAAI,EAAGnB,EAAS0hD,EAAK1hD,OAAQmB,EAAInB,EAAQmB,IAAK,CACrD,IAAMxI,EAAM+oD,EAAKvgD,GAEL,oBAARxI,GAAqC,qBAARA,GAAsC,kBAARA,IAC7D0kC,EAAQ1kC,GAAO2N,KAAK3N,IAIxB,OAAO0kC,M,KAkDL+uB,GAAgC,SAAhCA,EAAgCnyD,GACpC,MAAqB,4BAAdA,EAAKwU,KAAqC29C,EAA8BnyD,EAAKpC,YAAcoC,GAmoE9FoyD,GAAY,CAChB9uD,KAAM,QAEF+uD,GAAc,CAClB/uD,KAAM,UAMFgvD,GAAgB,+EAmqDhBC,G,8BACJ,WAAYxlD,EAASqS,GAAO,uBAC1BrS,EArqLJ,SAAoBylD,GAGlB,IAFA,IAAMzlD,EAAU,GAEP8pC,EAAK,EAAG4b,EAAen1D,OAAOmqD,KAAKC,IAAiB7Q,EAAK4b,EAAa1sD,OAAQ8wC,IAAM,CAC3F,IAAMn4C,EAAM+zD,EAAa5b,GACzB9pC,EAAQrO,GAAO8zD,GAAqB,MAAbA,EAAK9zD,GAAe8zD,EAAK9zD,GAAOgpD,GAAehpD,GAGxE,OAAOqO,EA6pLK2lD,CAAW3lD,IACrB,cAAMA,EAASqS,IACVrS,QAAUA,EACf,EAAK4lD,mBACL,EAAKv9C,QAqBT,SAAoBA,GAGlB,IAFA,IAAMw9C,EAAY,IAAI/lD,IAEbgqC,EAAK,EAAGA,EAAKzhC,EAAQrP,OAAQ8wC,IAAM,CAC1C,IAAMxhC,EAASD,EAAQyhC,GADmB,EAElB5Y,MAAMC,QAAQ7oB,GAAUA,EAAS,CAACA,EAAQ,IAFxB,SAEnCzN,EAFmC,KAE7BmF,EAF6B,KAGrC6lD,EAAUv0D,IAAIuJ,IAAOgrD,EAAU7zD,IAAI6I,EAAMmF,GAAW,IAG3D,OAAO6lD,EA9BUC,CAAW,EAAK9lD,QAAQqI,SACvC,EAAK9B,SAAWvG,EAAQ66C,eANE,E,oDAU1B,OAAOnjC,K,8BAIPpY,KAAKymD,qBACL,IAAMpzD,EAAO2M,KAAKw0B,YACZljC,EAAU0O,KAAKw0B,YAKrB,OAJAx0B,KAAKsoC,YACLj1C,EAAKwgB,OAAS,KACd7T,KAAK0mD,cAAcrzD,EAAM/B,GACzB+B,EAAKwgB,OAAS7T,KAAKwH,MAAMqM,OAClBxgB,M,uIAvrDKA,EAAM/B,GAIlB,OAHA+B,EAAK/B,QAAU0O,KAAK2mD,aAAar1D,GACjC+B,EAAKupD,SAAW58C,KAAKwH,MAAMo1C,SACvB58C,KAAKU,QAAQs7C,SAAQ3oD,EAAK2oD,OAASh8C,KAAKg8C,QACrCh8C,KAAKy0B,WAAWphC,EAAM,U,mCAGlB/B,GAAgE,IAAvD0V,EAAuD,uDAAjD3Q,EAAM6K,IAAKo6C,EAAsC,uDAAzBt7C,KAAKU,QAAQ46C,WAK/D,GAJAhqD,EAAQgqD,WAAaA,EACrBhqD,EAAQs1D,YAAc5mD,KAAK6mD,4BAC3B7mD,KAAK8mD,eAAex1D,GAAS,GAAM,EAAM0V,GAErChH,KAAKgX,WAAahX,KAAKU,QAAQm7C,wBAA0B77C,KAAKtM,MAAM6kB,iBAAiBxf,KAAO,EAC9F,IAAK,IAAIyxC,EAAK,EAAGyY,EAAcrxB,MAAMsxB,KAAKljD,KAAKtM,MAAM6kB,kBAAmBiyB,EAAKyY,EAAYvpD,OAAQ8wC,IAAM,SACtFyY,EAAYzY,GAD0E,GAC9FjvC,EAD8F,KAE/FiX,EAAMxS,KAAKtM,MAAM6kB,iBAAiBtmB,IAAIsJ,GAC5CyE,KAAKqY,MAAM7F,EAAKtJ,EAAc+E,sBAAuB1S,GAIzD,OAAOyE,KAAKy0B,WAAWnjC,EAAS,a,sCAGlBqhC,GACd,IAAM51B,EAAO41B,EAAKphC,WACZqN,EAAmBoB,KAAK4yB,YAAY71B,EAAKgK,MAAOhK,EAAKwK,IAAIR,OACzDpI,EAAYqB,KAAK4yB,YAAYD,EAAK5rB,MAAO4rB,EAAKprB,IAAIR,OAClDgsB,EAAM/yB,KAAK+S,MAAMhY,MAAMgC,EAAKgK,MAAOhK,EAAKiK,KACxC8xB,EAAMl6B,EAAiBxN,MAAQ2hC,EAAIh4B,MAAM,GAAI,GAInD,OAHAiF,KAAKqzB,SAASz0B,EAAkB,MAAOm0B,GACvC/yB,KAAKqzB,SAASz0B,EAAkB,WAAYk6B,GAC5Cn6B,EAAUvN,MAAQ4O,KAAKgzB,aAAap0B,EAAkB,mBAAoB7B,EAAKiK,IAAKjK,EAAKwK,IAAIP,KACtFhH,KAAKgzB,aAAar0B,EAAW,YAAag0B,EAAK3rB,IAAK2rB,EAAKprB,IAAIP,O,kDAIpE,IAAKhH,KAAKiT,MAAM5c,EAAMuM,sBACpB,OAAO,KAGT,IAAMjP,EAAOqM,KAAKw0B,YAGlB,OAFA7gC,EAAKvC,MAAQ4O,KAAKwH,MAAMpW,MACxB4O,KAAK22B,OACE32B,KAAKy0B,WAAW9gC,EAAM,0B,4BAGzBwhB,GACJ,IAAKnV,KAAK+6B,aAAa,OACrB,OAAO,EAGT,IAAMpE,EAAO32B,KAAK0rC,iBACZqb,EAAS/mD,KAAK+S,MAAM8iB,WAAWc,GACrC,GAAe,KAAXowB,EAAe,OAAO,EAC1B,GAAI5xC,EAAS,OAAO,EACpB,GAAe,MAAX4xC,EAAgB,OAAO,EAE3B,GAAI1wC,EAAkB0wC,GAAS,CAG7B,IAFA,IAAIv0C,EAAMmkB,EAAO,EAEVlgB,EAAiBzW,KAAK+S,MAAM8iB,WAAWrjB,OAC1CA,EAGJ,IAAMwrB,EAAQh+B,KAAK+S,MAAMhY,MAAM47B,EAAMnkB,GACrC,IAAK6E,EAA0Bf,KAAK0nB,GAAQ,OAAO,EAGrD,OAAO,I,qCAGM7oB,EAASqsB,GAKtB,OAJIxhC,KAAKiT,MAAM5c,EAAMqM,KACnB1C,KAAKgnD,iBAAgB,GAGhBhnD,KAAKinD,sBAAsB9xC,EAASqsB,K,4CAGvBrsB,EAASqsB,GAC7B,IAEIvqC,EAFAq+C,EAAYt1C,KAAKwH,MAAMW,KACrBxU,EAAOqM,KAAKw0B,YAQlB,OALIx0B,KAAKg8B,MAAM7mB,KACbmgC,EAAYj/C,EAAM0O,KAClB9N,EAAO,OAGDq+C,GACN,KAAKj/C,EAAM2N,OACX,KAAK3N,EAAM8N,UACT,OAAOnE,KAAKknD,4BAA4BvzD,EAAM2hD,EAAUr1C,SAE1D,KAAK5J,EAAM+N,UACT,OAAOpE,KAAKmnD,uBAAuBxzD,GAErC,KAAK0C,EAAMgO,IACT,OAAOrE,KAAKonD,iBAAiBzzD,GAE/B,KAAK0C,EAAMmO,KACT,OAAOxE,KAAKqnD,kBAAkB1zD,GAEhC,KAAK0C,EAAMoO,UACT,GAAiC,KAA7BzE,KAAK6wC,oBAA4B,MAUrC,OARI17B,IACEnV,KAAKwH,MAAMi6B,OACbzhC,KAAKqY,MAAMrY,KAAKwH,MAAMT,MAAOmC,EAAc6G,gBACtB,OAAZoF,GAAgC,UAAZA,GAC7BnV,KAAKqY,MAAMrY,KAAKwH,MAAMT,MAAOmC,EAAcwG,iBAIxC1P,KAAKw1C,uBAAuB7hD,GAAM,GAAQwhB,GAEnD,KAAK9e,EAAMiP,OAET,OADI6P,GAASnV,KAAK02B,aACX12B,KAAKy1C,WAAW9hD,GAAM,GAE/B,KAAK0C,EAAMqO,IACT,OAAO1E,KAAKsnD,iBAAiB3zD,GAE/B,KAAK0C,EAAMsO,QACT,OAAO3E,KAAKunD,qBAAqB5zD,GAEnC,KAAK0C,EAAMuO,QACT,OAAO5E,KAAKwnD,qBAAqB7zD,GAEnC,KAAK0C,EAAMwO,OACT,OAAO7E,KAAKynD,oBAAoB9zD,GAElC,KAAK0C,EAAMyO,KACT,OAAO9E,KAAK0nD,kBAAkB/zD,GAEhC,KAAK0C,EAAM2O,OACX,KAAK3O,EAAM0O,KAOT,OANA9N,EAAOA,GAAQ+I,KAAKwH,MAAMpW,MAEtB+jB,GAAoB,QAATle,GACb+I,KAAKqY,MAAMrY,KAAKwH,MAAMT,MAAOmC,EAAc6H,8BAGtC/Q,KAAK21C,kBAAkBhiD,EAAMsD,GAEtC,KAAKZ,EAAM4O,OACT,OAAOjF,KAAK2nD,oBAAoBh0D,GAElC,KAAK0C,EAAM6O,MACT,OAAOlF,KAAK4nD,mBAAmBj0D,GAEjC,KAAK0C,EAAMmL,OACT,OAAOxB,KAAK6nD,aAEd,KAAKxxD,EAAM2L,KACT,OAAOhC,KAAK8nD,oBAAoBn0D,GAElC,KAAK0C,EAAMoP,QAEP,IAAMsiD,EAAoB/nD,KAAK6wC,oBAE/B,GAA0B,KAAtBkX,GAAkD,KAAtBA,EAC5B,MAIR,KAAK1xD,EAAMmP,QAOP,IAAIu8B,EAiBJ,OAtBK/hC,KAAKU,QAAQi7C,6BAAgCna,GAChDxhC,KAAKqY,MAAMrY,KAAKwH,MAAMT,MAAOmC,EAAc0H,wBAG7C5Q,KAAK22B,OAGD2e,IAAcj/C,EAAMoP,QAGF,uBAFpBs8B,EAAS/hC,KAAKw7B,YAAY7nC,IAEfwU,MAAkC45B,EAAOplB,YAAoC,UAAtBolB,EAAOplB,aACvE3c,KAAK6I,mBAAoB,IAKP,4BAFpBk5B,EAAS/hC,KAAKk8B,YAAYvoC,IAEfwU,MAAuC45B,EAAO5F,YAAoC,UAAtB4F,EAAO5F,cAA2C,yBAAhB4F,EAAO55B,MAAqC45B,EAAO5F,YAAoC,UAAtB4F,EAAO5F,aAA2C,6BAAhB4F,EAAO55B,OACjNnI,KAAK6I,mBAAoB,GAI7B7I,KAAKgoD,wBAAwBr0D,GACtBouC,EAGX,QAEI,GAAI/hC,KAAKioD,kBAMP,OALI9yC,GACFnV,KAAKqY,MAAMrY,KAAKwH,MAAMT,MAAOmC,EAAcI,uCAG7CtJ,KAAK22B,OACE32B,KAAKw1C,uBAAuB7hD,GAAM,GAAOwhB,GAKxD,IAAM+yC,EAAYloD,KAAKwH,MAAMpW,MACvB2L,EAAOiD,KAAKk3B,kBAElB,OAAIoe,IAAcj/C,EAAMkF,MAAsB,eAAdwB,EAAKoL,MAAyBnI,KAAK62B,IAAIxgC,EAAM4L,OACpEjC,KAAKmoD,sBAAsBx0D,EAAMu0D,EAAWnrD,EAAMoY,GAElDnV,KAAKooD,yBAAyBz0D,EAAMoJ,K,8CAIvBpJ,GACjBqM,KAAKU,QAAQi7C,6BAAgC37C,KAAKgX,UACrDhX,KAAKwT,cAAc7f,EAAKoT,MAAO,CAC7BR,KAAM,2CACL2C,EAAc+C,uB,qCAINtY,GACb,IAAMmD,EAAakJ,KAAKwH,MAAMm1C,eAAe38C,KAAKwH,MAAMm1C,eAAejjD,OAAS,GAE5E5C,EAAW4C,SACb/F,EAAKmD,WAAaA,EAClBkJ,KAAKknC,2BAA2BvzC,EAAMmD,EAAW,IACjDkJ,KAAKwH,MAAMm1C,eAAe38C,KAAKwH,MAAMm1C,eAAejjD,OAAS,GAAK,M,gDAKpE,OAAOsG,KAAKiT,MAAM5c,EAAMiP,U,sCAGV+iD,GAGd,IAFA,IAAMC,EAA2BtoD,KAAKwH,MAAMm1C,eAAe38C,KAAKwH,MAAMm1C,eAAejjD,OAAS,GAEvFsG,KAAKiT,MAAM5c,EAAMqM,KAAK,CAC3B,IAAM6lD,EAAYvoD,KAAKwoD,iBACvBF,EAAyBxyD,KAAKyyD,GAGhC,GAAIvoD,KAAKiT,MAAM5c,EAAMmP,SACd6iD,GACHroD,KAAK02B,aAGH12B,KAAKiJ,UAAU,gBAAkBjJ,KAAK8xB,gBAAgB,aAAc,2BACtE9xB,KAAKqY,MAAMrY,KAAKwH,MAAMT,MAAOmC,EAAcqB,2BAExC,IAAKvK,KAAKyoD,0BACf,MAAMzoD,KAAKqY,MAAMrY,KAAKwH,MAAMT,MAAOmC,EAAc4H,8B,uCAKnD9Q,KAAK0oD,gBAAgB,CAAC,oBAAqB,eAC3C,IAAM/0D,EAAOqM,KAAKw0B,YAGlB,GAFAx0B,KAAK22B,OAED32B,KAAKiJ,UAAU,cAAe,CAChCjJ,KAAKwH,MAAMm1C,eAAe7mD,KAAK,IAC/B,IAEIiH,EAFEm3B,EAAWl0B,KAAKwH,MAAMT,MACtB0L,EAAWzS,KAAKwH,MAAMiL,SAG5B,GAAIzS,KAAK62B,IAAIxgC,EAAMwL,QACjB9E,EAAOiD,KAAKk3B,kBACZl3B,KAAKm3B,OAAO9gC,EAAMyL,aAIlB,IAFA/E,EAAOiD,KAAK25B,iBAAgB,GAErB35B,KAAK62B,IAAIxgC,EAAM8L,MAAM,CAC1B,IAAMxO,EAAOqM,KAAK4yB,YAAYsB,EAAUzhB,GACxC9e,EAAKwE,OAAS4E,EACdpJ,EAAKi6B,SAAW5tB,KAAK25B,iBAAgB,GACrChmC,EAAK0I,UAAW,EAChBU,EAAOiD,KAAKy0B,WAAW9gC,EAAM,oBAIjCA,EAAKpC,WAAayO,KAAK2oD,6BAA6B5rD,GACpDiD,KAAKwH,MAAMm1C,eAAehjD,WAE1BhG,EAAKpC,WAAayO,KAAK4oD,sBAGzB,OAAO5oD,KAAKy0B,WAAW9gC,EAAM,e,mDAGFoJ,GAC3B,GAAIiD,KAAK62B,IAAIxgC,EAAMwL,QAAS,CAC1B,IAAMlO,EAAOqM,KAAKy1B,gBAAgB14B,GAIlC,OAHApJ,EAAKgF,OAASoE,EACdpJ,EAAKuH,UAAY8E,KAAKynC,6BAA6BpxC,EAAMyL,QAAQ,GACjE9B,KAAKolC,iBAAiBzxC,EAAKuH,WACpB8E,KAAKy0B,WAAW9gC,EAAM,kBAG/B,OAAOoJ,I,kDAGmBpJ,EAAMsM,GAChC,IAAM4oD,EAAsB,UAAZ5oD,EAWhB,OAVAD,KAAK22B,OAED32B,KAAKq1C,mBACP1hD,EAAKmM,MAAQ,MAEbnM,EAAKmM,MAAQE,KAAK25B,kBAClB35B,KAAKs6B,aAGPt6B,KAAK8oD,oBAAoBn1D,EAAMsM,GACxBD,KAAKy0B,WAAW9gC,EAAMk1D,EAAU,iBAAmB,uB,0CAGxCl1D,EAAMsM,GACxB,IACIpF,EADEguD,EAAsB,UAAZ5oD,EAGhB,IAAKpF,EAAI,EAAGA,EAAImF,KAAKwH,MAAMk1C,OAAOhjD,SAAUmB,EAAG,CAC7C,IAAMkuD,EAAM/oD,KAAKwH,MAAMk1C,OAAO7hD,GAE9B,GAAkB,MAAdlH,EAAKmM,OAAiBipD,EAAIxtD,OAAS5H,EAAKmM,MAAMvE,KAAM,CACtD,GAAgB,MAAZwtD,EAAI9xD,OAAiB4xD,GAAwB,SAAbE,EAAI9xD,MAAkB,MAC1D,GAAItD,EAAKmM,OAAS+oD,EAAS,OAI3BhuD,IAAMmF,KAAKwH,MAAMk1C,OAAOhjD,QAC1BsG,KAAKqY,MAAM1kB,EAAKoT,MAAOmC,EAAcsC,qBAAsBvL,K,6CAIxCtM,GAGrB,OAFAqM,KAAK22B,OACL32B,KAAKs6B,YACEt6B,KAAKy0B,WAAW9gC,EAAM,uB,8CAI7BqM,KAAKm3B,OAAO9gC,EAAMwL,QAClB,IAAMi3B,EAAM94B,KAAKk3B,kBAEjB,OADAl3B,KAAKm3B,OAAO9gC,EAAMyL,QACXg3B,I,uCAGQnlC,GAAM,WAQrB,OAPAqM,KAAK22B,OACL32B,KAAKwH,MAAMk1C,OAAO5mD,KAAKiwD,IACvBpyD,EAAKgB,KAAOqL,KAAKgpD,4BAA2B,kBAAM,EAAK5O,eAAe,SACtEp6C,KAAKwH,MAAMk1C,OAAO/iD,MAClBqG,KAAKm3B,OAAO9gC,EAAM4O,QAClBtR,EAAK2iB,KAAOtW,KAAKipD,wBACjBjpD,KAAK62B,IAAIxgC,EAAM2L,MACRhC,KAAKy0B,WAAW9gC,EAAM,sB,wCAGbA,GAChBqM,KAAK22B,OACL32B,KAAKwH,MAAMk1C,OAAO5mD,KAAKiwD,IACvB,IAAImD,GAAW,EASf,GAPIlpD,KAAKmpD,kBAAoBnpD,KAAK46B,cAAc,WAC9CsuB,EAAUlpD,KAAKwH,MAAMkL,cAGvB1S,KAAKtM,MAAM4nC,MAh7VK,GAi7VhBt7B,KAAKm3B,OAAO9gC,EAAMwL,QAEd7B,KAAKiT,MAAM5c,EAAM2L,MAKnB,OAJIknD,GAAW,GACblpD,KAAK02B,WAAWwyB,GAGXlpD,KAAKopD,SAASz1D,EAAM,MAG7B,IAAMqoC,EAAQh8B,KAAKg8B,QAEnB,GAAIh8B,KAAKiT,MAAM5c,EAAM0O,OAAS/E,KAAKiT,MAAM5c,EAAM2O,SAAWg3B,EAAO,CAC/D,IAAMqN,EAAOrpC,KAAKw0B,YACZv9B,EAAO+kC,EAAQ,MAAQh8B,KAAKwH,MAAMpW,MAKxC,OAJA4O,KAAK22B,OACL32B,KAAKqpD,SAAShgB,GAAM,EAAMpyC,GAC1B+I,KAAKy0B,WAAW4U,EAAM,wBAEjBrpC,KAAKiT,MAAM5c,EAAMwP,MAAQ7F,KAAK+6B,aAAa,QAAuC,IAA7BsO,EAAKigB,aAAa5vD,OACnEsG,KAAKupD,WAAW51D,EAAM01C,EAAM6f,IAGjCA,GAAW,GACblpD,KAAK02B,WAAWwyB,GAGXlpD,KAAKopD,SAASz1D,EAAM01C,IAG7B,IAAMxV,EAAsB,IAAI6xB,GAC1Brc,EAAOrpC,KAAKk3B,iBAAgB,EAAMrD,GAExC,GAAI7zB,KAAKiT,MAAM5c,EAAMwP,MAAQ7F,KAAK+6B,aAAa,MAAO,CACpD/6B,KAAK+0B,aAAasU,GAAM,GACxB,IAAMmgB,EAAcxpD,KAAK+6B,aAAa,MAAQ,mBAAqB,mBAEnE,OADA/6B,KAAK8lC,UAAUuD,EAAMmgB,GACdxpD,KAAKupD,WAAW51D,EAAM01C,EAAM6f,GASrC,OAPElpD,KAAKypD,sBAAsB51B,GAAqB,GAG9Cq1B,GAAW,GACblpD,KAAK02B,WAAWwyB,GAGXlpD,KAAKopD,SAASz1D,EAAM01C,K,6CAGN11C,EAAMs7B,EAASy6B,GAEpC,OADA1pD,KAAK22B,OACE32B,KAAK2pD,cAAch2D,EA7aP,GA6a+B+1D,EAAsB,EA5a7C,GA4a0Ez6B,K,uCAGtFt7B,GAKf,OAJAqM,KAAK22B,OACLhjC,EAAK2iB,KAAOtW,KAAKipD,wBACjBt1D,EAAK0uC,WAAariC,KAAKo6C,eAAe,MACtCzmD,EAAK+uC,UAAY1iC,KAAK62B,IAAIxgC,EAAMiO,OAAStE,KAAKo6C,eAAe,MAAQ,KAC9Dp6C,KAAKy0B,WAAW9gC,EAAM,iB,2CAGVA,GAcnB,OAbKqM,KAAK00C,UAAUkV,WAAc5pD,KAAKU,QAAQg7C,4BAC7C17C,KAAKqY,MAAMrY,KAAKwH,MAAMT,MAAOmC,EAAcwC,eAG7C1L,KAAK22B,OAED32B,KAAKq1C,mBACP1hD,EAAKqG,SAAW,MAEhBrG,EAAKqG,SAAWgG,KAAKk3B,kBACrBl3B,KAAKs6B,aAGAt6B,KAAKy0B,WAAW9gC,EAAM,qB,2CAGVA,GACnBqM,KAAK22B,OACLhjC,EAAKk2D,aAAe7pD,KAAKipD,wBACzB,IAIIa,EAEKC,EANHC,EAAQr2D,EAAKq2D,MAAQ,GAM3B,IALAhqD,KAAKm3B,OAAO9gC,EAAMmL,QAClBxB,KAAKwH,MAAMk1C,OAAO5mD,KAAKkwD,IACvBhmD,KAAKtM,MAAM4nC,MAtgWK,IAygWMt7B,KAAKiT,MAAM5c,EAAMsL,SACrC,GAAI3B,KAAKiT,MAAM5c,EAAM4N,QAAUjE,KAAKiT,MAAM5c,EAAMtD,UAAW,CACzD,IAAMk3D,EAASjqD,KAAKiT,MAAM5c,EAAM4N,OAC5B6lD,GAAK9pD,KAAKy0B,WAAWq1B,EAAK,cAC9BE,EAAMl0D,KAAKg0D,EAAM9pD,KAAKw0B,aACtBs1B,EAAIznB,WAAa,GACjBriC,KAAK22B,OAEDszB,EACFH,EAAIxzC,KAAOtW,KAAKk3B,mBAEZ6yB,GACF/pD,KAAKqY,MAAMrY,KAAKwH,MAAMkL,aAAcxJ,EAAcgF,0BAGpD67C,GAAa,EACbD,EAAIxzC,KAAO,MAGbtW,KAAKm3B,OAAO9gC,EAAM4L,YAEd6nD,EACFA,EAAIznB,WAAWvsC,KAAKkK,KAAKo6C,eAAe,OAExCp6C,KAAK02B,aASX,OAJA12B,KAAKtM,MAAMgoC,OACPouB,GAAK9pD,KAAKy0B,WAAWq1B,EAAK,cAC9B9pD,KAAK22B,OACL32B,KAAKwH,MAAMk1C,OAAO/iD,MACXqG,KAAKy0B,WAAW9gC,EAAM,qB,0CAGXA,GASlB,OARAqM,KAAK22B,OAED32B,KAAK4V,yBACP5V,KAAKqY,MAAMrY,KAAKwH,MAAMqL,WAAY3J,EAAciF,mBAGlDxa,EAAKqG,SAAWgG,KAAKk3B,kBACrBl3B,KAAKs6B,YACEt6B,KAAKy0B,WAAW9gC,EAAM,oB,8CAI7B,IAAMyK,EAAQ4B,KAAKkqD,mBACbC,EAAwB,eAAf/rD,EAAM+J,KAGrB,OAFAnI,KAAKtM,MAAM4nC,MAAM6uB,EAxjWM,EAwjWwB,GAC/CnqD,KAAK8lC,UAAU1nC,EAAO,eAtiWLi9B,GAuiWVj9B,I,wCAGSzK,GAAM,WAKtB,GAJAqM,KAAK22B,OACLhjC,EAAK0qD,MAAQr+C,KAAK6nD,aAClBl0D,EAAKy2D,QAAU,KAEXpqD,KAAKiT,MAAM5c,EAAM6N,QAAS,CAC5B,IAAMmmD,EAASrqD,KAAKw0B,YACpBx0B,KAAK22B,OAED32B,KAAKiT,MAAM5c,EAAMwL,SACnB7B,KAAKm3B,OAAO9gC,EAAMwL,QAClBwoD,EAAOjsD,MAAQ4B,KAAKsqD,wBACpBtqD,KAAKm3B,OAAO9gC,EAAMyL,UAElBuoD,EAAOjsD,MAAQ,KACf4B,KAAKtM,MAAM4nC,MAhlWC,IAmlWd+uB,EAAO11D,KAAOqL,KAAKgpD,4BAA2B,kBAAM,EAAKnB,YAAW,GAAO,MAC3E7nD,KAAKtM,MAAMgoC,OACX/nC,EAAKy2D,QAAUpqD,KAAKy0B,WAAW41B,EAAQ,eASzC,OANA12D,EAAK42D,UAAYvqD,KAAK62B,IAAIxgC,EAAMkO,UAAYvE,KAAK6nD,aAAe,KAE3Dl0D,EAAKy2D,SAAYz2D,EAAK42D,WACzBvqD,KAAKqY,MAAM1kB,EAAKoT,MAAOmC,EAAckF,kBAGhCpO,KAAKy0B,WAAW9gC,EAAM,kB,wCAGbA,EAAMsD,GAItB,OAHA+I,KAAK22B,OACL32B,KAAKqpD,SAAS11D,GAAM,EAAOsD,GAC3B+I,KAAKs6B,YACEt6B,KAAKy0B,WAAW9gC,EAAM,yB,0CAGXA,GAAM,WAMxB,OALAqM,KAAK22B,OACLhjC,EAAK2iB,KAAOtW,KAAKipD,wBACjBjpD,KAAKwH,MAAMk1C,OAAO5mD,KAAKiwD,IACvBpyD,EAAKgB,KAAOqL,KAAKgpD,4BAA2B,kBAAM,EAAK5O,eAAe,YACtEp6C,KAAKwH,MAAMk1C,OAAO/iD,MACXqG,KAAKy0B,WAAW9gC,EAAM,oB,yCAGZA,GAAM,WAQvB,OAPIqM,KAAKwH,MAAMi6B,QACbzhC,KAAKqY,MAAMrY,KAAKwH,MAAMT,MAAOmC,EAAcgH,YAG7ClQ,KAAK22B,OACLhjC,EAAKwE,OAAS6H,KAAKipD,wBACnBt1D,EAAKgB,KAAOqL,KAAKgpD,4BAA2B,kBAAM,EAAK5O,eAAe,WAC/Dp6C,KAAKy0B,WAAW9gC,EAAM,mB,0CAGXA,GAElB,OADAqM,KAAK22B,OACE32B,KAAKy0B,WAAW9gC,EAAM,oB,4CAGTA,EAAMu0D,EAAWnrD,EAAMoY,GAC3C,IAAK,IAAIu1B,EAAM,EAAG8f,EAAqBxqD,KAAKwH,MAAMk1C,OAAQhS,EAAM8f,EAAmB9wD,OAAQgxC,IAAO,CAClF8f,EAAmB9f,GAEvBnvC,OAAS2sD,GACjBloD,KAAKqY,MAAMtb,EAAKgK,MAAOmC,EAAckE,mBAAoB86C,GAM7D,IAFA,IAAMjxD,EAAO+I,KAAKwH,MAAMW,KAAKhP,OAAS,OAAS6G,KAAKiT,MAAM5c,EAAMuO,SAAW,SAAW,KAE7E/J,EAAImF,KAAKwH,MAAMk1C,OAAOhjD,OAAS,EAAGmB,GAAK,EAAGA,IAAK,CACtD,IAAMiF,EAAQE,KAAKwH,MAAMk1C,OAAO7hD,GAEhC,GAAIiF,EAAM2qD,iBAAmB92D,EAAKoT,MAIhC,MAHAjH,EAAM2qD,eAAiBzqD,KAAKwH,MAAMT,MAClCjH,EAAM7I,KAAOA,EAcjB,OARA+I,KAAKwH,MAAMk1C,OAAO5mD,KAAK,CACrByF,KAAM2sD,EACNjxD,KAAMA,EACNwzD,eAAgBzqD,KAAKwH,MAAMT,QAE7BpT,EAAKgB,KAAOqL,KAAKo6C,eAAejlC,GAAwC,IAA9BA,EAAQ8D,QAAQ,SAAkB9D,EAAU,QAAUA,EAAU,SAC1GnV,KAAKwH,MAAMk1C,OAAO/iD,MAClBhG,EAAKmM,MAAQ/C,EACNiD,KAAKy0B,WAAW9gC,EAAM,sB,+CAGNA,EAAMoJ,GAG7B,OAFApJ,EAAKpC,WAAawL,EAClBiD,KAAKs6B,YACEt6B,KAAKy0B,WAAW9gC,EAAM,yB,mCAGoD,IAAxE+2D,EAAwE,wDAA/CC,IAA+C,yDAAjBC,EAAiB,uCAC3Ej3D,EAAOqM,KAAKw0B,YAkBlB,OAhBIk2B,GACF1qD,KAAKwH,MAAMq1C,aAAaoB,QAG1Bj+C,KAAKm3B,OAAO9gC,EAAMmL,QAEdmpD,GACF3qD,KAAKtM,MAAM4nC,MAlrWG,GAqrWhBt7B,KAAK8mD,eAAenzD,EAAM+2D,GAAiB,EAAOr0D,EAAMsL,OAAQipD,GAE5DD,GACF3qD,KAAKtM,MAAMgoC,OAGN17B,KAAKy0B,WAAW9gC,EAAM,oB,uCAGdg/B,GACf,MAAqB,wBAAdA,EAAKxqB,MAA2D,kBAAzBwqB,EAAKphC,WAAW4W,OAA6BwqB,EAAKphC,WAAWshC,MAAMO,gB,qCAGpGz/B,EAAM+2D,EAAiBlpB,EAAUx6B,EAAK4jD,GACnD,IAAMj2D,EAAOhB,EAAKgB,KAAO,GACnB+I,EAAa/J,EAAK+J,WAAa,GACrCsC,KAAKs0C,4BAA4B3/C,EAAM+1D,EAAkBhtD,OAAaxK,EAAWsuC,EAAUx6B,EAAK4jD,K,kDAGtEj2D,EAAM+I,EAAY8jC,EAAUx6B,EAAK4jD,GAK3D,IAJA,IAAMtQ,EAAYt6C,KAAKwH,MAAMi6B,OACzBopB,GAAyB,EACzBC,GAAqB,GAEjB9qD,KAAKiT,MAAMjM,IAAM,CACvB,IAAM2rB,EAAO3yB,KAAKo6C,eAAe,KAAM5Y,GAEvC,GAAI9jC,IAAeotD,EAAoB,CACrC,GAAI9qD,KAAK6hC,iBAAiBlP,GAAO,CAC/B,IAAMh0B,EAAYqB,KAAK+qD,gBAAgBp4B,GACvCj1B,EAAW5H,KAAK6I,GAEXksD,GAAoD,eAA1BlsD,EAAUvN,MAAMA,QAC7Cy5D,GAAyB,EACzB7qD,KAAKgrD,WAAU,IAGjB,SAGFF,GAAqB,EACrB9qD,KAAKwH,MAAMq1C,aAAaoB,QAG1BtpD,EAAKmB,KAAK68B,GAGRi4B,GACFA,EAAgBp4D,KAAKwN,KAAM6qD,GAGxBvQ,GACHt6C,KAAKgrD,WAAU,GAGjBhrD,KAAK22B,S,+BAGEhjC,EAAM01C,GAAM,WAUnB,OATA11C,EAAK01C,KAAOA,EACZrpC,KAAKs6B,WAAU,GACf3mC,EAAK2iB,KAAOtW,KAAKiT,MAAM5c,EAAM2L,MAAQ,KAAOhC,KAAKk3B,kBACjDl3B,KAAKs6B,WAAU,GACf3mC,EAAKgvD,OAAS3iD,KAAKiT,MAAM5c,EAAMyL,QAAU,KAAO9B,KAAKk3B,kBACrDl3B,KAAKm3B,OAAO9gC,EAAMyL,QAClBnO,EAAKgB,KAAOqL,KAAKgpD,4BAA2B,kBAAM,EAAK5O,eAAe,UACtEp6C,KAAKtM,MAAMgoC,OACX17B,KAAKwH,MAAMk1C,OAAO/iD,MACXqG,KAAKy0B,WAAW9gC,EAAM,kB,iCAGpBA,EAAM01C,EAAM6f,GAAS,WACxB+B,EAAUjrD,KAAKiT,MAAM5c,EAAMwP,KAqBjC,OApBA7F,KAAK22B,OAEDs0B,EACE/B,GAAW,GAAGlpD,KAAK02B,WAAWwyB,GAElCv1D,EAAKu3D,MAAQhC,GAAW,EAGR,wBAAd7f,EAAKlhC,MAA+D,MAA7BkhC,EAAKigB,aAAa,GAAGjgB,MAAkB4hB,IAAWjrD,KAAKwH,MAAMi6B,QAAwB,QAAd4H,EAAKpyC,MAAmD,eAAjCoyC,EAAKigB,aAAa,GAAGxsD,GAAGqL,KAExI,sBAAdkhC,EAAKlhC,MACdnI,KAAKqY,MAAMgxB,EAAKtiC,MAAOmC,EAAcwD,WAAY,YAFjD1M,KAAKqY,MAAMgxB,EAAKtiC,MAAOmC,EAAcoC,uBAAwB2/C,EAAU,SAAW,UAKpFt3D,EAAK+xC,KAAO2D,EACZ11C,EAAK4pC,MAAQ0tB,EAAUjrD,KAAKk3B,kBAAoBl3B,KAAKq3B,0BACrDr3B,KAAKm3B,OAAO9gC,EAAMyL,QAClBnO,EAAKgB,KAAOqL,KAAKgpD,4BAA2B,kBAAM,EAAK5O,eAAe,UACtEp6C,KAAKtM,MAAMgoC,OACX17B,KAAKwH,MAAMk1C,OAAO/iD,MACXqG,KAAKy0B,WAAW9gC,EAAMs3D,EAAU,iBAAmB,oB,+BAGnDt3D,EAAMw3D,EAAOl0D,GACpB,IAAMqyD,EAAe31D,EAAK21D,aAAe,GACnC8B,EAAeprD,KAAKiJ,UAAU,cAGpC,IAFAtV,EAAKsD,KAAOA,IAEH,CACP,IAAM2sC,EAAO5jC,KAAKw0B,YAkBlB,GAjBAx0B,KAAKqrD,WAAWznB,EAAM3sC,GAElB+I,KAAK62B,IAAIxgC,EAAMwM,IACjB+gC,EAAKyF,KAAO8hB,EAAQnrD,KAAKsrD,6BAA+BtrD,KAAKq3B,2BAEhD,UAATpgC,GAAsB+I,KAAKiT,MAAM5c,EAAMwP,MAAQ7F,KAAK+6B,aAAa,MAIzC,eAAjB6I,EAAK9mC,GAAGqL,MAA2BgjD,IAAUnrD,KAAKiT,MAAM5c,EAAMwP,MAAQ7F,KAAK+6B,aAAa,QACjG/6B,KAAKqY,MAAMrY,KAAKwH,MAAMqL,WAAY3J,EAAckB,8BAA+B,4BAJ1EghD,GACHprD,KAAKqY,MAAMrY,KAAKwH,MAAMqL,WAAY3J,EAAckB,8BAA+B,sBAMnFw5B,EAAKyF,KAAO,MAGdigB,EAAaxzD,KAAKkK,KAAKy0B,WAAWmP,EAAM,wBACnC5jC,KAAK62B,IAAIxgC,EAAM0L,OAAQ,MAG9B,OAAOpO,I,iCAGEiwC,EAAM3sC,GACf2sC,EAAK9mC,GAAKkD,KAAKkqD,mBACflqD,KAAK8lC,UAAUlC,EAAK9mC,GAAI,uBAAiC,QAAT7F,EA7xWnCokC,EADIA,OA8xWyEnoC,EAAoB,QAAT+D,K,oCAGzFtD,GAAkD,WAA5ClC,EAA4C,uDAlwB5C,EAkwB2Bw9B,EAAiB,wDACxDgV,EAlwBa,EAkwBCxyC,EACd85D,EAlwBqB,EAkwBA95D,EACrB+5D,IAAcvnB,KAlwBC,EAkwBgBxyC,GACrCuO,KAAKyrD,aAAa93D,EAAMs7B,GAEpBjvB,KAAKiT,MAAM5c,EAAMwN,OAAS0nD,GAC5BvrD,KAAKqY,MAAMrY,KAAKwH,MAAMT,MAAOmC,EAAcqC,mCAG7C5X,EAAK8I,UAAYuD,KAAK62B,IAAIxgC,EAAMwN,MAE5BogC,IACFtwC,EAAKmJ,GAAKkD,KAAK0rD,gBAAgBF,IAGjC,IAAMnV,EAA4Br2C,KAAKwH,MAAM29B,uBAqB7C,OApBAnlC,KAAKwH,MAAM29B,wBAAyB,EACpCnlC,KAAKtM,MAAM4nC,MAx0WQ,GAy0WnBt7B,KAAK00C,UAAUpZ,MAAMtM,GAAcC,EAASt7B,EAAK8I,YAE5CwnC,IACHtwC,EAAKmJ,GAAKkD,KAAK0rD,mBAGjB1rD,KAAKkoC,oBAAoBv0C,GAAM,GAC/BqM,KAAKgpD,4BAA2B,WAC9B,EAAK2C,2BAA2Bh4D,EAAMswC,EAAc,sBAAwB,yBAE9EjkC,KAAK00C,UAAUhZ,OACf17B,KAAKtM,MAAMgoC,OAEPuI,IAAgBsnB,GAClBvrD,KAAK4rD,4BAA4Bj4D,GAGnCqM,KAAKwH,MAAM29B,uBAAyBkR,EAC7B1iD,I,sCAGO63D,GACd,OAAOA,GAAaxrD,KAAKiT,MAAM5c,EAAMkF,MAAQyE,KAAK25B,kBAAoB,O,0CAGpDhmC,EAAM+yC,GACxB1mC,KAAKm3B,OAAO9gC,EAAMwL,QAClB7B,KAAKwlD,gBAAgBlqB,MA/wGhB,IAAIkoB,GA3HiB,IA24G1B7vD,EAAKuC,OAAS8J,KAAKquC,iBAAiBh4C,EAAMyL,OAAQ,IAAI,EAAO4kC,GAC7D1mC,KAAKwlD,gBAAgB9pB,S,kDAGK/nC,GACrBA,EAAKmJ,IACVkD,KAAKtM,MAAM6mC,YAAY5mC,EAAKmJ,GAAGvB,KAAMyE,KAAKwH,MAAMi6B,QAAU9tC,EAAK8I,WAAa9I,EAAK+I,MAAQsD,KAAKtM,MAAMm4D,oBAr1WvFxwB,EADIA,EAECA,GAo1WiJ1nC,EAAKmJ,GAAGiK,S,iCAGlKpT,EAAMswC,EAAaC,GAC5BlkC,KAAK22B,OACL32B,KAAKq6C,eAAe1mD,GACpB,IAAM2mD,EAAYt6C,KAAKwH,MAAMi6B,OAK7B,OAJAzhC,KAAKwH,MAAMi6B,QAAS,EACpBzhC,KAAKu6C,aAAa5mD,EAAMswC,EAAaC,GACrClkC,KAAKw6C,gBAAgB7mD,GACrBA,EAAKgB,KAAOqL,KAAKy6C,iBAAiB9mD,EAAKkK,WAAYy8C,GAC5Ct6C,KAAKy0B,WAAW9gC,EAAMswC,EAAc,mBAAqB,qB,wCAIhE,OAAOjkC,KAAKiT,MAAM5c,EAAMwM,KAAO7C,KAAKiT,MAAM5c,EAAM2L,OAAShC,KAAKiT,MAAM5c,EAAMsL,U,sCAI1E,OAAO3B,KAAKiT,MAAM5c,EAAMwL,U,6CAGHtE,GACrB,OAAQA,EAAOlB,WAAakB,EAAO1B,SAA+B,gBAApB0B,EAAOlL,IAAIkJ,MAA+C,gBAArBgC,EAAOlL,IAAIjB,S,qCAGjF06D,EAAwBxR,GAAW,WAChDt6C,KAAKmjD,WAAW7nB,QAChB,IAAM9zB,EAAQ,CACZskD,yBACAC,gBAAgB,EAChBC,gBAAgB,GAEdl1D,EAAa,GACX28B,EAAYzzB,KAAKw0B,YAoCvB,GAnCAf,EAAU9+B,KAAO,GACjBqL,KAAKm3B,OAAO9gC,EAAMmL,QAClBxB,KAAKgpD,4BAA2B,WAC9B,MAAQ,EAAK/1C,MAAM5c,EAAMsL,SACvB,GAAI,EAAKk1B,IAAIxgC,EAAM2L,OACjB,GAAIlL,EAAW4C,OAAS,EACtB,MAAM,EAAK2e,MAAM,EAAK7Q,MAAMqL,WAAY3J,EAAcsB,yBAM1D,GAAI,EAAKyI,MAAM5c,EAAMqM,IACnB5L,EAAWhB,KAAK,EAAK0yD,sBADvB,CAKA,IAAMrkB,EAAS,EAAK3P,YAEhB19B,EAAW4C,SACbyqC,EAAOrtC,WAAaA,EACpB,EAAKowC,2BAA2B/C,EAAQrtC,EAAW,IACnDA,EAAa,IAGf,EAAKm1D,iBAAiBx4B,EAAW0Q,EAAQ38B,GAErB,gBAAhB28B,EAAOltC,MAA0BktC,EAAOrtC,YAAcqtC,EAAOrtC,WAAW4C,OAAS,GACnF,EAAK2e,MAAM8rB,EAAOp9B,MAAOmC,EAAcoB,0BAI7CtK,KAAKwH,MAAMi6B,OAAS6Y,EACpBt6C,KAAK22B,OAED7/B,EAAW4C,OACb,MAAMsG,KAAKqY,MAAMrY,KAAKwH,MAAMT,MAAOmC,EAAcmH,mBAInD,OADArQ,KAAKmjD,WAAWznB,OACT17B,KAAKy0B,WAAWhB,EAAW,e,mDAGPA,EAAW0Q,GACtC,IAAM9xC,EAAM2N,KAAK25B,iBAAgB,GAEjC,GAAI35B,KAAKjJ,gBAAiB,CACxB,IAAMwG,EAAS4mC,EAMf,OALA5mC,EAAOtG,KAAO,SACdsG,EAAOlB,UAAW,EAClBkB,EAAOlL,IAAMA,EACbkL,EAAO1B,QAAS,EAChBmE,KAAKksD,gBAAgBz4B,EAAWl2B,GAAQ,GAAO,GAAO,GAAO,IACtD,EACF,GAAIyC,KAAKpJ,kBAAmB,CACjC,IAAM+zB,EAAOwZ,EAKb,OAJAxZ,EAAKtuB,UAAW,EAChBsuB,EAAKt4B,IAAMA,EACXs4B,EAAK9uB,QAAS,EACd43B,EAAU9+B,KAAKmB,KAAKkK,KAAKmsD,mBAAmBxhC,KACrC,EAGT,OAAO,I,uCAGQ8I,EAAW0Q,EAAQ38B,GAClC,IAAMi3B,EAAWz+B,KAAK+6B,aAAa,UAEnC,GAAI0D,EAAU,CACZ,GAAIz+B,KAAKokC,6BAA6B3Q,EAAW0Q,GAC/C,OAGF,GAAInkC,KAAK62B,IAAIxgC,EAAMmL,QAEjB,YADAxB,KAAKosD,sBAAsB34B,EAAW0Q,EAAQ38B,GAKlDxH,KAAKqsD,6BAA6B54B,EAAW0Q,EAAQ38B,EAAOi3B,K,mDAGjChL,EAAW0Q,EAAQ38B,EAAOi3B,GACrD,IAAM6tB,EAAenoB,EACfooB,EAAgBpoB,EAChBqoB,EAAaroB,EACbsoB,EAActoB,EACd5mC,EAAS+uD,EACTI,EAAeJ,EAGrB,GAFAnoB,EAAOtoC,OAAS4iC,EAEZz+B,KAAK62B,IAAIxgC,EAAMwN,MAIjB,OAHAtG,EAAOtG,KAAO,SACd+I,KAAK2sD,sBAAsBpvD,GAEvByC,KAAKglD,cAAcznD,EAAOlL,UAC5B2N,KAAK4sD,uBAAuBn5B,EAAW84B,GAAe,GAAM,IAI1DvsD,KAAK6sD,uBAAuBP,IAC9BtsD,KAAKqY,MAAMi0C,EAAaj6D,IAAI0U,MAAOmC,EAAciB,6BAGnDnK,KAAKksD,gBAAgBz4B,EAAW64B,GAAc,GAAM,GAAO,GAAO,IAIpE,IAAMxZ,EAAc9yC,KAAKwH,MAAMsrC,YACzBzgD,EAAM2N,KAAK2sD,sBAAsBxoB,GACjC2oB,EAAY9sD,KAAKglD,cAAc3yD,GAC/B06D,EAAwB,eAAb16D,EAAI8V,KACf6kD,EAA0BhtD,KAAKwH,MAAMT,MAG3C,GAFA/G,KAAKitD,6BAA6BP,GAE9B1sD,KAAKjJ,gBAAiB,CAGxB,GAFAwG,EAAOtG,KAAO,SAEV61D,EAEF,YADA9sD,KAAK4sD,uBAAuBn5B,EAAW84B,GAAe,GAAO,GAI/D,IAAMv1D,EAAgBgJ,KAAK6sD,uBAAuBP,GAC9C54B,GAAoB,EAEpB18B,IACFs1D,EAAar1D,KAAO,cAEhBuQ,EAAMukD,iBAAmB/rD,KAAKiJ,UAAU,eAC1CjJ,KAAKqY,MAAMhmB,EAAI0U,MAAOmC,EAAc0B,sBAGtCpD,EAAMukD,gBAAiB,EACvBr4B,EAAoBlsB,EAAMskD,wBAG5B9rD,KAAKksD,gBAAgBz4B,EAAW64B,GAAc,GAAO,EAAOt1D,EAAe08B,QACtE,GAAI1zB,KAAKpJ,kBACVk2D,EACF9sD,KAAKktD,yBAAyBz5B,EAAWg5B,GAEzCzsD,KAAKmtD,kBAAkB15B,EAAW+4B,QAE/B,IAAIO,GAAyB,UAAb16D,EAAIkJ,MAAqBu3C,GAAgB9yC,KAAKq1C,oBAoB1D0X,GAA0B,QAAb16D,EAAIkJ,MAA+B,QAAblJ,EAAIkJ,MAAoBu3C,GAAiB9yC,KAAKiT,MAAM5c,EAAMwN,OAAS7D,KAAKq1C,mBAe3Gr1C,KAAKq1C,mBACVyX,EACF9sD,KAAKktD,yBAAyBz5B,EAAWg5B,GAEzCzsD,KAAKmtD,kBAAkB15B,EAAW+4B,GAGpCxsD,KAAK02B,cArBLn5B,EAAOtG,KAAO5E,EAAIkJ,KAClByE,KAAK2sD,sBAAsBL,GAEvBtsD,KAAKglD,cAAcznD,EAAOlL,KAC5B2N,KAAK4sD,uBAAuBn5B,EAAW84B,GAAe,GAAO,IAEzDvsD,KAAK6sD,uBAAuBP,IAC9BtsD,KAAKqY,MAAMi0C,EAAaj6D,IAAI0U,MAAOmC,EAAce,uBAGnDjK,KAAKksD,gBAAgBz4B,EAAW64B,GAAc,GAAO,GAAO,GAAO,IAGrEtsD,KAAKotD,wBAAwBd,QAlC0D,CACvF,IAAMp9B,EAAclvB,KAAK62B,IAAIxgC,EAAMwN,MAE/B6oD,EAAa13B,UACfh1B,KAAK02B,WAAWs2B,GAGlBzvD,EAAOtG,KAAO,SACd+I,KAAK2sD,sBAAsBpvD,GAC3ByC,KAAKitD,6BAA6BP,GAE9B1sD,KAAKglD,cAAcznD,EAAOlL,KAC5B2N,KAAK4sD,uBAAuBn5B,EAAW84B,EAAer9B,GAAa,IAE/DlvB,KAAK6sD,uBAAuBP,IAC9BtsD,KAAKqY,MAAMi0C,EAAaj6D,IAAI0U,MAAOmC,EAAcgB,oBAGnDlK,KAAKksD,gBAAgBz4B,EAAW64B,EAAcp9B,GAAa,GAAM,GAAO,O,4CA4BxDiV,GACpB,IAAM9xC,EAAM2N,KAAKmvC,kBAAkBhL,GAAQ,GAU3C,OARKA,EAAO9nC,WAAY8nC,EAAOtoC,QAAwB,cAAbxJ,EAAIkJ,MAAsC,cAAdlJ,EAAIjB,OACxE4O,KAAKqY,MAAMhmB,EAAI0U,MAAOmC,EAAcyG,iBAGlC3P,KAAKglD,cAAc3yD,IAAuC,gBAA/B2N,KAAKqtD,iBAAiBh7D,IACnD2N,KAAKqY,MAAMhmB,EAAI0U,MAAOmC,EAAcc,8BAG/B3X,I,4CAGaohC,EAAW0Q,EAAQ38B,GACvC,IAAI8lD,EAEJttD,KAAK06C,aAAa,mBAAoBvW,EAAOp9B,OAC7C/G,KAAKtM,MAAM4nC,MAAMhkB,KACjB,IAAM2tC,EAAYjlD,KAAKwH,MAAMk1C,OAC7B18C,KAAKwH,MAAMk1C,OAAS,GACpB18C,KAAK00C,UAAUpZ,MA/rPL,GAgsPV,IAAM3mC,EAAOwvC,EAAOxvC,KAAO,GAC3BqL,KAAKs0C,4BAA4B3/C,OAAMzB,GAAW,EAAOmD,EAAMsL,QAC/D3B,KAAK00C,UAAUhZ,OACf17B,KAAKtM,MAAMgoC,OACX17B,KAAKwH,MAAMk1C,OAASuI,EACpBxxB,EAAU9+B,KAAKmB,KAAKkK,KAAKy0B,WAAW0P,EAAQ,gBAExC38B,EAAMwkD,gBACRhsD,KAAKqY,MAAM8rB,EAAOp9B,MAAOmC,EAAc+B,uBAGO,OAA3CqiD,EAAqBnpB,EAAOrtC,iBAAsB,EAASw2D,EAAmB5zD,SACjFsG,KAAKqY,MAAM8rB,EAAOp9B,MAAOmC,EAAcuB,sBAGzCjD,EAAMwkD,gBAAiB,I,wCAGPv4B,EAAW9I,GACtBA,EAAKtuB,UAA+B,gBAAlBsuB,EAAKt4B,IAAIkJ,MAA6C,gBAAnBovB,EAAKt4B,IAAIjB,OACjE4O,KAAKqY,MAAMsS,EAAKt4B,IAAI0U,MAAOmC,EAAca,uBAG3C0pB,EAAU9+B,KAAKmB,KAAKkK,KAAKmsD,mBAAmBxhC,M,+CAGrB8I,EAAW9I,GAClC3qB,KAAK06C,aAAa,yBAA0B/vB,EAAKt4B,IAAI0U,OACrD,IAAMpT,EAAOqM,KAAKutD,0BAA0B5iC,GAC5C8I,EAAU9+B,KAAKmB,KAAKnC,GACpBqM,KAAKmjD,WAAWqK,mBAAmBxtD,KAAKqtD,iBAAiB15D,EAAKtB,KAxlXtC,EAwlXiEsB,EAAKtB,IAAI0U,S,sCAGpF0sB,EAAWl2B,EAAQ2xB,EAAaD,EAASj4B,EAAe08B,GACtED,EAAU9+B,KAAKmB,KAAKkK,KAAK2zB,YAAYp2B,EAAQ2xB,EAAaD,EAASj4B,EAAe08B,EAAmB,eAAe,M,6CAG/FD,EAAWl2B,EAAQ2xB,EAAaD,GACrDjvB,KAAK06C,aAAa,sBAAuBn9C,EAAOlL,IAAI0U,OACpD,IAAMpT,EAAOqM,KAAK2zB,YAAYp2B,EAAQ2xB,EAAaD,GAAS,GAAO,EAAO,sBAAsB,GAChGwE,EAAU9+B,KAAKmB,KAAKnC,GACpB,IAAMsD,EAAqB,QAAdtD,EAAKsD,KAAiBtD,EAAKkI,OAvmXRwnD,EAHF,EA0mX+F,QAAd1vD,EAAKsD,KAAiBtD,EAAKkI,OAtmX1G4xD,EAHF,EAMN,EAomXxBztD,KAAKmjD,WAAWqK,mBAAmBxtD,KAAKqtD,iBAAiB15D,EAAKtB,KAAM4E,EAAMtD,EAAKtB,IAAI0U,S,mDAGxDwxC,M,gDAEH5kD,GAGxB,OAFAqM,KAAK0tD,iBAAiB/5D,GACtBqM,KAAKs6B,YACEt6B,KAAKy0B,WAAW9gC,EAAM,0B,yCAGZA,GAOjB,OANKA,EAAKymC,iBAAkBp6B,KAAKiT,MAAM5c,EAAMwM,KAC3C7C,KAAK06C,aAAa,mBAGpB16C,KAAK0tD,iBAAiB/5D,GACtBqM,KAAKs6B,YACEt6B,KAAKy0B,WAAW9gC,EAAM,mB,uCAGdA,GACfqM,KAAKtM,MAAM4nC,MAAMhkB,IACjBtX,KAAKwlD,gBAAgBlqB,MAAM2oB,MAC3BjkD,KAAK00C,UAAUpZ,MAlwPL,GAmwPV3nC,EAAKvC,MAAQ4O,KAAK62B,IAAIxgC,EAAMwM,IAAM7C,KAAKq3B,0BAA4B,KACnEr3B,KAAKwlD,gBAAgB9pB,OACrB17B,KAAK00C,UAAUhZ,OACf17B,KAAKtM,MAAMgoC,S,mCAGA/nC,EAAMswC,EAAaC,GAAsC,IAA1BxrB,EAA0B,uDAxpXrD2iB,IAypXXr7B,KAAKiT,MAAM5c,EAAMkF,OACnB5H,EAAKmJ,GAAKkD,KAAK25B,kBAEXsK,GACFjkC,KAAK8lC,UAAUnyC,EAAKmJ,GAAI,aAAc4b,IAGpCwrB,IAAeD,EACjBtwC,EAAKmJ,GAAK,KAEVkD,KAAK02B,WAAW,KAAMxtB,EAAcsE,oB,sCAK1B7Z,GACdA,EAAKkK,WAAamC,KAAK62B,IAAIxgC,EAAMkP,UAAYvF,KAAK4oD,sBAAwB,O,kCAGhEj1D,GACV,IAAMg6D,EAAa3tD,KAAK4tD,iCAAiCj6D,GACnDk6D,GAAqBF,GAAc3tD,KAAK62B,IAAIxgC,EAAM0L,OAClD+rD,EAAUD,GAAqB7tD,KAAK+tD,cAAcp6D,GAClDqwC,EAAe8pB,GAAW9tD,KAAKguD,mCAAmCr6D,GAClEs6D,EAAsBJ,KAAuB7pB,GAAgBhkC,KAAK62B,IAAIxgC,EAAM0L,QAC5EmsD,EAAiBP,GAAcG,EAErC,GAAIA,IAAY9pB,EAGd,OAFI2pB,GAAY3tD,KAAK02B,aACrB12B,KAAK+jC,gBAAgBpwC,GAAM,GACpBqM,KAAKy0B,WAAW9gC,EAAM,wBAG/B,IAMIw6D,EANEC,EAAgBpuD,KAAKquD,gCAAgC16D,GAE3D,GAAIg6D,GAAcE,IAAsBC,IAAYM,GAAiBpqB,GAAgBiqB,IAAwBG,EAC3G,MAAMpuD,KAAK02B,WAAW,KAAMrgC,EAAMmL,QAYpC,GAPI0sD,GAAkBE,GACpBD,GAAiB,EACjBnuD,KAAK+jC,gBAAgBpwC,EAAMu6D,IAE3BC,EAAiBnuD,KAAKsuD,4BAA4B36D,GAGhDu6D,GAAkBE,GAAiBD,EAErC,OADAnuD,KAAKuuD,YAAY56D,GAAM,GAAM,IAASA,EAAK0S,QACpCrG,KAAKy0B,WAAW9gC,EAAM,0BAG/B,GAAIqM,KAAK62B,IAAIxgC,EAAMtD,UAGjB,OAFAY,EAAKmoC,YAAc97B,KAAKwuD,+BACxBxuD,KAAKuuD,YAAY56D,GAAM,GAAM,GACtBqM,KAAKy0B,WAAW9gC,EAAM,4BAG/B,MAAMqM,KAAK02B,WAAW,KAAMrgC,EAAMmL,U,oCAGtB7N,GACZ,OAAOqM,KAAK62B,IAAIxgC,EAAMwN,Q,uDAGSlQ,GAC/B,GAAIqM,KAAKyuD,2BAA4B,CACnCzuD,KAAK06C,aAAa,qBAClB,IAAM/U,EAAY3lC,KAAKw0B,YAGvB,OAFAmR,EAAU1Q,SAAWj1B,KAAK25B,iBAAgB,GAC1ChmC,EAAKuhC,WAAa,CAACl1B,KAAKy0B,WAAWkR,EAAW,4BACvC,EAGT,OAAO,I,yDAG0BhyC,GACjC,GAAIqM,KAAK+6B,aAAa,MAAO,CACtBpnC,EAAKuhC,aAAYvhC,EAAKuhC,WAAa,IACxC,IAAMyQ,EAAY3lC,KAAK4yB,YAAY5yB,KAAKwH,MAAMkL,aAAc1S,KAAKwH,MAAMmL,iBAIvE,OAHA3S,KAAK22B,OACLgP,EAAU1Q,SAAWj1B,KAAKimC,wBAC1BtyC,EAAKuhC,WAAWp/B,KAAKkK,KAAKy0B,WAAWkR,EAAW,8BACzC,EAGT,OAAO,I,sDAGuBhyC,GACA,MAA9B,QAAIqM,KAAKiT,MAAM5c,EAAMmL,UACd7N,EAAKuhC,aAAYvhC,EAAKuhC,WAAa,KACxC,EAAAvhC,EAAKuhC,YAAWp/B,KAAhB,UAAwBkK,KAAK8jC,0BAC7BnwC,EAAK0S,OAAS,KACd1S,EAAKmoC,YAAc,MACZ,K,kDAMiBnoC,GAC1B,QAAIqM,KAAK04C,iCACP/kD,EAAKuhC,WAAa,GAClBvhC,EAAK0S,OAAS,KACd1S,EAAKmoC,YAAc97B,KAAK0uD,uBAAuB/6D,IACxC,K,wCAOT,IAAKqM,KAAK+6B,aAAa,SAAU,OAAO,EACxC,IAAMpE,EAAO32B,KAAK0rC,iBAClB,OAAQxlC,EAAUoQ,KAAKtW,KAAK+S,MAAMhY,MAAMiF,KAAKwH,MAAMgL,IAAKmkB,KAAU32B,KAAK26C,qBAAqBhkB,EAAM,c,qDAIlG,IAAM55B,EAAOiD,KAAKw0B,YACZvF,EAAUjvB,KAAKioD,kBAErB,GAAIjoD,KAAKiT,MAAM5c,EAAMoO,YAAcwqB,EAOjC,OANAjvB,KAAK22B,OAED1H,GACFjvB,KAAK22B,OAGA32B,KAAK2pD,cAAc5sD,EAAM4xD,EAAmC1/B,GAC9D,GAAIjvB,KAAKiT,MAAM5c,EAAMiP,QAC1B,OAAOtF,KAAKy1C,WAAW14C,GAAM,GAAM,GAC9B,GAAIiD,KAAKiT,MAAM5c,EAAMqM,IAM1B,OALI1C,KAAKiJ,UAAU,eAAiBjJ,KAAK8xB,gBAAgB,aAAc,2BACrE9xB,KAAKqY,MAAMrY,KAAKwH,MAAMT,MAAOmC,EAAcmB,uBAG7CrK,KAAKgnD,iBAAgB,GACdhnD,KAAKy1C,WAAW14C,GAAM,GAAM,GAC9B,GAAIiD,KAAKiT,MAAM5c,EAAM2O,SAAWhF,KAAKiT,MAAM5c,EAAM0O,OAAS/E,KAAKg8B,QACpE,MAAMh8B,KAAKqY,MAAMrY,KAAKwH,MAAMT,MAAOmC,EAAcuI,0BAEjD,IAAM0jC,EAAMn1C,KAAKq3B,0BAEjB,OADAr3B,KAAKs6B,YACE6a,I,6CAIYxhD,GACrB,OAAOqM,KAAKo6C,eAAe,Q,iDAI3B,GAAIp6C,KAAKiT,MAAM5c,EAAMkF,MAAO,CAC1B,IAAMnK,EAAQ4O,KAAKwH,MAAMpW,MAEzB,GAAc,UAAVA,IAAsB4O,KAAKwH,MAAMsrC,aAAyB,QAAV1hD,EAClD,OAAO,EAGT,IAAe,SAAVA,GAA8B,cAAVA,KAA2B4O,KAAKwH,MAAMsrC,YAAa,CAC1E,IAAM8b,EAAI5uD,KAAK0+B,YAEf,GAAIkwB,EAAEzmD,OAAS9R,EAAMkF,MAAoB,SAAZqzD,EAAEx9D,OAAoBw9D,EAAEzmD,OAAS9R,EAAMmL,OAElE,OADAxB,KAAK0oD,gBAAgB,CAAC,OAAQ,gBACvB,QAGN,IAAK1oD,KAAKiT,MAAM5c,EAAMtD,UAC3B,OAAO,EAGT,IAAM4jC,EAAO32B,KAAK0rC,iBACZmjB,EAAU7uD,KAAK26C,qBAAqBhkB,EAAM,QAEhD,GAAoC,KAAhC32B,KAAK+S,MAAM8iB,WAAWc,IAAgB32B,KAAKiT,MAAM5c,EAAMkF,OAASszD,EAClE,OAAO,EAGT,GAAI7uD,KAAKiT,MAAM5c,EAAMtD,WAAa87D,EAAS,CACzC,IAAMC,EAAgB9uD,KAAK+S,MAAM8iB,WAAW71B,KAAK66C,oBAAoBlkB,EAAO,IAC5E,OAAyB,KAAlBm4B,GAA0C,KAAlBA,EAGjC,OAAO,I,sCAGOn7D,EAAMwjC,GACpB,GAAIn3B,KAAK46B,cAAc,QAAS,CAC9BjnC,EAAK0S,OAASrG,KAAKk7C,oBACnBl7C,KAAKuuD,YAAY56D,GACjB,IAAMo7D,EAAa/uD,KAAKgvD,6BAEpBD,IACFp7D,EAAKo7D,WAAaA,QAGhB53B,EACFn3B,KAAK02B,aAEL/iC,EAAK0S,OAAS,KAIlBrG,KAAKs6B,c,qDAIL,GAAIt6B,KAAKiT,MAAM5c,EAAMqM,MACnB1C,KAAK0oD,gBAAgB,CAAC,aAAc,sBAEhC1oD,KAAKiJ,UAAU,eAAe,CAChC,IAAIjJ,KAAK8xB,gBAAgB,aAAc,0BAGrC,OAAO,EAFP9xB,KAAK02B,WAAW12B,KAAKwH,MAAMT,MAAOmC,EAAcmB,uBAOtD,MAAmC,QAA5BrK,KAAKwH,MAAMW,KAAKlI,SAAiD,UAA5BD,KAAKwH,MAAMW,KAAKlI,SAAmD,aAA5BD,KAAKwH,MAAMW,KAAKlI,SAAsD,UAA5BD,KAAKwH,MAAMW,KAAKlI,SAAuBD,KAAKg8B,SAAWh8B,KAAKioD,oB,kCAG/Kt0D,EAAMs7D,EAAYC,EAAWC,GACvC,GAAIF,EACF,GAAIC,GAGF,GAFAlvD,KAAKovD,sBAAsBz7D,EAAM,WAE7BqM,KAAKiJ,UAAU,qBAAsB,CACvC,IAAIomD,EAEEvzB,EAAcnoC,EAAKmoC,YAEA,eAArBA,EAAY3zB,MAA8C,SAArB2zB,EAAYvgC,MAAmBugC,EAAY90B,IAAM80B,EAAY/0B,QAAU,IAAmD,OAA3CsoD,EAAqBvzB,EAAYjJ,YAAiB,EAASw8B,EAAmBj8B,gBACpMpzB,KAAKqY,MAAMyjB,EAAY/0B,MAAOmC,EAAcmC,qCAG3C,GAAI1X,EAAKuhC,YAAcvhC,EAAKuhC,WAAWx7B,OAC5C,IAAK,IAAI0xC,EAAM,EAAGkkB,EAAmB37D,EAAKuhC,WAAYkW,EAAMkkB,EAAiB51D,OAAQ0xC,IAAO,CAC1F,IAAMzF,EAAY2pB,EAAiBlkB,GAEjCnW,EACE0Q,EADF1Q,SAEIs6B,EAAiC,eAAlBt6B,EAAS9sB,KAAwB8sB,EAAS15B,KAAO05B,EAAS7jC,MAG/E,GAFA4O,KAAKovD,sBAAsBzpB,EAAW4pB,IAEjCJ,GAAUxpB,EAAUE,MAAO,KAE5BA,EACEF,EADFE,MAGiB,kBAAfA,EAAM19B,KACRnI,KAAKqY,MAAMstB,EAAU5+B,MAAOmC,EAAckC,sBAAuBy6B,EAAMz0C,MAAOm+D,IAE9EvvD,KAAKymC,kBAAkBZ,EAAMtqC,KAAMsqC,EAAM9+B,OAAO,GAAM,GACtD/G,KAAKtM,MAAM87D,iBAAiB3pB,UAI7B,GAAIlyC,EAAKmoC,YACd,GAA8B,wBAA1BnoC,EAAKmoC,YAAY3zB,MAA4D,qBAA1BxU,EAAKmoC,YAAY3zB,KAA6B,CACnG,IAAMrL,EAAKnJ,EAAKmoC,YAAYh/B,GAC5B,IAAKA,EAAI,MAAM,IAAI+wB,MAAM,qBACzB7tB,KAAKovD,sBAAsBz7D,EAAMmJ,EAAGvB,WAC/B,GAA8B,wBAA1B5H,EAAKmoC,YAAY3zB,KAC1B,IAAK,IAAImjC,EAAM,EAAGmkB,EAAwB97D,EAAKmoC,YAAYwtB,aAAche,EAAMmkB,EAAsB/1D,OAAQ4xC,IAAO,CAClH,IAAMxP,EAAc2zB,EAAsBnkB,GAC1CtrC,KAAKkzB,iBAAiB4I,EAAYh/B,IAQ1C,GAFiCkD,KAAKwH,MAAMm1C,eAAe38C,KAAKwH,MAAMm1C,eAAejjD,OAAS,GAEjEA,OAC3B,MAAMsG,KAAKqY,MAAM1kB,EAAKoT,MAAOmC,EAAcsI,8B,uCAI9B7d,GACf,GAAkB,eAAdA,EAAKwU,KACPnI,KAAKovD,sBAAsBz7D,EAAMA,EAAK4H,WACjC,GAAkB,kBAAd5H,EAAKwU,KACd,IAAK,IAAIunD,EAAM,EAAGC,EAAmBh8D,EAAK8U,WAAYinD,EAAMC,EAAiBj2D,OAAQg2D,IAAO,CAC1F,IAAM/kC,EAAOglC,EAAiBD,GAC9B1vD,KAAKkzB,iBAAiBvI,QAEnB,GAAkB,iBAAdh3B,EAAKwU,KACd,IAAK,IAAIynD,EAAM,EAAGC,EAAiBl8D,EAAKgU,SAAUioD,EAAMC,EAAen2D,OAAQk2D,IAAO,CACpF,IAAME,EAAOD,EAAeD,GAExBE,GACF9vD,KAAKkzB,iBAAiB48B,OAGH,mBAAdn8D,EAAKwU,KACdnI,KAAKkzB,iBAAiBv/B,EAAKvC,OACJ,gBAAduC,EAAKwU,KACdnI,KAAKkzB,iBAAiBv/B,EAAKqG,UACJ,sBAAdrG,EAAKwU,MACdnI,KAAKkzB,iBAAiBv/B,EAAK+xC,Q,4CAIT/xC,EAAM4H,GACtByE,KAAKwH,MAAMs1C,oBAAoB7jC,QAAQ1d,IAAS,GAClDyE,KAAKqY,MAAM1kB,EAAKoT,MAAgB,YAATxL,EAAqB2N,EAAc2B,uBAAyB3B,EAAc4B,gBAAiBvP,GAGpHyE,KAAKwH,MAAMs1C,oBAAoBhnD,KAAKyF,K,8CAIpC,IAAMw0D,EAAQ,GACV5vB,GAAQ,EAGZ,IAFAngC,KAAKm3B,OAAO9gC,EAAMmL,SAEVxB,KAAK62B,IAAIxgC,EAAMsL,SAAS,CAC9B,GAAIw+B,EACFA,GAAQ,OAGR,GADAngC,KAAKm3B,OAAO9gC,EAAM0L,OACd/B,KAAK62B,IAAIxgC,EAAMsL,QAAS,MAG9B,IAAMhO,EAAOqM,KAAKw0B,YAClB7gC,EAAKkyC,MAAQ7lC,KAAKimC,wBAClBtyC,EAAKshC,SAAWj1B,KAAK46B,cAAc,MAAQ56B,KAAKimC,wBAA0BtyC,EAAKkyC,MAAMS,UACrFypB,EAAMj6D,KAAKkK,KAAKy0B,WAAW9gC,EAAM,oBAGnC,OAAOo8D,I,8CAIP,GAAI/vD,KAAKiT,MAAM5c,EAAM4K,QAAS,CAC5BjB,KAAK06C,aAAa,qBAClB,IAAM3Y,EAAS/hC,KAAK0yB,aAAa1yB,KAAKwH,MAAMpW,MAAO,iBAC7C4+D,EAAYjuB,EAAO3wC,MAAM6hB,MAAMgzC,IAMrC,OAJI+J,GACFhwD,KAAKqY,MAAM0pB,EAAOh7B,MAAOmC,EAAc8E,iCAAkCgiD,EAAU,GAAGn6B,WAAW,GAAGo6B,SAAS,KAGxGluB,EAGT,OAAO/hC,KAAK25B,iBAAgB,K,kCAGlBhmC,GAGV,GAFAA,EAAKuhC,WAAa,IAEbl1B,KAAKiT,MAAM5c,EAAM4K,QAAS,CAC7B,IACMivD,GADalwD,KAAKmwD,iCAAiCx8D,IACxBqM,KAAK62B,IAAIxgC,EAAM0L,OAC1C+rD,EAAUoC,GAAalwD,KAAKg7C,8BAA8BrnD,GAC5Du8D,IAAcpC,GAAS9tD,KAAKi7C,2BAA2BtnD,GAC3DqM,KAAKu5B,iBAAiB,QAGxB5lC,EAAK0S,OAASrG,KAAKk7C,oBACnB,IAAM6T,EAAa/uD,KAAKgvD,6BAExB,GAAID,EACFp7D,EAAKo7D,WAAaA,MACb,CACH,IAAMt3B,EAAaz3B,KAAKowD,6BAEpB34B,IACF9jC,EAAK8jC,WAAaA,GAKxB,OADAz3B,KAAKs6B,YACEt6B,KAAKy0B,WAAW9gC,EAAM,uB,0CAK7B,OADKqM,KAAKiT,MAAM5c,EAAM4K,SAASjB,KAAK02B,aAC7B12B,KAAKi3B,kB,+CAGWtjC,GACvB,OAAOqM,KAAKiT,MAAM5c,EAAMkF,Q,gDAGA5H,EAAMgyC,EAAWx9B,EAAMy9B,GAC/CD,EAAUE,MAAQ7lC,KAAK25B,kBACvB35B,KAAK8lC,UAAUH,EAAUE,MAAOD,EAhiYfvK,GAiiYjB1nC,EAAKuhC,WAAWp/B,KAAKkK,KAAKy0B,WAAWkR,EAAWx9B,M,2CAIhD,IAAMkoD,EAAQ,GACRC,EAAY,IAAI93D,IAEtB,EAAG,CACD,GAAIwH,KAAKiT,MAAM5c,EAAMsL,QACnB,MAGF,IAAMhO,EAAOqM,KAAKw0B,YACZ+7B,EAAUvwD,KAAKwH,MAAMpW,MAoB3B,GAlBI4O,KAAKiT,MAAM5c,EAAM4K,QACnBtN,EAAKtB,IAAM2N,KAAK0yB,aAAa69B,EAAS,iBAEtC58D,EAAKtB,IAAM2N,KAAK25B,iBAAgB,GAGlC35B,KAAKm3B,OAAO9gC,EAAM4L,OAEF,SAAZsuD,GACFvwD,KAAKqY,MAAM1kB,EAAKtB,IAAI0U,MAAOmC,EAAc2E,iCAAkC0iD,GAGzED,EAAUt+D,IAAIu+D,IAChBvwD,KAAKqY,MAAM1kB,EAAKtB,IAAI0U,MAAOmC,EAAc6E,kCAAmCwiD,GAG9ED,EAAU13D,IAAI23D,IAETvwD,KAAKiT,MAAM5c,EAAM4K,QACpB,MAAMjB,KAAK02B,WAAW12B,KAAKwH,MAAMT,MAAOmC,EAAc4E,6BAGxDna,EAAKvC,MAAQ4O,KAAK0yB,aAAa1yB,KAAKwH,MAAMpW,MAAO,iBACjD4O,KAAKy0B,WAAW9gC,EAAM,mBACtB08D,EAAMv6D,KAAKnC,SACJqM,KAAK62B,IAAIxgC,EAAM0L,QAExB,OAAOsuD,I,mDAIP,IAAIrwD,KAAKiT,MAAM5c,EAAM6O,QAAWlF,KAAK4V,wBAInC,OAAI5V,KAAKiJ,UAAU,oBAA4B,GACxC,KAJPjJ,KAAK06C,aAAa,oBAClB16C,KAAK22B,OAMP,IAAM05B,EAAQ,GACR54B,EAAa,IAAIj/B,IAEvB,EAAG,CACD,IAAM7E,EAAOqM,KAAKw0B,YAclB,GAbA7gC,EAAKtB,IAAM2N,KAAK25B,iBAAgB,GAEV,SAAlBhmC,EAAKtB,IAAIkJ,MACXyE,KAAKqY,MAAM1kB,EAAKtB,IAAI0U,MAAOmC,EAAc2E,iCAAkCla,EAAKtB,IAAIkJ,MAGlFk8B,EAAWzlC,IAAI2B,EAAKtB,IAAIkJ,OAC1ByE,KAAKqY,MAAM1kB,EAAKtB,IAAI0U,MAAOmC,EAAc6E,kCAAmCpa,EAAKtB,IAAIkJ,MAGvFk8B,EAAW7+B,IAAIjF,EAAKtB,IAAIkJ,MACxByE,KAAKm3B,OAAO9gC,EAAM4L,QAEbjC,KAAKiT,MAAM5c,EAAM4K,QACpB,MAAMjB,KAAK02B,WAAW12B,KAAKwH,MAAMT,MAAOmC,EAAc4E,6BAGxDna,EAAKvC,MAAQ4O,KAAK0yB,aAAa1yB,KAAKwH,MAAMpW,MAAO,iBACjD4O,KAAKy0B,WAAW9gC,EAAM,mBACtB08D,EAAMv6D,KAAKnC,SACJqM,KAAK62B,IAAIxgC,EAAM0L,QAExB,OAAOsuD,I,mDAIP,IAAIrwD,KAAK+6B,aAAa,WAAc/6B,KAAK4V,wBAIvC,OAAI5V,KAAKiJ,UAAU,oBAA4B,GACxC,KAJPjJ,KAAK06C,aAAa,oBAClB16C,KAAK22B,OAMP32B,KAAK62B,IAAIxgC,EAAMmL,QACf,IAAM6uD,EAAQrwD,KAAKwwD,qBAEnB,OADAxwD,KAAK62B,IAAIxgC,EAAMsL,QACR0uD,I,uDAGwB18D,GAC/B,QAAIqM,KAAKywD,yBAAyB98D,KAChCqM,KAAK0wD,0BAA0B/8D,EAAMqM,KAAKw0B,YAAa,yBAA0B,6BAC1E,K,oDAMmB7gC,GAC5B,GAAIqM,KAAKiT,MAAM5c,EAAMwN,MAAO,CAC1B,IAAM8hC,EAAY3lC,KAAKw0B,YAIvB,OAHAx0B,KAAK22B,OACL32B,KAAKu5B,iBAAiB,MACtBv5B,KAAK0wD,0BAA0B/8D,EAAMgyC,EAAW,2BAA4B,+BACrE,EAGT,OAAO,I,iDAGkBhyC,GACzB,IAAIwsC,GAAQ,EAGZ,IAFAngC,KAAKm3B,OAAO9gC,EAAMmL,SAEVxB,KAAK62B,IAAIxgC,EAAMsL,SAAS,CAC9B,GAAIw+B,EACFA,GAAQ,MACH,CACL,GAAIngC,KAAK62B,IAAIxgC,EAAM4L,OACjB,MAAMjC,KAAKqY,MAAMrY,KAAKwH,MAAMT,MAAOmC,EAAcyB,wBAInD,GADA3K,KAAKm3B,OAAO9gC,EAAM0L,OACd/B,KAAK62B,IAAIxgC,EAAMsL,QAAS,MAG9B3B,KAAK2wD,qBAAqBh9D,M,2CAITA,GACnB,IAAMgyC,EAAY3lC,KAAKw0B,YAGvB,GAFAmR,EAAUU,SAAWrmC,KAAKimC,wBAEtBjmC,KAAK46B,cAAc,MACrB+K,EAAUE,MAAQ7lC,KAAK25B,sBAClB,KAEH0M,EACEV,EADFU,SAGF,GAAsB,kBAAlBA,EAASl+B,KACX,MAAMnI,KAAKqY,MAAMstB,EAAU5+B,MAAOmC,EAAcyC,sBAAuB06B,EAASj1C,OAGlF4O,KAAKymC,kBAAkBJ,EAAS9qC,KAAMoqC,EAAU5+B,OAAO,GAAM,GAC7D4+B,EAAUE,MAAQQ,EAASC,UAG7BtmC,KAAK8lC,UAAUH,EAAUE,MAAO,mBAhsYfxK,GAisYjB1nC,EAAKuhC,WAAWp/B,KAAKkK,KAAKy0B,WAAWkR,EAAW,wB,oIA18GvChb,EAAMimC,EAAUC,EAAUh9B,GACnC,KAAkB,kBAAdlJ,EAAKxiB,MAA4BnI,KAAK8wD,eAAenmC,IAASA,EAAKtuB,UAAYsuB,EAAKkK,WAAxF,CAIA,IAAMxiC,EAAMs4B,EAAKt4B,IAGjB,GAAa,eAFa,eAAbA,EAAI8V,KAAwB9V,EAAIkJ,KAAOlJ,EAAIjB,OAE9B,CACxB,GAAIw/D,EAEF,YADA5wD,KAAKqY,MAAMhmB,EAAI0U,MAAOmC,EAAcsG,eAIlCqhD,EAASE,OACPl9B,GACuC,IAArCA,EAAoBkxB,cACtBlxB,EAAoBkxB,YAAc1yD,EAAI0U,OAGxC/G,KAAKqY,MAAMhmB,EAAI0U,MAAOmC,EAAc6B,iBAIxC8lD,EAASE,MAAO,M,2CAICh0D,EAAMo/C,GACzB,MAAqB,4BAAdp/C,EAAKoL,MAAsCpL,EAAKgK,QAAUo1C,I,sCAIjE,IAAIsJ,EA14JM,EA44JNzlD,KAAKiJ,UAAU,kBAAoBjJ,KAAKgX,WAC1CyuC,GA34Jc,GA84JhBzlD,KAAKtM,MAAM4nC,MApzRO,GAqzRlBt7B,KAAK00C,UAAUpZ,MAAMmqB,GACrBzlD,KAAKsoC,YACL,IAAMvrC,EAAOiD,KAAKk3B,kBAQlB,OANKl3B,KAAKiT,MAAM5c,EAAM6K,MACpBlB,KAAK02B,aAGP35B,EAAK6/C,SAAW58C,KAAKwH,MAAMo1C,SAC3B7/C,EAAK8W,OAAS7T,KAAKwH,MAAMqM,OAClB9W,I,sCAGOi0D,EAAYn9B,GAAqB,WAC/C,OAAIm9B,EACKhxD,KAAKixD,eAAc,kBAAM,EAAKC,oBAAoBr9B,MAGpD7zB,KAAKmxD,YAAW,kBAAM,EAAKD,oBAAoBr9B,Q,0CAGpCA,GAClB,IAAMK,EAAWl0B,KAAKwH,MAAMT,MACtB0L,EAAWzS,KAAKwH,MAAMiL,SACtB1V,EAAOiD,KAAK2iC,iBAAiB9O,GAEnC,GAAI7zB,KAAKiT,MAAM5c,EAAM0L,OAAQ,CAC3B,IAAMpO,EAAOqM,KAAK4yB,YAAYsB,EAAUzhB,GAGxC,IAFA9e,EAAKy9D,YAAc,CAACr0D,GAEbiD,KAAK62B,IAAIxgC,EAAM0L,QACpBpO,EAAKy9D,YAAYt7D,KAAKkK,KAAK2iC,iBAAiB9O,IAI9C,OADA7zB,KAAKolC,iBAAiBzxC,EAAKy9D,aACpBpxD,KAAKy0B,WAAW9gC,EAAM,sBAG/B,OAAOoJ,I,iDAGkB82B,EAAqB8S,EAAgB7E,GAAkB,WAChF,OAAO9hC,KAAKixD,eAAc,kBAAM,EAAKtuB,iBAAiB9O,EAAqB8S,EAAgB7E,Q,8CAGrEjO,EAAqB8S,EAAgB7E,GAAkB,WAC7E,OAAO9hC,KAAKmxD,YAAW,kBAAM,EAAKxuB,iBAAiB9O,EAAqB8S,EAAgB7E,Q,uCAGzEjO,EAAqB8S,EAAgB7E,GACpD,IAgBIuvB,EAhBEn9B,EAAWl0B,KAAKwH,MAAMT,MACtB0L,EAAWzS,KAAKwH,MAAMiL,SAE5B,GAAIzS,KAAK+6B,aAAa,UAChB/6B,KAAK00C,UAAU4c,SAAU,CAC3BtxD,KAAKwH,MAAM8N,aAAc,EACzB,IAAIowB,EAAO1lC,KAAKuxD,aAMhB,OAJI5qB,IACFjB,EAAOiB,EAAen0C,KAAKwN,KAAM0lC,EAAMxR,EAAUzhB,IAG5CizB,EAMP7R,EACFw9B,GAAsB,GAEtBx9B,EAAsB,IAAI6xB,GAC1B2L,GAAsB,IAGpBrxD,KAAKiT,MAAM5c,EAAMwL,SAAW7B,KAAKiT,MAAM5c,EAAMkF,SAC/CyE,KAAKwH,MAAM20C,iBAAmBn8C,KAAKwH,MAAMT,OAG3C,IAAI2+B,EAAO1lC,KAAKwxD,sBAAsB39B,EAAqBiO,GAM3D,GAJI6E,IACFjB,EAAOiB,EAAen0C,KAAKwN,KAAM0lC,EAAMxR,EAAUzhB,IAG/CzS,KAAKwH,MAAMW,KAAKhI,SAAU,CAC5B,IAAMxM,EAAOqM,KAAK4yB,YAAYsB,EAAUzhB,GAClCiyB,EAAW1kC,KAAKwH,MAAMpW,MAiB5B,OAhBAuC,EAAK+wC,SAAWA,EAEZ1kC,KAAKiT,MAAM5c,EAAMwM,KACnBlP,EAAK+xC,KAAO1lC,KAAK+0B,aAAa2Q,GAAM,GACpC7R,EAAoBkxB,aAAe,GAEnCpxD,EAAK+xC,KAAOA,EAGV7R,EAAoBixB,iBAAmBnxD,EAAK+xC,KAAK3+B,QACnD8sB,EAAoBixB,iBAAmB,GAGzC9kD,KAAK8lC,UAAUJ,EAAM,yBACrB1lC,KAAK22B,OACLhjC,EAAK4pC,MAAQv9B,KAAK2iC,mBACX3iC,KAAKy0B,WAAW9gC,EAAM,wBAK/B,OAJW09D,GACTrxD,KAAKypD,sBAAsB51B,GAAqB,GAG3C6R,I,4CAGa7R,EAAqBiO,GACzC,IAAM5N,EAAWl0B,KAAKwH,MAAMT,MACtB0L,EAAWzS,KAAKwH,MAAMiL,SACtB0pC,EAAmBn8C,KAAKwH,MAAM20C,iBAC9Bp/C,EAAOiD,KAAKyxD,aAAa59B,GAE/B,OAAI7zB,KAAK0xD,qBAAqB30D,EAAMo/C,GAC3Bp/C,EAGFiD,KAAK2xD,iBAAiB50D,EAAMm3B,EAAUzhB,EAAUqvB,K,uCAGxC/kC,EAAMm3B,EAAUzhB,EAAUqvB,GACzC,GAAI9hC,KAAK62B,IAAIxgC,EAAM+L,UAAW,CAC5B,IAAMzO,EAAOqM,KAAK4yB,YAAYsB,EAAUzhB,GAKxC,OAJA9e,EAAK2iB,KAAOvZ,EACZpJ,EAAK0uC,WAAariC,KAAKq3B,0BACvBr3B,KAAKm3B,OAAO9gC,EAAM4L,OAClBtO,EAAK+uC,UAAY1iC,KAAK2iC,mBACf3iC,KAAKy0B,WAAW9gC,EAAM,yBAG/B,OAAOoJ,I,mCAGI82B,GACX,IAAMK,EAAWl0B,KAAKwH,MAAMT,MACtB0L,EAAWzS,KAAKwH,MAAMiL,SACtB0pC,EAAmBn8C,KAAKwH,MAAM20C,iBAC9Bp/C,EAAOiD,KAAK+wC,gBAAgBld,GAElC,OAAI7zB,KAAK0xD,qBAAqB30D,EAAMo/C,GAC3Bp/C,EAGFiD,KAAK83C,YAAY/6C,EAAMm3B,EAAUzhB,GAAW,K,kCAGzCizB,EAAMgS,EAAcC,EAAcC,GAC5C,IAAIga,EAAO5xD,KAAKwH,MAAMW,KAAK9H,MAE3B,GAAY,MAARuxD,IAAiB5xD,KAAK00C,UAAUmd,QAAU7xD,KAAKiT,MAAM5c,EAAMwP,OACzD+rD,EAAOha,EAAS,CAClB,IAAMuM,EAAKnkD,KAAKwH,MAAMW,KAEtB,GAAIg8C,IAAO9tD,EAAM4M,SAAU,CAGzB,GAFAjD,KAAK06C,aAAa,oBAEd16C,KAAKwH,MAAMi1C,2BACb,OAAO/W,EAGT1lC,KAAKwH,MAAM40C,YAAa,EACxBp8C,KAAK8xD,6BAA6BpsB,EAAMgS,GAG1C,IAAM/jD,EAAOqM,KAAK4yB,YAAY8kB,EAAcC,GAC5ChkD,EAAK+xC,KAAOA,EACZ/xC,EAAK+wC,SAAW1kC,KAAKwH,MAAMpW,MAEvB+yD,IAAO9tD,EAAM0N,UAA0B,oBAAd2hC,EAAKv9B,OAA+BnI,KAAKU,QAAQu7C,gCAAoCvW,EAAK7S,OAAS6S,EAAK7S,MAAMO,eACzIpzB,KAAKqY,MAAMqtB,EAAK1rC,SAAS+M,MAAOmC,EAAcoI,oCAGhD,IAAMygD,EAAU5N,IAAO9tD,EAAM8M,WAAaghD,IAAO9tD,EAAM+M,WACjD4uD,EAAW7N,IAAO9tD,EAAM6M,kBAQ9B,GANI8uD,IACFJ,EAAOv7D,EAAM+M,WAAW/C,OAG1BL,KAAK22B,OAEDwtB,IAAO9tD,EAAM4M,UAAqE,YAAzDjD,KAAK8xB,gBAAgB,mBAAoB,aAChE9xB,KAAKiT,MAAM5c,EAAMkF,OAA8B,UAArByE,KAAKwH,MAAMpW,OAAqB4O,KAAK00C,UAAUud,SAC3E,MAAMjyD,KAAKqY,MAAMrY,KAAKwH,MAAMT,MAAOmC,EAAcwH,kCAIrD/c,EAAK4pC,MAAQv9B,KAAKkyD,qBAAqB/N,EAAIyN,GAC3C5xD,KAAKy0B,WAAW9gC,EAAMo+D,GAAWC,EAAW,oBAAsB,oBAClE,IAAMG,EAASnyD,KAAKwH,MAAMW,KAE1B,GAAI6pD,IAAaG,IAAW97D,EAAM8M,WAAagvD,IAAW97D,EAAM+M,aAAe2uD,GAAWI,IAAW97D,EAAM6M,kBACzG,MAAMlD,KAAKqY,MAAMrY,KAAKwH,MAAMT,MAAOmC,EAAc0E,2BAGnD,OAAO5N,KAAK83C,YAAYnkD,EAAM+jD,EAAcC,EAAcC,GAI9D,OAAOlS,I,2CAGYye,EAAIyN,GAAM,WACvB19B,EAAWl0B,KAAKwH,MAAMT,MACtB0L,EAAWzS,KAAKwH,MAAMiL,SAE5B,OAAQ0xC,GACN,KAAK9tD,EAAM4M,SACT,OAAQjD,KAAK8xB,gBAAgB,mBAAoB,aAC/C,IAAK,QACH,OAAO9xB,KAAKoyD,4BAA2B,WACrC,OAAO,EAAKC,uBAAuB,EAAKC,yBAAyBnO,EAAIyN,GAAO19B,EAAUzhB,MAG1F,IAAK,SACH,OAAOzS,KAAKuyD,gCAA+B,WACzC,OAAO,EAAKC,wBAAwBZ,MAI5C,QACE,OAAO5xD,KAAKsyD,yBAAyBnO,EAAIyN,M,+CAItBzN,EAAIyN,GAC3B,IAAM19B,EAAWl0B,KAAKwH,MAAMT,MACtB0L,EAAWzS,KAAKwH,MAAMiL,SAC5B,OAAOzS,KAAK83C,YAAY93C,KAAK+wC,kBAAmB7c,EAAUzhB,EAAU0xC,EAAGjkD,iBAAmB0xD,EAAO,EAAIA,K,sCAGvF/9B,GACd,IAAMK,EAAWl0B,KAAKwH,MAAMT,MACtB0L,EAAWzS,KAAKwH,MAAMiL,SACtBggD,EAAUzyD,KAAK+6B,aAAa,SAElC,GAAI03B,GAAWzyD,KAAKmpD,iBAElB,OADAnpD,KAAK22B,OACE32B,KAAK0yD,WAAWx+B,EAAUzhB,GAGnC,GAAIzS,KAAK+6B,aAAa,WAA0C,MAA7B/6B,KAAK6wC,sBAAgC7wC,KAAKo2C,wBAC3E,OAAOp2C,KAAK2yD,wBAGd,IAAMhQ,EAAS3iD,KAAKiT,MAAM5c,EAAMyM,QAC1BnP,EAAOqM,KAAKw0B,YAElB,GAAIx0B,KAAKwH,MAAMW,KAAKvI,OAAQ,CAC1BjM,EAAK+wC,SAAW1kC,KAAKwH,MAAMpW,MAC3BuC,EAAKiM,QAAS,EAEVI,KAAKiT,MAAM5c,EAAMwO,SACnB7E,KAAK06C,aAAa,oBAGpB,IAAMkY,EAAW5yD,KAAKiT,MAAM5c,EAAM4P,SAKlC,GAJAjG,KAAK22B,OACLhjC,EAAKqG,SAAWgG,KAAK+wC,kBACrB/wC,KAAKypD,sBAAsB51B,GAAqB,GAE5C7zB,KAAKwH,MAAMi6B,QAAUmxB,EAAU,CACjC,IAAM10D,EAAMvK,EAAKqG,SAEA,eAAbkE,EAAIiK,KACNnI,KAAKqY,MAAM1kB,EAAKoT,MAAOmC,EAAc0G,cAC5B5P,KAAK6yD,yBAAyB30D,IACvC8B,KAAKqY,MAAM1kB,EAAKoT,MAAOmC,EAAcwB,oBAIzC,IAAKi4C,EACH,OAAO3iD,KAAKy0B,WAAW9gC,EAAM,mBAIjC,IAAMoJ,EAAOiD,KAAK8yD,YAAYn/D,EAAMgvD,EAAQ9uB,GAE5C,GAAI4+B,KACiBzyD,KAAKiJ,UAAU,eAAiBjJ,KAAKwH,MAAMW,KAAKxI,WAAaK,KAAKwH,MAAMW,KAAKxI,aAAeK,KAAKiT,MAAM5c,EAAMuN,WAE7G5D,KAAK+yD,oBAEtB,OADA/yD,KAAKgzD,eAAe9+B,EAAUl0B,KAAKiJ,UAAU,iBAAmBC,EAAcQ,uBAAyBR,EAAcS,yBAC9G3J,KAAK0yD,WAAWx+B,EAAUzhB,GAIrC,OAAO1V,I,kCAGGpJ,EAAMgvD,EAAQ9uB,GACxB,GAAI8uB,EAEF,OADA3iD,KAAK8lC,UAAUnyC,EAAKqG,SAAU,oBACvBgG,KAAKy0B,WAAW9gC,EAAM,oBAG/B,IAAMugC,EAAWl0B,KAAKwH,MAAMT,MACtB0L,EAAWzS,KAAKwH,MAAMiL,SACxB1V,EAAOiD,KAAK4oD,oBAAoB/0B,GACpC,GAAI7zB,KAAKypD,sBAAsB51B,GAAqB,GAAQ,OAAO92B,EAEnE,KAAOiD,KAAKwH,MAAMW,KAAK/H,UAAYJ,KAAK8gC,sBAAsB,CAC5D,IAAMntC,EAAOqM,KAAK4yB,YAAYsB,EAAUzhB,GACxC9e,EAAK+wC,SAAW1kC,KAAKwH,MAAMpW,MAC3BuC,EAAKiM,QAAS,EACdjM,EAAKqG,SAAW+C,EAChBiD,KAAK8lC,UAAU/oC,EAAM,qBACrBiD,KAAK22B,OACL55B,EAAOiD,KAAKy0B,WAAW9gC,EAAM,oBAG/B,OAAOoJ,I,0CAGW82B,GAClB,IAAMK,EAAWl0B,KAAKwH,MAAMT,MACtB0L,EAAWzS,KAAKwH,MAAMiL,SACtB0pC,EAAmBn8C,KAAKwH,MAAM20C,iBAC9Bp/C,EAAOiD,KAAKi3B,cAAcpD,GAEhC,OAAI7zB,KAAK0xD,qBAAqB30D,EAAMo/C,GAC3Bp/C,EAGFiD,KAAKizD,gBAAgBl2D,EAAMm3B,EAAUzhB,K,sCAG9B0iB,EAAMjB,EAAUzhB,EAAU2iB,GACxC,IAAM5tB,EAAQ,CACZ6tB,qBAAqB,EACrB69B,gBAAiBlzD,KAAKs3C,qBAAqBniB,GAC3CI,MAAM,GAGR,GACEJ,EAAOn1B,KAAKmzD,eAAeh+B,EAAMjB,EAAUzhB,EAAU2iB,EAAS5tB,GAC9DA,EAAM0rD,iBAAkB,SAChB1rD,EAAM+tB,MAEhB,OAAOJ,I,qCAGMA,EAAMjB,EAAUzhB,EAAU2iB,EAAS5tB,GAChD,IAAK4tB,GAAWp1B,KAAK62B,IAAIxgC,EAAM6L,aAC7B,OAAOlC,KAAKozD,UAAUj+B,EAAMjB,EAAUzhB,EAAU2iB,EAAS5tB,GACpD,GAAIxH,KAAKiT,MAAM5c,EAAMmM,WAC1B,OAAOxC,KAAKy3C,8BAA8BtiB,EAAMjB,EAAUzhB,EAAUjL,GAGtE,IAAIwtB,GAAW,EAEf,GAAIh1B,KAAKiT,MAAM5c,EAAMgM,aAAc,CACjC,GAAI+yB,GAAwC,KAA7Bp1B,KAAK6wC,oBAElB,OADArpC,EAAM+tB,MAAO,EACNJ,EAGT3tB,EAAM6tB,oBAAsBL,GAAW,EACvCh1B,KAAK22B,OAGP,OAAKvB,GAAWp1B,KAAKiT,MAAM5c,EAAMwL,QACxB7B,KAAKqzD,gCAAgCl+B,EAAMjB,EAAUzhB,EAAUjL,EAAOwtB,GACpEA,GAAYh1B,KAAKiT,MAAM5c,EAAM8K,WAAanB,KAAK62B,IAAIxgC,EAAM8L,KAC3DnC,KAAKszD,YAAYn+B,EAAMjB,EAAUzhB,EAAUjL,EAAOwtB,IAEzDxtB,EAAM+tB,MAAO,EACNJ,K,kCAICA,EAAMjB,EAAUzhB,EAAUjL,EAAOwtB,GAC3C,IAAMrhC,EAAOqM,KAAK4yB,YAAYsB,EAAUzhB,GAClCpW,EAAW2D,KAAK62B,IAAIxgC,EAAM8K,UAChCxN,EAAKwE,OAASg9B,EACdxhC,EAAK0I,SAAWA,EAChB,IAAMuxB,EAAWvxB,EAAW2D,KAAKk3B,kBAAoBl3B,KAAKuzD,uBAAsB,GAgBhF,OAdIvzD,KAAKglD,cAAcp3B,KACI,UAArBj6B,EAAKwE,OAAOgQ,MACdnI,KAAKqY,MAAM6b,EAAUhrB,EAAckH,mBAGrCpQ,KAAKmjD,WAAWqQ,eAAexzD,KAAKqtD,iBAAiBz/B,GAAWA,EAAS7mB,QAG3EpT,EAAKi6B,SAAWA,EAEZvxB,GACF2D,KAAKm3B,OAAO9gC,EAAMiL,UAGhBkG,EAAM6tB,qBACR1hC,EAAKqhC,SAAWA,EACTh1B,KAAKy0B,WAAW9gC,EAAM,6BAEtBqM,KAAKy0B,WAAW9gC,EAAM,sB,gCAIvBwhC,EAAMjB,EAAUzhB,EAAU2iB,EAAS5tB,GAC3C,IAAM7T,EAAOqM,KAAK4yB,YAAYsB,EAAUzhB,GAIxC,OAHA9e,EAAKwE,OAASg9B,EACdxhC,EAAKgF,OAASqH,KAAKyzD,kBACnBjsD,EAAM+tB,MAAO,EACNv1B,KAAKizD,gBAAgBjzD,KAAKy0B,WAAW9gC,EAAM,kBAAmBugC,EAAUzhB,EAAU2iB,K,sDAG3DD,EAAMjB,EAAUzhB,EAAUjL,EAAOwtB,GAC/D,IAAMqhB,EAA4Br2C,KAAKwH,MAAM29B,uBAC7CnlC,KAAKwH,MAAM29B,wBAAyB,EACpCnlC,KAAK22B,OACL,IAAIhjC,EAAOqM,KAAK4yB,YAAYsB,EAAUzhB,GAiCtC,OAhCA9e,EAAKgF,OAASw8B,EAEV3tB,EAAM0rD,iBACRlzD,KAAKwlD,gBAAgBlqB,MA9nClB,IAAImoB,GAlIgC,IAmwCrCj8C,EAAM6tB,sBACR1hC,EAAKqhC,SAAWA,GAIhBrhC,EAAKuH,UADH85B,EACeh1B,KAAKynC,6BAA6BpxC,EAAMyL,QAAQ,GAEhD9B,KAAKynC,6BAA6BpxC,EAAMyL,OAAQ0F,EAAM0rD,gBAA+B,WAAd/9B,EAAKhtB,KAAiC,UAAdgtB,EAAKhtB,KAAkBxU,GAGzIqM,KAAK8nC,qBAAqBn0C,EAAM6T,EAAM6tB,qBAElC7tB,EAAM0rD,iBAAmBlzD,KAAK0zD,0BAA4B1+B,GAC5DxtB,EAAM+tB,MAAO,EACbv1B,KAAKwlD,gBAAgBmO,oBACrB3zD,KAAKwlD,gBAAgB9pB,OACrB/nC,EAAOqM,KAAK4zD,kCAAkC5zD,KAAK4yB,YAAYsB,EAAUzhB,GAAW9e,KAEhF6T,EAAM0rD,iBACRlzD,KAAKwlD,gBAAgB9pB,OAGvB17B,KAAK6zD,sBAAsBlgE,IAG7BqM,KAAKwH,MAAM29B,uBAAyBkR,EAC7B1iD,I,4CAGaA,EAAMmxC,GAC1B9kC,KAAK8zD,qBAAqBngE,EAAKuH,UAAW4pC,K,oDAGd3P,EAAMjB,EAAUzhB,EAAUjL,GACtD,IAAM7T,EAAOqM,KAAK4yB,YAAYsB,EAAUzhB,GAQxC,OAPA9e,EAAKogE,IAAM5+B,EACXxhC,EAAKqgE,MAAQh0D,KAAKwwC,eAAc,GAE5BhpC,EAAM6tB,qBACRr1B,KAAKqY,MAAM6b,EAAUhrB,EAAcuF,4BAG9BzO,KAAKy0B,WAAW9gC,EAAM,8B,2CAGVwhC,GACnB,MAAqB,eAAdA,EAAKhtB,MAAuC,UAAdgtB,EAAK55B,MAAoByE,KAAKwH,MAAMqL,aAAesiB,EAAKnuB,MAAQhH,KAAK8gC,sBAAwB3L,EAAKnuB,IAAMmuB,EAAKpuB,QAAU,GAAKouB,EAAKpuB,QAAU/G,KAAKwH,MAAM20C,mB,2CAGxKxoD,EAAMqhC,GACzB,GAAyB,WAArBrhC,EAAKgF,OAAOwP,KAOd,GAN8B,IAA1BxU,EAAKuH,UAAUxB,SACZsG,KAAKiJ,UAAU,qBAClBjJ,KAAK06C,aAAa,qBAIQ,IAA1B/mD,EAAKuH,UAAUxB,QAAgB/F,EAAKuH,UAAUxB,OAAS,EACzDsG,KAAKqY,MAAM1kB,EAAKoT,MAAOmC,EAAc2C,gBAAiB7L,KAAKiJ,UAAU,qBAAuBjJ,KAAKiJ,UAAU,oBAAsB,uBAAyB,qBAE1J,IAAK,IAAIuhC,EAAK,EAAGypB,EAAkBtgE,EAAKuH,UAAWsvC,EAAKypB,EAAgBv6D,OAAQ8wC,IAAM,CACpF,IAAMtsC,EAAM+1D,EAAgBzpB,GAEX,kBAAbtsC,EAAIiK,MACNnI,KAAKqY,MAAMna,EAAI6I,MAAOmC,EAAc6C,0BAM5C,OAAO/L,KAAKy0B,WAAW9gC,EAAMqhC,EAAW,yBAA2B,oB,mDAGxCgQ,EAAOkvB,EAAoBC,EAAeC,EAAkBC,GACvF,IAAMC,EAAO,GACTn0B,GAAQ,EACNo0B,EAAgCv0D,KAAKwH,MAAMi1C,2BAGjD,IAFAz8C,KAAKwH,MAAMi1C,4BAA6B,GAEhCz8C,KAAK62B,IAAImO,IAAQ,CACvB,GAAI7E,EACFA,GAAQ,OAIR,GAFAngC,KAAKm3B,OAAO9gC,EAAM0L,OAEd/B,KAAKiT,MAAM+xB,GAAQ,EACjBmvB,GAAkBn0D,KAAKiJ,UAAU,qBAAwBjJ,KAAKiJ,UAAU,qBAC1EjJ,KAAKqY,MAAMrY,KAAKwH,MAAMkL,aAAcxJ,EAAc0C,iCAGhDyoD,GACFr0D,KAAKqzB,SAASghC,EAAc,gBAAiBr0D,KAAKwH,MAAMkL,cAG1D1S,KAAK22B,OACL,MAIJ29B,EAAKx+D,KAAKkK,KAAKw0D,mBAAkB,EAAON,EAAqB,IAAIxO,QAAqBxyD,EAAWghE,EAAqB,CACpHntD,MAAO,QACL7T,EAAWkhE,IAIjB,OADAp0D,KAAKwH,MAAMi1C,2BAA6B8X,EACjCD,I,8CAIP,OAAOt0D,KAAKiT,MAAM5c,EAAMiM,SAAWtC,KAAK8gC,uB,wDAGRntC,EAAMnB,GACtC,IAAIiiE,EAIJ,OAFAz0D,KAAKm3B,OAAO9gC,EAAMiM,OAClBtC,KAAKooC,qBAAqBz0C,EAAMnB,EAAK0I,WAAW,EAAoC,OAA7Bu5D,EAAcjiE,EAAKqgC,YAAiB,EAAS4hC,EAAYjxB,eACzG7vC,I,wCAIP,IAAMugC,EAAWl0B,KAAKwH,MAAMT,MACtB0L,EAAWzS,KAAKwH,MAAMiL,SAC5B,OAAOzS,KAAKizD,gBAAgBjzD,KAAKi3B,gBAAiB/C,EAAUzhB,GAAU,K,oCAG1DohB,GACR7zB,KAAKwH,MAAMW,OAAS9R,EAAMyN,OAAO9D,KAAKg/C,aAC1C,IACIrrD,EADE6zC,EAAaxnC,KAAKwH,MAAM20C,mBAAqBn8C,KAAKwH,MAAMT,MAG9D,OAAQ/G,KAAKwH,MAAMW,MACjB,KAAK9R,EAAMgP,OACT,OAAOrF,KAAK00D,aAEd,KAAKr+D,EAAMoP,QAIT,OAHA9R,EAAOqM,KAAKw0B,YACZx0B,KAAK22B,OAED32B,KAAKiT,MAAM5c,EAAM8L,KACZnC,KAAK20D,wBAAwBhhE,IAGjCqM,KAAKiT,MAAM5c,EAAMwL,SACpB7B,KAAKqY,MAAMrY,KAAKwH,MAAMkL,aAAcxJ,EAAcwI,mBAG7C1R,KAAKy0B,WAAW9gC,EAAM,WAE/B,KAAK0C,EAAM+O,MAGT,OAFAzR,EAAOqM,KAAKw0B,YACZx0B,KAAK22B,OACE32B,KAAKy0B,WAAW9gC,EAAM,kBAE/B,KAAK0C,EAAMkF,KAEP,IAAMu3C,EAAc9yC,KAAKwH,MAAMsrC,YACzBh2C,EAAKkD,KAAK25B,kBAEhB,IAAKmZ,GAA2B,UAAZh2C,EAAGvB,OAAqByE,KAAK8gC,qBAAsB,CACrE,GAAI9gC,KAAKiT,MAAM5c,EAAMoO,WAAY,CAC/B,IAAM0C,EAAOnH,KAAKwH,MAAM2N,QAAQzb,OAAS,EAEzC,GAAIsG,KAAKwH,MAAM2N,QAAQhO,KAAUsN,EAAQS,kBACvC,MAAM,IAAI2Y,MAAM,kBAKlB,OAFA7tB,KAAKwH,MAAM2N,QAAQhO,GAAQsN,EAAQjY,mBACnCwD,KAAK22B,OACE32B,KAAK2pD,cAAc3pD,KAAKy1B,gBAAgB34B,QAAK5J,GAAW,GAC1D,GAAI8M,KAAKiT,MAAM5c,EAAMkF,MAC1B,OAAOyE,KAAK40D,6BAA6B93D,GAI7C,OAAI0qC,GAAcxnC,KAAKiT,MAAM5c,EAAMiM,SAAWtC,KAAK8gC,sBACjD9gC,KAAK22B,OACE32B,KAAKooC,qBAAqBpoC,KAAKy1B,gBAAgB34B,GAAK,CAACA,IAAK,IAG5DA,EAGX,KAAKzG,EAAMgO,IAEP,OAAOrE,KAAK60D,UAGhB,KAAKx+D,EAAM2K,OAEP,IAAM5P,EAAQ4O,KAAKwH,MAAMpW,MAIzB,OAHAuC,EAAOqM,KAAK0yB,aAAathC,EAAMA,MAAO,kBACjCghC,QAAUhhC,EAAMghC,QACrBz+B,EAAKqkB,MAAQ5mB,EAAM4mB,MACZrkB,EAGX,KAAK0C,EAAMwK,IACT,OAAOb,KAAK0yB,aAAa1yB,KAAKwH,MAAMpW,MAAO,kBAE7C,KAAKiF,EAAMyK,OACT,OAAOd,KAAK0yB,aAAa1yB,KAAKwH,MAAMpW,MAAO,iBAE7C,KAAKiF,EAAM0K,QACT,OAAOf,KAAK0yB,aAAa1yB,KAAKwH,MAAMpW,MAAO,kBAE7C,KAAKiF,EAAM4K,OACT,OAAOjB,KAAK0yB,aAAa1yB,KAAKwH,MAAMpW,MAAO,iBAE7C,KAAKiF,EAAMqP,MAGT,OAFA/R,EAAOqM,KAAKw0B,YACZx0B,KAAK22B,OACE32B,KAAKy0B,WAAW9gC,EAAM,eAE/B,KAAK0C,EAAMsP,MACX,KAAKtP,EAAMuP,OACT,OAAO5F,KAAKopC,sBAEd,KAAK/yC,EAAMwL,OACT,OAAO7B,KAAK80D,mCAAmCttB,GAEjD,KAAKnxC,EAAMgL,YACX,KAAKhL,EAAM+K,aAEP,OAAOpB,KAAK+0D,eAAe/0D,KAAKwH,MAAMW,OAAS9R,EAAMgL,YAAchL,EAAMkL,YAAclL,EAAMiL,UAAU,GAAO,EAAMuyB,GAGxH,KAAKx9B,EAAM8K,SAEP,OAAOnB,KAAK+0D,eAAe1+D,EAAMiL,UAAU,GAAM,EAAOuyB,GAG5D,KAAKx9B,EAAMoL,UACX,KAAKpL,EAAMqL,WAEP,OAAO1B,KAAKg1D,gBAAgBh1D,KAAKwH,MAAMW,OAAS9R,EAAMoL,UAAYpL,EAAMuL,UAAYvL,EAAMsL,QAAQ,GAAO,EAAMkyB,GAGnH,KAAKx9B,EAAMmL,OAEP,OAAOxB,KAAKg1D,gBAAgB3+D,EAAMsL,QAAQ,GAAO,EAAOkyB,GAG5D,KAAKx9B,EAAMoO,UACT,OAAOzE,KAAKi1D,8BAEd,KAAK5+D,EAAMqM,GACT1C,KAAKgnD,kBAEP,KAAK3wD,EAAMiP,OAGT,OAFA3R,EAAOqM,KAAKw0B,YACZx0B,KAAKq6C,eAAe1mD,GACbqM,KAAKy1C,WAAW9hD,GAAM,GAE/B,KAAK0C,EAAM8O,KACT,OAAOnF,KAAKk1D,sBAEd,KAAK7+D,EAAMmM,UACT,OAAOxC,KAAKwwC,eAAc,GAE5B,KAAKn6C,EAAM6L,YAEPvO,EAAOqM,KAAKw0B,YACZx0B,KAAK22B,OACLhjC,EAAKwE,OAAS,KACd,IAAMQ,EAAShF,EAAKgF,OAASqH,KAAKyzD,kBAElC,GAAoB,qBAAhB96D,EAAOwP,KACT,OAAOnI,KAAKy0B,WAAW9gC,EAAM,kBAE7B,MAAMqM,KAAKqY,MAAM1f,EAAOoO,MAAOmC,EAAcqI,iBAInD,KAAKlb,EAAMsM,KAEP,GAAI3C,KAAKwH,MAAM40C,WAcb,OAbAzoD,EAAOqM,KAAKw0B,YAEiD,UAAzDx0B,KAAK8xB,gBAAgB,mBAAoB,aAC3C9xB,KAAKqY,MAAM1kB,EAAKoT,MAAOmC,EAAcgG,mCAGvClP,KAAK22B,OAEA32B,KAAKm1D,uDACRn1D,KAAKqY,MAAM1kB,EAAKoT,MAAOmC,EAAc+F,wBAGvCjP,KAAKo1D,yBACEp1D,KAAKy0B,WAAW9gC,EAAM,iCAG/B,IAAMozD,EAAS/mD,KAAK+S,MAAMqrC,YAAYp+C,KAAKwH,MAAMR,KAEjD,GAAIqP,EAAkB0wC,IAAsB,KAAXA,EAAe,CAC9C,IAAMhgD,EAAQ/G,KAAKwH,MAAMT,MAGzB,GAFApT,EAAOqM,KAAKuzD,uBAAsB,GAE9BvzD,KAAKiT,MAAM5c,EAAMwP,KACnB7F,KAAK06C,aAAa,aAClB16C,KAAKmjD,WAAWqQ,eAAexzD,KAAKqtD,iBAAiB15D,GAAOA,EAAKoT,WAC5D,KAAI/G,KAAKiJ,UAAU,aAGxB,MAAMjJ,KAAK02B,WAAW3vB,GAFtB/G,KAAKqY,MAAMrY,KAAKwH,MAAMT,MAAOmC,EAAciG,oBAAqBnP,KAAKqtD,iBAAiB15D,IAKxF,OAAOA,EAIb,KAAK0C,EAAMoN,WAEP,GAAyB,MAArBzD,KAAKwH,MAAMpW,MAAe,CAC5B,IAAMikE,EAAcr1D,KAAK+S,MAAMqrC,YAAYp+C,KAAK0rC,mBAE5Cr1B,EAAkBg/C,IAAgC,KAAhBA,IAClCr1D,KAAK0oD,gBAAgB,CAAC,MAAO,OAAQ,eAK/C,QACE,MAAM1oD,KAAK02B,gB,mDAIY55B,GAC3B,IAAMnJ,EAAOqM,KAAKy1B,gBAAgB34B,GAClCkD,KAAK00C,UAAUpZ,MAAMtM,IAAc,EAAMhvB,KAAK00C,UAAU4c,WACxD,IAAMp7D,EAAS,CAAC8J,KAAK25B,mBASrB,OARA35B,KAAK00C,UAAUhZ,OAEX17B,KAAK4V,yBACP5V,KAAKqY,MAAMrY,KAAKwH,MAAMgL,IAAKtJ,EAAcoE,2BAG3CtN,KAAKm3B,OAAO9gC,EAAMiM,OAClBtC,KAAKooC,qBAAqBz0C,EAAMuC,GAAQ,GACjCvC,I,gCAIPqM,KAAK06C,aAAa,iBAClB,IAAM/mD,EAAOqM,KAAKw0B,YAClBx0B,KAAK22B,OACL,IAAMsuB,EAAYjlD,KAAKwH,MAAMk1C,OAI7B,OAHA18C,KAAKwH,MAAMk1C,OAAS,GACpB/oD,EAAKgB,KAAOqL,KAAK6nD,aACjB7nD,KAAKwH,MAAMk1C,OAASuI,EACbjlD,KAAKy0B,WAAW9gC,EAAM,kB,mCAI7B,IAAMA,EAAOqM,KAAKw0B,YAalB,OAZAx0B,KAAK22B,QAED32B,KAAKiT,MAAM5c,EAAMwL,SAAY7B,KAAKtM,MAAM2gC,kBAAqBr0B,KAAKU,QAAQk7C,wBAElE57C,KAAKtM,MAAM4hE,YAAet1D,KAAKU,QAAQk7C,yBACjD57C,KAAKqY,MAAM1kB,EAAKoT,MAAOmC,EAAckI,iBAFrCpR,KAAKqY,MAAM1kB,EAAKoT,MAAOmC,EAAciH,iBAKlCnQ,KAAKiT,MAAM5c,EAAMwL,SAAY7B,KAAKiT,MAAM5c,EAAM8K,WAAcnB,KAAKiT,MAAM5c,EAAM8L,MAChFnC,KAAKqY,MAAM1kB,EAAKoT,MAAOmC,EAAc4I,kBAGhC9R,KAAKy0B,WAAW9gC,EAAM,W,4CAI7B,IAAMA,EAAOqM,KAAKw0B,YAGlB,OAFA7gC,EAAKvC,MAAQ4O,KAAKiT,MAAM5c,EAAMsP,OAC9B3F,KAAK22B,OACE32B,KAAKy0B,WAAW9gC,EAAM,oB,4CAGT8xC,GAGpB,GAFkBzlC,KAAKiT,MAAM5c,EAAMsM,MAEpB,CACb3C,KAAK0oD,gBAAgB,CAAC,yBAA0B,wBAE3CjjB,GACHzlC,KAAKqY,MAAMrY,KAAKwH,MAAMgL,IAAKtJ,EAAcgI,wBAG3C,IAAMvd,EAAOqM,KAAKw0B,YAIlB,OAHAx0B,KAAK22B,OACL32B,KAAKg6C,cAAc,6CACnBrmD,EAAKmJ,GAAKkD,KAAK25B,iBAAgB,GACxB35B,KAAKy0B,WAAW9gC,EAAM,eAE7B,OAAOqM,KAAK25B,iBAAgB,K,oDAK9B,IAAMhmC,EAAOqM,KAAKw0B,YAGlB,GAFAx0B,KAAK22B,OAED32B,KAAK00C,UAAU4c,UAAYtxD,KAAKiT,MAAM5c,EAAM8L,KAAM,CACpD,IAAMozD,EAAOv1D,KAAK8uC,iBAAiB9uC,KAAKy1B,gBAAgB9hC,GAAO,YAE/D,OADAqM,KAAK22B,OACE32B,KAAKw1D,kBAAkB7hE,EAAM4hE,EAAM,QAG5C,OAAOv1D,KAAK2pD,cAAch2D,K,wCAGVA,EAAM4hE,EAAME,GAC5B9hE,EAAK4hE,KAAOA,EAEM,aAAdA,EAAKh6D,MAAwC,SAAjBk6D,IAC1Bz1D,KAAK+6B,aAAa06B,GACpBz1D,KAAK06C,aAAa,gBACR16C,KAAKiJ,UAAU,iBACzBjJ,KAAK02B,cAIT,IAAMoc,EAAc9yC,KAAKwH,MAAMsrC,YAO/B,OANAn/C,EAAKi6B,SAAW5tB,KAAK25B,iBAAgB,IAEjChmC,EAAKi6B,SAASryB,OAASk6D,GAAgB3iB,IACzC9yC,KAAKqY,MAAM1kB,EAAKi6B,SAAS7mB,MAAOmC,EAAcyI,wBAAyB4jD,EAAKh6D,KAAMk6D,GAG7Ez1D,KAAKy0B,WAAW9gC,EAAM,kB,8CAGPA,GACtB,IAAMmJ,EAAKkD,KAAK8uC,iBAAiB9uC,KAAKy1B,gBAAgB9hC,GAAO,UAa7D,OAZAqM,KAAK22B,OAED32B,KAAK+6B,aAAa,UACf/6B,KAAKgX,UACRhX,KAAKwT,cAAc1W,EAAGiK,MAAO,CAC3BR,KAAM,2CACL2C,EAAc8C,yBAGnBhM,KAAK6I,mBAAoB,GAGpB7I,KAAKw1D,kBAAkB7hE,EAAMmJ,EAAI,U,mCAG7B1L,EAAO+W,EAAM+rB,EAAUzhB,GAClCyhB,EAAWA,GAAYl0B,KAAKwH,MAAMT,MAClC0L,EAAWA,GAAYzS,KAAKwH,MAAMiL,SAClC,IAAM9e,EAAOqM,KAAK4yB,YAAYsB,EAAUzhB,GAKxC,OAJAzS,KAAKqzB,SAAS1/B,EAAM,WAAYvC,GAChC4O,KAAKqzB,SAAS1/B,EAAM,MAAOqM,KAAK+S,MAAMhY,MAAMm5B,EAAUl0B,KAAKwH,MAAMR,MACjErT,EAAKvC,MAAQA,EACb4O,KAAK22B,OACE32B,KAAKy0B,WAAW9gC,EAAMwU,K,yDAGIq/B,GACjC,IAEI1O,EAFE5E,EAAWl0B,KAAKwH,MAAMT,MACtB0L,EAAWzS,KAAKwH,MAAMiL,SAE5BzS,KAAK22B,OACL32B,KAAKwlD,gBAAgBlqB,MArlDhB,IAAImoB,GAhI2B,IAstDpC,IAAMpN,EAA4Br2C,KAAKwH,MAAM29B,uBACvCovB,EAAgCv0D,KAAKwH,MAAMi1C,2BACjDz8C,KAAKwH,MAAM29B,wBAAyB,EACpCnlC,KAAKwH,MAAMi1C,4BAA6B,EAYxC,IAXA,IAQIiZ,EACAC,EATEC,EAAgB51D,KAAKwH,MAAMT,MAC3B8uD,EAAgB71D,KAAKwH,MAAMiL,SAC3BmyB,EAAW,GACX/Q,EAAsB,IAAI6xB,GAC1B5jB,EAAmB,CACvB/6B,MAAO,GAELo5B,GAAQ,GAIJngC,KAAKiT,MAAM5c,EAAMyL,SAAS,CAChC,GAAIq+B,EACFA,GAAQ,OAIR,GAFAngC,KAAKm3B,OAAO9gC,EAAM0L,MAAO+/B,EAAiB/6B,OAAS,MAE/C/G,KAAKiT,MAAM5c,EAAMyL,QAAS,CAC5B6zD,EAAqB31D,KAAKwH,MAAMT,MAChC,MAIJ,GAAI/G,KAAKiT,MAAM5c,EAAMkM,UAAW,CAC9B,IAAMuzD,EAAqB91D,KAAKwH,MAAMT,MAChCgvD,EAAqB/1D,KAAKwH,MAAMiL,SACtCijD,EAAc11D,KAAKwH,MAAMT,MACzB69B,EAAS9uC,KAAKkK,KAAKg2D,eAAeh2D,KAAKi2D,mBAAoBH,EAAoBC,IAC/E/1D,KAAKk2D,oBAAoB,IACzB,MAEAtxB,EAAS9uC,KAAKkK,KAAKq3B,wBAAwBxD,EAAqB7zB,KAAKg2D,eAAgBl0B,IAIzF,IAAMq0B,EAAcn2D,KAAKwH,MAAMqL,WACzBujD,EAAcp2D,KAAKwH,MAAMsL,cAC/B9S,KAAKm3B,OAAO9gC,EAAMyL,QAClB9B,KAAKwH,MAAM29B,uBAAyBkR,EACpCr2C,KAAKwH,MAAMi1C,2BAA6B8X,EACxC,IAAI8B,EAAYr2D,KAAK4yB,YAAYsB,EAAUzhB,GAE3C,GAAI+0B,GAAcxnC,KAAKs2D,qBAAuBD,EAAYr2D,KAAKmoC,WAAWkuB,IAIxE,OAHAr2D,KAAKwlD,gBAAgBmO,oBACrB3zD,KAAKwlD,gBAAgB9pB,OACrB17B,KAAKooC,qBAAqBiuB,EAAWzxB,GAAU,GACxCyxB,EAuBT,GApBAr2D,KAAKwlD,gBAAgB9pB,OAEhBkJ,EAASlrC,QACZsG,KAAK02B,WAAW12B,KAAKwH,MAAMkL,cAGzBijD,GAAoB31D,KAAK02B,WAAWi/B,GACpCD,GAAa11D,KAAK02B,WAAWg/B,GACjC11D,KAAKypD,sBAAsB51B,GAAqB,GAC5CiO,EAAiB/6B,OAAO/G,KAAK02B,WAAWoL,EAAiB/6B,OAC7D/G,KAAK8zD,qBAAqBlvB,GAAU,GAEhCA,EAASlrC,OAAS,IACpBo/B,EAAM94B,KAAK4yB,YAAYgjC,EAAeC,IAClCzE,YAAcxsB,EAClB5kC,KAAKgzB,aAAa8F,EAAK,qBAAsBq9B,EAAaC,IAE1Dt9B,EAAM8L,EAAS,IAGZ5kC,KAAKU,QAAQu7C,+BAGhB,OAFAj8C,KAAKqzB,SAASyF,EAAK,iBAAiB,GACpC94B,KAAKqzB,SAASyF,EAAK,aAAc5E,GAC1B4E,EAGT,IAAM/jB,EAAkB/U,KAAK4yB,YAAYsB,EAAUzhB,GAGnD,OAFAsC,EAAgBxjB,WAAaunC,EAC7B94B,KAAKy0B,WAAW1f,EAAiB,2BAC1BA,I,yCAIP,OAAQ/U,KAAK8gC,uB,iCAGJntC,GACT,GAAIqM,KAAK62B,IAAIxgC,EAAMiM,OACjB,OAAO3O,I,qCAIIA,EAAMugC,EAAUzhB,GAC7B,OAAO9e,I,4CAIP,IAAMA,EAAOqM,KAAKw0B,YAGlB,GAFAx0B,KAAK22B,OAED32B,KAAKiT,MAAM5c,EAAM8L,KAAM,CACzB,IAAMozD,EAAOv1D,KAAK8uC,iBAAiB9uC,KAAKy1B,gBAAgB9hC,GAAO,OAC/DqM,KAAK22B,OACL,IAAM4/B,EAAWv2D,KAAKw1D,kBAAkB7hE,EAAM4hE,EAAM,UAEpD,IAAKv1D,KAAKtM,MAAM8iE,qBAAuBx2D,KAAKtM,MAAMssD,QAAS,CACzD,IAAIlsC,EAAQ5K,EAAc8H,oBAEtBhR,KAAKiJ,UAAU,qBACjB6K,GAAS,wBAGX9T,KAAKqY,MAAMk+C,EAASxvD,MAAO+M,GAG7B,OAAOyiD,EAGT,OAAOv2D,KAAKy2D,SAAS9iE,K,+BAGdA,GAYP,OAXAA,EAAKgF,OAASqH,KAAKyzD,kBAEM,WAArB9/D,EAAKgF,OAAOwP,KACdnI,KAAKqY,MAAM1kB,EAAKgF,OAAOoO,MAAOmC,EAAc4C,4BACnC9L,KAAK02D,gBAAgB/iE,EAAKgF,QACnCqH,KAAKqY,MAAMrY,KAAKwH,MAAMqL,WAAY3J,EAAcsF,uBACvCxO,KAAK62B,IAAIxgC,EAAMgM,cACxBrC,KAAKqY,MAAMrY,KAAKwH,MAAMT,MAAOmC,EAAcsF,uBAG7CxO,KAAK22D,kBAAkBhjE,GAChBqM,KAAKy0B,WAAW9gC,EAAM,mB,wCAGbA,GAChB,GAAIqM,KAAK62B,IAAIxgC,EAAMwL,QAAS,CAC1B,IAAMnH,EAAOsF,KAAK42D,cAAcvgE,EAAMyL,QACtC9B,KAAKolC,iBAAiB1qC,GACtB/G,EAAKuH,UAAYR,OAEjB/G,EAAKuH,UAAY,K,2CAIA27D,GACnB,IAAM/G,EAAO9vD,KAAKw0B,YAclB,OAZyB,OAArBx0B,KAAKwH,MAAMpW,QACRylE,GACH72D,KAAKqY,MAAMrY,KAAKwH,MAAMT,MAAQ,EAAGmC,EAAcqD,gCAInDujD,EAAK1+D,MAAQ,CACX2hC,IAAK/yB,KAAK+S,MAAMhY,MAAMiF,KAAKwH,MAAMT,MAAO/G,KAAKwH,MAAMR,KAAK3P,QAAQ,SAAU,MAC1Ey/D,OAAQ92D,KAAKwH,MAAMpW,OAErB4O,KAAK22B,OACLm5B,EAAKiH,KAAO/2D,KAAKiT,MAAM5c,EAAMmM,WACtBxC,KAAKy0B,WAAWq7B,EAAM,qB,oCAGjB+G,GACZ,IAAMljE,EAAOqM,KAAKw0B,YAClBx0B,KAAK22B,OACLhjC,EAAKy9D,YAAc,GACnB,IAAI4F,EAASh3D,KAAKi3D,qBAAqBJ,GAGvC,IAFAljE,EAAKujE,OAAS,CAACF,IAEPA,EAAOD,MACb/2D,KAAKm3B,OAAO9gC,EAAMoM,cAClB9O,EAAKy9D,YAAYt7D,KAAKkK,KAAKm3D,6BAC3Bn3D,KAAKm3B,OAAO9gC,EAAMsL,QAClBhO,EAAKujE,OAAOphE,KAAKkhE,EAASh3D,KAAKi3D,qBAAqBJ,IAItD,OADA72D,KAAK22B,OACE32B,KAAKy0B,WAAW9gC,EAAM,qB,kDAI7B,OAAOqM,KAAKk3B,oB,sCAGE8N,EAAOrQ,EAAWi8B,EAAU/8B,GACtC+8B,GACF5wD,KAAK06C,aAAa,kBAGpB,IAAM6Z,EAAgCv0D,KAAKwH,MAAMi1C,2BACjDz8C,KAAKwH,MAAMi1C,4BAA6B,EACxC,IAAM2a,EAAWnmE,OAAOomE,OAAO,MAC3Bl3B,GAAQ,EACNxsC,EAAOqM,KAAKw0B,YAIlB,IAHA7gC,EAAK8U,WAAa,GAClBzI,KAAK22B,QAEG32B,KAAKiT,MAAM+xB,IAAQ,CACzB,GAAI7E,EACFA,GAAQ,OAIR,GAFAngC,KAAKm3B,OAAO9gC,EAAM0L,OAEd/B,KAAKiT,MAAM+xB,GAAQ,CACrBhlC,KAAKqzB,SAAS1/B,EAAM,gBAAiBqM,KAAKwH,MAAMkL,cAChD,MAIJ,IAAMiY,EAAO3qB,KAAKs3D,wBAAwB3iC,EAAWd,GAEhDc,GACH30B,KAAKu3D,WAAW5sC,EAAMimC,EAAUwG,EAAUvjC,GAGxC+8B,IAAa5wD,KAAKizB,iBAAiBtI,IAAuB,kBAAdA,EAAKxiB,MACnDnI,KAAKqY,MAAMsS,EAAK5jB,MAAOmC,EAAcgE,uBAGnCyd,EAAKkK,WACP70B,KAAKqzB,SAAS1I,EAAM,aAAa,GAGnCh3B,EAAK8U,WAAW3S,KAAK60B,GAGvB3qB,KAAKwH,MAAM8N,aAAc,EACzBtV,KAAK22B,OACL32B,KAAKwH,MAAMi1C,2BAA6B8X,EACxC,IAAIpsD,EAAO,mBAQX,OANIwsB,EACFxsB,EAAO,gBACEyoD,IACTzoD,EAAO,oBAGFnI,KAAKy0B,WAAW9gC,EAAMwU,K,+CAGNwiB,GACvB,OAAQA,EAAKtuB,UAA8B,eAAlBsuB,EAAKt4B,IAAI8V,OAA0BnI,KAAK6rC,yBAA2B7rC,KAAKiT,MAAM5c,EAAM8K,WAAanB,KAAKiT,MAAM5c,EAAMwN,S,8CAGrH8wB,EAAWd,GACjC,IAAI/8B,EAAa,GAEjB,GAAIkJ,KAAKiT,MAAM5c,EAAMqM,IAKnB,IAJI1C,KAAKiJ,UAAU,eACjBjJ,KAAKqY,MAAMrY,KAAKwH,MAAMT,MAAOmC,EAAc2I,8BAGtC7R,KAAKiT,MAAM5c,EAAMqM,KACtB5L,EAAWhB,KAAKkK,KAAKwoD,kBAIzB,IAIIt0B,EACAzhB,EALEkY,EAAO3qB,KAAKw0B,YACdtF,GAAc,EACdD,GAAU,EACV2F,GAAa,EAIjB,GAAI50B,KAAKiT,MAAM5c,EAAMkM,UAGnB,OAFIzL,EAAW4C,QAAQsG,KAAK02B,aAExB/B,GACF30B,KAAK22B,OACLhM,EAAK3wB,SAAWgG,KAAK25B,kBACrB35B,KAAKk2D,oBAAoB,KAClBl2D,KAAKy0B,WAAW9J,EAAM,gBAGxB3qB,KAAKw3D,cAGV1gE,EAAW4C,SACbixB,EAAK7zB,WAAaA,EAClBA,EAAa,IAGf6zB,EAAKptB,QAAS,GAEVo3B,GAAad,KACfK,EAAWl0B,KAAKwH,MAAMT,MACtB0L,EAAWzS,KAAKwH,MAAMiL,UAGnBkiB,IACHzF,EAAclvB,KAAK62B,IAAIxgC,EAAMwN,OAG/B,IAAMivC,EAAc9yC,KAAKwH,MAAMsrC,YACzBzgD,EAAM2N,KAAKmvC,kBAAkBxkB,GAAM,GAEzC,IAAKgK,IAAczF,IAAgB4jB,GAAe9yC,KAAKy3D,yBAAyB9sC,GAAO,CACrF,IAAM4lC,EAAUl+D,EAAIkJ,KAEJ,UAAZg1D,GAAwBvwD,KAAK4V,0BAC/BqZ,GAAU,EACVC,EAAclvB,KAAK62B,IAAIxgC,EAAMwN,MAC7B7D,KAAKmvC,kBAAkBxkB,GAAM,IAGf,QAAZ4lC,GAAiC,QAAZA,IACvB37B,GAAa,EACbjK,EAAK1zB,KAAOs5D,EAERvwD,KAAKiT,MAAM5c,EAAMwN,QACnBqrB,GAAc,EACdlvB,KAAKqY,MAAMrY,KAAKwH,MAAMgL,IAAKtJ,EAAcE,oBAAqBmnD,GAC9DvwD,KAAK22B,QAGP32B,KAAKmvC,kBAAkBxkB,GAAM,IAKjC,OADA3qB,KAAK03D,kBAAkB/sC,EAAMuJ,EAAUzhB,EAAUyc,EAAaD,EAAS0F,EAAWC,EAAYf,GACvFlJ,I,wDAGyBptB,GAChC,MAAuB,QAAhBA,EAAOtG,KAAiB,EAAI,I,mDAGRsG,GAC3B,OAAOA,EAAOrH,S,8CAGQqH,GACtB,IAAIo6D,EAEE53B,EAAa//B,KAAK43D,kCAAkCr6D,GACpDrH,EAAS8J,KAAKwlC,6BAA6BjoC,GAC3CwJ,EAAQxJ,EAAOwJ,MAEjB7Q,EAAOwD,SAAWqmC,IACA,QAAhBxiC,EAAOtG,KACT+I,KAAKqY,MAAMtR,EAAOmC,EAAcU,gBAEhC5J,KAAKqY,MAAMtR,EAAOmC,EAAcW,iBAIhB,QAAhBtM,EAAOtG,MAA8F,iBAAlC,OAAxC0gE,EAAUzhE,EAAOA,EAAOwD,OAAS,SAAc,EAASi+D,EAAQxvD,OAC7FnI,KAAKqY,MAAMtR,EAAOmC,EAAcY,0B,wCAIlB6gB,EAAMuE,EAAaD,EAAS0F,EAAWC,GACvD,OAAIA,GACF50B,KAAK2zB,YAAYhJ,EAAMuE,GAAa,GAAO,GAAO,EAAO,gBACzDlvB,KAAKotD,wBAAwBziC,GACtBA,GAGLsE,GAAWC,GAAelvB,KAAKiT,MAAM5c,EAAMwL,SACzC8yB,GAAW30B,KAAK02B,aACpB/L,EAAK1zB,KAAO,SACZ0zB,EAAKptB,QAAS,EACPyC,KAAK2zB,YAAYhJ,EAAMuE,EAAaD,GAAS,GAAO,EAAO,sBAJpE,I,0CAQkBtE,EAAMuJ,EAAUzhB,EAAUkiB,EAAWd,GAGvD,OAFAlJ,EAAKkK,WAAY,EAEb70B,KAAK62B,IAAIxgC,EAAM4L,QACjB0oB,EAAKv5B,MAAQujC,EAAY30B,KAAK22C,kBAAkB32C,KAAKwH,MAAMT,MAAO/G,KAAKwH,MAAMiL,UAAYzS,KAAKq3B,wBAAwBxD,GAC/G7zB,KAAKy0B,WAAW9J,EAAM,mBAG1BA,EAAKtuB,UAA8B,eAAlBsuB,EAAKt4B,IAAI8V,UAA/B,GACEnI,KAAKymC,kBAAkB9b,EAAKt4B,IAAIkJ,KAAMovB,EAAKt4B,IAAI0U,OAAO,GAAM,GAExD4tB,EACFhK,EAAKv5B,MAAQ4O,KAAK22C,kBAAkBziB,EAAUzhB,EAAUkY,EAAKt4B,IAAIi0C,WACxDtmC,KAAKiT,MAAM5c,EAAMwM,KAAOgxB,IACY,IAAzCA,EAAoBixB,kBACtBjxB,EAAoBixB,gBAAkB9kD,KAAKwH,MAAMT,OAGnD4jB,EAAKv5B,MAAQ4O,KAAK22C,kBAAkBziB,EAAUzhB,EAAUkY,EAAKt4B,IAAIi0C,YAEjE3b,EAAKv5B,MAAQu5B,EAAKt4B,IAAIi0C,UAGxB3b,EAAKkK,WAAY,EACV70B,KAAKy0B,WAAW9J,EAAM,qB,wCAIfA,EAAMuJ,EAAUzhB,EAAUyc,EAAaD,EAAS0F,EAAWC,EAAYf,GACvF,IAAMlgC,EAAOqM,KAAK63D,kBAAkBltC,EAAMuE,EAAaD,EAAS0F,EAAWC,IAAe50B,KAAK83D,oBAAoBntC,EAAMuJ,EAAUzhB,EAAUkiB,EAAWd,GAExJ,OADKlgC,GAAMqM,KAAK02B,aACT/iC,I,wCAGSg3B,EAAM8a,GACtB,GAAIzlC,KAAK62B,IAAIxgC,EAAM8K,UACjBwpB,EAAKtuB,UAAW,EAChBsuB,EAAKt4B,IAAM2N,KAAKq3B,0BAChBr3B,KAAKm3B,OAAO9gC,EAAMiL,cACb,CACL,IAAMy2D,EAAoB/3D,KAAKwH,MAAMgxB,eACrCx4B,KAAKwH,MAAMgxB,gBAAiB,EAC5B7N,EAAKt4B,IAAM2N,KAAKiT,MAAM5c,EAAMwK,MAAQb,KAAKiT,MAAM5c,EAAM4K,SAAWjB,KAAKiT,MAAM5c,EAAMyK,SAAWd,KAAKiT,MAAM5c,EAAM0K,SAAWf,KAAKi3B,gBAAkBj3B,KAAKuzD,sBAAsB9tB,GAErKzlC,KAAKglD,cAAcr6B,EAAKt4B,OAC3Bs4B,EAAKtuB,UAAW,GAGlB2D,KAAKwH,MAAMgxB,eAAiBu/B,EAG9B,OAAOptC,EAAKt4B,M,mCAGDsB,EAAMs7B,GACjBt7B,EAAKmJ,GAAK,KACVnJ,EAAK8I,WAAY,EACjB9I,EAAK+I,QAAUuyB,I,kCAGLt7B,EAAMu7B,EAAaD,EAASj4B,EAAeq9B,EAAkBlsB,GAA4B,IAAtBmsB,EAAsB,wDACnGt0B,KAAKyrD,aAAa93D,EAAMs7B,GACxBt7B,EAAK8I,YAAcyyB,EACnB,IAAMwX,EAAiB1vC,EAOvB,OANAgJ,KAAKtM,MAAM4nC,MAAMmI,IAAgCnP,EAAehd,EAAc,IAAM+c,EA7lU7D,GA6lUqG,IAC5Hr0B,KAAK00C,UAAUpZ,MAAMtM,GAAcC,EAASt7B,EAAK8I,YACjDuD,KAAKkoC,oBAAoBv0C,EAAM+yC,GAC/B1mC,KAAK2rD,2BAA2Bh4D,EAAMwU,GAAM,GAC5CnI,KAAK00C,UAAUhZ,OACf17B,KAAKtM,MAAMgoC,OACJ/nC,I,qCAGMqxC,EAAOC,EAAcC,EAASrR,GACvCqR,GACFllC,KAAK06C,aAAa,kBAGpB,IAAM6Z,EAAgCv0D,KAAKwH,MAAMi1C,2BACjDz8C,KAAKwH,MAAMi1C,4BAA6B,EACxC,IAAM9oD,EAAOqM,KAAKw0B,YAIlB,OAHAx0B,KAAK22B,OACLhjC,EAAKgU,SAAW3H,KAAK42D,cAAc5xB,GAAQE,EAASrR,EAAqBlgC,GACzEqM,KAAKwH,MAAMi1C,2BAA6B8X,EACjCv0D,KAAKy0B,WAAW9gC,EAAMuxC,EAAU,kBAAoB,qB,2CAGxCvxC,EAAMuC,EAAQ+4B,EAAS4V,GAC1C7kC,KAAKtM,MAAM4nC,MAAMmI,GACjB,IAAIzrB,EAAQgX,GAAcC,GAAS,IAE9BjvB,KAAKiT,MAAM5c,EAAM8K,WAAanB,KAAK00C,UAAUmd,QAChD75C,GAttMW,GAytMbhY,KAAK00C,UAAUpZ,MAAMtjB,GACrBhY,KAAKyrD,aAAa93D,EAAMs7B,GACxB,IAAMonB,EAA4Br2C,KAAKwH,MAAM29B,uBAY7C,OAVIjvC,IACF8J,KAAKwH,MAAM29B,wBAAyB,EACpCnlC,KAAKg4D,2BAA2BrkE,EAAMuC,EAAQ2uC,IAGhD7kC,KAAKwH,MAAM29B,wBAAyB,EACpCnlC,KAAKi4D,kBAAkBtkE,GAAM,GAC7BqM,KAAK00C,UAAUhZ,OACf17B,KAAKtM,MAAMgoC,OACX17B,KAAKwH,MAAM29B,uBAAyBkR,EAC7Br2C,KAAKy0B,WAAW9gC,EAAM,6B,iDAGJA,EAAMuC,EAAQ2uC,GACvClxC,EAAKuC,OAAS8J,KAAKujC,iBAAiBrtC,EAAQ2uC,GAAkB,K,iDAGrClxC,EAAMwU,GAAwB,IAAlBisB,EAAkB,wDACvDp0B,KAAKi4D,kBAAkBtkE,GAAM,EAAOygC,GACpCp0B,KAAKy0B,WAAW9gC,EAAMwU,K,wCAGNxU,EAAMwgC,GAAmC,WAAlBC,EAAkB,wDACnD8jC,EAAe/jC,IAAoBn0B,KAAKiT,MAAM5c,EAAMmL,QAG1D,GAFAxB,KAAKwlD,gBAAgBlqB,MAAM2oB,MAEvBiU,EACFvkE,EAAKgB,KAAOqL,KAAK2iC,mBACjB3iC,KAAKm4D,YAAYxkE,GAAM,EAAOwgC,GAAiB,OAC1C,CACL,IAAMmmB,EAAYt6C,KAAKwH,MAAMi6B,OACvBwjB,EAAYjlD,KAAKwH,MAAMk1C,OAC7B18C,KAAKwH,MAAMk1C,OAAS,GACpB18C,KAAK00C,UAAUpZ,MA/vMA,EA+vMMt7B,KAAK00C,UAAU3lB,gBACpCp7B,EAAKgB,KAAOqL,KAAK6nD,YAAW,GAAM,GAAO,SAAAgD,GACvC,IAAMuN,GAAa,EAAKC,kBAAkB1kE,EAAKuC,QAE/C,GAAI20D,GAA0BuN,EAAW,CACvC,IAAME,EAA0B,WAAd3kE,EAAKsD,MAAmC,gBAAdtD,EAAKsD,OAA6BtD,EAAKtB,IAAqBsB,EAAKoT,MAApBpT,EAAKtB,IAAI2U,IAClG,EAAKqR,MAAMigD,EAAUpvD,EAAcuC,8BAGrC,IAAM8sD,GAAqBje,GAAa,EAAK9yC,MAAMi6B,OACnD,EAAK02B,YAAYxkE,GAAO,EAAK6T,MAAMi6B,SAAWtN,IAAoBC,IAAagkC,EAAWjkC,EAAiBokC,GAEvG,EAAK/wD,MAAMi6B,QAAU9tC,EAAKmJ,IAC5B,EAAKgpC,UAAUnyC,EAAKmJ,GAAI,gBArpUbu+B,QAqpU4CnoC,OAAWA,EAAWqlE,MAGjFv4D,KAAK00C,UAAUhZ,OACf17B,KAAKwlD,gBAAgB9pB,OACrB17B,KAAKwH,MAAMk1C,OAASuI,K,wCAIN/uD,GAChB,IAAK,IAAI2E,EAAI,EAAG0lD,EAAMrqD,EAAOwD,OAAQmB,EAAI0lD,EAAK1lD,IAC5C,GAAuB,eAAnB3E,EAAO2E,GAAGsN,KAAuB,OAAO,EAG9C,OAAO,I,kCAGGxU,EAAM2zC,EAAiBC,GAGjC,IAH4E,IAA1BgxB,IAA0B,yDACtEC,EAAe,IAAIhgE,IAEhBkyC,EAAM,EAAG+tB,EAAe9kE,EAAKuC,OAAQw0C,EAAM+tB,EAAa/+D,OAAQgxC,IAAO,CAC9E,IAAMtsC,EAAQq6D,EAAa/tB,GAC3B1qC,KAAK8lC,UAAU1nC,EAAO,0BAlrUXi9B,EAkrUgDiM,EAAkB,KAAOkxB,OAActlE,EAAWqlE,M,oCAInGvzB,EAAO0zB,EAAY7kC,EAAqBwgC,GAIpD,IAHA,IAAMC,EAAO,GACTn0B,GAAQ,GAEJngC,KAAK62B,IAAImO,IAAQ,CACvB,GAAI7E,EACFA,GAAQ,OAIR,GAFAngC,KAAKm3B,OAAO9gC,EAAM0L,OAEd/B,KAAKiT,MAAM+xB,GAAQ,CACjBqvB,GACFr0D,KAAKqzB,SAASghC,EAAc,gBAAiBr0D,KAAKwH,MAAMkL,cAG1D1S,KAAK22B,OACL,MAIJ29B,EAAKx+D,KAAKkK,KAAKw0D,kBAAkBkE,EAAY7kC,IAG/C,OAAOygC,I,wCAGSoE,EAAY7kC,EAAqBiO,EAAkBsyB,GACnE,IAAIvd,EAEJ,GAAI72C,KAAKiT,MAAM5c,EAAM0L,OACd22D,GACH14D,KAAKqY,MAAMrY,KAAKwH,MAAMgL,IAAKtJ,EAAcmI,gBAAiB,KAG5DwlC,EAAM,UACD,GAAI72C,KAAKiT,MAAM5c,EAAMkM,UAAW,CACrC,IAAMuzD,EAAqB91D,KAAKwH,MAAMT,MAChCgvD,EAAqB/1D,KAAKwH,MAAMiL,SACtCokC,EAAM72C,KAAKg2D,eAAeh2D,KAAKw3D,YAAY3jC,EAAqBiO,GAAmBg0B,EAAoBC,QAClG,GAAI/1D,KAAKiT,MAAM5c,EAAM+L,UAAW,CACrCpC,KAAK06C,aAAa,sBAEb0Z,GACHp0D,KAAKqY,MAAMrY,KAAKwH,MAAMT,MAAOmC,EAAcuH,+BAG7C,IAAM9c,EAAOqM,KAAKw0B,YAClBx0B,KAAK22B,OACLkgB,EAAM72C,KAAKy0B,WAAW9gC,EAAM,4BAE5BkjD,EAAM72C,KAAKq3B,wBAAwBxD,EAAqB7zB,KAAKg2D,eAAgBl0B,GAG/E,OAAO+U,I,sCAGOxZ,GACd,IAAM1pC,EAAOqM,KAAKw0B,YACZj5B,EAAOyE,KAAKutC,oBAAoB55C,EAAKoT,MAAOs2B,GAClD,OAAOr9B,KAAK8uC,iBAAiBn7C,EAAM4H,K,uCAGpB5H,EAAM4H,GAGrB,OAFA5H,EAAK4H,KAAOA,EACZ5H,EAAK4T,IAAIL,eAAiB3L,EACnByE,KAAKy0B,WAAW9gC,EAAM,gB,0CAGX6e,EAAK6qB,GACvB,IAAI9hC,EAD4B,EAK5ByE,KAAKwH,MAFPT,EAH8B,EAG9BA,MACAoB,EAJ8B,EAI9BA,KAGF,GAAIA,IAAS9R,EAAMkF,KACjBA,EAAOyE,KAAKwH,MAAMpW,UACb,KAAI+W,EAAKlI,QAQd,MAAMD,KAAK02B,aAPXn7B,EAAO4M,EAAKlI,QACZ,IAAMoV,EAAarV,KAAKqV,aAEnBlN,IAAS9R,EAAMiP,QAAU6C,IAAS9R,EAAMoO,WAAe4Q,IAAeZ,EAAQS,mBAAqBG,IAAeZ,EAAQjY,oBAC7HwD,KAAKwH,MAAM2N,QAAQxb,MAavB,OAPI0jC,EACFr9B,KAAKwH,MAAMW,KAAO9R,EAAMkF,KAExByE,KAAKymC,kBAAkBlrC,EAAMwL,IAASoB,EAAKlI,SAAS,GAGtDD,KAAK22B,OACEp7B,I,wCAGSwb,EAAMtE,EAAUslC,EAAevT,GAC/C,GAAIxkC,KAAK00C,UAAU4c,UAAqB,UAATv6C,EAC7B/W,KAAKqY,MAAM5F,EAAUvJ,EAAckJ,4BADrC,CAKA,GAAa,UAAT2E,EAAkB,CACpB,GAAI/W,KAAK00C,UAAUud,SAEjB,YADAjyD,KAAKqY,MAAM5F,EAAUvJ,EAAcK,wBAE9B,GAAIvJ,KAAKtM,MAAMilE,gBAAkB34D,KAAKtM,MAAM8iE,mBAEjD,YADAx2D,KAAKqY,MAAM5F,EAAUvJ,EAAcM,qCAGnCxJ,KAAKwlD,gBAAgBoT,gCAAgCnmD,EAAUvJ,EAAcK,wBAIjF,IAAIvJ,KAAKtM,MAAMssD,SAAYhgD,KAAKtM,MAAM8iE,oBAA+B,cAATz/C,EAK5D,GAAIghC,GAAiB3gC,EAAUL,GAC7B/W,KAAKqY,MAAM5F,EAAUvJ,EAAc2H,kBAAmBkG,QAIlC/W,KAAKwH,MAAMi6B,OAA0B+C,EAAYrtB,EAA2BF,EAAxDH,GAEzBC,EAAM/W,KAAKgX,WAC1BhX,KAAKqY,MAAM5F,EAAUvJ,EAAciI,uBAAwB4F,QAZ3D/W,KAAKqY,MAAM5F,EAAUvJ,EAAcG,qB,uCAiBrC,QAAIrJ,KAAK00C,UAAUud,aAEfjyD,KAAKU,QAAQ+6C,2BAA8Bz7C,KAAKtM,MAAMmlE,c,iCAOjD3kC,EAAUzhB,GACnB,IAAM9e,EAAOqM,KAAK4yB,YAAYsB,EAAUzhB,GAmBxC,OAlBAzS,KAAKwlD,gBAAgBsT,gCAAgCnlE,EAAKoT,MAAOmC,EAAcO,gCAE3EzJ,KAAK62B,IAAIxgC,EAAMwN,OACjB7D,KAAKqY,MAAM1kB,EAAKoT,MAAOmC,EAAcqF,mBAGlCvO,KAAKtM,MAAMmlE,YAAe74D,KAAKU,QAAQ+6C,4BACtCz7C,KAAK+yD,mBACP/yD,KAAK8I,6BAA8B,EAEnC9I,KAAK6I,mBAAoB,GAIxB7I,KAAKwH,MAAMg1C,YACd7oD,EAAKqG,SAAWgG,KAAK+wC,mBAGhB/wC,KAAKy0B,WAAW9gC,EAAM,qB,yCAI7B,OAAOqM,KAAK4V,yBAA2B5V,KAAKiT,MAAM5c,EAAMsN,UAAY3D,KAAKiT,MAAM5c,EAAMwL,SAAW7B,KAAKiT,MAAM5c,EAAM8K,WAAanB,KAAKiT,MAAM5c,EAAMmM,YAAcxC,KAAKiT,MAAM5c,EAAM2K,SAAWhB,KAAKiT,MAAM5c,EAAMyN,QAAU9D,KAAKiJ,UAAU,gBAAkBjJ,KAAKiT,MAAM5c,EAAMuN,U,mCAItQ,IAAMjQ,EAAOqM,KAAKw0B,YAYlB,OAXAx0B,KAAKwlD,gBAAgBsT,gCAAgCnlE,EAAKoT,MAAOmC,EAAcmJ,kBAC/ErS,KAAK22B,OAED32B,KAAKiT,MAAM5c,EAAM2L,QAAUhC,KAAKiT,MAAM5c,EAAMwN,QAAU7D,KAAKwH,MAAMW,KAAKxI,YAAcK,KAAK4V,yBAC3FjiB,EAAKolE,UAAW,EAChBplE,EAAKqG,SAAW,OAEhBrG,EAAKolE,SAAW/4D,KAAK62B,IAAIxgC,EAAMwN,MAC/BlQ,EAAKqG,SAAWgG,KAAK2iC,oBAGhB3iC,KAAKy0B,WAAW9gC,EAAM,qB,mDAGF+xC,EAAMgS,GAC4B,UAAzD13C,KAAK8xB,gBAAgB,mBAAoB,aACzB,uBAAd4T,EAAKv9B,MACPnI,KAAKqY,MAAMq/B,EAAcxuC,EAAc6F,kC,6CAKtBiqD,EAAiB9kC,EAAUzhB,GAEhD,OADAzS,KAAKi5D,kCAAkCD,EAAiB9kC,GACjDl0B,KAAKk5D,8BAA8BF,EAAiB9kC,EAAUzhB,K,wDAGrCumD,EAAiB9kC,GACjD,GAAIl0B,KAAKiT,MAAM5c,EAAMiM,OACnB,MAAMtC,KAAKqY,MAAMrY,KAAKwH,MAAMT,MAAOmC,EAAc2F,qBACf,uBAAzBmqD,EAAgB7wD,MACzBnI,KAAKqY,MAAM6b,EAAUhrB,EAAc4F,kC,oDAITkqD,EAAiB9kC,EAAUzhB,GACvD,IAAM8oB,EAAWv7B,KAAK4yB,YAAYsB,EAAUzhB,GACtC0mD,EAAoBn5D,KAAKm5D,kBAAkBH,GAYjD,OAVIG,EACF59B,EAAS5iC,OAASqgE,GAEbh5D,KAAKo5D,8CACRp5D,KAAKqY,MAAM6b,EAAUhrB,EAAc8F,qBAGrCusB,EAAShqC,WAAaynE,GAGjBh5D,KAAKy0B,WAAW8G,EAAU49B,EAAoB,uBAAyB,6B,wCAG9D5nE,GAChB,OAAQA,EAAW4W,MACjB,IAAK,mBACH,OAAQ5W,EAAW8K,UAAY2D,KAAKm5D,kBAAkB5nE,EAAW4G,QAEnE,IAAK,aACH,OAAO,EAET,QACE,OAAO,K,iDAIckhE,GACzB,IAAMC,EAAyBt5D,KAAKwH,MAAM60C,aAC1Cr8C,KAAKwH,MAAM60C,aAAe,CACxBC,yBAA0B,EAC1BC,cAAe,MAGjB,IACE,OAAO8c,IADT,QAGEr5D,KAAKwH,MAAM60C,aAAeid,K,iDAIHD,GACzB,IAAMC,EAAyBt5D,KAAKwH,MAAM60C,aAC1Cr8C,KAAKwH,MAAM60C,aAAe,CACxBC,yBAA0B,EAC1BC,cAAe,MAGjB,IACE,OAAO8c,IADT,QAGEr5D,KAAKwH,MAAM60C,aAAeid,K,qDAICD,GAC7B,IAAME,EAA6Bv5D,KAAKwH,MAAMg1C,UAC9Cx8C,KAAKwH,MAAMg1C,WAAY,EAEvB,IACE,OAAO6c,IADT,QAGEr5D,KAAKwH,MAAMg1C,UAAY+c,K,iCAIhBF,GACT,IAAMrhD,EAAQhY,KAAK00C,UAAU3lB,eAG7B,GA7jNa,GA2jNsB/W,EAEf,CAClBhY,KAAK00C,UAAUpZ,MA9jNJ,EA8jNUtjB,GAErB,IACE,OAAOqhD,IADT,QAGEr5D,KAAK00C,UAAUhZ,QAInB,OAAO29B,M,oCAGKA,GACZ,IAAMrhD,EAAQhY,KAAK00C,UAAU3lB,eAG7B,GA9kNa,EA4kNuB/W,EAEd,CACpBhY,KAAK00C,UAAUpZ,OAAc,EAARtjB,GAErB,IACE,OAAOqhD,IADT,QAGEr5D,KAAK00C,UAAUhZ,QAInB,OAAO29B,M,+CAIPr5D,KAAKwH,MAAM60C,aAAaE,cAAgB,I,4EAIxC,OAAOv8C,KAAKwH,MAAM60C,aAAaC,0BAA4B,I,mEAI3D,OAAgD,MAAzCt8C,KAAKwH,MAAM60C,aAAaE,eAAyBv8C,KAAKwH,MAAM60C,aAAaE,eAAiB,I,8CAG3EqV,GACtB,IAAM19B,EAAWl0B,KAAKwH,MAAMT,MACtB0L,EAAWzS,KAAKwH,MAAMiL,SAC5BzS,KAAKwH,MAAM20C,iBAAmBn8C,KAAKwH,MAAMT,MACzC,IAAMwtD,EAAgCv0D,KAAKwH,MAAMi1C,2BACjDz8C,KAAKwH,MAAMi1C,4BAA6B,EACxC,IAAM+c,EAAMx5D,KAAK83C,YAAY93C,KAAK+wC,kBAAmB7c,EAAUzhB,EAAUm/C,GAEzE,OADA5xD,KAAKwH,MAAMi1C,2BAA6B8X,EACjCiF,I,8CAIPx5D,KAAK06C,aAAa,gBAClB,IAAM/mD,EAAOqM,KAAKw0B,YAClBx0B,KAAK22B,OACL32B,KAAK62B,IAAIxgC,EAAMmL,QACf,IAAMi4D,EAAez5D,KAAKsmD,kBAAiB,GAC3CtmD,KAAKymD,qBACL,IAAMn1D,EAAU0O,KAAKw0B,YAErB,IACE7gC,EAAKgB,KAAOqL,KAAK2mD,aAAar1D,EAAS+E,EAAMsL,OAAQ,UADvD,QAGE83D,IAIF,OADAz5D,KAAK62B,IAAIxgC,EAAMsL,QACR3B,KAAKy0B,WAAW9gC,EAAM,wB,sIA1nElBA,GAAqB,IAC5B2vC,EAAao2B,EADA5kC,EAAe,wDAG5B1B,OAAgBlgC,EAgBpB,QAdkB,4BAAdS,EAAKwU,OAAqE,OAA7Bm7B,EAAc3vC,EAAKk/B,YAAiB,EAASyQ,EAAYlQ,kBACxGA,EAAgB0yB,GAA8BnyD,GAE1CmhC,EACyB,eAAvB1B,EAAcjrB,KAChBnI,KAAKwlD,gBAAgBmU,mCAAmChmE,EAAKoT,MAAOmC,EAAc6D,gCAClD,qBAAvBqmB,EAAcjrB,MACvBnI,KAAKqY,MAAM1kB,EAAKoT,MAAOmC,EAAc6D,gCAGvC/M,KAAKqY,MAAM1kB,EAAKoT,MAAOmC,EAAc6D,iCAIjCpZ,EAAKwU,MACX,IAAK,aACL,IAAK,gBACL,IAAK,eACL,IAAK,oBACH,MAEF,IAAK,mBACHxU,EAAKwU,KAAO,gBAEZ,IAAK,IAAItN,EAAI,EAAGnB,EAAS/F,EAAK8U,WAAW/O,OAAQyN,EAAOzN,EAAS,EAAGmB,EAAInB,EAAQmB,IAAK,CACnF,IAAI++D,EAEEjvC,EAAOh3B,EAAK8U,WAAW5N,GACvBg/D,EAASh/D,IAAMsM,EACrBnH,KAAK85D,iCAAiCnvC,EAAMkvC,EAAQ/kC,GAEhD+kC,GAAwB,gBAAdlvC,EAAKxiB,OAA0D,OAA9ByxD,EAAejmE,EAAKk/B,YAAiB,EAAS+mC,EAAap2B,gBACxGxjC,KAAK+5D,iBAAiBpmE,EAAKk/B,MAAM2Q,eAIrC,MAEF,IAAK,iBACHxjC,KAAK+0B,aAAaphC,EAAKvC,MAAO0jC,GAC9B,MAEF,IAAK,gBAED90B,KAAKg6D,sBAAsBrmE,GAC3BA,EAAKwU,KAAO,cACZ,IAAMjK,EAAMvK,EAAKqG,SACjBgG,KAAK+0B,aAAa72B,EAAK42B,GACvB,MAGJ,IAAK,kBACHnhC,EAAKwU,KAAO,eACZnI,KAAKujC,iBAAiB5vC,EAAKgU,SAAyC,OAA9B+xD,EAAe/lE,EAAKk/B,YAAiB,EAAS6mC,EAAal2B,cAAe1O,GAChH,MAEF,IAAK,uBACmB,MAAlBnhC,EAAK+wC,UACP1kC,KAAKqY,MAAM1kB,EAAK+xC,KAAK1+B,IAAKkC,EAAcuE,uBAG1C9Z,EAAKwU,KAAO,2BACLxU,EAAK+wC,SACZ1kC,KAAK+0B,aAAaphC,EAAK+xC,KAAM5Q,GAC7B,MAEF,IAAK,0BACH90B,KAAK+0B,aAAa3B,EAAe0B,GAIrC,OAAOnhC,I,uDAGwBg3B,EAAMkvC,EAAQ/kC,GAC7C,GAAkB,iBAAdnK,EAAKxiB,KAAyB,CAChC,IAAM2L,EAAsB,QAAd6W,EAAK1zB,MAAgC,QAAd0zB,EAAK1zB,KAAiBiS,EAAcyF,mBAAqBzF,EAAc0F,iBAC5G5O,KAAKqY,MAAMsS,EAAKt4B,IAAI0U,MAAO+M,OACJ,kBAAd6W,EAAKxiB,MAA6B0xD,EAG3C75D,KAAK+0B,aAAapK,EAAMmK,GAFxB90B,KAAK+5D,iBAAiBpvC,EAAK5jB,S,uCAMd69B,EAAUC,EAAkB/P,GAC3C,IAAI9tB,EAAM49B,EAASlrC,OAEnB,GAAIsN,EAAK,CACP,IAAMG,EAAOy9B,EAAS59B,EAAM,GAE5B,GAA4C,iBAA/B,MAARG,OAAe,EAASA,EAAKgB,QAC9BnB,OACG,GAA4C,mBAA/B,MAARG,OAAe,EAASA,EAAKgB,MAA2B,CAClEhB,EAAKgB,KAAO,cACZ,IAAIjK,EAAMiJ,EAAKnN,SACfgG,KAAK+0B,aAAa72B,EAAK42B,GAGN,gBAFjB52B,EAAM4nD,GAA8B5nD,IAE5BiK,MAAsC,qBAAbjK,EAAIiK,MAA4C,iBAAbjK,EAAIiK,MAAwC,kBAAbjK,EAAIiK,MACrGnI,KAAK02B,WAAWx4B,EAAI6I,OAGlB89B,GACF7kC,KAAKi6D,4BAA4Bp1B,KAGjC79B,GAIN,IAAK,IAAInM,EAAI,EAAGA,EAAImM,EAAKnM,IAAK,CAC5B,IAAMg8C,EAAMjS,EAAS/pC,GAEjBg8C,IACF72C,KAAK+0B,aAAa8hB,EAAK/hB,GAEN,gBAAb+hB,EAAI1uC,MACNnI,KAAK+5D,iBAAiBljB,EAAI9vC,QAKhC,OAAO69B,I,uCAGQA,EAAUE,GACzB,OAAOF,I,2CAGYA,EAAUE,GAC7B9kC,KAAKolC,iBAAiBR,EAAUE,GAEhC,IAAK,IAAI0F,EAAK,EAAGA,EAAK5F,EAASlrC,OAAQ8wC,IAAM,CAC3C,IAAMztC,EAAO6nC,EAAS4F,GAEsB,qBAA/B,MAARztC,OAAe,EAASA,EAAKoL,OAChCnI,KAAK8zD,qBAAqB/2D,EAAK4K,a,kCAKzBksB,EAAqBiO,GAC/B,IAAMnuC,EAAOqM,KAAKw0B,YAGlB,OAFAx0B,KAAK22B,OACLhjC,EAAKqG,SAAWgG,KAAKq3B,wBAAwBxD,OAAqB3gC,EAAW4uC,GACtE9hC,KAAKy0B,WAAW9gC,EAAM,mB,yCAI7B,IAAMA,EAAOqM,KAAKw0B,YAGlB,OAFAx0B,KAAK22B,OACLhjC,EAAKqG,SAAWgG,KAAKkqD,mBACdlqD,KAAKy0B,WAAW9gC,EAAM,iB,yCAI7B,OAAQqM,KAAKwH,MAAMW,MACjB,KAAK9R,EAAM8K,SAEP,IAAMxN,EAAOqM,KAAKw0B,YAGlB,OAFAx0B,KAAK22B,OACLhjC,EAAKgU,SAAW3H,KAAKquC,iBAAiBh4C,EAAMiL,SAAU,IAAI,GACnDtB,KAAKy0B,WAAW9gC,EAAM,gBAGjC,KAAK0C,EAAMmL,OACT,OAAOxB,KAAKg1D,gBAAgB3+D,EAAMsL,QAAQ,GAG9C,OAAO3B,KAAK25B,oB,uCAGGqL,EAAOk1B,EAAexB,EAAYhyB,GAIjD,IAHA,IAAM4tB,EAAO,GACTn0B,GAAQ,GAEJngC,KAAK62B,IAAImO,IAOf,GANI7E,EACFA,GAAQ,EAERngC,KAAKm3B,OAAO9gC,EAAM0L,OAGhB22D,GAAc14D,KAAKiT,MAAM5c,EAAM0L,OACjCuyD,EAAKx+D,KAAK,UACL,IAAIkK,KAAK62B,IAAImO,GAClB,MACK,GAAIhlC,KAAKiT,MAAM5c,EAAMkM,UAAW,CACrC+xD,EAAKx+D,KAAKkK,KAAK42C,6BAA6B52C,KAAKi2D,qBACjDj2D,KAAKk2D,oBAAoBgE,GACzBl6D,KAAKm3B,OAAO6N,GACZ,MAEA,IAAMluC,EAAa,GAMnB,IAJIkJ,KAAKiT,MAAM5c,EAAMqM,KAAO1C,KAAKiJ,UAAU,eACzCjJ,KAAKqY,MAAMrY,KAAKwH,MAAMT,MAAOmC,EAAc0I,+BAGtC5R,KAAKiT,MAAM5c,EAAMqM,KACtB5L,EAAWhB,KAAKkK,KAAKwoD,kBAGvB8L,EAAKx+D,KAAKkK,KAAKm6D,wBAAwBzzB,EAAgB5vC,IAI3D,OAAOw9D,I,8CAGe5tB,EAAgB5vC,GACtC,IAAM4uC,EAAO1lC,KAAK22C,oBAClB32C,KAAK42C,6BAA6BlR,GAClC,IAAMmR,EAAM72C,KAAK22C,kBAAkBjR,EAAK3+B,MAAO2+B,EAAKn+B,IAAIR,MAAO2+B,GAM/D,OAJI5uC,EAAW4C,SACbgsC,EAAK5uC,WAAaA,GAGb+/C,I,mDAGoBz4C,GAC3B,OAAOA,I,wCAGS81B,EAAUzhB,EAAUizB,GACpC,IAAI00B,EAAWC,EAAWC,EAK1B,GAHA7nD,EAAqC,OAAzB2nD,EAAY3nD,GAAoB2nD,EAAYp6D,KAAKwH,MAAMiL,SACnEyhB,EAAqC,OAAzBmmC,EAAYnmC,GAAoBmmC,EAAYr6D,KAAKwH,MAAMT,MACnE2+B,EAAyB,OAAjB40B,EAAQ50B,GAAgB40B,EAAQt6D,KAAKkqD,oBACxClqD,KAAK62B,IAAIxgC,EAAMwM,IAAK,OAAO6iC,EAChC,IAAM/xC,EAAOqM,KAAK4yB,YAAYsB,EAAUzhB,GAGxC,OAFA9e,EAAK+xC,KAAOA,EACZ/xC,EAAK4pC,MAAQv9B,KAAKq3B,0BACXr3B,KAAKy0B,WAAW9gC,EAAM,uB,gCAGrBoJ,EAAM6oC,GAA0G,IAAtFltB,EAAsF,uDAAxEZ,GAAW0gD,EAA6D,uCAA/C+B,EAA+C,uCAA3BhC,EAA2B,wDACxH,OAAQx7D,EAAKoL,MACX,IAAK,aACH,IAEI5M,EACEwB,EADFxB,KAGEyE,KAAKwH,MAAMi6B,SAAW82B,EAAoBphD,EAAyB5b,EAAMyE,KAAKgX,UAAYE,EAA6B3b,KACzHyE,KAAKqY,MAAMtb,EAAKgK,MAAO2R,IAAgBZ,GAAY5O,EAAc2G,oBAAsB3G,EAAc4G,2BAA4BvU,GAG/Hi9D,IACEA,EAAaxmE,IAAIuJ,GACnByE,KAAKqY,MAAMtb,EAAKgK,MAAOmC,EAAcwF,WAErC8pD,EAAa5/D,IAAI2C,IAIjBg/D,GAA+B,QAATh/D,GACxByE,KAAKqY,MAAMtb,EAAKgK,MAAOmC,EAAcmE,qBAGjCqL,EAAcZ,IAClB9X,KAAKtM,MAAM6mC,YAAYh/B,EAAMmd,EAAa3b,EAAKgK,OAGjD,MAGJ,IAAK,mBACC2R,IAAgBZ,IAClB9X,KAAKqY,MAAMtb,EAAKgK,MAAOmC,EAAc+D,+BAGvC,MAEF,IAAK,gBACH,IAAK,IAAIy9B,EAAM,EAAG8vB,EAAmBz9D,EAAK0L,WAAYiiC,EAAM8vB,EAAiB9gE,OAAQgxC,IAAO,CAC1F,IAAI/f,EAAO6vC,EAAiB9vB,GAC5B,GAAI1qC,KAAKizB,iBAAiBtI,GAAOA,EAAOA,EAAKv5B,WAAW,GAAI4O,KAAK8wD,eAAenmC,GAAO,SACvF3qB,KAAK8lC,UAAUnb,EAAM,+BAAgCjS,EAAa8/C,EAAc+B,GAGlF,MAEF,IAAK,eACH,IAAK,IAAInvB,EAAM,EAAGqvB,EAAiB19D,EAAK4K,SAAUyjC,EAAMqvB,EAAe/gE,OAAQ0xC,IAAO,CACpF,IAAM0kB,EAAO2K,EAAervB,GAExB0kB,GACF9vD,KAAK8lC,UAAUgqB,EAAM,8BAA+Bp3C,EAAa8/C,EAAc+B,GAInF,MAEF,IAAK,oBACHv6D,KAAK8lC,UAAU/oC,EAAK2oC,KAAM,qBAAsBhtB,EAAa8/C,GAC7D,MAEF,IAAK,cACHx4D,KAAK8lC,UAAU/oC,EAAK/C,SAAU,eAAgB0e,EAAa8/C,GAC3D,MAEF,IAAK,0BACHx4D,KAAK8lC,UAAU/oC,EAAKxL,WAAY,2BAA4BmnB,EAAa8/C,GACzE,MAEF,QAEIx4D,KAAKqY,MAAMtb,EAAKgK,MAAO2R,IAAgBZ,GAAY5O,EAAcwD,WAAaxD,EAAcyD,kBAAmBi5B,M,4CAKjGjyC,GACO,eAAvBA,EAAKqG,SAASmO,MAAgD,qBAAvBxU,EAAKqG,SAASmO,MACvDnI,KAAKqY,MAAM1kB,EAAKqG,SAAS+M,MAAOmC,EAAciE,gC,0CAI9B63B,GACdhlC,KAAKiT,MAAM5c,EAAM0L,SACf/B,KAAK6wC,sBAAwB7L,EAC/BhlC,KAAKi6D,4BAA4Bj6D,KAAKwH,MAAMT,OAE5C/G,KAAK+5D,iBAAiB/5D,KAAKwH,MAAMT,U,uCAKtByL,GACf,MAAMxS,KAAKqY,MAAM7F,EAAKtJ,EAAcgC,oB,kDAGVsH,GAC1BxS,KAAKqY,MAAM7F,EAAKtJ,EAAcuG,uB,qIAvY9B,OAAO,IAAIk2C,GAAK3lD,KAAMA,KAAKwH,MAAMT,MAAO/G,KAAKwH,MAAMiL,Y,kCAGzCD,EAAKjL,GACf,OAAO,IAAIo+C,GAAK3lD,KAAMwS,EAAKjL,K,sCAGbY,GACd,OAAOnI,KAAK4yB,YAAYzqB,EAAKpB,MAAOoB,EAAKZ,IAAIR,S,iCAGpCpT,EAAMwU,GACf,OAAOnI,KAAKgzB,aAAar/B,EAAMwU,EAAMnI,KAAKwH,MAAMqL,WAAY7S,KAAKwH,MAAMsL,iB,mCAG5Dnf,EAAMwU,EAAMqK,EAAKjL,GAO5B,OALA5T,EAAKwU,KAAOA,EACZxU,EAAKqT,IAAMwL,EACX7e,EAAK4T,IAAIP,IAAMO,EACXvH,KAAKU,QAAQq7C,SAAQpoD,EAAKkyD,MAAM,GAAKrzC,GACzCxS,KAAK06D,eAAe/mE,GACbA,I,yCAGUA,EAAMoT,EAAO0L,GAC9B9e,EAAKoT,MAAQA,EACbpT,EAAK4T,IAAIR,MAAQ0L,EACbzS,KAAKU,QAAQq7C,SAAQpoD,EAAKkyD,MAAM,GAAK9+C,K,uCAG1BpT,GAAsE,IAAhEqT,EAAgE,uDAA1DhH,KAAKwH,MAAMqL,WAAYD,EAAmC,uDAA1B5S,KAAKwH,MAAMsL,cACtEnf,EAAKqT,IAAMA,EACXrT,EAAK4T,IAAIP,IAAM4L,EACX5S,KAAKU,QAAQq7C,SAAQpoD,EAAKkyD,MAAM,GAAK7+C,K,iDAGhBrT,EAAMgnE,GAC/B36D,KAAK44C,mBAAmBjlD,EAAMgnE,EAAa5zD,MAAO4zD,EAAapzD,IAAIR,W,GAxC/Cm9C,QAo7HxB,SAAS0W,GAAUl6D,EAASqS,GAC1B,IAAIqlC,EAAM8N,GAOV,OALe,MAAXxlD,OAAkB,EAASA,EAAQqI,YAj0LzC,SAAyBA,GACvB,GAAIE,GAAUF,EAAS,cAAe,CACpC,GAAIE,GAAUF,EAAS,qBACrB,MAAM,IAAI8kB,MAAM,mEAGlB,IAAMgtC,EAAyB/oC,GAAgB/oB,EAAS,aAAc,0BAEtE,GAA8B,MAA1B8xD,EACF,MAAM,IAAIhtC,MAAM,mQACX,GAAsC,mBAA3BgtC,EAChB,MAAM,IAAIhtC,MAAM,+CAIpB,GAAI5kB,GAAUF,EAAS,SAAWE,GAAUF,EAAS,cACnD,MAAM,IAAI8kB,MAAM,+CAGlB,GAAI5kB,GAAUF,EAAS,iBAAmBE,GAAUF,EAAS,eAC3D,MAAM,IAAI8kB,MAAM,wDAGlB,GAAI5kB,GAAUF,EAAS,sBAAwBipB,GAAmBxY,SAASsY,GAAgB/oB,EAAS,mBAAoB,aACtH,MAAM,IAAI8kB,MAAM,+EAAiFmE,GAAmB50B,KAAI,SAAA4X,GAAC,iBAAQA,EAAR,QAAc0vC,KAAK,OAG9I,GAAIz7C,GAAUF,EAAS,oBAAqB,CAC1C,GAAIE,GAAUF,EAAS,oBACrB,MAAM,IAAI8kB,MAAM,iEAKlB,GAA2C,aAFAiE,GAAgB/oB,EAAS,mBAAoB,WAGtF,MAAM,IAAI8kB,MAAM,wJAIpB,GAAI5kB,GAAUF,EAAS,oBAAsBkpB,GAA8BzY,SAASsY,GAAgB/oB,EAAS,iBAAkB,eAC7H,MAAM,IAAI8kB,MAAM,+EAAiFoE,GAA8B70B,KAAI,SAAA4X,GAAC,iBAAQA,EAAR,QAAc0vC,KAAK,OA0xLvJoW,CAAgBp6D,EAAQqI,SACxBqvC,EAQJ,SAAwB2iB,GACtB,IAAMC,EAAa7f,GAAiBL,QAAO,SAAAv/C,GAAI,OAAI0N,GAAU8xD,EAAoBx/D,MAC3ElJ,EAAM2oE,EAAWtW,KAAK,KACxBtM,EAAM6iB,GAAiB5oE,GAE3B,IAAK+lD,EAAK,CACRA,EAAM8N,GAEN,IAAK,IAAI1b,EAAK,EAAGA,EAAKwwB,EAAWthE,OAAQ8wC,IAAM,CAC7C,IAAMxhC,EAASgyD,EAAWxwB,GAC1B4N,EAAMlmB,GAAalpB,GAAQovC,GAG7B6iB,GAAiB5oE,GAAO+lD,EAG1B,OAAOA,EAxBC8iB,CAAex6D,EAAQqI,UAGxB,IAAIqvC,EAAI13C,EAASqS,GAG1B,IAAMkoD,GAAmB,GAqBzB9pE,EAAQuyC,MA/ER,SAAe3wB,EAAOrS,GACpB,IAAIy6D,EAEJ,GAAsE,iBAAzC,OAAvBA,EAAWz6D,QAAmB,EAASy6D,EAAS7f,YA+BpD,OAAOsf,GAAUl6D,EAASqS,GAAO2wB,QA9BjChjC,EAAUzP,OAAO+B,OAAO,GAAI0N,GAE5B,IACEA,EAAQ46C,WAAa,SACrB,IAAMsK,EAASgV,GAAUl6D,EAASqS,GAC5B5f,EAAMyyD,EAAOliB,QAEnB,GAAIkiB,EAAO/8C,kBACT,OAAO1V,EAGT,GAAIyyD,EAAO98C,4BACT,IAEE,OADApI,EAAQ46C,WAAa,SACdsf,GAAUl6D,EAASqS,GAAO2wB,QACjC,MAAOtkC,SAETjM,EAAI7B,QAAQgqD,WAAa,SAG3B,OAAOnoD,EACP,MAAOioE,GACP,IAEE,OADA16D,EAAQ46C,WAAa,SACdsf,GAAUl6D,EAASqS,GAAO2wB,QACjC,MAAO23B,IAET,MAAMD,IAiDZjqE,EAAQ+lC,gBA3CR,SAAyBnkB,EAAOrS,GAC9B,IAAMklD,EAASgV,GAAUl6D,EAASqS,GAMlC,OAJI6yC,EAAOllD,QAAQo7C,aACjB8J,EAAOp+C,MAAMi6B,QAAS,GAGjBmkB,EAAO0V,iBAqChBnqE,EAAQoqE,SAAWllE,G,kCC/mbnB,YAEApF,OAAOC,eAAeC,EAAS,aAAc,CAC3CC,OAAO,IAETD,EAAQqqE,iBAAmBA,EAC3BrqE,EAAQE,QA0IR,SAAkBoqE,EAAUC,EAAYC,GAAsB,IAAXxV,EAAW,uDAAJ,GACxD,IAAKyV,EAAyB,CAC5BA,GAA0B,EAC1B,IAAMloD,EAAU,sGAEhB,GAAImoD,EAAQC,YACVD,EAAQC,YAAYpoD,EAAS,0BACxB,CACL,IAAMqoD,EAAmB,IAAIluC,MAAMna,GACnCqoD,EAAiBxgE,KAAO,qBACxBygE,QAAQC,KAAK,IAAIpuC,MAAMna,KAK3B,IAAMwoD,EAAW,CACfn1D,MAAO,CACLF,OAHJ80D,EAAYQ,KAAKC,IAAIT,EAAW,GAI5Bh1D,KAAM+0D,IAGV,OAAOF,EAAiBC,EAAUS,EAAU/V,IA7J9C,IAAIkW,EAIJ,SAAiC1qE,GAAO,GAAIA,GAAOA,EAAIE,WAAc,OAAOF,EAAO,GAAY,OAARA,GAA+B,kBAARA,GAAmC,oBAARA,EAAsB,MAAO,CAAEN,QAASM,GAAS,IAAIG,EAAQC,IAA4B,GAAID,GAASA,EAAME,IAAIL,GAAQ,OAAOG,EAAMG,IAAIN,GAAQ,IAAIO,EAAS,GAAQC,EAAwBlB,OAAOC,gBAAkBD,OAAOmB,yBAA0B,IAAK,IAAIC,KAAOV,EAAO,GAAIV,OAAOqB,UAAUC,eAAeC,KAAKb,EAAKU,GAAM,CAAE,IAAII,EAAON,EAAwBlB,OAAOmB,yBAAyBT,EAAKU,GAAO,KAAUI,IAASA,EAAKR,KAAOQ,EAAKC,KAAQzB,OAAOC,eAAegB,EAAQG,EAAKI,GAAgBP,EAAOG,GAAOV,EAAIU,GAAYH,EAAOb,QAAUM,EAASG,GAASA,EAAMY,IAAIf,EAAKO,GAAW,OAAOA,EAJ7sBS,CAAwBC,EAAQ,MAEjD,SAASb,IAA6B,GAAuB,oBAAZe,QAAwB,OAAO,KAAM,IAAIhB,EAAQ,IAAIgB,QAAqE,OAA1Df,EAA2B,WAAc,OAAOD,GAAiBA,EAIlL,IAAI8pE,GAA0B,EAE9B,SAASU,EAAQC,GACf,MAAO,CACLC,OAAQD,EAAME,KACdC,OAAQH,EAAMI,IAAIC,KAClBlpD,QAAS6oD,EAAMI,IAAIC,MAIvB,IAAMC,EAAU,0BAEhB,SAASC,EAAev1D,EAAKlB,EAAQ8/C,GACnC,IAAM1zC,EAAWxhB,OAAO+B,OAAO,CAC7B6T,OAAQ,EACRF,MAAO,GACNY,EAAIR,OACD6L,EAAS3hB,OAAO+B,OAAO,GAAIyf,EAAUlL,EAAIP,KALN,EASrCm/C,GAAQ,GAT6B,IAOvC4W,kBAPuC,MAO1B,EAP0B,MAQvCC,kBARuC,MAQ1B,EAR0B,EAUnCxhB,EAAY/oC,EAAS9L,KACrBs2D,EAAcxqD,EAAS5L,OACvBq2D,EAAUtqD,EAAOjM,KACjBw2D,EAAYvqD,EAAO/L,OACrBE,EAAQo1D,KAAKC,IAAI5gB,GAAauhB,EAAa,GAAI,GAC/C/1D,EAAMm1D,KAAKiB,IAAI/2D,EAAO3M,OAAQwjE,EAAUF,IAEzB,IAAfxhB,IACFz0C,EAAQ,IAGO,IAAbm2D,IACFl2D,EAAMX,EAAO3M,QAGf,IAAM2jE,EAAWH,EAAU1hB,EACrB8hB,EAAc,GAEpB,GAAID,EACF,IAAK,IAAIxiE,EAAI,EAAGA,GAAKwiE,EAAUxiE,IAAK,CAClC,IAAM6gE,EAAa7gE,EAAI2gD,EAEvB,GAAKyhB,EAEE,GAAU,IAANpiE,EAAS,CAClB,IAAM0iE,EAAel3D,EAAOq1D,EAAa,GAAGhiE,OAC5C4jE,EAAY5B,GAAc,CAACuB,EAAaM,EAAeN,EAAc,QAChE,GAAIpiE,IAAMwiE,EACfC,EAAY5B,GAAc,CAAC,EAAGyB,OACzB,CACL,IAAMI,EAAel3D,EAAOq1D,EAAa7gE,GAAGnB,OAC5C4jE,EAAY5B,GAAc,CAAC,EAAG6B,QAR9BD,EAAY5B,IAAc,OAc1B4B,EAAY9hB,GAFZyhB,IAAgBE,GACdF,GACuB,CAACA,EAAa,GAKhB,CAACA,EAAaE,EAAYF,GAIvD,MAAO,CACLl2D,QACAC,MACAs2D,eAIJ,SAAS9B,EAAiBC,EAAUl0D,GAAgB,IAAX4+C,EAAW,uDAAJ,GACxCqX,GAAerX,EAAKsX,eAAiBtX,EAAKuX,cAAe,EAAIrB,EAAWsB,iBAAiBxX,GACzFoW,GAAQ,EAAIF,EAAWuB,UAAUzX,GACjC0X,EAAOvB,EAAQC,GAEfuB,EAAiB,SAACC,EAAS98D,GAC/B,OAAOu8D,EAAcO,EAAQ98D,GAAUA,GAGnC+8D,EAAQvC,EAASwC,MAAMpB,GATqB,EAc9CC,EAAev1D,EAAKy2D,EAAO7X,GAH7Bp/C,EAXgD,EAWhDA,MACAC,EAZgD,EAYhDA,IACAs2D,EAbgD,EAahDA,YAEIY,EAAa32D,EAAIR,OAAqC,kBAArBQ,EAAIR,MAAMF,OAC3Cs3D,EAAiB5nD,OAAOvP,GAAKtN,OAC7B0kE,EAAmBZ,GAAc,EAAInB,EAAWhrE,SAASoqE,EAAUtV,GAAQsV,EAC7E4C,EAAQD,EAAiBH,MAAMpB,GAAS9hE,MAAMgM,EAAOC,GAAK5J,KAAI,SAACuJ,EAAM0M,GACvE,IAAMirD,EAASv3D,EAAQ,EAAIsM,EACrBkrD,EAAe,WAAID,GAASvjE,OAAOojE,GACnC3B,EAAS,IAAH,OAAO+B,EAAP,MACNC,EAAYlB,EAAYgB,GACxBG,GAAkBnB,EAAYgB,EAAS,GAE7C,GAAIE,EAAW,CACb,IAAIE,EAAa,GAEjB,GAAI9sC,MAAMC,QAAQ2sC,GAAY,CAC5B,IAAMG,EAAgBh4D,EAAK5L,MAAM,EAAGohE,KAAKC,IAAIoC,EAAU,GAAK,EAAG,IAAInnE,QAAQ,SAAU,KAC/EunE,EAAkBJ,EAAU,IAAM,EACxCE,EAAa,CAAC,MAAOZ,EAAeD,EAAKrB,OAAQA,EAAOnlE,QAAQ,MAAO,MAAO,IAAKsnE,EAAeb,EAAeD,EAAKnB,OAAQ,KAAKmC,OAAOD,IAAkBla,KAAK,IAE7J+Z,GAAkBtY,EAAKzyC,UACzBgrD,GAAc,IAAMZ,EAAeD,EAAKnqD,QAASyyC,EAAKzyC,UAI1D,MAAO,CAACoqD,EAAeD,EAAKnB,OAAQ,KAAMoB,EAAeD,EAAKrB,OAAQA,GAAS71D,EAAKjN,OAAS,EAAd,WAAsBiN,GAAS,GAAI+3D,GAAYha,KAAK,IAEnI,iBAAWoZ,EAAeD,EAAKrB,OAAQA,IAAvC,OAAiD71D,EAAKjN,OAAS,EAAd,WAAsBiN,GAAS,OAEjF+9C,KAAK,MAMR,OAJIyB,EAAKzyC,UAAYwqD,IACnBG,EAAQ,GAAH,OAAM,IAAIQ,OAAOV,EAAiB,IAAlC,OAAuChY,EAAKzyC,QAA5C,aAAwD2qD,IAG3Db,EACKjB,EAAMuC,MAAMT,GAEZA,K,mDC1IXptE,OAAOC,eAAeC,EAAS,aAAc,CAC3CC,OAAO,IAETD,EAAQuE,MAMR,SAAeqpE,EAAGC,GAAG,MAMfA,EAJFC,4BAFiB,MAEMF,EAAEE,qBAFR,IAMfD,EAHFE,0BAHiB,MAGIH,EAAEG,mBAHN,IAMfF,EAFFG,wBAJiB,MAIEJ,EAAEI,iBAJJ,IAMfH,EADFI,6BALiB,MAKOL,EAAEK,sBALT,EAOnB,MAAO,CACLxZ,OAAQ30D,OAAO+B,OAAO,GAAI+rE,EAAEnZ,OAAQoZ,EAAEpZ,QACtCqZ,uBACAC,qBACAC,mBACAC,0BAjBJjuE,EAAQkuE,SAqBR,SAAkBlZ,GAChB,GAAY,MAARA,GAAgC,kBAATA,EACzB,MAAM,IAAIt4B,MAAM,6BAGZ,IAAAyxC,EAAOnZ,GAAQ,GAEnB8Y,EAIEK,EAJFL,qBACAC,EAGEI,EAHFJ,mBACAC,EAEEG,EAFFH,iBACAC,EACEE,EADFF,sBAEIxZ,EA9BR,SAAuCv/C,EAAQk5D,GAAY,GAAc,MAAVl5D,EAAgB,MAAO,GAAI,IAA2DhU,EAAKwI,EAA5D2kE,EAAS,GAAQC,EAAaxuE,OAAOmqD,KAAK/0C,GAAqB,IAAKxL,EAAI,EAAGA,EAAI4kE,EAAW/lE,OAAQmB,IAAOxI,EAAMotE,EAAW5kE,GAAQ0kE,EAAStmD,QAAQ5mB,IAAQ,IAAamtE,EAAOntE,GAAOgU,EAAOhU,IAAQ,OAAOmtE,EA8BzRE,CAA8BJ,EAAM,CAAC,uBAAwB,qBAAsB,mBAAoB,0BAEtH,GAA4B,MAAxBL,KAAkCA,aAAgCzmE,KACpE,MAAM,IAAIq1B,MAAM,6DAGlB,GAA0B,MAAtBqxC,KAAgCA,aAA8B94D,UAAkC,IAAvB84D,EAC3E,MAAM,IAAIrxC,MAAM,qEAGlB,GAAwB,MAApBsxC,GAAwD,mBAArBA,EACrC,MAAM,IAAItxC,MAAM,6DAGlB,GAA6B,MAAzBuxC,GAAkE,mBAA1BA,EAC1C,MAAM,IAAIvxC,MAAM,kEAGlB,IAA8B,IAA1BuxC,IAA2D,MAAxBH,GAAsD,MAAtBC,GACrE,MAAM,IAAIrxC,MAAM,2GAGlB,MAAO,CACL+3B,SACAqZ,qBAAsBA,QAAwB/rE,EAC9CgsE,mBAA0C,MAAtBA,OAA6BhsE,EAAYgsE,EAC7DC,iBAAsC,MAApBA,OAA2BjsE,EAAYisE,EACzDC,sBAAgD,MAAzBA,OAAgClsE,EAAYksE,IA3DvEjuE,EAAQwuE,sBA+DR,SAA+BC,GAC7B,GAAIhuC,MAAMC,QAAQ+tC,GAChB,OAAOA,EAAaC,QAAO,SAACC,EAAKC,EAAallE,GAE5C,OADAilE,EAAI,IAAMjlE,GAAKklE,EACRD,IACN,IACE,GAA4B,kBAAjBF,GAA6C,MAAhBA,EAC7C,OAAOA,QAAgB1sE,EAGzB,MAAM,IAAI26B,MAAM,wE,iCC9ElB58B,OAAOC,eAAeC,EAAS,aAAc,CAC3CC,OAAO,IAETD,EAAQE,QAcR,SAA+B2uE,EAAWz5D,EAAM4/C,GAAM,IAElD8Y,EAIE9Y,EAJF8Y,qBACAC,EAGE/Y,EAHF+Y,mBACAC,EAEEhZ,EAFFgZ,iBACAC,EACEjZ,EADFiZ,sBAEIjsE,EA2HR,SAA4BoT,EAAM05D,EAAYb,GAC5C,IAAMr2D,GAAWk3D,EAAWl3D,SAAW,IAAIhO,SAEb,IAA1BqkE,GACFr2D,EAAQjT,KAAK,gBAGfmqE,EAAahvE,OAAO+B,OAAO,CACzB0oD,4BAA4B,EAC5BE,yBAAyB,EACzBN,WAAY,UACX2kB,EAAY,CACbl3D,YAGF,IACE,OAAO,EAAIm3D,EAAQx8B,OAAOn9B,EAAM05D,GAChC,MAAO/rD,GACP,IAAM3M,EAAM2M,EAAI3M,IAShB,MAPIA,IACF2M,EAAIR,SAAW,MAAO,EAAIysD,EAAW3E,kBAAkBj1D,EAAM,CAC3DQ,MAAOQ,IAET2M,EAAI3N,KAAO,8BAGP2N,GAtJIksD,CAAmB75D,EAAM4/C,EAAKP,OAAQwZ,GAClD3sB,EAAE4tB,qBAAqBltE,EAAK,CAC1BgsE,qBAEFa,EAAUX,SAASlsE,GACnB,IAAMmtE,EAAY,CAChBxmB,aAAc,GACdymB,iBAAkB,IAAI/nE,KAElBgoE,EAAS,CACb1mB,aAAc,GACdymB,iBAAkB,IAAI/nE,KAElBioE,EAAc,CAClBrvE,WAAO8B,GAUT,OARAu/C,EAAEj9C,SAASrC,EAAKutE,EAA2B,CACzCJ,YACAE,SACAC,cACAxB,uBACAC,qBACAE,0BAEKnuE,OAAO+B,OAAO,CACnBG,OACCstE,EAAYrvE,MAAQovE,EAASF,IA7ClC,IAAI7tB,EAQJ,SAAiC9gD,GAAO,GAAIA,GAAOA,EAAIE,WAAc,OAAOF,EAAO,GAAY,OAARA,GAA+B,kBAARA,GAAmC,oBAARA,EAAsB,MAAO,CAAEN,QAASM,GAAS,IAAIG,EAAQC,IAA4B,GAAID,GAASA,EAAME,IAAIL,GAAQ,OAAOG,EAAMG,IAAIN,GAAQ,IAAIO,EAAS,GAAQC,EAAwBlB,OAAOC,gBAAkBD,OAAOmB,yBAA0B,IAAK,IAAIC,KAAOV,EAAO,GAAIV,OAAOqB,UAAUC,eAAeC,KAAKb,EAAKU,GAAM,CAAE,IAAII,EAAON,EAAwBlB,OAAOmB,yBAAyBT,EAAKU,GAAO,KAAUI,IAASA,EAAKR,KAAOQ,EAAKC,KAAQzB,OAAOC,eAAegB,EAAQG,EAAKI,GAAgBP,EAAOG,GAAOV,EAAIU,GAAYH,EAAOb,QAAUM,EAASG,GAASA,EAAMY,IAAIf,EAAKO,GAAW,OAAOA,EARttBS,CAAwBC,EAAQ,KAEpCstE,EAAUttE,EAAQ,KAElButE,EAAavtE,EAAQ,KAEzB,SAASb,IAA6B,GAAuB,oBAAZe,QAAwB,OAAO,KAAM,IAAIhB,EAAQ,IAAIgB,QAAqE,OAA1Df,EAA2B,WAAc,OAAOD,GAAiBA,EAIlL,IAAM6uE,EAAU,gBAsChB,SAASD,EAA0B/sE,EAAMitE,EAAWp5D,GAClD,IAAIq5D,EAEAtlE,EAEJ,GAAIk3C,EAAEquB,cAAcntE,GAAO,CACzB,IAAoC,IAAhC6T,EAAM43D,sBACR,MAAM,IAAIvxC,MAAM,oFAEhBtyB,EAAO5H,EAAK4H,KAAKA,KACjBiM,EAAMi5D,YAAYrvE,OAAQ,MAEvB,KAAgC,IAA5BoW,EAAMi5D,YAAYrvE,OAAmBoW,EAAM43D,sBACpD,OACK,GAAI3sB,EAAEn3C,aAAa3H,IAAS8+C,EAAEsuB,gBAAgBptE,GACnD4H,EAAO5H,EAAK4H,KACZiM,EAAMi5D,YAAYrvE,OAAQ,MACrB,KAAIqhD,EAAE71C,gBAAgBjJ,GAI3B,OAHA4H,EAAO5H,EAAKvC,MACZoW,EAAMi5D,YAAYrvE,OAAQ,GAK5B,IAAKoW,EAAMi5D,YAAYrvE,QAAsC,MAA5BoW,EAAM03D,oBAA4D,MAA9B13D,EAAMy3D,sBACzE,MAAM,IAAIpxC,MAAM,2GAGlB,IAAIrmB,EAAMi5D,YAAYrvE,QAAuC,IAA7BoW,EAAM03D,qBAAkC13D,EAAM03D,oBAAsByB,GAASrqD,KAAK/a,KAAoE,OAAvDslE,EAAwBr5D,EAAMy3D,2BAAgC,EAAS4B,EAAsB7uE,IAAIuJ,IAAhO,CA5ByD,IAqCrD4M,EArCqD,GAgCzDy4D,EAAYA,EAAU7lE,SAIR6lE,EAAUlnE,OAAS,GAFzBjG,EAlCiD,EAkCvDE,KACAtB,EAnCuD,EAmCvDA,IAIEogD,EAAE71C,gBAAgBjJ,IAAS8+C,EAAEquB,cAAcntE,EAAM,CACnDomD,aAAc,kBAEd5xC,EAAO,SACEsqC,EAAEuuB,gBAAgBvtE,IAAmB,cAARpB,GAAuBogD,EAAE/5C,iBAAiBjF,IAAmB,cAARpB,GAAuBogD,EAAEwuB,WAAWxtE,IAAmB,WAARpB,EAC1I8V,EAAO,QACEsqC,EAAE/2C,sBAAsBjI,KAAYg/C,EAAEquB,cAAcntE,IAC7DwU,EAAO,YACPy4D,EAAYA,EAAU7lE,MAAM,GAAI,IAEhCoN,EADSsqC,EAAExO,YAAYtwC,IAAS8+C,EAAEquB,cAAcntE,GACzC,YAEA,QAnDgD,MAyDrD6T,EAAMi5D,YAAYrvE,MAAQoW,EAAMg5D,OAASh5D,EAAM84D,UAFjDxmB,EAvDuD,EAuDvDA,aACAymB,EAxDuD,EAwDvDA,iBAEFzmB,EAAahkD,KAAK,CAChByF,OACA4M,OACA+4D,QAAS,SAAA/tE,GAAG,OAMhB,SAA0BA,EAAKytE,GAG7B,IAFA,IAAIntE,EAASN,EAEJ0H,EAAI,EAAGA,EAAI+lE,EAAUlnE,OAAS,EAAGmB,IAAK,OAIzC+lE,EAAU/lE,GAFZxI,EAF2C,EAE3CA,IACAghB,EAH2C,EAG3CA,MAIA5f,OADYP,IAAVmgB,EACO5f,EAAOpB,GAEPoB,EAAOpB,GAAKghB,GAZe,MAmBpCutD,EAAUA,EAAUlnE,OAAS,GAF/BrH,EAjBsC,EAiBtCA,IACAghB,EAlBsC,EAkBtCA,MAEF,MAAO,CACL5f,SACApB,MACAghB,SA7BgB8tD,CAAiBhuE,EAAKytE,IACtCQ,YAAab,EAAiBvuE,IAAIuJ,KAEpCglE,EAAiB3nE,IAAI2C,M,6CCrHvBtK,OAAOC,eAAeC,EAAS,aAAc,CAC3CC,OAAO,IAETD,EAAQE,QAQR,SAA8BgwE,EAAUzB,GACtC,IAAMzsE,EAAMs/C,EAAE16C,UAAUspE,EAASluE,KAE7BysE,IACFyB,EAASvnB,aAAale,SAAQ,SAAAlK,GAC5B,IAAKzgC,OAAOqB,UAAUC,eAAeC,KAAKotE,EAAcluC,EAAYn2B,MAAO,CACzE,IAAM+lE,EAAkB5vC,EAAYn2B,KACpC,MAAM,IAAIsyB,MAAJ,4CAA+CyzC,EAA/C,mOAE+DA,EAF/D,uDAG0BA,EAH1B,aAMVrwE,OAAOmqD,KAAKwkB,GAAchkC,SAAQ,SAAAvpC,GAChC,IAAKgvE,EAASd,iBAAiBvuE,IAAIK,GACjC,MAAM,IAAIw7B,MAAJ,gCAAmCx7B,EAAnC,gBAaZ,OARAgvE,EAASvnB,aAAa/+C,QAAQwmE,UAAU3lC,SAAQ,SAAAlK,GAC9C,KAUJ,SAA0BA,EAAav+B,EAAK4sE,GACtCruC,EAAY0vC,cACVxvC,MAAMC,QAAQkuC,GAChBA,EAAcA,EAAY3iE,KAAI,SAAAzJ,GAAI,OAAI8+C,EAAE16C,UAAUpE,MAClB,kBAAhBosE,IAChBA,EAActtB,EAAE16C,UAAUgoE,KALyB,MAanDruC,EAAYwvC,QAAQ/tE,GAHtBM,EAVqD,EAUrDA,OACApB,EAXqD,EAWrDA,IACAghB,EAZqD,EAYrDA,MAGF,GAAyB,WAArBqe,EAAYvpB,MAKd,GAJ2B,kBAAhB43D,IACTA,EAActtB,EAAE+uB,cAAczB,KAG3BA,IAAgBttB,EAAE71C,gBAAgBmjE,GACrC,MAAM,IAAIlyC,MAAM,qCAEb,GAAyB,cAArB6D,EAAYvpB,UACPjV,IAAVmgB,EACG0sD,EAEMnuC,MAAMC,QAAQkuC,GACvBA,EAActtB,EAAEn8C,eAAeypE,GACC,kBAAhBA,EAChBA,EAActtB,EAAEz3C,oBAAoBy3C,EAAEh8C,WAAWspE,IACvCttB,EAAExO,YAAY87B,KACxBA,EAActtB,EAAEz3C,oBAAoB+kE,IANpCA,EAActtB,EAAEgvB,iBASd1B,IAAgBnuC,MAAMC,QAAQkuC,KACL,kBAAhBA,IACTA,EAActtB,EAAEh8C,WAAWspE,IAGxBttB,EAAExO,YAAY87B,KACjBA,EAActtB,EAAEz3C,oBAAoB+kE,UAIrC,GAAyB,UAArBruC,EAAYvpB,MAKrB,GAJ2B,kBAAhB43D,IACTA,EAActtB,EAAEh8C,WAAWspE,SAGf7sE,IAAVmgB,EAAqB,MAAM,IAAIwa,MAAM,2BAMzC,GAJ2B,kBAAhBkyC,IACTA,EAActtB,EAAEh8C,WAAWspE,IAGzBnuC,MAAMC,QAAQkuC,GAChB,MAAM,IAAIlyC,MAAM,mDAIpB,QAAc36B,IAAVmgB,EACFo/B,EAAE4sB,SAAS5rE,EAAQpB,EAAK0tE,GACxBtsE,EAAOpB,GAAO0tE,MACT,CACL,IAAM7oB,EAAQzjD,EAAOpB,GAAK0I,QAED,cAArB22B,EAAYvpB,MAA6C,UAArBupB,EAAYvpB,KAC/B,MAAf43D,EACF7oB,EAAMlvC,OAAOqL,EAAO,GACXue,MAAMC,QAAQkuC,GACvB7oB,EAAMlvC,OAAN,MAAAkvC,EAAK,CAAQ7jC,EAAO,GAAf,SAAqB0sD,KAE1B7oB,EAAM7jC,GAAS0sD,EAGjB7oB,EAAM7jC,GAAS0sD,EAGjBttB,EAAE4sB,SAAS5rE,EAAQpB,EAAK6kD,GACxBzjD,EAAOpB,GAAO6kD,GAzFZwqB,CAAiBhwC,EAAav+B,EAAKysE,GAAgBA,EAAaluC,EAAYn2B,OAAS,MACrF,MAAO+2B,GAEP,MADAA,EAAE5e,QAAF,uCAA4Cge,EAAYn2B,KAAxD,cAAkE+2B,EAAE5e,SAC9D4e,MAGHn/B,GAlCT,IAAIs/C,EAIJ,SAAiC9gD,GAAO,GAAIA,GAAOA,EAAIE,WAAc,OAAOF,EAAO,GAAY,OAARA,GAA+B,kBAARA,GAAmC,oBAARA,EAAsB,MAAO,CAAEN,QAASM,GAAS,IAAIG,EAAQC,IAA4B,GAAID,GAASA,EAAME,IAAIL,GAAQ,OAAOG,EAAMG,IAAIN,GAAQ,IAAIO,EAAS,GAAQC,EAAwBlB,OAAOC,gBAAkBD,OAAOmB,yBAA0B,IAAK,IAAIC,KAAOV,EAAO,GAAIV,OAAOqB,UAAUC,eAAeC,KAAKb,EAAKU,GAAM,CAAE,IAAII,EAAON,EAAwBlB,OAAOmB,yBAAyBT,EAAKU,GAAO,KAAUI,IAASA,EAAKR,KAAOQ,EAAKC,KAAQzB,OAAOC,eAAegB,EAAQG,EAAKI,GAAgBP,EAAOG,GAAOV,EAAIU,GAAYH,EAAOb,QAAUM,EAASG,GAASA,EAAMY,IAAIf,EAAKO,GAAW,OAAOA,EAJttBS,CAAwBC,EAAQ,KAExC,SAASb,IAA6B,GAAuB,oBAAZe,QAAwB,OAAO,KAAM,IAAIhB,EAAQ,IAAIgB,QAAqE,OAA1Df,EAA2B,WAAc,OAAOD,GAAiBA,I,6CCPlLb,OAAOC,eAAeC,EAAS,aAAc,CAC3CC,OAAO,IAETD,EAAQE,aAAU,EAElB,IAAIswE,EAAqB/uE,EAAQ,KAE7BuL,EAAwBa,EAAuBpM,EAAQ,MAEvDiK,EAAsBmC,EAAuBpM,EAAQ,MAErDgvE,EAAgC5iE,EAAuBpM,EAAQ,MAE/D2C,EAAQ3C,EAAQ,KAEhBivE,EAAW7iE,EAAuBpM,EAAQ,MAE1CkvE,EAAkB9iE,EAAuBpM,EAAQ,OAErD,SAASoM,EAAuBrN,GAAO,OAAOA,GAAOA,EAAIE,WAAaF,EAAM,CAAEN,QAASM,GAEvF,IAAMowE,EAAoB,SAAAC,GAAQ,OAAI/wE,OAAOmqD,KAAKymB,EAASxwE,QAAQ2wE,IAAWlnB,QAAO,SAAAv/C,GAAI,MAAI,SAAS+a,KAAK/a,OAErGjI,EAAiB,IAAIkF,IAAJ,YAAYupE,EAAkB,YAA9B,EAA6CA,EAAkB,cAElFhvE,GAAW,EAAI4uE,EAAmBlkC,UAAS,SAACwkC,EAAKvhE,GACnDuhE,EAAIC,cAAc,GAD6C,IAG7DC,EACEzhE,EADFyhE,MAEIC,EAAUC,SAChB,MAAO,CACL9mE,KAAM,oBACN+mE,QAAS,CACPC,yBADO,SACkBnvE,GAClBA,EAAKnB,IAAI,eAAeuwE,uBAC7B,EAAIZ,EAA8BvwE,SAAS+B,IAG7CqvE,iBANO,SAMUrvE,GAAM,IAEnBO,EACEP,EADFO,KAEIkE,EAAMlE,EAAKmJ,IAAM1J,EAAKM,MAAMoI,sBAAsB,SACxD1I,EAAKgF,YAAY7C,EAAMc,MAAM4F,oBAAoB,MAAO,CAAC1G,EAAMc,MAAM6F,mBAAmBrE,EAAKtC,EAAMc,MAAMwI,aAAalL,QAGxH+uE,gBAdO,SAcStvE,EAAMoU,GAAO,IAEzB7T,EACEP,EADFO,KAEF,IAAIA,EAAKyuE,GAAT,CACA,IAAMO,GAAW,EAAI9lE,EAAoBxL,SAAS+B,GAE9CuvE,GAAYA,IAAahvE,EAC3BP,EAAKgF,YAAYuqE,IAInBhvE,EAAKyuE,IAAW,EAChBhvE,EAAKgF,aAAY,EAAI0pE,EAAgBzwE,SAAS+B,EAAMoU,EAAMnU,KAAMC,EAAgB6uE,IAE5E/uE,EAAKsF,sBACP,EAAIyF,EAAsB9M,SAAS+B,GAE/BA,EAAKnB,IAAI,UAAUuF,6BACrBpE,EAAKnB,IAAI,UAAU2wE,qCAS/BzxE,EAAQE,QAAU0B,G,6CC3ElB9B,OAAOC,eAAeC,EAAS,aAAc,CAC3CC,OAAO,IAETD,EAAQG,QAAUH,EAAQI,WAAaJ,EAAQM,UAAYN,EAAQK,WAAaL,EAAQO,WAAQ,EAEhG,IAAI+gD,EAIJ,SAAiC9gD,GAAO,GAAIA,GAAOA,EAAIE,WAAc,OAAOF,EAAO,GAAY,OAARA,GAA+B,kBAARA,GAAmC,oBAARA,EAAsB,MAAO,CAAEN,QAASM,GAAS,IAAIG,EAAQC,IAA4B,GAAID,GAASA,EAAME,IAAIL,GAAQ,OAAOG,EAAMG,IAAIN,GAAQ,IAAIO,EAAS,GAAQC,EAAwBlB,OAAOC,gBAAkBD,OAAOmB,yBAA0B,IAAK,IAAIC,KAAOV,EAAO,GAAIV,OAAOqB,UAAUC,eAAeC,KAAKb,EAAKU,GAAM,CAAE,IAAII,EAAON,EAAwBlB,OAAOmB,yBAAyBT,EAAKU,GAAO,KAAUI,IAASA,EAAKR,KAAOQ,EAAKC,KAAQzB,OAAOC,eAAegB,EAAQG,EAAKI,GAAgBP,EAAOG,GAAOV,EAAIU,GAAYH,EAAOb,QAAUM,EAASG,GAASA,EAAMY,IAAIf,EAAKO,GAAW,OAAOA,EAJttBS,CAAwBC,EAAQ,KAExC,SAASb,IAA6B,GAAuB,oBAAZe,QAAwB,OAAO,KAAM,IAAIhB,EAAQ,IAAIgB,QAAqE,OAA1Df,EAA2B,WAAc,OAAOD,GAAiBA,EAIlL,SAAS+wE,EAAuBtkE,GAC9B,MAAO,CACLgI,KAAM,SAAA8vB,GAAG,wCAA+BA,IACxCgpC,SAAU,aACVyD,OAAQ,SAAA3vE,GACN,OAAOoL,EAAGpL,EAAI7B,QAAQqD,KAAKoG,MAAM,MAKvC,IAAMrJ,EAAQmxE,GAAuB,SAAAluE,GACnC,OAAIA,EAAK+E,OAAS,EACT/E,EAEAA,EAAK,MAGhBxD,EAAQO,MAAQA,EAChB,IAAMF,EAAaqxE,GAAuB,SAAAluE,GAAI,OAAIA,KAClDxD,EAAQK,WAAaA,EACrB,IAAMC,EAAYoxE,GAAuB,SAAAluE,GACvC,GAAoB,IAAhBA,EAAK+E,OACP,MAAM,IAAIm0B,MAAM,4BAGlB,GAAIl5B,EAAK+E,OAAS,EAChB,MAAM,IAAIm0B,MAAM,4CAGlB,OAAOl5B,EAAK,MAEdxD,EAAQM,UAAYA,EACpB,IAAMF,EAAa,CACjBgV,KAAM,SAAA8vB,GAAG,mBAAUA,EAAV,QACTgpC,SAAU,SAAAlsE,GACR,GAAIA,EAAI7B,QAAQqD,KAAK+E,OAAS,EAC5B,MAAM,IAAIm0B,MAAM,4CAGlB,GAAqC,IAAjCt8B,EAAWuxE,OAAO3vE,GAAK4T,MACzB,MAAM,IAAI8mB,MAAM,kCAGpBi1C,OAAQ,YAEF,IADJxxE,EACI,EADJA,QAEOqhC,EADH,EACWrhC,EAAQqD,KADnB,MAGJ,OADA89C,EAAEswB,0BAA0BpwC,GACrBA,EAAKphC,aAGhBJ,EAAQI,WAAaA,EAMrBJ,EAAQG,QALQ,CACdiV,KAAM,SAAA8vB,GAAG,OAAIA,GACbgpC,SAAU,aACVyD,OAAQ,SAAA3vE,GAAG,OAAIA,EAAI7B,W,iCClErBL,OAAOC,eAAeC,EAAS,aAAc,CAC3CC,OAAO,IAETD,EAAQE,QAcR,SAAS2xE,EAAsBhD,EAAWiD,GACxC,IAAMC,EAAkB,IAAIpwE,QACtBqwE,EAAmB,IAAIrwE,QACvBswE,EAAaH,IAAe,EAAI9H,EAASkE,UAAU,MACzD,OAAOpuE,OAAO+B,QAAO,SAACqwE,GAAiB,2BAAT3oE,EAAS,iCAATA,EAAS,kBACrC,GAAmB,kBAAR2oE,EAAkB,CAC3B,GAAI3oE,EAAKhB,OAAS,EAAG,MAAM,IAAIm0B,MAAM,4BACrC,OAAOy1C,GAAc,EAAIC,EAAQlyE,SAAS2uE,EAAWqD,GAAK,EAAIlI,EAASzlE,OAAO0tE,GAAY,EAAIjI,EAASkE,UAAU3kE,EAAK,OACjH,GAAIk3B,MAAMC,QAAQwxC,GAAM,CAC7B,IAAIG,EAAUN,EAAgBjxE,IAAIoxE,GAOlC,OALKG,IACHA,GAAU,EAAIC,EAASpyE,SAAS2uE,EAAWqD,EAAKD,GAChDF,EAAgBxwE,IAAI2wE,EAAKG,IAGpBF,EAAcE,EAAQ9oE,IACxB,GAAmB,kBAAR2oE,GAAoBA,EAAK,CACzC,GAAI3oE,EAAKhB,OAAS,EAAG,MAAM,IAAIm0B,MAAM,4BACrC,OAAOm1C,EAAsBhD,GAAW,EAAI7E,EAASzlE,OAAO0tE,GAAY,EAAIjI,EAASkE,UAAUgE,KAGjG,MAAM,IAAIx1C,MAAJ,2CAA8Cw1C,MACnD,CACDlwE,IAAK,SAACkwE,GAAiB,2BAAT3oE,EAAS,iCAATA,EAAS,kBACrB,GAAmB,kBAAR2oE,EAAkB,CAC3B,GAAI3oE,EAAKhB,OAAS,EAAG,MAAM,IAAIm0B,MAAM,4BACrC,OAAO,EAAI01C,EAAQlyE,SAAS2uE,EAAWqD,GAAK,EAAIlI,EAASzlE,QAAO,EAAIylE,EAASzlE,OAAO0tE,GAAY,EAAIjI,EAASkE,UAAU3kE,EAAK,KAAMgpE,GAA3H,GACF,GAAI9xC,MAAMC,QAAQwxC,GAAM,CAC7B,IAAIG,EAAUL,EAAiBlxE,IAAIoxE,GAOnC,OALKG,IACHA,GAAU,EAAIC,EAASpyE,SAAS2uE,EAAWqD,GAAK,EAAIlI,EAASzlE,OAAO0tE,EAAYM,IAChFP,EAAiBzwE,IAAI2wE,EAAKG,IAGrBA,EAAQ9oE,EAAR8oE,GAGT,MAAM,IAAI31C,MAAJ,2CAA8Cw1C,QAnD1D,IAAIlI,EAAWvoE,EAAQ,KAEnB2wE,EAAUvkE,EAAuBpM,EAAQ,MAEzC6wE,EAAWzkE,EAAuBpM,EAAQ,MAE9C,SAASoM,EAAuBrN,GAAO,OAAOA,GAAOA,EAAIE,WAAaF,EAAM,CAAEN,QAASM,GAEvF,IAAM+xE,GAAiB,EAAIvI,EAASkE,UAAU,CAC5CH,oBAAoB,IA+CtB,SAASoE,EAAc/kE,GACrB,IAAIolE,EAAY,GAEhB,IACE,MAAM,IAAI91C,MACV,MAAO/Z,GACHA,EAAM1M,QACRu8D,EAAY7vD,EAAM1M,MAAM62D,MAAM,MAAMljE,MAAM,GAAG2pD,KAAK,OAItD,OAAO,SAAAxmD,GACL,IACE,OAAOK,EAAGL,GACV,MAAOgW,GAEP,MADAA,EAAI9M,OAAJ,+BAAqCu8D,GAC/BzvD,M,iCC7EZjjB,OAAOC,eAAeC,EAAS,aAAc,CAC3CC,OAAO,IAETD,EAAQE,QAUR,SAAwB2uE,EAAWz5D,EAAM4/C,GAEvC,IAAIkb,EACJ,OAFA96D,EAAOy5D,EAAUz5D,KAAKA,GAEf,SAAArI,GACL,IAAM0hE,GAAe,EAAIzE,EAASwE,uBAAuBzhE,GAEzD,OADKmjE,IAAUA,GAAW,EAAIuC,EAAOvyE,SAAS2uE,EAAWz5D,EAAM4/C,IACxD6Z,EAAU8C,QAAO,EAAIe,EAAUxyE,SAASgwE,EAAUzB,MAd7D,IAAIzE,EAAWvoE,EAAQ,KAEnBgxE,EAAS5kE,EAAuBpM,EAAQ,MAExCixE,EAAY7kE,EAAuBpM,EAAQ,MAE/C,SAASoM,EAAuBrN,GAAO,OAAOA,GAAOA,EAAIE,WAAaF,EAAM,CAAEN,QAASM,K,qDCXvFV,OAAOC,eAAeC,EAAS,aAAc,CAC3CC,OAAO,IAETD,EAAQwsE,gBAAkBA,EAC1BxsE,EAAQysE,SAAWA,EACnBzsE,EAAQE,QAkHR,SAAmBkV,GAAoB,IAAd7F,EAAc,uDAAJ,GACjC,GAAIi9D,EAAgBj9D,GAAU,CAC5B,IAAM67D,EAAQqB,EAASl9D,GACjBm9D,EAAOvB,EAAQC,GACrB,OAAOuH,EAAgBjG,EAAMt3D,GAE7B,OAAOA,GAtHX,IAMgC5U,EAN5BoyE,EAUJ,SAAiCpyE,GAAO,GAAIA,GAAOA,EAAIE,WAAc,OAAOF,EAAO,GAAY,OAARA,GAA+B,kBAARA,GAAmC,oBAARA,EAAsB,MAAO,CAAEN,QAASM,GAAS,IAAIG,EAAQC,IAA4B,GAAID,GAASA,EAAME,IAAIL,GAAQ,OAAOG,EAAMG,IAAIN,GAAQ,IAAIO,EAAS,GAAQC,EAAwBlB,OAAOC,gBAAkBD,OAAOmB,yBAA0B,IAAK,IAAIC,KAAOV,EAAO,GAAIV,OAAOqB,UAAUC,eAAeC,KAAKb,EAAKU,GAAM,CAAE,IAAII,EAAON,EAAwBlB,OAAOmB,yBAAyBT,EAAKU,GAAO,KAAUI,IAASA,EAAKR,KAAOQ,EAAKC,KAAQzB,OAAOC,eAAegB,EAAQG,EAAKI,GAAgBP,EAAOG,GAAOV,EAAIU,GAAYH,EAAOb,QAAUM,EAASG,GAASA,EAAMY,IAAIf,EAAKO,GAAW,OAAOA,EAV7sBS,CAAwBC,EAAQ,MAE7CoxE,EAA6BpxE,EAAQ,KAErCqxE,GAE4BtyE,EAFIiB,EAAQ,OAESjB,EAAIE,WAAaF,EAAM,CAAEN,QAASM,GAEvF,SAASI,IAA6B,GAAuB,oBAAZe,QAAwB,OAAO,KAAM,IAAIhB,EAAQ,IAAIgB,QAAqE,OAA1Df,EAA2B,WAAc,OAAOD,GAAiBA,EAIlL,IAAMoyE,EAAoB,IAAI1rE,IAAI,CAAC,KAAM,QAAS,OAAQ,MAAO,KAAM,QAEvE,SAAS8jE,EAAQC,GACf,MAAO,CACLt8D,QAASs8D,EAAM4H,KACfC,YAAa7H,EAAM8H,OACnBC,cAAe/H,EAAM8H,OACrBE,WAAYhI,EAAM8H,OAClB/F,OAAQ/B,EAAMiI,QACdvjE,OAAQs7D,EAAMkI,MACdpyC,MAAOkqC,EAAMiI,QACbl9D,QAASi1D,EAAME,KACfh6B,QAAS85B,EAAMmI,MAAMC,MAAM/H,MAI/B,IAEIgI,EAFE/H,EAAU,0BACVgI,EAAU,cAIZC,EACEf,EADFe,aAEIC,EAAU,iBAEVC,EAAe,SAAUrkE,EAAOqS,EAAQsrC,GAC5C,GAAmB,SAAf39C,EAAMwH,KAAiB,CACzB,IAAI,EAAI67D,EAA2B5sD,WAAWzW,EAAMvP,SAAU,EAAI4yE,EAA2B/sD,sBAAsBtW,EAAMvP,OAAO,IAAS8yE,EAAkBlyE,IAAI2O,EAAMvP,OACnK,MAAO,UAGT,GAAI2zE,EAAQzuD,KAAK3V,EAAMvP,SAAgC,MAArBktD,EAAKtrC,EAAS,IAA4C,MAA9BsrC,EAAK/nB,OAAOvjB,EAAS,EAAG,IACpF,MAAO,gBAGT,GAAIrS,EAAMvP,MAAM,KAAOuP,EAAMvP,MAAM,GAAG6zE,cACpC,MAAO,cAIX,MAAmB,eAAftkE,EAAMwH,MAAyB08D,EAAQvuD,KAAK3V,EAAMvP,OAC7C,UAGU,YAAfuP,EAAMwH,MAAuC,MAAhBxH,EAAMvP,OAAiC,MAAhBuP,EAAMvP,MAIvDuP,EAAMwH,KAHJ,cAmBb,SAAS27D,EAAgBjG,EAAMvf,GAC7B,IADmC,EAC/Bkf,EAAc,GADiB,IAM9BoH,EAAStmB,IANqB,mCAIjCn2C,EAJiC,EAIjCA,KACA/W,EALiC,EAKjCA,MAEM8zE,EAAWrH,EAAK11D,GAGpBq1D,GADE0H,EACa9zE,EAAM6sE,MAAMpB,GAASz/D,KAAI,SAAAi5B,GAAG,OAAI6uC,EAAS7uC,MAAMquB,KAAK,MAEpDtzD,GATnB,2BAGqB,IANc,8BAgBnC,OAAOosE,EAGT,SAASG,EAAgBj9D,GACvB,OAAOujE,EAAO5yE,QAAQ8zE,eAAiBzkE,EAAQg9D,WAGjD,SAASE,EAASl9D,GAChB,IAAI67D,EAAQ0H,EAAO5yE,QASnB,OAPIqP,EAAQg9D,aACVnB,EAAQ,IAAI0H,EAAO5yE,QAAQ8E,YAAY,CACrCivE,SAAS,EACTC,MAAO,KAIJ9I,EA9CPqI,EAAQ,QAAG,WAAWtmB,GAAX,4EAGFrrC,EAAQ8wD,EAAW1yE,QAAQ+hB,KAAKkrC,IAH9B,gBAKP,OADM39C,EAAQmkE,EAAa7xD,GAJpB,SAKD,CACJ9K,KAAM68D,EAAarkE,EAAOsS,EAAMI,MAAOirC,GACvCltD,MAAOuP,EAAMvP,OAPR,iE,iCCtEbH,OAAOC,eAAeC,EAAS,aAAc,CAC3CC,OAAO,IAETD,EAAQE,QAUR,SAAyB2uE,EAAWqD,EAAKld,GAAM,MA0B/C,SAA0B6Z,EAAWqD,EAAKld,GACxC,IAAI1B,EACA6gB,EACAjE,EACAzhE,EAAS,GAEb,EAAG,CAED,IAAMmiC,EAASwjC,EAAkBlC,EADjCzjE,GAAU,KAEV6kD,EAAQ1iB,EAAO0iB,MACf6gB,EAAU,IAAI9sE,IAAIisD,GAClB4c,GAAW,EAAIuC,EAAOvyE,SAAS2uE,EAAWA,EAAUz5D,KAAKw7B,EAAOx7B,MAAO,CACrEq/C,OAAQO,EAAKP,OACbqZ,qBAAsB,IAAIzmE,IAAIupC,EAAO0iB,MAAMjrD,OAAO2sD,EAAK8Y,qBAAuBrtC,MAAMsxB,KAAKiD,EAAK8Y,sBAAwB,KACtHC,mBAAoB/Y,EAAK+Y,mBACzBC,iBAAkBhZ,EAAKgZ,iBACvBC,sBAAuBjZ,EAAKiZ,8BAEvBiC,EAASvnB,aAAanoB,MAAK,SAAAD,GAAW,OAAIA,EAAY0vC,aAAekE,EAAQtzE,IAAI0/B,EAAYn2B,UAEtG,MAAO,CACL8lE,WACA5c,SA5CE+gB,CAAiBxF,EAAWqD,EAAKld,GAFnCkb,EAF2C,EAE3CA,SACA5c,EAH2C,EAG3CA,MAEF,OAAO,SAAAvmD,GACL,IAAMunE,EAAsB,GAI5B,OAHAvnE,EAAI09B,SAAQ,SAACmkC,EAAallE,GACxB4qE,EAAoBhhB,EAAM5pD,IAAMklE,KAE3B,SAAA7hE,GACL,IAAM0hE,GAAe,EAAIzE,EAASwE,uBAAuBzhE,GAUzD,OARI0hE,GACF3uE,OAAOmqD,KAAKwkB,GAAchkC,SAAQ,SAAAvpC,GAChC,GAAIpB,OAAOqB,UAAUC,eAAeC,KAAKizE,EAAqBpzE,GAC5D,MAAM,IAAIw7B,MAAM,sCAKfmyC,EAAU8C,QAAO,EAAIe,EAAUxyE,SAASgwE,EAAUzB,EAAe3uE,OAAO+B,OAAO4sE,EAAc6F,GAAuBA,OA7BjI,IAAItK,EAAWvoE,EAAQ,KAEnBgxE,EAAS5kE,EAAuBpM,EAAQ,MAExCixE,EAAY7kE,EAAuBpM,EAAQ,MAE/C,SAASoM,EAAuBrN,GAAO,OAAOA,GAAOA,EAAIE,WAAaF,EAAM,CAAEN,QAASM,GAsDvF,SAAS4zE,EAAkBlC,EAAKzjE,GAI9B,IAHA,IAAM6kD,EAAQ,GACVl+C,EAAO88D,EAAI,GAENxoE,EAAI,EAAGA,EAAIwoE,EAAI3pE,OAAQmB,IAAK,CACnC,IAAMzJ,EAAQ,GAAH,OAAMwO,GAAN,OAAe/E,EAAI,GAC9B4pD,EAAM3uD,KAAK1E,GACXmV,GAAQnV,EAAQiyE,EAAIxoE,GAGtB,MAAO,CACL4pD,QACAl+C","file":"static/js/vendors-runtime-template.9b76b4ce.chunk.js","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports.program = exports.expression = exports.statements = exports.statement = exports.smart = void 0;\n\nvar formatters = _interopRequireWildcard(require(\"./formatters\"));\n\nvar _builder = _interopRequireDefault(require(\"./builder\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nconst smart = (0, _builder.default)(formatters.smart);\nexports.smart = smart;\nconst statement = (0, _builder.default)(formatters.statement);\nexports.statement = statement;\nconst statements = (0, _builder.default)(formatters.statements);\nexports.statements = statements;\nconst expression = (0, _builder.default)(formatters.expression);\nexports.expression = expression;\nconst program = (0, _builder.default)(formatters.program);\nexports.program = program;\n\nvar _default = Object.assign(smart.bind(undefined), {\n  smart,\n  statement,\n  statements,\n  expression,\n  program,\n  ast: smart.ast\n});\n\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = transformClass;\n\nvar _helperFunctionName = _interopRequireDefault(require(\"@babel/helper-function-name\"));\n\nvar _helperReplaceSupers = _interopRequireWildcard(require(\"@babel/helper-replace-supers\"));\n\nvar _helperOptimiseCallExpression = _interopRequireDefault(require(\"@babel/helper-optimise-call-expression\"));\n\nvar defineMap = _interopRequireWildcard(require(\"@babel/helper-define-map\"));\n\nvar _core = require(\"@babel/core\");\n\nvar _helperAnnotateAsPure = _interopRequireDefault(require(\"@babel/helper-annotate-as-pure\"));\n\nvar _inlineCreateSuperHelpers = _interopRequireDefault(require(\"./inline-createSuper-helpers\"));\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction buildConstructor(classRef, constructorBody, node) {\n  const func = _core.types.functionDeclaration(_core.types.cloneNode(classRef), [], constructorBody);\n\n  _core.types.inherits(func, node);\n\n  return func;\n}\n\nfunction transformClass(path, file, builtinClasses, isLoose) {\n  const classState = {\n    parent: undefined,\n    scope: undefined,\n    node: undefined,\n    path: undefined,\n    file: undefined,\n    classId: undefined,\n    classRef: undefined,\n    superFnId: undefined,\n    superName: undefined,\n    superReturns: [],\n    isDerived: false,\n    extendsNative: false,\n    construct: undefined,\n    constructorBody: undefined,\n    userConstructor: undefined,\n    userConstructorPath: undefined,\n    hasConstructor: false,\n    instancePropBody: [],\n    instancePropRefs: {},\n    staticPropBody: [],\n    body: [],\n    superThises: [],\n    pushedConstructor: false,\n    pushedInherits: false,\n    protoAlias: null,\n    isLoose: false,\n    hasInstanceDescriptors: false,\n    hasStaticDescriptors: false,\n    instanceMutatorMap: {},\n    staticMutatorMap: {}\n  };\n\n  const setState = newState => {\n    Object.assign(classState, newState);\n  };\n\n  const findThisesVisitor = _core.traverse.visitors.merge([_helperReplaceSupers.environmentVisitor, {\n    ThisExpression(path) {\n      classState.superThises.push(path);\n    }\n\n  }]);\n\n  function pushToMap(node, enumerable, kind = \"value\", scope) {\n    let mutatorMap;\n\n    if (node.static) {\n      setState({\n        hasStaticDescriptors: true\n      });\n      mutatorMap = classState.staticMutatorMap;\n    } else {\n      setState({\n        hasInstanceDescriptors: true\n      });\n      mutatorMap = classState.instanceMutatorMap;\n    }\n\n    const map = defineMap.push(mutatorMap, node, kind, classState.file, scope);\n\n    if (enumerable) {\n      map.enumerable = _core.types.booleanLiteral(true);\n    }\n\n    return map;\n  }\n\n  function maybeCreateConstructor() {\n    let hasConstructor = false;\n    const paths = classState.path.get(\"body.body\");\n\n    for (const path of paths) {\n      hasConstructor = path.equals(\"kind\", \"constructor\");\n      if (hasConstructor) break;\n    }\n\n    if (hasConstructor) return;\n    let params, body;\n\n    if (classState.isDerived) {\n      const constructor = _core.template.expression.ast`\n        (function () {\n          super(...arguments);\n        })\n      `;\n      params = constructor.params;\n      body = constructor.body;\n    } else {\n      params = [];\n      body = _core.types.blockStatement([]);\n    }\n\n    classState.path.get(\"body\").unshiftContainer(\"body\", _core.types.classMethod(\"constructor\", _core.types.identifier(\"constructor\"), params, body));\n  }\n\n  function buildBody() {\n    maybeCreateConstructor();\n    pushBody();\n    verifyConstructor();\n\n    if (classState.userConstructor) {\n      const {\n        constructorBody,\n        userConstructor,\n        construct\n      } = classState;\n      constructorBody.body = constructorBody.body.concat(userConstructor.body.body);\n\n      _core.types.inherits(construct, userConstructor);\n\n      _core.types.inherits(constructorBody, userConstructor.body);\n    }\n\n    pushDescriptors();\n  }\n\n  function pushBody() {\n    const classBodyPaths = classState.path.get(\"body.body\");\n\n    for (const path of classBodyPaths) {\n      const node = path.node;\n\n      if (path.isClassProperty()) {\n        throw path.buildCodeFrameError(\"Missing class properties transform.\");\n      }\n\n      if (node.decorators) {\n        throw path.buildCodeFrameError(\"Method has decorators, put the decorator plugin before the classes one.\");\n      }\n\n      if (_core.types.isClassMethod(node)) {\n        const isConstructor = node.kind === \"constructor\";\n        const replaceSupers = new _helperReplaceSupers.default({\n          methodPath: path,\n          objectRef: classState.classRef,\n          superRef: classState.superName,\n          isLoose: classState.isLoose,\n          file: classState.file\n        });\n        replaceSupers.replace();\n        const superReturns = [];\n        path.traverse(_core.traverse.visitors.merge([_helperReplaceSupers.environmentVisitor, {\n          ReturnStatement(path) {\n            if (!path.getFunctionParent().isArrowFunctionExpression()) {\n              superReturns.push(path);\n            }\n          }\n\n        }]));\n\n        if (isConstructor) {\n          pushConstructor(superReturns, node, path);\n        } else {\n          pushMethod(node, path);\n        }\n      }\n    }\n  }\n\n  function clearDescriptors() {\n    setState({\n      hasInstanceDescriptors: false,\n      hasStaticDescriptors: false,\n      instanceMutatorMap: {},\n      staticMutatorMap: {}\n    });\n  }\n\n  function pushDescriptors() {\n    pushInheritsToBody();\n    const {\n      body\n    } = classState;\n    let instanceProps;\n    let staticProps;\n\n    if (classState.hasInstanceDescriptors) {\n      instanceProps = defineMap.toClassObject(classState.instanceMutatorMap);\n    }\n\n    if (classState.hasStaticDescriptors) {\n      staticProps = defineMap.toClassObject(classState.staticMutatorMap);\n    }\n\n    if (instanceProps || staticProps) {\n      if (instanceProps) {\n        instanceProps = defineMap.toComputedObjectFromClass(instanceProps);\n      }\n\n      if (staticProps) {\n        staticProps = defineMap.toComputedObjectFromClass(staticProps);\n      }\n\n      let args = [_core.types.cloneNode(classState.classRef), _core.types.nullLiteral(), _core.types.nullLiteral()];\n      if (instanceProps) args[1] = instanceProps;\n      if (staticProps) args[2] = staticProps;\n      let lastNonNullIndex = 0;\n\n      for (let i = 0; i < args.length; i++) {\n        if (!_core.types.isNullLiteral(args[i])) lastNonNullIndex = i;\n      }\n\n      args = args.slice(0, lastNonNullIndex + 1);\n      body.push(_core.types.expressionStatement(_core.types.callExpression(classState.file.addHelper(\"createClass\"), args)));\n    }\n\n    clearDescriptors();\n  }\n\n  function wrapSuperCall(bareSuper, superRef, thisRef, body) {\n    const bareSuperNode = bareSuper.node;\n    let call;\n\n    if (classState.isLoose) {\n      bareSuperNode.arguments.unshift(_core.types.thisExpression());\n\n      if (bareSuperNode.arguments.length === 2 && _core.types.isSpreadElement(bareSuperNode.arguments[1]) && _core.types.isIdentifier(bareSuperNode.arguments[1].argument, {\n        name: \"arguments\"\n      })) {\n        bareSuperNode.arguments[1] = bareSuperNode.arguments[1].argument;\n        bareSuperNode.callee = _core.types.memberExpression(_core.types.cloneNode(superRef), _core.types.identifier(\"apply\"));\n      } else {\n        bareSuperNode.callee = _core.types.memberExpression(_core.types.cloneNode(superRef), _core.types.identifier(\"call\"));\n      }\n\n      call = _core.types.logicalExpression(\"||\", bareSuperNode, _core.types.thisExpression());\n    } else {\n      call = (0, _helperOptimiseCallExpression.default)(_core.types.cloneNode(classState.superFnId), _core.types.thisExpression(), bareSuperNode.arguments);\n    }\n\n    if (bareSuper.parentPath.isExpressionStatement() && bareSuper.parentPath.container === body.node.body && body.node.body.length - 1 === bareSuper.parentPath.key) {\n      if (classState.superThises.length) {\n        call = _core.types.assignmentExpression(\"=\", thisRef(), call);\n      }\n\n      bareSuper.parentPath.replaceWith(_core.types.returnStatement(call));\n    } else {\n      bareSuper.replaceWith(_core.types.assignmentExpression(\"=\", thisRef(), call));\n    }\n  }\n\n  function verifyConstructor() {\n    if (!classState.isDerived) return;\n    const path = classState.userConstructorPath;\n    const body = path.get(\"body\");\n    path.traverse(findThisesVisitor);\n\n    let thisRef = function () {\n      const ref = path.scope.generateDeclaredUidIdentifier(\"this\");\n\n      thisRef = () => _core.types.cloneNode(ref);\n\n      return ref;\n    };\n\n    for (const thisPath of classState.superThises) {\n      const {\n        node,\n        parentPath\n      } = thisPath;\n\n      if (parentPath.isMemberExpression({\n        object: node\n      })) {\n        thisPath.replaceWith(thisRef());\n        continue;\n      }\n\n      thisPath.replaceWith(_core.types.callExpression(classState.file.addHelper(\"assertThisInitialized\"), [thisRef()]));\n    }\n\n    const bareSupers = new Set();\n    path.traverse(_core.traverse.visitors.merge([_helperReplaceSupers.environmentVisitor, {\n      Super(path) {\n        const {\n          node,\n          parentPath\n        } = path;\n\n        if (parentPath.isCallExpression({\n          callee: node\n        })) {\n          bareSupers.add(parentPath);\n        }\n      }\n\n    }]));\n    let guaranteedSuperBeforeFinish = !!bareSupers.size;\n\n    for (const bareSuper of bareSupers) {\n      wrapSuperCall(bareSuper, classState.superName, thisRef, body);\n\n      if (guaranteedSuperBeforeFinish) {\n        bareSuper.find(function (parentPath) {\n          if (parentPath === path) {\n            return true;\n          }\n\n          if (parentPath.isLoop() || parentPath.isConditional() || parentPath.isArrowFunctionExpression()) {\n            guaranteedSuperBeforeFinish = false;\n            return true;\n          }\n        });\n      }\n    }\n\n    let wrapReturn;\n\n    if (classState.isLoose) {\n      wrapReturn = returnArg => {\n        const thisExpr = _core.types.callExpression(classState.file.addHelper(\"assertThisInitialized\"), [thisRef()]);\n\n        return returnArg ? _core.types.logicalExpression(\"||\", returnArg, thisExpr) : thisExpr;\n      };\n    } else {\n      wrapReturn = returnArg => _core.types.callExpression(classState.file.addHelper(\"possibleConstructorReturn\"), [thisRef()].concat(returnArg || []));\n    }\n\n    const bodyPaths = body.get(\"body\");\n\n    if (!bodyPaths.length || !bodyPaths.pop().isReturnStatement()) {\n      body.pushContainer(\"body\", _core.types.returnStatement(guaranteedSuperBeforeFinish ? thisRef() : wrapReturn()));\n    }\n\n    for (const returnPath of classState.superReturns) {\n      returnPath.get(\"argument\").replaceWith(wrapReturn(returnPath.node.argument));\n    }\n  }\n\n  function pushMethod(node, path) {\n    const scope = path ? path.scope : classState.scope;\n\n    if (node.kind === \"method\") {\n      if (processMethod(node, scope)) return;\n    }\n\n    pushToMap(node, false, null, scope);\n  }\n\n  function processMethod(node, scope) {\n    if (classState.isLoose && !node.decorators) {\n      let {\n        classRef\n      } = classState;\n\n      if (!node.static) {\n        insertProtoAliasOnce();\n        classRef = classState.protoAlias;\n      }\n\n      const methodName = _core.types.memberExpression(_core.types.cloneNode(classRef), node.key, node.computed || _core.types.isLiteral(node.key));\n\n      let func = _core.types.functionExpression(null, node.params, node.body, node.generator, node.async);\n\n      _core.types.inherits(func, node);\n\n      const key = _core.types.toComputedKey(node, node.key);\n\n      if (_core.types.isStringLiteral(key)) {\n        func = (0, _helperFunctionName.default)({\n          node: func,\n          id: key,\n          scope\n        });\n      }\n\n      const expr = _core.types.expressionStatement(_core.types.assignmentExpression(\"=\", methodName, func));\n\n      _core.types.inheritsComments(expr, node);\n\n      classState.body.push(expr);\n      return true;\n    }\n\n    return false;\n  }\n\n  function insertProtoAliasOnce() {\n    if (classState.protoAlias === null) {\n      setState({\n        protoAlias: classState.scope.generateUidIdentifier(\"proto\")\n      });\n\n      const classProto = _core.types.memberExpression(classState.classRef, _core.types.identifier(\"prototype\"));\n\n      const protoDeclaration = _core.types.variableDeclaration(\"var\", [_core.types.variableDeclarator(classState.protoAlias, classProto)]);\n\n      classState.body.push(protoDeclaration);\n    }\n  }\n\n  function pushConstructor(superReturns, method, path) {\n    if (path.scope.hasOwnBinding(classState.classRef.name)) {\n      path.scope.rename(classState.classRef.name);\n    }\n\n    setState({\n      userConstructorPath: path,\n      userConstructor: method,\n      hasConstructor: true,\n      superReturns\n    });\n    const {\n      construct\n    } = classState;\n\n    _core.types.inheritsComments(construct, method);\n\n    construct.params = method.params;\n\n    _core.types.inherits(construct.body, method.body);\n\n    construct.body.directives = method.body.directives;\n    pushConstructorToBody();\n  }\n\n  function pushConstructorToBody() {\n    if (classState.pushedConstructor) return;\n    classState.pushedConstructor = true;\n\n    if (classState.hasInstanceDescriptors || classState.hasStaticDescriptors) {\n      pushDescriptors();\n    }\n\n    classState.body.push(classState.construct);\n    pushInheritsToBody();\n  }\n\n  function pushInheritsToBody() {\n    if (!classState.isDerived || classState.pushedInherits) return;\n    const superFnId = path.scope.generateUidIdentifier(\"super\");\n    setState({\n      pushedInherits: true,\n      superFnId\n    });\n\n    if (!classState.isLoose) {\n      classState.body.unshift(_core.types.variableDeclaration(\"var\", [_core.types.variableDeclarator(superFnId, _core.types.callExpression((0, _inlineCreateSuperHelpers.default)(classState.file), [_core.types.cloneNode(classState.classRef)]))]));\n    }\n\n    classState.body.unshift(_core.types.expressionStatement(_core.types.callExpression(classState.file.addHelper(classState.isLoose ? \"inheritsLoose\" : \"inherits\"), [_core.types.cloneNode(classState.classRef), _core.types.cloneNode(classState.superName)])));\n  }\n\n  function setupClosureParamsArgs() {\n    const {\n      superName\n    } = classState;\n    const closureParams = [];\n    const closureArgs = [];\n\n    if (classState.isDerived) {\n      let arg = _core.types.cloneNode(superName);\n\n      if (classState.extendsNative) {\n        arg = _core.types.callExpression(classState.file.addHelper(\"wrapNativeSuper\"), [arg]);\n        (0, _helperAnnotateAsPure.default)(arg);\n      }\n\n      const param = classState.scope.generateUidIdentifierBasedOnNode(superName);\n      closureParams.push(param);\n      closureArgs.push(arg);\n      setState({\n        superName: _core.types.cloneNode(param)\n      });\n    }\n\n    return {\n      closureParams,\n      closureArgs\n    };\n  }\n\n  function classTransformer(path, file, builtinClasses, isLoose) {\n    setState({\n      parent: path.parent,\n      scope: path.scope,\n      node: path.node,\n      path,\n      file,\n      isLoose\n    });\n    setState({\n      classId: classState.node.id,\n      classRef: classState.node.id ? _core.types.identifier(classState.node.id.name) : classState.scope.generateUidIdentifier(\"class\"),\n      superName: classState.node.superClass,\n      isDerived: !!classState.node.superClass,\n      constructorBody: _core.types.blockStatement([])\n    });\n    setState({\n      extendsNative: classState.isDerived && builtinClasses.has(classState.superName.name) && !classState.scope.hasBinding(classState.superName.name, true)\n    });\n    const {\n      classRef,\n      node,\n      constructorBody\n    } = classState;\n    setState({\n      construct: buildConstructor(classRef, constructorBody, node)\n    });\n    let {\n      body\n    } = classState;\n    const {\n      closureParams,\n      closureArgs\n    } = setupClosureParamsArgs();\n    buildBody();\n\n    if (!classState.isLoose) {\n      constructorBody.body.unshift(_core.types.expressionStatement(_core.types.callExpression(classState.file.addHelper(\"classCallCheck\"), [_core.types.thisExpression(), _core.types.cloneNode(classState.classRef)])));\n    }\n\n    body = body.concat(classState.staticPropBody.map(fn => fn(_core.types.cloneNode(classState.classRef))));\n    const isStrict = path.isInStrictMode();\n    let constructorOnly = classState.classId && body.length === 1;\n\n    if (constructorOnly && !isStrict) {\n      for (const param of classState.construct.params) {\n        if (!_core.types.isIdentifier(param)) {\n          constructorOnly = false;\n          break;\n        }\n      }\n    }\n\n    const directives = constructorOnly ? body[0].body.directives : [];\n\n    if (!isStrict) {\n      directives.push(_core.types.directive(_core.types.directiveLiteral(\"use strict\")));\n    }\n\n    if (constructorOnly) {\n      return _core.types.toExpression(body[0]);\n    }\n\n    body.push(_core.types.returnStatement(_core.types.cloneNode(classState.classRef)));\n\n    const container = _core.types.arrowFunctionExpression(closureParams, _core.types.blockStatement(body, directives));\n\n    return _core.types.callExpression(container, closureArgs);\n  }\n\n  return classTransformer(path, file, builtinClasses, isLoose);\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = addCreateSuperHelper;\n\nvar _core = require(\"@babel/core\");\n\nconst helperIDs = new WeakMap();\n\nfunction addCreateSuperHelper(file) {\n  if (helperIDs.has(file)) {\n    return (_core.types.cloneNode || _core.types.clone)(helperIDs.get(file));\n  }\n\n  try {\n    return file.addHelper(\"createSuper\");\n  } catch (_unused) {}\n\n  const id = file.scope.generateUidIdentifier(\"createSuper\");\n  helperIDs.set(file, id);\n  const fn = helper({\n    CREATE_SUPER: id,\n    GET_PROTOTYPE_OF: file.addHelper(\"getPrototypeOf\"),\n    POSSIBLE_CONSTRUCTOR_RETURN: file.addHelper(\"possibleConstructorReturn\")\n  });\n  file.path.unshiftContainer(\"body\", [fn]);\n  file.scope.registerDeclaration(file.path.get(\"body.0\"));\n  return _core.types.cloneNode(id);\n}\n\nconst helper = _core.template.statement`\n  function CREATE_SUPER(Derived) {\n    function isNativeReflectConstruct() {\n      if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n\n      // core-js@3\n      if (Reflect.construct.sham) return false;\n\n      // Proxy can't be polyfilled. Every browser implemented\n      // proxies before or at the same time as Reflect.construct,\n      // so if they support Proxy they also support Reflect.construct.\n      if (typeof Proxy === \"function\") return true;\n\n      // Since Reflect.construct can't be properly polyfilled, some\n      // implementations (e.g. core-js@2) don't set the correct internal slots.\n      // Those polyfills don't allow us to subclass built-ins, so we need to\n      // use our fallback implementation.\n      try {\n        // If the internal slots aren't set, this throws an error similar to\n        //   TypeError: this is not a Date object.\n        Date.prototype.toString.call(Reflect.construct(Date, [], function() {}));\n        return true;\n      } catch (e) {\n        return false;\n      }\n    }\n\n    return function () {\n      var Super = GET_PROTOTYPE_OF(Derived), result;\n      if (isNativeReflectConstruct()) {\n        // NOTE: This doesn't work if this.__proto__.constructor has been modified.\n        var NewTarget = GET_PROTOTYPE_OF(this).constructor;\n        result = Reflect.construct(Super, arguments, NewTarget);\n      } else {\n        result = Super.apply(this, arguments);\n      }\n      return POSSIBLE_CONSTRUCTOR_RETURN(this, result);\n    }\n  }\n`;","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nconst beforeExpr = true;\nconst startsExpr = true;\nconst isLoop = true;\nconst isAssign = true;\nconst prefix = true;\nconst postfix = true;\nclass TokenType {\n  constructor(label, conf = {}) {\n    this.label = void 0;\n    this.keyword = void 0;\n    this.beforeExpr = void 0;\n    this.startsExpr = void 0;\n    this.rightAssociative = void 0;\n    this.isLoop = void 0;\n    this.isAssign = void 0;\n    this.prefix = void 0;\n    this.postfix = void 0;\n    this.binop = void 0;\n    this.updateContext = void 0;\n    this.label = label;\n    this.keyword = conf.keyword;\n    this.beforeExpr = !!conf.beforeExpr;\n    this.startsExpr = !!conf.startsExpr;\n    this.rightAssociative = !!conf.rightAssociative;\n    this.isLoop = !!conf.isLoop;\n    this.isAssign = !!conf.isAssign;\n    this.prefix = !!conf.prefix;\n    this.postfix = !!conf.postfix;\n    this.binop = conf.binop != null ? conf.binop : null;\n    this.updateContext = null;\n  }\n\n}\nconst keywords = new Map();\n\nfunction createKeyword(name, options = {}) {\n  options.keyword = name;\n  const token = new TokenType(name, options);\n  keywords.set(name, token);\n  return token;\n}\n\nfunction createBinop(name, binop) {\n  return new TokenType(name, {\n    beforeExpr,\n    binop\n  });\n}\n\nconst types = {\n  num: new TokenType(\"num\", {\n    startsExpr\n  }),\n  bigint: new TokenType(\"bigint\", {\n    startsExpr\n  }),\n  decimal: new TokenType(\"decimal\", {\n    startsExpr\n  }),\n  regexp: new TokenType(\"regexp\", {\n    startsExpr\n  }),\n  string: new TokenType(\"string\", {\n    startsExpr\n  }),\n  name: new TokenType(\"name\", {\n    startsExpr\n  }),\n  eof: new TokenType(\"eof\"),\n  bracketL: new TokenType(\"[\", {\n    beforeExpr,\n    startsExpr\n  }),\n  bracketHashL: new TokenType(\"#[\", {\n    beforeExpr,\n    startsExpr\n  }),\n  bracketBarL: new TokenType(\"[|\", {\n    beforeExpr,\n    startsExpr\n  }),\n  bracketR: new TokenType(\"]\"),\n  bracketBarR: new TokenType(\"|]\"),\n  braceL: new TokenType(\"{\", {\n    beforeExpr,\n    startsExpr\n  }),\n  braceBarL: new TokenType(\"{|\", {\n    beforeExpr,\n    startsExpr\n  }),\n  braceHashL: new TokenType(\"#{\", {\n    beforeExpr,\n    startsExpr\n  }),\n  braceR: new TokenType(\"}\"),\n  braceBarR: new TokenType(\"|}\"),\n  parenL: new TokenType(\"(\", {\n    beforeExpr,\n    startsExpr\n  }),\n  parenR: new TokenType(\")\"),\n  comma: new TokenType(\",\", {\n    beforeExpr\n  }),\n  semi: new TokenType(\";\", {\n    beforeExpr\n  }),\n  colon: new TokenType(\":\", {\n    beforeExpr\n  }),\n  doubleColon: new TokenType(\"::\", {\n    beforeExpr\n  }),\n  dot: new TokenType(\".\"),\n  question: new TokenType(\"?\", {\n    beforeExpr\n  }),\n  questionDot: new TokenType(\"?.\"),\n  arrow: new TokenType(\"=>\", {\n    beforeExpr\n  }),\n  template: new TokenType(\"template\"),\n  ellipsis: new TokenType(\"...\", {\n    beforeExpr\n  }),\n  backQuote: new TokenType(\"`\", {\n    startsExpr\n  }),\n  dollarBraceL: new TokenType(\"${\", {\n    beforeExpr,\n    startsExpr\n  }),\n  at: new TokenType(\"@\"),\n  hash: new TokenType(\"#\", {\n    startsExpr\n  }),\n  interpreterDirective: new TokenType(\"#!...\"),\n  eq: new TokenType(\"=\", {\n    beforeExpr,\n    isAssign\n  }),\n  assign: new TokenType(\"_=\", {\n    beforeExpr,\n    isAssign\n  }),\n  incDec: new TokenType(\"++/--\", {\n    prefix,\n    postfix,\n    startsExpr\n  }),\n  bang: new TokenType(\"!\", {\n    beforeExpr,\n    prefix,\n    startsExpr\n  }),\n  tilde: new TokenType(\"~\", {\n    beforeExpr,\n    prefix,\n    startsExpr\n  }),\n  pipeline: createBinop(\"|>\", 0),\n  nullishCoalescing: createBinop(\"??\", 1),\n  logicalOR: createBinop(\"||\", 1),\n  logicalAND: createBinop(\"&&\", 2),\n  bitwiseOR: createBinop(\"|\", 3),\n  bitwiseXOR: createBinop(\"^\", 4),\n  bitwiseAND: createBinop(\"&\", 5),\n  equality: createBinop(\"==/!=/===/!==\", 6),\n  relational: createBinop(\"</>/<=/>=\", 7),\n  bitShift: createBinop(\"<</>>/>>>\", 8),\n  plusMin: new TokenType(\"+/-\", {\n    beforeExpr,\n    binop: 9,\n    prefix,\n    startsExpr\n  }),\n  modulo: new TokenType(\"%\", {\n    beforeExpr,\n    binop: 10,\n    startsExpr\n  }),\n  star: new TokenType(\"*\", {\n    binop: 10\n  }),\n  slash: createBinop(\"/\", 10),\n  exponent: new TokenType(\"**\", {\n    beforeExpr,\n    binop: 11,\n    rightAssociative: true\n  }),\n  _break: createKeyword(\"break\"),\n  _case: createKeyword(\"case\", {\n    beforeExpr\n  }),\n  _catch: createKeyword(\"catch\"),\n  _continue: createKeyword(\"continue\"),\n  _debugger: createKeyword(\"debugger\"),\n  _default: createKeyword(\"default\", {\n    beforeExpr\n  }),\n  _do: createKeyword(\"do\", {\n    isLoop,\n    beforeExpr\n  }),\n  _else: createKeyword(\"else\", {\n    beforeExpr\n  }),\n  _finally: createKeyword(\"finally\"),\n  _for: createKeyword(\"for\", {\n    isLoop\n  }),\n  _function: createKeyword(\"function\", {\n    startsExpr\n  }),\n  _if: createKeyword(\"if\"),\n  _return: createKeyword(\"return\", {\n    beforeExpr\n  }),\n  _switch: createKeyword(\"switch\"),\n  _throw: createKeyword(\"throw\", {\n    beforeExpr,\n    prefix,\n    startsExpr\n  }),\n  _try: createKeyword(\"try\"),\n  _var: createKeyword(\"var\"),\n  _const: createKeyword(\"const\"),\n  _while: createKeyword(\"while\", {\n    isLoop\n  }),\n  _with: createKeyword(\"with\"),\n  _new: createKeyword(\"new\", {\n    beforeExpr,\n    startsExpr\n  }),\n  _this: createKeyword(\"this\", {\n    startsExpr\n  }),\n  _super: createKeyword(\"super\", {\n    startsExpr\n  }),\n  _class: createKeyword(\"class\", {\n    startsExpr\n  }),\n  _extends: createKeyword(\"extends\", {\n    beforeExpr\n  }),\n  _export: createKeyword(\"export\"),\n  _import: createKeyword(\"import\", {\n    startsExpr\n  }),\n  _null: createKeyword(\"null\", {\n    startsExpr\n  }),\n  _true: createKeyword(\"true\", {\n    startsExpr\n  }),\n  _false: createKeyword(\"false\", {\n    startsExpr\n  }),\n  _in: createKeyword(\"in\", {\n    beforeExpr,\n    binop: 7\n  }),\n  _instanceof: createKeyword(\"instanceof\", {\n    beforeExpr,\n    binop: 7\n  }),\n  _typeof: createKeyword(\"typeof\", {\n    beforeExpr,\n    prefix,\n    startsExpr\n  }),\n  _void: createKeyword(\"void\", {\n    beforeExpr,\n    prefix,\n    startsExpr\n  }),\n  _delete: createKeyword(\"delete\", {\n    beforeExpr,\n    prefix,\n    startsExpr\n  })\n};\n\nconst lineBreak = /\\r\\n?|[\\n\\u2028\\u2029]/;\nconst lineBreakG = new RegExp(lineBreak.source, \"g\");\nfunction isNewLine(code) {\n  switch (code) {\n    case 10:\n    case 13:\n    case 8232:\n    case 8233:\n      return true;\n\n    default:\n      return false;\n  }\n}\nconst skipWhiteSpace = /(?:\\s|\\/\\/.*|\\/\\*[^]*?\\*\\/)*/g;\nfunction isWhitespace(code) {\n  switch (code) {\n    case 0x0009:\n    case 0x000b:\n    case 0x000c:\n    case 32:\n    case 160:\n    case 5760:\n    case 0x2000:\n    case 0x2001:\n    case 0x2002:\n    case 0x2003:\n    case 0x2004:\n    case 0x2005:\n    case 0x2006:\n    case 0x2007:\n    case 0x2008:\n    case 0x2009:\n    case 0x200a:\n    case 0x202f:\n    case 0x205f:\n    case 0x3000:\n    case 0xfeff:\n      return true;\n\n    default:\n      return false;\n  }\n}\n\nclass Position {\n  constructor(line, col) {\n    this.line = void 0;\n    this.column = void 0;\n    this.line = line;\n    this.column = col;\n  }\n\n}\nclass SourceLocation {\n  constructor(start, end) {\n    this.start = void 0;\n    this.end = void 0;\n    this.filename = void 0;\n    this.identifierName = void 0;\n    this.start = start;\n    this.end = end;\n  }\n\n}\nfunction getLineInfo(input, offset) {\n  let line = 1;\n  let lineStart = 0;\n  let match;\n  lineBreakG.lastIndex = 0;\n\n  while ((match = lineBreakG.exec(input)) && match.index < offset) {\n    line++;\n    lineStart = lineBreakG.lastIndex;\n  }\n\n  return new Position(line, offset - lineStart);\n}\n\nclass BaseParser {\n  constructor() {\n    this.sawUnambiguousESM = false;\n    this.ambiguousScriptDifferentAst = false;\n  }\n\n  hasPlugin(name) {\n    return this.plugins.has(name);\n  }\n\n  getPluginOption(plugin, name) {\n    if (this.hasPlugin(plugin)) return this.plugins.get(plugin)[name];\n  }\n\n}\n\nfunction last(stack) {\n  return stack[stack.length - 1];\n}\n\nclass CommentsParser extends BaseParser {\n  addComment(comment) {\n    if (this.filename) comment.loc.filename = this.filename;\n    this.state.trailingComments.push(comment);\n    this.state.leadingComments.push(comment);\n  }\n\n  adjustCommentsAfterTrailingComma(node, elements, takeAllComments) {\n    if (this.state.leadingComments.length === 0) {\n      return;\n    }\n\n    let lastElement = null;\n    let i = elements.length;\n\n    while (lastElement === null && i > 0) {\n      lastElement = elements[--i];\n    }\n\n    if (lastElement === null) {\n      return;\n    }\n\n    for (let j = 0; j < this.state.leadingComments.length; j++) {\n      if (this.state.leadingComments[j].end < this.state.commentPreviousNode.end) {\n        this.state.leadingComments.splice(j, 1);\n        j--;\n      }\n    }\n\n    const newTrailingComments = [];\n\n    for (let i = 0; i < this.state.leadingComments.length; i++) {\n      const leadingComment = this.state.leadingComments[i];\n\n      if (leadingComment.end < node.end) {\n        newTrailingComments.push(leadingComment);\n\n        if (!takeAllComments) {\n          this.state.leadingComments.splice(i, 1);\n          i--;\n        }\n      } else {\n        if (node.trailingComments === undefined) {\n          node.trailingComments = [];\n        }\n\n        node.trailingComments.push(leadingComment);\n      }\n    }\n\n    if (takeAllComments) this.state.leadingComments = [];\n\n    if (newTrailingComments.length > 0) {\n      lastElement.trailingComments = newTrailingComments;\n    } else if (lastElement.trailingComments !== undefined) {\n      lastElement.trailingComments = [];\n    }\n  }\n\n  processComment(node) {\n    if (node.type === \"Program\" && node.body.length > 0) return;\n    const stack = this.state.commentStack;\n    let firstChild, lastChild, trailingComments, i, j;\n\n    if (this.state.trailingComments.length > 0) {\n      if (this.state.trailingComments[0].start >= node.end) {\n        trailingComments = this.state.trailingComments;\n        this.state.trailingComments = [];\n      } else {\n        this.state.trailingComments.length = 0;\n      }\n    } else if (stack.length > 0) {\n      const lastInStack = last(stack);\n\n      if (lastInStack.trailingComments && lastInStack.trailingComments[0].start >= node.end) {\n        trailingComments = lastInStack.trailingComments;\n        delete lastInStack.trailingComments;\n      }\n    }\n\n    if (stack.length > 0 && last(stack).start >= node.start) {\n      firstChild = stack.pop();\n    }\n\n    while (stack.length > 0 && last(stack).start >= node.start) {\n      lastChild = stack.pop();\n    }\n\n    if (!lastChild && firstChild) lastChild = firstChild;\n\n    if (firstChild) {\n      switch (node.type) {\n        case \"ObjectExpression\":\n          this.adjustCommentsAfterTrailingComma(node, node.properties);\n          break;\n\n        case \"ObjectPattern\":\n          this.adjustCommentsAfterTrailingComma(node, node.properties, true);\n          break;\n\n        case \"CallExpression\":\n          this.adjustCommentsAfterTrailingComma(node, node.arguments);\n          break;\n\n        case \"ArrayExpression\":\n          this.adjustCommentsAfterTrailingComma(node, node.elements);\n          break;\n\n        case \"ArrayPattern\":\n          this.adjustCommentsAfterTrailingComma(node, node.elements, true);\n          break;\n      }\n    } else if (this.state.commentPreviousNode && (this.state.commentPreviousNode.type === \"ImportSpecifier\" && node.type !== \"ImportSpecifier\" || this.state.commentPreviousNode.type === \"ExportSpecifier\" && node.type !== \"ExportSpecifier\")) {\n      this.adjustCommentsAfterTrailingComma(node, [this.state.commentPreviousNode]);\n    }\n\n    if (lastChild) {\n      if (lastChild.leadingComments) {\n        if (lastChild !== node && lastChild.leadingComments.length > 0 && last(lastChild.leadingComments).end <= node.start) {\n          node.leadingComments = lastChild.leadingComments;\n          delete lastChild.leadingComments;\n        } else {\n          for (i = lastChild.leadingComments.length - 2; i >= 0; --i) {\n            if (lastChild.leadingComments[i].end <= node.start) {\n              node.leadingComments = lastChild.leadingComments.splice(0, i + 1);\n              break;\n            }\n          }\n        }\n      }\n    } else if (this.state.leadingComments.length > 0) {\n      if (last(this.state.leadingComments).end <= node.start) {\n        if (this.state.commentPreviousNode) {\n          for (j = 0; j < this.state.leadingComments.length; j++) {\n            if (this.state.leadingComments[j].end < this.state.commentPreviousNode.end) {\n              this.state.leadingComments.splice(j, 1);\n              j--;\n            }\n          }\n        }\n\n        if (this.state.leadingComments.length > 0) {\n          node.leadingComments = this.state.leadingComments;\n          this.state.leadingComments = [];\n        }\n      } else {\n        for (i = 0; i < this.state.leadingComments.length; i++) {\n          if (this.state.leadingComments[i].end > node.start) {\n            break;\n          }\n        }\n\n        const leadingComments = this.state.leadingComments.slice(0, i);\n\n        if (leadingComments.length) {\n          node.leadingComments = leadingComments;\n        }\n\n        trailingComments = this.state.leadingComments.slice(i);\n\n        if (trailingComments.length === 0) {\n          trailingComments = null;\n        }\n      }\n    }\n\n    this.state.commentPreviousNode = node;\n\n    if (trailingComments) {\n      if (trailingComments.length && trailingComments[0].start >= node.start && last(trailingComments).end <= node.end) {\n        node.innerComments = trailingComments;\n      } else {\n        const firstTrailingCommentIndex = trailingComments.findIndex(comment => comment.end >= node.end);\n\n        if (firstTrailingCommentIndex > 0) {\n          node.innerComments = trailingComments.slice(0, firstTrailingCommentIndex);\n          node.trailingComments = trailingComments.slice(firstTrailingCommentIndex);\n        } else {\n          node.trailingComments = trailingComments;\n        }\n      }\n    }\n\n    stack.push(node);\n  }\n\n}\n\nconst ErrorMessages = Object.freeze({\n  AccessorIsGenerator: \"A %0ter cannot be a generator\",\n  ArgumentsInClass: \"'arguments' is only allowed in functions and class methods\",\n  AsyncFunctionInSingleStatementContext: \"Async functions can only be declared at the top level or inside a block\",\n  AwaitBindingIdentifier: \"Can not use 'await' as identifier inside an async function\",\n  AwaitBindingIdentifierInStaticBlock: \"Can not use 'await' as identifier inside a static block\",\n  AwaitExpressionFormalParameter: \"await is not allowed in async function parameters\",\n  AwaitNotInAsyncContext: \"'await' is only allowed within async functions and at the top levels of modules\",\n  AwaitNotInAsyncFunction: \"'await' is only allowed within async functions\",\n  BadGetterArity: \"getter must not have any formal parameters\",\n  BadSetterArity: \"setter must have exactly one formal parameter\",\n  BadSetterRestParameter: \"setter function argument must not be a rest parameter\",\n  ConstructorClassField: \"Classes may not have a field named 'constructor'\",\n  ConstructorClassPrivateField: \"Classes may not have a private field named '#constructor'\",\n  ConstructorIsAccessor: \"Class constructor may not be an accessor\",\n  ConstructorIsAsync: \"Constructor can't be an async function\",\n  ConstructorIsGenerator: \"Constructor can't be a generator\",\n  DeclarationMissingInitializer: \"%0 require an initialization value\",\n  DecoratorBeforeExport: \"Decorators must be placed *before* the 'export' keyword. You can set the 'decoratorsBeforeExport' option to false to use the 'export @decorator class {}' syntax\",\n  DecoratorConstructor: \"Decorators can't be used with a constructor. Did you mean '@dec class { ... }'?\",\n  DecoratorExportClass: \"Using the export keyword between a decorator and a class is not allowed. Please use `export @dec class` instead.\",\n  DecoratorSemicolon: \"Decorators must not be followed by a semicolon\",\n  DecoratorStaticBlock: \"Decorators can't be used with a static block\",\n  DeletePrivateField: \"Deleting a private field is not allowed\",\n  DestructureNamedImport: \"ES2015 named imports do not destructure. Use another statement for destructuring after the import.\",\n  DuplicateConstructor: \"Duplicate constructor in the same class\",\n  DuplicateDefaultExport: \"Only one default export allowed per module.\",\n  DuplicateExport: \"`%0` has already been exported. Exported identifiers must be unique.\",\n  DuplicateProto: \"Redefinition of __proto__ property\",\n  DuplicateRegExpFlags: \"Duplicate regular expression flag\",\n  DuplicateStaticBlock: \"Duplicate static block in the same class\",\n  ElementAfterRest: \"Rest element must be last element\",\n  EscapedCharNotAnIdentifier: \"Invalid Unicode escape\",\n  ExportBindingIsString: \"A string literal cannot be used as an exported binding without `from`.\\n- Did you mean `export { '%0' as '%1' } from 'some-module'`?\",\n  ExportDefaultFromAsIdentifier: \"'from' is not allowed as an identifier after 'export default'\",\n  ForInOfLoopInitializer: \"%0 loop variable declaration may not have an initializer\",\n  GeneratorInSingleStatementContext: \"Generators can only be declared at the top level or inside a block\",\n  IllegalBreakContinue: \"Unsyntactic %0\",\n  IllegalLanguageModeDirective: \"Illegal 'use strict' directive in function with non-simple parameter list\",\n  IllegalReturn: \"'return' outside of function\",\n  ImportBindingIsString: 'A string literal cannot be used as an imported binding.\\n- Did you mean `import { \"%0\" as foo }`?',\n  ImportCallArgumentTrailingComma: \"Trailing comma is disallowed inside import(...) arguments\",\n  ImportCallArity: \"import() requires exactly %0\",\n  ImportCallNotNewExpression: \"Cannot use new with import(...)\",\n  ImportCallSpreadArgument: \"... is not allowed in import()\",\n  ImportMetaOutsideModule: `import.meta may appear only with 'sourceType: \"module\"'`,\n  ImportOutsideModule: `'import' and 'export' may appear only with 'sourceType: \"module\"'`,\n  InvalidBigIntLiteral: \"Invalid BigIntLiteral\",\n  InvalidCodePoint: \"Code point out of bounds\",\n  InvalidDecimal: \"Invalid decimal\",\n  InvalidDigit: \"Expected number in radix %0\",\n  InvalidEscapeSequence: \"Bad character escape sequence\",\n  InvalidEscapeSequenceTemplate: \"Invalid escape sequence in template\",\n  InvalidEscapedReservedWord: \"Escape sequence in keyword %0\",\n  InvalidIdentifier: \"Invalid identifier %0\",\n  InvalidLhs: \"Invalid left-hand side in %0\",\n  InvalidLhsBinding: \"Binding invalid left-hand side in %0\",\n  InvalidNumber: \"Invalid number\",\n  InvalidOrMissingExponent: \"Floating-point numbers require a valid exponent after the 'e'\",\n  InvalidOrUnexpectedToken: \"Unexpected character '%0'\",\n  InvalidParenthesizedAssignment: \"Invalid parenthesized assignment pattern\",\n  InvalidPrivateFieldResolution: \"Private name #%0 is not defined\",\n  InvalidPropertyBindingPattern: \"Binding member expression\",\n  InvalidRecordProperty: \"Only properties and spread elements are allowed in record definitions\",\n  InvalidRestAssignmentPattern: \"Invalid rest operator's argument\",\n  LabelRedeclaration: \"Label '%0' is already declared\",\n  LetInLexicalBinding: \"'let' is not allowed to be used as a name in 'let' or 'const' declarations.\",\n  LineTerminatorBeforeArrow: \"No line break is allowed before '=>'\",\n  MalformedRegExpFlags: \"Invalid regular expression flag\",\n  MissingClassName: \"A class name is required\",\n  MissingEqInAssignment: \"Only '=' operator can be used for specifying default value.\",\n  MissingSemicolon: \"Missing semicolon\",\n  MissingUnicodeEscape: \"Expecting Unicode escape sequence \\\\uXXXX\",\n  MixingCoalesceWithLogical: \"Nullish coalescing operator(??) requires parens when mixing with logical operators\",\n  ModuleAttributeDifferentFromType: \"The only accepted module attribute is `type`\",\n  ModuleAttributeInvalidValue: \"Only string literals are allowed as module attribute values\",\n  ModuleAttributesWithDuplicateKeys: 'Duplicate key \"%0\" is not allowed in module attributes',\n  ModuleExportNameHasLoneSurrogate: \"An export name cannot include a lone surrogate, found '\\\\u%0'\",\n  ModuleExportUndefined: \"Export '%0' is not defined\",\n  MultipleDefaultsInSwitch: \"Multiple default clauses\",\n  NewlineAfterThrow: \"Illegal newline after throw\",\n  NoCatchOrFinally: \"Missing catch or finally clause\",\n  NumberIdentifier: \"Identifier directly after number\",\n  NumericSeparatorInEscapeSequence: \"Numeric separators are not allowed inside unicode escape sequences or hex escape sequences\",\n  ObsoleteAwaitStar: \"await* has been removed from the async functions proposal. Use Promise.all() instead.\",\n  OptionalChainingNoNew: \"constructors in/after an Optional Chain are not allowed\",\n  OptionalChainingNoTemplate: \"Tagged Template Literals are not allowed in optionalChain\",\n  ParamDupe: \"Argument name clash\",\n  PatternHasAccessor: \"Object pattern can't contain getter or setter\",\n  PatternHasMethod: \"Object pattern can't contain methods\",\n  PipelineBodyNoArrow: 'Unexpected arrow \"=>\" after pipeline body; arrow function in pipeline body must be parenthesized',\n  PipelineBodySequenceExpression: \"Pipeline body may not be a comma-separated sequence expression\",\n  PipelineHeadSequenceExpression: \"Pipeline head should not be a comma-separated sequence expression\",\n  PipelineTopicUnused: \"Pipeline is in topic style but does not use topic reference\",\n  PrimaryTopicNotAllowed: \"Topic reference was used in a lexical context without topic binding\",\n  PrimaryTopicRequiresSmartPipeline: \"Primary Topic Reference found but pipelineOperator not passed 'smart' for 'proposal' option.\",\n  PrivateInExpectedIn: \"Private names are only allowed in property accesses (`obj.#%0`) or in `in` expressions (`#%0 in obj`)\",\n  PrivateNameRedeclaration: \"Duplicate private name #%0\",\n  RecordExpressionBarIncorrectEndSyntaxType: \"Record expressions ending with '|}' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'\",\n  RecordExpressionBarIncorrectStartSyntaxType: \"Record expressions starting with '{|' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'\",\n  RecordExpressionHashIncorrectStartSyntaxType: \"Record expressions starting with '#{' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'hash'\",\n  RecordNoProto: \"'__proto__' is not allowed in Record expressions\",\n  RestTrailingComma: \"Unexpected trailing comma after rest element\",\n  SloppyFunction: \"In non-strict mode code, functions can only be declared at top level, inside a block, or as the body of an if statement\",\n  StaticPrototype: \"Classes may not have static property named prototype\",\n  StrictDelete: \"Deleting local variable in strict mode\",\n  StrictEvalArguments: \"Assigning to '%0' in strict mode\",\n  StrictEvalArgumentsBinding: \"Binding '%0' in strict mode\",\n  StrictFunction: \"In strict mode code, functions can only be declared at top level or inside a block\",\n  StrictNumericEscape: \"The only valid numeric escape in strict mode is '\\\\0'\",\n  StrictOctalLiteral: \"Legacy octal literals are not allowed in strict mode\",\n  StrictWith: \"'with' in strict mode\",\n  SuperNotAllowed: \"super() is only valid inside a class constructor of a subclass. Maybe a typo in the method name ('constructor') or not extending another class?\",\n  SuperPrivateField: \"Private fields can't be accessed on super\",\n  TrailingDecorator: \"Decorators must be attached to a class element\",\n  TupleExpressionBarIncorrectEndSyntaxType: \"Tuple expressions ending with '|]' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'\",\n  TupleExpressionBarIncorrectStartSyntaxType: \"Tuple expressions starting with '[|' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'\",\n  TupleExpressionHashIncorrectStartSyntaxType: \"Tuple expressions starting with '#[' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'hash'\",\n  UnexpectedArgumentPlaceholder: \"Unexpected argument placeholder\",\n  UnexpectedAwaitAfterPipelineBody: 'Unexpected \"await\" after pipeline body; await must have parentheses in minimal proposal',\n  UnexpectedDigitAfterHash: \"Unexpected digit after hash token\",\n  UnexpectedImportExport: \"'import' and 'export' may only appear at the top level\",\n  UnexpectedKeyword: \"Unexpected keyword '%0'\",\n  UnexpectedLeadingDecorator: \"Leading decorators must be attached to a class declaration\",\n  UnexpectedLexicalDeclaration: \"Lexical declaration cannot appear in a single-statement context\",\n  UnexpectedNewTarget: \"new.target can only be used in functions\",\n  UnexpectedNumericSeparator: \"A numeric separator is only allowed between two digits\",\n  UnexpectedPrivateField: \"Private names can only be used as the name of a class element (i.e. class C { #p = 42; #m() {} } )\\n or a property of member expression (i.e. this.#p).\",\n  UnexpectedReservedWord: \"Unexpected reserved word '%0'\",\n  UnexpectedSuper: \"super is only allowed in object methods and classes\",\n  UnexpectedToken: \"Unexpected token '%0'\",\n  UnexpectedTokenUnaryExponentiation: \"Illegal expression. Wrap left hand side or entire exponentiation in parentheses.\",\n  UnsupportedBind: \"Binding should be performed on object property.\",\n  UnsupportedDecoratorExport: \"A decorated export must export a class declaration\",\n  UnsupportedDefaultExport: \"Only expressions, functions or classes are allowed as the `default` export.\",\n  UnsupportedImport: \"import can only be used in import() or import.meta\",\n  UnsupportedMetaProperty: \"The only valid meta property for %0 is %0.%1\",\n  UnsupportedParameterDecorator: \"Decorators cannot be used to decorate parameters\",\n  UnsupportedPropertyDecorator: \"Decorators cannot be used to decorate object literal properties\",\n  UnsupportedSuper: \"super can only be used with function calls (i.e. super()) or in property accesses (i.e. super.prop or super[prop])\",\n  UnterminatedComment: \"Unterminated comment\",\n  UnterminatedRegExp: \"Unterminated regular expression\",\n  UnterminatedString: \"Unterminated string constant\",\n  UnterminatedTemplate: \"Unterminated template\",\n  VarRedeclaration: \"Identifier '%0' has already been declared\",\n  YieldBindingIdentifier: \"Can not use 'yield' as identifier inside a generator\",\n  YieldInParameter: \"Yield expression is not allowed in formal parameters\",\n  ZeroDigitNumericSeparator: \"Numeric separator can not be used after leading 0\"\n});\n\nclass ParserError extends CommentsParser {\n  getLocationForPosition(pos) {\n    let loc;\n    if (pos === this.state.start) loc = this.state.startLoc;else if (pos === this.state.lastTokStart) loc = this.state.lastTokStartLoc;else if (pos === this.state.end) loc = this.state.endLoc;else if (pos === this.state.lastTokEnd) loc = this.state.lastTokEndLoc;else loc = getLineInfo(this.input, pos);\n    return loc;\n  }\n\n  raise(pos, errorTemplate, ...params) {\n    return this.raiseWithData(pos, undefined, errorTemplate, ...params);\n  }\n\n  raiseOverwrite(pos, errorTemplate, ...params) {\n    const loc = this.getLocationForPosition(pos);\n    const message = errorTemplate.replace(/%(\\d+)/g, (_, i) => params[i]) + ` (${loc.line}:${loc.column})`;\n\n    if (this.options.errorRecovery) {\n      const errors = this.state.errors;\n\n      for (let i = errors.length - 1; i >= 0; i--) {\n        const error = errors[i];\n\n        if (error.pos === pos) {\n          return Object.assign(error, {\n            message\n          });\n        } else if (error.pos < pos) {\n          break;\n        }\n      }\n    }\n\n    return this._raise({\n      loc,\n      pos\n    }, message);\n  }\n\n  raiseWithData(pos, data, errorTemplate, ...params) {\n    const loc = this.getLocationForPosition(pos);\n    const message = errorTemplate.replace(/%(\\d+)/g, (_, i) => params[i]) + ` (${loc.line}:${loc.column})`;\n    return this._raise(Object.assign({\n      loc,\n      pos\n    }, data), message);\n  }\n\n  _raise(errorContext, message) {\n    const err = new SyntaxError(message);\n    Object.assign(err, errorContext);\n\n    if (this.options.errorRecovery) {\n      if (!this.isLookahead) this.state.errors.push(err);\n      return err;\n    } else {\n      throw err;\n    }\n  }\n\n}\n\nvar estree = (superClass => class extends superClass {\n  estreeParseRegExpLiteral({\n    pattern,\n    flags\n  }) {\n    let regex = null;\n\n    try {\n      regex = new RegExp(pattern, flags);\n    } catch (e) {}\n\n    const node = this.estreeParseLiteral(regex);\n    node.regex = {\n      pattern,\n      flags\n    };\n    return node;\n  }\n\n  estreeParseBigIntLiteral(value) {\n    let bigInt;\n\n    try {\n      bigInt = BigInt(value);\n    } catch (_unused) {\n      bigInt = null;\n    }\n\n    const node = this.estreeParseLiteral(bigInt);\n    node.bigint = String(node.value || value);\n    return node;\n  }\n\n  estreeParseDecimalLiteral(value) {\n    const decimal = null;\n    const node = this.estreeParseLiteral(decimal);\n    node.decimal = String(node.value || value);\n    return node;\n  }\n\n  estreeParseLiteral(value) {\n    return this.parseLiteral(value, \"Literal\");\n  }\n\n  directiveToStmt(directive) {\n    const directiveLiteral = directive.value;\n    const stmt = this.startNodeAt(directive.start, directive.loc.start);\n    const expression = this.startNodeAt(directiveLiteral.start, directiveLiteral.loc.start);\n    expression.value = directiveLiteral.extra.expressionValue;\n    expression.raw = directiveLiteral.extra.raw;\n    stmt.expression = this.finishNodeAt(expression, \"Literal\", directiveLiteral.end, directiveLiteral.loc.end);\n    stmt.directive = directiveLiteral.extra.raw.slice(1, -1);\n    return this.finishNodeAt(stmt, \"ExpressionStatement\", directive.end, directive.loc.end);\n  }\n\n  initFunction(node, isAsync) {\n    super.initFunction(node, isAsync);\n    node.expression = false;\n  }\n\n  checkDeclaration(node) {\n    if (node != null && this.isObjectProperty(node)) {\n      this.checkDeclaration(node.value);\n    } else {\n      super.checkDeclaration(node);\n    }\n  }\n\n  getObjectOrClassMethodParams(method) {\n    return method.value.params;\n  }\n\n  isValidDirective(stmt) {\n    var _stmt$expression$extr;\n\n    return stmt.type === \"ExpressionStatement\" && stmt.expression.type === \"Literal\" && typeof stmt.expression.value === \"string\" && !((_stmt$expression$extr = stmt.expression.extra) == null ? void 0 : _stmt$expression$extr.parenthesized);\n  }\n\n  stmtToDirective(stmt) {\n    const directive = super.stmtToDirective(stmt);\n    const value = stmt.expression.value;\n    this.addExtra(directive.value, \"expressionValue\", value);\n    return directive;\n  }\n\n  parseBlockBody(node, ...args) {\n    super.parseBlockBody(node, ...args);\n    const directiveStatements = node.directives.map(d => this.directiveToStmt(d));\n    node.body = directiveStatements.concat(node.body);\n    delete node.directives;\n  }\n\n  pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper) {\n    this.parseMethod(method, isGenerator, isAsync, isConstructor, allowsDirectSuper, \"ClassMethod\", true);\n\n    if (method.typeParameters) {\n      method.value.typeParameters = method.typeParameters;\n      delete method.typeParameters;\n    }\n\n    classBody.body.push(method);\n  }\n\n  parseExprAtom(refExpressionErrors) {\n    switch (this.state.type) {\n      case types.num:\n      case types.string:\n        return this.estreeParseLiteral(this.state.value);\n\n      case types.regexp:\n        return this.estreeParseRegExpLiteral(this.state.value);\n\n      case types.bigint:\n        return this.estreeParseBigIntLiteral(this.state.value);\n\n      case types.decimal:\n        return this.estreeParseDecimalLiteral(this.state.value);\n\n      case types._null:\n        return this.estreeParseLiteral(null);\n\n      case types._true:\n        return this.estreeParseLiteral(true);\n\n      case types._false:\n        return this.estreeParseLiteral(false);\n\n      default:\n        return super.parseExprAtom(refExpressionErrors);\n    }\n  }\n\n  parseMaybePrivateName(...args) {\n    const node = super.parseMaybePrivateName(...args);\n\n    if (node.type === \"PrivateName\" && this.getPluginOption(\"estree\", \"classFeatures\")) {\n      return this.convertPrivateNameToPrivateIdentifier(node);\n    }\n\n    return node;\n  }\n\n  convertPrivateNameToPrivateIdentifier(node) {\n    const name = super.getPrivateNameSV(node);\n    node = node;\n    delete node.id;\n    node.name = name;\n    node.type = \"PrivateIdentifier\";\n    return node;\n  }\n\n  isPrivateName(node) {\n    if (!this.getPluginOption(\"estree\", \"classFeatures\")) {\n      return super.isPrivateName(node);\n    }\n\n    return node.type === \"PrivateIdentifier\";\n  }\n\n  getPrivateNameSV(node) {\n    if (!this.getPluginOption(\"estree\", \"classFeatures\")) {\n      return super.getPrivateNameSV(node);\n    }\n\n    return node.name;\n  }\n\n  parseLiteral(value, type, startPos, startLoc) {\n    const node = super.parseLiteral(value, type, startPos, startLoc);\n    node.raw = node.extra.raw;\n    delete node.extra;\n    return node;\n  }\n\n  parseFunctionBody(node, allowExpression, isMethod = false) {\n    super.parseFunctionBody(node, allowExpression, isMethod);\n    node.expression = node.body.type !== \"BlockStatement\";\n  }\n\n  parseMethod(node, isGenerator, isAsync, isConstructor, allowDirectSuper, type, inClassScope = false) {\n    let funcNode = this.startNode();\n    funcNode.kind = node.kind;\n    funcNode = super.parseMethod(funcNode, isGenerator, isAsync, isConstructor, allowDirectSuper, type, inClassScope);\n    funcNode.type = \"FunctionExpression\";\n    delete funcNode.kind;\n    node.value = funcNode;\n\n    if (type === \"ClassPrivateMethod\") {\n      node.computed = false;\n    }\n\n    type = \"MethodDefinition\";\n    return this.finishNode(node, type);\n  }\n\n  parseClassProperty(...args) {\n    const propertyNode = super.parseClassProperty(...args);\n\n    if (this.getPluginOption(\"estree\", \"classFeatures\")) {\n      propertyNode.type = \"PropertyDefinition\";\n    }\n\n    return propertyNode;\n  }\n\n  parseClassPrivateProperty(...args) {\n    const propertyNode = super.parseClassPrivateProperty(...args);\n\n    if (this.getPluginOption(\"estree\", \"classFeatures\")) {\n      propertyNode.type = \"PropertyDefinition\";\n      propertyNode.computed = false;\n    }\n\n    return propertyNode;\n  }\n\n  parseObjectMethod(prop, isGenerator, isAsync, isPattern, isAccessor) {\n    const node = super.parseObjectMethod(prop, isGenerator, isAsync, isPattern, isAccessor);\n\n    if (node) {\n      node.type = \"Property\";\n      if (node.kind === \"method\") node.kind = \"init\";\n      node.shorthand = false;\n    }\n\n    return node;\n  }\n\n  parseObjectProperty(prop, startPos, startLoc, isPattern, refExpressionErrors) {\n    const node = super.parseObjectProperty(prop, startPos, startLoc, isPattern, refExpressionErrors);\n\n    if (node) {\n      node.kind = \"init\";\n      node.type = \"Property\";\n    }\n\n    return node;\n  }\n\n  toAssignable(node, isLHS = false) {\n    if (node != null && this.isObjectProperty(node)) {\n      this.toAssignable(node.value, isLHS);\n      return node;\n    }\n\n    return super.toAssignable(node, isLHS);\n  }\n\n  toAssignableObjectExpressionProp(prop, ...args) {\n    if (prop.kind === \"get\" || prop.kind === \"set\") {\n      this.raise(prop.key.start, ErrorMessages.PatternHasAccessor);\n    } else if (prop.method) {\n      this.raise(prop.key.start, ErrorMessages.PatternHasMethod);\n    } else {\n      super.toAssignableObjectExpressionProp(prop, ...args);\n    }\n  }\n\n  finishCallExpression(node, optional) {\n    super.finishCallExpression(node, optional);\n\n    if (node.callee.type === \"Import\") {\n      node.type = \"ImportExpression\";\n      node.source = node.arguments[0];\n      delete node.arguments;\n      delete node.callee;\n    }\n\n    return node;\n  }\n\n  toReferencedArguments(node) {\n    if (node.type === \"ImportExpression\") {\n      return;\n    }\n\n    super.toReferencedArguments(node);\n  }\n\n  parseExport(node) {\n    super.parseExport(node);\n\n    switch (node.type) {\n      case \"ExportAllDeclaration\":\n        node.exported = null;\n        break;\n\n      case \"ExportNamedDeclaration\":\n        if (node.specifiers.length === 1 && node.specifiers[0].type === \"ExportNamespaceSpecifier\") {\n          node.type = \"ExportAllDeclaration\";\n          node.exported = node.specifiers[0].exported;\n          delete node.specifiers;\n        }\n\n        break;\n    }\n\n    return node;\n  }\n\n  parseSubscript(base, startPos, startLoc, noCalls, state) {\n    const node = super.parseSubscript(base, startPos, startLoc, noCalls, state);\n\n    if (state.optionalChainMember) {\n      if (node.type === \"OptionalMemberExpression\" || node.type === \"OptionalCallExpression\") {\n        node.type = node.type.substring(8);\n      }\n\n      if (state.stop) {\n        const chain = this.startNodeAtNode(node);\n        chain.expression = node;\n        return this.finishNode(chain, \"ChainExpression\");\n      }\n    } else if (node.type === \"MemberExpression\" || node.type === \"CallExpression\") {\n      node.optional = false;\n    }\n\n    return node;\n  }\n\n  hasPropertyAsPrivateName(node) {\n    if (node.type === \"ChainExpression\") {\n      node = node.expression;\n    }\n\n    return super.hasPropertyAsPrivateName(node);\n  }\n\n  isOptionalChain(node) {\n    return node.type === \"ChainExpression\";\n  }\n\n  isObjectProperty(node) {\n    return node.type === \"Property\" && node.kind === \"init\" && !node.method;\n  }\n\n  isObjectMethod(node) {\n    return node.method || node.kind === \"get\" || node.kind === \"set\";\n  }\n\n});\n\nclass TokContext {\n  constructor(token, isExpr, preserveSpace, override) {\n    this.token = void 0;\n    this.isExpr = void 0;\n    this.preserveSpace = void 0;\n    this.override = void 0;\n    this.token = token;\n    this.isExpr = !!isExpr;\n    this.preserveSpace = !!preserveSpace;\n    this.override = override;\n  }\n\n}\nconst types$1 = {\n  braceStatement: new TokContext(\"{\", false),\n  braceExpression: new TokContext(\"{\", true),\n  recordExpression: new TokContext(\"#{\", true),\n  templateQuasi: new TokContext(\"${\", false),\n  parenStatement: new TokContext(\"(\", false),\n  parenExpression: new TokContext(\"(\", true),\n  template: new TokContext(\"`\", true, true, p => p.readTmplToken()),\n  functionExpression: new TokContext(\"function\", true),\n  functionStatement: new TokContext(\"function\", false)\n};\n\ntypes.parenR.updateContext = types.braceR.updateContext = function () {\n  if (this.state.context.length === 1) {\n    this.state.exprAllowed = true;\n    return;\n  }\n\n  let out = this.state.context.pop();\n\n  if (out === types$1.braceStatement && this.curContext().token === \"function\") {\n    out = this.state.context.pop();\n  }\n\n  this.state.exprAllowed = !out.isExpr;\n};\n\ntypes.name.updateContext = function (prevType) {\n  let allowed = false;\n\n  if (prevType !== types.dot) {\n    if (this.state.value === \"of\" && !this.state.exprAllowed && prevType !== types._function && prevType !== types._class) {\n      allowed = true;\n    }\n  }\n\n  this.state.exprAllowed = allowed;\n\n  if (this.state.isIterator) {\n    this.state.isIterator = false;\n  }\n};\n\ntypes.braceL.updateContext = function (prevType) {\n  this.state.context.push(this.braceIsBlock(prevType) ? types$1.braceStatement : types$1.braceExpression);\n  this.state.exprAllowed = true;\n};\n\ntypes.dollarBraceL.updateContext = function () {\n  this.state.context.push(types$1.templateQuasi);\n  this.state.exprAllowed = true;\n};\n\ntypes.parenL.updateContext = function (prevType) {\n  const statementParens = prevType === types._if || prevType === types._for || prevType === types._with || prevType === types._while;\n  this.state.context.push(statementParens ? types$1.parenStatement : types$1.parenExpression);\n  this.state.exprAllowed = true;\n};\n\ntypes.incDec.updateContext = function () {};\n\ntypes._function.updateContext = types._class.updateContext = function (prevType) {\n  if (prevType.beforeExpr && prevType !== types.semi && prevType !== types._else && !(prevType === types._return && this.hasPrecedingLineBreak()) && !((prevType === types.colon || prevType === types.braceL) && this.curContext() === types$1.b_stat)) {\n    this.state.context.push(types$1.functionExpression);\n  } else {\n    this.state.context.push(types$1.functionStatement);\n  }\n\n  this.state.exprAllowed = false;\n};\n\ntypes.backQuote.updateContext = function () {\n  if (this.curContext() === types$1.template) {\n    this.state.context.pop();\n  } else {\n    this.state.context.push(types$1.template);\n  }\n\n  this.state.exprAllowed = false;\n};\n\ntypes.braceHashL.updateContext = function () {\n  this.state.context.push(types$1.recordExpression);\n  this.state.exprAllowed = true;\n};\n\nlet nonASCIIidentifierStartChars = \"\\xaa\\xb5\\xba\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02c1\\u02c6-\\u02d1\\u02e0-\\u02e4\\u02ec\\u02ee\\u0370-\\u0374\\u0376\\u0377\\u037a-\\u037d\\u037f\\u0386\\u0388-\\u038a\\u038c\\u038e-\\u03a1\\u03a3-\\u03f5\\u03f7-\\u0481\\u048a-\\u052f\\u0531-\\u0556\\u0559\\u0560-\\u0588\\u05d0-\\u05ea\\u05ef-\\u05f2\\u0620-\\u064a\\u066e\\u066f\\u0671-\\u06d3\\u06d5\\u06e5\\u06e6\\u06ee\\u06ef\\u06fa-\\u06fc\\u06ff\\u0710\\u0712-\\u072f\\u074d-\\u07a5\\u07b1\\u07ca-\\u07ea\\u07f4\\u07f5\\u07fa\\u0800-\\u0815\\u081a\\u0824\\u0828\\u0840-\\u0858\\u0860-\\u086a\\u08a0-\\u08b4\\u08b6-\\u08c7\\u0904-\\u0939\\u093d\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098c\\u098f\\u0990\\u0993-\\u09a8\\u09aa-\\u09b0\\u09b2\\u09b6-\\u09b9\\u09bd\\u09ce\\u09dc\\u09dd\\u09df-\\u09e1\\u09f0\\u09f1\\u09fc\\u0a05-\\u0a0a\\u0a0f\\u0a10\\u0a13-\\u0a28\\u0a2a-\\u0a30\\u0a32\\u0a33\\u0a35\\u0a36\\u0a38\\u0a39\\u0a59-\\u0a5c\\u0a5e\\u0a72-\\u0a74\\u0a85-\\u0a8d\\u0a8f-\\u0a91\\u0a93-\\u0aa8\\u0aaa-\\u0ab0\\u0ab2\\u0ab3\\u0ab5-\\u0ab9\\u0abd\\u0ad0\\u0ae0\\u0ae1\\u0af9\\u0b05-\\u0b0c\\u0b0f\\u0b10\\u0b13-\\u0b28\\u0b2a-\\u0b30\\u0b32\\u0b33\\u0b35-\\u0b39\\u0b3d\\u0b5c\\u0b5d\\u0b5f-\\u0b61\\u0b71\\u0b83\\u0b85-\\u0b8a\\u0b8e-\\u0b90\\u0b92-\\u0b95\\u0b99\\u0b9a\\u0b9c\\u0b9e\\u0b9f\\u0ba3\\u0ba4\\u0ba8-\\u0baa\\u0bae-\\u0bb9\\u0bd0\\u0c05-\\u0c0c\\u0c0e-\\u0c10\\u0c12-\\u0c28\\u0c2a-\\u0c39\\u0c3d\\u0c58-\\u0c5a\\u0c60\\u0c61\\u0c80\\u0c85-\\u0c8c\\u0c8e-\\u0c90\\u0c92-\\u0ca8\\u0caa-\\u0cb3\\u0cb5-\\u0cb9\\u0cbd\\u0cde\\u0ce0\\u0ce1\\u0cf1\\u0cf2\\u0d04-\\u0d0c\\u0d0e-\\u0d10\\u0d12-\\u0d3a\\u0d3d\\u0d4e\\u0d54-\\u0d56\\u0d5f-\\u0d61\\u0d7a-\\u0d7f\\u0d85-\\u0d96\\u0d9a-\\u0db1\\u0db3-\\u0dbb\\u0dbd\\u0dc0-\\u0dc6\\u0e01-\\u0e30\\u0e32\\u0e33\\u0e40-\\u0e46\\u0e81\\u0e82\\u0e84\\u0e86-\\u0e8a\\u0e8c-\\u0ea3\\u0ea5\\u0ea7-\\u0eb0\\u0eb2\\u0eb3\\u0ebd\\u0ec0-\\u0ec4\\u0ec6\\u0edc-\\u0edf\\u0f00\\u0f40-\\u0f47\\u0f49-\\u0f6c\\u0f88-\\u0f8c\\u1000-\\u102a\\u103f\\u1050-\\u1055\\u105a-\\u105d\\u1061\\u1065\\u1066\\u106e-\\u1070\\u1075-\\u1081\\u108e\\u10a0-\\u10c5\\u10c7\\u10cd\\u10d0-\\u10fa\\u10fc-\\u1248\\u124a-\\u124d\\u1250-\\u1256\\u1258\\u125a-\\u125d\\u1260-\\u1288\\u128a-\\u128d\\u1290-\\u12b0\\u12b2-\\u12b5\\u12b8-\\u12be\\u12c0\\u12c2-\\u12c5\\u12c8-\\u12d6\\u12d8-\\u1310\\u1312-\\u1315\\u1318-\\u135a\\u1380-\\u138f\\u13a0-\\u13f5\\u13f8-\\u13fd\\u1401-\\u166c\\u166f-\\u167f\\u1681-\\u169a\\u16a0-\\u16ea\\u16ee-\\u16f8\\u1700-\\u170c\\u170e-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176c\\u176e-\\u1770\\u1780-\\u17b3\\u17d7\\u17dc\\u1820-\\u1878\\u1880-\\u18a8\\u18aa\\u18b0-\\u18f5\\u1900-\\u191e\\u1950-\\u196d\\u1970-\\u1974\\u1980-\\u19ab\\u19b0-\\u19c9\\u1a00-\\u1a16\\u1a20-\\u1a54\\u1aa7\\u1b05-\\u1b33\\u1b45-\\u1b4b\\u1b83-\\u1ba0\\u1bae\\u1baf\\u1bba-\\u1be5\\u1c00-\\u1c23\\u1c4d-\\u1c4f\\u1c5a-\\u1c7d\\u1c80-\\u1c88\\u1c90-\\u1cba\\u1cbd-\\u1cbf\\u1ce9-\\u1cec\\u1cee-\\u1cf3\\u1cf5\\u1cf6\\u1cfa\\u1d00-\\u1dbf\\u1e00-\\u1f15\\u1f18-\\u1f1d\\u1f20-\\u1f45\\u1f48-\\u1f4d\\u1f50-\\u1f57\\u1f59\\u1f5b\\u1f5d\\u1f5f-\\u1f7d\\u1f80-\\u1fb4\\u1fb6-\\u1fbc\\u1fbe\\u1fc2-\\u1fc4\\u1fc6-\\u1fcc\\u1fd0-\\u1fd3\\u1fd6-\\u1fdb\\u1fe0-\\u1fec\\u1ff2-\\u1ff4\\u1ff6-\\u1ffc\\u2071\\u207f\\u2090-\\u209c\\u2102\\u2107\\u210a-\\u2113\\u2115\\u2118-\\u211d\\u2124\\u2126\\u2128\\u212a-\\u2139\\u213c-\\u213f\\u2145-\\u2149\\u214e\\u2160-\\u2188\\u2c00-\\u2c2e\\u2c30-\\u2c5e\\u2c60-\\u2ce4\\u2ceb-\\u2cee\\u2cf2\\u2cf3\\u2d00-\\u2d25\\u2d27\\u2d2d\\u2d30-\\u2d67\\u2d6f\\u2d80-\\u2d96\\u2da0-\\u2da6\\u2da8-\\u2dae\\u2db0-\\u2db6\\u2db8-\\u2dbe\\u2dc0-\\u2dc6\\u2dc8-\\u2dce\\u2dd0-\\u2dd6\\u2dd8-\\u2dde\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303c\\u3041-\\u3096\\u309b-\\u309f\\u30a1-\\u30fa\\u30fc-\\u30ff\\u3105-\\u312f\\u3131-\\u318e\\u31a0-\\u31bf\\u31f0-\\u31ff\\u3400-\\u4dbf\\u4e00-\\u9ffc\\ua000-\\ua48c\\ua4d0-\\ua4fd\\ua500-\\ua60c\\ua610-\\ua61f\\ua62a\\ua62b\\ua640-\\ua66e\\ua67f-\\ua69d\\ua6a0-\\ua6ef\\ua717-\\ua71f\\ua722-\\ua788\\ua78b-\\ua7bf\\ua7c2-\\ua7ca\\ua7f5-\\ua801\\ua803-\\ua805\\ua807-\\ua80a\\ua80c-\\ua822\\ua840-\\ua873\\ua882-\\ua8b3\\ua8f2-\\ua8f7\\ua8fb\\ua8fd\\ua8fe\\ua90a-\\ua925\\ua930-\\ua946\\ua960-\\ua97c\\ua984-\\ua9b2\\ua9cf\\ua9e0-\\ua9e4\\ua9e6-\\ua9ef\\ua9fa-\\ua9fe\\uaa00-\\uaa28\\uaa40-\\uaa42\\uaa44-\\uaa4b\\uaa60-\\uaa76\\uaa7a\\uaa7e-\\uaaaf\\uaab1\\uaab5\\uaab6\\uaab9-\\uaabd\\uaac0\\uaac2\\uaadb-\\uaadd\\uaae0-\\uaaea\\uaaf2-\\uaaf4\\uab01-\\uab06\\uab09-\\uab0e\\uab11-\\uab16\\uab20-\\uab26\\uab28-\\uab2e\\uab30-\\uab5a\\uab5c-\\uab69\\uab70-\\uabe2\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\uf900-\\ufa6d\\ufa70-\\ufad9\\ufb00-\\ufb06\\ufb13-\\ufb17\\ufb1d\\ufb1f-\\ufb28\\ufb2a-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40\\ufb41\\ufb43\\ufb44\\ufb46-\\ufbb1\\ufbd3-\\ufd3d\\ufd50-\\ufd8f\\ufd92-\\ufdc7\\ufdf0-\\ufdfb\\ufe70-\\ufe74\\ufe76-\\ufefc\\uff21-\\uff3a\\uff41-\\uff5a\\uff66-\\uffbe\\uffc2-\\uffc7\\uffca-\\uffcf\\uffd2-\\uffd7\\uffda-\\uffdc\";\nlet nonASCIIidentifierChars = \"\\u200c\\u200d\\xb7\\u0300-\\u036f\\u0387\\u0483-\\u0487\\u0591-\\u05bd\\u05bf\\u05c1\\u05c2\\u05c4\\u05c5\\u05c7\\u0610-\\u061a\\u064b-\\u0669\\u0670\\u06d6-\\u06dc\\u06df-\\u06e4\\u06e7\\u06e8\\u06ea-\\u06ed\\u06f0-\\u06f9\\u0711\\u0730-\\u074a\\u07a6-\\u07b0\\u07c0-\\u07c9\\u07eb-\\u07f3\\u07fd\\u0816-\\u0819\\u081b-\\u0823\\u0825-\\u0827\\u0829-\\u082d\\u0859-\\u085b\\u08d3-\\u08e1\\u08e3-\\u0903\\u093a-\\u093c\\u093e-\\u094f\\u0951-\\u0957\\u0962\\u0963\\u0966-\\u096f\\u0981-\\u0983\\u09bc\\u09be-\\u09c4\\u09c7\\u09c8\\u09cb-\\u09cd\\u09d7\\u09e2\\u09e3\\u09e6-\\u09ef\\u09fe\\u0a01-\\u0a03\\u0a3c\\u0a3e-\\u0a42\\u0a47\\u0a48\\u0a4b-\\u0a4d\\u0a51\\u0a66-\\u0a71\\u0a75\\u0a81-\\u0a83\\u0abc\\u0abe-\\u0ac5\\u0ac7-\\u0ac9\\u0acb-\\u0acd\\u0ae2\\u0ae3\\u0ae6-\\u0aef\\u0afa-\\u0aff\\u0b01-\\u0b03\\u0b3c\\u0b3e-\\u0b44\\u0b47\\u0b48\\u0b4b-\\u0b4d\\u0b55-\\u0b57\\u0b62\\u0b63\\u0b66-\\u0b6f\\u0b82\\u0bbe-\\u0bc2\\u0bc6-\\u0bc8\\u0bca-\\u0bcd\\u0bd7\\u0be6-\\u0bef\\u0c00-\\u0c04\\u0c3e-\\u0c44\\u0c46-\\u0c48\\u0c4a-\\u0c4d\\u0c55\\u0c56\\u0c62\\u0c63\\u0c66-\\u0c6f\\u0c81-\\u0c83\\u0cbc\\u0cbe-\\u0cc4\\u0cc6-\\u0cc8\\u0cca-\\u0ccd\\u0cd5\\u0cd6\\u0ce2\\u0ce3\\u0ce6-\\u0cef\\u0d00-\\u0d03\\u0d3b\\u0d3c\\u0d3e-\\u0d44\\u0d46-\\u0d48\\u0d4a-\\u0d4d\\u0d57\\u0d62\\u0d63\\u0d66-\\u0d6f\\u0d81-\\u0d83\\u0dca\\u0dcf-\\u0dd4\\u0dd6\\u0dd8-\\u0ddf\\u0de6-\\u0def\\u0df2\\u0df3\\u0e31\\u0e34-\\u0e3a\\u0e47-\\u0e4e\\u0e50-\\u0e59\\u0eb1\\u0eb4-\\u0ebc\\u0ec8-\\u0ecd\\u0ed0-\\u0ed9\\u0f18\\u0f19\\u0f20-\\u0f29\\u0f35\\u0f37\\u0f39\\u0f3e\\u0f3f\\u0f71-\\u0f84\\u0f86\\u0f87\\u0f8d-\\u0f97\\u0f99-\\u0fbc\\u0fc6\\u102b-\\u103e\\u1040-\\u1049\\u1056-\\u1059\\u105e-\\u1060\\u1062-\\u1064\\u1067-\\u106d\\u1071-\\u1074\\u1082-\\u108d\\u108f-\\u109d\\u135d-\\u135f\\u1369-\\u1371\\u1712-\\u1714\\u1732-\\u1734\\u1752\\u1753\\u1772\\u1773\\u17b4-\\u17d3\\u17dd\\u17e0-\\u17e9\\u180b-\\u180d\\u1810-\\u1819\\u18a9\\u1920-\\u192b\\u1930-\\u193b\\u1946-\\u194f\\u19d0-\\u19da\\u1a17-\\u1a1b\\u1a55-\\u1a5e\\u1a60-\\u1a7c\\u1a7f-\\u1a89\\u1a90-\\u1a99\\u1ab0-\\u1abd\\u1abf\\u1ac0\\u1b00-\\u1b04\\u1b34-\\u1b44\\u1b50-\\u1b59\\u1b6b-\\u1b73\\u1b80-\\u1b82\\u1ba1-\\u1bad\\u1bb0-\\u1bb9\\u1be6-\\u1bf3\\u1c24-\\u1c37\\u1c40-\\u1c49\\u1c50-\\u1c59\\u1cd0-\\u1cd2\\u1cd4-\\u1ce8\\u1ced\\u1cf4\\u1cf7-\\u1cf9\\u1dc0-\\u1df9\\u1dfb-\\u1dff\\u203f\\u2040\\u2054\\u20d0-\\u20dc\\u20e1\\u20e5-\\u20f0\\u2cef-\\u2cf1\\u2d7f\\u2de0-\\u2dff\\u302a-\\u302f\\u3099\\u309a\\ua620-\\ua629\\ua66f\\ua674-\\ua67d\\ua69e\\ua69f\\ua6f0\\ua6f1\\ua802\\ua806\\ua80b\\ua823-\\ua827\\ua82c\\ua880\\ua881\\ua8b4-\\ua8c5\\ua8d0-\\ua8d9\\ua8e0-\\ua8f1\\ua8ff-\\ua909\\ua926-\\ua92d\\ua947-\\ua953\\ua980-\\ua983\\ua9b3-\\ua9c0\\ua9d0-\\ua9d9\\ua9e5\\ua9f0-\\ua9f9\\uaa29-\\uaa36\\uaa43\\uaa4c\\uaa4d\\uaa50-\\uaa59\\uaa7b-\\uaa7d\\uaab0\\uaab2-\\uaab4\\uaab7\\uaab8\\uaabe\\uaabf\\uaac1\\uaaeb-\\uaaef\\uaaf5\\uaaf6\\uabe3-\\uabea\\uabec\\uabed\\uabf0-\\uabf9\\ufb1e\\ufe00-\\ufe0f\\ufe20-\\ufe2f\\ufe33\\ufe34\\ufe4d-\\ufe4f\\uff10-\\uff19\\uff3f\";\nconst nonASCIIidentifierStart = new RegExp(\"[\" + nonASCIIidentifierStartChars + \"]\");\nconst nonASCIIidentifier = new RegExp(\"[\" + nonASCIIidentifierStartChars + nonASCIIidentifierChars + \"]\");\nnonASCIIidentifierStartChars = nonASCIIidentifierChars = null;\nconst astralIdentifierStartCodes = [0, 11, 2, 25, 2, 18, 2, 1, 2, 14, 3, 13, 35, 122, 70, 52, 268, 28, 4, 48, 48, 31, 14, 29, 6, 37, 11, 29, 3, 35, 5, 7, 2, 4, 43, 157, 19, 35, 5, 35, 5, 39, 9, 51, 157, 310, 10, 21, 11, 7, 153, 5, 3, 0, 2, 43, 2, 1, 4, 0, 3, 22, 11, 22, 10, 30, 66, 18, 2, 1, 11, 21, 11, 25, 71, 55, 7, 1, 65, 0, 16, 3, 2, 2, 2, 28, 43, 28, 4, 28, 36, 7, 2, 27, 28, 53, 11, 21, 11, 18, 14, 17, 111, 72, 56, 50, 14, 50, 14, 35, 349, 41, 7, 1, 79, 28, 11, 0, 9, 21, 107, 20, 28, 22, 13, 52, 76, 44, 33, 24, 27, 35, 30, 0, 3, 0, 9, 34, 4, 0, 13, 47, 15, 3, 22, 0, 2, 0, 36, 17, 2, 24, 85, 6, 2, 0, 2, 3, 2, 14, 2, 9, 8, 46, 39, 7, 3, 1, 3, 21, 2, 6, 2, 1, 2, 4, 4, 0, 19, 0, 13, 4, 159, 52, 19, 3, 21, 2, 31, 47, 21, 1, 2, 0, 185, 46, 42, 3, 37, 47, 21, 0, 60, 42, 14, 0, 72, 26, 230, 43, 117, 63, 32, 7, 3, 0, 3, 7, 2, 1, 2, 23, 16, 0, 2, 0, 95, 7, 3, 38, 17, 0, 2, 0, 29, 0, 11, 39, 8, 0, 22, 0, 12, 45, 20, 0, 35, 56, 264, 8, 2, 36, 18, 0, 50, 29, 113, 6, 2, 1, 2, 37, 22, 0, 26, 5, 2, 1, 2, 31, 15, 0, 328, 18, 190, 0, 80, 921, 103, 110, 18, 195, 2749, 1070, 4050, 582, 8634, 568, 8, 30, 114, 29, 19, 47, 17, 3, 32, 20, 6, 18, 689, 63, 129, 74, 6, 0, 67, 12, 65, 1, 2, 0, 29, 6135, 9, 1237, 43, 8, 8952, 286, 50, 2, 18, 3, 9, 395, 2309, 106, 6, 12, 4, 8, 8, 9, 5991, 84, 2, 70, 2, 1, 3, 0, 3, 1, 3, 3, 2, 11, 2, 0, 2, 6, 2, 64, 2, 3, 3, 7, 2, 6, 2, 27, 2, 3, 2, 4, 2, 0, 4, 6, 2, 339, 3, 24, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 7, 2357, 44, 11, 6, 17, 0, 370, 43, 1301, 196, 60, 67, 8, 0, 1205, 3, 2, 26, 2, 1, 2, 0, 3, 0, 2, 9, 2, 3, 2, 0, 2, 0, 7, 0, 5, 0, 2, 0, 2, 0, 2, 2, 2, 1, 2, 0, 3, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 1, 2, 0, 3, 3, 2, 6, 2, 3, 2, 3, 2, 0, 2, 9, 2, 16, 6, 2, 2, 4, 2, 16, 4421, 42717, 35, 4148, 12, 221, 3, 5761, 15, 7472, 3104, 541, 1507, 4938];\nconst astralIdentifierCodes = [509, 0, 227, 0, 150, 4, 294, 9, 1368, 2, 2, 1, 6, 3, 41, 2, 5, 0, 166, 1, 574, 3, 9, 9, 370, 1, 154, 10, 176, 2, 54, 14, 32, 9, 16, 3, 46, 10, 54, 9, 7, 2, 37, 13, 2, 9, 6, 1, 45, 0, 13, 2, 49, 13, 9, 3, 2, 11, 83, 11, 7, 0, 161, 11, 6, 9, 7, 3, 56, 1, 2, 6, 3, 1, 3, 2, 10, 0, 11, 1, 3, 6, 4, 4, 193, 17, 10, 9, 5, 0, 82, 19, 13, 9, 214, 6, 3, 8, 28, 1, 83, 16, 16, 9, 82, 12, 9, 9, 84, 14, 5, 9, 243, 14, 166, 9, 71, 5, 2, 1, 3, 3, 2, 0, 2, 1, 13, 9, 120, 6, 3, 6, 4, 0, 29, 9, 41, 6, 2, 3, 9, 0, 10, 10, 47, 15, 406, 7, 2, 7, 17, 9, 57, 21, 2, 13, 123, 5, 4, 0, 2, 1, 2, 6, 2, 0, 9, 9, 49, 4, 2, 1, 2, 4, 9, 9, 330, 3, 19306, 9, 135, 4, 60, 6, 26, 9, 1014, 0, 2, 54, 8, 3, 82, 0, 12, 1, 19628, 1, 5319, 4, 4, 5, 9, 7, 3, 6, 31, 3, 149, 2, 1418, 49, 513, 54, 5, 49, 9, 0, 15, 0, 23, 4, 2, 14, 1361, 6, 2, 16, 3, 6, 2, 1, 2, 4, 262, 6, 10, 9, 419, 13, 1495, 6, 110, 6, 6, 9, 4759, 9, 787719, 239];\n\nfunction isInAstralSet(code, set) {\n  let pos = 0x10000;\n\n  for (let i = 0, length = set.length; i < length; i += 2) {\n    pos += set[i];\n    if (pos > code) return false;\n    pos += set[i + 1];\n    if (pos >= code) return true;\n  }\n\n  return false;\n}\n\nfunction isIdentifierStart(code) {\n  if (code < 65) return code === 36;\n  if (code <= 90) return true;\n  if (code < 97) return code === 95;\n  if (code <= 122) return true;\n\n  if (code <= 0xffff) {\n    return code >= 0xaa && nonASCIIidentifierStart.test(String.fromCharCode(code));\n  }\n\n  return isInAstralSet(code, astralIdentifierStartCodes);\n}\nfunction isIdentifierChar(code) {\n  if (code < 48) return code === 36;\n  if (code < 58) return true;\n  if (code < 65) return false;\n  if (code <= 90) return true;\n  if (code < 97) return code === 95;\n  if (code <= 122) return true;\n\n  if (code <= 0xffff) {\n    return code >= 0xaa && nonASCIIidentifier.test(String.fromCharCode(code));\n  }\n\n  return isInAstralSet(code, astralIdentifierStartCodes) || isInAstralSet(code, astralIdentifierCodes);\n}\n\nconst reservedWords = {\n  keyword: [\"break\", \"case\", \"catch\", \"continue\", \"debugger\", \"default\", \"do\", \"else\", \"finally\", \"for\", \"function\", \"if\", \"return\", \"switch\", \"throw\", \"try\", \"var\", \"const\", \"while\", \"with\", \"new\", \"this\", \"super\", \"class\", \"extends\", \"export\", \"import\", \"null\", \"true\", \"false\", \"in\", \"instanceof\", \"typeof\", \"void\", \"delete\"],\n  strict: [\"implements\", \"interface\", \"let\", \"package\", \"private\", \"protected\", \"public\", \"static\", \"yield\"],\n  strictBind: [\"eval\", \"arguments\"]\n};\nconst keywords$1 = new Set(reservedWords.keyword);\nconst reservedWordsStrictSet = new Set(reservedWords.strict);\nconst reservedWordsStrictBindSet = new Set(reservedWords.strictBind);\nfunction isReservedWord(word, inModule) {\n  return inModule && word === \"await\" || word === \"enum\";\n}\nfunction isStrictReservedWord(word, inModule) {\n  return isReservedWord(word, inModule) || reservedWordsStrictSet.has(word);\n}\nfunction isStrictBindOnlyReservedWord(word) {\n  return reservedWordsStrictBindSet.has(word);\n}\nfunction isStrictBindReservedWord(word, inModule) {\n  return isStrictReservedWord(word, inModule) || isStrictBindOnlyReservedWord(word);\n}\nfunction isKeyword(word) {\n  return keywords$1.has(word);\n}\n\nconst keywordRelationalOperator = /^in(stanceof)?$/;\nfunction isIteratorStart(current, next) {\n  return current === 64 && next === 64;\n}\n\nconst SCOPE_OTHER = 0b000000000,\n      SCOPE_PROGRAM = 0b000000001,\n      SCOPE_FUNCTION = 0b000000010,\n      SCOPE_ARROW = 0b000000100,\n      SCOPE_SIMPLE_CATCH = 0b000001000,\n      SCOPE_SUPER = 0b000010000,\n      SCOPE_DIRECT_SUPER = 0b000100000,\n      SCOPE_CLASS = 0b001000000,\n      SCOPE_STATIC_BLOCK = 0b010000000,\n      SCOPE_TS_MODULE = 0b100000000,\n      SCOPE_VAR = SCOPE_PROGRAM | SCOPE_FUNCTION | SCOPE_TS_MODULE;\nconst BIND_KIND_VALUE = 0b000000000001,\n      BIND_KIND_TYPE = 0b000000000010,\n      BIND_SCOPE_VAR = 0b000000000100,\n      BIND_SCOPE_LEXICAL = 0b000000001000,\n      BIND_SCOPE_FUNCTION = 0b000000010000,\n      BIND_FLAGS_NONE = 0b000001000000,\n      BIND_FLAGS_CLASS = 0b000010000000,\n      BIND_FLAGS_TS_ENUM = 0b000100000000,\n      BIND_FLAGS_TS_CONST_ENUM = 0b001000000000,\n      BIND_FLAGS_TS_EXPORT_ONLY = 0b010000000000,\n      BIND_FLAGS_FLOW_DECLARE_FN = 0b100000000000;\nconst BIND_CLASS = BIND_KIND_VALUE | BIND_KIND_TYPE | BIND_SCOPE_LEXICAL | BIND_FLAGS_CLASS,\n      BIND_LEXICAL = BIND_KIND_VALUE | 0 | BIND_SCOPE_LEXICAL | 0,\n      BIND_VAR = BIND_KIND_VALUE | 0 | BIND_SCOPE_VAR | 0,\n      BIND_FUNCTION = BIND_KIND_VALUE | 0 | BIND_SCOPE_FUNCTION | 0,\n      BIND_TS_INTERFACE = 0 | BIND_KIND_TYPE | 0 | BIND_FLAGS_CLASS,\n      BIND_TS_TYPE = 0 | BIND_KIND_TYPE | 0 | 0,\n      BIND_TS_ENUM = BIND_KIND_VALUE | BIND_KIND_TYPE | BIND_SCOPE_LEXICAL | BIND_FLAGS_TS_ENUM,\n      BIND_TS_AMBIENT = 0 | 0 | 0 | BIND_FLAGS_TS_EXPORT_ONLY,\n      BIND_NONE = 0 | 0 | 0 | BIND_FLAGS_NONE,\n      BIND_OUTSIDE = BIND_KIND_VALUE | 0 | 0 | BIND_FLAGS_NONE,\n      BIND_TS_CONST_ENUM = BIND_TS_ENUM | BIND_FLAGS_TS_CONST_ENUM,\n      BIND_TS_NAMESPACE = 0 | 0 | 0 | BIND_FLAGS_TS_EXPORT_ONLY,\n      BIND_FLOW_DECLARE_FN = BIND_FLAGS_FLOW_DECLARE_FN;\nconst CLASS_ELEMENT_FLAG_STATIC = 0b100,\n      CLASS_ELEMENT_KIND_GETTER = 0b010,\n      CLASS_ELEMENT_KIND_SETTER = 0b001,\n      CLASS_ELEMENT_KIND_ACCESSOR = CLASS_ELEMENT_KIND_GETTER | CLASS_ELEMENT_KIND_SETTER;\nconst CLASS_ELEMENT_STATIC_GETTER = CLASS_ELEMENT_KIND_GETTER | CLASS_ELEMENT_FLAG_STATIC,\n      CLASS_ELEMENT_STATIC_SETTER = CLASS_ELEMENT_KIND_SETTER | CLASS_ELEMENT_FLAG_STATIC,\n      CLASS_ELEMENT_INSTANCE_GETTER = CLASS_ELEMENT_KIND_GETTER,\n      CLASS_ELEMENT_INSTANCE_SETTER = CLASS_ELEMENT_KIND_SETTER,\n      CLASS_ELEMENT_OTHER = 0;\n\nclass Scope {\n  constructor(flags) {\n    this.flags = void 0;\n    this.var = [];\n    this.lexical = [];\n    this.functions = [];\n    this.flags = flags;\n  }\n\n}\nclass ScopeHandler {\n  constructor(raise, inModule) {\n    this.scopeStack = [];\n    this.undefinedExports = new Map();\n    this.undefinedPrivateNames = new Map();\n    this.raise = raise;\n    this.inModule = inModule;\n  }\n\n  get inFunction() {\n    return (this.currentVarScope().flags & SCOPE_FUNCTION) > 0;\n  }\n\n  get allowSuper() {\n    return (this.currentThisScope().flags & SCOPE_SUPER) > 0;\n  }\n\n  get allowDirectSuper() {\n    return (this.currentThisScope().flags & SCOPE_DIRECT_SUPER) > 0;\n  }\n\n  get inClass() {\n    return (this.currentThisScope().flags & SCOPE_CLASS) > 0;\n  }\n\n  get inStaticBlock() {\n    return (this.currentThisScope().flags & SCOPE_STATIC_BLOCK) > 0;\n  }\n\n  get inNonArrowFunction() {\n    return (this.currentThisScope().flags & SCOPE_FUNCTION) > 0;\n  }\n\n  get treatFunctionsAsVar() {\n    return this.treatFunctionsAsVarInScope(this.currentScope());\n  }\n\n  createScope(flags) {\n    return new Scope(flags);\n  }\n\n  enter(flags) {\n    this.scopeStack.push(this.createScope(flags));\n  }\n\n  exit() {\n    this.scopeStack.pop();\n  }\n\n  treatFunctionsAsVarInScope(scope) {\n    return !!(scope.flags & SCOPE_FUNCTION || !this.inModule && scope.flags & SCOPE_PROGRAM);\n  }\n\n  declareName(name, bindingType, pos) {\n    let scope = this.currentScope();\n\n    if (bindingType & BIND_SCOPE_LEXICAL || bindingType & BIND_SCOPE_FUNCTION) {\n      this.checkRedeclarationInScope(scope, name, bindingType, pos);\n\n      if (bindingType & BIND_SCOPE_FUNCTION) {\n        scope.functions.push(name);\n      } else {\n        scope.lexical.push(name);\n      }\n\n      if (bindingType & BIND_SCOPE_LEXICAL) {\n        this.maybeExportDefined(scope, name);\n      }\n    } else if (bindingType & BIND_SCOPE_VAR) {\n      for (let i = this.scopeStack.length - 1; i >= 0; --i) {\n        scope = this.scopeStack[i];\n        this.checkRedeclarationInScope(scope, name, bindingType, pos);\n        scope.var.push(name);\n        this.maybeExportDefined(scope, name);\n        if (scope.flags & SCOPE_VAR) break;\n      }\n    }\n\n    if (this.inModule && scope.flags & SCOPE_PROGRAM) {\n      this.undefinedExports.delete(name);\n    }\n  }\n\n  maybeExportDefined(scope, name) {\n    if (this.inModule && scope.flags & SCOPE_PROGRAM) {\n      this.undefinedExports.delete(name);\n    }\n  }\n\n  checkRedeclarationInScope(scope, name, bindingType, pos) {\n    if (this.isRedeclaredInScope(scope, name, bindingType)) {\n      this.raise(pos, ErrorMessages.VarRedeclaration, name);\n    }\n  }\n\n  isRedeclaredInScope(scope, name, bindingType) {\n    if (!(bindingType & BIND_KIND_VALUE)) return false;\n\n    if (bindingType & BIND_SCOPE_LEXICAL) {\n      return scope.lexical.indexOf(name) > -1 || scope.functions.indexOf(name) > -1 || scope.var.indexOf(name) > -1;\n    }\n\n    if (bindingType & BIND_SCOPE_FUNCTION) {\n      return scope.lexical.indexOf(name) > -1 || !this.treatFunctionsAsVarInScope(scope) && scope.var.indexOf(name) > -1;\n    }\n\n    return scope.lexical.indexOf(name) > -1 && !(scope.flags & SCOPE_SIMPLE_CATCH && scope.lexical[0] === name) || !this.treatFunctionsAsVarInScope(scope) && scope.functions.indexOf(name) > -1;\n  }\n\n  checkLocalExport(id) {\n    if (this.scopeStack[0].lexical.indexOf(id.name) === -1 && this.scopeStack[0].var.indexOf(id.name) === -1 && this.scopeStack[0].functions.indexOf(id.name) === -1) {\n      this.undefinedExports.set(id.name, id.start);\n    }\n  }\n\n  currentScope() {\n    return this.scopeStack[this.scopeStack.length - 1];\n  }\n\n  currentVarScope() {\n    for (let i = this.scopeStack.length - 1;; i--) {\n      const scope = this.scopeStack[i];\n\n      if (scope.flags & SCOPE_VAR) {\n        return scope;\n      }\n    }\n  }\n\n  currentThisScope() {\n    for (let i = this.scopeStack.length - 1;; i--) {\n      const scope = this.scopeStack[i];\n\n      if ((scope.flags & SCOPE_VAR || scope.flags & SCOPE_CLASS) && !(scope.flags & SCOPE_ARROW)) {\n        return scope;\n      }\n    }\n  }\n\n}\n\nclass FlowScope extends Scope {\n  constructor(...args) {\n    super(...args);\n    this.declareFunctions = [];\n  }\n\n}\n\nclass FlowScopeHandler extends ScopeHandler {\n  createScope(flags) {\n    return new FlowScope(flags);\n  }\n\n  declareName(name, bindingType, pos) {\n    const scope = this.currentScope();\n\n    if (bindingType & BIND_FLAGS_FLOW_DECLARE_FN) {\n      this.checkRedeclarationInScope(scope, name, bindingType, pos);\n      this.maybeExportDefined(scope, name);\n      scope.declareFunctions.push(name);\n      return;\n    }\n\n    super.declareName(...arguments);\n  }\n\n  isRedeclaredInScope(scope, name, bindingType) {\n    if (super.isRedeclaredInScope(...arguments)) return true;\n\n    if (bindingType & BIND_FLAGS_FLOW_DECLARE_FN) {\n      return !scope.declareFunctions.includes(name) && (scope.lexical.includes(name) || scope.functions.includes(name));\n    }\n\n    return false;\n  }\n\n  checkLocalExport(id) {\n    if (this.scopeStack[0].declareFunctions.indexOf(id.name) === -1) {\n      super.checkLocalExport(id);\n    }\n  }\n\n}\n\nconst reservedTypes = new Set([\"_\", \"any\", \"bool\", \"boolean\", \"empty\", \"extends\", \"false\", \"interface\", \"mixed\", \"null\", \"number\", \"static\", \"string\", \"true\", \"typeof\", \"void\"]);\nconst FlowErrors = Object.freeze({\n  AmbiguousConditionalArrow: \"Ambiguous expression: wrap the arrow functions in parentheses to disambiguate.\",\n  AmbiguousDeclareModuleKind: \"Found both `declare module.exports` and `declare export` in the same module. Modules can only have 1 since they are either an ES module or they are a CommonJS module\",\n  AssignReservedType: \"Cannot overwrite reserved type %0\",\n  DeclareClassElement: \"The `declare` modifier can only appear on class fields.\",\n  DeclareClassFieldInitializer: \"Initializers are not allowed in fields with the `declare` modifier.\",\n  DuplicateDeclareModuleExports: \"Duplicate `declare module.exports` statement\",\n  EnumBooleanMemberNotInitialized: \"Boolean enum members need to be initialized. Use either `%0 = true,` or `%0 = false,` in enum `%1`.\",\n  EnumDuplicateMemberName: \"Enum member names need to be unique, but the name `%0` has already been used before in enum `%1`.\",\n  EnumInconsistentMemberValues: \"Enum `%0` has inconsistent member initializers. Either use no initializers, or consistently use literals (either booleans, numbers, or strings) for all member initializers.\",\n  EnumInvalidExplicitType: \"Enum type `%1` is not valid. Use one of `boolean`, `number`, `string`, or `symbol` in enum `%0`.\",\n  EnumInvalidExplicitTypeUnknownSupplied: \"Supplied enum type is not valid. Use one of `boolean`, `number`, `string`, or `symbol` in enum `%0`.\",\n  EnumInvalidMemberInitializerPrimaryType: \"Enum `%0` has type `%2`, so the initializer of `%1` needs to be a %2 literal.\",\n  EnumInvalidMemberInitializerSymbolType: \"Symbol enum members cannot be initialized. Use `%1,` in enum `%0`.\",\n  EnumInvalidMemberInitializerUnknownType: \"The enum member initializer for `%1` needs to be a literal (either a boolean, number, or string) in enum `%0`.\",\n  EnumInvalidMemberName: \"Enum member names cannot start with lowercase 'a' through 'z'. Instead of using `%0`, consider using `%1`, in enum `%2`.\",\n  EnumNumberMemberNotInitialized: \"Number enum members need to be initialized, e.g. `%1 = 1` in enum `%0`.\",\n  EnumStringMemberInconsistentlyInitailized: \"String enum members need to consistently either all use initializers, or use no initializers, in enum `%0`.\",\n  GetterMayNotHaveThisParam: \"A getter cannot have a `this` parameter.\",\n  ImportTypeShorthandOnlyInPureImport: \"The `type` and `typeof` keywords on named imports can only be used on regular `import` statements. It cannot be used with `import type` or `import typeof` statements\",\n  InexactInsideExact: \"Explicit inexact syntax cannot appear inside an explicit exact object type\",\n  InexactInsideNonObject: \"Explicit inexact syntax cannot appear in class or interface definitions\",\n  InexactVariance: \"Explicit inexact syntax cannot have variance\",\n  InvalidNonTypeImportInDeclareModule: \"Imports within a `declare module` body must always be `import type` or `import typeof`\",\n  MissingTypeParamDefault: \"Type parameter declaration needs a default, since a preceding type parameter declaration has a default.\",\n  NestedDeclareModule: \"`declare module` cannot be used inside another `declare module`\",\n  NestedFlowComment: \"Cannot have a flow comment inside another flow comment\",\n  OptionalBindingPattern: \"A binding pattern parameter cannot be optional in an implementation signature.\",\n  SetterMayNotHaveThisParam: \"A setter cannot have a `this` parameter.\",\n  SpreadVariance: \"Spread properties cannot have variance\",\n  ThisParamAnnotationRequired: \"A type annotation is required for the `this` parameter.\",\n  ThisParamBannedInConstructor: \"Constructors cannot have a `this` parameter; constructors don't bind `this` like other functions.\",\n  ThisParamMayNotBeOptional: \"The `this` parameter cannot be optional.\",\n  ThisParamMustBeFirst: \"The `this` parameter must be the first function parameter.\",\n  ThisParamNoDefault: \"The `this` parameter may not have a default value.\",\n  TypeBeforeInitializer: \"Type annotations must come before default assignments, e.g. instead of `age = 25: number` use `age: number = 25`\",\n  TypeCastInPattern: \"The type cast expression is expected to be wrapped with parenthesis\",\n  UnexpectedExplicitInexactInObject: \"Explicit inexact syntax must appear at the end of an inexact object\",\n  UnexpectedReservedType: \"Unexpected reserved type %0\",\n  UnexpectedReservedUnderscore: \"`_` is only allowed as a type argument to call or new\",\n  UnexpectedSpaceBetweenModuloChecks: \"Spaces between `%` and `checks` are not allowed here.\",\n  UnexpectedSpreadType: \"Spread operator cannot appear in class or interface definitions\",\n  UnexpectedSubtractionOperand: 'Unexpected token, expected \"number\" or \"bigint\"',\n  UnexpectedTokenAfterTypeParameter: \"Expected an arrow function after this type parameter declaration\",\n  UnexpectedTypeParameterBeforeAsyncArrowFunction: \"Type parameters must come after the async keyword, e.g. instead of `<T> async () => {}`, use `async <T>() => {}`\",\n  UnsupportedDeclareExportKind: \"`declare export %0` is not supported. Use `%1` instead\",\n  UnsupportedStatementInDeclareModule: \"Only declares and type imports are allowed inside declare module\",\n  UnterminatedFlowComment: \"Unterminated flow-comment\"\n});\n\nfunction isEsModuleType(bodyElement) {\n  return bodyElement.type === \"DeclareExportAllDeclaration\" || bodyElement.type === \"DeclareExportDeclaration\" && (!bodyElement.declaration || bodyElement.declaration.type !== \"TypeAlias\" && bodyElement.declaration.type !== \"InterfaceDeclaration\");\n}\n\nfunction hasTypeImportKind(node) {\n  return node.importKind === \"type\" || node.importKind === \"typeof\";\n}\n\nfunction isMaybeDefaultImport(state) {\n  return (state.type === types.name || !!state.type.keyword) && state.value !== \"from\";\n}\n\nconst exportSuggestions = {\n  const: \"declare export var\",\n  let: \"declare export var\",\n  type: \"export type\",\n  interface: \"export interface\"\n};\n\nfunction partition(list, test) {\n  const list1 = [];\n  const list2 = [];\n\n  for (let i = 0; i < list.length; i++) {\n    (test(list[i], i, list) ? list1 : list2).push(list[i]);\n  }\n\n  return [list1, list2];\n}\n\nconst FLOW_PRAGMA_REGEX = /\\*?\\s*@((?:no)?flow)\\b/;\nvar flow = (superClass => {\n  var _temp;\n\n  return _temp = class extends superClass {\n    constructor(...args) {\n      super(...args);\n      this.flowPragma = undefined;\n    }\n\n    getScopeHandler() {\n      return FlowScopeHandler;\n    }\n\n    shouldParseTypes() {\n      return this.getPluginOption(\"flow\", \"all\") || this.flowPragma === \"flow\";\n    }\n\n    shouldParseEnums() {\n      return !!this.getPluginOption(\"flow\", \"enums\");\n    }\n\n    finishToken(type, val) {\n      if (type !== types.string && type !== types.semi && type !== types.interpreterDirective) {\n        if (this.flowPragma === undefined) {\n          this.flowPragma = null;\n        }\n      }\n\n      return super.finishToken(type, val);\n    }\n\n    addComment(comment) {\n      if (this.flowPragma === undefined) {\n        const matches = FLOW_PRAGMA_REGEX.exec(comment.value);\n\n        if (!matches) ; else if (matches[1] === \"flow\") {\n          this.flowPragma = \"flow\";\n        } else if (matches[1] === \"noflow\") {\n          this.flowPragma = \"noflow\";\n        } else {\n          throw new Error(\"Unexpected flow pragma\");\n        }\n      }\n\n      return super.addComment(comment);\n    }\n\n    flowParseTypeInitialiser(tok) {\n      const oldInType = this.state.inType;\n      this.state.inType = true;\n      this.expect(tok || types.colon);\n      const type = this.flowParseType();\n      this.state.inType = oldInType;\n      return type;\n    }\n\n    flowParsePredicate() {\n      const node = this.startNode();\n      const moduloLoc = this.state.startLoc;\n      const moduloPos = this.state.start;\n      this.expect(types.modulo);\n      const checksLoc = this.state.startLoc;\n      this.expectContextual(\"checks\");\n\n      if (moduloLoc.line !== checksLoc.line || moduloLoc.column !== checksLoc.column - 1) {\n        this.raise(moduloPos, FlowErrors.UnexpectedSpaceBetweenModuloChecks);\n      }\n\n      if (this.eat(types.parenL)) {\n        node.value = this.parseExpression();\n        this.expect(types.parenR);\n        return this.finishNode(node, \"DeclaredPredicate\");\n      } else {\n        return this.finishNode(node, \"InferredPredicate\");\n      }\n    }\n\n    flowParseTypeAndPredicateInitialiser() {\n      const oldInType = this.state.inType;\n      this.state.inType = true;\n      this.expect(types.colon);\n      let type = null;\n      let predicate = null;\n\n      if (this.match(types.modulo)) {\n        this.state.inType = oldInType;\n        predicate = this.flowParsePredicate();\n      } else {\n        type = this.flowParseType();\n        this.state.inType = oldInType;\n\n        if (this.match(types.modulo)) {\n          predicate = this.flowParsePredicate();\n        }\n      }\n\n      return [type, predicate];\n    }\n\n    flowParseDeclareClass(node) {\n      this.next();\n      this.flowParseInterfaceish(node, true);\n      return this.finishNode(node, \"DeclareClass\");\n    }\n\n    flowParseDeclareFunction(node) {\n      this.next();\n      const id = node.id = this.parseIdentifier();\n      const typeNode = this.startNode();\n      const typeContainer = this.startNode();\n\n      if (this.isRelational(\"<\")) {\n        typeNode.typeParameters = this.flowParseTypeParameterDeclaration();\n      } else {\n        typeNode.typeParameters = null;\n      }\n\n      this.expect(types.parenL);\n      const tmp = this.flowParseFunctionTypeParams();\n      typeNode.params = tmp.params;\n      typeNode.rest = tmp.rest;\n      typeNode.this = tmp._this;\n      this.expect(types.parenR);\n      [typeNode.returnType, node.predicate] = this.flowParseTypeAndPredicateInitialiser();\n      typeContainer.typeAnnotation = this.finishNode(typeNode, \"FunctionTypeAnnotation\");\n      id.typeAnnotation = this.finishNode(typeContainer, \"TypeAnnotation\");\n      this.resetEndLocation(id);\n      this.semicolon();\n      this.scope.declareName(node.id.name, BIND_FLOW_DECLARE_FN, node.id.start);\n      return this.finishNode(node, \"DeclareFunction\");\n    }\n\n    flowParseDeclare(node, insideModule) {\n      if (this.match(types._class)) {\n        return this.flowParseDeclareClass(node);\n      } else if (this.match(types._function)) {\n        return this.flowParseDeclareFunction(node);\n      } else if (this.match(types._var)) {\n        return this.flowParseDeclareVariable(node);\n      } else if (this.eatContextual(\"module\")) {\n        if (this.match(types.dot)) {\n          return this.flowParseDeclareModuleExports(node);\n        } else {\n          if (insideModule) {\n            this.raise(this.state.lastTokStart, FlowErrors.NestedDeclareModule);\n          }\n\n          return this.flowParseDeclareModule(node);\n        }\n      } else if (this.isContextual(\"type\")) {\n        return this.flowParseDeclareTypeAlias(node);\n      } else if (this.isContextual(\"opaque\")) {\n        return this.flowParseDeclareOpaqueType(node);\n      } else if (this.isContextual(\"interface\")) {\n        return this.flowParseDeclareInterface(node);\n      } else if (this.match(types._export)) {\n        return this.flowParseDeclareExportDeclaration(node, insideModule);\n      } else {\n        throw this.unexpected();\n      }\n    }\n\n    flowParseDeclareVariable(node) {\n      this.next();\n      node.id = this.flowParseTypeAnnotatableIdentifier(true);\n      this.scope.declareName(node.id.name, BIND_VAR, node.id.start);\n      this.semicolon();\n      return this.finishNode(node, \"DeclareVariable\");\n    }\n\n    flowParseDeclareModule(node) {\n      this.scope.enter(SCOPE_OTHER);\n\n      if (this.match(types.string)) {\n        node.id = this.parseExprAtom();\n      } else {\n        node.id = this.parseIdentifier();\n      }\n\n      const bodyNode = node.body = this.startNode();\n      const body = bodyNode.body = [];\n      this.expect(types.braceL);\n\n      while (!this.match(types.braceR)) {\n        let bodyNode = this.startNode();\n\n        if (this.match(types._import)) {\n          this.next();\n\n          if (!this.isContextual(\"type\") && !this.match(types._typeof)) {\n            this.raise(this.state.lastTokStart, FlowErrors.InvalidNonTypeImportInDeclareModule);\n          }\n\n          this.parseImport(bodyNode);\n        } else {\n          this.expectContextual(\"declare\", FlowErrors.UnsupportedStatementInDeclareModule);\n          bodyNode = this.flowParseDeclare(bodyNode, true);\n        }\n\n        body.push(bodyNode);\n      }\n\n      this.scope.exit();\n      this.expect(types.braceR);\n      this.finishNode(bodyNode, \"BlockStatement\");\n      let kind = null;\n      let hasModuleExport = false;\n      body.forEach(bodyElement => {\n        if (isEsModuleType(bodyElement)) {\n          if (kind === \"CommonJS\") {\n            this.raise(bodyElement.start, FlowErrors.AmbiguousDeclareModuleKind);\n          }\n\n          kind = \"ES\";\n        } else if (bodyElement.type === \"DeclareModuleExports\") {\n          if (hasModuleExport) {\n            this.raise(bodyElement.start, FlowErrors.DuplicateDeclareModuleExports);\n          }\n\n          if (kind === \"ES\") {\n            this.raise(bodyElement.start, FlowErrors.AmbiguousDeclareModuleKind);\n          }\n\n          kind = \"CommonJS\";\n          hasModuleExport = true;\n        }\n      });\n      node.kind = kind || \"CommonJS\";\n      return this.finishNode(node, \"DeclareModule\");\n    }\n\n    flowParseDeclareExportDeclaration(node, insideModule) {\n      this.expect(types._export);\n\n      if (this.eat(types._default)) {\n        if (this.match(types._function) || this.match(types._class)) {\n          node.declaration = this.flowParseDeclare(this.startNode());\n        } else {\n          node.declaration = this.flowParseType();\n          this.semicolon();\n        }\n\n        node.default = true;\n        return this.finishNode(node, \"DeclareExportDeclaration\");\n      } else {\n        if (this.match(types._const) || this.isLet() || (this.isContextual(\"type\") || this.isContextual(\"interface\")) && !insideModule) {\n          const label = this.state.value;\n          const suggestion = exportSuggestions[label];\n          throw this.raise(this.state.start, FlowErrors.UnsupportedDeclareExportKind, label, suggestion);\n        }\n\n        if (this.match(types._var) || this.match(types._function) || this.match(types._class) || this.isContextual(\"opaque\")) {\n            node.declaration = this.flowParseDeclare(this.startNode());\n            node.default = false;\n            return this.finishNode(node, \"DeclareExportDeclaration\");\n          } else if (this.match(types.star) || this.match(types.braceL) || this.isContextual(\"interface\") || this.isContextual(\"type\") || this.isContextual(\"opaque\")) {\n            node = this.parseExport(node);\n\n            if (node.type === \"ExportNamedDeclaration\") {\n              node.type = \"ExportDeclaration\";\n              node.default = false;\n              delete node.exportKind;\n            }\n\n            node.type = \"Declare\" + node.type;\n            return node;\n          }\n      }\n\n      throw this.unexpected();\n    }\n\n    flowParseDeclareModuleExports(node) {\n      this.next();\n      this.expectContextual(\"exports\");\n      node.typeAnnotation = this.flowParseTypeAnnotation();\n      this.semicolon();\n      return this.finishNode(node, \"DeclareModuleExports\");\n    }\n\n    flowParseDeclareTypeAlias(node) {\n      this.next();\n      this.flowParseTypeAlias(node);\n      node.type = \"DeclareTypeAlias\";\n      return node;\n    }\n\n    flowParseDeclareOpaqueType(node) {\n      this.next();\n      this.flowParseOpaqueType(node, true);\n      node.type = \"DeclareOpaqueType\";\n      return node;\n    }\n\n    flowParseDeclareInterface(node) {\n      this.next();\n      this.flowParseInterfaceish(node);\n      return this.finishNode(node, \"DeclareInterface\");\n    }\n\n    flowParseInterfaceish(node, isClass = false) {\n      node.id = this.flowParseRestrictedIdentifier(!isClass, true);\n      this.scope.declareName(node.id.name, isClass ? BIND_FUNCTION : BIND_LEXICAL, node.id.start);\n\n      if (this.isRelational(\"<\")) {\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n      } else {\n        node.typeParameters = null;\n      }\n\n      node.extends = [];\n      node.implements = [];\n      node.mixins = [];\n\n      if (this.eat(types._extends)) {\n        do {\n          node.extends.push(this.flowParseInterfaceExtends());\n        } while (!isClass && this.eat(types.comma));\n      }\n\n      if (this.isContextual(\"mixins\")) {\n        this.next();\n\n        do {\n          node.mixins.push(this.flowParseInterfaceExtends());\n        } while (this.eat(types.comma));\n      }\n\n      if (this.isContextual(\"implements\")) {\n        this.next();\n\n        do {\n          node.implements.push(this.flowParseInterfaceExtends());\n        } while (this.eat(types.comma));\n      }\n\n      node.body = this.flowParseObjectType({\n        allowStatic: isClass,\n        allowExact: false,\n        allowSpread: false,\n        allowProto: isClass,\n        allowInexact: false\n      });\n    }\n\n    flowParseInterfaceExtends() {\n      const node = this.startNode();\n      node.id = this.flowParseQualifiedTypeIdentifier();\n\n      if (this.isRelational(\"<\")) {\n        node.typeParameters = this.flowParseTypeParameterInstantiation();\n      } else {\n        node.typeParameters = null;\n      }\n\n      return this.finishNode(node, \"InterfaceExtends\");\n    }\n\n    flowParseInterface(node) {\n      this.flowParseInterfaceish(node);\n      return this.finishNode(node, \"InterfaceDeclaration\");\n    }\n\n    checkNotUnderscore(word) {\n      if (word === \"_\") {\n        this.raise(this.state.start, FlowErrors.UnexpectedReservedUnderscore);\n      }\n    }\n\n    checkReservedType(word, startLoc, declaration) {\n      if (!reservedTypes.has(word)) return;\n      this.raise(startLoc, declaration ? FlowErrors.AssignReservedType : FlowErrors.UnexpectedReservedType, word);\n    }\n\n    flowParseRestrictedIdentifier(liberal, declaration) {\n      this.checkReservedType(this.state.value, this.state.start, declaration);\n      return this.parseIdentifier(liberal);\n    }\n\n    flowParseTypeAlias(node) {\n      node.id = this.flowParseRestrictedIdentifier(false, true);\n      this.scope.declareName(node.id.name, BIND_LEXICAL, node.id.start);\n\n      if (this.isRelational(\"<\")) {\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n      } else {\n        node.typeParameters = null;\n      }\n\n      node.right = this.flowParseTypeInitialiser(types.eq);\n      this.semicolon();\n      return this.finishNode(node, \"TypeAlias\");\n    }\n\n    flowParseOpaqueType(node, declare) {\n      this.expectContextual(\"type\");\n      node.id = this.flowParseRestrictedIdentifier(true, true);\n      this.scope.declareName(node.id.name, BIND_LEXICAL, node.id.start);\n\n      if (this.isRelational(\"<\")) {\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n      } else {\n        node.typeParameters = null;\n      }\n\n      node.supertype = null;\n\n      if (this.match(types.colon)) {\n        node.supertype = this.flowParseTypeInitialiser(types.colon);\n      }\n\n      node.impltype = null;\n\n      if (!declare) {\n        node.impltype = this.flowParseTypeInitialiser(types.eq);\n      }\n\n      this.semicolon();\n      return this.finishNode(node, \"OpaqueType\");\n    }\n\n    flowParseTypeParameter(requireDefault = false) {\n      const nodeStart = this.state.start;\n      const node = this.startNode();\n      const variance = this.flowParseVariance();\n      const ident = this.flowParseTypeAnnotatableIdentifier();\n      node.name = ident.name;\n      node.variance = variance;\n      node.bound = ident.typeAnnotation;\n\n      if (this.match(types.eq)) {\n        this.eat(types.eq);\n        node.default = this.flowParseType();\n      } else {\n        if (requireDefault) {\n          this.raise(nodeStart, FlowErrors.MissingTypeParamDefault);\n        }\n      }\n\n      return this.finishNode(node, \"TypeParameter\");\n    }\n\n    flowParseTypeParameterDeclaration() {\n      const oldInType = this.state.inType;\n      const node = this.startNode();\n      node.params = [];\n      this.state.inType = true;\n\n      if (this.isRelational(\"<\") || this.match(types.jsxTagStart)) {\n        this.next();\n      } else {\n        this.unexpected();\n      }\n\n      let defaultRequired = false;\n\n      do {\n        const typeParameter = this.flowParseTypeParameter(defaultRequired);\n        node.params.push(typeParameter);\n\n        if (typeParameter.default) {\n          defaultRequired = true;\n        }\n\n        if (!this.isRelational(\">\")) {\n          this.expect(types.comma);\n        }\n      } while (!this.isRelational(\">\"));\n\n      this.expectRelational(\">\");\n      this.state.inType = oldInType;\n      return this.finishNode(node, \"TypeParameterDeclaration\");\n    }\n\n    flowParseTypeParameterInstantiation() {\n      const node = this.startNode();\n      const oldInType = this.state.inType;\n      node.params = [];\n      this.state.inType = true;\n      this.expectRelational(\"<\");\n      const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n      this.state.noAnonFunctionType = false;\n\n      while (!this.isRelational(\">\")) {\n        node.params.push(this.flowParseType());\n\n        if (!this.isRelational(\">\")) {\n          this.expect(types.comma);\n        }\n      }\n\n      this.state.noAnonFunctionType = oldNoAnonFunctionType;\n      this.expectRelational(\">\");\n      this.state.inType = oldInType;\n      return this.finishNode(node, \"TypeParameterInstantiation\");\n    }\n\n    flowParseTypeParameterInstantiationCallOrNew() {\n      const node = this.startNode();\n      const oldInType = this.state.inType;\n      node.params = [];\n      this.state.inType = true;\n      this.expectRelational(\"<\");\n\n      while (!this.isRelational(\">\")) {\n        node.params.push(this.flowParseTypeOrImplicitInstantiation());\n\n        if (!this.isRelational(\">\")) {\n          this.expect(types.comma);\n        }\n      }\n\n      this.expectRelational(\">\");\n      this.state.inType = oldInType;\n      return this.finishNode(node, \"TypeParameterInstantiation\");\n    }\n\n    flowParseInterfaceType() {\n      const node = this.startNode();\n      this.expectContextual(\"interface\");\n      node.extends = [];\n\n      if (this.eat(types._extends)) {\n        do {\n          node.extends.push(this.flowParseInterfaceExtends());\n        } while (this.eat(types.comma));\n      }\n\n      node.body = this.flowParseObjectType({\n        allowStatic: false,\n        allowExact: false,\n        allowSpread: false,\n        allowProto: false,\n        allowInexact: false\n      });\n      return this.finishNode(node, \"InterfaceTypeAnnotation\");\n    }\n\n    flowParseObjectPropertyKey() {\n      return this.match(types.num) || this.match(types.string) ? this.parseExprAtom() : this.parseIdentifier(true);\n    }\n\n    flowParseObjectTypeIndexer(node, isStatic, variance) {\n      node.static = isStatic;\n\n      if (this.lookahead().type === types.colon) {\n        node.id = this.flowParseObjectPropertyKey();\n        node.key = this.flowParseTypeInitialiser();\n      } else {\n        node.id = null;\n        node.key = this.flowParseType();\n      }\n\n      this.expect(types.bracketR);\n      node.value = this.flowParseTypeInitialiser();\n      node.variance = variance;\n      return this.finishNode(node, \"ObjectTypeIndexer\");\n    }\n\n    flowParseObjectTypeInternalSlot(node, isStatic) {\n      node.static = isStatic;\n      node.id = this.flowParseObjectPropertyKey();\n      this.expect(types.bracketR);\n      this.expect(types.bracketR);\n\n      if (this.isRelational(\"<\") || this.match(types.parenL)) {\n        node.method = true;\n        node.optional = false;\n        node.value = this.flowParseObjectTypeMethodish(this.startNodeAt(node.start, node.loc.start));\n      } else {\n        node.method = false;\n\n        if (this.eat(types.question)) {\n          node.optional = true;\n        }\n\n        node.value = this.flowParseTypeInitialiser();\n      }\n\n      return this.finishNode(node, \"ObjectTypeInternalSlot\");\n    }\n\n    flowParseObjectTypeMethodish(node) {\n      node.params = [];\n      node.rest = null;\n      node.typeParameters = null;\n      node.this = null;\n\n      if (this.isRelational(\"<\")) {\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n      }\n\n      this.expect(types.parenL);\n\n      if (this.match(types._this)) {\n        node.this = this.flowParseFunctionTypeParam(true);\n        node.this.name = null;\n\n        if (!this.match(types.parenR)) {\n          this.expect(types.comma);\n        }\n      }\n\n      while (!this.match(types.parenR) && !this.match(types.ellipsis)) {\n        node.params.push(this.flowParseFunctionTypeParam(false));\n\n        if (!this.match(types.parenR)) {\n          this.expect(types.comma);\n        }\n      }\n\n      if (this.eat(types.ellipsis)) {\n        node.rest = this.flowParseFunctionTypeParam(false);\n      }\n\n      this.expect(types.parenR);\n      node.returnType = this.flowParseTypeInitialiser();\n      return this.finishNode(node, \"FunctionTypeAnnotation\");\n    }\n\n    flowParseObjectTypeCallProperty(node, isStatic) {\n      const valueNode = this.startNode();\n      node.static = isStatic;\n      node.value = this.flowParseObjectTypeMethodish(valueNode);\n      return this.finishNode(node, \"ObjectTypeCallProperty\");\n    }\n\n    flowParseObjectType({\n      allowStatic,\n      allowExact,\n      allowSpread,\n      allowProto,\n      allowInexact\n    }) {\n      const oldInType = this.state.inType;\n      this.state.inType = true;\n      const nodeStart = this.startNode();\n      nodeStart.callProperties = [];\n      nodeStart.properties = [];\n      nodeStart.indexers = [];\n      nodeStart.internalSlots = [];\n      let endDelim;\n      let exact;\n      let inexact = false;\n\n      if (allowExact && this.match(types.braceBarL)) {\n        this.expect(types.braceBarL);\n        endDelim = types.braceBarR;\n        exact = true;\n      } else {\n        this.expect(types.braceL);\n        endDelim = types.braceR;\n        exact = false;\n      }\n\n      nodeStart.exact = exact;\n\n      while (!this.match(endDelim)) {\n        let isStatic = false;\n        let protoStart = null;\n        let inexactStart = null;\n        const node = this.startNode();\n\n        if (allowProto && this.isContextual(\"proto\")) {\n          const lookahead = this.lookahead();\n\n          if (lookahead.type !== types.colon && lookahead.type !== types.question) {\n            this.next();\n            protoStart = this.state.start;\n            allowStatic = false;\n          }\n        }\n\n        if (allowStatic && this.isContextual(\"static\")) {\n          const lookahead = this.lookahead();\n\n          if (lookahead.type !== types.colon && lookahead.type !== types.question) {\n            this.next();\n            isStatic = true;\n          }\n        }\n\n        const variance = this.flowParseVariance();\n\n        if (this.eat(types.bracketL)) {\n          if (protoStart != null) {\n            this.unexpected(protoStart);\n          }\n\n          if (this.eat(types.bracketL)) {\n            if (variance) {\n              this.unexpected(variance.start);\n            }\n\n            nodeStart.internalSlots.push(this.flowParseObjectTypeInternalSlot(node, isStatic));\n          } else {\n            nodeStart.indexers.push(this.flowParseObjectTypeIndexer(node, isStatic, variance));\n          }\n        } else if (this.match(types.parenL) || this.isRelational(\"<\")) {\n          if (protoStart != null) {\n            this.unexpected(protoStart);\n          }\n\n          if (variance) {\n            this.unexpected(variance.start);\n          }\n\n          nodeStart.callProperties.push(this.flowParseObjectTypeCallProperty(node, isStatic));\n        } else {\n          let kind = \"init\";\n\n          if (this.isContextual(\"get\") || this.isContextual(\"set\")) {\n            const lookahead = this.lookahead();\n\n            if (lookahead.type === types.name || lookahead.type === types.string || lookahead.type === types.num) {\n              kind = this.state.value;\n              this.next();\n            }\n          }\n\n          const propOrInexact = this.flowParseObjectTypeProperty(node, isStatic, protoStart, variance, kind, allowSpread, allowInexact != null ? allowInexact : !exact);\n\n          if (propOrInexact === null) {\n            inexact = true;\n            inexactStart = this.state.lastTokStart;\n          } else {\n            nodeStart.properties.push(propOrInexact);\n          }\n        }\n\n        this.flowObjectTypeSemicolon();\n\n        if (inexactStart && !this.match(types.braceR) && !this.match(types.braceBarR)) {\n          this.raise(inexactStart, FlowErrors.UnexpectedExplicitInexactInObject);\n        }\n      }\n\n      this.expect(endDelim);\n\n      if (allowSpread) {\n        nodeStart.inexact = inexact;\n      }\n\n      const out = this.finishNode(nodeStart, \"ObjectTypeAnnotation\");\n      this.state.inType = oldInType;\n      return out;\n    }\n\n    flowParseObjectTypeProperty(node, isStatic, protoStart, variance, kind, allowSpread, allowInexact) {\n      if (this.eat(types.ellipsis)) {\n        const isInexactToken = this.match(types.comma) || this.match(types.semi) || this.match(types.braceR) || this.match(types.braceBarR);\n\n        if (isInexactToken) {\n          if (!allowSpread) {\n            this.raise(this.state.lastTokStart, FlowErrors.InexactInsideNonObject);\n          } else if (!allowInexact) {\n            this.raise(this.state.lastTokStart, FlowErrors.InexactInsideExact);\n          }\n\n          if (variance) {\n            this.raise(variance.start, FlowErrors.InexactVariance);\n          }\n\n          return null;\n        }\n\n        if (!allowSpread) {\n          this.raise(this.state.lastTokStart, FlowErrors.UnexpectedSpreadType);\n        }\n\n        if (protoStart != null) {\n          this.unexpected(protoStart);\n        }\n\n        if (variance) {\n          this.raise(variance.start, FlowErrors.SpreadVariance);\n        }\n\n        node.argument = this.flowParseType();\n        return this.finishNode(node, \"ObjectTypeSpreadProperty\");\n      } else {\n        node.key = this.flowParseObjectPropertyKey();\n        node.static = isStatic;\n        node.proto = protoStart != null;\n        node.kind = kind;\n        let optional = false;\n\n        if (this.isRelational(\"<\") || this.match(types.parenL)) {\n          node.method = true;\n\n          if (protoStart != null) {\n            this.unexpected(protoStart);\n          }\n\n          if (variance) {\n            this.unexpected(variance.start);\n          }\n\n          node.value = this.flowParseObjectTypeMethodish(this.startNodeAt(node.start, node.loc.start));\n\n          if (kind === \"get\" || kind === \"set\") {\n            this.flowCheckGetterSetterParams(node);\n          }\n\n          if (!allowSpread && node.key.name === \"constructor\" && node.value.this) {\n            this.raise(node.value.this.start, FlowErrors.ThisParamBannedInConstructor);\n          }\n        } else {\n          if (kind !== \"init\") this.unexpected();\n          node.method = false;\n\n          if (this.eat(types.question)) {\n            optional = true;\n          }\n\n          node.value = this.flowParseTypeInitialiser();\n          node.variance = variance;\n        }\n\n        node.optional = optional;\n        return this.finishNode(node, \"ObjectTypeProperty\");\n      }\n    }\n\n    flowCheckGetterSetterParams(property) {\n      const paramCount = property.kind === \"get\" ? 0 : 1;\n      const start = property.start;\n      const length = property.value.params.length + (property.value.rest ? 1 : 0);\n\n      if (property.value.this) {\n        this.raise(property.value.this.start, property.kind === \"get\" ? FlowErrors.GetterMayNotHaveThisParam : FlowErrors.SetterMayNotHaveThisParam);\n      }\n\n      if (length !== paramCount) {\n        if (property.kind === \"get\") {\n          this.raise(start, ErrorMessages.BadGetterArity);\n        } else {\n          this.raise(start, ErrorMessages.BadSetterArity);\n        }\n      }\n\n      if (property.kind === \"set\" && property.value.rest) {\n        this.raise(start, ErrorMessages.BadSetterRestParameter);\n      }\n    }\n\n    flowObjectTypeSemicolon() {\n      if (!this.eat(types.semi) && !this.eat(types.comma) && !this.match(types.braceR) && !this.match(types.braceBarR)) {\n        this.unexpected();\n      }\n    }\n\n    flowParseQualifiedTypeIdentifier(startPos, startLoc, id) {\n      startPos = startPos || this.state.start;\n      startLoc = startLoc || this.state.startLoc;\n      let node = id || this.flowParseRestrictedIdentifier(true);\n\n      while (this.eat(types.dot)) {\n        const node2 = this.startNodeAt(startPos, startLoc);\n        node2.qualification = node;\n        node2.id = this.flowParseRestrictedIdentifier(true);\n        node = this.finishNode(node2, \"QualifiedTypeIdentifier\");\n      }\n\n      return node;\n    }\n\n    flowParseGenericType(startPos, startLoc, id) {\n      const node = this.startNodeAt(startPos, startLoc);\n      node.typeParameters = null;\n      node.id = this.flowParseQualifiedTypeIdentifier(startPos, startLoc, id);\n\n      if (this.isRelational(\"<\")) {\n        node.typeParameters = this.flowParseTypeParameterInstantiation();\n      }\n\n      return this.finishNode(node, \"GenericTypeAnnotation\");\n    }\n\n    flowParseTypeofType() {\n      const node = this.startNode();\n      this.expect(types._typeof);\n      node.argument = this.flowParsePrimaryType();\n      return this.finishNode(node, \"TypeofTypeAnnotation\");\n    }\n\n    flowParseTupleType() {\n      const node = this.startNode();\n      node.types = [];\n      this.expect(types.bracketL);\n\n      while (this.state.pos < this.length && !this.match(types.bracketR)) {\n        node.types.push(this.flowParseType());\n        if (this.match(types.bracketR)) break;\n        this.expect(types.comma);\n      }\n\n      this.expect(types.bracketR);\n      return this.finishNode(node, \"TupleTypeAnnotation\");\n    }\n\n    flowParseFunctionTypeParam(first) {\n      let name = null;\n      let optional = false;\n      let typeAnnotation = null;\n      const node = this.startNode();\n      const lh = this.lookahead();\n      const isThis = this.state.type === types._this;\n\n      if (lh.type === types.colon || lh.type === types.question) {\n        if (isThis && !first) {\n          this.raise(node.start, FlowErrors.ThisParamMustBeFirst);\n        }\n\n        name = this.parseIdentifier(isThis);\n\n        if (this.eat(types.question)) {\n          optional = true;\n\n          if (isThis) {\n            this.raise(node.start, FlowErrors.ThisParamMayNotBeOptional);\n          }\n        }\n\n        typeAnnotation = this.flowParseTypeInitialiser();\n      } else {\n        typeAnnotation = this.flowParseType();\n      }\n\n      node.name = name;\n      node.optional = optional;\n      node.typeAnnotation = typeAnnotation;\n      return this.finishNode(node, \"FunctionTypeParam\");\n    }\n\n    reinterpretTypeAsFunctionTypeParam(type) {\n      const node = this.startNodeAt(type.start, type.loc.start);\n      node.name = null;\n      node.optional = false;\n      node.typeAnnotation = type;\n      return this.finishNode(node, \"FunctionTypeParam\");\n    }\n\n    flowParseFunctionTypeParams(params = []) {\n      let rest = null;\n      let _this = null;\n\n      if (this.match(types._this)) {\n        _this = this.flowParseFunctionTypeParam(true);\n        _this.name = null;\n\n        if (!this.match(types.parenR)) {\n          this.expect(types.comma);\n        }\n      }\n\n      while (!this.match(types.parenR) && !this.match(types.ellipsis)) {\n        params.push(this.flowParseFunctionTypeParam(false));\n\n        if (!this.match(types.parenR)) {\n          this.expect(types.comma);\n        }\n      }\n\n      if (this.eat(types.ellipsis)) {\n        rest = this.flowParseFunctionTypeParam(false);\n      }\n\n      return {\n        params,\n        rest,\n        _this\n      };\n    }\n\n    flowIdentToTypeAnnotation(startPos, startLoc, node, id) {\n      switch (id.name) {\n        case \"any\":\n          return this.finishNode(node, \"AnyTypeAnnotation\");\n\n        case \"bool\":\n        case \"boolean\":\n          return this.finishNode(node, \"BooleanTypeAnnotation\");\n\n        case \"mixed\":\n          return this.finishNode(node, \"MixedTypeAnnotation\");\n\n        case \"empty\":\n          return this.finishNode(node, \"EmptyTypeAnnotation\");\n\n        case \"number\":\n          return this.finishNode(node, \"NumberTypeAnnotation\");\n\n        case \"string\":\n          return this.finishNode(node, \"StringTypeAnnotation\");\n\n        case \"symbol\":\n          return this.finishNode(node, \"SymbolTypeAnnotation\");\n\n        default:\n          this.checkNotUnderscore(id.name);\n          return this.flowParseGenericType(startPos, startLoc, id);\n      }\n    }\n\n    flowParsePrimaryType() {\n      const startPos = this.state.start;\n      const startLoc = this.state.startLoc;\n      const node = this.startNode();\n      let tmp;\n      let type;\n      let isGroupedType = false;\n      const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n\n      switch (this.state.type) {\n        case types.name:\n          if (this.isContextual(\"interface\")) {\n            return this.flowParseInterfaceType();\n          }\n\n          return this.flowIdentToTypeAnnotation(startPos, startLoc, node, this.parseIdentifier());\n\n        case types.braceL:\n          return this.flowParseObjectType({\n            allowStatic: false,\n            allowExact: false,\n            allowSpread: true,\n            allowProto: false,\n            allowInexact: true\n          });\n\n        case types.braceBarL:\n          return this.flowParseObjectType({\n            allowStatic: false,\n            allowExact: true,\n            allowSpread: true,\n            allowProto: false,\n            allowInexact: false\n          });\n\n        case types.bracketL:\n          this.state.noAnonFunctionType = false;\n          type = this.flowParseTupleType();\n          this.state.noAnonFunctionType = oldNoAnonFunctionType;\n          return type;\n\n        case types.relational:\n          if (this.state.value === \"<\") {\n            node.typeParameters = this.flowParseTypeParameterDeclaration();\n            this.expect(types.parenL);\n            tmp = this.flowParseFunctionTypeParams();\n            node.params = tmp.params;\n            node.rest = tmp.rest;\n            node.this = tmp._this;\n            this.expect(types.parenR);\n            this.expect(types.arrow);\n            node.returnType = this.flowParseType();\n            return this.finishNode(node, \"FunctionTypeAnnotation\");\n          }\n\n          break;\n\n        case types.parenL:\n          this.next();\n\n          if (!this.match(types.parenR) && !this.match(types.ellipsis)) {\n            if (this.match(types.name) || this.match(types._this)) {\n              const token = this.lookahead().type;\n              isGroupedType = token !== types.question && token !== types.colon;\n            } else {\n              isGroupedType = true;\n            }\n          }\n\n          if (isGroupedType) {\n            this.state.noAnonFunctionType = false;\n            type = this.flowParseType();\n            this.state.noAnonFunctionType = oldNoAnonFunctionType;\n\n            if (this.state.noAnonFunctionType || !(this.match(types.comma) || this.match(types.parenR) && this.lookahead().type === types.arrow)) {\n              this.expect(types.parenR);\n              return type;\n            } else {\n              this.eat(types.comma);\n            }\n          }\n\n          if (type) {\n            tmp = this.flowParseFunctionTypeParams([this.reinterpretTypeAsFunctionTypeParam(type)]);\n          } else {\n            tmp = this.flowParseFunctionTypeParams();\n          }\n\n          node.params = tmp.params;\n          node.rest = tmp.rest;\n          node.this = tmp._this;\n          this.expect(types.parenR);\n          this.expect(types.arrow);\n          node.returnType = this.flowParseType();\n          node.typeParameters = null;\n          return this.finishNode(node, \"FunctionTypeAnnotation\");\n\n        case types.string:\n          return this.parseLiteral(this.state.value, \"StringLiteralTypeAnnotation\");\n\n        case types._true:\n        case types._false:\n          node.value = this.match(types._true);\n          this.next();\n          return this.finishNode(node, \"BooleanLiteralTypeAnnotation\");\n\n        case types.plusMin:\n          if (this.state.value === \"-\") {\n            this.next();\n\n            if (this.match(types.num)) {\n              return this.parseLiteral(-this.state.value, \"NumberLiteralTypeAnnotation\", node.start, node.loc.start);\n            }\n\n            if (this.match(types.bigint)) {\n              return this.parseLiteral(-this.state.value, \"BigIntLiteralTypeAnnotation\", node.start, node.loc.start);\n            }\n\n            throw this.raise(this.state.start, FlowErrors.UnexpectedSubtractionOperand);\n          }\n\n          throw this.unexpected();\n\n        case types.num:\n          return this.parseLiteral(this.state.value, \"NumberLiteralTypeAnnotation\");\n\n        case types.bigint:\n          return this.parseLiteral(this.state.value, \"BigIntLiteralTypeAnnotation\");\n\n        case types._void:\n          this.next();\n          return this.finishNode(node, \"VoidTypeAnnotation\");\n\n        case types._null:\n          this.next();\n          return this.finishNode(node, \"NullLiteralTypeAnnotation\");\n\n        case types._this:\n          this.next();\n          return this.finishNode(node, \"ThisTypeAnnotation\");\n\n        case types.star:\n          this.next();\n          return this.finishNode(node, \"ExistsTypeAnnotation\");\n\n        default:\n          if (this.state.type.keyword === \"typeof\") {\n            return this.flowParseTypeofType();\n          } else if (this.state.type.keyword) {\n            const label = this.state.type.label;\n            this.next();\n            return super.createIdentifier(node, label);\n          }\n\n      }\n\n      throw this.unexpected();\n    }\n\n    flowParsePostfixType() {\n      const startPos = this.state.start,\n            startLoc = this.state.startLoc;\n      let type = this.flowParsePrimaryType();\n\n      while (this.match(types.bracketL) && !this.canInsertSemicolon()) {\n        const node = this.startNodeAt(startPos, startLoc);\n        node.elementType = type;\n        this.expect(types.bracketL);\n        this.expect(types.bracketR);\n        type = this.finishNode(node, \"ArrayTypeAnnotation\");\n      }\n\n      return type;\n    }\n\n    flowParsePrefixType() {\n      const node = this.startNode();\n\n      if (this.eat(types.question)) {\n        node.typeAnnotation = this.flowParsePrefixType();\n        return this.finishNode(node, \"NullableTypeAnnotation\");\n      } else {\n        return this.flowParsePostfixType();\n      }\n    }\n\n    flowParseAnonFunctionWithoutParens() {\n      const param = this.flowParsePrefixType();\n\n      if (!this.state.noAnonFunctionType && this.eat(types.arrow)) {\n        const node = this.startNodeAt(param.start, param.loc.start);\n        node.params = [this.reinterpretTypeAsFunctionTypeParam(param)];\n        node.rest = null;\n        node.returnType = this.flowParseType();\n        node.typeParameters = null;\n        return this.finishNode(node, \"FunctionTypeAnnotation\");\n      }\n\n      return param;\n    }\n\n    flowParseIntersectionType() {\n      const node = this.startNode();\n      this.eat(types.bitwiseAND);\n      const type = this.flowParseAnonFunctionWithoutParens();\n      node.types = [type];\n\n      while (this.eat(types.bitwiseAND)) {\n        node.types.push(this.flowParseAnonFunctionWithoutParens());\n      }\n\n      return node.types.length === 1 ? type : this.finishNode(node, \"IntersectionTypeAnnotation\");\n    }\n\n    flowParseUnionType() {\n      const node = this.startNode();\n      this.eat(types.bitwiseOR);\n      const type = this.flowParseIntersectionType();\n      node.types = [type];\n\n      while (this.eat(types.bitwiseOR)) {\n        node.types.push(this.flowParseIntersectionType());\n      }\n\n      return node.types.length === 1 ? type : this.finishNode(node, \"UnionTypeAnnotation\");\n    }\n\n    flowParseType() {\n      const oldInType = this.state.inType;\n      this.state.inType = true;\n      const type = this.flowParseUnionType();\n      this.state.inType = oldInType;\n      this.state.exprAllowed = this.state.exprAllowed || this.state.noAnonFunctionType;\n      return type;\n    }\n\n    flowParseTypeOrImplicitInstantiation() {\n      if (this.state.type === types.name && this.state.value === \"_\") {\n        const startPos = this.state.start;\n        const startLoc = this.state.startLoc;\n        const node = this.parseIdentifier();\n        return this.flowParseGenericType(startPos, startLoc, node);\n      } else {\n        return this.flowParseType();\n      }\n    }\n\n    flowParseTypeAnnotation() {\n      const node = this.startNode();\n      node.typeAnnotation = this.flowParseTypeInitialiser();\n      return this.finishNode(node, \"TypeAnnotation\");\n    }\n\n    flowParseTypeAnnotatableIdentifier(allowPrimitiveOverride) {\n      const ident = allowPrimitiveOverride ? this.parseIdentifier() : this.flowParseRestrictedIdentifier();\n\n      if (this.match(types.colon)) {\n        ident.typeAnnotation = this.flowParseTypeAnnotation();\n        this.resetEndLocation(ident);\n      }\n\n      return ident;\n    }\n\n    typeCastToParameter(node) {\n      node.expression.typeAnnotation = node.typeAnnotation;\n      this.resetEndLocation(node.expression, node.typeAnnotation.end, node.typeAnnotation.loc.end);\n      return node.expression;\n    }\n\n    flowParseVariance() {\n      let variance = null;\n\n      if (this.match(types.plusMin)) {\n        variance = this.startNode();\n\n        if (this.state.value === \"+\") {\n          variance.kind = \"plus\";\n        } else {\n          variance.kind = \"minus\";\n        }\n\n        this.next();\n        this.finishNode(variance, \"Variance\");\n      }\n\n      return variance;\n    }\n\n    parseFunctionBody(node, allowExpressionBody, isMethod = false) {\n      if (allowExpressionBody) {\n        return this.forwardNoArrowParamsConversionAt(node, () => super.parseFunctionBody(node, true, isMethod));\n      }\n\n      return super.parseFunctionBody(node, false, isMethod);\n    }\n\n    parseFunctionBodyAndFinish(node, type, isMethod = false) {\n      if (this.match(types.colon)) {\n        const typeNode = this.startNode();\n        [typeNode.typeAnnotation, node.predicate] = this.flowParseTypeAndPredicateInitialiser();\n        node.returnType = typeNode.typeAnnotation ? this.finishNode(typeNode, \"TypeAnnotation\") : null;\n      }\n\n      super.parseFunctionBodyAndFinish(node, type, isMethod);\n    }\n\n    parseStatement(context, topLevel) {\n      if (this.state.strict && this.match(types.name) && this.state.value === \"interface\") {\n        const lookahead = this.lookahead();\n\n        if (lookahead.type === types.name || isKeyword(lookahead.value)) {\n          const node = this.startNode();\n          this.next();\n          return this.flowParseInterface(node);\n        }\n      } else if (this.shouldParseEnums() && this.isContextual(\"enum\")) {\n        const node = this.startNode();\n        this.next();\n        return this.flowParseEnumDeclaration(node);\n      }\n\n      const stmt = super.parseStatement(context, topLevel);\n\n      if (this.flowPragma === undefined && !this.isValidDirective(stmt)) {\n        this.flowPragma = null;\n      }\n\n      return stmt;\n    }\n\n    parseExpressionStatement(node, expr) {\n      if (expr.type === \"Identifier\") {\n        if (expr.name === \"declare\") {\n          if (this.match(types._class) || this.match(types.name) || this.match(types._function) || this.match(types._var) || this.match(types._export)) {\n            return this.flowParseDeclare(node);\n          }\n        } else if (this.match(types.name)) {\n          if (expr.name === \"interface\") {\n            return this.flowParseInterface(node);\n          } else if (expr.name === \"type\") {\n            return this.flowParseTypeAlias(node);\n          } else if (expr.name === \"opaque\") {\n            return this.flowParseOpaqueType(node, false);\n          }\n        }\n      }\n\n      return super.parseExpressionStatement(node, expr);\n    }\n\n    shouldParseExportDeclaration() {\n      return this.isContextual(\"type\") || this.isContextual(\"interface\") || this.isContextual(\"opaque\") || this.shouldParseEnums() && this.isContextual(\"enum\") || super.shouldParseExportDeclaration();\n    }\n\n    isExportDefaultSpecifier() {\n      if (this.match(types.name) && (this.state.value === \"type\" || this.state.value === \"interface\" || this.state.value === \"opaque\" || this.shouldParseEnums() && this.state.value === \"enum\")) {\n        return false;\n      }\n\n      return super.isExportDefaultSpecifier();\n    }\n\n    parseExportDefaultExpression() {\n      if (this.shouldParseEnums() && this.isContextual(\"enum\")) {\n        const node = this.startNode();\n        this.next();\n        return this.flowParseEnumDeclaration(node);\n      }\n\n      return super.parseExportDefaultExpression();\n    }\n\n    parseConditional(expr, startPos, startLoc, refNeedsArrowPos) {\n      if (!this.match(types.question)) return expr;\n\n      if (refNeedsArrowPos) {\n        const result = this.tryParse(() => super.parseConditional(expr, startPos, startLoc));\n\n        if (!result.node) {\n          refNeedsArrowPos.start = result.error.pos || this.state.start;\n          return expr;\n        }\n\n        if (result.error) this.state = result.failState;\n        return result.node;\n      }\n\n      this.expect(types.question);\n      const state = this.state.clone();\n      const originalNoArrowAt = this.state.noArrowAt;\n      const node = this.startNodeAt(startPos, startLoc);\n      let {\n        consequent,\n        failed\n      } = this.tryParseConditionalConsequent();\n      let [valid, invalid] = this.getArrowLikeExpressions(consequent);\n\n      if (failed || invalid.length > 0) {\n        const noArrowAt = [...originalNoArrowAt];\n\n        if (invalid.length > 0) {\n          this.state = state;\n          this.state.noArrowAt = noArrowAt;\n\n          for (let i = 0; i < invalid.length; i++) {\n            noArrowAt.push(invalid[i].start);\n          }\n\n          ({\n            consequent,\n            failed\n          } = this.tryParseConditionalConsequent());\n          [valid, invalid] = this.getArrowLikeExpressions(consequent);\n        }\n\n        if (failed && valid.length > 1) {\n          this.raise(state.start, FlowErrors.AmbiguousConditionalArrow);\n        }\n\n        if (failed && valid.length === 1) {\n          this.state = state;\n          this.state.noArrowAt = noArrowAt.concat(valid[0].start);\n          ({\n            consequent,\n            failed\n          } = this.tryParseConditionalConsequent());\n        }\n      }\n\n      this.getArrowLikeExpressions(consequent, true);\n      this.state.noArrowAt = originalNoArrowAt;\n      this.expect(types.colon);\n      node.test = expr;\n      node.consequent = consequent;\n      node.alternate = this.forwardNoArrowParamsConversionAt(node, () => this.parseMaybeAssign(undefined, undefined, undefined));\n      return this.finishNode(node, \"ConditionalExpression\");\n    }\n\n    tryParseConditionalConsequent() {\n      this.state.noArrowParamsConversionAt.push(this.state.start);\n      const consequent = this.parseMaybeAssignAllowIn();\n      const failed = !this.match(types.colon);\n      this.state.noArrowParamsConversionAt.pop();\n      return {\n        consequent,\n        failed\n      };\n    }\n\n    getArrowLikeExpressions(node, disallowInvalid) {\n      const stack = [node];\n      const arrows = [];\n\n      while (stack.length !== 0) {\n        const node = stack.pop();\n\n        if (node.type === \"ArrowFunctionExpression\") {\n          if (node.typeParameters || !node.returnType) {\n            this.finishArrowValidation(node);\n          } else {\n            arrows.push(node);\n          }\n\n          stack.push(node.body);\n        } else if (node.type === \"ConditionalExpression\") {\n          stack.push(node.consequent);\n          stack.push(node.alternate);\n        }\n      }\n\n      if (disallowInvalid) {\n        arrows.forEach(node => this.finishArrowValidation(node));\n        return [arrows, []];\n      }\n\n      return partition(arrows, node => node.params.every(param => this.isAssignable(param, true)));\n    }\n\n    finishArrowValidation(node) {\n      var _node$extra;\n\n      this.toAssignableList(node.params, (_node$extra = node.extra) == null ? void 0 : _node$extra.trailingComma, false);\n      this.scope.enter(SCOPE_FUNCTION | SCOPE_ARROW);\n      super.checkParams(node, false, true);\n      this.scope.exit();\n    }\n\n    forwardNoArrowParamsConversionAt(node, parse) {\n      let result;\n\n      if (this.state.noArrowParamsConversionAt.indexOf(node.start) !== -1) {\n        this.state.noArrowParamsConversionAt.push(this.state.start);\n        result = parse();\n        this.state.noArrowParamsConversionAt.pop();\n      } else {\n        result = parse();\n      }\n\n      return result;\n    }\n\n    parseParenItem(node, startPos, startLoc) {\n      node = super.parseParenItem(node, startPos, startLoc);\n\n      if (this.eat(types.question)) {\n        node.optional = true;\n        this.resetEndLocation(node);\n      }\n\n      if (this.match(types.colon)) {\n        const typeCastNode = this.startNodeAt(startPos, startLoc);\n        typeCastNode.expression = node;\n        typeCastNode.typeAnnotation = this.flowParseTypeAnnotation();\n        return this.finishNode(typeCastNode, \"TypeCastExpression\");\n      }\n\n      return node;\n    }\n\n    assertModuleNodeAllowed(node) {\n      if (node.type === \"ImportDeclaration\" && (node.importKind === \"type\" || node.importKind === \"typeof\") || node.type === \"ExportNamedDeclaration\" && node.exportKind === \"type\" || node.type === \"ExportAllDeclaration\" && node.exportKind === \"type\") {\n        return;\n      }\n\n      super.assertModuleNodeAllowed(node);\n    }\n\n    parseExport(node) {\n      const decl = super.parseExport(node);\n\n      if (decl.type === \"ExportNamedDeclaration\" || decl.type === \"ExportAllDeclaration\") {\n        decl.exportKind = decl.exportKind || \"value\";\n      }\n\n      return decl;\n    }\n\n    parseExportDeclaration(node) {\n      if (this.isContextual(\"type\")) {\n        node.exportKind = \"type\";\n        const declarationNode = this.startNode();\n        this.next();\n\n        if (this.match(types.braceL)) {\n          node.specifiers = this.parseExportSpecifiers();\n          this.parseExportFrom(node);\n          return null;\n        } else {\n          return this.flowParseTypeAlias(declarationNode);\n        }\n      } else if (this.isContextual(\"opaque\")) {\n        node.exportKind = \"type\";\n        const declarationNode = this.startNode();\n        this.next();\n        return this.flowParseOpaqueType(declarationNode, false);\n      } else if (this.isContextual(\"interface\")) {\n        node.exportKind = \"type\";\n        const declarationNode = this.startNode();\n        this.next();\n        return this.flowParseInterface(declarationNode);\n      } else if (this.shouldParseEnums() && this.isContextual(\"enum\")) {\n        node.exportKind = \"value\";\n        const declarationNode = this.startNode();\n        this.next();\n        return this.flowParseEnumDeclaration(declarationNode);\n      } else {\n        return super.parseExportDeclaration(node);\n      }\n    }\n\n    eatExportStar(node) {\n      if (super.eatExportStar(...arguments)) return true;\n\n      if (this.isContextual(\"type\") && this.lookahead().type === types.star) {\n        node.exportKind = \"type\";\n        this.next();\n        this.next();\n        return true;\n      }\n\n      return false;\n    }\n\n    maybeParseExportNamespaceSpecifier(node) {\n      const pos = this.state.start;\n      const hasNamespace = super.maybeParseExportNamespaceSpecifier(node);\n\n      if (hasNamespace && node.exportKind === \"type\") {\n        this.unexpected(pos);\n      }\n\n      return hasNamespace;\n    }\n\n    parseClassId(node, isStatement, optionalId) {\n      super.parseClassId(node, isStatement, optionalId);\n\n      if (this.isRelational(\"<\")) {\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n      }\n    }\n\n    parseClassMember(classBody, member, state) {\n      const pos = this.state.start;\n\n      if (this.isContextual(\"declare\")) {\n        if (this.parseClassMemberFromModifier(classBody, member)) {\n          return;\n        }\n\n        member.declare = true;\n      }\n\n      super.parseClassMember(classBody, member, state);\n\n      if (member.declare) {\n        if (member.type !== \"ClassProperty\" && member.type !== \"ClassPrivateProperty\" && member.type !== \"PropertyDefinition\") {\n            this.raise(pos, FlowErrors.DeclareClassElement);\n          } else if (member.value) {\n          this.raise(member.value.start, FlowErrors.DeclareClassFieldInitializer);\n        }\n      }\n    }\n\n    getTokenFromCode(code) {\n      const next = this.input.charCodeAt(this.state.pos + 1);\n\n      if (code === 123 && next === 124) {\n        return this.finishOp(types.braceBarL, 2);\n      } else if (this.state.inType && (code === 62 || code === 60)) {\n        return this.finishOp(types.relational, 1);\n      } else if (this.state.inType && code === 63) {\n        return this.finishOp(types.question, 1);\n      } else if (isIteratorStart(code, next)) {\n        this.state.isIterator = true;\n        return super.readWord();\n      } else {\n        return super.getTokenFromCode(code);\n      }\n    }\n\n    isAssignable(node, isBinding) {\n      switch (node.type) {\n        case \"Identifier\":\n        case \"ObjectPattern\":\n        case \"ArrayPattern\":\n        case \"AssignmentPattern\":\n          return true;\n\n        case \"ObjectExpression\":\n          {\n            const last = node.properties.length - 1;\n            return node.properties.every((prop, i) => {\n              return prop.type !== \"ObjectMethod\" && (i === last || prop.type === \"SpreadElement\") && this.isAssignable(prop);\n            });\n          }\n\n        case \"ObjectProperty\":\n          return this.isAssignable(node.value);\n\n        case \"SpreadElement\":\n          return this.isAssignable(node.argument);\n\n        case \"ArrayExpression\":\n          return node.elements.every(element => this.isAssignable(element));\n\n        case \"AssignmentExpression\":\n          return node.operator === \"=\";\n\n        case \"ParenthesizedExpression\":\n        case \"TypeCastExpression\":\n          return this.isAssignable(node.expression);\n\n        case \"MemberExpression\":\n        case \"OptionalMemberExpression\":\n          return !isBinding;\n\n        default:\n          return false;\n      }\n    }\n\n    toAssignable(node, isLHS = false) {\n      if (node.type === \"TypeCastExpression\") {\n        return super.toAssignable(this.typeCastToParameter(node), isLHS);\n      } else {\n        return super.toAssignable(node, isLHS);\n      }\n    }\n\n    toAssignableList(exprList, trailingCommaPos, isLHS) {\n      for (let i = 0; i < exprList.length; i++) {\n        const expr = exprList[i];\n\n        if ((expr == null ? void 0 : expr.type) === \"TypeCastExpression\") {\n          exprList[i] = this.typeCastToParameter(expr);\n        }\n      }\n\n      return super.toAssignableList(exprList, trailingCommaPos, isLHS);\n    }\n\n    toReferencedList(exprList, isParenthesizedExpr) {\n      for (let i = 0; i < exprList.length; i++) {\n        var _expr$extra;\n\n        const expr = exprList[i];\n\n        if (expr && expr.type === \"TypeCastExpression\" && !((_expr$extra = expr.extra) == null ? void 0 : _expr$extra.parenthesized) && (exprList.length > 1 || !isParenthesizedExpr)) {\n          this.raise(expr.typeAnnotation.start, FlowErrors.TypeCastInPattern);\n        }\n      }\n\n      return exprList;\n    }\n\n    parseArrayLike(close, canBePattern, isTuple, refExpressionErrors) {\n      const node = super.parseArrayLike(close, canBePattern, isTuple, refExpressionErrors);\n\n      if (canBePattern && !this.state.maybeInArrowParameters) {\n        this.toReferencedList(node.elements);\n      }\n\n      return node;\n    }\n\n    checkLVal(expr, ...args) {\n      if (expr.type !== \"TypeCastExpression\") {\n        return super.checkLVal(expr, ...args);\n      }\n    }\n\n    parseClassProperty(node) {\n      if (this.match(types.colon)) {\n        node.typeAnnotation = this.flowParseTypeAnnotation();\n      }\n\n      return super.parseClassProperty(node);\n    }\n\n    parseClassPrivateProperty(node) {\n      if (this.match(types.colon)) {\n        node.typeAnnotation = this.flowParseTypeAnnotation();\n      }\n\n      return super.parseClassPrivateProperty(node);\n    }\n\n    isClassMethod() {\n      return this.isRelational(\"<\") || super.isClassMethod();\n    }\n\n    isClassProperty() {\n      return this.match(types.colon) || super.isClassProperty();\n    }\n\n    isNonstaticConstructor(method) {\n      return !this.match(types.colon) && super.isNonstaticConstructor(method);\n    }\n\n    isThisParam(param) {\n      return param.type === \"Identifier\" && param.name === \"this\";\n    }\n\n    pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper) {\n      if (method.variance) {\n        this.unexpected(method.variance.start);\n      }\n\n      delete method.variance;\n\n      if (this.isRelational(\"<\")) {\n        method.typeParameters = this.flowParseTypeParameterDeclaration();\n      }\n\n      super.pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper);\n\n      if (method.params && isConstructor) {\n        const params = method.params;\n\n        if (params.length > 0 && this.isThisParam(params[0])) {\n          this.raise(method.start, FlowErrors.ThisParamBannedInConstructor);\n        }\n      } else if (method.type === \"MethodDefinition\" && isConstructor && method.value.params) {\n        const params = method.value.params;\n\n        if (params.length > 0 && this.isThisParam(params[0])) {\n          this.raise(method.start, FlowErrors.ThisParamBannedInConstructor);\n        }\n      }\n    }\n\n    pushClassPrivateMethod(classBody, method, isGenerator, isAsync) {\n      if (method.variance) {\n        this.unexpected(method.variance.start);\n      }\n\n      delete method.variance;\n\n      if (this.isRelational(\"<\")) {\n        method.typeParameters = this.flowParseTypeParameterDeclaration();\n      }\n\n      super.pushClassPrivateMethod(classBody, method, isGenerator, isAsync);\n    }\n\n    parseClassSuper(node) {\n      super.parseClassSuper(node);\n\n      if (node.superClass && this.isRelational(\"<\")) {\n        node.superTypeParameters = this.flowParseTypeParameterInstantiation();\n      }\n\n      if (this.isContextual(\"implements\")) {\n        this.next();\n        const implemented = node.implements = [];\n\n        do {\n          const node = this.startNode();\n          node.id = this.flowParseRestrictedIdentifier(true);\n\n          if (this.isRelational(\"<\")) {\n            node.typeParameters = this.flowParseTypeParameterInstantiation();\n          } else {\n            node.typeParameters = null;\n          }\n\n          implemented.push(this.finishNode(node, \"ClassImplements\"));\n        } while (this.eat(types.comma));\n      }\n    }\n\n    checkGetterSetterParams(method) {\n      super.checkGetterSetterParams(method);\n      const params = this.getObjectOrClassMethodParams(method);\n\n      if (params.length > 0) {\n        const param = params[0];\n\n        if (this.isThisParam(param) && method.kind === \"get\") {\n          this.raise(param.start, FlowErrors.GetterMayNotHaveThisParam);\n        } else if (this.isThisParam(param)) {\n          this.raise(param.start, FlowErrors.SetterMayNotHaveThisParam);\n        }\n      }\n    }\n\n    parsePropertyName(node, isPrivateNameAllowed) {\n      const variance = this.flowParseVariance();\n      const key = super.parsePropertyName(node, isPrivateNameAllowed);\n      node.variance = variance;\n      return key;\n    }\n\n    parseObjPropValue(prop, startPos, startLoc, isGenerator, isAsync, isPattern, isAccessor, refExpressionErrors) {\n      if (prop.variance) {\n        this.unexpected(prop.variance.start);\n      }\n\n      delete prop.variance;\n      let typeParameters;\n\n      if (this.isRelational(\"<\") && !isAccessor) {\n        typeParameters = this.flowParseTypeParameterDeclaration();\n        if (!this.match(types.parenL)) this.unexpected();\n      }\n\n      super.parseObjPropValue(prop, startPos, startLoc, isGenerator, isAsync, isPattern, isAccessor, refExpressionErrors);\n\n      if (typeParameters) {\n        (prop.value || prop).typeParameters = typeParameters;\n      }\n    }\n\n    parseAssignableListItemTypes(param) {\n      if (this.eat(types.question)) {\n        if (param.type !== \"Identifier\") {\n          this.raise(param.start, FlowErrors.OptionalBindingPattern);\n        }\n\n        if (this.isThisParam(param)) {\n          this.raise(param.start, FlowErrors.ThisParamMayNotBeOptional);\n        }\n\n        param.optional = true;\n      }\n\n      if (this.match(types.colon)) {\n        param.typeAnnotation = this.flowParseTypeAnnotation();\n      } else if (this.isThisParam(param)) {\n        this.raise(param.start, FlowErrors.ThisParamAnnotationRequired);\n      }\n\n      if (this.match(types.eq) && this.isThisParam(param)) {\n        this.raise(param.start, FlowErrors.ThisParamNoDefault);\n      }\n\n      this.resetEndLocation(param);\n      return param;\n    }\n\n    parseMaybeDefault(startPos, startLoc, left) {\n      const node = super.parseMaybeDefault(startPos, startLoc, left);\n\n      if (node.type === \"AssignmentPattern\" && node.typeAnnotation && node.right.start < node.typeAnnotation.start) {\n        this.raise(node.typeAnnotation.start, FlowErrors.TypeBeforeInitializer);\n      }\n\n      return node;\n    }\n\n    shouldParseDefaultImport(node) {\n      if (!hasTypeImportKind(node)) {\n        return super.shouldParseDefaultImport(node);\n      }\n\n      return isMaybeDefaultImport(this.state);\n    }\n\n    parseImportSpecifierLocal(node, specifier, type, contextDescription) {\n      specifier.local = hasTypeImportKind(node) ? this.flowParseRestrictedIdentifier(true, true) : this.parseIdentifier();\n      this.checkLVal(specifier.local, contextDescription, BIND_LEXICAL);\n      node.specifiers.push(this.finishNode(specifier, type));\n    }\n\n    maybeParseDefaultImportSpecifier(node) {\n      node.importKind = \"value\";\n      let kind = null;\n\n      if (this.match(types._typeof)) {\n        kind = \"typeof\";\n      } else if (this.isContextual(\"type\")) {\n        kind = \"type\";\n      }\n\n      if (kind) {\n        const lh = this.lookahead();\n\n        if (kind === \"type\" && lh.type === types.star) {\n          this.unexpected(lh.start);\n        }\n\n        if (isMaybeDefaultImport(lh) || lh.type === types.braceL || lh.type === types.star) {\n          this.next();\n          node.importKind = kind;\n        }\n      }\n\n      return super.maybeParseDefaultImportSpecifier(node);\n    }\n\n    parseImportSpecifier(node) {\n      const specifier = this.startNode();\n      const firstIdentLoc = this.state.start;\n      const firstIdent = this.parseModuleExportName();\n      let specifierTypeKind = null;\n\n      if (firstIdent.type === \"Identifier\") {\n        if (firstIdent.name === \"type\") {\n          specifierTypeKind = \"type\";\n        } else if (firstIdent.name === \"typeof\") {\n          specifierTypeKind = \"typeof\";\n        }\n      }\n\n      let isBinding = false;\n\n      if (this.isContextual(\"as\") && !this.isLookaheadContextual(\"as\")) {\n        const as_ident = this.parseIdentifier(true);\n\n        if (specifierTypeKind !== null && !this.match(types.name) && !this.state.type.keyword) {\n          specifier.imported = as_ident;\n          specifier.importKind = specifierTypeKind;\n          specifier.local = as_ident.__clone();\n        } else {\n          specifier.imported = firstIdent;\n          specifier.importKind = null;\n          specifier.local = this.parseIdentifier();\n        }\n      } else if (specifierTypeKind !== null && (this.match(types.name) || this.state.type.keyword)) {\n        specifier.imported = this.parseIdentifier(true);\n        specifier.importKind = specifierTypeKind;\n\n        if (this.eatContextual(\"as\")) {\n          specifier.local = this.parseIdentifier();\n        } else {\n          isBinding = true;\n          specifier.local = specifier.imported.__clone();\n        }\n      } else {\n        if (firstIdent.type === \"StringLiteral\") {\n          throw this.raise(specifier.start, ErrorMessages.ImportBindingIsString, firstIdent.value);\n        }\n\n        isBinding = true;\n        specifier.imported = firstIdent;\n        specifier.importKind = null;\n        specifier.local = specifier.imported.__clone();\n      }\n\n      const nodeIsTypeImport = hasTypeImportKind(node);\n      const specifierIsTypeImport = hasTypeImportKind(specifier);\n\n      if (nodeIsTypeImport && specifierIsTypeImport) {\n        this.raise(firstIdentLoc, FlowErrors.ImportTypeShorthandOnlyInPureImport);\n      }\n\n      if (nodeIsTypeImport || specifierIsTypeImport) {\n        this.checkReservedType(specifier.local.name, specifier.local.start, true);\n      }\n\n      if (isBinding && !nodeIsTypeImport && !specifierIsTypeImport) {\n        this.checkReservedWord(specifier.local.name, specifier.start, true, true);\n      }\n\n      this.checkLVal(specifier.local, \"import specifier\", BIND_LEXICAL);\n      node.specifiers.push(this.finishNode(specifier, \"ImportSpecifier\"));\n    }\n\n    parseBindingAtom() {\n      switch (this.state.type) {\n        case types._this:\n          return this.parseIdentifier(true);\n\n        default:\n          return super.parseBindingAtom();\n      }\n    }\n\n    parseFunctionParams(node, allowModifiers) {\n      const kind = node.kind;\n\n      if (kind !== \"get\" && kind !== \"set\" && this.isRelational(\"<\")) {\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n      }\n\n      super.parseFunctionParams(node, allowModifiers);\n    }\n\n    parseVarId(decl, kind) {\n      super.parseVarId(decl, kind);\n\n      if (this.match(types.colon)) {\n        decl.id.typeAnnotation = this.flowParseTypeAnnotation();\n        this.resetEndLocation(decl.id);\n      }\n    }\n\n    parseAsyncArrowFromCallExpression(node, call) {\n      if (this.match(types.colon)) {\n        const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n        this.state.noAnonFunctionType = true;\n        node.returnType = this.flowParseTypeAnnotation();\n        this.state.noAnonFunctionType = oldNoAnonFunctionType;\n      }\n\n      return super.parseAsyncArrowFromCallExpression(node, call);\n    }\n\n    shouldParseAsyncArrow() {\n      return this.match(types.colon) || super.shouldParseAsyncArrow();\n    }\n\n    parseMaybeAssign(refExpressionErrors, afterLeftParse, refNeedsArrowPos) {\n      var _jsx;\n\n      let state = null;\n      let jsx;\n\n      if (this.hasPlugin(\"jsx\") && (this.match(types.jsxTagStart) || this.isRelational(\"<\"))) {\n        state = this.state.clone();\n        jsx = this.tryParse(() => super.parseMaybeAssign(refExpressionErrors, afterLeftParse, refNeedsArrowPos), state);\n        if (!jsx.error) return jsx.node;\n        const {\n          context\n        } = this.state;\n\n        if (context[context.length - 1] === types$1.j_oTag) {\n          context.length -= 2;\n        } else if (context[context.length - 1] === types$1.j_expr) {\n          context.length -= 1;\n        }\n      }\n\n      if (((_jsx = jsx) == null ? void 0 : _jsx.error) || this.isRelational(\"<\")) {\n        var _jsx2, _jsx3;\n\n        state = state || this.state.clone();\n        let typeParameters;\n        const arrow = this.tryParse(abort => {\n          var _arrowExpression$extr;\n\n          typeParameters = this.flowParseTypeParameterDeclaration();\n          const arrowExpression = this.forwardNoArrowParamsConversionAt(typeParameters, () => {\n            const result = super.parseMaybeAssign(refExpressionErrors, afterLeftParse, refNeedsArrowPos);\n            this.resetStartLocationFromNode(result, typeParameters);\n            return result;\n          });\n\n          if (arrowExpression.type !== \"ArrowFunctionExpression\" && ((_arrowExpression$extr = arrowExpression.extra) == null ? void 0 : _arrowExpression$extr.parenthesized)) {\n            abort();\n          }\n\n          const expr = this.maybeUnwrapTypeCastExpression(arrowExpression);\n          expr.typeParameters = typeParameters;\n          this.resetStartLocationFromNode(expr, typeParameters);\n          return arrowExpression;\n        }, state);\n        let arrowExpression = null;\n\n        if (arrow.node && this.maybeUnwrapTypeCastExpression(arrow.node).type === \"ArrowFunctionExpression\") {\n          if (!arrow.error && !arrow.aborted) {\n            if (arrow.node.async) {\n              this.raise(typeParameters.start, FlowErrors.UnexpectedTypeParameterBeforeAsyncArrowFunction);\n            }\n\n            return arrow.node;\n          }\n\n          arrowExpression = arrow.node;\n        }\n\n        if ((_jsx2 = jsx) == null ? void 0 : _jsx2.node) {\n          this.state = jsx.failState;\n          return jsx.node;\n        }\n\n        if (arrowExpression) {\n          this.state = arrow.failState;\n          return arrowExpression;\n        }\n\n        if ((_jsx3 = jsx) == null ? void 0 : _jsx3.thrown) throw jsx.error;\n        if (arrow.thrown) throw arrow.error;\n        throw this.raise(typeParameters.start, FlowErrors.UnexpectedTokenAfterTypeParameter);\n      }\n\n      return super.parseMaybeAssign(refExpressionErrors, afterLeftParse, refNeedsArrowPos);\n    }\n\n    parseArrow(node) {\n      if (this.match(types.colon)) {\n        const result = this.tryParse(() => {\n          const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n          this.state.noAnonFunctionType = true;\n          const typeNode = this.startNode();\n          [typeNode.typeAnnotation, node.predicate] = this.flowParseTypeAndPredicateInitialiser();\n          this.state.noAnonFunctionType = oldNoAnonFunctionType;\n          if (this.canInsertSemicolon()) this.unexpected();\n          if (!this.match(types.arrow)) this.unexpected();\n          return typeNode;\n        });\n        if (result.thrown) return null;\n        if (result.error) this.state = result.failState;\n        node.returnType = result.node.typeAnnotation ? this.finishNode(result.node, \"TypeAnnotation\") : null;\n      }\n\n      return super.parseArrow(node);\n    }\n\n    shouldParseArrow() {\n      return this.match(types.colon) || super.shouldParseArrow();\n    }\n\n    setArrowFunctionParameters(node, params) {\n      if (this.state.noArrowParamsConversionAt.indexOf(node.start) !== -1) {\n        node.params = params;\n      } else {\n        super.setArrowFunctionParameters(node, params);\n      }\n    }\n\n    checkParams(node, allowDuplicates, isArrowFunction) {\n      if (isArrowFunction && this.state.noArrowParamsConversionAt.indexOf(node.start) !== -1) {\n        return;\n      }\n\n      for (let i = 0; i < node.params.length; i++) {\n        if (this.isThisParam(node.params[i]) && i > 0) {\n          this.raise(node.params[i].start, FlowErrors.ThisParamMustBeFirst);\n        }\n      }\n\n      return super.checkParams(...arguments);\n    }\n\n    parseParenAndDistinguishExpression(canBeArrow) {\n      return super.parseParenAndDistinguishExpression(canBeArrow && this.state.noArrowAt.indexOf(this.state.start) === -1);\n    }\n\n    parseSubscripts(base, startPos, startLoc, noCalls) {\n      if (base.type === \"Identifier\" && base.name === \"async\" && this.state.noArrowAt.indexOf(startPos) !== -1) {\n        this.next();\n        const node = this.startNodeAt(startPos, startLoc);\n        node.callee = base;\n        node.arguments = this.parseCallExpressionArguments(types.parenR, false);\n        base = this.finishNode(node, \"CallExpression\");\n      } else if (base.type === \"Identifier\" && base.name === \"async\" && this.isRelational(\"<\")) {\n        const state = this.state.clone();\n        const arrow = this.tryParse(abort => this.parseAsyncArrowWithTypeParameters(startPos, startLoc) || abort(), state);\n        if (!arrow.error && !arrow.aborted) return arrow.node;\n        const result = this.tryParse(() => super.parseSubscripts(base, startPos, startLoc, noCalls), state);\n        if (result.node && !result.error) return result.node;\n\n        if (arrow.node) {\n          this.state = arrow.failState;\n          return arrow.node;\n        }\n\n        if (result.node) {\n          this.state = result.failState;\n          return result.node;\n        }\n\n        throw arrow.error || result.error;\n      }\n\n      return super.parseSubscripts(base, startPos, startLoc, noCalls);\n    }\n\n    parseSubscript(base, startPos, startLoc, noCalls, subscriptState) {\n      if (this.match(types.questionDot) && this.isLookaheadToken_lt()) {\n        subscriptState.optionalChainMember = true;\n\n        if (noCalls) {\n          subscriptState.stop = true;\n          return base;\n        }\n\n        this.next();\n        const node = this.startNodeAt(startPos, startLoc);\n        node.callee = base;\n        node.typeArguments = this.flowParseTypeParameterInstantiation();\n        this.expect(types.parenL);\n        node.arguments = this.parseCallExpressionArguments(types.parenR, false);\n        node.optional = true;\n        return this.finishCallExpression(node, true);\n      } else if (!noCalls && this.shouldParseTypes() && this.isRelational(\"<\")) {\n        const node = this.startNodeAt(startPos, startLoc);\n        node.callee = base;\n        const result = this.tryParse(() => {\n          node.typeArguments = this.flowParseTypeParameterInstantiationCallOrNew();\n          this.expect(types.parenL);\n          node.arguments = this.parseCallExpressionArguments(types.parenR, false);\n          if (subscriptState.optionalChainMember) node.optional = false;\n          return this.finishCallExpression(node, subscriptState.optionalChainMember);\n        });\n\n        if (result.node) {\n          if (result.error) this.state = result.failState;\n          return result.node;\n        }\n      }\n\n      return super.parseSubscript(base, startPos, startLoc, noCalls, subscriptState);\n    }\n\n    parseNewArguments(node) {\n      let targs = null;\n\n      if (this.shouldParseTypes() && this.isRelational(\"<\")) {\n        targs = this.tryParse(() => this.flowParseTypeParameterInstantiationCallOrNew()).node;\n      }\n\n      node.typeArguments = targs;\n      super.parseNewArguments(node);\n    }\n\n    parseAsyncArrowWithTypeParameters(startPos, startLoc) {\n      const node = this.startNodeAt(startPos, startLoc);\n      this.parseFunctionParams(node);\n      if (!this.parseArrow(node)) return;\n      return this.parseArrowExpression(node, undefined, true);\n    }\n\n    readToken_mult_modulo(code) {\n      const next = this.input.charCodeAt(this.state.pos + 1);\n\n      if (code === 42 && next === 47 && this.state.hasFlowComment) {\n        this.state.hasFlowComment = false;\n        this.state.pos += 2;\n        this.nextToken();\n        return;\n      }\n\n      super.readToken_mult_modulo(code);\n    }\n\n    readToken_pipe_amp(code) {\n      const next = this.input.charCodeAt(this.state.pos + 1);\n\n      if (code === 124 && next === 125) {\n        this.finishOp(types.braceBarR, 2);\n        return;\n      }\n\n      super.readToken_pipe_amp(code);\n    }\n\n    parseTopLevel(file, program) {\n      const fileNode = super.parseTopLevel(file, program);\n\n      if (this.state.hasFlowComment) {\n        this.raise(this.state.pos, FlowErrors.UnterminatedFlowComment);\n      }\n\n      return fileNode;\n    }\n\n    skipBlockComment() {\n      if (this.hasPlugin(\"flowComments\") && this.skipFlowComment()) {\n        if (this.state.hasFlowComment) {\n          this.unexpected(null, FlowErrors.NestedFlowComment);\n        }\n\n        this.hasFlowCommentCompletion();\n        this.state.pos += this.skipFlowComment();\n        this.state.hasFlowComment = true;\n        return;\n      }\n\n      if (this.state.hasFlowComment) {\n        const end = this.input.indexOf(\"*-/\", this.state.pos += 2);\n\n        if (end === -1) {\n          throw this.raise(this.state.pos - 2, ErrorMessages.UnterminatedComment);\n        }\n\n        this.state.pos = end + 3;\n        return;\n      }\n\n      super.skipBlockComment();\n    }\n\n    skipFlowComment() {\n      const {\n        pos\n      } = this.state;\n      let shiftToFirstNonWhiteSpace = 2;\n\n      while ([32, 9].includes(this.input.charCodeAt(pos + shiftToFirstNonWhiteSpace))) {\n        shiftToFirstNonWhiteSpace++;\n      }\n\n      const ch2 = this.input.charCodeAt(shiftToFirstNonWhiteSpace + pos);\n      const ch3 = this.input.charCodeAt(shiftToFirstNonWhiteSpace + pos + 1);\n\n      if (ch2 === 58 && ch3 === 58) {\n        return shiftToFirstNonWhiteSpace + 2;\n      }\n\n      if (this.input.slice(shiftToFirstNonWhiteSpace + pos, shiftToFirstNonWhiteSpace + pos + 12) === \"flow-include\") {\n        return shiftToFirstNonWhiteSpace + 12;\n      }\n\n      if (ch2 === 58 && ch3 !== 58) {\n        return shiftToFirstNonWhiteSpace;\n      }\n\n      return false;\n    }\n\n    hasFlowCommentCompletion() {\n      const end = this.input.indexOf(\"*/\", this.state.pos);\n\n      if (end === -1) {\n        throw this.raise(this.state.pos, ErrorMessages.UnterminatedComment);\n      }\n    }\n\n    flowEnumErrorBooleanMemberNotInitialized(pos, {\n      enumName,\n      memberName\n    }) {\n      this.raise(pos, FlowErrors.EnumBooleanMemberNotInitialized, memberName, enumName);\n    }\n\n    flowEnumErrorInvalidMemberName(pos, {\n      enumName,\n      memberName\n    }) {\n      const suggestion = memberName[0].toUpperCase() + memberName.slice(1);\n      this.raise(pos, FlowErrors.EnumInvalidMemberName, memberName, suggestion, enumName);\n    }\n\n    flowEnumErrorDuplicateMemberName(pos, {\n      enumName,\n      memberName\n    }) {\n      this.raise(pos, FlowErrors.EnumDuplicateMemberName, memberName, enumName);\n    }\n\n    flowEnumErrorInconsistentMemberValues(pos, {\n      enumName\n    }) {\n      this.raise(pos, FlowErrors.EnumInconsistentMemberValues, enumName);\n    }\n\n    flowEnumErrorInvalidExplicitType(pos, {\n      enumName,\n      suppliedType\n    }) {\n      return this.raise(pos, suppliedType === null ? FlowErrors.EnumInvalidExplicitTypeUnknownSupplied : FlowErrors.EnumInvalidExplicitType, enumName, suppliedType);\n    }\n\n    flowEnumErrorInvalidMemberInitializer(pos, {\n      enumName,\n      explicitType,\n      memberName\n    }) {\n      let message = null;\n\n      switch (explicitType) {\n        case \"boolean\":\n        case \"number\":\n        case \"string\":\n          message = FlowErrors.EnumInvalidMemberInitializerPrimaryType;\n          break;\n\n        case \"symbol\":\n          message = FlowErrors.EnumInvalidMemberInitializerSymbolType;\n          break;\n\n        default:\n          message = FlowErrors.EnumInvalidMemberInitializerUnknownType;\n      }\n\n      return this.raise(pos, message, enumName, memberName, explicitType);\n    }\n\n    flowEnumErrorNumberMemberNotInitialized(pos, {\n      enumName,\n      memberName\n    }) {\n      this.raise(pos, FlowErrors.EnumNumberMemberNotInitialized, enumName, memberName);\n    }\n\n    flowEnumErrorStringMemberInconsistentlyInitailized(pos, {\n      enumName\n    }) {\n      this.raise(pos, FlowErrors.EnumStringMemberInconsistentlyInitailized, enumName);\n    }\n\n    flowEnumMemberInit() {\n      const startPos = this.state.start;\n\n      const endOfInit = () => this.match(types.comma) || this.match(types.braceR);\n\n      switch (this.state.type) {\n        case types.num:\n          {\n            const literal = this.parseLiteral(this.state.value, \"NumericLiteral\");\n\n            if (endOfInit()) {\n              return {\n                type: \"number\",\n                pos: literal.start,\n                value: literal\n              };\n            }\n\n            return {\n              type: \"invalid\",\n              pos: startPos\n            };\n          }\n\n        case types.string:\n          {\n            const literal = this.parseLiteral(this.state.value, \"StringLiteral\");\n\n            if (endOfInit()) {\n              return {\n                type: \"string\",\n                pos: literal.start,\n                value: literal\n              };\n            }\n\n            return {\n              type: \"invalid\",\n              pos: startPos\n            };\n          }\n\n        case types._true:\n        case types._false:\n          {\n            const literal = this.parseBooleanLiteral();\n\n            if (endOfInit()) {\n              return {\n                type: \"boolean\",\n                pos: literal.start,\n                value: literal\n              };\n            }\n\n            return {\n              type: \"invalid\",\n              pos: startPos\n            };\n          }\n\n        default:\n          return {\n            type: \"invalid\",\n            pos: startPos\n          };\n      }\n    }\n\n    flowEnumMemberRaw() {\n      const pos = this.state.start;\n      const id = this.parseIdentifier(true);\n      const init = this.eat(types.eq) ? this.flowEnumMemberInit() : {\n        type: \"none\",\n        pos\n      };\n      return {\n        id,\n        init\n      };\n    }\n\n    flowEnumCheckExplicitTypeMismatch(pos, context, expectedType) {\n      const {\n        explicitType\n      } = context;\n\n      if (explicitType === null) {\n        return;\n      }\n\n      if (explicitType !== expectedType) {\n        this.flowEnumErrorInvalidMemberInitializer(pos, context);\n      }\n    }\n\n    flowEnumMembers({\n      enumName,\n      explicitType\n    }) {\n      const seenNames = new Set();\n      const members = {\n        booleanMembers: [],\n        numberMembers: [],\n        stringMembers: [],\n        defaultedMembers: []\n      };\n      let hasUnknownMembers = false;\n\n      while (!this.match(types.braceR)) {\n        if (this.eat(types.ellipsis)) {\n          hasUnknownMembers = true;\n          break;\n        }\n\n        const memberNode = this.startNode();\n        const {\n          id,\n          init\n        } = this.flowEnumMemberRaw();\n        const memberName = id.name;\n\n        if (memberName === \"\") {\n          continue;\n        }\n\n        if (/^[a-z]/.test(memberName)) {\n          this.flowEnumErrorInvalidMemberName(id.start, {\n            enumName,\n            memberName\n          });\n        }\n\n        if (seenNames.has(memberName)) {\n          this.flowEnumErrorDuplicateMemberName(id.start, {\n            enumName,\n            memberName\n          });\n        }\n\n        seenNames.add(memberName);\n        const context = {\n          enumName,\n          explicitType,\n          memberName\n        };\n        memberNode.id = id;\n\n        switch (init.type) {\n          case \"boolean\":\n            {\n              this.flowEnumCheckExplicitTypeMismatch(init.pos, context, \"boolean\");\n              memberNode.init = init.value;\n              members.booleanMembers.push(this.finishNode(memberNode, \"EnumBooleanMember\"));\n              break;\n            }\n\n          case \"number\":\n            {\n              this.flowEnumCheckExplicitTypeMismatch(init.pos, context, \"number\");\n              memberNode.init = init.value;\n              members.numberMembers.push(this.finishNode(memberNode, \"EnumNumberMember\"));\n              break;\n            }\n\n          case \"string\":\n            {\n              this.flowEnumCheckExplicitTypeMismatch(init.pos, context, \"string\");\n              memberNode.init = init.value;\n              members.stringMembers.push(this.finishNode(memberNode, \"EnumStringMember\"));\n              break;\n            }\n\n          case \"invalid\":\n            {\n              throw this.flowEnumErrorInvalidMemberInitializer(init.pos, context);\n            }\n\n          case \"none\":\n            {\n              switch (explicitType) {\n                case \"boolean\":\n                  this.flowEnumErrorBooleanMemberNotInitialized(init.pos, context);\n                  break;\n\n                case \"number\":\n                  this.flowEnumErrorNumberMemberNotInitialized(init.pos, context);\n                  break;\n\n                default:\n                  members.defaultedMembers.push(this.finishNode(memberNode, \"EnumDefaultedMember\"));\n              }\n            }\n        }\n\n        if (!this.match(types.braceR)) {\n          this.expect(types.comma);\n        }\n      }\n\n      return {\n        members,\n        hasUnknownMembers\n      };\n    }\n\n    flowEnumStringMembers(initializedMembers, defaultedMembers, {\n      enumName\n    }) {\n      if (initializedMembers.length === 0) {\n        return defaultedMembers;\n      } else if (defaultedMembers.length === 0) {\n        return initializedMembers;\n      } else if (defaultedMembers.length > initializedMembers.length) {\n        for (let _i = 0; _i < initializedMembers.length; _i++) {\n          const member = initializedMembers[_i];\n          this.flowEnumErrorStringMemberInconsistentlyInitailized(member.start, {\n            enumName\n          });\n        }\n\n        return defaultedMembers;\n      } else {\n        for (let _i2 = 0; _i2 < defaultedMembers.length; _i2++) {\n          const member = defaultedMembers[_i2];\n          this.flowEnumErrorStringMemberInconsistentlyInitailized(member.start, {\n            enumName\n          });\n        }\n\n        return initializedMembers;\n      }\n    }\n\n    flowEnumParseExplicitType({\n      enumName\n    }) {\n      if (this.eatContextual(\"of\")) {\n        if (!this.match(types.name)) {\n          throw this.flowEnumErrorInvalidExplicitType(this.state.start, {\n            enumName,\n            suppliedType: null\n          });\n        }\n\n        const {\n          value\n        } = this.state;\n        this.next();\n\n        if (value !== \"boolean\" && value !== \"number\" && value !== \"string\" && value !== \"symbol\") {\n          this.flowEnumErrorInvalidExplicitType(this.state.start, {\n            enumName,\n            suppliedType: value\n          });\n        }\n\n        return value;\n      }\n\n      return null;\n    }\n\n    flowEnumBody(node, {\n      enumName,\n      nameLoc\n    }) {\n      const explicitType = this.flowEnumParseExplicitType({\n        enumName\n      });\n      this.expect(types.braceL);\n      const {\n        members,\n        hasUnknownMembers\n      } = this.flowEnumMembers({\n        enumName,\n        explicitType\n      });\n      node.hasUnknownMembers = hasUnknownMembers;\n\n      switch (explicitType) {\n        case \"boolean\":\n          node.explicitType = true;\n          node.members = members.booleanMembers;\n          this.expect(types.braceR);\n          return this.finishNode(node, \"EnumBooleanBody\");\n\n        case \"number\":\n          node.explicitType = true;\n          node.members = members.numberMembers;\n          this.expect(types.braceR);\n          return this.finishNode(node, \"EnumNumberBody\");\n\n        case \"string\":\n          node.explicitType = true;\n          node.members = this.flowEnumStringMembers(members.stringMembers, members.defaultedMembers, {\n            enumName\n          });\n          this.expect(types.braceR);\n          return this.finishNode(node, \"EnumStringBody\");\n\n        case \"symbol\":\n          node.members = members.defaultedMembers;\n          this.expect(types.braceR);\n          return this.finishNode(node, \"EnumSymbolBody\");\n\n        default:\n          {\n            const empty = () => {\n              node.members = [];\n              this.expect(types.braceR);\n              return this.finishNode(node, \"EnumStringBody\");\n            };\n\n            node.explicitType = false;\n            const boolsLen = members.booleanMembers.length;\n            const numsLen = members.numberMembers.length;\n            const strsLen = members.stringMembers.length;\n            const defaultedLen = members.defaultedMembers.length;\n\n            if (!boolsLen && !numsLen && !strsLen && !defaultedLen) {\n              return empty();\n            } else if (!boolsLen && !numsLen) {\n              node.members = this.flowEnumStringMembers(members.stringMembers, members.defaultedMembers, {\n                enumName\n              });\n              this.expect(types.braceR);\n              return this.finishNode(node, \"EnumStringBody\");\n            } else if (!numsLen && !strsLen && boolsLen >= defaultedLen) {\n              for (let _i3 = 0, _members$defaultedMem = members.defaultedMembers; _i3 < _members$defaultedMem.length; _i3++) {\n                const member = _members$defaultedMem[_i3];\n                this.flowEnumErrorBooleanMemberNotInitialized(member.start, {\n                  enumName,\n                  memberName: member.id.name\n                });\n              }\n\n              node.members = members.booleanMembers;\n              this.expect(types.braceR);\n              return this.finishNode(node, \"EnumBooleanBody\");\n            } else if (!boolsLen && !strsLen && numsLen >= defaultedLen) {\n              for (let _i4 = 0, _members$defaultedMem2 = members.defaultedMembers; _i4 < _members$defaultedMem2.length; _i4++) {\n                const member = _members$defaultedMem2[_i4];\n                this.flowEnumErrorNumberMemberNotInitialized(member.start, {\n                  enumName,\n                  memberName: member.id.name\n                });\n              }\n\n              node.members = members.numberMembers;\n              this.expect(types.braceR);\n              return this.finishNode(node, \"EnumNumberBody\");\n            } else {\n              this.flowEnumErrorInconsistentMemberValues(nameLoc, {\n                enumName\n              });\n              return empty();\n            }\n          }\n      }\n    }\n\n    flowParseEnumDeclaration(node) {\n      const id = this.parseIdentifier();\n      node.id = id;\n      node.body = this.flowEnumBody(this.startNode(), {\n        enumName: id.name,\n        nameLoc: id.start\n      });\n      return this.finishNode(node, \"EnumDeclaration\");\n    }\n\n    updateContext(prevType) {\n      if (this.match(types.name) && this.state.value === \"of\" && prevType === types.name && this.input.slice(this.state.lastTokStart, this.state.lastTokEnd) === \"interface\") {\n        this.state.exprAllowed = false;\n      } else {\n        super.updateContext(prevType);\n      }\n    }\n\n    isLookaheadToken_lt() {\n      const next = this.nextTokenStart();\n\n      if (this.input.charCodeAt(next) === 60) {\n        const afterNext = this.input.charCodeAt(next + 1);\n        return afterNext !== 60 && afterNext !== 61;\n      }\n\n      return false;\n    }\n\n    maybeUnwrapTypeCastExpression(node) {\n      return node.type === \"TypeCastExpression\" ? node.expression : node;\n    }\n\n  }, _temp;\n});\n\nconst entities = {\n  quot: \"\\u0022\",\n  amp: \"&\",\n  apos: \"\\u0027\",\n  lt: \"<\",\n  gt: \">\",\n  nbsp: \"\\u00A0\",\n  iexcl: \"\\u00A1\",\n  cent: \"\\u00A2\",\n  pound: \"\\u00A3\",\n  curren: \"\\u00A4\",\n  yen: \"\\u00A5\",\n  brvbar: \"\\u00A6\",\n  sect: \"\\u00A7\",\n  uml: \"\\u00A8\",\n  copy: \"\\u00A9\",\n  ordf: \"\\u00AA\",\n  laquo: \"\\u00AB\",\n  not: \"\\u00AC\",\n  shy: \"\\u00AD\",\n  reg: \"\\u00AE\",\n  macr: \"\\u00AF\",\n  deg: \"\\u00B0\",\n  plusmn: \"\\u00B1\",\n  sup2: \"\\u00B2\",\n  sup3: \"\\u00B3\",\n  acute: \"\\u00B4\",\n  micro: \"\\u00B5\",\n  para: \"\\u00B6\",\n  middot: \"\\u00B7\",\n  cedil: \"\\u00B8\",\n  sup1: \"\\u00B9\",\n  ordm: \"\\u00BA\",\n  raquo: \"\\u00BB\",\n  frac14: \"\\u00BC\",\n  frac12: \"\\u00BD\",\n  frac34: \"\\u00BE\",\n  iquest: \"\\u00BF\",\n  Agrave: \"\\u00C0\",\n  Aacute: \"\\u00C1\",\n  Acirc: \"\\u00C2\",\n  Atilde: \"\\u00C3\",\n  Auml: \"\\u00C4\",\n  Aring: \"\\u00C5\",\n  AElig: \"\\u00C6\",\n  Ccedil: \"\\u00C7\",\n  Egrave: \"\\u00C8\",\n  Eacute: \"\\u00C9\",\n  Ecirc: \"\\u00CA\",\n  Euml: \"\\u00CB\",\n  Igrave: \"\\u00CC\",\n  Iacute: \"\\u00CD\",\n  Icirc: \"\\u00CE\",\n  Iuml: \"\\u00CF\",\n  ETH: \"\\u00D0\",\n  Ntilde: \"\\u00D1\",\n  Ograve: \"\\u00D2\",\n  Oacute: \"\\u00D3\",\n  Ocirc: \"\\u00D4\",\n  Otilde: \"\\u00D5\",\n  Ouml: \"\\u00D6\",\n  times: \"\\u00D7\",\n  Oslash: \"\\u00D8\",\n  Ugrave: \"\\u00D9\",\n  Uacute: \"\\u00DA\",\n  Ucirc: \"\\u00DB\",\n  Uuml: \"\\u00DC\",\n  Yacute: \"\\u00DD\",\n  THORN: \"\\u00DE\",\n  szlig: \"\\u00DF\",\n  agrave: \"\\u00E0\",\n  aacute: \"\\u00E1\",\n  acirc: \"\\u00E2\",\n  atilde: \"\\u00E3\",\n  auml: \"\\u00E4\",\n  aring: \"\\u00E5\",\n  aelig: \"\\u00E6\",\n  ccedil: \"\\u00E7\",\n  egrave: \"\\u00E8\",\n  eacute: \"\\u00E9\",\n  ecirc: \"\\u00EA\",\n  euml: \"\\u00EB\",\n  igrave: \"\\u00EC\",\n  iacute: \"\\u00ED\",\n  icirc: \"\\u00EE\",\n  iuml: \"\\u00EF\",\n  eth: \"\\u00F0\",\n  ntilde: \"\\u00F1\",\n  ograve: \"\\u00F2\",\n  oacute: \"\\u00F3\",\n  ocirc: \"\\u00F4\",\n  otilde: \"\\u00F5\",\n  ouml: \"\\u00F6\",\n  divide: \"\\u00F7\",\n  oslash: \"\\u00F8\",\n  ugrave: \"\\u00F9\",\n  uacute: \"\\u00FA\",\n  ucirc: \"\\u00FB\",\n  uuml: \"\\u00FC\",\n  yacute: \"\\u00FD\",\n  thorn: \"\\u00FE\",\n  yuml: \"\\u00FF\",\n  OElig: \"\\u0152\",\n  oelig: \"\\u0153\",\n  Scaron: \"\\u0160\",\n  scaron: \"\\u0161\",\n  Yuml: \"\\u0178\",\n  fnof: \"\\u0192\",\n  circ: \"\\u02C6\",\n  tilde: \"\\u02DC\",\n  Alpha: \"\\u0391\",\n  Beta: \"\\u0392\",\n  Gamma: \"\\u0393\",\n  Delta: \"\\u0394\",\n  Epsilon: \"\\u0395\",\n  Zeta: \"\\u0396\",\n  Eta: \"\\u0397\",\n  Theta: \"\\u0398\",\n  Iota: \"\\u0399\",\n  Kappa: \"\\u039A\",\n  Lambda: \"\\u039B\",\n  Mu: \"\\u039C\",\n  Nu: \"\\u039D\",\n  Xi: \"\\u039E\",\n  Omicron: \"\\u039F\",\n  Pi: \"\\u03A0\",\n  Rho: \"\\u03A1\",\n  Sigma: \"\\u03A3\",\n  Tau: \"\\u03A4\",\n  Upsilon: \"\\u03A5\",\n  Phi: \"\\u03A6\",\n  Chi: \"\\u03A7\",\n  Psi: \"\\u03A8\",\n  Omega: \"\\u03A9\",\n  alpha: \"\\u03B1\",\n  beta: \"\\u03B2\",\n  gamma: \"\\u03B3\",\n  delta: \"\\u03B4\",\n  epsilon: \"\\u03B5\",\n  zeta: \"\\u03B6\",\n  eta: \"\\u03B7\",\n  theta: \"\\u03B8\",\n  iota: \"\\u03B9\",\n  kappa: \"\\u03BA\",\n  lambda: \"\\u03BB\",\n  mu: \"\\u03BC\",\n  nu: \"\\u03BD\",\n  xi: \"\\u03BE\",\n  omicron: \"\\u03BF\",\n  pi: \"\\u03C0\",\n  rho: \"\\u03C1\",\n  sigmaf: \"\\u03C2\",\n  sigma: \"\\u03C3\",\n  tau: \"\\u03C4\",\n  upsilon: \"\\u03C5\",\n  phi: \"\\u03C6\",\n  chi: \"\\u03C7\",\n  psi: \"\\u03C8\",\n  omega: \"\\u03C9\",\n  thetasym: \"\\u03D1\",\n  upsih: \"\\u03D2\",\n  piv: \"\\u03D6\",\n  ensp: \"\\u2002\",\n  emsp: \"\\u2003\",\n  thinsp: \"\\u2009\",\n  zwnj: \"\\u200C\",\n  zwj: \"\\u200D\",\n  lrm: \"\\u200E\",\n  rlm: \"\\u200F\",\n  ndash: \"\\u2013\",\n  mdash: \"\\u2014\",\n  lsquo: \"\\u2018\",\n  rsquo: \"\\u2019\",\n  sbquo: \"\\u201A\",\n  ldquo: \"\\u201C\",\n  rdquo: \"\\u201D\",\n  bdquo: \"\\u201E\",\n  dagger: \"\\u2020\",\n  Dagger: \"\\u2021\",\n  bull: \"\\u2022\",\n  hellip: \"\\u2026\",\n  permil: \"\\u2030\",\n  prime: \"\\u2032\",\n  Prime: \"\\u2033\",\n  lsaquo: \"\\u2039\",\n  rsaquo: \"\\u203A\",\n  oline: \"\\u203E\",\n  frasl: \"\\u2044\",\n  euro: \"\\u20AC\",\n  image: \"\\u2111\",\n  weierp: \"\\u2118\",\n  real: \"\\u211C\",\n  trade: \"\\u2122\",\n  alefsym: \"\\u2135\",\n  larr: \"\\u2190\",\n  uarr: \"\\u2191\",\n  rarr: \"\\u2192\",\n  darr: \"\\u2193\",\n  harr: \"\\u2194\",\n  crarr: \"\\u21B5\",\n  lArr: \"\\u21D0\",\n  uArr: \"\\u21D1\",\n  rArr: \"\\u21D2\",\n  dArr: \"\\u21D3\",\n  hArr: \"\\u21D4\",\n  forall: \"\\u2200\",\n  part: \"\\u2202\",\n  exist: \"\\u2203\",\n  empty: \"\\u2205\",\n  nabla: \"\\u2207\",\n  isin: \"\\u2208\",\n  notin: \"\\u2209\",\n  ni: \"\\u220B\",\n  prod: \"\\u220F\",\n  sum: \"\\u2211\",\n  minus: \"\\u2212\",\n  lowast: \"\\u2217\",\n  radic: \"\\u221A\",\n  prop: \"\\u221D\",\n  infin: \"\\u221E\",\n  ang: \"\\u2220\",\n  and: \"\\u2227\",\n  or: \"\\u2228\",\n  cap: \"\\u2229\",\n  cup: \"\\u222A\",\n  int: \"\\u222B\",\n  there4: \"\\u2234\",\n  sim: \"\\u223C\",\n  cong: \"\\u2245\",\n  asymp: \"\\u2248\",\n  ne: \"\\u2260\",\n  equiv: \"\\u2261\",\n  le: \"\\u2264\",\n  ge: \"\\u2265\",\n  sub: \"\\u2282\",\n  sup: \"\\u2283\",\n  nsub: \"\\u2284\",\n  sube: \"\\u2286\",\n  supe: \"\\u2287\",\n  oplus: \"\\u2295\",\n  otimes: \"\\u2297\",\n  perp: \"\\u22A5\",\n  sdot: \"\\u22C5\",\n  lceil: \"\\u2308\",\n  rceil: \"\\u2309\",\n  lfloor: \"\\u230A\",\n  rfloor: \"\\u230B\",\n  lang: \"\\u2329\",\n  rang: \"\\u232A\",\n  loz: \"\\u25CA\",\n  spades: \"\\u2660\",\n  clubs: \"\\u2663\",\n  hearts: \"\\u2665\",\n  diams: \"\\u2666\"\n};\n\nconst HEX_NUMBER = /^[\\da-fA-F]+$/;\nconst DECIMAL_NUMBER = /^\\d+$/;\nconst JsxErrors = Object.freeze({\n  AttributeIsEmpty: \"JSX attributes must only be assigned a non-empty expression\",\n  MissingClosingTagFragment: \"Expected corresponding JSX closing tag for <>\",\n  MissingClosingTagElement: \"Expected corresponding JSX closing tag for <%0>\",\n  UnexpectedSequenceExpression: \"Sequence expressions cannot be directly nested inside JSX. Did you mean to wrap it in parentheses (...)?\",\n  UnsupportedJsxValue: \"JSX value should be either an expression or a quoted JSX text\",\n  UnterminatedJsxContent: \"Unterminated JSX contents\",\n  UnwrappedAdjacentJSXElements: \"Adjacent JSX elements must be wrapped in an enclosing tag. Did you want a JSX fragment <>...</>?\"\n});\ntypes$1.j_oTag = new TokContext(\"<tag\", false);\ntypes$1.j_cTag = new TokContext(\"</tag\", false);\ntypes$1.j_expr = new TokContext(\"<tag>...</tag>\", true, true);\ntypes.jsxName = new TokenType(\"jsxName\");\ntypes.jsxText = new TokenType(\"jsxText\", {\n  beforeExpr: true\n});\ntypes.jsxTagStart = new TokenType(\"jsxTagStart\", {\n  startsExpr: true\n});\ntypes.jsxTagEnd = new TokenType(\"jsxTagEnd\");\n\ntypes.jsxTagStart.updateContext = function () {\n  this.state.context.push(types$1.j_expr);\n  this.state.context.push(types$1.j_oTag);\n  this.state.exprAllowed = false;\n};\n\ntypes.jsxTagEnd.updateContext = function (prevType) {\n  const out = this.state.context.pop();\n\n  if (out === types$1.j_oTag && prevType === types.slash || out === types$1.j_cTag) {\n    this.state.context.pop();\n    this.state.exprAllowed = this.curContext() === types$1.j_expr;\n  } else {\n    this.state.exprAllowed = true;\n  }\n};\n\nfunction isFragment(object) {\n  return object ? object.type === \"JSXOpeningFragment\" || object.type === \"JSXClosingFragment\" : false;\n}\n\nfunction getQualifiedJSXName(object) {\n  if (object.type === \"JSXIdentifier\") {\n    return object.name;\n  }\n\n  if (object.type === \"JSXNamespacedName\") {\n    return object.namespace.name + \":\" + object.name.name;\n  }\n\n  if (object.type === \"JSXMemberExpression\") {\n    return getQualifiedJSXName(object.object) + \".\" + getQualifiedJSXName(object.property);\n  }\n\n  throw new Error(\"Node had unexpected type: \" + object.type);\n}\n\nvar jsx = (superClass => class extends superClass {\n  jsxReadToken() {\n    let out = \"\";\n    let chunkStart = this.state.pos;\n\n    for (;;) {\n      if (this.state.pos >= this.length) {\n        throw this.raise(this.state.start, JsxErrors.UnterminatedJsxContent);\n      }\n\n      const ch = this.input.charCodeAt(this.state.pos);\n\n      switch (ch) {\n        case 60:\n        case 123:\n          if (this.state.pos === this.state.start) {\n            if (ch === 60 && this.state.exprAllowed) {\n              ++this.state.pos;\n              return this.finishToken(types.jsxTagStart);\n            }\n\n            return super.getTokenFromCode(ch);\n          }\n\n          out += this.input.slice(chunkStart, this.state.pos);\n          return this.finishToken(types.jsxText, out);\n\n        case 38:\n          out += this.input.slice(chunkStart, this.state.pos);\n          out += this.jsxReadEntity();\n          chunkStart = this.state.pos;\n          break;\n\n        case 62:\n        case 125:\n\n        default:\n          if (isNewLine(ch)) {\n            out += this.input.slice(chunkStart, this.state.pos);\n            out += this.jsxReadNewLine(true);\n            chunkStart = this.state.pos;\n          } else {\n            ++this.state.pos;\n          }\n\n      }\n    }\n  }\n\n  jsxReadNewLine(normalizeCRLF) {\n    const ch = this.input.charCodeAt(this.state.pos);\n    let out;\n    ++this.state.pos;\n\n    if (ch === 13 && this.input.charCodeAt(this.state.pos) === 10) {\n      ++this.state.pos;\n      out = normalizeCRLF ? \"\\n\" : \"\\r\\n\";\n    } else {\n      out = String.fromCharCode(ch);\n    }\n\n    ++this.state.curLine;\n    this.state.lineStart = this.state.pos;\n    return out;\n  }\n\n  jsxReadString(quote) {\n    let out = \"\";\n    let chunkStart = ++this.state.pos;\n\n    for (;;) {\n      if (this.state.pos >= this.length) {\n        throw this.raise(this.state.start, ErrorMessages.UnterminatedString);\n      }\n\n      const ch = this.input.charCodeAt(this.state.pos);\n      if (ch === quote) break;\n\n      if (ch === 38) {\n        out += this.input.slice(chunkStart, this.state.pos);\n        out += this.jsxReadEntity();\n        chunkStart = this.state.pos;\n      } else if (isNewLine(ch)) {\n        out += this.input.slice(chunkStart, this.state.pos);\n        out += this.jsxReadNewLine(false);\n        chunkStart = this.state.pos;\n      } else {\n        ++this.state.pos;\n      }\n    }\n\n    out += this.input.slice(chunkStart, this.state.pos++);\n    return this.finishToken(types.string, out);\n  }\n\n  jsxReadEntity() {\n    let str = \"\";\n    let count = 0;\n    let entity;\n    let ch = this.input[this.state.pos];\n    const startPos = ++this.state.pos;\n\n    while (this.state.pos < this.length && count++ < 10) {\n      ch = this.input[this.state.pos++];\n\n      if (ch === \";\") {\n        if (str[0] === \"#\") {\n          if (str[1] === \"x\") {\n            str = str.substr(2);\n\n            if (HEX_NUMBER.test(str)) {\n              entity = String.fromCodePoint(parseInt(str, 16));\n            }\n          } else {\n            str = str.substr(1);\n\n            if (DECIMAL_NUMBER.test(str)) {\n              entity = String.fromCodePoint(parseInt(str, 10));\n            }\n          }\n        } else {\n          entity = entities[str];\n        }\n\n        break;\n      }\n\n      str += ch;\n    }\n\n    if (!entity) {\n      this.state.pos = startPos;\n      return \"&\";\n    }\n\n    return entity;\n  }\n\n  jsxReadWord() {\n    let ch;\n    const start = this.state.pos;\n\n    do {\n      ch = this.input.charCodeAt(++this.state.pos);\n    } while (isIdentifierChar(ch) || ch === 45);\n\n    return this.finishToken(types.jsxName, this.input.slice(start, this.state.pos));\n  }\n\n  jsxParseIdentifier() {\n    const node = this.startNode();\n\n    if (this.match(types.jsxName)) {\n      node.name = this.state.value;\n    } else if (this.state.type.keyword) {\n      node.name = this.state.type.keyword;\n    } else {\n      this.unexpected();\n    }\n\n    this.next();\n    return this.finishNode(node, \"JSXIdentifier\");\n  }\n\n  jsxParseNamespacedName() {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const name = this.jsxParseIdentifier();\n    if (!this.eat(types.colon)) return name;\n    const node = this.startNodeAt(startPos, startLoc);\n    node.namespace = name;\n    node.name = this.jsxParseIdentifier();\n    return this.finishNode(node, \"JSXNamespacedName\");\n  }\n\n  jsxParseElementName() {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    let node = this.jsxParseNamespacedName();\n\n    if (node.type === \"JSXNamespacedName\") {\n      return node;\n    }\n\n    while (this.eat(types.dot)) {\n      const newNode = this.startNodeAt(startPos, startLoc);\n      newNode.object = node;\n      newNode.property = this.jsxParseIdentifier();\n      node = this.finishNode(newNode, \"JSXMemberExpression\");\n    }\n\n    return node;\n  }\n\n  jsxParseAttributeValue() {\n    let node;\n\n    switch (this.state.type) {\n      case types.braceL:\n        node = this.startNode();\n        this.next();\n        node = this.jsxParseExpressionContainer(node);\n\n        if (node.expression.type === \"JSXEmptyExpression\") {\n          this.raise(node.start, JsxErrors.AttributeIsEmpty);\n        }\n\n        return node;\n\n      case types.jsxTagStart:\n      case types.string:\n        return this.parseExprAtom();\n\n      default:\n        throw this.raise(this.state.start, JsxErrors.UnsupportedJsxValue);\n    }\n  }\n\n  jsxParseEmptyExpression() {\n    const node = this.startNodeAt(this.state.lastTokEnd, this.state.lastTokEndLoc);\n    return this.finishNodeAt(node, \"JSXEmptyExpression\", this.state.start, this.state.startLoc);\n  }\n\n  jsxParseSpreadChild(node) {\n    this.next();\n    node.expression = this.parseExpression();\n    this.expect(types.braceR);\n    return this.finishNode(node, \"JSXSpreadChild\");\n  }\n\n  jsxParseExpressionContainer(node) {\n    if (this.match(types.braceR)) {\n      node.expression = this.jsxParseEmptyExpression();\n    } else {\n      const expression = this.parseExpression();\n      node.expression = expression;\n    }\n\n    this.expect(types.braceR);\n    return this.finishNode(node, \"JSXExpressionContainer\");\n  }\n\n  jsxParseAttribute() {\n    const node = this.startNode();\n\n    if (this.eat(types.braceL)) {\n      this.expect(types.ellipsis);\n      node.argument = this.parseMaybeAssignAllowIn();\n      this.expect(types.braceR);\n      return this.finishNode(node, \"JSXSpreadAttribute\");\n    }\n\n    node.name = this.jsxParseNamespacedName();\n    node.value = this.eat(types.eq) ? this.jsxParseAttributeValue() : null;\n    return this.finishNode(node, \"JSXAttribute\");\n  }\n\n  jsxParseOpeningElementAt(startPos, startLoc) {\n    const node = this.startNodeAt(startPos, startLoc);\n\n    if (this.match(types.jsxTagEnd)) {\n      this.expect(types.jsxTagEnd);\n      return this.finishNode(node, \"JSXOpeningFragment\");\n    }\n\n    node.name = this.jsxParseElementName();\n    return this.jsxParseOpeningElementAfterName(node);\n  }\n\n  jsxParseOpeningElementAfterName(node) {\n    const attributes = [];\n\n    while (!this.match(types.slash) && !this.match(types.jsxTagEnd)) {\n      attributes.push(this.jsxParseAttribute());\n    }\n\n    node.attributes = attributes;\n    node.selfClosing = this.eat(types.slash);\n    this.expect(types.jsxTagEnd);\n    return this.finishNode(node, \"JSXOpeningElement\");\n  }\n\n  jsxParseClosingElementAt(startPos, startLoc) {\n    const node = this.startNodeAt(startPos, startLoc);\n\n    if (this.match(types.jsxTagEnd)) {\n      this.expect(types.jsxTagEnd);\n      return this.finishNode(node, \"JSXClosingFragment\");\n    }\n\n    node.name = this.jsxParseElementName();\n    this.expect(types.jsxTagEnd);\n    return this.finishNode(node, \"JSXClosingElement\");\n  }\n\n  jsxParseElementAt(startPos, startLoc) {\n    const node = this.startNodeAt(startPos, startLoc);\n    const children = [];\n    const openingElement = this.jsxParseOpeningElementAt(startPos, startLoc);\n    let closingElement = null;\n\n    if (!openingElement.selfClosing) {\n      contents: for (;;) {\n        switch (this.state.type) {\n          case types.jsxTagStart:\n            startPos = this.state.start;\n            startLoc = this.state.startLoc;\n            this.next();\n\n            if (this.eat(types.slash)) {\n              closingElement = this.jsxParseClosingElementAt(startPos, startLoc);\n              break contents;\n            }\n\n            children.push(this.jsxParseElementAt(startPos, startLoc));\n            break;\n\n          case types.jsxText:\n            children.push(this.parseExprAtom());\n            break;\n\n          case types.braceL:\n            {\n              const node = this.startNode();\n              this.next();\n\n              if (this.match(types.ellipsis)) {\n                children.push(this.jsxParseSpreadChild(node));\n              } else {\n                children.push(this.jsxParseExpressionContainer(node));\n              }\n\n              break;\n            }\n\n          default:\n            throw this.unexpected();\n        }\n      }\n\n      if (isFragment(openingElement) && !isFragment(closingElement)) {\n        this.raise(closingElement.start, JsxErrors.MissingClosingTagFragment);\n      } else if (!isFragment(openingElement) && isFragment(closingElement)) {\n        this.raise(closingElement.start, JsxErrors.MissingClosingTagElement, getQualifiedJSXName(openingElement.name));\n      } else if (!isFragment(openingElement) && !isFragment(closingElement)) {\n        if (getQualifiedJSXName(closingElement.name) !== getQualifiedJSXName(openingElement.name)) {\n          this.raise(closingElement.start, JsxErrors.MissingClosingTagElement, getQualifiedJSXName(openingElement.name));\n        }\n      }\n    }\n\n    if (isFragment(openingElement)) {\n      node.openingFragment = openingElement;\n      node.closingFragment = closingElement;\n    } else {\n      node.openingElement = openingElement;\n      node.closingElement = closingElement;\n    }\n\n    node.children = children;\n\n    if (this.isRelational(\"<\")) {\n      throw this.raise(this.state.start, JsxErrors.UnwrappedAdjacentJSXElements);\n    }\n\n    return isFragment(openingElement) ? this.finishNode(node, \"JSXFragment\") : this.finishNode(node, \"JSXElement\");\n  }\n\n  jsxParseElement() {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    this.next();\n    return this.jsxParseElementAt(startPos, startLoc);\n  }\n\n  parseExprAtom(refExpressionErrors) {\n    if (this.match(types.jsxText)) {\n      return this.parseLiteral(this.state.value, \"JSXText\");\n    } else if (this.match(types.jsxTagStart)) {\n      return this.jsxParseElement();\n    } else if (this.isRelational(\"<\") && this.input.charCodeAt(this.state.pos) !== 33) {\n      this.finishToken(types.jsxTagStart);\n      return this.jsxParseElement();\n    } else {\n      return super.parseExprAtom(refExpressionErrors);\n    }\n  }\n\n  getTokenFromCode(code) {\n    if (this.state.inPropertyName) return super.getTokenFromCode(code);\n    const context = this.curContext();\n\n    if (context === types$1.j_expr) {\n      return this.jsxReadToken();\n    }\n\n    if (context === types$1.j_oTag || context === types$1.j_cTag) {\n      if (isIdentifierStart(code)) {\n        return this.jsxReadWord();\n      }\n\n      if (code === 62) {\n        ++this.state.pos;\n        return this.finishToken(types.jsxTagEnd);\n      }\n\n      if ((code === 34 || code === 39) && context === types$1.j_oTag) {\n        return this.jsxReadString(code);\n      }\n    }\n\n    if (code === 60 && this.state.exprAllowed && this.input.charCodeAt(this.state.pos + 1) !== 33) {\n      ++this.state.pos;\n      return this.finishToken(types.jsxTagStart);\n    }\n\n    return super.getTokenFromCode(code);\n  }\n\n  updateContext(prevType) {\n    if (this.match(types.braceL)) {\n      const curContext = this.curContext();\n\n      if (curContext === types$1.j_oTag) {\n        this.state.context.push(types$1.braceExpression);\n      } else if (curContext === types$1.j_expr) {\n        this.state.context.push(types$1.templateQuasi);\n      } else {\n        super.updateContext(prevType);\n      }\n\n      this.state.exprAllowed = true;\n    } else if (this.match(types.slash) && prevType === types.jsxTagStart) {\n      this.state.context.length -= 2;\n      this.state.context.push(types$1.j_cTag);\n      this.state.exprAllowed = false;\n    } else {\n      return super.updateContext(prevType);\n    }\n  }\n\n});\n\nclass TypeScriptScope extends Scope {\n  constructor(...args) {\n    super(...args);\n    this.types = [];\n    this.enums = [];\n    this.constEnums = [];\n    this.classes = [];\n    this.exportOnlyBindings = [];\n  }\n\n}\n\nclass TypeScriptScopeHandler extends ScopeHandler {\n  createScope(flags) {\n    return new TypeScriptScope(flags);\n  }\n\n  declareName(name, bindingType, pos) {\n    const scope = this.currentScope();\n\n    if (bindingType & BIND_FLAGS_TS_EXPORT_ONLY) {\n      this.maybeExportDefined(scope, name);\n      scope.exportOnlyBindings.push(name);\n      return;\n    }\n\n    super.declareName(...arguments);\n\n    if (bindingType & BIND_KIND_TYPE) {\n      if (!(bindingType & BIND_KIND_VALUE)) {\n        this.checkRedeclarationInScope(scope, name, bindingType, pos);\n        this.maybeExportDefined(scope, name);\n      }\n\n      scope.types.push(name);\n    }\n\n    if (bindingType & BIND_FLAGS_TS_ENUM) scope.enums.push(name);\n    if (bindingType & BIND_FLAGS_TS_CONST_ENUM) scope.constEnums.push(name);\n    if (bindingType & BIND_FLAGS_CLASS) scope.classes.push(name);\n  }\n\n  isRedeclaredInScope(scope, name, bindingType) {\n    if (scope.enums.indexOf(name) > -1) {\n      if (bindingType & BIND_FLAGS_TS_ENUM) {\n        const isConst = !!(bindingType & BIND_FLAGS_TS_CONST_ENUM);\n        const wasConst = scope.constEnums.indexOf(name) > -1;\n        return isConst !== wasConst;\n      }\n\n      return true;\n    }\n\n    if (bindingType & BIND_FLAGS_CLASS && scope.classes.indexOf(name) > -1) {\n      if (scope.lexical.indexOf(name) > -1) {\n        return !!(bindingType & BIND_KIND_VALUE);\n      } else {\n        return false;\n      }\n    }\n\n    if (bindingType & BIND_KIND_TYPE && scope.types.indexOf(name) > -1) {\n      return true;\n    }\n\n    return super.isRedeclaredInScope(...arguments);\n  }\n\n  checkLocalExport(id) {\n    if (this.scopeStack[0].types.indexOf(id.name) === -1 && this.scopeStack[0].exportOnlyBindings.indexOf(id.name) === -1) {\n      super.checkLocalExport(id);\n    }\n  }\n\n}\n\nconst PARAM = 0b0000,\n      PARAM_YIELD = 0b0001,\n      PARAM_AWAIT = 0b0010,\n      PARAM_RETURN = 0b0100,\n      PARAM_IN = 0b1000;\nclass ProductionParameterHandler {\n  constructor() {\n    this.stacks = [];\n  }\n\n  enter(flags) {\n    this.stacks.push(flags);\n  }\n\n  exit() {\n    this.stacks.pop();\n  }\n\n  currentFlags() {\n    return this.stacks[this.stacks.length - 1];\n  }\n\n  get hasAwait() {\n    return (this.currentFlags() & PARAM_AWAIT) > 0;\n  }\n\n  get hasYield() {\n    return (this.currentFlags() & PARAM_YIELD) > 0;\n  }\n\n  get hasReturn() {\n    return (this.currentFlags() & PARAM_RETURN) > 0;\n  }\n\n  get hasIn() {\n    return (this.currentFlags() & PARAM_IN) > 0;\n  }\n\n}\nfunction functionFlags(isAsync, isGenerator) {\n  return (isAsync ? PARAM_AWAIT : 0) | (isGenerator ? PARAM_YIELD : 0);\n}\n\nfunction nonNull(x) {\n  if (x == null) {\n    throw new Error(`Unexpected ${x} value.`);\n  }\n\n  return x;\n}\n\nfunction assert(x) {\n  if (!x) {\n    throw new Error(\"Assert fail\");\n  }\n}\n\nconst TSErrors = Object.freeze({\n  ClassMethodHasDeclare: \"Class methods cannot have the 'declare' modifier\",\n  ClassMethodHasReadonly: \"Class methods cannot have the 'readonly' modifier\",\n  ConstructorHasTypeParameters: \"Type parameters cannot appear on a constructor declaration.\",\n  DeclareClassFieldHasInitializer: \"Initializers are not allowed in ambient contexts.\",\n  DeclareFunctionHasImplementation: \"An implementation cannot be declared in ambient contexts.\",\n  DuplicateModifier: \"Duplicate modifier: '%0'\",\n  DuplicateAccessibilityModifier: \"Accessibility modifier already seen.\",\n  EmptyHeritageClauseType: \"'%0' list cannot be empty.\",\n  EmptyTypeArguments: \"Type argument list cannot be empty.\",\n  EmptyTypeParameters: \"Type parameter list cannot be empty.\",\n  ExpectedAmbientAfterExportDeclare: \"'export declare' must be followed by an ambient declaration.\",\n  IndexSignatureHasAbstract: \"Index signatures cannot have the 'abstract' modifier\",\n  IndexSignatureHasAccessibility: \"Index signatures cannot have an accessibility modifier ('%0')\",\n  IndexSignatureHasStatic: \"Index signatures cannot have the 'static' modifier\",\n  IndexSignatureHasDeclare: \"Index signatures cannot have the 'declare' modifier\",\n  InvalidModifierOnTypeMember: \"'%0' modifier cannot appear on a type member.\",\n  InvalidTupleMemberLabel: \"Tuple members must be labeled with a simple identifier.\",\n  MixedLabeledAndUnlabeledElements: \"Tuple members must all have names or all not have names.\",\n  NonAbstractClassHasAbstractMethod: \"Abstract methods can only appear within an abstract class.\",\n  NonClassMethodPropertyHasAbstractModifer: \"'abstract' modifier can only appear on a class, method, or property declaration.\",\n  OptionalTypeBeforeRequired: \"A required element cannot follow an optional element.\",\n  PatternIsOptional: \"A binding pattern parameter cannot be optional in an implementation signature.\",\n  PrivateElementHasAbstract: \"Private elements cannot have the 'abstract' modifier.\",\n  PrivateElementHasAccessibility: \"Private elements cannot have an accessibility modifier ('%0')\",\n  ReadonlyForMethodSignature: \"'readonly' modifier can only appear on a property declaration or index signature.\",\n  TypeAnnotationAfterAssign: \"Type annotations must come before default assignments, e.g. instead of `age = 25: number` use `age: number = 25`\",\n  UnexpectedParameterModifier: \"A parameter property is only allowed in a constructor implementation.\",\n  UnexpectedReadonly: \"'readonly' type modifier is only permitted on array and tuple literal types.\",\n  UnexpectedTypeAnnotation: \"Did not expect a type annotation here.\",\n  UnexpectedTypeCastInParameter: \"Unexpected type cast in parameter position.\",\n  UnsupportedImportTypeArgument: \"Argument in a type import must be a string literal\",\n  UnsupportedParameterPropertyKind: \"A parameter property may not be declared using a binding pattern.\",\n  UnsupportedSignatureParameterKind: \"Name in a signature must be an Identifier, ObjectPattern or ArrayPattern, instead got %0\"\n});\n\nfunction keywordTypeFromName(value) {\n  switch (value) {\n    case \"any\":\n      return \"TSAnyKeyword\";\n\n    case \"boolean\":\n      return \"TSBooleanKeyword\";\n\n    case \"bigint\":\n      return \"TSBigIntKeyword\";\n\n    case \"never\":\n      return \"TSNeverKeyword\";\n\n    case \"number\":\n      return \"TSNumberKeyword\";\n\n    case \"object\":\n      return \"TSObjectKeyword\";\n\n    case \"string\":\n      return \"TSStringKeyword\";\n\n    case \"symbol\":\n      return \"TSSymbolKeyword\";\n\n    case \"undefined\":\n      return \"TSUndefinedKeyword\";\n\n    case \"unknown\":\n      return \"TSUnknownKeyword\";\n\n    default:\n      return undefined;\n  }\n}\n\nfunction tsIsAccessModifier(modifier) {\n  return modifier === \"private\" || modifier === \"public\" || modifier === \"protected\";\n}\n\nvar typescript = (superClass => class extends superClass {\n  getScopeHandler() {\n    return TypeScriptScopeHandler;\n  }\n\n  tsIsIdentifier() {\n    return this.match(types.name);\n  }\n\n  tsNextTokenCanFollowModifier() {\n    this.next();\n    return (this.match(types.bracketL) || this.match(types.braceL) || this.match(types.star) || this.match(types.ellipsis) || this.match(types.hash) || this.isLiteralPropertyName()) && !this.hasPrecedingLineBreak();\n  }\n\n  tsParseModifier(allowedModifiers) {\n    if (!this.match(types.name)) {\n      return undefined;\n    }\n\n    const modifier = this.state.value;\n\n    if (allowedModifiers.indexOf(modifier) !== -1 && this.tsTryParse(this.tsNextTokenCanFollowModifier.bind(this))) {\n      return modifier;\n    }\n\n    return undefined;\n  }\n\n  tsParseModifiers(modified, allowedModifiers, disallowedModifiers, errorTemplate) {\n    for (;;) {\n      const startPos = this.state.start;\n      const modifier = this.tsParseModifier(allowedModifiers.concat(disallowedModifiers != null ? disallowedModifiers : []));\n      if (!modifier) break;\n\n      if (tsIsAccessModifier(modifier)) {\n        if (modified.accessibility) {\n          this.raise(startPos, TSErrors.DuplicateAccessibilityModifier);\n        } else {\n          modified.accessibility = modifier;\n        }\n      } else {\n        if (Object.hasOwnProperty.call(modified, modifier)) {\n          this.raise(startPos, TSErrors.DuplicateModifier, modifier);\n        }\n\n        modified[modifier] = true;\n      }\n\n      if (disallowedModifiers == null ? void 0 : disallowedModifiers.includes(modifier)) {\n        this.raise(startPos, errorTemplate, modifier);\n      }\n    }\n  }\n\n  tsIsListTerminator(kind) {\n    switch (kind) {\n      case \"EnumMembers\":\n      case \"TypeMembers\":\n        return this.match(types.braceR);\n\n      case \"HeritageClauseElement\":\n        return this.match(types.braceL);\n\n      case \"TupleElementTypes\":\n        return this.match(types.bracketR);\n\n      case \"TypeParametersOrArguments\":\n        return this.isRelational(\">\");\n    }\n\n    throw new Error(\"Unreachable\");\n  }\n\n  tsParseList(kind, parseElement) {\n    const result = [];\n\n    while (!this.tsIsListTerminator(kind)) {\n      result.push(parseElement());\n    }\n\n    return result;\n  }\n\n  tsParseDelimitedList(kind, parseElement) {\n    return nonNull(this.tsParseDelimitedListWorker(kind, parseElement, true));\n  }\n\n  tsParseDelimitedListWorker(kind, parseElement, expectSuccess) {\n    const result = [];\n\n    for (;;) {\n      if (this.tsIsListTerminator(kind)) {\n        break;\n      }\n\n      const element = parseElement();\n\n      if (element == null) {\n        return undefined;\n      }\n\n      result.push(element);\n\n      if (this.eat(types.comma)) {\n        continue;\n      }\n\n      if (this.tsIsListTerminator(kind)) {\n        break;\n      }\n\n      if (expectSuccess) {\n        this.expect(types.comma);\n      }\n\n      return undefined;\n    }\n\n    return result;\n  }\n\n  tsParseBracketedList(kind, parseElement, bracket, skipFirstToken) {\n    if (!skipFirstToken) {\n      if (bracket) {\n        this.expect(types.bracketL);\n      } else {\n        this.expectRelational(\"<\");\n      }\n    }\n\n    const result = this.tsParseDelimitedList(kind, parseElement);\n\n    if (bracket) {\n      this.expect(types.bracketR);\n    } else {\n      this.expectRelational(\">\");\n    }\n\n    return result;\n  }\n\n  tsParseImportType() {\n    const node = this.startNode();\n    this.expect(types._import);\n    this.expect(types.parenL);\n\n    if (!this.match(types.string)) {\n      this.raise(this.state.start, TSErrors.UnsupportedImportTypeArgument);\n    }\n\n    node.argument = this.parseExprAtom();\n    this.expect(types.parenR);\n\n    if (this.eat(types.dot)) {\n      node.qualifier = this.tsParseEntityName(true);\n    }\n\n    if (this.isRelational(\"<\")) {\n      node.typeParameters = this.tsParseTypeArguments();\n    }\n\n    return this.finishNode(node, \"TSImportType\");\n  }\n\n  tsParseEntityName(allowReservedWords) {\n    let entity = this.parseIdentifier();\n\n    while (this.eat(types.dot)) {\n      const node = this.startNodeAtNode(entity);\n      node.left = entity;\n      node.right = this.parseIdentifier(allowReservedWords);\n      entity = this.finishNode(node, \"TSQualifiedName\");\n    }\n\n    return entity;\n  }\n\n  tsParseTypeReference() {\n    const node = this.startNode();\n    node.typeName = this.tsParseEntityName(false);\n\n    if (!this.hasPrecedingLineBreak() && this.isRelational(\"<\")) {\n      node.typeParameters = this.tsParseTypeArguments();\n    }\n\n    return this.finishNode(node, \"TSTypeReference\");\n  }\n\n  tsParseThisTypePredicate(lhs) {\n    this.next();\n    const node = this.startNodeAtNode(lhs);\n    node.parameterName = lhs;\n    node.typeAnnotation = this.tsParseTypeAnnotation(false);\n    node.asserts = false;\n    return this.finishNode(node, \"TSTypePredicate\");\n  }\n\n  tsParseThisTypeNode() {\n    const node = this.startNode();\n    this.next();\n    return this.finishNode(node, \"TSThisType\");\n  }\n\n  tsParseTypeQuery() {\n    const node = this.startNode();\n    this.expect(types._typeof);\n\n    if (this.match(types._import)) {\n      node.exprName = this.tsParseImportType();\n    } else {\n      node.exprName = this.tsParseEntityName(true);\n    }\n\n    return this.finishNode(node, \"TSTypeQuery\");\n  }\n\n  tsParseTypeParameter() {\n    const node = this.startNode();\n    node.name = this.parseIdentifierName(node.start);\n    node.constraint = this.tsEatThenParseType(types._extends);\n    node.default = this.tsEatThenParseType(types.eq);\n    return this.finishNode(node, \"TSTypeParameter\");\n  }\n\n  tsTryParseTypeParameters() {\n    if (this.isRelational(\"<\")) {\n      return this.tsParseTypeParameters();\n    }\n  }\n\n  tsParseTypeParameters() {\n    const node = this.startNode();\n\n    if (this.isRelational(\"<\") || this.match(types.jsxTagStart)) {\n      this.next();\n    } else {\n      this.unexpected();\n    }\n\n    node.params = this.tsParseBracketedList(\"TypeParametersOrArguments\", this.tsParseTypeParameter.bind(this), false, true);\n\n    if (node.params.length === 0) {\n      this.raise(node.start, TSErrors.EmptyTypeParameters);\n    }\n\n    return this.finishNode(node, \"TSTypeParameterDeclaration\");\n  }\n\n  tsTryNextParseConstantContext() {\n    if (this.lookahead().type === types._const) {\n      this.next();\n      return this.tsParseTypeReference();\n    }\n\n    return null;\n  }\n\n  tsFillSignature(returnToken, signature) {\n    const returnTokenRequired = returnToken === types.arrow;\n    signature.typeParameters = this.tsTryParseTypeParameters();\n    this.expect(types.parenL);\n    signature.parameters = this.tsParseBindingListForSignature();\n\n    if (returnTokenRequired) {\n      signature.typeAnnotation = this.tsParseTypeOrTypePredicateAnnotation(returnToken);\n    } else if (this.match(returnToken)) {\n      signature.typeAnnotation = this.tsParseTypeOrTypePredicateAnnotation(returnToken);\n    }\n  }\n\n  tsParseBindingListForSignature() {\n    return this.parseBindingList(types.parenR, 41).map(pattern => {\n      if (pattern.type !== \"Identifier\" && pattern.type !== \"RestElement\" && pattern.type !== \"ObjectPattern\" && pattern.type !== \"ArrayPattern\") {\n        this.raise(pattern.start, TSErrors.UnsupportedSignatureParameterKind, pattern.type);\n      }\n\n      return pattern;\n    });\n  }\n\n  tsParseTypeMemberSemicolon() {\n    if (!this.eat(types.comma)) {\n      this.semicolon();\n    }\n  }\n\n  tsParseSignatureMember(kind, node) {\n    this.tsFillSignature(types.colon, node);\n    this.tsParseTypeMemberSemicolon();\n    return this.finishNode(node, kind);\n  }\n\n  tsIsUnambiguouslyIndexSignature() {\n    this.next();\n    return this.eat(types.name) && this.match(types.colon);\n  }\n\n  tsTryParseIndexSignature(node) {\n    if (!(this.match(types.bracketL) && this.tsLookAhead(this.tsIsUnambiguouslyIndexSignature.bind(this)))) {\n      return undefined;\n    }\n\n    this.expect(types.bracketL);\n    const id = this.parseIdentifier();\n    id.typeAnnotation = this.tsParseTypeAnnotation();\n    this.resetEndLocation(id);\n    this.expect(types.bracketR);\n    node.parameters = [id];\n    const type = this.tsTryParseTypeAnnotation();\n    if (type) node.typeAnnotation = type;\n    this.tsParseTypeMemberSemicolon();\n    return this.finishNode(node, \"TSIndexSignature\");\n  }\n\n  tsParsePropertyOrMethodSignature(node, readonly) {\n    if (this.eat(types.question)) node.optional = true;\n    const nodeAny = node;\n\n    if (this.match(types.parenL) || this.isRelational(\"<\")) {\n      if (readonly) {\n        this.raise(node.start, TSErrors.ReadonlyForMethodSignature);\n      }\n\n      const method = nodeAny;\n      this.tsFillSignature(types.colon, method);\n      this.tsParseTypeMemberSemicolon();\n      return this.finishNode(method, \"TSMethodSignature\");\n    } else {\n      const property = nodeAny;\n      if (readonly) property.readonly = true;\n      const type = this.tsTryParseTypeAnnotation();\n      if (type) property.typeAnnotation = type;\n      this.tsParseTypeMemberSemicolon();\n      return this.finishNode(property, \"TSPropertySignature\");\n    }\n  }\n\n  tsParseTypeMember() {\n    const node = this.startNode();\n\n    if (this.match(types.parenL) || this.isRelational(\"<\")) {\n      return this.tsParseSignatureMember(\"TSCallSignatureDeclaration\", node);\n    }\n\n    if (this.match(types._new)) {\n      const id = this.startNode();\n      this.next();\n\n      if (this.match(types.parenL) || this.isRelational(\"<\")) {\n        return this.tsParseSignatureMember(\"TSConstructSignatureDeclaration\", node);\n      } else {\n        node.key = this.createIdentifier(id, \"new\");\n        return this.tsParsePropertyOrMethodSignature(node, false);\n      }\n    }\n\n    this.tsParseModifiers(node, [\"readonly\"], [\"declare\", \"abstract\", \"private\", \"protected\", \"public\", \"static\"], TSErrors.InvalidModifierOnTypeMember);\n    const idx = this.tsTryParseIndexSignature(node);\n\n    if (idx) {\n      return idx;\n    }\n\n    this.parsePropertyName(node, false);\n    return this.tsParsePropertyOrMethodSignature(node, !!node.readonly);\n  }\n\n  tsParseTypeLiteral() {\n    const node = this.startNode();\n    node.members = this.tsParseObjectTypeMembers();\n    return this.finishNode(node, \"TSTypeLiteral\");\n  }\n\n  tsParseObjectTypeMembers() {\n    this.expect(types.braceL);\n    const members = this.tsParseList(\"TypeMembers\", this.tsParseTypeMember.bind(this));\n    this.expect(types.braceR);\n    return members;\n  }\n\n  tsIsStartOfMappedType() {\n    this.next();\n\n    if (this.eat(types.plusMin)) {\n      return this.isContextual(\"readonly\");\n    }\n\n    if (this.isContextual(\"readonly\")) {\n      this.next();\n    }\n\n    if (!this.match(types.bracketL)) {\n      return false;\n    }\n\n    this.next();\n\n    if (!this.tsIsIdentifier()) {\n      return false;\n    }\n\n    this.next();\n    return this.match(types._in);\n  }\n\n  tsParseMappedTypeParameter() {\n    const node = this.startNode();\n    node.name = this.parseIdentifierName(node.start);\n    node.constraint = this.tsExpectThenParseType(types._in);\n    return this.finishNode(node, \"TSTypeParameter\");\n  }\n\n  tsParseMappedType() {\n    const node = this.startNode();\n    this.expect(types.braceL);\n\n    if (this.match(types.plusMin)) {\n      node.readonly = this.state.value;\n      this.next();\n      this.expectContextual(\"readonly\");\n    } else if (this.eatContextual(\"readonly\")) {\n      node.readonly = true;\n    }\n\n    this.expect(types.bracketL);\n    node.typeParameter = this.tsParseMappedTypeParameter();\n    node.nameType = this.eatContextual(\"as\") ? this.tsParseType() : null;\n    this.expect(types.bracketR);\n\n    if (this.match(types.plusMin)) {\n      node.optional = this.state.value;\n      this.next();\n      this.expect(types.question);\n    } else if (this.eat(types.question)) {\n      node.optional = true;\n    }\n\n    node.typeAnnotation = this.tsTryParseType();\n    this.semicolon();\n    this.expect(types.braceR);\n    return this.finishNode(node, \"TSMappedType\");\n  }\n\n  tsParseTupleType() {\n    const node = this.startNode();\n    node.elementTypes = this.tsParseBracketedList(\"TupleElementTypes\", this.tsParseTupleElementType.bind(this), true, false);\n    let seenOptionalElement = false;\n    let labeledElements = null;\n    node.elementTypes.forEach(elementNode => {\n      var _labeledElements;\n\n      let {\n        type\n      } = elementNode;\n\n      if (seenOptionalElement && type !== \"TSRestType\" && type !== \"TSOptionalType\" && !(type === \"TSNamedTupleMember\" && elementNode.optional)) {\n        this.raise(elementNode.start, TSErrors.OptionalTypeBeforeRequired);\n      }\n\n      seenOptionalElement = seenOptionalElement || type === \"TSNamedTupleMember\" && elementNode.optional || type === \"TSOptionalType\";\n\n      if (type === \"TSRestType\") {\n        elementNode = elementNode.typeAnnotation;\n        type = elementNode.type;\n      }\n\n      const isLabeled = type === \"TSNamedTupleMember\";\n      labeledElements = (_labeledElements = labeledElements) != null ? _labeledElements : isLabeled;\n\n      if (labeledElements !== isLabeled) {\n        this.raise(elementNode.start, TSErrors.MixedLabeledAndUnlabeledElements);\n      }\n    });\n    return this.finishNode(node, \"TSTupleType\");\n  }\n\n  tsParseTupleElementType() {\n    const {\n      start: startPos,\n      startLoc\n    } = this.state;\n    const rest = this.eat(types.ellipsis);\n    let type = this.tsParseType();\n    const optional = this.eat(types.question);\n    const labeled = this.eat(types.colon);\n\n    if (labeled) {\n      const labeledNode = this.startNodeAtNode(type);\n      labeledNode.optional = optional;\n\n      if (type.type === \"TSTypeReference\" && !type.typeParameters && type.typeName.type === \"Identifier\") {\n        labeledNode.label = type.typeName;\n      } else {\n        this.raise(type.start, TSErrors.InvalidTupleMemberLabel);\n        labeledNode.label = type;\n      }\n\n      labeledNode.elementType = this.tsParseType();\n      type = this.finishNode(labeledNode, \"TSNamedTupleMember\");\n    } else if (optional) {\n      const optionalTypeNode = this.startNodeAtNode(type);\n      optionalTypeNode.typeAnnotation = type;\n      type = this.finishNode(optionalTypeNode, \"TSOptionalType\");\n    }\n\n    if (rest) {\n      const restNode = this.startNodeAt(startPos, startLoc);\n      restNode.typeAnnotation = type;\n      type = this.finishNode(restNode, \"TSRestType\");\n    }\n\n    return type;\n  }\n\n  tsParseParenthesizedType() {\n    const node = this.startNode();\n    this.expect(types.parenL);\n    node.typeAnnotation = this.tsParseType();\n    this.expect(types.parenR);\n    return this.finishNode(node, \"TSParenthesizedType\");\n  }\n\n  tsParseFunctionOrConstructorType(type, abstract) {\n    const node = this.startNode();\n\n    if (type === \"TSConstructorType\") {\n      node.abstract = !!abstract;\n      if (abstract) this.next();\n      this.next();\n    }\n\n    this.tsFillSignature(types.arrow, node);\n    return this.finishNode(node, type);\n  }\n\n  tsParseLiteralTypeNode() {\n    const node = this.startNode();\n\n    node.literal = (() => {\n      switch (this.state.type) {\n        case types.num:\n        case types.bigint:\n        case types.string:\n        case types._true:\n        case types._false:\n          return this.parseExprAtom();\n\n        default:\n          throw this.unexpected();\n      }\n    })();\n\n    return this.finishNode(node, \"TSLiteralType\");\n  }\n\n  tsParseTemplateLiteralType() {\n    const node = this.startNode();\n    node.literal = this.parseTemplate(false);\n    return this.finishNode(node, \"TSLiteralType\");\n  }\n\n  parseTemplateSubstitution() {\n    if (this.state.inType) return this.tsParseType();\n    return super.parseTemplateSubstitution();\n  }\n\n  tsParseThisTypeOrThisTypePredicate() {\n    const thisKeyword = this.tsParseThisTypeNode();\n\n    if (this.isContextual(\"is\") && !this.hasPrecedingLineBreak()) {\n      return this.tsParseThisTypePredicate(thisKeyword);\n    } else {\n      return thisKeyword;\n    }\n  }\n\n  tsParseNonArrayType() {\n    switch (this.state.type) {\n      case types.name:\n      case types._void:\n      case types._null:\n        {\n          const type = this.match(types._void) ? \"TSVoidKeyword\" : this.match(types._null) ? \"TSNullKeyword\" : keywordTypeFromName(this.state.value);\n\n          if (type !== undefined && this.lookaheadCharCode() !== 46) {\n            const node = this.startNode();\n            this.next();\n            return this.finishNode(node, type);\n          }\n\n          return this.tsParseTypeReference();\n        }\n\n      case types.string:\n      case types.num:\n      case types.bigint:\n      case types._true:\n      case types._false:\n        return this.tsParseLiteralTypeNode();\n\n      case types.plusMin:\n        if (this.state.value === \"-\") {\n          const node = this.startNode();\n          const nextToken = this.lookahead();\n\n          if (nextToken.type !== types.num && nextToken.type !== types.bigint) {\n            throw this.unexpected();\n          }\n\n          node.literal = this.parseMaybeUnary();\n          return this.finishNode(node, \"TSLiteralType\");\n        }\n\n        break;\n\n      case types._this:\n        return this.tsParseThisTypeOrThisTypePredicate();\n\n      case types._typeof:\n        return this.tsParseTypeQuery();\n\n      case types._import:\n        return this.tsParseImportType();\n\n      case types.braceL:\n        return this.tsLookAhead(this.tsIsStartOfMappedType.bind(this)) ? this.tsParseMappedType() : this.tsParseTypeLiteral();\n\n      case types.bracketL:\n        return this.tsParseTupleType();\n\n      case types.parenL:\n        return this.tsParseParenthesizedType();\n\n      case types.backQuote:\n        return this.tsParseTemplateLiteralType();\n    }\n\n    throw this.unexpected();\n  }\n\n  tsParseArrayTypeOrHigher() {\n    let type = this.tsParseNonArrayType();\n\n    while (!this.hasPrecedingLineBreak() && this.eat(types.bracketL)) {\n      if (this.match(types.bracketR)) {\n        const node = this.startNodeAtNode(type);\n        node.elementType = type;\n        this.expect(types.bracketR);\n        type = this.finishNode(node, \"TSArrayType\");\n      } else {\n        const node = this.startNodeAtNode(type);\n        node.objectType = type;\n        node.indexType = this.tsParseType();\n        this.expect(types.bracketR);\n        type = this.finishNode(node, \"TSIndexedAccessType\");\n      }\n    }\n\n    return type;\n  }\n\n  tsParseTypeOperator(operator) {\n    const node = this.startNode();\n    this.expectContextual(operator);\n    node.operator = operator;\n    node.typeAnnotation = this.tsParseTypeOperatorOrHigher();\n\n    if (operator === \"readonly\") {\n      this.tsCheckTypeAnnotationForReadOnly(node);\n    }\n\n    return this.finishNode(node, \"TSTypeOperator\");\n  }\n\n  tsCheckTypeAnnotationForReadOnly(node) {\n    switch (node.typeAnnotation.type) {\n      case \"TSTupleType\":\n      case \"TSArrayType\":\n        return;\n\n      default:\n        this.raise(node.start, TSErrors.UnexpectedReadonly);\n    }\n  }\n\n  tsParseInferType() {\n    const node = this.startNode();\n    this.expectContextual(\"infer\");\n    const typeParameter = this.startNode();\n    typeParameter.name = this.parseIdentifierName(typeParameter.start);\n    node.typeParameter = this.finishNode(typeParameter, \"TSTypeParameter\");\n    return this.finishNode(node, \"TSInferType\");\n  }\n\n  tsParseTypeOperatorOrHigher() {\n    const operator = [\"keyof\", \"unique\", \"readonly\"].find(kw => this.isContextual(kw));\n    return operator ? this.tsParseTypeOperator(operator) : this.isContextual(\"infer\") ? this.tsParseInferType() : this.tsParseArrayTypeOrHigher();\n  }\n\n  tsParseUnionOrIntersectionType(kind, parseConstituentType, operator) {\n    const node = this.startNode();\n    const hasLeadingOperator = this.eat(operator);\n    const types = [];\n\n    do {\n      types.push(parseConstituentType());\n    } while (this.eat(operator));\n\n    if (types.length === 1 && !hasLeadingOperator) {\n      return types[0];\n    }\n\n    node.types = types;\n    return this.finishNode(node, kind);\n  }\n\n  tsParseIntersectionTypeOrHigher() {\n    return this.tsParseUnionOrIntersectionType(\"TSIntersectionType\", this.tsParseTypeOperatorOrHigher.bind(this), types.bitwiseAND);\n  }\n\n  tsParseUnionTypeOrHigher() {\n    return this.tsParseUnionOrIntersectionType(\"TSUnionType\", this.tsParseIntersectionTypeOrHigher.bind(this), types.bitwiseOR);\n  }\n\n  tsIsStartOfFunctionType() {\n    if (this.isRelational(\"<\")) {\n      return true;\n    }\n\n    return this.match(types.parenL) && this.tsLookAhead(this.tsIsUnambiguouslyStartOfFunctionType.bind(this));\n  }\n\n  tsSkipParameterStart() {\n    if (this.match(types.name) || this.match(types._this)) {\n      this.next();\n      return true;\n    }\n\n    if (this.match(types.braceL)) {\n      let braceStackCounter = 1;\n      this.next();\n\n      while (braceStackCounter > 0) {\n        if (this.match(types.braceL)) {\n          ++braceStackCounter;\n        } else if (this.match(types.braceR)) {\n          --braceStackCounter;\n        }\n\n        this.next();\n      }\n\n      return true;\n    }\n\n    if (this.match(types.bracketL)) {\n      let braceStackCounter = 1;\n      this.next();\n\n      while (braceStackCounter > 0) {\n        if (this.match(types.bracketL)) {\n          ++braceStackCounter;\n        } else if (this.match(types.bracketR)) {\n          --braceStackCounter;\n        }\n\n        this.next();\n      }\n\n      return true;\n    }\n\n    return false;\n  }\n\n  tsIsUnambiguouslyStartOfFunctionType() {\n    this.next();\n\n    if (this.match(types.parenR) || this.match(types.ellipsis)) {\n      return true;\n    }\n\n    if (this.tsSkipParameterStart()) {\n      if (this.match(types.colon) || this.match(types.comma) || this.match(types.question) || this.match(types.eq)) {\n        return true;\n      }\n\n      if (this.match(types.parenR)) {\n        this.next();\n\n        if (this.match(types.arrow)) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  }\n\n  tsParseTypeOrTypePredicateAnnotation(returnToken) {\n    return this.tsInType(() => {\n      const t = this.startNode();\n      this.expect(returnToken);\n      const node = this.startNode();\n      const asserts = !!this.tsTryParse(this.tsParseTypePredicateAsserts.bind(this));\n\n      if (asserts && this.match(types._this)) {\n        let thisTypePredicate = this.tsParseThisTypeOrThisTypePredicate();\n\n        if (thisTypePredicate.type === \"TSThisType\") {\n          node.parameterName = thisTypePredicate;\n          node.asserts = true;\n          thisTypePredicate = this.finishNode(node, \"TSTypePredicate\");\n        } else {\n          this.resetStartLocationFromNode(thisTypePredicate, node);\n          thisTypePredicate.asserts = true;\n        }\n\n        t.typeAnnotation = thisTypePredicate;\n        return this.finishNode(t, \"TSTypeAnnotation\");\n      }\n\n      const typePredicateVariable = this.tsIsIdentifier() && this.tsTryParse(this.tsParseTypePredicatePrefix.bind(this));\n\n      if (!typePredicateVariable) {\n        if (!asserts) {\n          return this.tsParseTypeAnnotation(false, t);\n        }\n\n        node.parameterName = this.parseIdentifier();\n        node.asserts = asserts;\n        t.typeAnnotation = this.finishNode(node, \"TSTypePredicate\");\n        return this.finishNode(t, \"TSTypeAnnotation\");\n      }\n\n      const type = this.tsParseTypeAnnotation(false);\n      node.parameterName = typePredicateVariable;\n      node.typeAnnotation = type;\n      node.asserts = asserts;\n      t.typeAnnotation = this.finishNode(node, \"TSTypePredicate\");\n      return this.finishNode(t, \"TSTypeAnnotation\");\n    });\n  }\n\n  tsTryParseTypeOrTypePredicateAnnotation() {\n    return this.match(types.colon) ? this.tsParseTypeOrTypePredicateAnnotation(types.colon) : undefined;\n  }\n\n  tsTryParseTypeAnnotation() {\n    return this.match(types.colon) ? this.tsParseTypeAnnotation() : undefined;\n  }\n\n  tsTryParseType() {\n    return this.tsEatThenParseType(types.colon);\n  }\n\n  tsParseTypePredicatePrefix() {\n    const id = this.parseIdentifier();\n\n    if (this.isContextual(\"is\") && !this.hasPrecedingLineBreak()) {\n      this.next();\n      return id;\n    }\n  }\n\n  tsParseTypePredicateAsserts() {\n    if (!this.match(types.name) || this.state.value !== \"asserts\" || this.hasPrecedingLineBreak()) {\n      return false;\n    }\n\n    const containsEsc = this.state.containsEsc;\n    this.next();\n\n    if (!this.match(types.name) && !this.match(types._this)) {\n      return false;\n    }\n\n    if (containsEsc) {\n      this.raise(this.state.lastTokStart, ErrorMessages.InvalidEscapedReservedWord, \"asserts\");\n    }\n\n    return true;\n  }\n\n  tsParseTypeAnnotation(eatColon = true, t = this.startNode()) {\n    this.tsInType(() => {\n      if (eatColon) this.expect(types.colon);\n      t.typeAnnotation = this.tsParseType();\n    });\n    return this.finishNode(t, \"TSTypeAnnotation\");\n  }\n\n  tsParseType() {\n    assert(this.state.inType);\n    const type = this.tsParseNonConditionalType();\n\n    if (this.hasPrecedingLineBreak() || !this.eat(types._extends)) {\n      return type;\n    }\n\n    const node = this.startNodeAtNode(type);\n    node.checkType = type;\n    node.extendsType = this.tsParseNonConditionalType();\n    this.expect(types.question);\n    node.trueType = this.tsParseType();\n    this.expect(types.colon);\n    node.falseType = this.tsParseType();\n    return this.finishNode(node, \"TSConditionalType\");\n  }\n\n  isAbstractConstructorSignature() {\n    return this.isContextual(\"abstract\") && this.lookahead().type === types._new;\n  }\n\n  tsParseNonConditionalType() {\n    if (this.tsIsStartOfFunctionType()) {\n      return this.tsParseFunctionOrConstructorType(\"TSFunctionType\");\n    }\n\n    if (this.match(types._new)) {\n      return this.tsParseFunctionOrConstructorType(\"TSConstructorType\");\n    } else if (this.isAbstractConstructorSignature()) {\n      return this.tsParseFunctionOrConstructorType(\"TSConstructorType\", true);\n    }\n\n    return this.tsParseUnionTypeOrHigher();\n  }\n\n  tsParseTypeAssertion() {\n    const node = this.startNode();\n\n    const _const = this.tsTryNextParseConstantContext();\n\n    node.typeAnnotation = _const || this.tsNextThenParseType();\n    this.expectRelational(\">\");\n    node.expression = this.parseMaybeUnary();\n    return this.finishNode(node, \"TSTypeAssertion\");\n  }\n\n  tsParseHeritageClause(descriptor) {\n    const originalStart = this.state.start;\n    const delimitedList = this.tsParseDelimitedList(\"HeritageClauseElement\", this.tsParseExpressionWithTypeArguments.bind(this));\n\n    if (!delimitedList.length) {\n      this.raise(originalStart, TSErrors.EmptyHeritageClauseType, descriptor);\n    }\n\n    return delimitedList;\n  }\n\n  tsParseExpressionWithTypeArguments() {\n    const node = this.startNode();\n    node.expression = this.tsParseEntityName(false);\n\n    if (this.isRelational(\"<\")) {\n      node.typeParameters = this.tsParseTypeArguments();\n    }\n\n    return this.finishNode(node, \"TSExpressionWithTypeArguments\");\n  }\n\n  tsParseInterfaceDeclaration(node) {\n    node.id = this.parseIdentifier();\n    this.checkLVal(node.id, \"typescript interface declaration\", BIND_TS_INTERFACE);\n    node.typeParameters = this.tsTryParseTypeParameters();\n\n    if (this.eat(types._extends)) {\n      node.extends = this.tsParseHeritageClause(\"extends\");\n    }\n\n    const body = this.startNode();\n    body.body = this.tsInType(this.tsParseObjectTypeMembers.bind(this));\n    node.body = this.finishNode(body, \"TSInterfaceBody\");\n    return this.finishNode(node, \"TSInterfaceDeclaration\");\n  }\n\n  tsParseTypeAliasDeclaration(node) {\n    node.id = this.parseIdentifier();\n    this.checkLVal(node.id, \"typescript type alias\", BIND_TS_TYPE);\n    node.typeParameters = this.tsTryParseTypeParameters();\n    node.typeAnnotation = this.tsInType(() => {\n      this.expect(types.eq);\n\n      if (this.isContextual(\"intrinsic\") && this.lookahead().type !== types.dot) {\n        const node = this.startNode();\n        this.next();\n        return this.finishNode(node, \"TSIntrinsicKeyword\");\n      }\n\n      return this.tsParseType();\n    });\n    this.semicolon();\n    return this.finishNode(node, \"TSTypeAliasDeclaration\");\n  }\n\n  tsInNoContext(cb) {\n    const oldContext = this.state.context;\n    this.state.context = [oldContext[0]];\n\n    try {\n      return cb();\n    } finally {\n      this.state.context = oldContext;\n    }\n  }\n\n  tsInType(cb) {\n    const oldInType = this.state.inType;\n    this.state.inType = true;\n\n    try {\n      return cb();\n    } finally {\n      this.state.inType = oldInType;\n    }\n  }\n\n  tsEatThenParseType(token) {\n    return !this.match(token) ? undefined : this.tsNextThenParseType();\n  }\n\n  tsExpectThenParseType(token) {\n    return this.tsDoThenParseType(() => this.expect(token));\n  }\n\n  tsNextThenParseType() {\n    return this.tsDoThenParseType(() => this.next());\n  }\n\n  tsDoThenParseType(cb) {\n    return this.tsInType(() => {\n      cb();\n      return this.tsParseType();\n    });\n  }\n\n  tsParseEnumMember() {\n    const node = this.startNode();\n    node.id = this.match(types.string) ? this.parseExprAtom() : this.parseIdentifier(true);\n\n    if (this.eat(types.eq)) {\n      node.initializer = this.parseMaybeAssignAllowIn();\n    }\n\n    return this.finishNode(node, \"TSEnumMember\");\n  }\n\n  tsParseEnumDeclaration(node, isConst) {\n    if (isConst) node.const = true;\n    node.id = this.parseIdentifier();\n    this.checkLVal(node.id, \"typescript enum declaration\", isConst ? BIND_TS_CONST_ENUM : BIND_TS_ENUM);\n    this.expect(types.braceL);\n    node.members = this.tsParseDelimitedList(\"EnumMembers\", this.tsParseEnumMember.bind(this));\n    this.expect(types.braceR);\n    return this.finishNode(node, \"TSEnumDeclaration\");\n  }\n\n  tsParseModuleBlock() {\n    const node = this.startNode();\n    this.scope.enter(SCOPE_OTHER);\n    this.expect(types.braceL);\n    this.parseBlockOrModuleBlockBody(node.body = [], undefined, true, types.braceR);\n    this.scope.exit();\n    return this.finishNode(node, \"TSModuleBlock\");\n  }\n\n  tsParseModuleOrNamespaceDeclaration(node, nested = false) {\n    node.id = this.parseIdentifier();\n\n    if (!nested) {\n      this.checkLVal(node.id, \"module or namespace declaration\", BIND_TS_NAMESPACE);\n    }\n\n    if (this.eat(types.dot)) {\n      const inner = this.startNode();\n      this.tsParseModuleOrNamespaceDeclaration(inner, true);\n      node.body = inner;\n    } else {\n      this.scope.enter(SCOPE_TS_MODULE);\n      this.prodParam.enter(PARAM);\n      node.body = this.tsParseModuleBlock();\n      this.prodParam.exit();\n      this.scope.exit();\n    }\n\n    return this.finishNode(node, \"TSModuleDeclaration\");\n  }\n\n  tsParseAmbientExternalModuleDeclaration(node) {\n    if (this.isContextual(\"global\")) {\n      node.global = true;\n      node.id = this.parseIdentifier();\n    } else if (this.match(types.string)) {\n      node.id = this.parseExprAtom();\n    } else {\n      this.unexpected();\n    }\n\n    if (this.match(types.braceL)) {\n      this.scope.enter(SCOPE_TS_MODULE);\n      this.prodParam.enter(PARAM);\n      node.body = this.tsParseModuleBlock();\n      this.prodParam.exit();\n      this.scope.exit();\n    } else {\n      this.semicolon();\n    }\n\n    return this.finishNode(node, \"TSModuleDeclaration\");\n  }\n\n  tsParseImportEqualsDeclaration(node, isExport) {\n    node.isExport = isExport || false;\n    node.id = this.parseIdentifier();\n    this.checkLVal(node.id, \"import equals declaration\", BIND_LEXICAL);\n    this.expect(types.eq);\n    node.moduleReference = this.tsParseModuleReference();\n    this.semicolon();\n    return this.finishNode(node, \"TSImportEqualsDeclaration\");\n  }\n\n  tsIsExternalModuleReference() {\n    return this.isContextual(\"require\") && this.lookaheadCharCode() === 40;\n  }\n\n  tsParseModuleReference() {\n    return this.tsIsExternalModuleReference() ? this.tsParseExternalModuleReference() : this.tsParseEntityName(false);\n  }\n\n  tsParseExternalModuleReference() {\n    const node = this.startNode();\n    this.expectContextual(\"require\");\n    this.expect(types.parenL);\n\n    if (!this.match(types.string)) {\n      throw this.unexpected();\n    }\n\n    node.expression = this.parseExprAtom();\n    this.expect(types.parenR);\n    return this.finishNode(node, \"TSExternalModuleReference\");\n  }\n\n  tsLookAhead(f) {\n    const state = this.state.clone();\n    const res = f();\n    this.state = state;\n    return res;\n  }\n\n  tsTryParseAndCatch(f) {\n    const result = this.tryParse(abort => f() || abort());\n    if (result.aborted || !result.node) return undefined;\n    if (result.error) this.state = result.failState;\n    return result.node;\n  }\n\n  tsTryParse(f) {\n    const state = this.state.clone();\n    const result = f();\n\n    if (result !== undefined && result !== false) {\n      return result;\n    } else {\n      this.state = state;\n      return undefined;\n    }\n  }\n\n  tsTryParseDeclare(nany) {\n    if (this.isLineTerminator()) {\n      return;\n    }\n\n    let starttype = this.state.type;\n    let kind;\n\n    if (this.isContextual(\"let\")) {\n      starttype = types._var;\n      kind = \"let\";\n    }\n\n    return this.tsInDeclareContext(() => {\n      switch (starttype) {\n        case types._function:\n          nany.declare = true;\n          return this.parseFunctionStatement(nany, false, true);\n\n        case types._class:\n          nany.declare = true;\n          return this.parseClass(nany, true, false);\n\n        case types._const:\n          if (this.match(types._const) && this.isLookaheadContextual(\"enum\")) {\n            this.expect(types._const);\n            this.expectContextual(\"enum\");\n            return this.tsParseEnumDeclaration(nany, true);\n          }\n\n        case types._var:\n          kind = kind || this.state.value;\n          return this.parseVarStatement(nany, kind);\n\n        case types.name:\n          {\n            const value = this.state.value;\n\n            if (value === \"global\") {\n              return this.tsParseAmbientExternalModuleDeclaration(nany);\n            } else {\n              return this.tsParseDeclaration(nany, value, true);\n            }\n          }\n      }\n    });\n  }\n\n  tsTryParseExportDeclaration() {\n    return this.tsParseDeclaration(this.startNode(), this.state.value, true);\n  }\n\n  tsParseExpressionStatement(node, expr) {\n    switch (expr.name) {\n      case \"declare\":\n        {\n          const declaration = this.tsTryParseDeclare(node);\n\n          if (declaration) {\n            declaration.declare = true;\n            return declaration;\n          }\n\n          break;\n        }\n\n      case \"global\":\n        if (this.match(types.braceL)) {\n          this.scope.enter(SCOPE_TS_MODULE);\n          this.prodParam.enter(PARAM);\n          const mod = node;\n          mod.global = true;\n          mod.id = expr;\n          mod.body = this.tsParseModuleBlock();\n          this.scope.exit();\n          this.prodParam.exit();\n          return this.finishNode(mod, \"TSModuleDeclaration\");\n        }\n\n        break;\n\n      default:\n        return this.tsParseDeclaration(node, expr.name, false);\n    }\n  }\n\n  tsParseDeclaration(node, value, next) {\n    switch (value) {\n      case \"abstract\":\n        if (this.tsCheckLineTerminator(next) && (this.match(types._class) || this.match(types.name))) {\n          return this.tsParseAbstractDeclaration(node);\n        }\n\n        break;\n\n      case \"enum\":\n        if (next || this.match(types.name)) {\n          if (next) this.next();\n          return this.tsParseEnumDeclaration(node, false);\n        }\n\n        break;\n\n      case \"interface\":\n        if (this.tsCheckLineTerminator(next) && this.match(types.name)) {\n          return this.tsParseInterfaceDeclaration(node);\n        }\n\n        break;\n\n      case \"module\":\n        if (this.tsCheckLineTerminator(next)) {\n          if (this.match(types.string)) {\n            return this.tsParseAmbientExternalModuleDeclaration(node);\n          } else if (this.match(types.name)) {\n            return this.tsParseModuleOrNamespaceDeclaration(node);\n          }\n        }\n\n        break;\n\n      case \"namespace\":\n        if (this.tsCheckLineTerminator(next) && this.match(types.name)) {\n          return this.tsParseModuleOrNamespaceDeclaration(node);\n        }\n\n        break;\n\n      case \"type\":\n        if (this.tsCheckLineTerminator(next) && this.match(types.name)) {\n          return this.tsParseTypeAliasDeclaration(node);\n        }\n\n        break;\n    }\n  }\n\n  tsCheckLineTerminator(next) {\n    if (next) {\n      if (this.hasFollowingLineBreak()) return false;\n      this.next();\n      return true;\n    }\n\n    return !this.isLineTerminator();\n  }\n\n  tsTryParseGenericAsyncArrowFunction(startPos, startLoc) {\n    if (!this.isRelational(\"<\")) {\n      return undefined;\n    }\n\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n    this.state.maybeInArrowParameters = true;\n    const res = this.tsTryParseAndCatch(() => {\n      const node = this.startNodeAt(startPos, startLoc);\n      node.typeParameters = this.tsParseTypeParameters();\n      super.parseFunctionParams(node);\n      node.returnType = this.tsTryParseTypeOrTypePredicateAnnotation();\n      this.expect(types.arrow);\n      return node;\n    });\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n\n    if (!res) {\n      return undefined;\n    }\n\n    return this.parseArrowExpression(res, null, true);\n  }\n\n  tsParseTypeArguments() {\n    const node = this.startNode();\n    node.params = this.tsInType(() => this.tsInNoContext(() => {\n      this.expectRelational(\"<\");\n      return this.tsParseDelimitedList(\"TypeParametersOrArguments\", this.tsParseType.bind(this));\n    }));\n\n    if (node.params.length === 0) {\n      this.raise(node.start, TSErrors.EmptyTypeArguments);\n    }\n\n    this.state.exprAllowed = false;\n    this.expectRelational(\">\");\n    return this.finishNode(node, \"TSTypeParameterInstantiation\");\n  }\n\n  tsIsDeclarationStart() {\n    if (this.match(types.name)) {\n      switch (this.state.value) {\n        case \"abstract\":\n        case \"declare\":\n        case \"enum\":\n        case \"interface\":\n        case \"module\":\n        case \"namespace\":\n        case \"type\":\n          return true;\n      }\n    }\n\n    return false;\n  }\n\n  isExportDefaultSpecifier() {\n    if (this.tsIsDeclarationStart()) return false;\n    return super.isExportDefaultSpecifier();\n  }\n\n  parseAssignableListItem(allowModifiers, decorators) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    let accessibility;\n    let readonly = false;\n\n    if (allowModifiers !== undefined) {\n      accessibility = this.parseAccessModifier();\n      readonly = !!this.tsParseModifier([\"readonly\"]);\n\n      if (allowModifiers === false && (accessibility || readonly)) {\n        this.raise(startPos, TSErrors.UnexpectedParameterModifier);\n      }\n    }\n\n    const left = this.parseMaybeDefault();\n    this.parseAssignableListItemTypes(left);\n    const elt = this.parseMaybeDefault(left.start, left.loc.start, left);\n\n    if (accessibility || readonly) {\n      const pp = this.startNodeAt(startPos, startLoc);\n\n      if (decorators.length) {\n        pp.decorators = decorators;\n      }\n\n      if (accessibility) pp.accessibility = accessibility;\n      if (readonly) pp.readonly = readonly;\n\n      if (elt.type !== \"Identifier\" && elt.type !== \"AssignmentPattern\") {\n        this.raise(pp.start, TSErrors.UnsupportedParameterPropertyKind);\n      }\n\n      pp.parameter = elt;\n      return this.finishNode(pp, \"TSParameterProperty\");\n    }\n\n    if (decorators.length) {\n      left.decorators = decorators;\n    }\n\n    return elt;\n  }\n\n  parseFunctionBodyAndFinish(node, type, isMethod = false) {\n    if (this.match(types.colon)) {\n      node.returnType = this.tsParseTypeOrTypePredicateAnnotation(types.colon);\n    }\n\n    const bodilessType = type === \"FunctionDeclaration\" ? \"TSDeclareFunction\" : type === \"ClassMethod\" ? \"TSDeclareMethod\" : undefined;\n\n    if (bodilessType && !this.match(types.braceL) && this.isLineTerminator()) {\n      this.finishNode(node, bodilessType);\n      return;\n    }\n\n    if (bodilessType === \"TSDeclareFunction\" && this.state.isDeclareContext) {\n      this.raise(node.start, TSErrors.DeclareFunctionHasImplementation);\n\n      if (node.declare) {\n        super.parseFunctionBodyAndFinish(node, bodilessType, isMethod);\n        return;\n      }\n    }\n\n    super.parseFunctionBodyAndFinish(node, type, isMethod);\n  }\n\n  registerFunctionStatementId(node) {\n    if (!node.body && node.id) {\n      this.checkLVal(node.id, \"function name\", BIND_TS_AMBIENT);\n    } else {\n      super.registerFunctionStatementId(...arguments);\n    }\n  }\n\n  tsCheckForInvalidTypeCasts(items) {\n    items.forEach(node => {\n      if ((node == null ? void 0 : node.type) === \"TSTypeCastExpression\") {\n        this.raise(node.typeAnnotation.start, TSErrors.UnexpectedTypeAnnotation);\n      }\n    });\n  }\n\n  toReferencedList(exprList, isInParens) {\n    this.tsCheckForInvalidTypeCasts(exprList);\n    return exprList;\n  }\n\n  parseArrayLike(...args) {\n    const node = super.parseArrayLike(...args);\n\n    if (node.type === \"ArrayExpression\") {\n      this.tsCheckForInvalidTypeCasts(node.elements);\n    }\n\n    return node;\n  }\n\n  parseSubscript(base, startPos, startLoc, noCalls, state) {\n    if (!this.hasPrecedingLineBreak() && this.match(types.bang)) {\n      this.state.exprAllowed = false;\n      this.next();\n      const nonNullExpression = this.startNodeAt(startPos, startLoc);\n      nonNullExpression.expression = base;\n      return this.finishNode(nonNullExpression, \"TSNonNullExpression\");\n    }\n\n    if (this.isRelational(\"<\")) {\n      const result = this.tsTryParseAndCatch(() => {\n        if (!noCalls && this.atPossibleAsyncArrow(base)) {\n          const asyncArrowFn = this.tsTryParseGenericAsyncArrowFunction(startPos, startLoc);\n\n          if (asyncArrowFn) {\n            return asyncArrowFn;\n          }\n        }\n\n        const node = this.startNodeAt(startPos, startLoc);\n        node.callee = base;\n        const typeArguments = this.tsParseTypeArguments();\n\n        if (typeArguments) {\n          if (!noCalls && this.eat(types.parenL)) {\n            node.arguments = this.parseCallExpressionArguments(types.parenR, false);\n            this.tsCheckForInvalidTypeCasts(node.arguments);\n            node.typeParameters = typeArguments;\n\n            if (state.optionalChainMember) {\n              node.optional = false;\n            }\n\n            return this.finishCallExpression(node, state.optionalChainMember);\n          } else if (this.match(types.backQuote)) {\n            const result = this.parseTaggedTemplateExpression(base, startPos, startLoc, state);\n            result.typeParameters = typeArguments;\n            return result;\n          }\n        }\n\n        this.unexpected();\n      });\n      if (result) return result;\n    }\n\n    return super.parseSubscript(base, startPos, startLoc, noCalls, state);\n  }\n\n  parseNewArguments(node) {\n    if (this.isRelational(\"<\")) {\n      const typeParameters = this.tsTryParseAndCatch(() => {\n        const args = this.tsParseTypeArguments();\n        if (!this.match(types.parenL)) this.unexpected();\n        return args;\n      });\n\n      if (typeParameters) {\n        node.typeParameters = typeParameters;\n      }\n    }\n\n    super.parseNewArguments(node);\n  }\n\n  parseExprOp(left, leftStartPos, leftStartLoc, minPrec) {\n    if (nonNull(types._in.binop) > minPrec && !this.hasPrecedingLineBreak() && this.isContextual(\"as\")) {\n      const node = this.startNodeAt(leftStartPos, leftStartLoc);\n      node.expression = left;\n\n      const _const = this.tsTryNextParseConstantContext();\n\n      if (_const) {\n        node.typeAnnotation = _const;\n      } else {\n        node.typeAnnotation = this.tsNextThenParseType();\n      }\n\n      this.finishNode(node, \"TSAsExpression\");\n      this.reScan_lt_gt();\n      return this.parseExprOp(node, leftStartPos, leftStartLoc, minPrec);\n    }\n\n    return super.parseExprOp(left, leftStartPos, leftStartLoc, minPrec);\n  }\n\n  checkReservedWord(word, startLoc, checkKeywords, isBinding) {}\n\n  checkDuplicateExports() {}\n\n  parseImport(node) {\n    if (this.match(types.name) || this.match(types.star) || this.match(types.braceL)) {\n      const ahead = this.lookahead();\n\n      if (this.match(types.name) && ahead.type === types.eq) {\n        return this.tsParseImportEqualsDeclaration(node);\n      }\n\n      if (this.isContextual(\"type\") && ahead.type !== types.comma && !(ahead.type === types.name && ahead.value === \"from\")) {\n        node.importKind = \"type\";\n        this.next();\n      }\n    }\n\n    if (!node.importKind) {\n      node.importKind = \"value\";\n    }\n\n    const importNode = super.parseImport(node);\n\n    if (importNode.importKind === \"type\" && importNode.specifiers.length > 1 && importNode.specifiers[0].type === \"ImportDefaultSpecifier\") {\n      this.raise(importNode.start, \"A type-only import can specify a default import or named bindings, but not both.\");\n    }\n\n    return importNode;\n  }\n\n  parseExport(node) {\n    if (this.match(types._import)) {\n      this.expect(types._import);\n      return this.tsParseImportEqualsDeclaration(node, true);\n    } else if (this.eat(types.eq)) {\n      const assign = node;\n      assign.expression = this.parseExpression();\n      this.semicolon();\n      return this.finishNode(assign, \"TSExportAssignment\");\n    } else if (this.eatContextual(\"as\")) {\n      const decl = node;\n      this.expectContextual(\"namespace\");\n      decl.id = this.parseIdentifier();\n      this.semicolon();\n      return this.finishNode(decl, \"TSNamespaceExportDeclaration\");\n    } else {\n      if (this.isContextual(\"type\") && this.lookahead().type === types.braceL) {\n        this.next();\n        node.exportKind = \"type\";\n      } else {\n        node.exportKind = \"value\";\n      }\n\n      return super.parseExport(node);\n    }\n  }\n\n  isAbstractClass() {\n    return this.isContextual(\"abstract\") && this.lookahead().type === types._class;\n  }\n\n  parseExportDefaultExpression() {\n    if (this.isAbstractClass()) {\n      const cls = this.startNode();\n      this.next();\n      cls.abstract = true;\n      this.parseClass(cls, true, true);\n      return cls;\n    }\n\n    if (this.state.value === \"interface\") {\n      const result = this.tsParseDeclaration(this.startNode(), this.state.value, true);\n      if (result) return result;\n    }\n\n    return super.parseExportDefaultExpression();\n  }\n\n  parseStatementContent(context, topLevel) {\n    if (this.state.type === types._const) {\n      const ahead = this.lookahead();\n\n      if (ahead.type === types.name && ahead.value === \"enum\") {\n        const node = this.startNode();\n        this.expect(types._const);\n        this.expectContextual(\"enum\");\n        return this.tsParseEnumDeclaration(node, true);\n      }\n    }\n\n    return super.parseStatementContent(context, topLevel);\n  }\n\n  parseAccessModifier() {\n    return this.tsParseModifier([\"public\", \"protected\", \"private\"]);\n  }\n\n  parseClassMember(classBody, member, state) {\n    this.tsParseModifiers(member, [\"declare\", \"private\", \"public\", \"protected\"]);\n\n    const callParseClassMember = () => {\n      super.parseClassMember(classBody, member, state);\n    };\n\n    if (member.declare) {\n      this.tsInDeclareContext(callParseClassMember);\n    } else {\n      callParseClassMember();\n    }\n  }\n\n  parseClassMemberWithIsStatic(classBody, member, state, isStatic) {\n    this.tsParseModifiers(member, [\"abstract\", \"readonly\", \"declare\"]);\n    const idx = this.tsTryParseIndexSignature(member);\n\n    if (idx) {\n      classBody.body.push(idx);\n\n      if (member.abstract) {\n        this.raise(member.start, TSErrors.IndexSignatureHasAbstract);\n      }\n\n      if (isStatic) {\n        this.raise(member.start, TSErrors.IndexSignatureHasStatic);\n      }\n\n      if (member.accessibility) {\n        this.raise(member.start, TSErrors.IndexSignatureHasAccessibility, member.accessibility);\n      }\n\n      if (member.declare) {\n        this.raise(member.start, TSErrors.IndexSignatureHasDeclare);\n      }\n\n      return;\n    }\n\n    if (!this.state.inAbstractClass && member.abstract) {\n      this.raise(member.start, TSErrors.NonAbstractClassHasAbstractMethod);\n    }\n\n    super.parseClassMemberWithIsStatic(classBody, member, state, isStatic);\n  }\n\n  parsePostMemberNameModifiers(methodOrProp) {\n    const optional = this.eat(types.question);\n    if (optional) methodOrProp.optional = true;\n\n    if (methodOrProp.readonly && this.match(types.parenL)) {\n      this.raise(methodOrProp.start, TSErrors.ClassMethodHasReadonly);\n    }\n\n    if (methodOrProp.declare && this.match(types.parenL)) {\n      this.raise(methodOrProp.start, TSErrors.ClassMethodHasDeclare);\n    }\n  }\n\n  parseExpressionStatement(node, expr) {\n    const decl = expr.type === \"Identifier\" ? this.tsParseExpressionStatement(node, expr) : undefined;\n    return decl || super.parseExpressionStatement(node, expr);\n  }\n\n  shouldParseExportDeclaration() {\n    if (this.tsIsDeclarationStart()) return true;\n    return super.shouldParseExportDeclaration();\n  }\n\n  parseConditional(expr, startPos, startLoc, refNeedsArrowPos) {\n    if (!refNeedsArrowPos || !this.match(types.question)) {\n      return super.parseConditional(expr, startPos, startLoc, refNeedsArrowPos);\n    }\n\n    const result = this.tryParse(() => super.parseConditional(expr, startPos, startLoc));\n\n    if (!result.node) {\n      refNeedsArrowPos.start = result.error.pos || this.state.start;\n      return expr;\n    }\n\n    if (result.error) this.state = result.failState;\n    return result.node;\n  }\n\n  parseParenItem(node, startPos, startLoc) {\n    node = super.parseParenItem(node, startPos, startLoc);\n\n    if (this.eat(types.question)) {\n      node.optional = true;\n      this.resetEndLocation(node);\n    }\n\n    if (this.match(types.colon)) {\n      const typeCastNode = this.startNodeAt(startPos, startLoc);\n      typeCastNode.expression = node;\n      typeCastNode.typeAnnotation = this.tsParseTypeAnnotation();\n      return this.finishNode(typeCastNode, \"TSTypeCastExpression\");\n    }\n\n    return node;\n  }\n\n  parseExportDeclaration(node) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const isDeclare = this.eatContextual(\"declare\");\n\n    if (isDeclare && (this.isContextual(\"declare\") || !this.shouldParseExportDeclaration())) {\n      throw this.raise(this.state.start, TSErrors.ExpectedAmbientAfterExportDeclare);\n    }\n\n    let declaration;\n\n    if (this.match(types.name)) {\n      declaration = this.tsTryParseExportDeclaration();\n    }\n\n    if (!declaration) {\n      declaration = super.parseExportDeclaration(node);\n    }\n\n    if (declaration && (declaration.type === \"TSInterfaceDeclaration\" || declaration.type === \"TSTypeAliasDeclaration\" || isDeclare)) {\n      node.exportKind = \"type\";\n    }\n\n    if (declaration && isDeclare) {\n      this.resetStartLocation(declaration, startPos, startLoc);\n      declaration.declare = true;\n    }\n\n    return declaration;\n  }\n\n  parseClassId(node, isStatement, optionalId) {\n    if ((!isStatement || optionalId) && this.isContextual(\"implements\")) {\n      return;\n    }\n\n    super.parseClassId(node, isStatement, optionalId, node.declare ? BIND_TS_AMBIENT : BIND_CLASS);\n    const typeParameters = this.tsTryParseTypeParameters();\n    if (typeParameters) node.typeParameters = typeParameters;\n  }\n\n  parseClassPropertyAnnotation(node) {\n    if (!node.optional && this.eat(types.bang)) {\n      node.definite = true;\n    }\n\n    const type = this.tsTryParseTypeAnnotation();\n    if (type) node.typeAnnotation = type;\n  }\n\n  parseClassProperty(node) {\n    this.parseClassPropertyAnnotation(node);\n\n    if (this.state.isDeclareContext && this.match(types.eq)) {\n      this.raise(this.state.start, TSErrors.DeclareClassFieldHasInitializer);\n    }\n\n    return super.parseClassProperty(node);\n  }\n\n  parseClassPrivateProperty(node) {\n    if (node.abstract) {\n      this.raise(node.start, TSErrors.PrivateElementHasAbstract);\n    }\n\n    if (node.accessibility) {\n      this.raise(node.start, TSErrors.PrivateElementHasAccessibility, node.accessibility);\n    }\n\n    this.parseClassPropertyAnnotation(node);\n    return super.parseClassPrivateProperty(node);\n  }\n\n  pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper) {\n    const typeParameters = this.tsTryParseTypeParameters();\n\n    if (typeParameters && isConstructor) {\n      this.raise(typeParameters.start, TSErrors.ConstructorHasTypeParameters);\n    }\n\n    if (typeParameters) method.typeParameters = typeParameters;\n    super.pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper);\n  }\n\n  pushClassPrivateMethod(classBody, method, isGenerator, isAsync) {\n    const typeParameters = this.tsTryParseTypeParameters();\n    if (typeParameters) method.typeParameters = typeParameters;\n    super.pushClassPrivateMethod(classBody, method, isGenerator, isAsync);\n  }\n\n  parseClassSuper(node) {\n    super.parseClassSuper(node);\n\n    if (node.superClass && this.isRelational(\"<\")) {\n      node.superTypeParameters = this.tsParseTypeArguments();\n    }\n\n    if (this.eatContextual(\"implements\")) {\n      node.implements = this.tsParseHeritageClause(\"implements\");\n    }\n  }\n\n  parseObjPropValue(prop, ...args) {\n    const typeParameters = this.tsTryParseTypeParameters();\n    if (typeParameters) prop.typeParameters = typeParameters;\n    super.parseObjPropValue(prop, ...args);\n  }\n\n  parseFunctionParams(node, allowModifiers) {\n    const typeParameters = this.tsTryParseTypeParameters();\n    if (typeParameters) node.typeParameters = typeParameters;\n    super.parseFunctionParams(node, allowModifiers);\n  }\n\n  parseVarId(decl, kind) {\n    super.parseVarId(decl, kind);\n\n    if (decl.id.type === \"Identifier\" && this.eat(types.bang)) {\n      decl.definite = true;\n    }\n\n    const type = this.tsTryParseTypeAnnotation();\n\n    if (type) {\n      decl.id.typeAnnotation = type;\n      this.resetEndLocation(decl.id);\n    }\n  }\n\n  parseAsyncArrowFromCallExpression(node, call) {\n    if (this.match(types.colon)) {\n      node.returnType = this.tsParseTypeAnnotation();\n    }\n\n    return super.parseAsyncArrowFromCallExpression(node, call);\n  }\n\n  parseMaybeAssign(...args) {\n    var _jsx, _jsx2, _typeCast, _jsx3, _typeCast2, _jsx4, _typeCast3;\n\n    let state;\n    let jsx;\n    let typeCast;\n\n    if (this.hasPlugin(\"jsx\") && (this.match(types.jsxTagStart) || this.isRelational(\"<\"))) {\n      state = this.state.clone();\n      jsx = this.tryParse(() => super.parseMaybeAssign(...args), state);\n      if (!jsx.error) return jsx.node;\n      const {\n        context\n      } = this.state;\n\n      if (context[context.length - 1] === types$1.j_oTag) {\n        context.length -= 2;\n      } else if (context[context.length - 1] === types$1.j_expr) {\n        context.length -= 1;\n      }\n    }\n\n    if (!((_jsx = jsx) == null ? void 0 : _jsx.error) && !this.isRelational(\"<\")) {\n      return super.parseMaybeAssign(...args);\n    }\n\n    let typeParameters;\n    state = state || this.state.clone();\n    const arrow = this.tryParse(abort => {\n      var _typeParameters;\n\n      typeParameters = this.tsParseTypeParameters();\n      const expr = super.parseMaybeAssign(...args);\n\n      if (expr.type !== \"ArrowFunctionExpression\" || expr.extra && expr.extra.parenthesized) {\n        abort();\n      }\n\n      if (((_typeParameters = typeParameters) == null ? void 0 : _typeParameters.params.length) !== 0) {\n        this.resetStartLocationFromNode(expr, typeParameters);\n      }\n\n      expr.typeParameters = typeParameters;\n      return expr;\n    }, state);\n    if (!arrow.error && !arrow.aborted) return arrow.node;\n\n    if (!jsx) {\n      assert(!this.hasPlugin(\"jsx\"));\n      typeCast = this.tryParse(() => super.parseMaybeAssign(...args), state);\n      if (!typeCast.error) return typeCast.node;\n    }\n\n    if ((_jsx2 = jsx) == null ? void 0 : _jsx2.node) {\n      this.state = jsx.failState;\n      return jsx.node;\n    }\n\n    if (arrow.node) {\n      this.state = arrow.failState;\n      return arrow.node;\n    }\n\n    if ((_typeCast = typeCast) == null ? void 0 : _typeCast.node) {\n      this.state = typeCast.failState;\n      return typeCast.node;\n    }\n\n    if ((_jsx3 = jsx) == null ? void 0 : _jsx3.thrown) throw jsx.error;\n    if (arrow.thrown) throw arrow.error;\n    if ((_typeCast2 = typeCast) == null ? void 0 : _typeCast2.thrown) throw typeCast.error;\n    throw ((_jsx4 = jsx) == null ? void 0 : _jsx4.error) || arrow.error || ((_typeCast3 = typeCast) == null ? void 0 : _typeCast3.error);\n  }\n\n  parseMaybeUnary(refExpressionErrors) {\n    if (!this.hasPlugin(\"jsx\") && this.isRelational(\"<\")) {\n      return this.tsParseTypeAssertion();\n    } else {\n      return super.parseMaybeUnary(refExpressionErrors);\n    }\n  }\n\n  parseArrow(node) {\n    if (this.match(types.colon)) {\n      const result = this.tryParse(abort => {\n        const returnType = this.tsParseTypeOrTypePredicateAnnotation(types.colon);\n        if (this.canInsertSemicolon() || !this.match(types.arrow)) abort();\n        return returnType;\n      });\n      if (result.aborted) return;\n\n      if (!result.thrown) {\n        if (result.error) this.state = result.failState;\n        node.returnType = result.node;\n      }\n    }\n\n    return super.parseArrow(node);\n  }\n\n  parseAssignableListItemTypes(param) {\n    if (this.eat(types.question)) {\n      if (param.type !== \"Identifier\" && !this.state.isDeclareContext && !this.state.inType) {\n        this.raise(param.start, TSErrors.PatternIsOptional);\n      }\n\n      param.optional = true;\n    }\n\n    const type = this.tsTryParseTypeAnnotation();\n    if (type) param.typeAnnotation = type;\n    this.resetEndLocation(param);\n    return param;\n  }\n\n  toAssignable(node, isLHS = false) {\n    switch (node.type) {\n      case \"TSTypeCastExpression\":\n        return super.toAssignable(this.typeCastToParameter(node), isLHS);\n\n      case \"TSParameterProperty\":\n        return super.toAssignable(node, isLHS);\n\n      case \"TSAsExpression\":\n      case \"TSNonNullExpression\":\n      case \"TSTypeAssertion\":\n        node.expression = this.toAssignable(node.expression, isLHS);\n        return node;\n\n      default:\n        return super.toAssignable(node, isLHS);\n    }\n  }\n\n  checkLVal(expr, contextDescription, ...args) {\n    switch (expr.type) {\n      case \"TSTypeCastExpression\":\n        return;\n\n      case \"TSParameterProperty\":\n        this.checkLVal(expr.parameter, \"parameter property\", ...args);\n        return;\n\n      case \"TSAsExpression\":\n      case \"TSNonNullExpression\":\n      case \"TSTypeAssertion\":\n        this.checkLVal(expr.expression, contextDescription, ...args);\n        return;\n\n      default:\n        super.checkLVal(expr, contextDescription, ...args);\n        return;\n    }\n  }\n\n  parseBindingAtom() {\n    switch (this.state.type) {\n      case types._this:\n        return this.parseIdentifier(true);\n\n      default:\n        return super.parseBindingAtom();\n    }\n  }\n\n  parseMaybeDecoratorArguments(expr) {\n    if (this.isRelational(\"<\")) {\n      const typeArguments = this.tsParseTypeArguments();\n\n      if (this.match(types.parenL)) {\n        const call = super.parseMaybeDecoratorArguments(expr);\n        call.typeParameters = typeArguments;\n        return call;\n      }\n\n      this.unexpected(this.state.start, types.parenL);\n    }\n\n    return super.parseMaybeDecoratorArguments(expr);\n  }\n\n  isClassMethod() {\n    return this.isRelational(\"<\") || super.isClassMethod();\n  }\n\n  isClassProperty() {\n    return this.match(types.bang) || this.match(types.colon) || super.isClassProperty();\n  }\n\n  parseMaybeDefault(...args) {\n    const node = super.parseMaybeDefault(...args);\n\n    if (node.type === \"AssignmentPattern\" && node.typeAnnotation && node.right.start < node.typeAnnotation.start) {\n      this.raise(node.typeAnnotation.start, TSErrors.TypeAnnotationAfterAssign);\n    }\n\n    return node;\n  }\n\n  getTokenFromCode(code) {\n    if (this.state.inType && (code === 62 || code === 60)) {\n      return this.finishOp(types.relational, 1);\n    } else {\n      return super.getTokenFromCode(code);\n    }\n  }\n\n  reScan_lt_gt() {\n    if (this.match(types.relational)) {\n      const code = this.input.charCodeAt(this.state.start);\n\n      if (code === 60 || code === 62) {\n        this.state.pos -= 1;\n        this.readToken_lt_gt(code);\n      }\n    }\n  }\n\n  toAssignableList(exprList) {\n    for (let i = 0; i < exprList.length; i++) {\n      const expr = exprList[i];\n      if (!expr) continue;\n\n      switch (expr.type) {\n        case \"TSTypeCastExpression\":\n          exprList[i] = this.typeCastToParameter(expr);\n          break;\n\n        case \"TSAsExpression\":\n        case \"TSTypeAssertion\":\n          if (!this.state.maybeInArrowParameters) {\n            exprList[i] = this.typeCastToParameter(expr);\n          } else {\n            this.raise(expr.start, TSErrors.UnexpectedTypeCastInParameter);\n          }\n\n          break;\n      }\n    }\n\n    return super.toAssignableList(...arguments);\n  }\n\n  typeCastToParameter(node) {\n    node.expression.typeAnnotation = node.typeAnnotation;\n    this.resetEndLocation(node.expression, node.typeAnnotation.end, node.typeAnnotation.loc.end);\n    return node.expression;\n  }\n\n  shouldParseArrow() {\n    return this.match(types.colon) || super.shouldParseArrow();\n  }\n\n  shouldParseAsyncArrow() {\n    return this.match(types.colon) || super.shouldParseAsyncArrow();\n  }\n\n  canHaveLeadingDecorator() {\n    return super.canHaveLeadingDecorator() || this.isAbstractClass();\n  }\n\n  jsxParseOpeningElementAfterName(node) {\n    if (this.isRelational(\"<\")) {\n      const typeArguments = this.tsTryParseAndCatch(() => this.tsParseTypeArguments());\n      if (typeArguments) node.typeParameters = typeArguments;\n    }\n\n    return super.jsxParseOpeningElementAfterName(node);\n  }\n\n  getGetterSetterExpectedParamCount(method) {\n    const baseCount = super.getGetterSetterExpectedParamCount(method);\n    const params = this.getObjectOrClassMethodParams(method);\n    const firstParam = params[0];\n    const hasContextParam = firstParam && firstParam.type === \"Identifier\" && firstParam.name === \"this\";\n    return hasContextParam ? baseCount + 1 : baseCount;\n  }\n\n  parseCatchClauseParam() {\n    const param = super.parseCatchClauseParam();\n    const type = this.tsTryParseTypeAnnotation();\n\n    if (type) {\n      param.typeAnnotation = type;\n      this.resetEndLocation(param);\n    }\n\n    return param;\n  }\n\n  tsInDeclareContext(cb) {\n    const oldIsDeclareContext = this.state.isDeclareContext;\n    this.state.isDeclareContext = true;\n\n    try {\n      return cb();\n    } finally {\n      this.state.isDeclareContext = oldIsDeclareContext;\n    }\n  }\n\n  parseClass(node, ...args) {\n    const oldInAbstractClass = this.state.inAbstractClass;\n    this.state.inAbstractClass = !!node.abstract;\n\n    try {\n      return super.parseClass(node, ...args);\n    } finally {\n      this.state.inAbstractClass = oldInAbstractClass;\n    }\n  }\n\n  tsParseAbstractDeclaration(node) {\n    if (this.match(types._class)) {\n      node.abstract = true;\n      return this.parseClass(node, true, false);\n    } else if (this.isContextual(\"interface\")) {\n      if (!this.hasFollowingLineBreak()) {\n        node.abstract = true;\n        this.raise(node.start, TSErrors.NonClassMethodPropertyHasAbstractModifer);\n        this.next();\n        return this.tsParseInterfaceDeclaration(node);\n      }\n    } else {\n      this.unexpected(null, types._class);\n    }\n  }\n\n});\n\ntypes.placeholder = new TokenType(\"%%\", {\n  startsExpr: true\n});\nvar placeholders = (superClass => class extends superClass {\n  parsePlaceholder(expectedNode) {\n    if (this.match(types.placeholder)) {\n      const node = this.startNode();\n      this.next();\n      this.assertNoSpace(\"Unexpected space in placeholder.\");\n      node.name = super.parseIdentifier(true);\n      this.assertNoSpace(\"Unexpected space in placeholder.\");\n      this.expect(types.placeholder);\n      return this.finishPlaceholder(node, expectedNode);\n    }\n  }\n\n  finishPlaceholder(node, expectedNode) {\n    const isFinished = !!(node.expectedNode && node.type === \"Placeholder\");\n    node.expectedNode = expectedNode;\n    return isFinished ? node : this.finishNode(node, \"Placeholder\");\n  }\n\n  getTokenFromCode(code) {\n    if (code === 37 && this.input.charCodeAt(this.state.pos + 1) === 37) {\n      return this.finishOp(types.placeholder, 2);\n    }\n\n    return super.getTokenFromCode(...arguments);\n  }\n\n  parseExprAtom() {\n    return this.parsePlaceholder(\"Expression\") || super.parseExprAtom(...arguments);\n  }\n\n  parseIdentifier() {\n    return this.parsePlaceholder(\"Identifier\") || super.parseIdentifier(...arguments);\n  }\n\n  checkReservedWord(word) {\n    if (word !== undefined) super.checkReservedWord(...arguments);\n  }\n\n  parseBindingAtom() {\n    return this.parsePlaceholder(\"Pattern\") || super.parseBindingAtom(...arguments);\n  }\n\n  checkLVal(expr) {\n    if (expr.type !== \"Placeholder\") super.checkLVal(...arguments);\n  }\n\n  toAssignable(node) {\n    if (node && node.type === \"Placeholder\" && node.expectedNode === \"Expression\") {\n      node.expectedNode = \"Pattern\";\n      return node;\n    }\n\n    return super.toAssignable(...arguments);\n  }\n\n  isLet(context) {\n    if (super.isLet(context)) {\n      return true;\n    }\n\n    if (!this.isContextual(\"let\")) {\n      return false;\n    }\n\n    if (context) return false;\n    const nextToken = this.lookahead();\n\n    if (nextToken.type === types.placeholder) {\n      return true;\n    }\n\n    return false;\n  }\n\n  verifyBreakContinue(node) {\n    if (node.label && node.label.type === \"Placeholder\") return;\n    super.verifyBreakContinue(...arguments);\n  }\n\n  parseExpressionStatement(node, expr) {\n    if (expr.type !== \"Placeholder\" || expr.extra && expr.extra.parenthesized) {\n      return super.parseExpressionStatement(...arguments);\n    }\n\n    if (this.match(types.colon)) {\n      const stmt = node;\n      stmt.label = this.finishPlaceholder(expr, \"Identifier\");\n      this.next();\n      stmt.body = this.parseStatement(\"label\");\n      return this.finishNode(stmt, \"LabeledStatement\");\n    }\n\n    this.semicolon();\n    node.name = expr.name;\n    return this.finishPlaceholder(node, \"Statement\");\n  }\n\n  parseBlock() {\n    return this.parsePlaceholder(\"BlockStatement\") || super.parseBlock(...arguments);\n  }\n\n  parseFunctionId() {\n    return this.parsePlaceholder(\"Identifier\") || super.parseFunctionId(...arguments);\n  }\n\n  parseClass(node, isStatement, optionalId) {\n    const type = isStatement ? \"ClassDeclaration\" : \"ClassExpression\";\n    this.next();\n    this.takeDecorators(node);\n    const oldStrict = this.state.strict;\n    const placeholder = this.parsePlaceholder(\"Identifier\");\n\n    if (placeholder) {\n      if (this.match(types._extends) || this.match(types.placeholder) || this.match(types.braceL)) {\n        node.id = placeholder;\n      } else if (optionalId || !isStatement) {\n        node.id = null;\n        node.body = this.finishPlaceholder(placeholder, \"ClassBody\");\n        return this.finishNode(node, type);\n      } else {\n        this.unexpected(null, \"A class name is required\");\n      }\n    } else {\n      this.parseClassId(node, isStatement, optionalId);\n    }\n\n    this.parseClassSuper(node);\n    node.body = this.parsePlaceholder(\"ClassBody\") || this.parseClassBody(!!node.superClass, oldStrict);\n    return this.finishNode(node, type);\n  }\n\n  parseExport(node) {\n    const placeholder = this.parsePlaceholder(\"Identifier\");\n    if (!placeholder) return super.parseExport(...arguments);\n\n    if (!this.isContextual(\"from\") && !this.match(types.comma)) {\n      node.specifiers = [];\n      node.source = null;\n      node.declaration = this.finishPlaceholder(placeholder, \"Declaration\");\n      return this.finishNode(node, \"ExportNamedDeclaration\");\n    }\n\n    this.expectPlugin(\"exportDefaultFrom\");\n    const specifier = this.startNode();\n    specifier.exported = placeholder;\n    node.specifiers = [this.finishNode(specifier, \"ExportDefaultSpecifier\")];\n    return super.parseExport(node);\n  }\n\n  isExportDefaultSpecifier() {\n    if (this.match(types._default)) {\n      const next = this.nextTokenStart();\n\n      if (this.isUnparsedContextual(next, \"from\")) {\n        if (this.input.startsWith(types.placeholder.label, this.nextTokenStartSince(next + 4))) {\n          return true;\n        }\n      }\n    }\n\n    return super.isExportDefaultSpecifier();\n  }\n\n  maybeParseExportDefaultSpecifier(node) {\n    if (node.specifiers && node.specifiers.length > 0) {\n      return true;\n    }\n\n    return super.maybeParseExportDefaultSpecifier(...arguments);\n  }\n\n  checkExport(node) {\n    const {\n      specifiers\n    } = node;\n\n    if (specifiers == null ? void 0 : specifiers.length) {\n      node.specifiers = specifiers.filter(node => node.exported.type === \"Placeholder\");\n    }\n\n    super.checkExport(node);\n    node.specifiers = specifiers;\n  }\n\n  parseImport(node) {\n    const placeholder = this.parsePlaceholder(\"Identifier\");\n    if (!placeholder) return super.parseImport(...arguments);\n    node.specifiers = [];\n\n    if (!this.isContextual(\"from\") && !this.match(types.comma)) {\n      node.source = this.finishPlaceholder(placeholder, \"StringLiteral\");\n      this.semicolon();\n      return this.finishNode(node, \"ImportDeclaration\");\n    }\n\n    const specifier = this.startNodeAtNode(placeholder);\n    specifier.local = placeholder;\n    this.finishNode(specifier, \"ImportDefaultSpecifier\");\n    node.specifiers.push(specifier);\n\n    if (this.eat(types.comma)) {\n      const hasStarImport = this.maybeParseStarImportSpecifier(node);\n      if (!hasStarImport) this.parseNamedImportSpecifiers(node);\n    }\n\n    this.expectContextual(\"from\");\n    node.source = this.parseImportSource();\n    this.semicolon();\n    return this.finishNode(node, \"ImportDeclaration\");\n  }\n\n  parseImportSource() {\n    return this.parsePlaceholder(\"StringLiteral\") || super.parseImportSource(...arguments);\n  }\n\n});\n\nvar v8intrinsic = (superClass => class extends superClass {\n  parseV8Intrinsic() {\n    if (this.match(types.modulo)) {\n      const v8IntrinsicStart = this.state.start;\n      const node = this.startNode();\n      this.eat(types.modulo);\n\n      if (this.match(types.name)) {\n        const name = this.parseIdentifierName(this.state.start);\n        const identifier = this.createIdentifier(node, name);\n        identifier.type = \"V8IntrinsicIdentifier\";\n\n        if (this.match(types.parenL)) {\n          return identifier;\n        }\n      }\n\n      this.unexpected(v8IntrinsicStart);\n    }\n  }\n\n  parseExprAtom() {\n    return this.parseV8Intrinsic() || super.parseExprAtom(...arguments);\n  }\n\n});\n\nfunction hasPlugin(plugins, name) {\n  return plugins.some(plugin => {\n    if (Array.isArray(plugin)) {\n      return plugin[0] === name;\n    } else {\n      return plugin === name;\n    }\n  });\n}\nfunction getPluginOption(plugins, name, option) {\n  const plugin = plugins.find(plugin => {\n    if (Array.isArray(plugin)) {\n      return plugin[0] === name;\n    } else {\n      return plugin === name;\n    }\n  });\n\n  if (plugin && Array.isArray(plugin)) {\n    return plugin[1][option];\n  }\n\n  return null;\n}\nconst PIPELINE_PROPOSALS = [\"minimal\", \"smart\", \"fsharp\"];\nconst RECORD_AND_TUPLE_SYNTAX_TYPES = [\"hash\", \"bar\"];\nfunction validatePlugins(plugins) {\n  if (hasPlugin(plugins, \"decorators\")) {\n    if (hasPlugin(plugins, \"decorators-legacy\")) {\n      throw new Error(\"Cannot use the decorators and decorators-legacy plugin together\");\n    }\n\n    const decoratorsBeforeExport = getPluginOption(plugins, \"decorators\", \"decoratorsBeforeExport\");\n\n    if (decoratorsBeforeExport == null) {\n      throw new Error(\"The 'decorators' plugin requires a 'decoratorsBeforeExport' option,\" + \" whose value must be a boolean. If you are migrating from\" + \" Babylon/Babel 6 or want to use the old decorators proposal, you\" + \" should use the 'decorators-legacy' plugin instead of 'decorators'.\");\n    } else if (typeof decoratorsBeforeExport !== \"boolean\") {\n      throw new Error(\"'decoratorsBeforeExport' must be a boolean.\");\n    }\n  }\n\n  if (hasPlugin(plugins, \"flow\") && hasPlugin(plugins, \"typescript\")) {\n    throw new Error(\"Cannot combine flow and typescript plugins.\");\n  }\n\n  if (hasPlugin(plugins, \"placeholders\") && hasPlugin(plugins, \"v8intrinsic\")) {\n    throw new Error(\"Cannot combine placeholders and v8intrinsic plugins.\");\n  }\n\n  if (hasPlugin(plugins, \"pipelineOperator\") && !PIPELINE_PROPOSALS.includes(getPluginOption(plugins, \"pipelineOperator\", \"proposal\"))) {\n    throw new Error(\"'pipelineOperator' requires 'proposal' option whose value should be one of: \" + PIPELINE_PROPOSALS.map(p => `'${p}'`).join(\", \"));\n  }\n\n  if (hasPlugin(plugins, \"moduleAttributes\")) {\n    if (hasPlugin(plugins, \"importAssertions\")) {\n      throw new Error(\"Cannot combine importAssertions and moduleAttributes plugins.\");\n    }\n\n    const moduleAttributesVerionPluginOption = getPluginOption(plugins, \"moduleAttributes\", \"version\");\n\n    if (moduleAttributesVerionPluginOption !== \"may-2020\") {\n      throw new Error(\"The 'moduleAttributes' plugin requires a 'version' option,\" + \" representing the last proposal update. Currently, the\" + \" only supported value is 'may-2020'.\");\n    }\n  }\n\n  if (hasPlugin(plugins, \"recordAndTuple\") && !RECORD_AND_TUPLE_SYNTAX_TYPES.includes(getPluginOption(plugins, \"recordAndTuple\", \"syntaxType\"))) {\n    throw new Error(\"'recordAndTuple' requires 'syntaxType' option whose value should be one of: \" + RECORD_AND_TUPLE_SYNTAX_TYPES.map(p => `'${p}'`).join(\", \"));\n  }\n}\nconst mixinPlugins = {\n  estree,\n  jsx,\n  flow,\n  typescript,\n  v8intrinsic,\n  placeholders\n};\nconst mixinPluginNames = Object.keys(mixinPlugins);\n\nconst defaultOptions = {\n  sourceType: \"script\",\n  sourceFilename: undefined,\n  startLine: 1,\n  allowAwaitOutsideFunction: false,\n  allowReturnOutsideFunction: false,\n  allowImportExportEverywhere: false,\n  allowSuperOutsideMethod: false,\n  allowUndeclaredExports: false,\n  plugins: [],\n  strictMode: null,\n  ranges: false,\n  tokens: false,\n  createParenthesizedExpressions: false,\n  errorRecovery: false\n};\nfunction getOptions(opts) {\n  const options = {};\n\n  for (let _i = 0, _Object$keys = Object.keys(defaultOptions); _i < _Object$keys.length; _i++) {\n    const key = _Object$keys[_i];\n    options[key] = opts && opts[key] != null ? opts[key] : defaultOptions[key];\n  }\n\n  return options;\n}\n\nclass State {\n  constructor() {\n    this.strict = void 0;\n    this.curLine = void 0;\n    this.startLoc = void 0;\n    this.endLoc = void 0;\n    this.errors = [];\n    this.potentialArrowAt = -1;\n    this.noArrowAt = [];\n    this.noArrowParamsConversionAt = [];\n    this.maybeInArrowParameters = false;\n    this.inPipeline = false;\n    this.inType = false;\n    this.noAnonFunctionType = false;\n    this.inPropertyName = false;\n    this.hasFlowComment = false;\n    this.isIterator = false;\n    this.isDeclareContext = false;\n    this.inAbstractClass = false;\n    this.topicContext = {\n      maxNumOfResolvableTopics: 0,\n      maxTopicIndex: null\n    };\n    this.soloAwait = false;\n    this.inFSharpPipelineDirectBody = false;\n    this.labels = [];\n    this.decoratorStack = [[]];\n    this.comments = [];\n    this.trailingComments = [];\n    this.leadingComments = [];\n    this.commentStack = [];\n    this.commentPreviousNode = null;\n    this.pos = 0;\n    this.lineStart = 0;\n    this.type = types.eof;\n    this.value = null;\n    this.start = 0;\n    this.end = 0;\n    this.lastTokEndLoc = null;\n    this.lastTokStartLoc = null;\n    this.lastTokStart = 0;\n    this.lastTokEnd = 0;\n    this.context = [types$1.braceStatement];\n    this.exprAllowed = true;\n    this.containsEsc = false;\n    this.strictErrors = new Map();\n    this.exportedIdentifiers = [];\n    this.tokensLength = 0;\n  }\n\n  init(options) {\n    this.strict = options.strictMode === false ? false : options.sourceType === \"module\";\n    this.curLine = options.startLine;\n    this.startLoc = this.endLoc = this.curPosition();\n  }\n\n  curPosition() {\n    return new Position(this.curLine, this.pos - this.lineStart);\n  }\n\n  clone(skipArrays) {\n    const state = new State();\n    const keys = Object.keys(this);\n\n    for (let i = 0, length = keys.length; i < length; i++) {\n      const key = keys[i];\n      let val = this[key];\n\n      if (!skipArrays && Array.isArray(val)) {\n        val = val.slice();\n      }\n\n      state[key] = val;\n    }\n\n    return state;\n  }\n\n}\n\nvar _isDigit = function isDigit(code) {\n  return code >= 48 && code <= 57;\n};\nconst VALID_REGEX_FLAGS = new Set([\"g\", \"m\", \"s\", \"i\", \"y\", \"u\"]);\nconst forbiddenNumericSeparatorSiblings = {\n  decBinOct: [46, 66, 69, 79, 95, 98, 101, 111],\n  hex: [46, 88, 95, 120]\n};\nconst allowedNumericSeparatorSiblings = {};\nallowedNumericSeparatorSiblings.bin = [48, 49];\nallowedNumericSeparatorSiblings.oct = [...allowedNumericSeparatorSiblings.bin, 50, 51, 52, 53, 54, 55];\nallowedNumericSeparatorSiblings.dec = [...allowedNumericSeparatorSiblings.oct, 56, 57];\nallowedNumericSeparatorSiblings.hex = [...allowedNumericSeparatorSiblings.dec, 65, 66, 67, 68, 69, 70, 97, 98, 99, 100, 101, 102];\nclass Token {\n  constructor(state) {\n    this.type = state.type;\n    this.value = state.value;\n    this.start = state.start;\n    this.end = state.end;\n    this.loc = new SourceLocation(state.startLoc, state.endLoc);\n  }\n\n}\nclass Tokenizer extends ParserError {\n  constructor(options, input) {\n    super();\n    this.isLookahead = void 0;\n    this.tokens = [];\n    this.state = new State();\n    this.state.init(options);\n    this.input = input;\n    this.length = input.length;\n    this.isLookahead = false;\n  }\n\n  pushToken(token) {\n    this.tokens.length = this.state.tokensLength;\n    this.tokens.push(token);\n    ++this.state.tokensLength;\n  }\n\n  next() {\n    if (!this.isLookahead) {\n      this.checkKeywordEscapes();\n\n      if (this.options.tokens) {\n        this.pushToken(new Token(this.state));\n      }\n    }\n\n    this.state.lastTokEnd = this.state.end;\n    this.state.lastTokStart = this.state.start;\n    this.state.lastTokEndLoc = this.state.endLoc;\n    this.state.lastTokStartLoc = this.state.startLoc;\n    this.nextToken();\n  }\n\n  eat(type) {\n    if (this.match(type)) {\n      this.next();\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  match(type) {\n    return this.state.type === type;\n  }\n\n  lookahead() {\n    const old = this.state;\n    this.state = old.clone(true);\n    this.isLookahead = true;\n    this.next();\n    this.isLookahead = false;\n    const curr = this.state;\n    this.state = old;\n    return curr;\n  }\n\n  nextTokenStart() {\n    return this.nextTokenStartSince(this.state.pos);\n  }\n\n  nextTokenStartSince(pos) {\n    skipWhiteSpace.lastIndex = pos;\n    const skip = skipWhiteSpace.exec(this.input);\n    return pos + skip[0].length;\n  }\n\n  lookaheadCharCode() {\n    return this.input.charCodeAt(this.nextTokenStart());\n  }\n\n  setStrict(strict) {\n    this.state.strict = strict;\n\n    if (strict) {\n      this.state.strictErrors.forEach((message, pos) => this.raise(pos, message));\n      this.state.strictErrors.clear();\n    }\n  }\n\n  curContext() {\n    return this.state.context[this.state.context.length - 1];\n  }\n\n  nextToken() {\n    const curContext = this.curContext();\n    if (!(curContext == null ? void 0 : curContext.preserveSpace)) this.skipSpace();\n    this.state.start = this.state.pos;\n    this.state.startLoc = this.state.curPosition();\n\n    if (this.state.pos >= this.length) {\n      this.finishToken(types.eof);\n      return;\n    }\n\n    const override = curContext == null ? void 0 : curContext.override;\n\n    if (override) {\n      override(this);\n    } else {\n      this.getTokenFromCode(this.input.codePointAt(this.state.pos));\n    }\n  }\n\n  pushComment(block, text, start, end, startLoc, endLoc) {\n    const comment = {\n      type: block ? \"CommentBlock\" : \"CommentLine\",\n      value: text,\n      start: start,\n      end: end,\n      loc: new SourceLocation(startLoc, endLoc)\n    };\n    if (this.options.tokens) this.pushToken(comment);\n    this.state.comments.push(comment);\n    this.addComment(comment);\n  }\n\n  skipBlockComment() {\n    const startLoc = this.state.curPosition();\n    const start = this.state.pos;\n    const end = this.input.indexOf(\"*/\", this.state.pos + 2);\n    if (end === -1) throw this.raise(start, ErrorMessages.UnterminatedComment);\n    this.state.pos = end + 2;\n    lineBreakG.lastIndex = start;\n    let match;\n\n    while ((match = lineBreakG.exec(this.input)) && match.index < this.state.pos) {\n      ++this.state.curLine;\n      this.state.lineStart = match.index + match[0].length;\n    }\n\n    if (this.isLookahead) return;\n    this.pushComment(true, this.input.slice(start + 2, end), start, this.state.pos, startLoc, this.state.curPosition());\n  }\n\n  skipLineComment(startSkip) {\n    const start = this.state.pos;\n    const startLoc = this.state.curPosition();\n    let ch = this.input.charCodeAt(this.state.pos += startSkip);\n\n    if (this.state.pos < this.length) {\n      while (!isNewLine(ch) && ++this.state.pos < this.length) {\n        ch = this.input.charCodeAt(this.state.pos);\n      }\n    }\n\n    if (this.isLookahead) return;\n    this.pushComment(false, this.input.slice(start + startSkip, this.state.pos), start, this.state.pos, startLoc, this.state.curPosition());\n  }\n\n  skipSpace() {\n    loop: while (this.state.pos < this.length) {\n      const ch = this.input.charCodeAt(this.state.pos);\n\n      switch (ch) {\n        case 32:\n        case 160:\n        case 9:\n          ++this.state.pos;\n          break;\n\n        case 13:\n          if (this.input.charCodeAt(this.state.pos + 1) === 10) {\n            ++this.state.pos;\n          }\n\n        case 10:\n        case 8232:\n        case 8233:\n          ++this.state.pos;\n          ++this.state.curLine;\n          this.state.lineStart = this.state.pos;\n          break;\n\n        case 47:\n          switch (this.input.charCodeAt(this.state.pos + 1)) {\n            case 42:\n              this.skipBlockComment();\n              break;\n\n            case 47:\n              this.skipLineComment(2);\n              break;\n\n            default:\n              break loop;\n          }\n\n          break;\n\n        default:\n          if (isWhitespace(ch)) {\n            ++this.state.pos;\n          } else {\n            break loop;\n          }\n\n      }\n    }\n  }\n\n  finishToken(type, val) {\n    this.state.end = this.state.pos;\n    this.state.endLoc = this.state.curPosition();\n    const prevType = this.state.type;\n    this.state.type = type;\n    this.state.value = val;\n    if (!this.isLookahead) this.updateContext(prevType);\n  }\n\n  readToken_numberSign() {\n    if (this.state.pos === 0 && this.readToken_interpreter()) {\n      return;\n    }\n\n    const nextPos = this.state.pos + 1;\n    const next = this.input.charCodeAt(nextPos);\n\n    if (next >= 48 && next <= 57) {\n      throw this.raise(this.state.pos, ErrorMessages.UnexpectedDigitAfterHash);\n    }\n\n    if (next === 123 || next === 91 && this.hasPlugin(\"recordAndTuple\")) {\n      this.expectPlugin(\"recordAndTuple\");\n\n      if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"hash\") {\n        throw this.raise(this.state.pos, next === 123 ? ErrorMessages.RecordExpressionHashIncorrectStartSyntaxType : ErrorMessages.TupleExpressionHashIncorrectStartSyntaxType);\n      }\n\n      if (next === 123) {\n        this.finishToken(types.braceHashL);\n      } else {\n        this.finishToken(types.bracketHashL);\n      }\n\n      this.state.pos += 2;\n    } else {\n      this.finishOp(types.hash, 1);\n    }\n  }\n\n  readToken_dot() {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next >= 48 && next <= 57) {\n      this.readNumber(true);\n      return;\n    }\n\n    if (next === 46 && this.input.charCodeAt(this.state.pos + 2) === 46) {\n      this.state.pos += 3;\n      this.finishToken(types.ellipsis);\n    } else {\n      ++this.state.pos;\n      this.finishToken(types.dot);\n    }\n  }\n\n  readToken_slash() {\n    if (this.state.exprAllowed && !this.state.inType) {\n      ++this.state.pos;\n      this.readRegexp();\n      return;\n    }\n\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next === 61) {\n      this.finishOp(types.assign, 2);\n    } else {\n      this.finishOp(types.slash, 1);\n    }\n  }\n\n  readToken_interpreter() {\n    if (this.state.pos !== 0 || this.length < 2) return false;\n    let ch = this.input.charCodeAt(this.state.pos + 1);\n    if (ch !== 33) return false;\n    const start = this.state.pos;\n    this.state.pos += 1;\n\n    while (!isNewLine(ch) && ++this.state.pos < this.length) {\n      ch = this.input.charCodeAt(this.state.pos);\n    }\n\n    const value = this.input.slice(start + 2, this.state.pos);\n    this.finishToken(types.interpreterDirective, value);\n    return true;\n  }\n\n  readToken_mult_modulo(code) {\n    let type = code === 42 ? types.star : types.modulo;\n    let width = 1;\n    let next = this.input.charCodeAt(this.state.pos + 1);\n    const exprAllowed = this.state.exprAllowed;\n\n    if (code === 42 && next === 42) {\n      width++;\n      next = this.input.charCodeAt(this.state.pos + 2);\n      type = types.exponent;\n    }\n\n    if (next === 61 && !exprAllowed) {\n      width++;\n      type = types.assign;\n    }\n\n    this.finishOp(type, width);\n  }\n\n  readToken_pipe_amp(code) {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next === code) {\n      if (this.input.charCodeAt(this.state.pos + 2) === 61) {\n        this.finishOp(types.assign, 3);\n      } else {\n        this.finishOp(code === 124 ? types.logicalOR : types.logicalAND, 2);\n      }\n\n      return;\n    }\n\n    if (code === 124) {\n      if (next === 62) {\n        this.finishOp(types.pipeline, 2);\n        return;\n      }\n\n      if (this.hasPlugin(\"recordAndTuple\") && next === 125) {\n        if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n          throw this.raise(this.state.pos, ErrorMessages.RecordExpressionBarIncorrectEndSyntaxType);\n        }\n\n        this.finishOp(types.braceBarR, 2);\n        return;\n      }\n\n      if (this.hasPlugin(\"recordAndTuple\") && next === 93) {\n        if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n          throw this.raise(this.state.pos, ErrorMessages.TupleExpressionBarIncorrectEndSyntaxType);\n        }\n\n        this.finishOp(types.bracketBarR, 2);\n        return;\n      }\n    }\n\n    if (next === 61) {\n      this.finishOp(types.assign, 2);\n      return;\n    }\n\n    this.finishOp(code === 124 ? types.bitwiseOR : types.bitwiseAND, 1);\n  }\n\n  readToken_caret() {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next === 61) {\n      this.finishOp(types.assign, 2);\n    } else {\n      this.finishOp(types.bitwiseXOR, 1);\n    }\n  }\n\n  readToken_plus_min(code) {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next === code) {\n      if (next === 45 && !this.inModule && this.input.charCodeAt(this.state.pos + 2) === 62 && (this.state.lastTokEnd === 0 || this.hasPrecedingLineBreak())) {\n        this.skipLineComment(3);\n        this.skipSpace();\n        this.nextToken();\n        return;\n      }\n\n      this.finishOp(types.incDec, 2);\n      return;\n    }\n\n    if (next === 61) {\n      this.finishOp(types.assign, 2);\n    } else {\n      this.finishOp(types.plusMin, 1);\n    }\n  }\n\n  readToken_lt_gt(code) {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n    let size = 1;\n\n    if (next === code) {\n      size = code === 62 && this.input.charCodeAt(this.state.pos + 2) === 62 ? 3 : 2;\n\n      if (this.input.charCodeAt(this.state.pos + size) === 61) {\n        this.finishOp(types.assign, size + 1);\n        return;\n      }\n\n      this.finishOp(types.bitShift, size);\n      return;\n    }\n\n    if (next === 33 && code === 60 && !this.inModule && this.input.charCodeAt(this.state.pos + 2) === 45 && this.input.charCodeAt(this.state.pos + 3) === 45) {\n      this.skipLineComment(4);\n      this.skipSpace();\n      this.nextToken();\n      return;\n    }\n\n    if (next === 61) {\n      size = 2;\n    }\n\n    this.finishOp(types.relational, size);\n  }\n\n  readToken_eq_excl(code) {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next === 61) {\n      this.finishOp(types.equality, this.input.charCodeAt(this.state.pos + 2) === 61 ? 3 : 2);\n      return;\n    }\n\n    if (code === 61 && next === 62) {\n      this.state.pos += 2;\n      this.finishToken(types.arrow);\n      return;\n    }\n\n    this.finishOp(code === 61 ? types.eq : types.bang, 1);\n  }\n\n  readToken_question() {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n    const next2 = this.input.charCodeAt(this.state.pos + 2);\n\n    if (next === 63) {\n      if (next2 === 61) {\n        this.finishOp(types.assign, 3);\n      } else {\n        this.finishOp(types.nullishCoalescing, 2);\n      }\n    } else if (next === 46 && !(next2 >= 48 && next2 <= 57)) {\n      this.state.pos += 2;\n      this.finishToken(types.questionDot);\n    } else {\n      ++this.state.pos;\n      this.finishToken(types.question);\n    }\n  }\n\n  getTokenFromCode(code) {\n    switch (code) {\n      case 46:\n        this.readToken_dot();\n        return;\n\n      case 40:\n        ++this.state.pos;\n        this.finishToken(types.parenL);\n        return;\n\n      case 41:\n        ++this.state.pos;\n        this.finishToken(types.parenR);\n        return;\n\n      case 59:\n        ++this.state.pos;\n        this.finishToken(types.semi);\n        return;\n\n      case 44:\n        ++this.state.pos;\n        this.finishToken(types.comma);\n        return;\n\n      case 91:\n        if (this.hasPlugin(\"recordAndTuple\") && this.input.charCodeAt(this.state.pos + 1) === 124) {\n          if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n            throw this.raise(this.state.pos, ErrorMessages.TupleExpressionBarIncorrectStartSyntaxType);\n          }\n\n          this.finishToken(types.bracketBarL);\n          this.state.pos += 2;\n        } else {\n          ++this.state.pos;\n          this.finishToken(types.bracketL);\n        }\n\n        return;\n\n      case 93:\n        ++this.state.pos;\n        this.finishToken(types.bracketR);\n        return;\n\n      case 123:\n        if (this.hasPlugin(\"recordAndTuple\") && this.input.charCodeAt(this.state.pos + 1) === 124) {\n          if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n            throw this.raise(this.state.pos, ErrorMessages.RecordExpressionBarIncorrectStartSyntaxType);\n          }\n\n          this.finishToken(types.braceBarL);\n          this.state.pos += 2;\n        } else {\n          ++this.state.pos;\n          this.finishToken(types.braceL);\n        }\n\n        return;\n\n      case 125:\n        ++this.state.pos;\n        this.finishToken(types.braceR);\n        return;\n\n      case 58:\n        if (this.hasPlugin(\"functionBind\") && this.input.charCodeAt(this.state.pos + 1) === 58) {\n          this.finishOp(types.doubleColon, 2);\n        } else {\n          ++this.state.pos;\n          this.finishToken(types.colon);\n        }\n\n        return;\n\n      case 63:\n        this.readToken_question();\n        return;\n\n      case 96:\n        ++this.state.pos;\n        this.finishToken(types.backQuote);\n        return;\n\n      case 48:\n        {\n          const next = this.input.charCodeAt(this.state.pos + 1);\n\n          if (next === 120 || next === 88) {\n            this.readRadixNumber(16);\n            return;\n          }\n\n          if (next === 111 || next === 79) {\n            this.readRadixNumber(8);\n            return;\n          }\n\n          if (next === 98 || next === 66) {\n            this.readRadixNumber(2);\n            return;\n          }\n        }\n\n      case 49:\n      case 50:\n      case 51:\n      case 52:\n      case 53:\n      case 54:\n      case 55:\n      case 56:\n      case 57:\n        this.readNumber(false);\n        return;\n\n      case 34:\n      case 39:\n        this.readString(code);\n        return;\n\n      case 47:\n        this.readToken_slash();\n        return;\n\n      case 37:\n      case 42:\n        this.readToken_mult_modulo(code);\n        return;\n\n      case 124:\n      case 38:\n        this.readToken_pipe_amp(code);\n        return;\n\n      case 94:\n        this.readToken_caret();\n        return;\n\n      case 43:\n      case 45:\n        this.readToken_plus_min(code);\n        return;\n\n      case 60:\n      case 62:\n        this.readToken_lt_gt(code);\n        return;\n\n      case 61:\n      case 33:\n        this.readToken_eq_excl(code);\n        return;\n\n      case 126:\n        this.finishOp(types.tilde, 1);\n        return;\n\n      case 64:\n        ++this.state.pos;\n        this.finishToken(types.at);\n        return;\n\n      case 35:\n        this.readToken_numberSign();\n        return;\n\n      case 92:\n        this.readWord();\n        return;\n\n      default:\n        if (isIdentifierStart(code)) {\n          this.readWord();\n          return;\n        }\n\n    }\n\n    throw this.raise(this.state.pos, ErrorMessages.InvalidOrUnexpectedToken, String.fromCodePoint(code));\n  }\n\n  finishOp(type, size) {\n    const str = this.input.slice(this.state.pos, this.state.pos + size);\n    this.state.pos += size;\n    this.finishToken(type, str);\n  }\n\n  readRegexp() {\n    const start = this.state.pos;\n    let escaped, inClass;\n\n    for (;;) {\n      if (this.state.pos >= this.length) {\n        throw this.raise(start, ErrorMessages.UnterminatedRegExp);\n      }\n\n      const ch = this.input.charAt(this.state.pos);\n\n      if (lineBreak.test(ch)) {\n        throw this.raise(start, ErrorMessages.UnterminatedRegExp);\n      }\n\n      if (escaped) {\n        escaped = false;\n      } else {\n        if (ch === \"[\") {\n          inClass = true;\n        } else if (ch === \"]\" && inClass) {\n          inClass = false;\n        } else if (ch === \"/\" && !inClass) {\n          break;\n        }\n\n        escaped = ch === \"\\\\\";\n      }\n\n      ++this.state.pos;\n    }\n\n    const content = this.input.slice(start, this.state.pos);\n    ++this.state.pos;\n    let mods = \"\";\n\n    while (this.state.pos < this.length) {\n      const char = this.input[this.state.pos];\n      const charCode = this.input.codePointAt(this.state.pos);\n\n      if (VALID_REGEX_FLAGS.has(char)) {\n        if (mods.indexOf(char) > -1) {\n          this.raise(this.state.pos + 1, ErrorMessages.DuplicateRegExpFlags);\n        }\n      } else if (isIdentifierChar(charCode) || charCode === 92) {\n        this.raise(this.state.pos + 1, ErrorMessages.MalformedRegExpFlags);\n      } else {\n        break;\n      }\n\n      ++this.state.pos;\n      mods += char;\n    }\n\n    this.finishToken(types.regexp, {\n      pattern: content,\n      flags: mods\n    });\n  }\n\n  readInt(radix, len, forceLen, allowNumSeparator = true) {\n    const start = this.state.pos;\n    const forbiddenSiblings = radix === 16 ? forbiddenNumericSeparatorSiblings.hex : forbiddenNumericSeparatorSiblings.decBinOct;\n    const allowedSiblings = radix === 16 ? allowedNumericSeparatorSiblings.hex : radix === 10 ? allowedNumericSeparatorSiblings.dec : radix === 8 ? allowedNumericSeparatorSiblings.oct : allowedNumericSeparatorSiblings.bin;\n    let invalid = false;\n    let total = 0;\n\n    for (let i = 0, e = len == null ? Infinity : len; i < e; ++i) {\n      const code = this.input.charCodeAt(this.state.pos);\n      let val;\n\n      if (code === 95) {\n        const prev = this.input.charCodeAt(this.state.pos - 1);\n        const next = this.input.charCodeAt(this.state.pos + 1);\n\n        if (allowedSiblings.indexOf(next) === -1) {\n          this.raise(this.state.pos, ErrorMessages.UnexpectedNumericSeparator);\n        } else if (forbiddenSiblings.indexOf(prev) > -1 || forbiddenSiblings.indexOf(next) > -1 || Number.isNaN(next)) {\n          this.raise(this.state.pos, ErrorMessages.UnexpectedNumericSeparator);\n        }\n\n        if (!allowNumSeparator) {\n          this.raise(this.state.pos, ErrorMessages.NumericSeparatorInEscapeSequence);\n        }\n\n        ++this.state.pos;\n        continue;\n      }\n\n      if (code >= 97) {\n        val = code - 97 + 10;\n      } else if (code >= 65) {\n        val = code - 65 + 10;\n      } else if (_isDigit(code)) {\n        val = code - 48;\n      } else {\n        val = Infinity;\n      }\n\n      if (val >= radix) {\n        if (this.options.errorRecovery && val <= 9) {\n          val = 0;\n          this.raise(this.state.start + i + 2, ErrorMessages.InvalidDigit, radix);\n        } else if (forceLen) {\n          val = 0;\n          invalid = true;\n        } else {\n          break;\n        }\n      }\n\n      ++this.state.pos;\n      total = total * radix + val;\n    }\n\n    if (this.state.pos === start || len != null && this.state.pos - start !== len || invalid) {\n      return null;\n    }\n\n    return total;\n  }\n\n  readRadixNumber(radix) {\n    const start = this.state.pos;\n    let isBigInt = false;\n    this.state.pos += 2;\n    const val = this.readInt(radix);\n\n    if (val == null) {\n      this.raise(this.state.start + 2, ErrorMessages.InvalidDigit, radix);\n    }\n\n    const next = this.input.charCodeAt(this.state.pos);\n\n    if (next === 110) {\n      ++this.state.pos;\n      isBigInt = true;\n    } else if (next === 109) {\n      throw this.raise(start, ErrorMessages.InvalidDecimal);\n    }\n\n    if (isIdentifierStart(this.input.codePointAt(this.state.pos))) {\n      throw this.raise(this.state.pos, ErrorMessages.NumberIdentifier);\n    }\n\n    if (isBigInt) {\n      const str = this.input.slice(start, this.state.pos).replace(/[_n]/g, \"\");\n      this.finishToken(types.bigint, str);\n      return;\n    }\n\n    this.finishToken(types.num, val);\n  }\n\n  readNumber(startsWithDot) {\n    const start = this.state.pos;\n    let isFloat = false;\n    let isBigInt = false;\n    let isDecimal = false;\n    let hasExponent = false;\n    let isOctal = false;\n\n    if (!startsWithDot && this.readInt(10) === null) {\n      this.raise(start, ErrorMessages.InvalidNumber);\n    }\n\n    const hasLeadingZero = this.state.pos - start >= 2 && this.input.charCodeAt(start) === 48;\n\n    if (hasLeadingZero) {\n      const integer = this.input.slice(start, this.state.pos);\n      this.recordStrictModeErrors(start, ErrorMessages.StrictOctalLiteral);\n\n      if (!this.state.strict) {\n        const underscorePos = integer.indexOf(\"_\");\n\n        if (underscorePos > 0) {\n          this.raise(underscorePos + start, ErrorMessages.ZeroDigitNumericSeparator);\n        }\n      }\n\n      isOctal = hasLeadingZero && !/[89]/.test(integer);\n    }\n\n    let next = this.input.charCodeAt(this.state.pos);\n\n    if (next === 46 && !isOctal) {\n      ++this.state.pos;\n      this.readInt(10);\n      isFloat = true;\n      next = this.input.charCodeAt(this.state.pos);\n    }\n\n    if ((next === 69 || next === 101) && !isOctal) {\n      next = this.input.charCodeAt(++this.state.pos);\n\n      if (next === 43 || next === 45) {\n        ++this.state.pos;\n      }\n\n      if (this.readInt(10) === null) {\n        this.raise(start, ErrorMessages.InvalidOrMissingExponent);\n      }\n\n      isFloat = true;\n      hasExponent = true;\n      next = this.input.charCodeAt(this.state.pos);\n    }\n\n    if (next === 110) {\n      if (isFloat || hasLeadingZero) {\n        this.raise(start, ErrorMessages.InvalidBigIntLiteral);\n      }\n\n      ++this.state.pos;\n      isBigInt = true;\n    }\n\n    if (next === 109) {\n      this.expectPlugin(\"decimal\", this.state.pos);\n\n      if (hasExponent || hasLeadingZero) {\n        this.raise(start, ErrorMessages.InvalidDecimal);\n      }\n\n      ++this.state.pos;\n      isDecimal = true;\n    }\n\n    if (isIdentifierStart(this.input.codePointAt(this.state.pos))) {\n      throw this.raise(this.state.pos, ErrorMessages.NumberIdentifier);\n    }\n\n    const str = this.input.slice(start, this.state.pos).replace(/[_mn]/g, \"\");\n\n    if (isBigInt) {\n      this.finishToken(types.bigint, str);\n      return;\n    }\n\n    if (isDecimal) {\n      this.finishToken(types.decimal, str);\n      return;\n    }\n\n    const val = isOctal ? parseInt(str, 8) : parseFloat(str);\n    this.finishToken(types.num, val);\n  }\n\n  readCodePoint(throwOnInvalid) {\n    const ch = this.input.charCodeAt(this.state.pos);\n    let code;\n\n    if (ch === 123) {\n      const codePos = ++this.state.pos;\n      code = this.readHexChar(this.input.indexOf(\"}\", this.state.pos) - this.state.pos, true, throwOnInvalid);\n      ++this.state.pos;\n\n      if (code !== null && code > 0x10ffff) {\n        if (throwOnInvalid) {\n          this.raise(codePos, ErrorMessages.InvalidCodePoint);\n        } else {\n          return null;\n        }\n      }\n    } else {\n      code = this.readHexChar(4, false, throwOnInvalid);\n    }\n\n    return code;\n  }\n\n  readString(quote) {\n    let out = \"\",\n        chunkStart = ++this.state.pos;\n\n    for (;;) {\n      if (this.state.pos >= this.length) {\n        throw this.raise(this.state.start, ErrorMessages.UnterminatedString);\n      }\n\n      const ch = this.input.charCodeAt(this.state.pos);\n      if (ch === quote) break;\n\n      if (ch === 92) {\n        out += this.input.slice(chunkStart, this.state.pos);\n        out += this.readEscapedChar(false);\n        chunkStart = this.state.pos;\n      } else if (ch === 8232 || ch === 8233) {\n        ++this.state.pos;\n        ++this.state.curLine;\n        this.state.lineStart = this.state.pos;\n      } else if (isNewLine(ch)) {\n        throw this.raise(this.state.start, ErrorMessages.UnterminatedString);\n      } else {\n        ++this.state.pos;\n      }\n    }\n\n    out += this.input.slice(chunkStart, this.state.pos++);\n    this.finishToken(types.string, out);\n  }\n\n  readTmplToken() {\n    let out = \"\",\n        chunkStart = this.state.pos,\n        containsInvalid = false;\n\n    for (;;) {\n      if (this.state.pos >= this.length) {\n        throw this.raise(this.state.start, ErrorMessages.UnterminatedTemplate);\n      }\n\n      const ch = this.input.charCodeAt(this.state.pos);\n\n      if (ch === 96 || ch === 36 && this.input.charCodeAt(this.state.pos + 1) === 123) {\n        if (this.state.pos === this.state.start && this.match(types.template)) {\n          if (ch === 36) {\n            this.state.pos += 2;\n            this.finishToken(types.dollarBraceL);\n            return;\n          } else {\n            ++this.state.pos;\n            this.finishToken(types.backQuote);\n            return;\n          }\n        }\n\n        out += this.input.slice(chunkStart, this.state.pos);\n        this.finishToken(types.template, containsInvalid ? null : out);\n        return;\n      }\n\n      if (ch === 92) {\n        out += this.input.slice(chunkStart, this.state.pos);\n        const escaped = this.readEscapedChar(true);\n\n        if (escaped === null) {\n          containsInvalid = true;\n        } else {\n          out += escaped;\n        }\n\n        chunkStart = this.state.pos;\n      } else if (isNewLine(ch)) {\n        out += this.input.slice(chunkStart, this.state.pos);\n        ++this.state.pos;\n\n        switch (ch) {\n          case 13:\n            if (this.input.charCodeAt(this.state.pos) === 10) {\n              ++this.state.pos;\n            }\n\n          case 10:\n            out += \"\\n\";\n            break;\n\n          default:\n            out += String.fromCharCode(ch);\n            break;\n        }\n\n        ++this.state.curLine;\n        this.state.lineStart = this.state.pos;\n        chunkStart = this.state.pos;\n      } else {\n        ++this.state.pos;\n      }\n    }\n  }\n\n  recordStrictModeErrors(pos, message) {\n    if (this.state.strict && !this.state.strictErrors.has(pos)) {\n      this.raise(pos, message);\n    } else {\n      this.state.strictErrors.set(pos, message);\n    }\n  }\n\n  readEscapedChar(inTemplate) {\n    const throwOnInvalid = !inTemplate;\n    const ch = this.input.charCodeAt(++this.state.pos);\n    ++this.state.pos;\n\n    switch (ch) {\n      case 110:\n        return \"\\n\";\n\n      case 114:\n        return \"\\r\";\n\n      case 120:\n        {\n          const code = this.readHexChar(2, false, throwOnInvalid);\n          return code === null ? null : String.fromCharCode(code);\n        }\n\n      case 117:\n        {\n          const code = this.readCodePoint(throwOnInvalid);\n          return code === null ? null : String.fromCodePoint(code);\n        }\n\n      case 116:\n        return \"\\t\";\n\n      case 98:\n        return \"\\b\";\n\n      case 118:\n        return \"\\u000b\";\n\n      case 102:\n        return \"\\f\";\n\n      case 13:\n        if (this.input.charCodeAt(this.state.pos) === 10) {\n          ++this.state.pos;\n        }\n\n      case 10:\n        this.state.lineStart = this.state.pos;\n        ++this.state.curLine;\n\n      case 8232:\n      case 8233:\n        return \"\";\n\n      case 56:\n      case 57:\n        if (inTemplate) {\n          return null;\n        } else {\n          this.recordStrictModeErrors(this.state.pos - 1, ErrorMessages.StrictNumericEscape);\n        }\n\n      default:\n        if (ch >= 48 && ch <= 55) {\n          const codePos = this.state.pos - 1;\n          const match = this.input.substr(this.state.pos - 1, 3).match(/^[0-7]+/);\n          let octalStr = match[0];\n          let octal = parseInt(octalStr, 8);\n\n          if (octal > 255) {\n            octalStr = octalStr.slice(0, -1);\n            octal = parseInt(octalStr, 8);\n          }\n\n          this.state.pos += octalStr.length - 1;\n          const next = this.input.charCodeAt(this.state.pos);\n\n          if (octalStr !== \"0\" || next === 56 || next === 57) {\n            if (inTemplate) {\n              return null;\n            } else {\n              this.recordStrictModeErrors(codePos, ErrorMessages.StrictNumericEscape);\n            }\n          }\n\n          return String.fromCharCode(octal);\n        }\n\n        return String.fromCharCode(ch);\n    }\n  }\n\n  readHexChar(len, forceLen, throwOnInvalid) {\n    const codePos = this.state.pos;\n    const n = this.readInt(16, len, forceLen, false);\n\n    if (n === null) {\n      if (throwOnInvalid) {\n        this.raise(codePos, ErrorMessages.InvalidEscapeSequence);\n      } else {\n        this.state.pos = codePos - 1;\n      }\n    }\n\n    return n;\n  }\n\n  readWord1() {\n    let word = \"\";\n    this.state.containsEsc = false;\n    const start = this.state.pos;\n    let chunkStart = this.state.pos;\n\n    while (this.state.pos < this.length) {\n      const ch = this.input.codePointAt(this.state.pos);\n\n      if (isIdentifierChar(ch)) {\n        this.state.pos += ch <= 0xffff ? 1 : 2;\n      } else if (this.state.isIterator && ch === 64) {\n        ++this.state.pos;\n      } else if (ch === 92) {\n        this.state.containsEsc = true;\n        word += this.input.slice(chunkStart, this.state.pos);\n        const escStart = this.state.pos;\n        const identifierCheck = this.state.pos === start ? isIdentifierStart : isIdentifierChar;\n\n        if (this.input.charCodeAt(++this.state.pos) !== 117) {\n          this.raise(this.state.pos, ErrorMessages.MissingUnicodeEscape);\n          continue;\n        }\n\n        ++this.state.pos;\n        const esc = this.readCodePoint(true);\n\n        if (esc !== null) {\n          if (!identifierCheck(esc)) {\n            this.raise(escStart, ErrorMessages.EscapedCharNotAnIdentifier);\n          }\n\n          word += String.fromCodePoint(esc);\n        }\n\n        chunkStart = this.state.pos;\n      } else {\n        break;\n      }\n    }\n\n    return word + this.input.slice(chunkStart, this.state.pos);\n  }\n\n  isIterator(word) {\n    return word === \"@@iterator\" || word === \"@@asyncIterator\";\n  }\n\n  readWord() {\n    const word = this.readWord1();\n    const type = keywords.get(word) || types.name;\n\n    if (this.state.isIterator && (!this.isIterator(word) || !this.state.inType)) {\n      this.raise(this.state.pos, ErrorMessages.InvalidIdentifier, word);\n    }\n\n    this.finishToken(type, word);\n  }\n\n  checkKeywordEscapes() {\n    const kw = this.state.type.keyword;\n\n    if (kw && this.state.containsEsc) {\n      this.raise(this.state.start, ErrorMessages.InvalidEscapedReservedWord, kw);\n    }\n  }\n\n  braceIsBlock(prevType) {\n    const parent = this.curContext();\n\n    if (parent === types$1.functionExpression || parent === types$1.functionStatement) {\n      return true;\n    }\n\n    if (prevType === types.colon && (parent === types$1.braceStatement || parent === types$1.braceExpression)) {\n      return !parent.isExpr;\n    }\n\n    if (prevType === types._return || prevType === types.name && this.state.exprAllowed) {\n      return this.hasPrecedingLineBreak();\n    }\n\n    if (prevType === types._else || prevType === types.semi || prevType === types.eof || prevType === types.parenR || prevType === types.arrow) {\n      return true;\n    }\n\n    if (prevType === types.braceL) {\n      return parent === types$1.braceStatement;\n    }\n\n    if (prevType === types._var || prevType === types._const || prevType === types.name) {\n      return false;\n    }\n\n    if (prevType === types.relational) {\n      return true;\n    }\n\n    return !this.state.exprAllowed;\n  }\n\n  updateContext(prevType) {\n    const type = this.state.type;\n    let update;\n\n    if (type.keyword && (prevType === types.dot || prevType === types.questionDot)) {\n      this.state.exprAllowed = false;\n    } else if (update = type.updateContext) {\n      update.call(this, prevType);\n    } else {\n      this.state.exprAllowed = type.beforeExpr;\n    }\n  }\n\n}\n\nclass ClassScope {\n  constructor() {\n    this.privateNames = new Set();\n    this.loneAccessors = new Map();\n    this.undefinedPrivateNames = new Map();\n  }\n\n}\nclass ClassScopeHandler {\n  constructor(raise) {\n    this.stack = [];\n    this.undefinedPrivateNames = new Map();\n    this.raise = raise;\n  }\n\n  current() {\n    return this.stack[this.stack.length - 1];\n  }\n\n  enter() {\n    this.stack.push(new ClassScope());\n  }\n\n  exit() {\n    const oldClassScope = this.stack.pop();\n    const current = this.current();\n\n    for (let _i = 0, _Array$from = Array.from(oldClassScope.undefinedPrivateNames); _i < _Array$from.length; _i++) {\n      const [name, pos] = _Array$from[_i];\n\n      if (current) {\n        if (!current.undefinedPrivateNames.has(name)) {\n          current.undefinedPrivateNames.set(name, pos);\n        }\n      } else {\n        this.raise(pos, ErrorMessages.InvalidPrivateFieldResolution, name);\n      }\n    }\n  }\n\n  declarePrivateName(name, elementType, pos) {\n    const classScope = this.current();\n    let redefined = classScope.privateNames.has(name);\n\n    if (elementType & CLASS_ELEMENT_KIND_ACCESSOR) {\n      const accessor = redefined && classScope.loneAccessors.get(name);\n\n      if (accessor) {\n        const oldStatic = accessor & CLASS_ELEMENT_FLAG_STATIC;\n        const newStatic = elementType & CLASS_ELEMENT_FLAG_STATIC;\n        const oldKind = accessor & CLASS_ELEMENT_KIND_ACCESSOR;\n        const newKind = elementType & CLASS_ELEMENT_KIND_ACCESSOR;\n        redefined = oldKind === newKind || oldStatic !== newStatic;\n        if (!redefined) classScope.loneAccessors.delete(name);\n      } else if (!redefined) {\n        classScope.loneAccessors.set(name, elementType);\n      }\n    }\n\n    if (redefined) {\n      this.raise(pos, ErrorMessages.PrivateNameRedeclaration, name);\n    }\n\n    classScope.privateNames.add(name);\n    classScope.undefinedPrivateNames.delete(name);\n  }\n\n  usePrivateName(name, pos) {\n    let classScope;\n\n    for (let _i2 = 0, _this$stack = this.stack; _i2 < _this$stack.length; _i2++) {\n      classScope = _this$stack[_i2];\n      if (classScope.privateNames.has(name)) return;\n    }\n\n    if (classScope) {\n      classScope.undefinedPrivateNames.set(name, pos);\n    } else {\n      this.raise(pos, ErrorMessages.InvalidPrivateFieldResolution, name);\n    }\n  }\n\n}\n\nconst kExpression = 0,\n      kMaybeArrowParameterDeclaration = 1,\n      kMaybeAsyncArrowParameterDeclaration = 2,\n      kParameterDeclaration = 3;\n\nclass ExpressionScope {\n  constructor(type = kExpression) {\n    this.type = void 0;\n    this.type = type;\n  }\n\n  canBeArrowParameterDeclaration() {\n    return this.type === kMaybeAsyncArrowParameterDeclaration || this.type === kMaybeArrowParameterDeclaration;\n  }\n\n  isCertainlyParameterDeclaration() {\n    return this.type === kParameterDeclaration;\n  }\n\n}\n\nclass ArrowHeadParsingScope extends ExpressionScope {\n  constructor(type) {\n    super(type);\n    this.errors = new Map();\n  }\n\n  recordDeclarationError(pos, message) {\n    this.errors.set(pos, message);\n  }\n\n  clearDeclarationError(pos) {\n    this.errors.delete(pos);\n  }\n\n  iterateErrors(iterator) {\n    this.errors.forEach(iterator);\n  }\n\n}\n\nclass ExpressionScopeHandler {\n  constructor(raise) {\n    this.stack = [new ExpressionScope()];\n    this.raise = raise;\n  }\n\n  enter(scope) {\n    this.stack.push(scope);\n  }\n\n  exit() {\n    this.stack.pop();\n  }\n\n  recordParameterInitializerError(pos, message) {\n    const {\n      stack\n    } = this;\n    let i = stack.length - 1;\n    let scope = stack[i];\n\n    while (!scope.isCertainlyParameterDeclaration()) {\n      if (scope.canBeArrowParameterDeclaration()) {\n        scope.recordDeclarationError(pos, message);\n      } else {\n        return;\n      }\n\n      scope = stack[--i];\n    }\n\n    this.raise(pos, message);\n  }\n\n  recordParenthesizedIdentifierError(pos, message) {\n    const {\n      stack\n    } = this;\n    const scope = stack[stack.length - 1];\n\n    if (scope.isCertainlyParameterDeclaration()) {\n      this.raise(pos, message);\n    } else if (scope.canBeArrowParameterDeclaration()) {\n      scope.recordDeclarationError(pos, message);\n    } else {\n      return;\n    }\n  }\n\n  recordAsyncArrowParametersError(pos, message) {\n    const {\n      stack\n    } = this;\n    let i = stack.length - 1;\n    let scope = stack[i];\n\n    while (scope.canBeArrowParameterDeclaration()) {\n      if (scope.type === kMaybeAsyncArrowParameterDeclaration) {\n        scope.recordDeclarationError(pos, message);\n      }\n\n      scope = stack[--i];\n    }\n  }\n\n  validateAsPattern() {\n    const {\n      stack\n    } = this;\n    const currentScope = stack[stack.length - 1];\n    if (!currentScope.canBeArrowParameterDeclaration()) return;\n    currentScope.iterateErrors((message, pos) => {\n      this.raise(pos, message);\n      let i = stack.length - 2;\n      let scope = stack[i];\n\n      while (scope.canBeArrowParameterDeclaration()) {\n        scope.clearDeclarationError(pos);\n        scope = stack[--i];\n      }\n    });\n  }\n\n}\nfunction newParameterDeclarationScope() {\n  return new ExpressionScope(kParameterDeclaration);\n}\nfunction newArrowHeadScope() {\n  return new ArrowHeadParsingScope(kMaybeArrowParameterDeclaration);\n}\nfunction newAsyncArrowScope() {\n  return new ArrowHeadParsingScope(kMaybeAsyncArrowParameterDeclaration);\n}\nfunction newExpressionScope() {\n  return new ExpressionScope();\n}\n\nclass UtilParser extends Tokenizer {\n  addExtra(node, key, val) {\n    if (!node) return;\n    const extra = node.extra = node.extra || {};\n    extra[key] = val;\n  }\n\n  isRelational(op) {\n    return this.match(types.relational) && this.state.value === op;\n  }\n\n  expectRelational(op) {\n    if (this.isRelational(op)) {\n      this.next();\n    } else {\n      this.unexpected(null, types.relational);\n    }\n  }\n\n  isContextual(name) {\n    return this.match(types.name) && this.state.value === name && !this.state.containsEsc;\n  }\n\n  isUnparsedContextual(nameStart, name) {\n    const nameEnd = nameStart + name.length;\n    return this.input.slice(nameStart, nameEnd) === name && (nameEnd === this.input.length || !isIdentifierChar(this.input.charCodeAt(nameEnd)));\n  }\n\n  isLookaheadContextual(name) {\n    const next = this.nextTokenStart();\n    return this.isUnparsedContextual(next, name);\n  }\n\n  eatContextual(name) {\n    return this.isContextual(name) && this.eat(types.name);\n  }\n\n  expectContextual(name, message) {\n    if (!this.eatContextual(name)) this.unexpected(null, message);\n  }\n\n  canInsertSemicolon() {\n    return this.match(types.eof) || this.match(types.braceR) || this.hasPrecedingLineBreak();\n  }\n\n  hasPrecedingLineBreak() {\n    return lineBreak.test(this.input.slice(this.state.lastTokEnd, this.state.start));\n  }\n\n  hasFollowingLineBreak() {\n    return lineBreak.test(this.input.slice(this.state.end, this.nextTokenStart()));\n  }\n\n  isLineTerminator() {\n    return this.eat(types.semi) || this.canInsertSemicolon();\n  }\n\n  semicolon(allowAsi = true) {\n    if (allowAsi ? this.isLineTerminator() : this.eat(types.semi)) return;\n    this.raise(this.state.lastTokEnd, ErrorMessages.MissingSemicolon);\n  }\n\n  expect(type, pos) {\n    this.eat(type) || this.unexpected(pos, type);\n  }\n\n  assertNoSpace(message = \"Unexpected space.\") {\n    if (this.state.start > this.state.lastTokEnd) {\n      this.raise(this.state.lastTokEnd, message);\n    }\n  }\n\n  unexpected(pos, messageOrType = \"Unexpected token\") {\n    if (typeof messageOrType !== \"string\") {\n      messageOrType = `Unexpected token, expected \"${messageOrType.label}\"`;\n    }\n\n    throw this.raise(pos != null ? pos : this.state.start, messageOrType);\n  }\n\n  expectPlugin(name, pos) {\n    if (!this.hasPlugin(name)) {\n      throw this.raiseWithData(pos != null ? pos : this.state.start, {\n        missingPlugin: [name]\n      }, `This experimental syntax requires enabling the parser plugin: '${name}'`);\n    }\n\n    return true;\n  }\n\n  expectOnePlugin(names, pos) {\n    if (!names.some(n => this.hasPlugin(n))) {\n      throw this.raiseWithData(pos != null ? pos : this.state.start, {\n        missingPlugin: names\n      }, `This experimental syntax requires enabling one of the following parser plugin(s): '${names.join(\", \")}'`);\n    }\n  }\n\n  tryParse(fn, oldState = this.state.clone()) {\n    const abortSignal = {\n      node: null\n    };\n\n    try {\n      const node = fn((node = null) => {\n        abortSignal.node = node;\n        throw abortSignal;\n      });\n\n      if (this.state.errors.length > oldState.errors.length) {\n        const failState = this.state;\n        this.state = oldState;\n        return {\n          node,\n          error: failState.errors[oldState.errors.length],\n          thrown: false,\n          aborted: false,\n          failState\n        };\n      }\n\n      return {\n        node,\n        error: null,\n        thrown: false,\n        aborted: false,\n        failState: null\n      };\n    } catch (error) {\n      const failState = this.state;\n      this.state = oldState;\n\n      if (error instanceof SyntaxError) {\n        return {\n          node: null,\n          error,\n          thrown: true,\n          aborted: false,\n          failState\n        };\n      }\n\n      if (error === abortSignal) {\n        return {\n          node: abortSignal.node,\n          error: null,\n          thrown: false,\n          aborted: true,\n          failState\n        };\n      }\n\n      throw error;\n    }\n  }\n\n  checkExpressionErrors(refExpressionErrors, andThrow) {\n    if (!refExpressionErrors) return false;\n    const {\n      shorthandAssign,\n      doubleProto\n    } = refExpressionErrors;\n    if (!andThrow) return shorthandAssign >= 0 || doubleProto >= 0;\n\n    if (shorthandAssign >= 0) {\n      this.unexpected(shorthandAssign);\n    }\n\n    if (doubleProto >= 0) {\n      this.raise(doubleProto, ErrorMessages.DuplicateProto);\n    }\n  }\n\n  isLiteralPropertyName() {\n    return this.match(types.name) || !!this.state.type.keyword || this.match(types.string) || this.match(types.num) || this.match(types.bigint) || this.match(types.decimal);\n  }\n\n  isPrivateName(node) {\n    return node.type === \"PrivateName\";\n  }\n\n  getPrivateNameSV(node) {\n    return node.id.name;\n  }\n\n  hasPropertyAsPrivateName(node) {\n    return (node.type === \"MemberExpression\" || node.type === \"OptionalMemberExpression\") && this.isPrivateName(node.property);\n  }\n\n  isOptionalChain(node) {\n    return node.type === \"OptionalMemberExpression\" || node.type === \"OptionalCallExpression\";\n  }\n\n  isObjectProperty(node) {\n    return node.type === \"ObjectProperty\";\n  }\n\n  isObjectMethod(node) {\n    return node.type === \"ObjectMethod\";\n  }\n\n  initializeScopes(inModule = this.options.sourceType === \"module\") {\n    const oldLabels = this.state.labels;\n    this.state.labels = [];\n    const oldExportedIdentifiers = this.state.exportedIdentifiers;\n    this.state.exportedIdentifiers = [];\n    const oldInModule = this.inModule;\n    this.inModule = inModule;\n    const oldScope = this.scope;\n    const ScopeHandler = this.getScopeHandler();\n    this.scope = new ScopeHandler(this.raise.bind(this), this.inModule);\n    const oldProdParam = this.prodParam;\n    this.prodParam = new ProductionParameterHandler();\n    const oldClassScope = this.classScope;\n    this.classScope = new ClassScopeHandler(this.raise.bind(this));\n    const oldExpressionScope = this.expressionScope;\n    this.expressionScope = new ExpressionScopeHandler(this.raise.bind(this));\n    return () => {\n      this.state.labels = oldLabels;\n      this.state.exportedIdentifiers = oldExportedIdentifiers;\n      this.inModule = oldInModule;\n      this.scope = oldScope;\n      this.prodParam = oldProdParam;\n      this.classScope = oldClassScope;\n      this.expressionScope = oldExpressionScope;\n    };\n  }\n\n  enterInitialScopes() {\n    let paramFlags = PARAM;\n\n    if (this.hasPlugin(\"topLevelAwait\") && this.inModule) {\n      paramFlags |= PARAM_AWAIT;\n    }\n\n    this.scope.enter(SCOPE_PROGRAM);\n    this.prodParam.enter(paramFlags);\n  }\n\n}\nclass ExpressionErrors {\n  constructor() {\n    this.shorthandAssign = -1;\n    this.doubleProto = -1;\n  }\n\n}\n\nclass Node {\n  constructor(parser, pos, loc) {\n    this.type = void 0;\n    this.start = void 0;\n    this.end = void 0;\n    this.loc = void 0;\n    this.range = void 0;\n    this.leadingComments = void 0;\n    this.trailingComments = void 0;\n    this.innerComments = void 0;\n    this.extra = void 0;\n    this.type = \"\";\n    this.start = pos;\n    this.end = 0;\n    this.loc = new SourceLocation(loc);\n    if (parser == null ? void 0 : parser.options.ranges) this.range = [pos, 0];\n    if (parser == null ? void 0 : parser.filename) this.loc.filename = parser.filename;\n  }\n\n  __clone() {\n    const newNode = new Node();\n    const keys = Object.keys(this);\n\n    for (let i = 0, length = keys.length; i < length; i++) {\n      const key = keys[i];\n\n      if (key !== \"leadingComments\" && key !== \"trailingComments\" && key !== \"innerComments\") {\n        newNode[key] = this[key];\n      }\n    }\n\n    return newNode;\n  }\n\n}\n\nclass NodeUtils extends UtilParser {\n  startNode() {\n    return new Node(this, this.state.start, this.state.startLoc);\n  }\n\n  startNodeAt(pos, loc) {\n    return new Node(this, pos, loc);\n  }\n\n  startNodeAtNode(type) {\n    return this.startNodeAt(type.start, type.loc.start);\n  }\n\n  finishNode(node, type) {\n    return this.finishNodeAt(node, type, this.state.lastTokEnd, this.state.lastTokEndLoc);\n  }\n\n  finishNodeAt(node, type, pos, loc) {\n\n    node.type = type;\n    node.end = pos;\n    node.loc.end = loc;\n    if (this.options.ranges) node.range[1] = pos;\n    this.processComment(node);\n    return node;\n  }\n\n  resetStartLocation(node, start, startLoc) {\n    node.start = start;\n    node.loc.start = startLoc;\n    if (this.options.ranges) node.range[0] = start;\n  }\n\n  resetEndLocation(node, end = this.state.lastTokEnd, endLoc = this.state.lastTokEndLoc) {\n    node.end = end;\n    node.loc.end = endLoc;\n    if (this.options.ranges) node.range[1] = end;\n  }\n\n  resetStartLocationFromNode(node, locationNode) {\n    this.resetStartLocation(node, locationNode.start, locationNode.loc.start);\n  }\n\n}\n\nconst unwrapParenthesizedExpression = node => {\n  return node.type === \"ParenthesizedExpression\" ? unwrapParenthesizedExpression(node.expression) : node;\n};\n\nclass LValParser extends NodeUtils {\n  toAssignable(node, isLHS = false) {\n    var _node$extra, _node$extra3;\n\n    let parenthesized = undefined;\n\n    if (node.type === \"ParenthesizedExpression\" || ((_node$extra = node.extra) == null ? void 0 : _node$extra.parenthesized)) {\n      parenthesized = unwrapParenthesizedExpression(node);\n\n      if (isLHS) {\n        if (parenthesized.type === \"Identifier\") {\n          this.expressionScope.recordParenthesizedIdentifierError(node.start, ErrorMessages.InvalidParenthesizedAssignment);\n        } else if (parenthesized.type !== \"MemberExpression\") {\n          this.raise(node.start, ErrorMessages.InvalidParenthesizedAssignment);\n        }\n      } else {\n        this.raise(node.start, ErrorMessages.InvalidParenthesizedAssignment);\n      }\n    }\n\n    switch (node.type) {\n      case \"Identifier\":\n      case \"ObjectPattern\":\n      case \"ArrayPattern\":\n      case \"AssignmentPattern\":\n        break;\n\n      case \"ObjectExpression\":\n        node.type = \"ObjectPattern\";\n\n        for (let i = 0, length = node.properties.length, last = length - 1; i < length; i++) {\n          var _node$extra2;\n\n          const prop = node.properties[i];\n          const isLast = i === last;\n          this.toAssignableObjectExpressionProp(prop, isLast, isLHS);\n\n          if (isLast && prop.type === \"RestElement\" && ((_node$extra2 = node.extra) == null ? void 0 : _node$extra2.trailingComma)) {\n            this.raiseRestNotLast(node.extra.trailingComma);\n          }\n        }\n\n        break;\n\n      case \"ObjectProperty\":\n        this.toAssignable(node.value, isLHS);\n        break;\n\n      case \"SpreadElement\":\n        {\n          this.checkToRestConversion(node);\n          node.type = \"RestElement\";\n          const arg = node.argument;\n          this.toAssignable(arg, isLHS);\n          break;\n        }\n\n      case \"ArrayExpression\":\n        node.type = \"ArrayPattern\";\n        this.toAssignableList(node.elements, (_node$extra3 = node.extra) == null ? void 0 : _node$extra3.trailingComma, isLHS);\n        break;\n\n      case \"AssignmentExpression\":\n        if (node.operator !== \"=\") {\n          this.raise(node.left.end, ErrorMessages.MissingEqInAssignment);\n        }\n\n        node.type = \"AssignmentPattern\";\n        delete node.operator;\n        this.toAssignable(node.left, isLHS);\n        break;\n\n      case \"ParenthesizedExpression\":\n        this.toAssignable(parenthesized, isLHS);\n        break;\n    }\n\n    return node;\n  }\n\n  toAssignableObjectExpressionProp(prop, isLast, isLHS) {\n    if (prop.type === \"ObjectMethod\") {\n      const error = prop.kind === \"get\" || prop.kind === \"set\" ? ErrorMessages.PatternHasAccessor : ErrorMessages.PatternHasMethod;\n      this.raise(prop.key.start, error);\n    } else if (prop.type === \"SpreadElement\" && !isLast) {\n      this.raiseRestNotLast(prop.start);\n    } else {\n      this.toAssignable(prop, isLHS);\n    }\n  }\n\n  toAssignableList(exprList, trailingCommaPos, isLHS) {\n    let end = exprList.length;\n\n    if (end) {\n      const last = exprList[end - 1];\n\n      if ((last == null ? void 0 : last.type) === \"RestElement\") {\n        --end;\n      } else if ((last == null ? void 0 : last.type) === \"SpreadElement\") {\n        last.type = \"RestElement\";\n        let arg = last.argument;\n        this.toAssignable(arg, isLHS);\n        arg = unwrapParenthesizedExpression(arg);\n\n        if (arg.type !== \"Identifier\" && arg.type !== \"MemberExpression\" && arg.type !== \"ArrayPattern\" && arg.type !== \"ObjectPattern\") {\n          this.unexpected(arg.start);\n        }\n\n        if (trailingCommaPos) {\n          this.raiseTrailingCommaAfterRest(trailingCommaPos);\n        }\n\n        --end;\n      }\n    }\n\n    for (let i = 0; i < end; i++) {\n      const elt = exprList[i];\n\n      if (elt) {\n        this.toAssignable(elt, isLHS);\n\n        if (elt.type === \"RestElement\") {\n          this.raiseRestNotLast(elt.start);\n        }\n      }\n    }\n\n    return exprList;\n  }\n\n  toReferencedList(exprList, isParenthesizedExpr) {\n    return exprList;\n  }\n\n  toReferencedListDeep(exprList, isParenthesizedExpr) {\n    this.toReferencedList(exprList, isParenthesizedExpr);\n\n    for (let _i = 0; _i < exprList.length; _i++) {\n      const expr = exprList[_i];\n\n      if ((expr == null ? void 0 : expr.type) === \"ArrayExpression\") {\n        this.toReferencedListDeep(expr.elements);\n      }\n    }\n  }\n\n  parseSpread(refExpressionErrors, refNeedsArrowPos) {\n    const node = this.startNode();\n    this.next();\n    node.argument = this.parseMaybeAssignAllowIn(refExpressionErrors, undefined, refNeedsArrowPos);\n    return this.finishNode(node, \"SpreadElement\");\n  }\n\n  parseRestBinding() {\n    const node = this.startNode();\n    this.next();\n    node.argument = this.parseBindingAtom();\n    return this.finishNode(node, \"RestElement\");\n  }\n\n  parseBindingAtom() {\n    switch (this.state.type) {\n      case types.bracketL:\n        {\n          const node = this.startNode();\n          this.next();\n          node.elements = this.parseBindingList(types.bracketR, 93, true);\n          return this.finishNode(node, \"ArrayPattern\");\n        }\n\n      case types.braceL:\n        return this.parseObjectLike(types.braceR, true);\n    }\n\n    return this.parseIdentifier();\n  }\n\n  parseBindingList(close, closeCharCode, allowEmpty, allowModifiers) {\n    const elts = [];\n    let first = true;\n\n    while (!this.eat(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(types.comma);\n      }\n\n      if (allowEmpty && this.match(types.comma)) {\n        elts.push(null);\n      } else if (this.eat(close)) {\n        break;\n      } else if (this.match(types.ellipsis)) {\n        elts.push(this.parseAssignableListItemTypes(this.parseRestBinding()));\n        this.checkCommaAfterRest(closeCharCode);\n        this.expect(close);\n        break;\n      } else {\n        const decorators = [];\n\n        if (this.match(types.at) && this.hasPlugin(\"decorators\")) {\n          this.raise(this.state.start, ErrorMessages.UnsupportedParameterDecorator);\n        }\n\n        while (this.match(types.at)) {\n          decorators.push(this.parseDecorator());\n        }\n\n        elts.push(this.parseAssignableListItem(allowModifiers, decorators));\n      }\n    }\n\n    return elts;\n  }\n\n  parseAssignableListItem(allowModifiers, decorators) {\n    const left = this.parseMaybeDefault();\n    this.parseAssignableListItemTypes(left);\n    const elt = this.parseMaybeDefault(left.start, left.loc.start, left);\n\n    if (decorators.length) {\n      left.decorators = decorators;\n    }\n\n    return elt;\n  }\n\n  parseAssignableListItemTypes(param) {\n    return param;\n  }\n\n  parseMaybeDefault(startPos, startLoc, left) {\n    var _startLoc, _startPos, _left;\n\n    startLoc = (_startLoc = startLoc) != null ? _startLoc : this.state.startLoc;\n    startPos = (_startPos = startPos) != null ? _startPos : this.state.start;\n    left = (_left = left) != null ? _left : this.parseBindingAtom();\n    if (!this.eat(types.eq)) return left;\n    const node = this.startNodeAt(startPos, startLoc);\n    node.left = left;\n    node.right = this.parseMaybeAssignAllowIn();\n    return this.finishNode(node, \"AssignmentPattern\");\n  }\n\n  checkLVal(expr, contextDescription, bindingType = BIND_NONE, checkClashes, disallowLetBinding, strictModeChanged = false) {\n    switch (expr.type) {\n      case \"Identifier\":\n        {\n          const {\n            name\n          } = expr;\n\n          if (this.state.strict && (strictModeChanged ? isStrictBindReservedWord(name, this.inModule) : isStrictBindOnlyReservedWord(name))) {\n            this.raise(expr.start, bindingType === BIND_NONE ? ErrorMessages.StrictEvalArguments : ErrorMessages.StrictEvalArgumentsBinding, name);\n          }\n\n          if (checkClashes) {\n            if (checkClashes.has(name)) {\n              this.raise(expr.start, ErrorMessages.ParamDupe);\n            } else {\n              checkClashes.add(name);\n            }\n          }\n\n          if (disallowLetBinding && name === \"let\") {\n            this.raise(expr.start, ErrorMessages.LetInLexicalBinding);\n          }\n\n          if (!(bindingType & BIND_NONE)) {\n            this.scope.declareName(name, bindingType, expr.start);\n          }\n\n          break;\n        }\n\n      case \"MemberExpression\":\n        if (bindingType !== BIND_NONE) {\n          this.raise(expr.start, ErrorMessages.InvalidPropertyBindingPattern);\n        }\n\n        break;\n\n      case \"ObjectPattern\":\n        for (let _i2 = 0, _expr$properties = expr.properties; _i2 < _expr$properties.length; _i2++) {\n          let prop = _expr$properties[_i2];\n          if (this.isObjectProperty(prop)) prop = prop.value;else if (this.isObjectMethod(prop)) continue;\n          this.checkLVal(prop, \"object destructuring pattern\", bindingType, checkClashes, disallowLetBinding);\n        }\n\n        break;\n\n      case \"ArrayPattern\":\n        for (let _i3 = 0, _expr$elements = expr.elements; _i3 < _expr$elements.length; _i3++) {\n          const elem = _expr$elements[_i3];\n\n          if (elem) {\n            this.checkLVal(elem, \"array destructuring pattern\", bindingType, checkClashes, disallowLetBinding);\n          }\n        }\n\n        break;\n\n      case \"AssignmentPattern\":\n        this.checkLVal(expr.left, \"assignment pattern\", bindingType, checkClashes);\n        break;\n\n      case \"RestElement\":\n        this.checkLVal(expr.argument, \"rest element\", bindingType, checkClashes);\n        break;\n\n      case \"ParenthesizedExpression\":\n        this.checkLVal(expr.expression, \"parenthesized expression\", bindingType, checkClashes);\n        break;\n\n      default:\n        {\n          this.raise(expr.start, bindingType === BIND_NONE ? ErrorMessages.InvalidLhs : ErrorMessages.InvalidLhsBinding, contextDescription);\n        }\n    }\n  }\n\n  checkToRestConversion(node) {\n    if (node.argument.type !== \"Identifier\" && node.argument.type !== \"MemberExpression\") {\n      this.raise(node.argument.start, ErrorMessages.InvalidRestAssignmentPattern);\n    }\n  }\n\n  checkCommaAfterRest(close) {\n    if (this.match(types.comma)) {\n      if (this.lookaheadCharCode() === close) {\n        this.raiseTrailingCommaAfterRest(this.state.start);\n      } else {\n        this.raiseRestNotLast(this.state.start);\n      }\n    }\n  }\n\n  raiseRestNotLast(pos) {\n    throw this.raise(pos, ErrorMessages.ElementAfterRest);\n  }\n\n  raiseTrailingCommaAfterRest(pos) {\n    this.raise(pos, ErrorMessages.RestTrailingComma);\n  }\n\n}\n\nclass ExpressionParser extends LValParser {\n  checkProto(prop, isRecord, protoRef, refExpressionErrors) {\n    if (prop.type === \"SpreadElement\" || this.isObjectMethod(prop) || prop.computed || prop.shorthand) {\n      return;\n    }\n\n    const key = prop.key;\n    const name = key.type === \"Identifier\" ? key.name : key.value;\n\n    if (name === \"__proto__\") {\n      if (isRecord) {\n        this.raise(key.start, ErrorMessages.RecordNoProto);\n        return;\n      }\n\n      if (protoRef.used) {\n        if (refExpressionErrors) {\n          if (refExpressionErrors.doubleProto === -1) {\n            refExpressionErrors.doubleProto = key.start;\n          }\n        } else {\n          this.raise(key.start, ErrorMessages.DuplicateProto);\n        }\n      }\n\n      protoRef.used = true;\n    }\n  }\n\n  shouldExitDescending(expr, potentialArrowAt) {\n    return expr.type === \"ArrowFunctionExpression\" && expr.start === potentialArrowAt;\n  }\n\n  getExpression() {\n    let paramFlags = PARAM;\n\n    if (this.hasPlugin(\"topLevelAwait\") && this.inModule) {\n      paramFlags |= PARAM_AWAIT;\n    }\n\n    this.scope.enter(SCOPE_PROGRAM);\n    this.prodParam.enter(paramFlags);\n    this.nextToken();\n    const expr = this.parseExpression();\n\n    if (!this.match(types.eof)) {\n      this.unexpected();\n    }\n\n    expr.comments = this.state.comments;\n    expr.errors = this.state.errors;\n    return expr;\n  }\n\n  parseExpression(disallowIn, refExpressionErrors) {\n    if (disallowIn) {\n      return this.disallowInAnd(() => this.parseExpressionBase(refExpressionErrors));\n    }\n\n    return this.allowInAnd(() => this.parseExpressionBase(refExpressionErrors));\n  }\n\n  parseExpressionBase(refExpressionErrors) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const expr = this.parseMaybeAssign(refExpressionErrors);\n\n    if (this.match(types.comma)) {\n      const node = this.startNodeAt(startPos, startLoc);\n      node.expressions = [expr];\n\n      while (this.eat(types.comma)) {\n        node.expressions.push(this.parseMaybeAssign(refExpressionErrors));\n      }\n\n      this.toReferencedList(node.expressions);\n      return this.finishNode(node, \"SequenceExpression\");\n    }\n\n    return expr;\n  }\n\n  parseMaybeAssignDisallowIn(refExpressionErrors, afterLeftParse, refNeedsArrowPos) {\n    return this.disallowInAnd(() => this.parseMaybeAssign(refExpressionErrors, afterLeftParse, refNeedsArrowPos));\n  }\n\n  parseMaybeAssignAllowIn(refExpressionErrors, afterLeftParse, refNeedsArrowPos) {\n    return this.allowInAnd(() => this.parseMaybeAssign(refExpressionErrors, afterLeftParse, refNeedsArrowPos));\n  }\n\n  parseMaybeAssign(refExpressionErrors, afterLeftParse, refNeedsArrowPos) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n\n    if (this.isContextual(\"yield\")) {\n      if (this.prodParam.hasYield) {\n        this.state.exprAllowed = true;\n        let left = this.parseYield();\n\n        if (afterLeftParse) {\n          left = afterLeftParse.call(this, left, startPos, startLoc);\n        }\n\n        return left;\n      }\n    }\n\n    let ownExpressionErrors;\n\n    if (refExpressionErrors) {\n      ownExpressionErrors = false;\n    } else {\n      refExpressionErrors = new ExpressionErrors();\n      ownExpressionErrors = true;\n    }\n\n    if (this.match(types.parenL) || this.match(types.name)) {\n      this.state.potentialArrowAt = this.state.start;\n    }\n\n    let left = this.parseMaybeConditional(refExpressionErrors, refNeedsArrowPos);\n\n    if (afterLeftParse) {\n      left = afterLeftParse.call(this, left, startPos, startLoc);\n    }\n\n    if (this.state.type.isAssign) {\n      const node = this.startNodeAt(startPos, startLoc);\n      const operator = this.state.value;\n      node.operator = operator;\n\n      if (this.match(types.eq)) {\n        node.left = this.toAssignable(left, true);\n        refExpressionErrors.doubleProto = -1;\n      } else {\n        node.left = left;\n      }\n\n      if (refExpressionErrors.shorthandAssign >= node.left.start) {\n        refExpressionErrors.shorthandAssign = -1;\n      }\n\n      this.checkLVal(left, \"assignment expression\");\n      this.next();\n      node.right = this.parseMaybeAssign();\n      return this.finishNode(node, \"AssignmentExpression\");\n    } else if (ownExpressionErrors) {\n      this.checkExpressionErrors(refExpressionErrors, true);\n    }\n\n    return left;\n  }\n\n  parseMaybeConditional(refExpressionErrors, refNeedsArrowPos) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const potentialArrowAt = this.state.potentialArrowAt;\n    const expr = this.parseExprOps(refExpressionErrors);\n\n    if (this.shouldExitDescending(expr, potentialArrowAt)) {\n      return expr;\n    }\n\n    return this.parseConditional(expr, startPos, startLoc, refNeedsArrowPos);\n  }\n\n  parseConditional(expr, startPos, startLoc, refNeedsArrowPos) {\n    if (this.eat(types.question)) {\n      const node = this.startNodeAt(startPos, startLoc);\n      node.test = expr;\n      node.consequent = this.parseMaybeAssignAllowIn();\n      this.expect(types.colon);\n      node.alternate = this.parseMaybeAssign();\n      return this.finishNode(node, \"ConditionalExpression\");\n    }\n\n    return expr;\n  }\n\n  parseExprOps(refExpressionErrors) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const potentialArrowAt = this.state.potentialArrowAt;\n    const expr = this.parseMaybeUnary(refExpressionErrors);\n\n    if (this.shouldExitDescending(expr, potentialArrowAt)) {\n      return expr;\n    }\n\n    return this.parseExprOp(expr, startPos, startLoc, -1);\n  }\n\n  parseExprOp(left, leftStartPos, leftStartLoc, minPrec) {\n    let prec = this.state.type.binop;\n\n    if (prec != null && (this.prodParam.hasIn || !this.match(types._in))) {\n      if (prec > minPrec) {\n        const op = this.state.type;\n\n        if (op === types.pipeline) {\n          this.expectPlugin(\"pipelineOperator\");\n\n          if (this.state.inFSharpPipelineDirectBody) {\n            return left;\n          }\n\n          this.state.inPipeline = true;\n          this.checkPipelineAtInfixOperator(left, leftStartPos);\n        }\n\n        const node = this.startNodeAt(leftStartPos, leftStartLoc);\n        node.left = left;\n        node.operator = this.state.value;\n\n        if (op === types.exponent && left.type === \"UnaryExpression\" && (this.options.createParenthesizedExpressions || !(left.extra && left.extra.parenthesized))) {\n          this.raise(left.argument.start, ErrorMessages.UnexpectedTokenUnaryExponentiation);\n        }\n\n        const logical = op === types.logicalOR || op === types.logicalAND;\n        const coalesce = op === types.nullishCoalescing;\n\n        if (coalesce) {\n          prec = types.logicalAND.binop;\n        }\n\n        this.next();\n\n        if (op === types.pipeline && this.getPluginOption(\"pipelineOperator\", \"proposal\") === \"minimal\") {\n          if (this.match(types.name) && this.state.value === \"await\" && this.prodParam.hasAwait) {\n            throw this.raise(this.state.start, ErrorMessages.UnexpectedAwaitAfterPipelineBody);\n          }\n        }\n\n        node.right = this.parseExprOpRightExpr(op, prec);\n        this.finishNode(node, logical || coalesce ? \"LogicalExpression\" : \"BinaryExpression\");\n        const nextOp = this.state.type;\n\n        if (coalesce && (nextOp === types.logicalOR || nextOp === types.logicalAND) || logical && nextOp === types.nullishCoalescing) {\n          throw this.raise(this.state.start, ErrorMessages.MixingCoalesceWithLogical);\n        }\n\n        return this.parseExprOp(node, leftStartPos, leftStartLoc, minPrec);\n      }\n    }\n\n    return left;\n  }\n\n  parseExprOpRightExpr(op, prec) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n\n    switch (op) {\n      case types.pipeline:\n        switch (this.getPluginOption(\"pipelineOperator\", \"proposal\")) {\n          case \"smart\":\n            return this.withTopicPermittingContext(() => {\n              return this.parseSmartPipelineBody(this.parseExprOpBaseRightExpr(op, prec), startPos, startLoc);\n            });\n\n          case \"fsharp\":\n            return this.withSoloAwaitPermittingContext(() => {\n              return this.parseFSharpPipelineBody(prec);\n            });\n        }\n\n      default:\n        return this.parseExprOpBaseRightExpr(op, prec);\n    }\n  }\n\n  parseExprOpBaseRightExpr(op, prec) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    return this.parseExprOp(this.parseMaybeUnary(), startPos, startLoc, op.rightAssociative ? prec - 1 : prec);\n  }\n\n  parseMaybeUnary(refExpressionErrors) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const isAwait = this.isContextual(\"await\");\n\n    if (isAwait && this.isAwaitAllowed()) {\n      this.next();\n      return this.parseAwait(startPos, startLoc);\n    }\n\n    if (this.isContextual(\"module\") && this.lookaheadCharCode() === 123 && !this.hasFollowingLineBreak()) {\n      return this.parseModuleExpression();\n    }\n\n    const update = this.match(types.incDec);\n    const node = this.startNode();\n\n    if (this.state.type.prefix) {\n      node.operator = this.state.value;\n      node.prefix = true;\n\n      if (this.match(types._throw)) {\n        this.expectPlugin(\"throwExpressions\");\n      }\n\n      const isDelete = this.match(types._delete);\n      this.next();\n      node.argument = this.parseMaybeUnary();\n      this.checkExpressionErrors(refExpressionErrors, true);\n\n      if (this.state.strict && isDelete) {\n        const arg = node.argument;\n\n        if (arg.type === \"Identifier\") {\n          this.raise(node.start, ErrorMessages.StrictDelete);\n        } else if (this.hasPropertyAsPrivateName(arg)) {\n          this.raise(node.start, ErrorMessages.DeletePrivateField);\n        }\n      }\n\n      if (!update) {\n        return this.finishNode(node, \"UnaryExpression\");\n      }\n    }\n\n    const expr = this.parseUpdate(node, update, refExpressionErrors);\n\n    if (isAwait) {\n      const startsExpr = this.hasPlugin(\"v8intrinsic\") ? this.state.type.startsExpr : this.state.type.startsExpr && !this.match(types.modulo);\n\n      if (startsExpr && !this.isAmbiguousAwait()) {\n        this.raiseOverwrite(startPos, this.hasPlugin(\"topLevelAwait\") ? ErrorMessages.AwaitNotInAsyncContext : ErrorMessages.AwaitNotInAsyncFunction);\n        return this.parseAwait(startPos, startLoc);\n      }\n    }\n\n    return expr;\n  }\n\n  parseUpdate(node, update, refExpressionErrors) {\n    if (update) {\n      this.checkLVal(node.argument, \"prefix operation\");\n      return this.finishNode(node, \"UpdateExpression\");\n    }\n\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    let expr = this.parseExprSubscripts(refExpressionErrors);\n    if (this.checkExpressionErrors(refExpressionErrors, false)) return expr;\n\n    while (this.state.type.postfix && !this.canInsertSemicolon()) {\n      const node = this.startNodeAt(startPos, startLoc);\n      node.operator = this.state.value;\n      node.prefix = false;\n      node.argument = expr;\n      this.checkLVal(expr, \"postfix operation\");\n      this.next();\n      expr = this.finishNode(node, \"UpdateExpression\");\n    }\n\n    return expr;\n  }\n\n  parseExprSubscripts(refExpressionErrors) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const potentialArrowAt = this.state.potentialArrowAt;\n    const expr = this.parseExprAtom(refExpressionErrors);\n\n    if (this.shouldExitDescending(expr, potentialArrowAt)) {\n      return expr;\n    }\n\n    return this.parseSubscripts(expr, startPos, startLoc);\n  }\n\n  parseSubscripts(base, startPos, startLoc, noCalls) {\n    const state = {\n      optionalChainMember: false,\n      maybeAsyncArrow: this.atPossibleAsyncArrow(base),\n      stop: false\n    };\n\n    do {\n      base = this.parseSubscript(base, startPos, startLoc, noCalls, state);\n      state.maybeAsyncArrow = false;\n    } while (!state.stop);\n\n    return base;\n  }\n\n  parseSubscript(base, startPos, startLoc, noCalls, state) {\n    if (!noCalls && this.eat(types.doubleColon)) {\n      return this.parseBind(base, startPos, startLoc, noCalls, state);\n    } else if (this.match(types.backQuote)) {\n      return this.parseTaggedTemplateExpression(base, startPos, startLoc, state);\n    }\n\n    let optional = false;\n\n    if (this.match(types.questionDot)) {\n      if (noCalls && this.lookaheadCharCode() === 40) {\n        state.stop = true;\n        return base;\n      }\n\n      state.optionalChainMember = optional = true;\n      this.next();\n    }\n\n    if (!noCalls && this.match(types.parenL)) {\n      return this.parseCoverCallAndAsyncArrowHead(base, startPos, startLoc, state, optional);\n    } else if (optional || this.match(types.bracketL) || this.eat(types.dot)) {\n      return this.parseMember(base, startPos, startLoc, state, optional);\n    } else {\n      state.stop = true;\n      return base;\n    }\n  }\n\n  parseMember(base, startPos, startLoc, state, optional) {\n    const node = this.startNodeAt(startPos, startLoc);\n    const computed = this.eat(types.bracketL);\n    node.object = base;\n    node.computed = computed;\n    const property = computed ? this.parseExpression() : this.parseMaybePrivateName(true);\n\n    if (this.isPrivateName(property)) {\n      if (node.object.type === \"Super\") {\n        this.raise(startPos, ErrorMessages.SuperPrivateField);\n      }\n\n      this.classScope.usePrivateName(this.getPrivateNameSV(property), property.start);\n    }\n\n    node.property = property;\n\n    if (computed) {\n      this.expect(types.bracketR);\n    }\n\n    if (state.optionalChainMember) {\n      node.optional = optional;\n      return this.finishNode(node, \"OptionalMemberExpression\");\n    } else {\n      return this.finishNode(node, \"MemberExpression\");\n    }\n  }\n\n  parseBind(base, startPos, startLoc, noCalls, state) {\n    const node = this.startNodeAt(startPos, startLoc);\n    node.object = base;\n    node.callee = this.parseNoCallExpr();\n    state.stop = true;\n    return this.parseSubscripts(this.finishNode(node, \"BindExpression\"), startPos, startLoc, noCalls);\n  }\n\n  parseCoverCallAndAsyncArrowHead(base, startPos, startLoc, state, optional) {\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n    this.state.maybeInArrowParameters = true;\n    this.next();\n    let node = this.startNodeAt(startPos, startLoc);\n    node.callee = base;\n\n    if (state.maybeAsyncArrow) {\n      this.expressionScope.enter(newAsyncArrowScope());\n    }\n\n    if (state.optionalChainMember) {\n      node.optional = optional;\n    }\n\n    if (optional) {\n      node.arguments = this.parseCallExpressionArguments(types.parenR, false);\n    } else {\n      node.arguments = this.parseCallExpressionArguments(types.parenR, state.maybeAsyncArrow, base.type === \"Import\", base.type !== \"Super\", node);\n    }\n\n    this.finishCallExpression(node, state.optionalChainMember);\n\n    if (state.maybeAsyncArrow && this.shouldParseAsyncArrow() && !optional) {\n      state.stop = true;\n      this.expressionScope.validateAsPattern();\n      this.expressionScope.exit();\n      node = this.parseAsyncArrowFromCallExpression(this.startNodeAt(startPos, startLoc), node);\n    } else {\n      if (state.maybeAsyncArrow) {\n        this.expressionScope.exit();\n      }\n\n      this.toReferencedArguments(node);\n    }\n\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n    return node;\n  }\n\n  toReferencedArguments(node, isParenthesizedExpr) {\n    this.toReferencedListDeep(node.arguments, isParenthesizedExpr);\n  }\n\n  parseTaggedTemplateExpression(base, startPos, startLoc, state) {\n    const node = this.startNodeAt(startPos, startLoc);\n    node.tag = base;\n    node.quasi = this.parseTemplate(true);\n\n    if (state.optionalChainMember) {\n      this.raise(startPos, ErrorMessages.OptionalChainingNoTemplate);\n    }\n\n    return this.finishNode(node, \"TaggedTemplateExpression\");\n  }\n\n  atPossibleAsyncArrow(base) {\n    return base.type === \"Identifier\" && base.name === \"async\" && this.state.lastTokEnd === base.end && !this.canInsertSemicolon() && base.end - base.start === 5 && base.start === this.state.potentialArrowAt;\n  }\n\n  finishCallExpression(node, optional) {\n    if (node.callee.type === \"Import\") {\n      if (node.arguments.length === 2) {\n        if (!this.hasPlugin(\"moduleAttributes\")) {\n          this.expectPlugin(\"importAssertions\");\n        }\n      }\n\n      if (node.arguments.length === 0 || node.arguments.length > 2) {\n        this.raise(node.start, ErrorMessages.ImportCallArity, this.hasPlugin(\"importAssertions\") || this.hasPlugin(\"moduleAttributes\") ? \"one or two arguments\" : \"one argument\");\n      } else {\n        for (let _i = 0, _node$arguments = node.arguments; _i < _node$arguments.length; _i++) {\n          const arg = _node$arguments[_i];\n\n          if (arg.type === \"SpreadElement\") {\n            this.raise(arg.start, ErrorMessages.ImportCallSpreadArgument);\n          }\n        }\n      }\n    }\n\n    return this.finishNode(node, optional ? \"OptionalCallExpression\" : \"CallExpression\");\n  }\n\n  parseCallExpressionArguments(close, possibleAsyncArrow, dynamicImport, allowPlaceholder, nodeForExtra) {\n    const elts = [];\n    let first = true;\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = false;\n\n    while (!this.eat(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(types.comma);\n\n        if (this.match(close)) {\n          if (dynamicImport && !this.hasPlugin(\"importAssertions\") && !this.hasPlugin(\"moduleAttributes\")) {\n            this.raise(this.state.lastTokStart, ErrorMessages.ImportCallArgumentTrailingComma);\n          }\n\n          if (nodeForExtra) {\n            this.addExtra(nodeForExtra, \"trailingComma\", this.state.lastTokStart);\n          }\n\n          this.next();\n          break;\n        }\n      }\n\n      elts.push(this.parseExprListItem(false, possibleAsyncArrow ? new ExpressionErrors() : undefined, possibleAsyncArrow ? {\n        start: 0\n      } : undefined, allowPlaceholder));\n    }\n\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n    return elts;\n  }\n\n  shouldParseAsyncArrow() {\n    return this.match(types.arrow) && !this.canInsertSemicolon();\n  }\n\n  parseAsyncArrowFromCallExpression(node, call) {\n    var _call$extra;\n\n    this.expect(types.arrow);\n    this.parseArrowExpression(node, call.arguments, true, (_call$extra = call.extra) == null ? void 0 : _call$extra.trailingComma);\n    return node;\n  }\n\n  parseNoCallExpr() {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    return this.parseSubscripts(this.parseExprAtom(), startPos, startLoc, true);\n  }\n\n  parseExprAtom(refExpressionErrors) {\n    if (this.state.type === types.slash) this.readRegexp();\n    const canBeArrow = this.state.potentialArrowAt === this.state.start;\n    let node;\n\n    switch (this.state.type) {\n      case types._super:\n        return this.parseSuper();\n\n      case types._import:\n        node = this.startNode();\n        this.next();\n\n        if (this.match(types.dot)) {\n          return this.parseImportMetaProperty(node);\n        }\n\n        if (!this.match(types.parenL)) {\n          this.raise(this.state.lastTokStart, ErrorMessages.UnsupportedImport);\n        }\n\n        return this.finishNode(node, \"Import\");\n\n      case types._this:\n        node = this.startNode();\n        this.next();\n        return this.finishNode(node, \"ThisExpression\");\n\n      case types.name:\n        {\n          const containsEsc = this.state.containsEsc;\n          const id = this.parseIdentifier();\n\n          if (!containsEsc && id.name === \"async\" && !this.canInsertSemicolon()) {\n            if (this.match(types._function)) {\n              const last = this.state.context.length - 1;\n\n              if (this.state.context[last] !== types$1.functionStatement) {\n                throw new Error(\"Internal error\");\n              }\n\n              this.state.context[last] = types$1.functionExpression;\n              this.next();\n              return this.parseFunction(this.startNodeAtNode(id), undefined, true);\n            } else if (this.match(types.name)) {\n              return this.parseAsyncArrowUnaryFunction(id);\n            }\n          }\n\n          if (canBeArrow && this.match(types.arrow) && !this.canInsertSemicolon()) {\n            this.next();\n            return this.parseArrowExpression(this.startNodeAtNode(id), [id], false);\n          }\n\n          return id;\n        }\n\n      case types._do:\n        {\n          return this.parseDo();\n        }\n\n      case types.regexp:\n        {\n          const value = this.state.value;\n          node = this.parseLiteral(value.value, \"RegExpLiteral\");\n          node.pattern = value.pattern;\n          node.flags = value.flags;\n          return node;\n        }\n\n      case types.num:\n        return this.parseLiteral(this.state.value, \"NumericLiteral\");\n\n      case types.bigint:\n        return this.parseLiteral(this.state.value, \"BigIntLiteral\");\n\n      case types.decimal:\n        return this.parseLiteral(this.state.value, \"DecimalLiteral\");\n\n      case types.string:\n        return this.parseLiteral(this.state.value, \"StringLiteral\");\n\n      case types._null:\n        node = this.startNode();\n        this.next();\n        return this.finishNode(node, \"NullLiteral\");\n\n      case types._true:\n      case types._false:\n        return this.parseBooleanLiteral();\n\n      case types.parenL:\n        return this.parseParenAndDistinguishExpression(canBeArrow);\n\n      case types.bracketBarL:\n      case types.bracketHashL:\n        {\n          return this.parseArrayLike(this.state.type === types.bracketBarL ? types.bracketBarR : types.bracketR, false, true, refExpressionErrors);\n        }\n\n      case types.bracketL:\n        {\n          return this.parseArrayLike(types.bracketR, true, false, refExpressionErrors);\n        }\n\n      case types.braceBarL:\n      case types.braceHashL:\n        {\n          return this.parseObjectLike(this.state.type === types.braceBarL ? types.braceBarR : types.braceR, false, true, refExpressionErrors);\n        }\n\n      case types.braceL:\n        {\n          return this.parseObjectLike(types.braceR, false, false, refExpressionErrors);\n        }\n\n      case types._function:\n        return this.parseFunctionOrFunctionSent();\n\n      case types.at:\n        this.parseDecorators();\n\n      case types._class:\n        node = this.startNode();\n        this.takeDecorators(node);\n        return this.parseClass(node, false);\n\n      case types._new:\n        return this.parseNewOrNewTarget();\n\n      case types.backQuote:\n        return this.parseTemplate(false);\n\n      case types.doubleColon:\n        {\n          node = this.startNode();\n          this.next();\n          node.object = null;\n          const callee = node.callee = this.parseNoCallExpr();\n\n          if (callee.type === \"MemberExpression\") {\n            return this.finishNode(node, \"BindExpression\");\n          } else {\n            throw this.raise(callee.start, ErrorMessages.UnsupportedBind);\n          }\n        }\n\n      case types.hash:\n        {\n          if (this.state.inPipeline) {\n            node = this.startNode();\n\n            if (this.getPluginOption(\"pipelineOperator\", \"proposal\") !== \"smart\") {\n              this.raise(node.start, ErrorMessages.PrimaryTopicRequiresSmartPipeline);\n            }\n\n            this.next();\n\n            if (!this.primaryTopicReferenceIsAllowedInCurrentTopicContext()) {\n              this.raise(node.start, ErrorMessages.PrimaryTopicNotAllowed);\n            }\n\n            this.registerTopicReference();\n            return this.finishNode(node, \"PipelinePrimaryTopicReference\");\n          }\n\n          const nextCh = this.input.codePointAt(this.state.end);\n\n          if (isIdentifierStart(nextCh) || nextCh === 92) {\n            const start = this.state.start;\n            node = this.parseMaybePrivateName(true);\n\n            if (this.match(types._in)) {\n              this.expectPlugin(\"privateIn\");\n              this.classScope.usePrivateName(this.getPrivateNameSV(node), node.start);\n            } else if (this.hasPlugin(\"privateIn\")) {\n              this.raise(this.state.start, ErrorMessages.PrivateInExpectedIn, this.getPrivateNameSV(node));\n            } else {\n              throw this.unexpected(start);\n            }\n\n            return node;\n          }\n        }\n\n      case types.relational:\n        {\n          if (this.state.value === \"<\") {\n            const lookaheadCh = this.input.codePointAt(this.nextTokenStart());\n\n            if (isIdentifierStart(lookaheadCh) || lookaheadCh === 62) {\n                this.expectOnePlugin([\"jsx\", \"flow\", \"typescript\"]);\n              }\n          }\n        }\n\n      default:\n        throw this.unexpected();\n    }\n  }\n\n  parseAsyncArrowUnaryFunction(id) {\n    const node = this.startNodeAtNode(id);\n    this.prodParam.enter(functionFlags(true, this.prodParam.hasYield));\n    const params = [this.parseIdentifier()];\n    this.prodParam.exit();\n\n    if (this.hasPrecedingLineBreak()) {\n      this.raise(this.state.pos, ErrorMessages.LineTerminatorBeforeArrow);\n    }\n\n    this.expect(types.arrow);\n    this.parseArrowExpression(node, params, true);\n    return node;\n  }\n\n  parseDo() {\n    this.expectPlugin(\"doExpressions\");\n    const node = this.startNode();\n    this.next();\n    const oldLabels = this.state.labels;\n    this.state.labels = [];\n    node.body = this.parseBlock();\n    this.state.labels = oldLabels;\n    return this.finishNode(node, \"DoExpression\");\n  }\n\n  parseSuper() {\n    const node = this.startNode();\n    this.next();\n\n    if (this.match(types.parenL) && !this.scope.allowDirectSuper && !this.options.allowSuperOutsideMethod) {\n      this.raise(node.start, ErrorMessages.SuperNotAllowed);\n    } else if (!this.scope.allowSuper && !this.options.allowSuperOutsideMethod) {\n      this.raise(node.start, ErrorMessages.UnexpectedSuper);\n    }\n\n    if (!this.match(types.parenL) && !this.match(types.bracketL) && !this.match(types.dot)) {\n      this.raise(node.start, ErrorMessages.UnsupportedSuper);\n    }\n\n    return this.finishNode(node, \"Super\");\n  }\n\n  parseBooleanLiteral() {\n    const node = this.startNode();\n    node.value = this.match(types._true);\n    this.next();\n    return this.finishNode(node, \"BooleanLiteral\");\n  }\n\n  parseMaybePrivateName(isPrivateNameAllowed) {\n    const isPrivate = this.match(types.hash);\n\n    if (isPrivate) {\n      this.expectOnePlugin([\"classPrivateProperties\", \"classPrivateMethods\"]);\n\n      if (!isPrivateNameAllowed) {\n        this.raise(this.state.pos, ErrorMessages.UnexpectedPrivateField);\n      }\n\n      const node = this.startNode();\n      this.next();\n      this.assertNoSpace(\"Unexpected space between # and identifier\");\n      node.id = this.parseIdentifier(true);\n      return this.finishNode(node, \"PrivateName\");\n    } else {\n      return this.parseIdentifier(true);\n    }\n  }\n\n  parseFunctionOrFunctionSent() {\n    const node = this.startNode();\n    this.next();\n\n    if (this.prodParam.hasYield && this.match(types.dot)) {\n      const meta = this.createIdentifier(this.startNodeAtNode(node), \"function\");\n      this.next();\n      return this.parseMetaProperty(node, meta, \"sent\");\n    }\n\n    return this.parseFunction(node);\n  }\n\n  parseMetaProperty(node, meta, propertyName) {\n    node.meta = meta;\n\n    if (meta.name === \"function\" && propertyName === \"sent\") {\n      if (this.isContextual(propertyName)) {\n        this.expectPlugin(\"functionSent\");\n      } else if (!this.hasPlugin(\"functionSent\")) {\n        this.unexpected();\n      }\n    }\n\n    const containsEsc = this.state.containsEsc;\n    node.property = this.parseIdentifier(true);\n\n    if (node.property.name !== propertyName || containsEsc) {\n      this.raise(node.property.start, ErrorMessages.UnsupportedMetaProperty, meta.name, propertyName);\n    }\n\n    return this.finishNode(node, \"MetaProperty\");\n  }\n\n  parseImportMetaProperty(node) {\n    const id = this.createIdentifier(this.startNodeAtNode(node), \"import\");\n    this.next();\n\n    if (this.isContextual(\"meta\")) {\n      if (!this.inModule) {\n        this.raiseWithData(id.start, {\n          code: \"BABEL_PARSER_SOURCETYPE_MODULE_REQUIRED\"\n        }, ErrorMessages.ImportMetaOutsideModule);\n      }\n\n      this.sawUnambiguousESM = true;\n    }\n\n    return this.parseMetaProperty(node, id, \"meta\");\n  }\n\n  parseLiteral(value, type, startPos, startLoc) {\n    startPos = startPos || this.state.start;\n    startLoc = startLoc || this.state.startLoc;\n    const node = this.startNodeAt(startPos, startLoc);\n    this.addExtra(node, \"rawValue\", value);\n    this.addExtra(node, \"raw\", this.input.slice(startPos, this.state.end));\n    node.value = value;\n    this.next();\n    return this.finishNode(node, type);\n  }\n\n  parseParenAndDistinguishExpression(canBeArrow) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    let val;\n    this.next();\n    this.expressionScope.enter(newArrowHeadScope());\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.maybeInArrowParameters = true;\n    this.state.inFSharpPipelineDirectBody = false;\n    const innerStartPos = this.state.start;\n    const innerStartLoc = this.state.startLoc;\n    const exprList = [];\n    const refExpressionErrors = new ExpressionErrors();\n    const refNeedsArrowPos = {\n      start: 0\n    };\n    let first = true;\n    let spreadStart;\n    let optionalCommaStart;\n\n    while (!this.match(types.parenR)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(types.comma, refNeedsArrowPos.start || null);\n\n        if (this.match(types.parenR)) {\n          optionalCommaStart = this.state.start;\n          break;\n        }\n      }\n\n      if (this.match(types.ellipsis)) {\n        const spreadNodeStartPos = this.state.start;\n        const spreadNodeStartLoc = this.state.startLoc;\n        spreadStart = this.state.start;\n        exprList.push(this.parseParenItem(this.parseRestBinding(), spreadNodeStartPos, spreadNodeStartLoc));\n        this.checkCommaAfterRest(41);\n        break;\n      } else {\n        exprList.push(this.parseMaybeAssignAllowIn(refExpressionErrors, this.parseParenItem, refNeedsArrowPos));\n      }\n    }\n\n    const innerEndPos = this.state.lastTokEnd;\n    const innerEndLoc = this.state.lastTokEndLoc;\n    this.expect(types.parenR);\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n    let arrowNode = this.startNodeAt(startPos, startLoc);\n\n    if (canBeArrow && this.shouldParseArrow() && (arrowNode = this.parseArrow(arrowNode))) {\n      this.expressionScope.validateAsPattern();\n      this.expressionScope.exit();\n      this.parseArrowExpression(arrowNode, exprList, false);\n      return arrowNode;\n    }\n\n    this.expressionScope.exit();\n\n    if (!exprList.length) {\n      this.unexpected(this.state.lastTokStart);\n    }\n\n    if (optionalCommaStart) this.unexpected(optionalCommaStart);\n    if (spreadStart) this.unexpected(spreadStart);\n    this.checkExpressionErrors(refExpressionErrors, true);\n    if (refNeedsArrowPos.start) this.unexpected(refNeedsArrowPos.start);\n    this.toReferencedListDeep(exprList, true);\n\n    if (exprList.length > 1) {\n      val = this.startNodeAt(innerStartPos, innerStartLoc);\n      val.expressions = exprList;\n      this.finishNodeAt(val, \"SequenceExpression\", innerEndPos, innerEndLoc);\n    } else {\n      val = exprList[0];\n    }\n\n    if (!this.options.createParenthesizedExpressions) {\n      this.addExtra(val, \"parenthesized\", true);\n      this.addExtra(val, \"parenStart\", startPos);\n      return val;\n    }\n\n    const parenExpression = this.startNodeAt(startPos, startLoc);\n    parenExpression.expression = val;\n    this.finishNode(parenExpression, \"ParenthesizedExpression\");\n    return parenExpression;\n  }\n\n  shouldParseArrow() {\n    return !this.canInsertSemicolon();\n  }\n\n  parseArrow(node) {\n    if (this.eat(types.arrow)) {\n      return node;\n    }\n  }\n\n  parseParenItem(node, startPos, startLoc) {\n    return node;\n  }\n\n  parseNewOrNewTarget() {\n    const node = this.startNode();\n    this.next();\n\n    if (this.match(types.dot)) {\n      const meta = this.createIdentifier(this.startNodeAtNode(node), \"new\");\n      this.next();\n      const metaProp = this.parseMetaProperty(node, meta, \"target\");\n\n      if (!this.scope.inNonArrowFunction && !this.scope.inClass) {\n        let error = ErrorMessages.UnexpectedNewTarget;\n\n        if (this.hasPlugin(\"classProperties\")) {\n          error += \" or class properties\";\n        }\n\n        this.raise(metaProp.start, error);\n      }\n\n      return metaProp;\n    }\n\n    return this.parseNew(node);\n  }\n\n  parseNew(node) {\n    node.callee = this.parseNoCallExpr();\n\n    if (node.callee.type === \"Import\") {\n      this.raise(node.callee.start, ErrorMessages.ImportCallNotNewExpression);\n    } else if (this.isOptionalChain(node.callee)) {\n      this.raise(this.state.lastTokEnd, ErrorMessages.OptionalChainingNoNew);\n    } else if (this.eat(types.questionDot)) {\n      this.raise(this.state.start, ErrorMessages.OptionalChainingNoNew);\n    }\n\n    this.parseNewArguments(node);\n    return this.finishNode(node, \"NewExpression\");\n  }\n\n  parseNewArguments(node) {\n    if (this.eat(types.parenL)) {\n      const args = this.parseExprList(types.parenR);\n      this.toReferencedList(args);\n      node.arguments = args;\n    } else {\n      node.arguments = [];\n    }\n  }\n\n  parseTemplateElement(isTagged) {\n    const elem = this.startNode();\n\n    if (this.state.value === null) {\n      if (!isTagged) {\n        this.raise(this.state.start + 1, ErrorMessages.InvalidEscapeSequenceTemplate);\n      }\n    }\n\n    elem.value = {\n      raw: this.input.slice(this.state.start, this.state.end).replace(/\\r\\n?/g, \"\\n\"),\n      cooked: this.state.value\n    };\n    this.next();\n    elem.tail = this.match(types.backQuote);\n    return this.finishNode(elem, \"TemplateElement\");\n  }\n\n  parseTemplate(isTagged) {\n    const node = this.startNode();\n    this.next();\n    node.expressions = [];\n    let curElt = this.parseTemplateElement(isTagged);\n    node.quasis = [curElt];\n\n    while (!curElt.tail) {\n      this.expect(types.dollarBraceL);\n      node.expressions.push(this.parseTemplateSubstitution());\n      this.expect(types.braceR);\n      node.quasis.push(curElt = this.parseTemplateElement(isTagged));\n    }\n\n    this.next();\n    return this.finishNode(node, \"TemplateLiteral\");\n  }\n\n  parseTemplateSubstitution() {\n    return this.parseExpression();\n  }\n\n  parseObjectLike(close, isPattern, isRecord, refExpressionErrors) {\n    if (isRecord) {\n      this.expectPlugin(\"recordAndTuple\");\n    }\n\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = false;\n    const propHash = Object.create(null);\n    let first = true;\n    const node = this.startNode();\n    node.properties = [];\n    this.next();\n\n    while (!this.match(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(types.comma);\n\n        if (this.match(close)) {\n          this.addExtra(node, \"trailingComma\", this.state.lastTokStart);\n          break;\n        }\n      }\n\n      const prop = this.parsePropertyDefinition(isPattern, refExpressionErrors);\n\n      if (!isPattern) {\n        this.checkProto(prop, isRecord, propHash, refExpressionErrors);\n      }\n\n      if (isRecord && !this.isObjectProperty(prop) && prop.type !== \"SpreadElement\") {\n        this.raise(prop.start, ErrorMessages.InvalidRecordProperty);\n      }\n\n      if (prop.shorthand) {\n        this.addExtra(prop, \"shorthand\", true);\n      }\n\n      node.properties.push(prop);\n    }\n\n    this.state.exprAllowed = false;\n    this.next();\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n    let type = \"ObjectExpression\";\n\n    if (isPattern) {\n      type = \"ObjectPattern\";\n    } else if (isRecord) {\n      type = \"RecordExpression\";\n    }\n\n    return this.finishNode(node, type);\n  }\n\n  maybeAsyncOrAccessorProp(prop) {\n    return !prop.computed && prop.key.type === \"Identifier\" && (this.isLiteralPropertyName() || this.match(types.bracketL) || this.match(types.star));\n  }\n\n  parsePropertyDefinition(isPattern, refExpressionErrors) {\n    let decorators = [];\n\n    if (this.match(types.at)) {\n      if (this.hasPlugin(\"decorators\")) {\n        this.raise(this.state.start, ErrorMessages.UnsupportedPropertyDecorator);\n      }\n\n      while (this.match(types.at)) {\n        decorators.push(this.parseDecorator());\n      }\n    }\n\n    const prop = this.startNode();\n    let isGenerator = false;\n    let isAsync = false;\n    let isAccessor = false;\n    let startPos;\n    let startLoc;\n\n    if (this.match(types.ellipsis)) {\n      if (decorators.length) this.unexpected();\n\n      if (isPattern) {\n        this.next();\n        prop.argument = this.parseIdentifier();\n        this.checkCommaAfterRest(125);\n        return this.finishNode(prop, \"RestElement\");\n      }\n\n      return this.parseSpread();\n    }\n\n    if (decorators.length) {\n      prop.decorators = decorators;\n      decorators = [];\n    }\n\n    prop.method = false;\n\n    if (isPattern || refExpressionErrors) {\n      startPos = this.state.start;\n      startLoc = this.state.startLoc;\n    }\n\n    if (!isPattern) {\n      isGenerator = this.eat(types.star);\n    }\n\n    const containsEsc = this.state.containsEsc;\n    const key = this.parsePropertyName(prop, false);\n\n    if (!isPattern && !isGenerator && !containsEsc && this.maybeAsyncOrAccessorProp(prop)) {\n      const keyName = key.name;\n\n      if (keyName === \"async\" && !this.hasPrecedingLineBreak()) {\n        isAsync = true;\n        isGenerator = this.eat(types.star);\n        this.parsePropertyName(prop, false);\n      }\n\n      if (keyName === \"get\" || keyName === \"set\") {\n        isAccessor = true;\n        prop.kind = keyName;\n\n        if (this.match(types.star)) {\n          isGenerator = true;\n          this.raise(this.state.pos, ErrorMessages.AccessorIsGenerator, keyName);\n          this.next();\n        }\n\n        this.parsePropertyName(prop, false);\n      }\n    }\n\n    this.parseObjPropValue(prop, startPos, startLoc, isGenerator, isAsync, isPattern, isAccessor, refExpressionErrors);\n    return prop;\n  }\n\n  getGetterSetterExpectedParamCount(method) {\n    return method.kind === \"get\" ? 0 : 1;\n  }\n\n  getObjectOrClassMethodParams(method) {\n    return method.params;\n  }\n\n  checkGetterSetterParams(method) {\n    var _params;\n\n    const paramCount = this.getGetterSetterExpectedParamCount(method);\n    const params = this.getObjectOrClassMethodParams(method);\n    const start = method.start;\n\n    if (params.length !== paramCount) {\n      if (method.kind === \"get\") {\n        this.raise(start, ErrorMessages.BadGetterArity);\n      } else {\n        this.raise(start, ErrorMessages.BadSetterArity);\n      }\n    }\n\n    if (method.kind === \"set\" && ((_params = params[params.length - 1]) == null ? void 0 : _params.type) === \"RestElement\") {\n      this.raise(start, ErrorMessages.BadSetterRestParameter);\n    }\n  }\n\n  parseObjectMethod(prop, isGenerator, isAsync, isPattern, isAccessor) {\n    if (isAccessor) {\n      this.parseMethod(prop, isGenerator, false, false, false, \"ObjectMethod\");\n      this.checkGetterSetterParams(prop);\n      return prop;\n    }\n\n    if (isAsync || isGenerator || this.match(types.parenL)) {\n      if (isPattern) this.unexpected();\n      prop.kind = \"method\";\n      prop.method = true;\n      return this.parseMethod(prop, isGenerator, isAsync, false, false, \"ObjectMethod\");\n    }\n  }\n\n  parseObjectProperty(prop, startPos, startLoc, isPattern, refExpressionErrors) {\n    prop.shorthand = false;\n\n    if (this.eat(types.colon)) {\n      prop.value = isPattern ? this.parseMaybeDefault(this.state.start, this.state.startLoc) : this.parseMaybeAssignAllowIn(refExpressionErrors);\n      return this.finishNode(prop, \"ObjectProperty\");\n    }\n\n    if (!prop.computed && prop.key.type === \"Identifier\") {\n      this.checkReservedWord(prop.key.name, prop.key.start, true, false);\n\n      if (isPattern) {\n        prop.value = this.parseMaybeDefault(startPos, startLoc, prop.key.__clone());\n      } else if (this.match(types.eq) && refExpressionErrors) {\n        if (refExpressionErrors.shorthandAssign === -1) {\n          refExpressionErrors.shorthandAssign = this.state.start;\n        }\n\n        prop.value = this.parseMaybeDefault(startPos, startLoc, prop.key.__clone());\n      } else {\n        prop.value = prop.key.__clone();\n      }\n\n      prop.shorthand = true;\n      return this.finishNode(prop, \"ObjectProperty\");\n    }\n  }\n\n  parseObjPropValue(prop, startPos, startLoc, isGenerator, isAsync, isPattern, isAccessor, refExpressionErrors) {\n    const node = this.parseObjectMethod(prop, isGenerator, isAsync, isPattern, isAccessor) || this.parseObjectProperty(prop, startPos, startLoc, isPattern, refExpressionErrors);\n    if (!node) this.unexpected();\n    return node;\n  }\n\n  parsePropertyName(prop, isPrivateNameAllowed) {\n    if (this.eat(types.bracketL)) {\n      prop.computed = true;\n      prop.key = this.parseMaybeAssignAllowIn();\n      this.expect(types.bracketR);\n    } else {\n      const oldInPropertyName = this.state.inPropertyName;\n      this.state.inPropertyName = true;\n      prop.key = this.match(types.num) || this.match(types.string) || this.match(types.bigint) || this.match(types.decimal) ? this.parseExprAtom() : this.parseMaybePrivateName(isPrivateNameAllowed);\n\n      if (!this.isPrivateName(prop.key)) {\n        prop.computed = false;\n      }\n\n      this.state.inPropertyName = oldInPropertyName;\n    }\n\n    return prop.key;\n  }\n\n  initFunction(node, isAsync) {\n    node.id = null;\n    node.generator = false;\n    node.async = !!isAsync;\n  }\n\n  parseMethod(node, isGenerator, isAsync, isConstructor, allowDirectSuper, type, inClassScope = false) {\n    this.initFunction(node, isAsync);\n    node.generator = !!isGenerator;\n    const allowModifiers = isConstructor;\n    this.scope.enter(SCOPE_FUNCTION | SCOPE_SUPER | (inClassScope ? SCOPE_CLASS : 0) | (allowDirectSuper ? SCOPE_DIRECT_SUPER : 0));\n    this.prodParam.enter(functionFlags(isAsync, node.generator));\n    this.parseFunctionParams(node, allowModifiers);\n    this.parseFunctionBodyAndFinish(node, type, true);\n    this.prodParam.exit();\n    this.scope.exit();\n    return node;\n  }\n\n  parseArrayLike(close, canBePattern, isTuple, refExpressionErrors) {\n    if (isTuple) {\n      this.expectPlugin(\"recordAndTuple\");\n    }\n\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = false;\n    const node = this.startNode();\n    this.next();\n    node.elements = this.parseExprList(close, !isTuple, refExpressionErrors, node);\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n    return this.finishNode(node, isTuple ? \"TupleExpression\" : \"ArrayExpression\");\n  }\n\n  parseArrowExpression(node, params, isAsync, trailingCommaPos) {\n    this.scope.enter(SCOPE_FUNCTION | SCOPE_ARROW);\n    let flags = functionFlags(isAsync, false);\n\n    if (!this.match(types.bracketL) && this.prodParam.hasIn) {\n      flags |= PARAM_IN;\n    }\n\n    this.prodParam.enter(flags);\n    this.initFunction(node, isAsync);\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n\n    if (params) {\n      this.state.maybeInArrowParameters = true;\n      this.setArrowFunctionParameters(node, params, trailingCommaPos);\n    }\n\n    this.state.maybeInArrowParameters = false;\n    this.parseFunctionBody(node, true);\n    this.prodParam.exit();\n    this.scope.exit();\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n    return this.finishNode(node, \"ArrowFunctionExpression\");\n  }\n\n  setArrowFunctionParameters(node, params, trailingCommaPos) {\n    node.params = this.toAssignableList(params, trailingCommaPos, false);\n  }\n\n  parseFunctionBodyAndFinish(node, type, isMethod = false) {\n    this.parseFunctionBody(node, false, isMethod);\n    this.finishNode(node, type);\n  }\n\n  parseFunctionBody(node, allowExpression, isMethod = false) {\n    const isExpression = allowExpression && !this.match(types.braceL);\n    this.expressionScope.enter(newExpressionScope());\n\n    if (isExpression) {\n      node.body = this.parseMaybeAssign();\n      this.checkParams(node, false, allowExpression, false);\n    } else {\n      const oldStrict = this.state.strict;\n      const oldLabels = this.state.labels;\n      this.state.labels = [];\n      this.prodParam.enter(this.prodParam.currentFlags() | PARAM_RETURN);\n      node.body = this.parseBlock(true, false, hasStrictModeDirective => {\n        const nonSimple = !this.isSimpleParamList(node.params);\n\n        if (hasStrictModeDirective && nonSimple) {\n          const errorPos = (node.kind === \"method\" || node.kind === \"constructor\") && !!node.key ? node.key.end : node.start;\n          this.raise(errorPos, ErrorMessages.IllegalLanguageModeDirective);\n        }\n\n        const strictModeChanged = !oldStrict && this.state.strict;\n        this.checkParams(node, !this.state.strict && !allowExpression && !isMethod && !nonSimple, allowExpression, strictModeChanged);\n\n        if (this.state.strict && node.id) {\n          this.checkLVal(node.id, \"function name\", BIND_OUTSIDE, undefined, undefined, strictModeChanged);\n        }\n      });\n      this.prodParam.exit();\n      this.expressionScope.exit();\n      this.state.labels = oldLabels;\n    }\n  }\n\n  isSimpleParamList(params) {\n    for (let i = 0, len = params.length; i < len; i++) {\n      if (params[i].type !== \"Identifier\") return false;\n    }\n\n    return true;\n  }\n\n  checkParams(node, allowDuplicates, isArrowFunction, strictModeChanged = true) {\n    const checkClashes = new Set();\n\n    for (let _i2 = 0, _node$params = node.params; _i2 < _node$params.length; _i2++) {\n      const param = _node$params[_i2];\n      this.checkLVal(param, \"function parameter list\", BIND_VAR, allowDuplicates ? null : checkClashes, undefined, strictModeChanged);\n    }\n  }\n\n  parseExprList(close, allowEmpty, refExpressionErrors, nodeForExtra) {\n    const elts = [];\n    let first = true;\n\n    while (!this.eat(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(types.comma);\n\n        if (this.match(close)) {\n          if (nodeForExtra) {\n            this.addExtra(nodeForExtra, \"trailingComma\", this.state.lastTokStart);\n          }\n\n          this.next();\n          break;\n        }\n      }\n\n      elts.push(this.parseExprListItem(allowEmpty, refExpressionErrors));\n    }\n\n    return elts;\n  }\n\n  parseExprListItem(allowEmpty, refExpressionErrors, refNeedsArrowPos, allowPlaceholder) {\n    let elt;\n\n    if (this.match(types.comma)) {\n      if (!allowEmpty) {\n        this.raise(this.state.pos, ErrorMessages.UnexpectedToken, \",\");\n      }\n\n      elt = null;\n    } else if (this.match(types.ellipsis)) {\n      const spreadNodeStartPos = this.state.start;\n      const spreadNodeStartLoc = this.state.startLoc;\n      elt = this.parseParenItem(this.parseSpread(refExpressionErrors, refNeedsArrowPos), spreadNodeStartPos, spreadNodeStartLoc);\n    } else if (this.match(types.question)) {\n      this.expectPlugin(\"partialApplication\");\n\n      if (!allowPlaceholder) {\n        this.raise(this.state.start, ErrorMessages.UnexpectedArgumentPlaceholder);\n      }\n\n      const node = this.startNode();\n      this.next();\n      elt = this.finishNode(node, \"ArgumentPlaceholder\");\n    } else {\n      elt = this.parseMaybeAssignAllowIn(refExpressionErrors, this.parseParenItem, refNeedsArrowPos);\n    }\n\n    return elt;\n  }\n\n  parseIdentifier(liberal) {\n    const node = this.startNode();\n    const name = this.parseIdentifierName(node.start, liberal);\n    return this.createIdentifier(node, name);\n  }\n\n  createIdentifier(node, name) {\n    node.name = name;\n    node.loc.identifierName = name;\n    return this.finishNode(node, \"Identifier\");\n  }\n\n  parseIdentifierName(pos, liberal) {\n    let name;\n    const {\n      start,\n      type\n    } = this.state;\n\n    if (type === types.name) {\n      name = this.state.value;\n    } else if (type.keyword) {\n      name = type.keyword;\n      const curContext = this.curContext();\n\n      if ((type === types._class || type === types._function) && (curContext === types$1.functionStatement || curContext === types$1.functionExpression)) {\n        this.state.context.pop();\n      }\n    } else {\n      throw this.unexpected();\n    }\n\n    if (liberal) {\n      this.state.type = types.name;\n    } else {\n      this.checkReservedWord(name, start, !!type.keyword, false);\n    }\n\n    this.next();\n    return name;\n  }\n\n  checkReservedWord(word, startLoc, checkKeywords, isBinding) {\n    if (this.prodParam.hasYield && word === \"yield\") {\n      this.raise(startLoc, ErrorMessages.YieldBindingIdentifier);\n      return;\n    }\n\n    if (word === \"await\") {\n      if (this.prodParam.hasAwait) {\n        this.raise(startLoc, ErrorMessages.AwaitBindingIdentifier);\n        return;\n      } else if (this.scope.inStaticBlock && !this.scope.inNonArrowFunction) {\n        this.raise(startLoc, ErrorMessages.AwaitBindingIdentifierInStaticBlock);\n        return;\n      } else {\n        this.expressionScope.recordAsyncArrowParametersError(startLoc, ErrorMessages.AwaitBindingIdentifier);\n      }\n    }\n\n    if (this.scope.inClass && !this.scope.inNonArrowFunction && word === \"arguments\") {\n      this.raise(startLoc, ErrorMessages.ArgumentsInClass);\n      return;\n    }\n\n    if (checkKeywords && isKeyword(word)) {\n      this.raise(startLoc, ErrorMessages.UnexpectedKeyword, word);\n      return;\n    }\n\n    const reservedTest = !this.state.strict ? isReservedWord : isBinding ? isStrictBindReservedWord : isStrictReservedWord;\n\n    if (reservedTest(word, this.inModule)) {\n      this.raise(startLoc, ErrorMessages.UnexpectedReservedWord, word);\n    }\n  }\n\n  isAwaitAllowed() {\n    if (this.prodParam.hasAwait) return true;\n\n    if (this.options.allowAwaitOutsideFunction && !this.scope.inFunction) {\n      return true;\n    }\n\n    return false;\n  }\n\n  parseAwait(startPos, startLoc) {\n    const node = this.startNodeAt(startPos, startLoc);\n    this.expressionScope.recordParameterInitializerError(node.start, ErrorMessages.AwaitExpressionFormalParameter);\n\n    if (this.eat(types.star)) {\n      this.raise(node.start, ErrorMessages.ObsoleteAwaitStar);\n    }\n\n    if (!this.scope.inFunction && !this.options.allowAwaitOutsideFunction) {\n      if (this.isAmbiguousAwait()) {\n        this.ambiguousScriptDifferentAst = true;\n      } else {\n        this.sawUnambiguousESM = true;\n      }\n    }\n\n    if (!this.state.soloAwait) {\n      node.argument = this.parseMaybeUnary();\n    }\n\n    return this.finishNode(node, \"AwaitExpression\");\n  }\n\n  isAmbiguousAwait() {\n    return this.hasPrecedingLineBreak() || this.match(types.plusMin) || this.match(types.parenL) || this.match(types.bracketL) || this.match(types.backQuote) || this.match(types.regexp) || this.match(types.slash) || this.hasPlugin(\"v8intrinsic\") && this.match(types.modulo);\n  }\n\n  parseYield() {\n    const node = this.startNode();\n    this.expressionScope.recordParameterInitializerError(node.start, ErrorMessages.YieldInParameter);\n    this.next();\n\n    if (this.match(types.semi) || !this.match(types.star) && !this.state.type.startsExpr || this.hasPrecedingLineBreak()) {\n      node.delegate = false;\n      node.argument = null;\n    } else {\n      node.delegate = this.eat(types.star);\n      node.argument = this.parseMaybeAssign();\n    }\n\n    return this.finishNode(node, \"YieldExpression\");\n  }\n\n  checkPipelineAtInfixOperator(left, leftStartPos) {\n    if (this.getPluginOption(\"pipelineOperator\", \"proposal\") === \"smart\") {\n      if (left.type === \"SequenceExpression\") {\n        this.raise(leftStartPos, ErrorMessages.PipelineHeadSequenceExpression);\n      }\n    }\n  }\n\n  parseSmartPipelineBody(childExpression, startPos, startLoc) {\n    this.checkSmartPipelineBodyEarlyErrors(childExpression, startPos);\n    return this.parseSmartPipelineBodyInStyle(childExpression, startPos, startLoc);\n  }\n\n  checkSmartPipelineBodyEarlyErrors(childExpression, startPos) {\n    if (this.match(types.arrow)) {\n      throw this.raise(this.state.start, ErrorMessages.PipelineBodyNoArrow);\n    } else if (childExpression.type === \"SequenceExpression\") {\n      this.raise(startPos, ErrorMessages.PipelineBodySequenceExpression);\n    }\n  }\n\n  parseSmartPipelineBodyInStyle(childExpression, startPos, startLoc) {\n    const bodyNode = this.startNodeAt(startPos, startLoc);\n    const isSimpleReference = this.isSimpleReference(childExpression);\n\n    if (isSimpleReference) {\n      bodyNode.callee = childExpression;\n    } else {\n      if (!this.topicReferenceWasUsedInCurrentTopicContext()) {\n        this.raise(startPos, ErrorMessages.PipelineTopicUnused);\n      }\n\n      bodyNode.expression = childExpression;\n    }\n\n    return this.finishNode(bodyNode, isSimpleReference ? \"PipelineBareFunction\" : \"PipelineTopicExpression\");\n  }\n\n  isSimpleReference(expression) {\n    switch (expression.type) {\n      case \"MemberExpression\":\n        return !expression.computed && this.isSimpleReference(expression.object);\n\n      case \"Identifier\":\n        return true;\n\n      default:\n        return false;\n    }\n  }\n\n  withTopicPermittingContext(callback) {\n    const outerContextTopicState = this.state.topicContext;\n    this.state.topicContext = {\n      maxNumOfResolvableTopics: 1,\n      maxTopicIndex: null\n    };\n\n    try {\n      return callback();\n    } finally {\n      this.state.topicContext = outerContextTopicState;\n    }\n  }\n\n  withTopicForbiddingContext(callback) {\n    const outerContextTopicState = this.state.topicContext;\n    this.state.topicContext = {\n      maxNumOfResolvableTopics: 0,\n      maxTopicIndex: null\n    };\n\n    try {\n      return callback();\n    } finally {\n      this.state.topicContext = outerContextTopicState;\n    }\n  }\n\n  withSoloAwaitPermittingContext(callback) {\n    const outerContextSoloAwaitState = this.state.soloAwait;\n    this.state.soloAwait = true;\n\n    try {\n      return callback();\n    } finally {\n      this.state.soloAwait = outerContextSoloAwaitState;\n    }\n  }\n\n  allowInAnd(callback) {\n    const flags = this.prodParam.currentFlags();\n    const prodParamToSet = PARAM_IN & ~flags;\n\n    if (prodParamToSet) {\n      this.prodParam.enter(flags | PARAM_IN);\n\n      try {\n        return callback();\n      } finally {\n        this.prodParam.exit();\n      }\n    }\n\n    return callback();\n  }\n\n  disallowInAnd(callback) {\n    const flags = this.prodParam.currentFlags();\n    const prodParamToClear = PARAM_IN & flags;\n\n    if (prodParamToClear) {\n      this.prodParam.enter(flags & ~PARAM_IN);\n\n      try {\n        return callback();\n      } finally {\n        this.prodParam.exit();\n      }\n    }\n\n    return callback();\n  }\n\n  registerTopicReference() {\n    this.state.topicContext.maxTopicIndex = 0;\n  }\n\n  primaryTopicReferenceIsAllowedInCurrentTopicContext() {\n    return this.state.topicContext.maxNumOfResolvableTopics >= 1;\n  }\n\n  topicReferenceWasUsedInCurrentTopicContext() {\n    return this.state.topicContext.maxTopicIndex != null && this.state.topicContext.maxTopicIndex >= 0;\n  }\n\n  parseFSharpPipelineBody(prec) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    this.state.potentialArrowAt = this.state.start;\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = true;\n    const ret = this.parseExprOp(this.parseMaybeUnary(), startPos, startLoc, prec);\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n    return ret;\n  }\n\n  parseModuleExpression() {\n    this.expectPlugin(\"moduleBlocks\");\n    const node = this.startNode();\n    this.next();\n    this.eat(types.braceL);\n    const revertScopes = this.initializeScopes(true);\n    this.enterInitialScopes();\n    const program = this.startNode();\n\n    try {\n      node.body = this.parseProgram(program, types.braceR, \"module\");\n    } finally {\n      revertScopes();\n    }\n\n    this.eat(types.braceR);\n    return this.finishNode(node, \"ModuleExpression\");\n  }\n\n}\n\nconst loopLabel = {\n  kind: \"loop\"\n},\n      switchLabel = {\n  kind: \"switch\"\n};\nconst FUNC_NO_FLAGS = 0b000,\n      FUNC_STATEMENT = 0b001,\n      FUNC_HANGING_STATEMENT = 0b010,\n      FUNC_NULLABLE_ID = 0b100;\nconst loneSurrogate = /[\\uD800-\\uDFFF]/u;\nclass StatementParser extends ExpressionParser {\n  parseTopLevel(file, program) {\n    file.program = this.parseProgram(program);\n    file.comments = this.state.comments;\n    if (this.options.tokens) file.tokens = this.tokens;\n    return this.finishNode(file, \"File\");\n  }\n\n  parseProgram(program, end = types.eof, sourceType = this.options.sourceType) {\n    program.sourceType = sourceType;\n    program.interpreter = this.parseInterpreterDirective();\n    this.parseBlockBody(program, true, true, end);\n\n    if (this.inModule && !this.options.allowUndeclaredExports && this.scope.undefinedExports.size > 0) {\n      for (let _i = 0, _Array$from = Array.from(this.scope.undefinedExports); _i < _Array$from.length; _i++) {\n        const [name] = _Array$from[_i];\n        const pos = this.scope.undefinedExports.get(name);\n        this.raise(pos, ErrorMessages.ModuleExportUndefined, name);\n      }\n    }\n\n    return this.finishNode(program, \"Program\");\n  }\n\n  stmtToDirective(stmt) {\n    const expr = stmt.expression;\n    const directiveLiteral = this.startNodeAt(expr.start, expr.loc.start);\n    const directive = this.startNodeAt(stmt.start, stmt.loc.start);\n    const raw = this.input.slice(expr.start, expr.end);\n    const val = directiveLiteral.value = raw.slice(1, -1);\n    this.addExtra(directiveLiteral, \"raw\", raw);\n    this.addExtra(directiveLiteral, \"rawValue\", val);\n    directive.value = this.finishNodeAt(directiveLiteral, \"DirectiveLiteral\", expr.end, expr.loc.end);\n    return this.finishNodeAt(directive, \"Directive\", stmt.end, stmt.loc.end);\n  }\n\n  parseInterpreterDirective() {\n    if (!this.match(types.interpreterDirective)) {\n      return null;\n    }\n\n    const node = this.startNode();\n    node.value = this.state.value;\n    this.next();\n    return this.finishNode(node, \"InterpreterDirective\");\n  }\n\n  isLet(context) {\n    if (!this.isContextual(\"let\")) {\n      return false;\n    }\n\n    const next = this.nextTokenStart();\n    const nextCh = this.input.charCodeAt(next);\n    if (nextCh === 91) return true;\n    if (context) return false;\n    if (nextCh === 123) return true;\n\n    if (isIdentifierStart(nextCh)) {\n      let pos = next + 1;\n\n      while (isIdentifierChar(this.input.charCodeAt(pos))) {\n        ++pos;\n      }\n\n      const ident = this.input.slice(next, pos);\n      if (!keywordRelationalOperator.test(ident)) return true;\n    }\n\n    return false;\n  }\n\n  parseStatement(context, topLevel) {\n    if (this.match(types.at)) {\n      this.parseDecorators(true);\n    }\n\n    return this.parseStatementContent(context, topLevel);\n  }\n\n  parseStatementContent(context, topLevel) {\n    let starttype = this.state.type;\n    const node = this.startNode();\n    let kind;\n\n    if (this.isLet(context)) {\n      starttype = types._var;\n      kind = \"let\";\n    }\n\n    switch (starttype) {\n      case types._break:\n      case types._continue:\n        return this.parseBreakContinueStatement(node, starttype.keyword);\n\n      case types._debugger:\n        return this.parseDebuggerStatement(node);\n\n      case types._do:\n        return this.parseDoStatement(node);\n\n      case types._for:\n        return this.parseForStatement(node);\n\n      case types._function:\n        if (this.lookaheadCharCode() === 46) break;\n\n        if (context) {\n          if (this.state.strict) {\n            this.raise(this.state.start, ErrorMessages.StrictFunction);\n          } else if (context !== \"if\" && context !== \"label\") {\n            this.raise(this.state.start, ErrorMessages.SloppyFunction);\n          }\n        }\n\n        return this.parseFunctionStatement(node, false, !context);\n\n      case types._class:\n        if (context) this.unexpected();\n        return this.parseClass(node, true);\n\n      case types._if:\n        return this.parseIfStatement(node);\n\n      case types._return:\n        return this.parseReturnStatement(node);\n\n      case types._switch:\n        return this.parseSwitchStatement(node);\n\n      case types._throw:\n        return this.parseThrowStatement(node);\n\n      case types._try:\n        return this.parseTryStatement(node);\n\n      case types._const:\n      case types._var:\n        kind = kind || this.state.value;\n\n        if (context && kind !== \"var\") {\n          this.raise(this.state.start, ErrorMessages.UnexpectedLexicalDeclaration);\n        }\n\n        return this.parseVarStatement(node, kind);\n\n      case types._while:\n        return this.parseWhileStatement(node);\n\n      case types._with:\n        return this.parseWithStatement(node);\n\n      case types.braceL:\n        return this.parseBlock();\n\n      case types.semi:\n        return this.parseEmptyStatement(node);\n\n      case types._import:\n        {\n          const nextTokenCharCode = this.lookaheadCharCode();\n\n          if (nextTokenCharCode === 40 || nextTokenCharCode === 46) {\n              break;\n            }\n        }\n\n      case types._export:\n        {\n          if (!this.options.allowImportExportEverywhere && !topLevel) {\n            this.raise(this.state.start, ErrorMessages.UnexpectedImportExport);\n          }\n\n          this.next();\n          let result;\n\n          if (starttype === types._import) {\n            result = this.parseImport(node);\n\n            if (result.type === \"ImportDeclaration\" && (!result.importKind || result.importKind === \"value\")) {\n              this.sawUnambiguousESM = true;\n            }\n          } else {\n            result = this.parseExport(node);\n\n            if (result.type === \"ExportNamedDeclaration\" && (!result.exportKind || result.exportKind === \"value\") || result.type === \"ExportAllDeclaration\" && (!result.exportKind || result.exportKind === \"value\") || result.type === \"ExportDefaultDeclaration\") {\n              this.sawUnambiguousESM = true;\n            }\n          }\n\n          this.assertModuleNodeAllowed(node);\n          return result;\n        }\n\n      default:\n        {\n          if (this.isAsyncFunction()) {\n            if (context) {\n              this.raise(this.state.start, ErrorMessages.AsyncFunctionInSingleStatementContext);\n            }\n\n            this.next();\n            return this.parseFunctionStatement(node, true, !context);\n          }\n        }\n    }\n\n    const maybeName = this.state.value;\n    const expr = this.parseExpression();\n\n    if (starttype === types.name && expr.type === \"Identifier\" && this.eat(types.colon)) {\n      return this.parseLabeledStatement(node, maybeName, expr, context);\n    } else {\n      return this.parseExpressionStatement(node, expr);\n    }\n  }\n\n  assertModuleNodeAllowed(node) {\n    if (!this.options.allowImportExportEverywhere && !this.inModule) {\n      this.raiseWithData(node.start, {\n        code: \"BABEL_PARSER_SOURCETYPE_MODULE_REQUIRED\"\n      }, ErrorMessages.ImportOutsideModule);\n    }\n  }\n\n  takeDecorators(node) {\n    const decorators = this.state.decoratorStack[this.state.decoratorStack.length - 1];\n\n    if (decorators.length) {\n      node.decorators = decorators;\n      this.resetStartLocationFromNode(node, decorators[0]);\n      this.state.decoratorStack[this.state.decoratorStack.length - 1] = [];\n    }\n  }\n\n  canHaveLeadingDecorator() {\n    return this.match(types._class);\n  }\n\n  parseDecorators(allowExport) {\n    const currentContextDecorators = this.state.decoratorStack[this.state.decoratorStack.length - 1];\n\n    while (this.match(types.at)) {\n      const decorator = this.parseDecorator();\n      currentContextDecorators.push(decorator);\n    }\n\n    if (this.match(types._export)) {\n      if (!allowExport) {\n        this.unexpected();\n      }\n\n      if (this.hasPlugin(\"decorators\") && !this.getPluginOption(\"decorators\", \"decoratorsBeforeExport\")) {\n        this.raise(this.state.start, ErrorMessages.DecoratorExportClass);\n      }\n    } else if (!this.canHaveLeadingDecorator()) {\n      throw this.raise(this.state.start, ErrorMessages.UnexpectedLeadingDecorator);\n    }\n  }\n\n  parseDecorator() {\n    this.expectOnePlugin([\"decorators-legacy\", \"decorators\"]);\n    const node = this.startNode();\n    this.next();\n\n    if (this.hasPlugin(\"decorators\")) {\n      this.state.decoratorStack.push([]);\n      const startPos = this.state.start;\n      const startLoc = this.state.startLoc;\n      let expr;\n\n      if (this.eat(types.parenL)) {\n        expr = this.parseExpression();\n        this.expect(types.parenR);\n      } else {\n        expr = this.parseIdentifier(false);\n\n        while (this.eat(types.dot)) {\n          const node = this.startNodeAt(startPos, startLoc);\n          node.object = expr;\n          node.property = this.parseIdentifier(true);\n          node.computed = false;\n          expr = this.finishNode(node, \"MemberExpression\");\n        }\n      }\n\n      node.expression = this.parseMaybeDecoratorArguments(expr);\n      this.state.decoratorStack.pop();\n    } else {\n      node.expression = this.parseExprSubscripts();\n    }\n\n    return this.finishNode(node, \"Decorator\");\n  }\n\n  parseMaybeDecoratorArguments(expr) {\n    if (this.eat(types.parenL)) {\n      const node = this.startNodeAtNode(expr);\n      node.callee = expr;\n      node.arguments = this.parseCallExpressionArguments(types.parenR, false);\n      this.toReferencedList(node.arguments);\n      return this.finishNode(node, \"CallExpression\");\n    }\n\n    return expr;\n  }\n\n  parseBreakContinueStatement(node, keyword) {\n    const isBreak = keyword === \"break\";\n    this.next();\n\n    if (this.isLineTerminator()) {\n      node.label = null;\n    } else {\n      node.label = this.parseIdentifier();\n      this.semicolon();\n    }\n\n    this.verifyBreakContinue(node, keyword);\n    return this.finishNode(node, isBreak ? \"BreakStatement\" : \"ContinueStatement\");\n  }\n\n  verifyBreakContinue(node, keyword) {\n    const isBreak = keyword === \"break\";\n    let i;\n\n    for (i = 0; i < this.state.labels.length; ++i) {\n      const lab = this.state.labels[i];\n\n      if (node.label == null || lab.name === node.label.name) {\n        if (lab.kind != null && (isBreak || lab.kind === \"loop\")) break;\n        if (node.label && isBreak) break;\n      }\n    }\n\n    if (i === this.state.labels.length) {\n      this.raise(node.start, ErrorMessages.IllegalBreakContinue, keyword);\n    }\n  }\n\n  parseDebuggerStatement(node) {\n    this.next();\n    this.semicolon();\n    return this.finishNode(node, \"DebuggerStatement\");\n  }\n\n  parseHeaderExpression() {\n    this.expect(types.parenL);\n    const val = this.parseExpression();\n    this.expect(types.parenR);\n    return val;\n  }\n\n  parseDoStatement(node) {\n    this.next();\n    this.state.labels.push(loopLabel);\n    node.body = this.withTopicForbiddingContext(() => this.parseStatement(\"do\"));\n    this.state.labels.pop();\n    this.expect(types._while);\n    node.test = this.parseHeaderExpression();\n    this.eat(types.semi);\n    return this.finishNode(node, \"DoWhileStatement\");\n  }\n\n  parseForStatement(node) {\n    this.next();\n    this.state.labels.push(loopLabel);\n    let awaitAt = -1;\n\n    if (this.isAwaitAllowed() && this.eatContextual(\"await\")) {\n      awaitAt = this.state.lastTokStart;\n    }\n\n    this.scope.enter(SCOPE_OTHER);\n    this.expect(types.parenL);\n\n    if (this.match(types.semi)) {\n      if (awaitAt > -1) {\n        this.unexpected(awaitAt);\n      }\n\n      return this.parseFor(node, null);\n    }\n\n    const isLet = this.isLet();\n\n    if (this.match(types._var) || this.match(types._const) || isLet) {\n      const init = this.startNode();\n      const kind = isLet ? \"let\" : this.state.value;\n      this.next();\n      this.parseVar(init, true, kind);\n      this.finishNode(init, \"VariableDeclaration\");\n\n      if ((this.match(types._in) || this.isContextual(\"of\")) && init.declarations.length === 1) {\n        return this.parseForIn(node, init, awaitAt);\n      }\n\n      if (awaitAt > -1) {\n        this.unexpected(awaitAt);\n      }\n\n      return this.parseFor(node, init);\n    }\n\n    const refExpressionErrors = new ExpressionErrors();\n    const init = this.parseExpression(true, refExpressionErrors);\n\n    if (this.match(types._in) || this.isContextual(\"of\")) {\n      this.toAssignable(init, true);\n      const description = this.isContextual(\"of\") ? \"for-of statement\" : \"for-in statement\";\n      this.checkLVal(init, description);\n      return this.parseForIn(node, init, awaitAt);\n    } else {\n      this.checkExpressionErrors(refExpressionErrors, true);\n    }\n\n    if (awaitAt > -1) {\n      this.unexpected(awaitAt);\n    }\n\n    return this.parseFor(node, init);\n  }\n\n  parseFunctionStatement(node, isAsync, declarationPosition) {\n    this.next();\n    return this.parseFunction(node, FUNC_STATEMENT | (declarationPosition ? 0 : FUNC_HANGING_STATEMENT), isAsync);\n  }\n\n  parseIfStatement(node) {\n    this.next();\n    node.test = this.parseHeaderExpression();\n    node.consequent = this.parseStatement(\"if\");\n    node.alternate = this.eat(types._else) ? this.parseStatement(\"if\") : null;\n    return this.finishNode(node, \"IfStatement\");\n  }\n\n  parseReturnStatement(node) {\n    if (!this.prodParam.hasReturn && !this.options.allowReturnOutsideFunction) {\n      this.raise(this.state.start, ErrorMessages.IllegalReturn);\n    }\n\n    this.next();\n\n    if (this.isLineTerminator()) {\n      node.argument = null;\n    } else {\n      node.argument = this.parseExpression();\n      this.semicolon();\n    }\n\n    return this.finishNode(node, \"ReturnStatement\");\n  }\n\n  parseSwitchStatement(node) {\n    this.next();\n    node.discriminant = this.parseHeaderExpression();\n    const cases = node.cases = [];\n    this.expect(types.braceL);\n    this.state.labels.push(switchLabel);\n    this.scope.enter(SCOPE_OTHER);\n    let cur;\n\n    for (let sawDefault; !this.match(types.braceR);) {\n      if (this.match(types._case) || this.match(types._default)) {\n        const isCase = this.match(types._case);\n        if (cur) this.finishNode(cur, \"SwitchCase\");\n        cases.push(cur = this.startNode());\n        cur.consequent = [];\n        this.next();\n\n        if (isCase) {\n          cur.test = this.parseExpression();\n        } else {\n          if (sawDefault) {\n            this.raise(this.state.lastTokStart, ErrorMessages.MultipleDefaultsInSwitch);\n          }\n\n          sawDefault = true;\n          cur.test = null;\n        }\n\n        this.expect(types.colon);\n      } else {\n        if (cur) {\n          cur.consequent.push(this.parseStatement(null));\n        } else {\n          this.unexpected();\n        }\n      }\n    }\n\n    this.scope.exit();\n    if (cur) this.finishNode(cur, \"SwitchCase\");\n    this.next();\n    this.state.labels.pop();\n    return this.finishNode(node, \"SwitchStatement\");\n  }\n\n  parseThrowStatement(node) {\n    this.next();\n\n    if (this.hasPrecedingLineBreak()) {\n      this.raise(this.state.lastTokEnd, ErrorMessages.NewlineAfterThrow);\n    }\n\n    node.argument = this.parseExpression();\n    this.semicolon();\n    return this.finishNode(node, \"ThrowStatement\");\n  }\n\n  parseCatchClauseParam() {\n    const param = this.parseBindingAtom();\n    const simple = param.type === \"Identifier\";\n    this.scope.enter(simple ? SCOPE_SIMPLE_CATCH : 0);\n    this.checkLVal(param, \"catch clause\", BIND_LEXICAL);\n    return param;\n  }\n\n  parseTryStatement(node) {\n    this.next();\n    node.block = this.parseBlock();\n    node.handler = null;\n\n    if (this.match(types._catch)) {\n      const clause = this.startNode();\n      this.next();\n\n      if (this.match(types.parenL)) {\n        this.expect(types.parenL);\n        clause.param = this.parseCatchClauseParam();\n        this.expect(types.parenR);\n      } else {\n        clause.param = null;\n        this.scope.enter(SCOPE_OTHER);\n      }\n\n      clause.body = this.withTopicForbiddingContext(() => this.parseBlock(false, false));\n      this.scope.exit();\n      node.handler = this.finishNode(clause, \"CatchClause\");\n    }\n\n    node.finalizer = this.eat(types._finally) ? this.parseBlock() : null;\n\n    if (!node.handler && !node.finalizer) {\n      this.raise(node.start, ErrorMessages.NoCatchOrFinally);\n    }\n\n    return this.finishNode(node, \"TryStatement\");\n  }\n\n  parseVarStatement(node, kind) {\n    this.next();\n    this.parseVar(node, false, kind);\n    this.semicolon();\n    return this.finishNode(node, \"VariableDeclaration\");\n  }\n\n  parseWhileStatement(node) {\n    this.next();\n    node.test = this.parseHeaderExpression();\n    this.state.labels.push(loopLabel);\n    node.body = this.withTopicForbiddingContext(() => this.parseStatement(\"while\"));\n    this.state.labels.pop();\n    return this.finishNode(node, \"WhileStatement\");\n  }\n\n  parseWithStatement(node) {\n    if (this.state.strict) {\n      this.raise(this.state.start, ErrorMessages.StrictWith);\n    }\n\n    this.next();\n    node.object = this.parseHeaderExpression();\n    node.body = this.withTopicForbiddingContext(() => this.parseStatement(\"with\"));\n    return this.finishNode(node, \"WithStatement\");\n  }\n\n  parseEmptyStatement(node) {\n    this.next();\n    return this.finishNode(node, \"EmptyStatement\");\n  }\n\n  parseLabeledStatement(node, maybeName, expr, context) {\n    for (let _i2 = 0, _this$state$labels = this.state.labels; _i2 < _this$state$labels.length; _i2++) {\n      const label = _this$state$labels[_i2];\n\n      if (label.name === maybeName) {\n        this.raise(expr.start, ErrorMessages.LabelRedeclaration, maybeName);\n      }\n    }\n\n    const kind = this.state.type.isLoop ? \"loop\" : this.match(types._switch) ? \"switch\" : null;\n\n    for (let i = this.state.labels.length - 1; i >= 0; i--) {\n      const label = this.state.labels[i];\n\n      if (label.statementStart === node.start) {\n        label.statementStart = this.state.start;\n        label.kind = kind;\n      } else {\n        break;\n      }\n    }\n\n    this.state.labels.push({\n      name: maybeName,\n      kind: kind,\n      statementStart: this.state.start\n    });\n    node.body = this.parseStatement(context ? context.indexOf(\"label\") === -1 ? context + \"label\" : context : \"label\");\n    this.state.labels.pop();\n    node.label = expr;\n    return this.finishNode(node, \"LabeledStatement\");\n  }\n\n  parseExpressionStatement(node, expr) {\n    node.expression = expr;\n    this.semicolon();\n    return this.finishNode(node, \"ExpressionStatement\");\n  }\n\n  parseBlock(allowDirectives = false, createNewLexicalScope = true, afterBlockParse) {\n    const node = this.startNode();\n\n    if (allowDirectives) {\n      this.state.strictErrors.clear();\n    }\n\n    this.expect(types.braceL);\n\n    if (createNewLexicalScope) {\n      this.scope.enter(SCOPE_OTHER);\n    }\n\n    this.parseBlockBody(node, allowDirectives, false, types.braceR, afterBlockParse);\n\n    if (createNewLexicalScope) {\n      this.scope.exit();\n    }\n\n    return this.finishNode(node, \"BlockStatement\");\n  }\n\n  isValidDirective(stmt) {\n    return stmt.type === \"ExpressionStatement\" && stmt.expression.type === \"StringLiteral\" && !stmt.expression.extra.parenthesized;\n  }\n\n  parseBlockBody(node, allowDirectives, topLevel, end, afterBlockParse) {\n    const body = node.body = [];\n    const directives = node.directives = [];\n    this.parseBlockOrModuleBlockBody(body, allowDirectives ? directives : undefined, topLevel, end, afterBlockParse);\n  }\n\n  parseBlockOrModuleBlockBody(body, directives, topLevel, end, afterBlockParse) {\n    const oldStrict = this.state.strict;\n    let hasStrictModeDirective = false;\n    let parsedNonDirective = false;\n\n    while (!this.match(end)) {\n      const stmt = this.parseStatement(null, topLevel);\n\n      if (directives && !parsedNonDirective) {\n        if (this.isValidDirective(stmt)) {\n          const directive = this.stmtToDirective(stmt);\n          directives.push(directive);\n\n          if (!hasStrictModeDirective && directive.value.value === \"use strict\") {\n            hasStrictModeDirective = true;\n            this.setStrict(true);\n          }\n\n          continue;\n        }\n\n        parsedNonDirective = true;\n        this.state.strictErrors.clear();\n      }\n\n      body.push(stmt);\n    }\n\n    if (afterBlockParse) {\n      afterBlockParse.call(this, hasStrictModeDirective);\n    }\n\n    if (!oldStrict) {\n      this.setStrict(false);\n    }\n\n    this.next();\n  }\n\n  parseFor(node, init) {\n    node.init = init;\n    this.semicolon(false);\n    node.test = this.match(types.semi) ? null : this.parseExpression();\n    this.semicolon(false);\n    node.update = this.match(types.parenR) ? null : this.parseExpression();\n    this.expect(types.parenR);\n    node.body = this.withTopicForbiddingContext(() => this.parseStatement(\"for\"));\n    this.scope.exit();\n    this.state.labels.pop();\n    return this.finishNode(node, \"ForStatement\");\n  }\n\n  parseForIn(node, init, awaitAt) {\n    const isForIn = this.match(types._in);\n    this.next();\n\n    if (isForIn) {\n      if (awaitAt > -1) this.unexpected(awaitAt);\n    } else {\n      node.await = awaitAt > -1;\n    }\n\n    if (init.type === \"VariableDeclaration\" && init.declarations[0].init != null && (!isForIn || this.state.strict || init.kind !== \"var\" || init.declarations[0].id.type !== \"Identifier\")) {\n      this.raise(init.start, ErrorMessages.ForInOfLoopInitializer, isForIn ? \"for-in\" : \"for-of\");\n    } else if (init.type === \"AssignmentPattern\") {\n      this.raise(init.start, ErrorMessages.InvalidLhs, \"for-loop\");\n    }\n\n    node.left = init;\n    node.right = isForIn ? this.parseExpression() : this.parseMaybeAssignAllowIn();\n    this.expect(types.parenR);\n    node.body = this.withTopicForbiddingContext(() => this.parseStatement(\"for\"));\n    this.scope.exit();\n    this.state.labels.pop();\n    return this.finishNode(node, isForIn ? \"ForInStatement\" : \"ForOfStatement\");\n  }\n\n  parseVar(node, isFor, kind) {\n    const declarations = node.declarations = [];\n    const isTypescript = this.hasPlugin(\"typescript\");\n    node.kind = kind;\n\n    for (;;) {\n      const decl = this.startNode();\n      this.parseVarId(decl, kind);\n\n      if (this.eat(types.eq)) {\n        decl.init = isFor ? this.parseMaybeAssignDisallowIn() : this.parseMaybeAssignAllowIn();\n      } else {\n        if (kind === \"const\" && !(this.match(types._in) || this.isContextual(\"of\"))) {\n          if (!isTypescript) {\n            this.raise(this.state.lastTokEnd, ErrorMessages.DeclarationMissingInitializer, \"Const declarations\");\n          }\n        } else if (decl.id.type !== \"Identifier\" && !(isFor && (this.match(types._in) || this.isContextual(\"of\")))) {\n          this.raise(this.state.lastTokEnd, ErrorMessages.DeclarationMissingInitializer, \"Complex binding patterns\");\n        }\n\n        decl.init = null;\n      }\n\n      declarations.push(this.finishNode(decl, \"VariableDeclarator\"));\n      if (!this.eat(types.comma)) break;\n    }\n\n    return node;\n  }\n\n  parseVarId(decl, kind) {\n    decl.id = this.parseBindingAtom();\n    this.checkLVal(decl.id, \"variable declaration\", kind === \"var\" ? BIND_VAR : BIND_LEXICAL, undefined, kind !== \"var\");\n  }\n\n  parseFunction(node, statement = FUNC_NO_FLAGS, isAsync = false) {\n    const isStatement = statement & FUNC_STATEMENT;\n    const isHangingStatement = statement & FUNC_HANGING_STATEMENT;\n    const requireId = !!isStatement && !(statement & FUNC_NULLABLE_ID);\n    this.initFunction(node, isAsync);\n\n    if (this.match(types.star) && isHangingStatement) {\n      this.raise(this.state.start, ErrorMessages.GeneratorInSingleStatementContext);\n    }\n\n    node.generator = this.eat(types.star);\n\n    if (isStatement) {\n      node.id = this.parseFunctionId(requireId);\n    }\n\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n    this.state.maybeInArrowParameters = false;\n    this.scope.enter(SCOPE_FUNCTION);\n    this.prodParam.enter(functionFlags(isAsync, node.generator));\n\n    if (!isStatement) {\n      node.id = this.parseFunctionId();\n    }\n\n    this.parseFunctionParams(node, false);\n    this.withTopicForbiddingContext(() => {\n      this.parseFunctionBodyAndFinish(node, isStatement ? \"FunctionDeclaration\" : \"FunctionExpression\");\n    });\n    this.prodParam.exit();\n    this.scope.exit();\n\n    if (isStatement && !isHangingStatement) {\n      this.registerFunctionStatementId(node);\n    }\n\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n    return node;\n  }\n\n  parseFunctionId(requireId) {\n    return requireId || this.match(types.name) ? this.parseIdentifier() : null;\n  }\n\n  parseFunctionParams(node, allowModifiers) {\n    this.expect(types.parenL);\n    this.expressionScope.enter(newParameterDeclarationScope());\n    node.params = this.parseBindingList(types.parenR, 41, false, allowModifiers);\n    this.expressionScope.exit();\n  }\n\n  registerFunctionStatementId(node) {\n    if (!node.id) return;\n    this.scope.declareName(node.id.name, this.state.strict || node.generator || node.async ? this.scope.treatFunctionsAsVar ? BIND_VAR : BIND_LEXICAL : BIND_FUNCTION, node.id.start);\n  }\n\n  parseClass(node, isStatement, optionalId) {\n    this.next();\n    this.takeDecorators(node);\n    const oldStrict = this.state.strict;\n    this.state.strict = true;\n    this.parseClassId(node, isStatement, optionalId);\n    this.parseClassSuper(node);\n    node.body = this.parseClassBody(!!node.superClass, oldStrict);\n    return this.finishNode(node, isStatement ? \"ClassDeclaration\" : \"ClassExpression\");\n  }\n\n  isClassProperty() {\n    return this.match(types.eq) || this.match(types.semi) || this.match(types.braceR);\n  }\n\n  isClassMethod() {\n    return this.match(types.parenL);\n  }\n\n  isNonstaticConstructor(method) {\n    return !method.computed && !method.static && (method.key.name === \"constructor\" || method.key.value === \"constructor\");\n  }\n\n  parseClassBody(constructorAllowsSuper, oldStrict) {\n    this.classScope.enter();\n    const state = {\n      constructorAllowsSuper,\n      hadConstructor: false,\n      hadStaticBlock: false\n    };\n    let decorators = [];\n    const classBody = this.startNode();\n    classBody.body = [];\n    this.expect(types.braceL);\n    this.withTopicForbiddingContext(() => {\n      while (!this.match(types.braceR)) {\n        if (this.eat(types.semi)) {\n          if (decorators.length > 0) {\n            throw this.raise(this.state.lastTokEnd, ErrorMessages.DecoratorSemicolon);\n          }\n\n          continue;\n        }\n\n        if (this.match(types.at)) {\n          decorators.push(this.parseDecorator());\n          continue;\n        }\n\n        const member = this.startNode();\n\n        if (decorators.length) {\n          member.decorators = decorators;\n          this.resetStartLocationFromNode(member, decorators[0]);\n          decorators = [];\n        }\n\n        this.parseClassMember(classBody, member, state);\n\n        if (member.kind === \"constructor\" && member.decorators && member.decorators.length > 0) {\n          this.raise(member.start, ErrorMessages.DecoratorConstructor);\n        }\n      }\n    });\n    this.state.strict = oldStrict;\n    this.next();\n\n    if (decorators.length) {\n      throw this.raise(this.state.start, ErrorMessages.TrailingDecorator);\n    }\n\n    this.classScope.exit();\n    return this.finishNode(classBody, \"ClassBody\");\n  }\n\n  parseClassMemberFromModifier(classBody, member) {\n    const key = this.parseIdentifier(true);\n\n    if (this.isClassMethod()) {\n      const method = member;\n      method.kind = \"method\";\n      method.computed = false;\n      method.key = key;\n      method.static = false;\n      this.pushClassMethod(classBody, method, false, false, false, false);\n      return true;\n    } else if (this.isClassProperty()) {\n      const prop = member;\n      prop.computed = false;\n      prop.key = key;\n      prop.static = false;\n      classBody.body.push(this.parseClassProperty(prop));\n      return true;\n    }\n\n    return false;\n  }\n\n  parseClassMember(classBody, member, state) {\n    const isStatic = this.isContextual(\"static\");\n\n    if (isStatic) {\n      if (this.parseClassMemberFromModifier(classBody, member)) {\n        return;\n      }\n\n      if (this.eat(types.braceL)) {\n        this.parseClassStaticBlock(classBody, member, state);\n        return;\n      }\n    }\n\n    this.parseClassMemberWithIsStatic(classBody, member, state, isStatic);\n  }\n\n  parseClassMemberWithIsStatic(classBody, member, state, isStatic) {\n    const publicMethod = member;\n    const privateMethod = member;\n    const publicProp = member;\n    const privateProp = member;\n    const method = publicMethod;\n    const publicMember = publicMethod;\n    member.static = isStatic;\n\n    if (this.eat(types.star)) {\n      method.kind = \"method\";\n      this.parseClassElementName(method);\n\n      if (this.isPrivateName(method.key)) {\n        this.pushClassPrivateMethod(classBody, privateMethod, true, false);\n        return;\n      }\n\n      if (this.isNonstaticConstructor(publicMethod)) {\n        this.raise(publicMethod.key.start, ErrorMessages.ConstructorIsGenerator);\n      }\n\n      this.pushClassMethod(classBody, publicMethod, true, false, false, false);\n      return;\n    }\n\n    const containsEsc = this.state.containsEsc;\n    const key = this.parseClassElementName(member);\n    const isPrivate = this.isPrivateName(key);\n    const isSimple = key.type === \"Identifier\";\n    const maybeQuestionTokenStart = this.state.start;\n    this.parsePostMemberNameModifiers(publicMember);\n\n    if (this.isClassMethod()) {\n      method.kind = \"method\";\n\n      if (isPrivate) {\n        this.pushClassPrivateMethod(classBody, privateMethod, false, false);\n        return;\n      }\n\n      const isConstructor = this.isNonstaticConstructor(publicMethod);\n      let allowsDirectSuper = false;\n\n      if (isConstructor) {\n        publicMethod.kind = \"constructor\";\n\n        if (state.hadConstructor && !this.hasPlugin(\"typescript\")) {\n          this.raise(key.start, ErrorMessages.DuplicateConstructor);\n        }\n\n        state.hadConstructor = true;\n        allowsDirectSuper = state.constructorAllowsSuper;\n      }\n\n      this.pushClassMethod(classBody, publicMethod, false, false, isConstructor, allowsDirectSuper);\n    } else if (this.isClassProperty()) {\n      if (isPrivate) {\n        this.pushClassPrivateProperty(classBody, privateProp);\n      } else {\n        this.pushClassProperty(classBody, publicProp);\n      }\n    } else if (isSimple && key.name === \"async\" && !containsEsc && !this.isLineTerminator()) {\n      const isGenerator = this.eat(types.star);\n\n      if (publicMember.optional) {\n        this.unexpected(maybeQuestionTokenStart);\n      }\n\n      method.kind = \"method\";\n      this.parseClassElementName(method);\n      this.parsePostMemberNameModifiers(publicMember);\n\n      if (this.isPrivateName(method.key)) {\n        this.pushClassPrivateMethod(classBody, privateMethod, isGenerator, true);\n      } else {\n        if (this.isNonstaticConstructor(publicMethod)) {\n          this.raise(publicMethod.key.start, ErrorMessages.ConstructorIsAsync);\n        }\n\n        this.pushClassMethod(classBody, publicMethod, isGenerator, true, false, false);\n      }\n    } else if (isSimple && (key.name === \"get\" || key.name === \"set\") && !containsEsc && !(this.match(types.star) && this.isLineTerminator())) {\n      method.kind = key.name;\n      this.parseClassElementName(publicMethod);\n\n      if (this.isPrivateName(method.key)) {\n        this.pushClassPrivateMethod(classBody, privateMethod, false, false);\n      } else {\n        if (this.isNonstaticConstructor(publicMethod)) {\n          this.raise(publicMethod.key.start, ErrorMessages.ConstructorIsAccessor);\n        }\n\n        this.pushClassMethod(classBody, publicMethod, false, false, false, false);\n      }\n\n      this.checkGetterSetterParams(publicMethod);\n    } else if (this.isLineTerminator()) {\n      if (isPrivate) {\n        this.pushClassPrivateProperty(classBody, privateProp);\n      } else {\n        this.pushClassProperty(classBody, publicProp);\n      }\n    } else {\n      this.unexpected();\n    }\n  }\n\n  parseClassElementName(member) {\n    const key = this.parsePropertyName(member, true);\n\n    if (!member.computed && member.static && (key.name === \"prototype\" || key.value === \"prototype\")) {\n      this.raise(key.start, ErrorMessages.StaticPrototype);\n    }\n\n    if (this.isPrivateName(key) && this.getPrivateNameSV(key) === \"constructor\") {\n      this.raise(key.start, ErrorMessages.ConstructorClassPrivateField);\n    }\n\n    return key;\n  }\n\n  parseClassStaticBlock(classBody, member, state) {\n    var _member$decorators;\n\n    this.expectPlugin(\"classStaticBlock\", member.start);\n    this.scope.enter(SCOPE_CLASS | SCOPE_STATIC_BLOCK | SCOPE_SUPER);\n    const oldLabels = this.state.labels;\n    this.state.labels = [];\n    this.prodParam.enter(PARAM);\n    const body = member.body = [];\n    this.parseBlockOrModuleBlockBody(body, undefined, false, types.braceR);\n    this.prodParam.exit();\n    this.scope.exit();\n    this.state.labels = oldLabels;\n    classBody.body.push(this.finishNode(member, \"StaticBlock\"));\n\n    if (state.hadStaticBlock) {\n      this.raise(member.start, ErrorMessages.DuplicateStaticBlock);\n    }\n\n    if ((_member$decorators = member.decorators) == null ? void 0 : _member$decorators.length) {\n      this.raise(member.start, ErrorMessages.DecoratorStaticBlock);\n    }\n\n    state.hadStaticBlock = true;\n  }\n\n  pushClassProperty(classBody, prop) {\n    if (!prop.computed && (prop.key.name === \"constructor\" || prop.key.value === \"constructor\")) {\n      this.raise(prop.key.start, ErrorMessages.ConstructorClassField);\n    }\n\n    classBody.body.push(this.parseClassProperty(prop));\n  }\n\n  pushClassPrivateProperty(classBody, prop) {\n    this.expectPlugin(\"classPrivateProperties\", prop.key.start);\n    const node = this.parseClassPrivateProperty(prop);\n    classBody.body.push(node);\n    this.classScope.declarePrivateName(this.getPrivateNameSV(node.key), CLASS_ELEMENT_OTHER, node.key.start);\n  }\n\n  pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper) {\n    classBody.body.push(this.parseMethod(method, isGenerator, isAsync, isConstructor, allowsDirectSuper, \"ClassMethod\", true));\n  }\n\n  pushClassPrivateMethod(classBody, method, isGenerator, isAsync) {\n    this.expectPlugin(\"classPrivateMethods\", method.key.start);\n    const node = this.parseMethod(method, isGenerator, isAsync, false, false, \"ClassPrivateMethod\", true);\n    classBody.body.push(node);\n    const kind = node.kind === \"get\" ? node.static ? CLASS_ELEMENT_STATIC_GETTER : CLASS_ELEMENT_INSTANCE_GETTER : node.kind === \"set\" ? node.static ? CLASS_ELEMENT_STATIC_SETTER : CLASS_ELEMENT_INSTANCE_SETTER : CLASS_ELEMENT_OTHER;\n    this.classScope.declarePrivateName(this.getPrivateNameSV(node.key), kind, node.key.start);\n  }\n\n  parsePostMemberNameModifiers(methodOrProp) {}\n\n  parseClassPrivateProperty(node) {\n    this.parseInitializer(node);\n    this.semicolon();\n    return this.finishNode(node, \"ClassPrivateProperty\");\n  }\n\n  parseClassProperty(node) {\n    if (!node.typeAnnotation || this.match(types.eq)) {\n      this.expectPlugin(\"classProperties\");\n    }\n\n    this.parseInitializer(node);\n    this.semicolon();\n    return this.finishNode(node, \"ClassProperty\");\n  }\n\n  parseInitializer(node) {\n    this.scope.enter(SCOPE_CLASS | SCOPE_SUPER);\n    this.expressionScope.enter(newExpressionScope());\n    this.prodParam.enter(PARAM);\n    node.value = this.eat(types.eq) ? this.parseMaybeAssignAllowIn() : null;\n    this.expressionScope.exit();\n    this.prodParam.exit();\n    this.scope.exit();\n  }\n\n  parseClassId(node, isStatement, optionalId, bindingType = BIND_CLASS) {\n    if (this.match(types.name)) {\n      node.id = this.parseIdentifier();\n\n      if (isStatement) {\n        this.checkLVal(node.id, \"class name\", bindingType);\n      }\n    } else {\n      if (optionalId || !isStatement) {\n        node.id = null;\n      } else {\n        this.unexpected(null, ErrorMessages.MissingClassName);\n      }\n    }\n  }\n\n  parseClassSuper(node) {\n    node.superClass = this.eat(types._extends) ? this.parseExprSubscripts() : null;\n  }\n\n  parseExport(node) {\n    const hasDefault = this.maybeParseExportDefaultSpecifier(node);\n    const parseAfterDefault = !hasDefault || this.eat(types.comma);\n    const hasStar = parseAfterDefault && this.eatExportStar(node);\n    const hasNamespace = hasStar && this.maybeParseExportNamespaceSpecifier(node);\n    const parseAfterNamespace = parseAfterDefault && (!hasNamespace || this.eat(types.comma));\n    const isFromRequired = hasDefault || hasStar;\n\n    if (hasStar && !hasNamespace) {\n      if (hasDefault) this.unexpected();\n      this.parseExportFrom(node, true);\n      return this.finishNode(node, \"ExportAllDeclaration\");\n    }\n\n    const hasSpecifiers = this.maybeParseExportNamedSpecifiers(node);\n\n    if (hasDefault && parseAfterDefault && !hasStar && !hasSpecifiers || hasNamespace && parseAfterNamespace && !hasSpecifiers) {\n      throw this.unexpected(null, types.braceL);\n    }\n\n    let hasDeclaration;\n\n    if (isFromRequired || hasSpecifiers) {\n      hasDeclaration = false;\n      this.parseExportFrom(node, isFromRequired);\n    } else {\n      hasDeclaration = this.maybeParseExportDeclaration(node);\n    }\n\n    if (isFromRequired || hasSpecifiers || hasDeclaration) {\n      this.checkExport(node, true, false, !!node.source);\n      return this.finishNode(node, \"ExportNamedDeclaration\");\n    }\n\n    if (this.eat(types._default)) {\n      node.declaration = this.parseExportDefaultExpression();\n      this.checkExport(node, true, true);\n      return this.finishNode(node, \"ExportDefaultDeclaration\");\n    }\n\n    throw this.unexpected(null, types.braceL);\n  }\n\n  eatExportStar(node) {\n    return this.eat(types.star);\n  }\n\n  maybeParseExportDefaultSpecifier(node) {\n    if (this.isExportDefaultSpecifier()) {\n      this.expectPlugin(\"exportDefaultFrom\");\n      const specifier = this.startNode();\n      specifier.exported = this.parseIdentifier(true);\n      node.specifiers = [this.finishNode(specifier, \"ExportDefaultSpecifier\")];\n      return true;\n    }\n\n    return false;\n  }\n\n  maybeParseExportNamespaceSpecifier(node) {\n    if (this.isContextual(\"as\")) {\n      if (!node.specifiers) node.specifiers = [];\n      const specifier = this.startNodeAt(this.state.lastTokStart, this.state.lastTokStartLoc);\n      this.next();\n      specifier.exported = this.parseModuleExportName();\n      node.specifiers.push(this.finishNode(specifier, \"ExportNamespaceSpecifier\"));\n      return true;\n    }\n\n    return false;\n  }\n\n  maybeParseExportNamedSpecifiers(node) {\n    if (this.match(types.braceL)) {\n      if (!node.specifiers) node.specifiers = [];\n      node.specifiers.push(...this.parseExportSpecifiers());\n      node.source = null;\n      node.declaration = null;\n      return true;\n    }\n\n    return false;\n  }\n\n  maybeParseExportDeclaration(node) {\n    if (this.shouldParseExportDeclaration()) {\n      node.specifiers = [];\n      node.source = null;\n      node.declaration = this.parseExportDeclaration(node);\n      return true;\n    }\n\n    return false;\n  }\n\n  isAsyncFunction() {\n    if (!this.isContextual(\"async\")) return false;\n    const next = this.nextTokenStart();\n    return !lineBreak.test(this.input.slice(this.state.pos, next)) && this.isUnparsedContextual(next, \"function\");\n  }\n\n  parseExportDefaultExpression() {\n    const expr = this.startNode();\n    const isAsync = this.isAsyncFunction();\n\n    if (this.match(types._function) || isAsync) {\n      this.next();\n\n      if (isAsync) {\n        this.next();\n      }\n\n      return this.parseFunction(expr, FUNC_STATEMENT | FUNC_NULLABLE_ID, isAsync);\n    } else if (this.match(types._class)) {\n      return this.parseClass(expr, true, true);\n    } else if (this.match(types.at)) {\n      if (this.hasPlugin(\"decorators\") && this.getPluginOption(\"decorators\", \"decoratorsBeforeExport\")) {\n        this.raise(this.state.start, ErrorMessages.DecoratorBeforeExport);\n      }\n\n      this.parseDecorators(false);\n      return this.parseClass(expr, true, true);\n    } else if (this.match(types._const) || this.match(types._var) || this.isLet()) {\n      throw this.raise(this.state.start, ErrorMessages.UnsupportedDefaultExport);\n    } else {\n      const res = this.parseMaybeAssignAllowIn();\n      this.semicolon();\n      return res;\n    }\n  }\n\n  parseExportDeclaration(node) {\n    return this.parseStatement(null);\n  }\n\n  isExportDefaultSpecifier() {\n    if (this.match(types.name)) {\n      const value = this.state.value;\n\n      if (value === \"async\" && !this.state.containsEsc || value === \"let\") {\n        return false;\n      }\n\n      if ((value === \"type\" || value === \"interface\") && !this.state.containsEsc) {\n        const l = this.lookahead();\n\n        if (l.type === types.name && l.value !== \"from\" || l.type === types.braceL) {\n          this.expectOnePlugin([\"flow\", \"typescript\"]);\n          return false;\n        }\n      }\n    } else if (!this.match(types._default)) {\n      return false;\n    }\n\n    const next = this.nextTokenStart();\n    const hasFrom = this.isUnparsedContextual(next, \"from\");\n\n    if (this.input.charCodeAt(next) === 44 || this.match(types.name) && hasFrom) {\n      return true;\n    }\n\n    if (this.match(types._default) && hasFrom) {\n      const nextAfterFrom = this.input.charCodeAt(this.nextTokenStartSince(next + 4));\n      return nextAfterFrom === 34 || nextAfterFrom === 39;\n    }\n\n    return false;\n  }\n\n  parseExportFrom(node, expect) {\n    if (this.eatContextual(\"from\")) {\n      node.source = this.parseImportSource();\n      this.checkExport(node);\n      const assertions = this.maybeParseImportAssertions();\n\n      if (assertions) {\n        node.assertions = assertions;\n      }\n    } else {\n      if (expect) {\n        this.unexpected();\n      } else {\n        node.source = null;\n      }\n    }\n\n    this.semicolon();\n  }\n\n  shouldParseExportDeclaration() {\n    if (this.match(types.at)) {\n      this.expectOnePlugin([\"decorators\", \"decorators-legacy\"]);\n\n      if (this.hasPlugin(\"decorators\")) {\n        if (this.getPluginOption(\"decorators\", \"decoratorsBeforeExport\")) {\n          this.unexpected(this.state.start, ErrorMessages.DecoratorBeforeExport);\n        } else {\n          return true;\n        }\n      }\n    }\n\n    return this.state.type.keyword === \"var\" || this.state.type.keyword === \"const\" || this.state.type.keyword === \"function\" || this.state.type.keyword === \"class\" || this.isLet() || this.isAsyncFunction();\n  }\n\n  checkExport(node, checkNames, isDefault, isFrom) {\n    if (checkNames) {\n      if (isDefault) {\n        this.checkDuplicateExports(node, \"default\");\n\n        if (this.hasPlugin(\"exportDefaultFrom\")) {\n          var _declaration$extra;\n\n          const declaration = node.declaration;\n\n          if (declaration.type === \"Identifier\" && declaration.name === \"from\" && declaration.end - declaration.start === 4 && !((_declaration$extra = declaration.extra) == null ? void 0 : _declaration$extra.parenthesized)) {\n            this.raise(declaration.start, ErrorMessages.ExportDefaultFromAsIdentifier);\n          }\n        }\n      } else if (node.specifiers && node.specifiers.length) {\n        for (let _i3 = 0, _node$specifiers = node.specifiers; _i3 < _node$specifiers.length; _i3++) {\n          const specifier = _node$specifiers[_i3];\n          const {\n            exported\n          } = specifier;\n          const exportedName = exported.type === \"Identifier\" ? exported.name : exported.value;\n          this.checkDuplicateExports(specifier, exportedName);\n\n          if (!isFrom && specifier.local) {\n            const {\n              local\n            } = specifier;\n\n            if (local.type === \"StringLiteral\") {\n              this.raise(specifier.start, ErrorMessages.ExportBindingIsString, local.value, exportedName);\n            } else {\n              this.checkReservedWord(local.name, local.start, true, false);\n              this.scope.checkLocalExport(local);\n            }\n          }\n        }\n      } else if (node.declaration) {\n        if (node.declaration.type === \"FunctionDeclaration\" || node.declaration.type === \"ClassDeclaration\") {\n          const id = node.declaration.id;\n          if (!id) throw new Error(\"Assertion failure\");\n          this.checkDuplicateExports(node, id.name);\n        } else if (node.declaration.type === \"VariableDeclaration\") {\n          for (let _i4 = 0, _node$declaration$dec = node.declaration.declarations; _i4 < _node$declaration$dec.length; _i4++) {\n            const declaration = _node$declaration$dec[_i4];\n            this.checkDeclaration(declaration.id);\n          }\n        }\n      }\n    }\n\n    const currentContextDecorators = this.state.decoratorStack[this.state.decoratorStack.length - 1];\n\n    if (currentContextDecorators.length) {\n      throw this.raise(node.start, ErrorMessages.UnsupportedDecoratorExport);\n    }\n  }\n\n  checkDeclaration(node) {\n    if (node.type === \"Identifier\") {\n      this.checkDuplicateExports(node, node.name);\n    } else if (node.type === \"ObjectPattern\") {\n      for (let _i5 = 0, _node$properties = node.properties; _i5 < _node$properties.length; _i5++) {\n        const prop = _node$properties[_i5];\n        this.checkDeclaration(prop);\n      }\n    } else if (node.type === \"ArrayPattern\") {\n      for (let _i6 = 0, _node$elements = node.elements; _i6 < _node$elements.length; _i6++) {\n        const elem = _node$elements[_i6];\n\n        if (elem) {\n          this.checkDeclaration(elem);\n        }\n      }\n    } else if (node.type === \"ObjectProperty\") {\n      this.checkDeclaration(node.value);\n    } else if (node.type === \"RestElement\") {\n      this.checkDeclaration(node.argument);\n    } else if (node.type === \"AssignmentPattern\") {\n      this.checkDeclaration(node.left);\n    }\n  }\n\n  checkDuplicateExports(node, name) {\n    if (this.state.exportedIdentifiers.indexOf(name) > -1) {\n      this.raise(node.start, name === \"default\" ? ErrorMessages.DuplicateDefaultExport : ErrorMessages.DuplicateExport, name);\n    }\n\n    this.state.exportedIdentifiers.push(name);\n  }\n\n  parseExportSpecifiers() {\n    const nodes = [];\n    let first = true;\n    this.expect(types.braceL);\n\n    while (!this.eat(types.braceR)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(types.comma);\n        if (this.eat(types.braceR)) break;\n      }\n\n      const node = this.startNode();\n      node.local = this.parseModuleExportName();\n      node.exported = this.eatContextual(\"as\") ? this.parseModuleExportName() : node.local.__clone();\n      nodes.push(this.finishNode(node, \"ExportSpecifier\"));\n    }\n\n    return nodes;\n  }\n\n  parseModuleExportName() {\n    if (this.match(types.string)) {\n      this.expectPlugin(\"moduleStringNames\");\n      const result = this.parseLiteral(this.state.value, \"StringLiteral\");\n      const surrogate = result.value.match(loneSurrogate);\n\n      if (surrogate) {\n        this.raise(result.start, ErrorMessages.ModuleExportNameHasLoneSurrogate, surrogate[0].charCodeAt(0).toString(16));\n      }\n\n      return result;\n    }\n\n    return this.parseIdentifier(true);\n  }\n\n  parseImport(node) {\n    node.specifiers = [];\n\n    if (!this.match(types.string)) {\n      const hasDefault = this.maybeParseDefaultImportSpecifier(node);\n      const parseNext = !hasDefault || this.eat(types.comma);\n      const hasStar = parseNext && this.maybeParseStarImportSpecifier(node);\n      if (parseNext && !hasStar) this.parseNamedImportSpecifiers(node);\n      this.expectContextual(\"from\");\n    }\n\n    node.source = this.parseImportSource();\n    const assertions = this.maybeParseImportAssertions();\n\n    if (assertions) {\n      node.assertions = assertions;\n    } else {\n        const attributes = this.maybeParseModuleAttributes();\n\n        if (attributes) {\n          node.attributes = attributes;\n        }\n      }\n\n    this.semicolon();\n    return this.finishNode(node, \"ImportDeclaration\");\n  }\n\n  parseImportSource() {\n    if (!this.match(types.string)) this.unexpected();\n    return this.parseExprAtom();\n  }\n\n  shouldParseDefaultImport(node) {\n    return this.match(types.name);\n  }\n\n  parseImportSpecifierLocal(node, specifier, type, contextDescription) {\n    specifier.local = this.parseIdentifier();\n    this.checkLVal(specifier.local, contextDescription, BIND_LEXICAL);\n    node.specifiers.push(this.finishNode(specifier, type));\n  }\n\n  parseAssertEntries() {\n    const attrs = [];\n    const attrNames = new Set();\n\n    do {\n      if (this.match(types.braceR)) {\n        break;\n      }\n\n      const node = this.startNode();\n      const keyName = this.state.value;\n\n      if (this.match(types.string)) {\n        node.key = this.parseLiteral(keyName, \"StringLiteral\");\n      } else {\n        node.key = this.parseIdentifier(true);\n      }\n\n      this.expect(types.colon);\n\n      if (keyName !== \"type\") {\n        this.raise(node.key.start, ErrorMessages.ModuleAttributeDifferentFromType, keyName);\n      }\n\n      if (attrNames.has(keyName)) {\n        this.raise(node.key.start, ErrorMessages.ModuleAttributesWithDuplicateKeys, keyName);\n      }\n\n      attrNames.add(keyName);\n\n      if (!this.match(types.string)) {\n        throw this.unexpected(this.state.start, ErrorMessages.ModuleAttributeInvalidValue);\n      }\n\n      node.value = this.parseLiteral(this.state.value, \"StringLiteral\");\n      this.finishNode(node, \"ImportAttribute\");\n      attrs.push(node);\n    } while (this.eat(types.comma));\n\n    return attrs;\n  }\n\n  maybeParseModuleAttributes() {\n    if (this.match(types._with) && !this.hasPrecedingLineBreak()) {\n      this.expectPlugin(\"moduleAttributes\");\n      this.next();\n    } else {\n      if (this.hasPlugin(\"moduleAttributes\")) return [];\n      return null;\n    }\n\n    const attrs = [];\n    const attributes = new Set();\n\n    do {\n      const node = this.startNode();\n      node.key = this.parseIdentifier(true);\n\n      if (node.key.name !== \"type\") {\n        this.raise(node.key.start, ErrorMessages.ModuleAttributeDifferentFromType, node.key.name);\n      }\n\n      if (attributes.has(node.key.name)) {\n        this.raise(node.key.start, ErrorMessages.ModuleAttributesWithDuplicateKeys, node.key.name);\n      }\n\n      attributes.add(node.key.name);\n      this.expect(types.colon);\n\n      if (!this.match(types.string)) {\n        throw this.unexpected(this.state.start, ErrorMessages.ModuleAttributeInvalidValue);\n      }\n\n      node.value = this.parseLiteral(this.state.value, \"StringLiteral\");\n      this.finishNode(node, \"ImportAttribute\");\n      attrs.push(node);\n    } while (this.eat(types.comma));\n\n    return attrs;\n  }\n\n  maybeParseImportAssertions() {\n    if (this.isContextual(\"assert\") && !this.hasPrecedingLineBreak()) {\n      this.expectPlugin(\"importAssertions\");\n      this.next();\n    } else {\n      if (this.hasPlugin(\"importAssertions\")) return [];\n      return null;\n    }\n\n    this.eat(types.braceL);\n    const attrs = this.parseAssertEntries();\n    this.eat(types.braceR);\n    return attrs;\n  }\n\n  maybeParseDefaultImportSpecifier(node) {\n    if (this.shouldParseDefaultImport(node)) {\n      this.parseImportSpecifierLocal(node, this.startNode(), \"ImportDefaultSpecifier\", \"default import specifier\");\n      return true;\n    }\n\n    return false;\n  }\n\n  maybeParseStarImportSpecifier(node) {\n    if (this.match(types.star)) {\n      const specifier = this.startNode();\n      this.next();\n      this.expectContextual(\"as\");\n      this.parseImportSpecifierLocal(node, specifier, \"ImportNamespaceSpecifier\", \"import namespace specifier\");\n      return true;\n    }\n\n    return false;\n  }\n\n  parseNamedImportSpecifiers(node) {\n    let first = true;\n    this.expect(types.braceL);\n\n    while (!this.eat(types.braceR)) {\n      if (first) {\n        first = false;\n      } else {\n        if (this.eat(types.colon)) {\n          throw this.raise(this.state.start, ErrorMessages.DestructureNamedImport);\n        }\n\n        this.expect(types.comma);\n        if (this.eat(types.braceR)) break;\n      }\n\n      this.parseImportSpecifier(node);\n    }\n  }\n\n  parseImportSpecifier(node) {\n    const specifier = this.startNode();\n    specifier.imported = this.parseModuleExportName();\n\n    if (this.eatContextual(\"as\")) {\n      specifier.local = this.parseIdentifier();\n    } else {\n      const {\n        imported\n      } = specifier;\n\n      if (imported.type === \"StringLiteral\") {\n        throw this.raise(specifier.start, ErrorMessages.ImportBindingIsString, imported.value);\n      }\n\n      this.checkReservedWord(imported.name, specifier.start, true, true);\n      specifier.local = imported.__clone();\n    }\n\n    this.checkLVal(specifier.local, \"import specifier\", BIND_LEXICAL);\n    node.specifiers.push(this.finishNode(specifier, \"ImportSpecifier\"));\n  }\n\n}\n\nclass Parser extends StatementParser {\n  constructor(options, input) {\n    options = getOptions(options);\n    super(options, input);\n    this.options = options;\n    this.initializeScopes();\n    this.plugins = pluginsMap(this.options.plugins);\n    this.filename = options.sourceFilename;\n  }\n\n  getScopeHandler() {\n    return ScopeHandler;\n  }\n\n  parse() {\n    this.enterInitialScopes();\n    const file = this.startNode();\n    const program = this.startNode();\n    this.nextToken();\n    file.errors = null;\n    this.parseTopLevel(file, program);\n    file.errors = this.state.errors;\n    return file;\n  }\n\n}\n\nfunction pluginsMap(plugins) {\n  const pluginMap = new Map();\n\n  for (let _i = 0; _i < plugins.length; _i++) {\n    const plugin = plugins[_i];\n    const [name, options] = Array.isArray(plugin) ? plugin : [plugin, {}];\n    if (!pluginMap.has(name)) pluginMap.set(name, options || {});\n  }\n\n  return pluginMap;\n}\n\nfunction parse(input, options) {\n  var _options;\n\n  if (((_options = options) == null ? void 0 : _options.sourceType) === \"unambiguous\") {\n    options = Object.assign({}, options);\n\n    try {\n      options.sourceType = \"module\";\n      const parser = getParser(options, input);\n      const ast = parser.parse();\n\n      if (parser.sawUnambiguousESM) {\n        return ast;\n      }\n\n      if (parser.ambiguousScriptDifferentAst) {\n        try {\n          options.sourceType = \"script\";\n          return getParser(options, input).parse();\n        } catch (_unused) {}\n      } else {\n        ast.program.sourceType = \"script\";\n      }\n\n      return ast;\n    } catch (moduleError) {\n      try {\n        options.sourceType = \"script\";\n        return getParser(options, input).parse();\n      } catch (_unused2) {}\n\n      throw moduleError;\n    }\n  } else {\n    return getParser(options, input).parse();\n  }\n}\nfunction parseExpression(input, options) {\n  const parser = getParser(options, input);\n\n  if (parser.options.strictMode) {\n    parser.state.strict = true;\n  }\n\n  return parser.getExpression();\n}\n\nfunction getParser(options, input) {\n  let cls = Parser;\n\n  if (options == null ? void 0 : options.plugins) {\n    validatePlugins(options.plugins);\n    cls = getParserClass(options.plugins);\n  }\n\n  return new cls(options, input);\n}\n\nconst parserClassCache = {};\n\nfunction getParserClass(pluginsFromOptions) {\n  const pluginList = mixinPluginNames.filter(name => hasPlugin(pluginsFromOptions, name));\n  const key = pluginList.join(\"/\");\n  let cls = parserClassCache[key];\n\n  if (!cls) {\n    cls = Parser;\n\n    for (let _i = 0; _i < pluginList.length; _i++) {\n      const plugin = pluginList[_i];\n      cls = mixinPlugins[plugin](cls);\n    }\n\n    parserClassCache[key] = cls;\n  }\n\n  return cls;\n}\n\nexports.parse = parse;\nexports.parseExpression = parseExpression;\nexports.tokTypes = types;\n//# sourceMappingURL=index.js.map\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.codeFrameColumns = codeFrameColumns;\nexports.default = _default;\n\nvar _highlight = _interopRequireWildcard(require(\"@babel/highlight\"));\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nlet deprecationWarningShown = false;\n\nfunction getDefs(chalk) {\n  return {\n    gutter: chalk.grey,\n    marker: chalk.red.bold,\n    message: chalk.red.bold\n  };\n}\n\nconst NEWLINE = /\\r\\n|[\\n\\r\\u2028\\u2029]/;\n\nfunction getMarkerLines(loc, source, opts) {\n  const startLoc = Object.assign({\n    column: 0,\n    line: -1\n  }, loc.start);\n  const endLoc = Object.assign({}, startLoc, loc.end);\n  const {\n    linesAbove = 2,\n    linesBelow = 3\n  } = opts || {};\n  const startLine = startLoc.line;\n  const startColumn = startLoc.column;\n  const endLine = endLoc.line;\n  const endColumn = endLoc.column;\n  let start = Math.max(startLine - (linesAbove + 1), 0);\n  let end = Math.min(source.length, endLine + linesBelow);\n\n  if (startLine === -1) {\n    start = 0;\n  }\n\n  if (endLine === -1) {\n    end = source.length;\n  }\n\n  const lineDiff = endLine - startLine;\n  const markerLines = {};\n\n  if (lineDiff) {\n    for (let i = 0; i <= lineDiff; i++) {\n      const lineNumber = i + startLine;\n\n      if (!startColumn) {\n        markerLines[lineNumber] = true;\n      } else if (i === 0) {\n        const sourceLength = source[lineNumber - 1].length;\n        markerLines[lineNumber] = [startColumn, sourceLength - startColumn + 1];\n      } else if (i === lineDiff) {\n        markerLines[lineNumber] = [0, endColumn];\n      } else {\n        const sourceLength = source[lineNumber - i].length;\n        markerLines[lineNumber] = [0, sourceLength];\n      }\n    }\n  } else {\n    if (startColumn === endColumn) {\n      if (startColumn) {\n        markerLines[startLine] = [startColumn, 0];\n      } else {\n        markerLines[startLine] = true;\n      }\n    } else {\n      markerLines[startLine] = [startColumn, endColumn - startColumn];\n    }\n  }\n\n  return {\n    start,\n    end,\n    markerLines\n  };\n}\n\nfunction codeFrameColumns(rawLines, loc, opts = {}) {\n  const highlighted = (opts.highlightCode || opts.forceColor) && (0, _highlight.shouldHighlight)(opts);\n  const chalk = (0, _highlight.getChalk)(opts);\n  const defs = getDefs(chalk);\n\n  const maybeHighlight = (chalkFn, string) => {\n    return highlighted ? chalkFn(string) : string;\n  };\n\n  const lines = rawLines.split(NEWLINE);\n  const {\n    start,\n    end,\n    markerLines\n  } = getMarkerLines(loc, lines, opts);\n  const hasColumns = loc.start && typeof loc.start.column === \"number\";\n  const numberMaxWidth = String(end).length;\n  const highlightedLines = highlighted ? (0, _highlight.default)(rawLines, opts) : rawLines;\n  let frame = highlightedLines.split(NEWLINE).slice(start, end).map((line, index) => {\n    const number = start + 1 + index;\n    const paddedNumber = ` ${number}`.slice(-numberMaxWidth);\n    const gutter = ` ${paddedNumber} |`;\n    const hasMarker = markerLines[number];\n    const lastMarkerLine = !markerLines[number + 1];\n\n    if (hasMarker) {\n      let markerLine = \"\";\n\n      if (Array.isArray(hasMarker)) {\n        const markerSpacing = line.slice(0, Math.max(hasMarker[0] - 1, 0)).replace(/[^\\t]/g, \" \");\n        const numberOfMarkers = hasMarker[1] || 1;\n        markerLine = [\"\\n \", maybeHighlight(defs.gutter, gutter.replace(/\\d/g, \" \")), \" \", markerSpacing, maybeHighlight(defs.marker, \"^\").repeat(numberOfMarkers)].join(\"\");\n\n        if (lastMarkerLine && opts.message) {\n          markerLine += \" \" + maybeHighlight(defs.message, opts.message);\n        }\n      }\n\n      return [maybeHighlight(defs.marker, \">\"), maybeHighlight(defs.gutter, gutter), line.length > 0 ? ` ${line}` : \"\", markerLine].join(\"\");\n    } else {\n      return ` ${maybeHighlight(defs.gutter, gutter)}${line.length > 0 ? ` ${line}` : \"\"}`;\n    }\n  }).join(\"\\n\");\n\n  if (opts.message && !hasColumns) {\n    frame = `${\" \".repeat(numberMaxWidth + 1)}${opts.message}\\n${frame}`;\n  }\n\n  if (highlighted) {\n    return chalk.reset(frame);\n  } else {\n    return frame;\n  }\n}\n\nfunction _default(rawLines, lineNumber, colNumber, opts = {}) {\n  if (!deprecationWarningShown) {\n    deprecationWarningShown = true;\n    const message = \"Passing lineNumber and colNumber is deprecated to @babel/code-frame. Please use `codeFrameColumns`.\";\n\n    if (process.emitWarning) {\n      process.emitWarning(message, \"DeprecationWarning\");\n    } else {\n      const deprecationError = new Error(message);\n      deprecationError.name = \"DeprecationWarning\";\n      console.warn(new Error(message));\n    }\n  }\n\n  colNumber = Math.max(colNumber, 0);\n  const location = {\n    start: {\n      column: colNumber,\n      line: lineNumber\n    }\n  };\n  return codeFrameColumns(rawLines, location, opts);\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.merge = merge;\nexports.validate = validate;\nexports.normalizeReplacements = normalizeReplacements;\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction merge(a, b) {\n  const {\n    placeholderWhitelist = a.placeholderWhitelist,\n    placeholderPattern = a.placeholderPattern,\n    preserveComments = a.preserveComments,\n    syntacticPlaceholders = a.syntacticPlaceholders\n  } = b;\n  return {\n    parser: Object.assign({}, a.parser, b.parser),\n    placeholderWhitelist,\n    placeholderPattern,\n    preserveComments,\n    syntacticPlaceholders\n  };\n}\n\nfunction validate(opts) {\n  if (opts != null && typeof opts !== \"object\") {\n    throw new Error(\"Unknown template options.\");\n  }\n\n  const _ref = opts || {},\n        {\n    placeholderWhitelist,\n    placeholderPattern,\n    preserveComments,\n    syntacticPlaceholders\n  } = _ref,\n        parser = _objectWithoutPropertiesLoose(_ref, [\"placeholderWhitelist\", \"placeholderPattern\", \"preserveComments\", \"syntacticPlaceholders\"]);\n\n  if (placeholderWhitelist != null && !(placeholderWhitelist instanceof Set)) {\n    throw new Error(\"'.placeholderWhitelist' must be a Set, null, or undefined\");\n  }\n\n  if (placeholderPattern != null && !(placeholderPattern instanceof RegExp) && placeholderPattern !== false) {\n    throw new Error(\"'.placeholderPattern' must be a RegExp, false, null, or undefined\");\n  }\n\n  if (preserveComments != null && typeof preserveComments !== \"boolean\") {\n    throw new Error(\"'.preserveComments' must be a boolean, null, or undefined\");\n  }\n\n  if (syntacticPlaceholders != null && typeof syntacticPlaceholders !== \"boolean\") {\n    throw new Error(\"'.syntacticPlaceholders' must be a boolean, null, or undefined\");\n  }\n\n  if (syntacticPlaceholders === true && (placeholderWhitelist != null || placeholderPattern != null)) {\n    throw new Error(\"'.placeholderWhitelist' and '.placeholderPattern' aren't compatible\" + \" with '.syntacticPlaceholders: true'\");\n  }\n\n  return {\n    parser,\n    placeholderWhitelist: placeholderWhitelist || undefined,\n    placeholderPattern: placeholderPattern == null ? undefined : placeholderPattern,\n    preserveComments: preserveComments == null ? undefined : preserveComments,\n    syntacticPlaceholders: syntacticPlaceholders == null ? undefined : syntacticPlaceholders\n  };\n}\n\nfunction normalizeReplacements(replacements) {\n  if (Array.isArray(replacements)) {\n    return replacements.reduce((acc, replacement, i) => {\n      acc[\"$\" + i] = replacement;\n      return acc;\n    }, {});\n  } else if (typeof replacements === \"object\" || replacements == null) {\n    return replacements || undefined;\n  }\n\n  throw new Error(\"Template replacements must be an array, object, null, or undefined\");\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = parseAndBuildMetadata;\n\nvar t = _interopRequireWildcard(require(\"@babel/types\"));\n\nvar _parser = require(\"@babel/parser\");\n\nvar _codeFrame = require(\"@babel/code-frame\");\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nconst PATTERN = /^[_$A-Z0-9]+$/;\n\nfunction parseAndBuildMetadata(formatter, code, opts) {\n  const {\n    placeholderWhitelist,\n    placeholderPattern,\n    preserveComments,\n    syntacticPlaceholders\n  } = opts;\n  const ast = parseWithCodeFrame(code, opts.parser, syntacticPlaceholders);\n  t.removePropertiesDeep(ast, {\n    preserveComments\n  });\n  formatter.validate(ast);\n  const syntactic = {\n    placeholders: [],\n    placeholderNames: new Set()\n  };\n  const legacy = {\n    placeholders: [],\n    placeholderNames: new Set()\n  };\n  const isLegacyRef = {\n    value: undefined\n  };\n  t.traverse(ast, placeholderVisitorHandler, {\n    syntactic,\n    legacy,\n    isLegacyRef,\n    placeholderWhitelist,\n    placeholderPattern,\n    syntacticPlaceholders\n  });\n  return Object.assign({\n    ast\n  }, isLegacyRef.value ? legacy : syntactic);\n}\n\nfunction placeholderVisitorHandler(node, ancestors, state) {\n  var _state$placeholderWhi;\n\n  let name;\n\n  if (t.isPlaceholder(node)) {\n    if (state.syntacticPlaceholders === false) {\n      throw new Error(\"%%foo%%-style placeholders can't be used when \" + \"'.syntacticPlaceholders' is false.\");\n    } else {\n      name = node.name.name;\n      state.isLegacyRef.value = false;\n    }\n  } else if (state.isLegacyRef.value === false || state.syntacticPlaceholders) {\n    return;\n  } else if (t.isIdentifier(node) || t.isJSXIdentifier(node)) {\n    name = node.name;\n    state.isLegacyRef.value = true;\n  } else if (t.isStringLiteral(node)) {\n    name = node.value;\n    state.isLegacyRef.value = true;\n  } else {\n    return;\n  }\n\n  if (!state.isLegacyRef.value && (state.placeholderPattern != null || state.placeholderWhitelist != null)) {\n    throw new Error(\"'.placeholderWhitelist' and '.placeholderPattern' aren't compatible\" + \" with '.syntacticPlaceholders: true'\");\n  }\n\n  if (state.isLegacyRef.value && (state.placeholderPattern === false || !(state.placeholderPattern || PATTERN).test(name)) && !((_state$placeholderWhi = state.placeholderWhitelist) == null ? void 0 : _state$placeholderWhi.has(name))) {\n    return;\n  }\n\n  ancestors = ancestors.slice();\n  const {\n    node: parent,\n    key\n  } = ancestors[ancestors.length - 1];\n  let type;\n\n  if (t.isStringLiteral(node) || t.isPlaceholder(node, {\n    expectedNode: \"StringLiteral\"\n  })) {\n    type = \"string\";\n  } else if (t.isNewExpression(parent) && key === \"arguments\" || t.isCallExpression(parent) && key === \"arguments\" || t.isFunction(parent) && key === \"params\") {\n    type = \"param\";\n  } else if (t.isExpressionStatement(parent) && !t.isPlaceholder(node)) {\n    type = \"statement\";\n    ancestors = ancestors.slice(0, -1);\n  } else if (t.isStatement(node) && t.isPlaceholder(node)) {\n    type = \"statement\";\n  } else {\n    type = \"other\";\n  }\n\n  const {\n    placeholders,\n    placeholderNames\n  } = state.isLegacyRef.value ? state.legacy : state.syntactic;\n  placeholders.push({\n    name,\n    type,\n    resolve: ast => resolveAncestors(ast, ancestors),\n    isDuplicate: placeholderNames.has(name)\n  });\n  placeholderNames.add(name);\n}\n\nfunction resolveAncestors(ast, ancestors) {\n  let parent = ast;\n\n  for (let i = 0; i < ancestors.length - 1; i++) {\n    const {\n      key,\n      index\n    } = ancestors[i];\n\n    if (index === undefined) {\n      parent = parent[key];\n    } else {\n      parent = parent[key][index];\n    }\n  }\n\n  const {\n    key,\n    index\n  } = ancestors[ancestors.length - 1];\n  return {\n    parent,\n    key,\n    index\n  };\n}\n\nfunction parseWithCodeFrame(code, parserOpts, syntacticPlaceholders) {\n  const plugins = (parserOpts.plugins || []).slice();\n\n  if (syntacticPlaceholders !== false) {\n    plugins.push(\"placeholders\");\n  }\n\n  parserOpts = Object.assign({\n    allowReturnOutsideFunction: true,\n    allowSuperOutsideMethod: true,\n    sourceType: \"module\"\n  }, parserOpts, {\n    plugins\n  });\n\n  try {\n    return (0, _parser.parse)(code, parserOpts);\n  } catch (err) {\n    const loc = err.loc;\n\n    if (loc) {\n      err.message += \"\\n\" + (0, _codeFrame.codeFrameColumns)(code, {\n        start: loc\n      });\n      err.code = \"BABEL_TEMPLATE_PARSE_ERROR\";\n    }\n\n    throw err;\n  }\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = populatePlaceholders;\n\nvar t = _interopRequireWildcard(require(\"@babel/types\"));\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction populatePlaceholders(metadata, replacements) {\n  const ast = t.cloneNode(metadata.ast);\n\n  if (replacements) {\n    metadata.placeholders.forEach(placeholder => {\n      if (!Object.prototype.hasOwnProperty.call(replacements, placeholder.name)) {\n        const placeholderName = placeholder.name;\n        throw new Error(`Error: No substitution given for \"${placeholderName}\". If this is not meant to be a\n            placeholder you may want to consider passing one of the following options to @babel/template:\n            - { placeholderPattern: false, placeholderWhitelist: new Set(['${placeholderName}'])}\n            - { placeholderPattern: /^${placeholderName}$/ }`);\n      }\n    });\n    Object.keys(replacements).forEach(key => {\n      if (!metadata.placeholderNames.has(key)) {\n        throw new Error(`Unknown substitution \"${key}\" given`);\n      }\n    });\n  }\n\n  metadata.placeholders.slice().reverse().forEach(placeholder => {\n    try {\n      applyReplacement(placeholder, ast, replacements && replacements[placeholder.name] || null);\n    } catch (e) {\n      e.message = `@babel/template placeholder \"${placeholder.name}\": ${e.message}`;\n      throw e;\n    }\n  });\n  return ast;\n}\n\nfunction applyReplacement(placeholder, ast, replacement) {\n  if (placeholder.isDuplicate) {\n    if (Array.isArray(replacement)) {\n      replacement = replacement.map(node => t.cloneNode(node));\n    } else if (typeof replacement === \"object\") {\n      replacement = t.cloneNode(replacement);\n    }\n  }\n\n  const {\n    parent,\n    key,\n    index\n  } = placeholder.resolve(ast);\n\n  if (placeholder.type === \"string\") {\n    if (typeof replacement === \"string\") {\n      replacement = t.stringLiteral(replacement);\n    }\n\n    if (!replacement || !t.isStringLiteral(replacement)) {\n      throw new Error(\"Expected string substitution\");\n    }\n  } else if (placeholder.type === \"statement\") {\n    if (index === undefined) {\n      if (!replacement) {\n        replacement = t.emptyStatement();\n      } else if (Array.isArray(replacement)) {\n        replacement = t.blockStatement(replacement);\n      } else if (typeof replacement === \"string\") {\n        replacement = t.expressionStatement(t.identifier(replacement));\n      } else if (!t.isStatement(replacement)) {\n        replacement = t.expressionStatement(replacement);\n      }\n    } else {\n      if (replacement && !Array.isArray(replacement)) {\n        if (typeof replacement === \"string\") {\n          replacement = t.identifier(replacement);\n        }\n\n        if (!t.isStatement(replacement)) {\n          replacement = t.expressionStatement(replacement);\n        }\n      }\n    }\n  } else if (placeholder.type === \"param\") {\n    if (typeof replacement === \"string\") {\n      replacement = t.identifier(replacement);\n    }\n\n    if (index === undefined) throw new Error(\"Assertion failure.\");\n  } else {\n    if (typeof replacement === \"string\") {\n      replacement = t.identifier(replacement);\n    }\n\n    if (Array.isArray(replacement)) {\n      throw new Error(\"Cannot replace single expression with an array.\");\n    }\n  }\n\n  if (index === undefined) {\n    t.validate(parent, key, replacement);\n    parent[key] = replacement;\n  } else {\n    const items = parent[key].slice();\n\n    if (placeholder.type === \"statement\" || placeholder.type === \"param\") {\n      if (replacement == null) {\n        items.splice(index, 1);\n      } else if (Array.isArray(replacement)) {\n        items.splice(index, 1, ...replacement);\n      } else {\n        items[index] = replacement;\n      }\n    } else {\n      items[index] = replacement;\n    }\n\n    t.validate(parent, key, items);\n    parent[key] = items;\n  }\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _helperPluginUtils = require(\"@babel/helper-plugin-utils\");\n\nvar _helperAnnotateAsPure = _interopRequireDefault(require(\"@babel/helper-annotate-as-pure\"));\n\nvar _helperFunctionName = _interopRequireDefault(require(\"@babel/helper-function-name\"));\n\nvar _helperSplitExportDeclaration = _interopRequireDefault(require(\"@babel/helper-split-export-declaration\"));\n\nvar _core = require(\"@babel/core\");\n\nvar _globals = _interopRequireDefault(require(\"globals\"));\n\nvar _transformClass = _interopRequireDefault(require(\"./transformClass\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst getBuiltinClasses = category => Object.keys(_globals.default[category]).filter(name => /^[A-Z]/.test(name));\n\nconst builtinClasses = new Set([...getBuiltinClasses(\"builtin\"), ...getBuiltinClasses(\"browser\")]);\n\nvar _default = (0, _helperPluginUtils.declare)((api, options) => {\n  api.assertVersion(7);\n  const {\n    loose\n  } = options;\n  const VISITED = Symbol();\n  return {\n    name: \"transform-classes\",\n    visitor: {\n      ExportDefaultDeclaration(path) {\n        if (!path.get(\"declaration\").isClassDeclaration()) return;\n        (0, _helperSplitExportDeclaration.default)(path);\n      },\n\n      ClassDeclaration(path) {\n        const {\n          node\n        } = path;\n        const ref = node.id || path.scope.generateUidIdentifier(\"class\");\n        path.replaceWith(_core.types.variableDeclaration(\"let\", [_core.types.variableDeclarator(ref, _core.types.toExpression(node))]));\n      },\n\n      ClassExpression(path, state) {\n        const {\n          node\n        } = path;\n        if (node[VISITED]) return;\n        const inferred = (0, _helperFunctionName.default)(path);\n\n        if (inferred && inferred !== node) {\n          path.replaceWith(inferred);\n          return;\n        }\n\n        node[VISITED] = true;\n        path.replaceWith((0, _transformClass.default)(path, state.file, builtinClasses, loose));\n\n        if (path.isCallExpression()) {\n          (0, _helperAnnotateAsPure.default)(path);\n\n          if (path.get(\"callee\").isArrowFunctionExpression()) {\n            path.get(\"callee\").arrowFunctionToExpression();\n          }\n        }\n      }\n\n    }\n  };\n});\n\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.program = exports.expression = exports.statement = exports.statements = exports.smart = void 0;\n\nvar t = _interopRequireWildcard(require(\"@babel/types\"));\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction makeStatementFormatter(fn) {\n  return {\n    code: str => `/* @babel/template */;\\n${str}`,\n    validate: () => {},\n    unwrap: ast => {\n      return fn(ast.program.body.slice(1));\n    }\n  };\n}\n\nconst smart = makeStatementFormatter(body => {\n  if (body.length > 1) {\n    return body;\n  } else {\n    return body[0];\n  }\n});\nexports.smart = smart;\nconst statements = makeStatementFormatter(body => body);\nexports.statements = statements;\nconst statement = makeStatementFormatter(body => {\n  if (body.length === 0) {\n    throw new Error(\"Found nothing to return.\");\n  }\n\n  if (body.length > 1) {\n    throw new Error(\"Found multiple statements but wanted one\");\n  }\n\n  return body[0];\n});\nexports.statement = statement;\nconst expression = {\n  code: str => `(\\n${str}\\n)`,\n  validate: ast => {\n    if (ast.program.body.length > 1) {\n      throw new Error(\"Found multiple statements but wanted one\");\n    }\n\n    if (expression.unwrap(ast).start === 0) {\n      throw new Error(\"Parse result included parens.\");\n    }\n  },\n  unwrap: ({\n    program\n  }) => {\n    const [stmt] = program.body;\n    t.assertExpressionStatement(stmt);\n    return stmt.expression;\n  }\n};\nexports.expression = expression;\nconst program = {\n  code: str => str,\n  validate: () => {},\n  unwrap: ast => ast.program\n};\nexports.program = program;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = createTemplateBuilder;\n\nvar _options = require(\"./options\");\n\nvar _string = _interopRequireDefault(require(\"./string\"));\n\nvar _literal = _interopRequireDefault(require(\"./literal\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst NO_PLACEHOLDER = (0, _options.validate)({\n  placeholderPattern: false\n});\n\nfunction createTemplateBuilder(formatter, defaultOpts) {\n  const templateFnCache = new WeakMap();\n  const templateAstCache = new WeakMap();\n  const cachedOpts = defaultOpts || (0, _options.validate)(null);\n  return Object.assign((tpl, ...args) => {\n    if (typeof tpl === \"string\") {\n      if (args.length > 1) throw new Error(\"Unexpected extra params.\");\n      return extendedTrace((0, _string.default)(formatter, tpl, (0, _options.merge)(cachedOpts, (0, _options.validate)(args[0]))));\n    } else if (Array.isArray(tpl)) {\n      let builder = templateFnCache.get(tpl);\n\n      if (!builder) {\n        builder = (0, _literal.default)(formatter, tpl, cachedOpts);\n        templateFnCache.set(tpl, builder);\n      }\n\n      return extendedTrace(builder(args));\n    } else if (typeof tpl === \"object\" && tpl) {\n      if (args.length > 0) throw new Error(\"Unexpected extra params.\");\n      return createTemplateBuilder(formatter, (0, _options.merge)(cachedOpts, (0, _options.validate)(tpl)));\n    }\n\n    throw new Error(`Unexpected template param ${typeof tpl}`);\n  }, {\n    ast: (tpl, ...args) => {\n      if (typeof tpl === \"string\") {\n        if (args.length > 1) throw new Error(\"Unexpected extra params.\");\n        return (0, _string.default)(formatter, tpl, (0, _options.merge)((0, _options.merge)(cachedOpts, (0, _options.validate)(args[0])), NO_PLACEHOLDER))();\n      } else if (Array.isArray(tpl)) {\n        let builder = templateAstCache.get(tpl);\n\n        if (!builder) {\n          builder = (0, _literal.default)(formatter, tpl, (0, _options.merge)(cachedOpts, NO_PLACEHOLDER));\n          templateAstCache.set(tpl, builder);\n        }\n\n        return builder(args)();\n      }\n\n      throw new Error(`Unexpected template param ${typeof tpl}`);\n    }\n  });\n}\n\nfunction extendedTrace(fn) {\n  let rootStack = \"\";\n\n  try {\n    throw new Error();\n  } catch (error) {\n    if (error.stack) {\n      rootStack = error.stack.split(\"\\n\").slice(3).join(\"\\n\");\n    }\n  }\n\n  return arg => {\n    try {\n      return fn(arg);\n    } catch (err) {\n      err.stack += `\\n    =============\\n${rootStack}`;\n      throw err;\n    }\n  };\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = stringTemplate;\n\nvar _options = require(\"./options\");\n\nvar _parse = _interopRequireDefault(require(\"./parse\"));\n\nvar _populate = _interopRequireDefault(require(\"./populate\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction stringTemplate(formatter, code, opts) {\n  code = formatter.code(code);\n  let metadata;\n  return arg => {\n    const replacements = (0, _options.normalizeReplacements)(arg);\n    if (!metadata) metadata = (0, _parse.default)(formatter, code, opts);\n    return formatter.unwrap((0, _populate.default)(metadata, replacements));\n  };\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.shouldHighlight = shouldHighlight;\nexports.getChalk = getChalk;\nexports.default = highlight;\n\nvar jsTokensNs = _interopRequireWildcard(require(\"js-tokens\"));\n\nvar _helperValidatorIdentifier = require(\"@babel/helper-validator-identifier\");\n\nvar _chalk = _interopRequireDefault(require(\"chalk\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nconst sometimesKeywords = new Set([\"as\", \"async\", \"from\", \"get\", \"of\", \"set\"]);\n\nfunction getDefs(chalk) {\n  return {\n    keyword: chalk.cyan,\n    capitalized: chalk.yellow,\n    jsxIdentifier: chalk.yellow,\n    punctuator: chalk.yellow,\n    number: chalk.magenta,\n    string: chalk.green,\n    regex: chalk.magenta,\n    comment: chalk.grey,\n    invalid: chalk.white.bgRed.bold\n  };\n}\n\nconst NEWLINE = /\\r\\n|[\\n\\r\\u2028\\u2029]/;\nconst BRACKET = /^[()[\\]{}]$/;\nlet tokenize;\n{\n  const {\n    matchToToken\n  } = jsTokensNs;\n  const JSX_TAG = /^[a-z][\\w-]*$/i;\n\n  const getTokenType = function (token, offset, text) {\n    if (token.type === \"name\") {\n      if ((0, _helperValidatorIdentifier.isKeyword)(token.value) || (0, _helperValidatorIdentifier.isStrictReservedWord)(token.value, true) || sometimesKeywords.has(token.value)) {\n        return \"keyword\";\n      }\n\n      if (JSX_TAG.test(token.value) && (text[offset - 1] === \"<\" || text.substr(offset - 2, 2) == \"</\")) {\n        return \"jsxIdentifier\";\n      }\n\n      if (token.value[0] !== token.value[0].toLowerCase()) {\n        return \"capitalized\";\n      }\n    }\n\n    if (token.type === \"punctuator\" && BRACKET.test(token.value)) {\n      return \"bracket\";\n    }\n\n    if (token.type === \"invalid\" && (token.value === \"@\" || token.value === \"#\")) {\n      return \"punctuator\";\n    }\n\n    return token.type;\n  };\n\n  tokenize = function* (text) {\n    let match;\n\n    while (match = jsTokensNs.default.exec(text)) {\n      const token = matchToToken(match);\n      yield {\n        type: getTokenType(token, match.index, text),\n        value: token.value\n      };\n    }\n  };\n}\n\nfunction highlightTokens(defs, text) {\n  let highlighted = \"\";\n\n  for (const {\n    type,\n    value\n  } of tokenize(text)) {\n    const colorize = defs[type];\n\n    if (colorize) {\n      highlighted += value.split(NEWLINE).map(str => colorize(str)).join(\"\\n\");\n    } else {\n      highlighted += value;\n    }\n  }\n\n  return highlighted;\n}\n\nfunction shouldHighlight(options) {\n  return _chalk.default.supportsColor || options.forceColor;\n}\n\nfunction getChalk(options) {\n  let chalk = _chalk.default;\n\n  if (options.forceColor) {\n    chalk = new _chalk.default.constructor({\n      enabled: true,\n      level: 1\n    });\n  }\n\n  return chalk;\n}\n\nfunction highlight(code, options = {}) {\n  if (shouldHighlight(options)) {\n    const chalk = getChalk(options);\n    const defs = getDefs(chalk);\n    return highlightTokens(defs, code);\n  } else {\n    return code;\n  }\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = literalTemplate;\n\nvar _options = require(\"./options\");\n\nvar _parse = _interopRequireDefault(require(\"./parse\"));\n\nvar _populate = _interopRequireDefault(require(\"./populate\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction literalTemplate(formatter, tpl, opts) {\n  const {\n    metadata,\n    names\n  } = buildLiteralData(formatter, tpl, opts);\n  return arg => {\n    const defaultReplacements = {};\n    arg.forEach((replacement, i) => {\n      defaultReplacements[names[i]] = replacement;\n    });\n    return arg => {\n      const replacements = (0, _options.normalizeReplacements)(arg);\n\n      if (replacements) {\n        Object.keys(replacements).forEach(key => {\n          if (Object.prototype.hasOwnProperty.call(defaultReplacements, key)) {\n            throw new Error(\"Unexpected replacement overlap.\");\n          }\n        });\n      }\n\n      return formatter.unwrap((0, _populate.default)(metadata, replacements ? Object.assign(replacements, defaultReplacements) : defaultReplacements));\n    };\n  };\n}\n\nfunction buildLiteralData(formatter, tpl, opts) {\n  let names;\n  let nameSet;\n  let metadata;\n  let prefix = \"\";\n\n  do {\n    prefix += \"$\";\n    const result = buildTemplateCode(tpl, prefix);\n    names = result.names;\n    nameSet = new Set(names);\n    metadata = (0, _parse.default)(formatter, formatter.code(result.code), {\n      parser: opts.parser,\n      placeholderWhitelist: new Set(result.names.concat(opts.placeholderWhitelist ? Array.from(opts.placeholderWhitelist) : [])),\n      placeholderPattern: opts.placeholderPattern,\n      preserveComments: opts.preserveComments,\n      syntacticPlaceholders: opts.syntacticPlaceholders\n    });\n  } while (metadata.placeholders.some(placeholder => placeholder.isDuplicate && nameSet.has(placeholder.name)));\n\n  return {\n    metadata,\n    names\n  };\n}\n\nfunction buildTemplateCode(tpl, prefix) {\n  const names = [];\n  let code = tpl[0];\n\n  for (let i = 1; i < tpl.length; i++) {\n    const value = `${prefix}${i - 1}`;\n    names.push(value);\n    code += value + tpl[i];\n  }\n\n  return {\n    names,\n    code\n  };\n}"],"sourceRoot":""}