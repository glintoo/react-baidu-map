{"version":3,"sources":["../node_modules/@babel/template/lib/formatters.js","../node_modules/@babel/template/lib/builder.js","../node_modules/@babel/template/lib/string.js","../node_modules/@babel/highlight/lib/index.js","../node_modules/@babel/highlight/node_modules/chalk/index.js","../node_modules/@babel/highlight/node_modules/ansi-styles/index.js","../node_modules/@babel/highlight/node_modules/color-convert/index.js","../node_modules/@babel/highlight/node_modules/color-name/index.js","../node_modules/@babel/highlight/node_modules/color-convert/route.js","../node_modules/@babel/highlight/node_modules/supports-color/browser.js","../node_modules/@babel/highlight/node_modules/chalk/templates.js","../node_modules/@babel/template/lib/literal.js","../node_modules/@babel/template/lib/index.js","../node_modules/@babel/plugin-transform-classes/lib/transformClass.js","../node_modules/@babel/plugin-transform-classes/lib/inline-createSuper-helpers.js","../node_modules/@babel/parser/lib/index.js","../node_modules/@babel/code-frame/lib/index.js","../node_modules/@babel/template/lib/options.js","../node_modules/@babel/template/lib/parse.js","../node_modules/@babel/highlight/node_modules/color-convert/conversions.js","../node_modules/@babel/template/lib/populate.js","../node_modules/@babel/plugin-transform-classes/lib/index.js"],"names":["Object","defineProperty","exports","value","program","expression","statement","statements","smart","t","obj","__esModule","default","cache","_getRequireWildcardCache","has","get","newObj","hasPropertyDescriptor","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","_interopRequireWildcard","require","WeakMap","makeStatementFormatter","fn","code","str","validate","unwrap","ast","body","slice","length","Error","start","stmt","assertExpressionStatement","createTemplateBuilder","formatter","defaultOpts","templateFnCache","templateAstCache","cachedOpts","_options","assign","tpl","args","extendedTrace","_string","merge","Array","isArray","builder","_literal","NO_PLACEHOLDER","_interopRequireDefault","placeholderPattern","rootStack","error","stack","split","join","arg","err","opts","metadata","replacements","normalizeReplacements","_parse","_populate","shouldHighlight","getChalk","options","chalk","defs","getDefs","highlightTokens","_helperValidatorIdentifier","jsTokens","Chalk","sometimesKeywords","Set","keyword","cyan","capitalized","yellow","jsxIdentifier","punctuator","number","magenta","string","green","regex","comment","grey","invalid","white","bgRed","bold","tokenize","NEWLINE","BRACKET","JSX_TAG","getTokenType","token","offset","text","type","isKeyword","isStrictReservedWord","test","substr","toLowerCase","highlighted","colorize","map","supportsColor","forceColor","constructor","enabled","level","match","exec","matchToToken","index","escapeStringRegexp","ansiStyles","stdoutColor","stdout","template","isSimpleWindowsTerm","process","platform","TERM","startsWith","levelMapping","skipModels","styles","create","applyOptions","scLevel","undefined","this","arguments","chalkTag","apply","concat","setPrototypeOf","blue","open","closeRe","RegExp","close","codes","build","_styles","_empty","keys","visible","color","model","ansi","bgColor","bgModel","toUpperCase","proto","defineProperties","applyStyle","self","enumerable","hasGrey","__proto__","argsLen","String","a","originalDim","dim","reverse","replace","strings","parts","raw","i","push","module","colorConvert","wrapAnsi16","wrapAnsi256","wrapAnsi16m","rgb","Map","modifier","reset","italic","underline","inverse","hidden","strikethrough","black","red","gray","redBright","greenBright","yellowBright","blueBright","magentaBright","cyanBright","whiteBright","bgBlack","bgGreen","bgYellow","bgBlue","bgMagenta","bgCyan","bgWhite","bgBlackBright","bgRedBright","bgGreenBright","bgYellowBright","bgBlueBright","bgMagentaBright","bgCyanBright","bgWhiteBright","groupName","group","styleName","style","ansi2ansi","n","rgb2rgb","r","g","b","ansi256","ansi16m","suite","ansi16","conversions","route","convert","forEach","fromModel","channels","labels","routes","toModel","wrappedFn","result","len","Math","round","conversion","wrapRounded","wrapRaw","deriveBFS","graph","models","distance","parent","buildGraph","queue","current","pop","adjacents","adjacent","node","unshift","link","from","to","wrapConversion","path","cur","stderr","TEMPLATE_REGEX","STYLE_REGEX","STRING_REGEX","ESCAPE_REGEX","ESCAPES","unescape","c","fromCharCode","parseInt","parseArguments","name","matches","results","chunks","trim","chunk","isNaN","m","escape","chr","Number","parseStyle","lastIndex","buildStyle","layer","tmp","escapeChar","errMsg","names","nameSet","prefix","buildTemplateCode","parser","placeholderWhitelist","preserveComments","syntacticPlaceholders","placeholders","some","placeholder","isDuplicate","buildLiteralData","defaultReplacements","replacement","formatters","_builder","_default","bind","file","builtinClasses","isLoose","classState","scope","classId","classRef","superFnId","superName","superReturns","isDerived","extendsNative","construct","constructorBody","userConstructor","userConstructorPath","hasConstructor","instancePropBody","instancePropRefs","staticPropBody","superThises","pushedConstructor","pushedInherits","protoAlias","hasInstanceDescriptors","hasStaticDescriptors","instanceMutatorMap","staticMutatorMap","setState","newState","findThisesVisitor","_core","traverse","visitors","_helperReplaceSupers","environmentVisitor","ThisExpression","buildBody","paths","equals","params","types","blockStatement","unshiftContainer","classMethod","identifier","maybeCreateConstructor","classBodyPaths","isClassProperty","buildCodeFrameError","decorators","isClassMethod","isConstructor","kind","methodPath","objectRef","superRef","ReturnStatement","getFunctionParent","isArrowFunctionExpression","pushConstructor","pushMethod","pushBody","thisRef","ref","generateDeclaredUidIdentifier","cloneNode","thisPath","parentPath","isMemberExpression","object","replaceWith","callExpression","addHelper","bareSupers","Super","isCallExpression","callee","add","wrapReturn","guaranteedSuperBeforeFinish","size","bareSuper","wrapSuperCall","find","isLoop","isConditional","returnArg","thisExpr","logicalExpression","bodyPaths","isReturnStatement","pushContainer","returnStatement","returnPath","argument","verifyConstructor","inherits","pushDescriptors","pushInheritsToBody","instanceProps","staticProps","defineMap","toClassObject","toComputedObjectFromClass","nullLiteral","lastNonNullIndex","isNullLiteral","expressionStatement","bareSuperNode","thisExpression","isSpreadElement","isIdentifier","memberExpression","_helperOptimiseCallExpression","isExpressionStatement","container","assignmentExpression","static","generateUidIdentifier","classProto","protoDeclaration","variableDeclaration","variableDeclarator","insertProtoAliasOnce","methodName","computed","isLiteral","func","functionExpression","generator","async","toComputedKey","isStringLiteral","_helperFunctionName","id","expr","inheritsComments","processMethod","mutatorMap","booleanLiteral","pushToMap","method","hasOwnBinding","rename","directives","pushConstructorToBody","_inlineCreateSuperHelpers","superClass","hasBinding","buildConstructor","closureParams","closureArgs","_helperAnnotateAsPure","param","generateUidIdentifierBasedOnNode","setupClosureParamsArgs","isStrict","isInStrictMode","constructorOnly","directive","directiveLiteral","toExpression","arrowFunctionExpression","classTransformer","functionDeclaration","helperIDs","clone","_unused","helper","CREATE_SUPER","GET_PROTOTYPE_OF","POSSIBLE_CONSTRUCTOR_RETURN","registerDeclaration","beforeExpr","startsExpr","TokenType","label","conf","rightAssociative","isAssign","postfix","binop","updateContext","keywords","createKeyword","createBinop","num","bigint","decimal","regexp","eof","bracketL","bracketHashL","bracketBarL","bracketR","bracketBarR","braceL","braceBarL","braceHashL","braceR","braceBarR","parenL","parenR","comma","semi","colon","doubleColon","dot","question","questionDot","arrow","ellipsis","backQuote","dollarBraceL","at","hash","interpreterDirective","eq","incDec","bang","tilde","pipeline","nullishCoalescing","logicalOR","logicalAND","bitwiseOR","bitwiseXOR","bitwiseAND","equality","relational","bitShift","plusMin","modulo","star","slash","exponent","_break","_case","_catch","_continue","_debugger","_do","_else","_finally","_for","_function","_if","_return","_switch","_throw","_try","_var","_const","_while","_with","_new","_this","_super","_class","_extends","_export","_import","_null","_true","_false","_in","_instanceof","_typeof","_void","_delete","lineBreak","lineBreakG","source","isNewLine","skipWhiteSpace","isWhitespace","Position","line","col","column","SourceLocation","end","filename","identifierName","last","CommentsParser","loc","state","trailingComments","leadingComments","elements","takeAllComments","lastElement","j","commentPreviousNode","splice","newTrailingComments","leadingComment","firstChild","lastChild","commentStack","lastInStack","adjustCommentsAfterTrailingComma","properties","innerComments","firstTrailingCommentIndex","findIndex","sawUnambiguousESM","ambiguousScriptDifferentAst","plugins","plugin","hasPlugin","ErrorMessages","freeze","AccessorIsGenerator","ArgumentsInClass","AsyncFunctionInSingleStatementContext","AwaitBindingIdentifier","AwaitBindingIdentifierInStaticBlock","AwaitExpressionFormalParameter","AwaitNotInAsyncContext","AwaitNotInAsyncFunction","BadGetterArity","BadSetterArity","BadSetterRestParameter","ConstructorClassField","ConstructorClassPrivateField","ConstructorIsAccessor","ConstructorIsAsync","ConstructorIsGenerator","DeclarationMissingInitializer","DecoratorBeforeExport","DecoratorConstructor","DecoratorExportClass","DecoratorSemicolon","DecoratorStaticBlock","DeletePrivateField","DestructureNamedImport","DuplicateConstructor","DuplicateDefaultExport","DuplicateExport","DuplicateProto","DuplicateRegExpFlags","ElementAfterRest","EscapedCharNotAnIdentifier","ExportBindingIsString","ExportDefaultFromAsIdentifier","ForInOfLoopInitializer","GeneratorInSingleStatementContext","IllegalBreakContinue","IllegalLanguageModeDirective","IllegalReturn","ImportBindingIsString","ImportCallArgumentTrailingComma","ImportCallArity","ImportCallNotNewExpression","ImportCallSpreadArgument","ImportMetaOutsideModule","ImportOutsideModule","InvalidBigIntLiteral","InvalidCodePoint","InvalidDecimal","InvalidDigit","InvalidEscapeSequence","InvalidEscapeSequenceTemplate","InvalidEscapedReservedWord","InvalidIdentifier","InvalidLhs","InvalidLhsBinding","InvalidNumber","InvalidOrMissingExponent","InvalidOrUnexpectedToken","InvalidParenthesizedAssignment","InvalidPrivateFieldResolution","InvalidPropertyBindingPattern","InvalidRecordProperty","InvalidRestAssignmentPattern","LabelRedeclaration","LetInLexicalBinding","LineTerminatorBeforeArrow","MalformedRegExpFlags","MissingClassName","MissingEqInAssignment","MissingSemicolon","MissingUnicodeEscape","MixingCoalesceWithLogical","ModuleAttributeDifferentFromType","ModuleAttributeInvalidValue","ModuleAttributesWithDuplicateKeys","ModuleExportNameHasLoneSurrogate","ModuleExportUndefined","MultipleDefaultsInSwitch","NewlineAfterThrow","NoCatchOrFinally","NumberIdentifier","NumericSeparatorInEscapeSequence","ObsoleteAwaitStar","OptionalChainingNoNew","OptionalChainingNoTemplate","ParamDupe","PatternHasAccessor","PatternHasMethod","PipelineBodyNoArrow","PipelineBodySequenceExpression","PipelineHeadSequenceExpression","PipelineTopicUnused","PrimaryTopicNotAllowed","PrimaryTopicRequiresSmartPipeline","PrivateInExpectedIn","PrivateNameRedeclaration","RecordExpressionBarIncorrectEndSyntaxType","RecordExpressionBarIncorrectStartSyntaxType","RecordExpressionHashIncorrectStartSyntaxType","RecordNoProto","RestTrailingComma","SloppyFunction","StaticPrototype","StrictDelete","StrictEvalArguments","StrictEvalArgumentsBinding","StrictFunction","StrictNumericEscape","StrictOctalLiteral","StrictWith","SuperNotAllowed","SuperPrivateField","TrailingDecorator","TupleExpressionBarIncorrectEndSyntaxType","TupleExpressionBarIncorrectStartSyntaxType","TupleExpressionHashIncorrectStartSyntaxType","UnexpectedArgumentPlaceholder","UnexpectedAwaitAfterPipelineBody","UnexpectedDigitAfterHash","UnexpectedImportExport","UnexpectedKeyword","UnexpectedLeadingDecorator","UnexpectedLexicalDeclaration","UnexpectedNewTarget","UnexpectedNumericSeparator","UnexpectedPrivateField","UnexpectedReservedWord","UnexpectedSuper","UnexpectedToken","UnexpectedTokenUnaryExponentiation","UnsupportedBind","UnsupportedDecoratorExport","UnsupportedDefaultExport","UnsupportedImport","UnsupportedMetaProperty","UnsupportedParameterDecorator","UnsupportedPropertyDecorator","UnsupportedSuper","UnterminatedComment","UnterminatedRegExp","UnterminatedString","UnterminatedTemplate","VarRedeclaration","YieldBindingIdentifier","YieldInParameter","ZeroDigitNumericSeparator","ParserError","pos","startLoc","lastTokStart","lastTokStartLoc","endLoc","lastTokEnd","lastTokEndLoc","input","lineStart","getLineInfo","errorTemplate","raiseWithData","getLocationForPosition","message","_","errorRecovery","errors","_raise","data","errorContext","SyntaxError","isLookahead","TokContext","isExpr","preserveSpace","override","types$1","braceStatement","braceExpression","recordExpression","templateQuasi","parenStatement","parenExpression","p","readTmplToken","functionStatement","context","out","curContext","exprAllowed","prevType","allowed","isIterator","braceIsBlock","statementParens","hasPrecedingLineBreak","b_stat","nonASCIIidentifierStartChars","nonASCIIidentifierChars","nonASCIIidentifierStart","nonASCIIidentifier","astralIdentifierStartCodes","astralIdentifierCodes","isInAstralSet","isIdentifierStart","isIdentifierChar","reservedWords","keywords$1","reservedWordsStrictSet","reservedWordsStrictBindSet","isReservedWord","word","inModule","isStrictBindOnlyReservedWord","isStrictBindReservedWord","keywordRelationalOperator","SCOPE_CLASS","SCOPE_TS_MODULE","BIND_FLAGS_CLASS","BIND_FLAGS_TS_ENUM","BIND_FLAGS_TS_CONST_ENUM","BIND_FLAGS_TS_EXPORT_ONLY","BIND_FLAGS_FLOW_DECLARE_FN","BIND_TS_AMBIENT","BIND_NONE","Scope","flags","var","lexical","functions","ScopeHandler","raise","scopeStack","undefinedExports","undefinedPrivateNames","createScope","bindingType","currentScope","checkRedeclarationInScope","maybeExportDefined","SCOPE_PROGRAM","delete","isRedeclaredInScope","indexOf","treatFunctionsAsVarInScope","currentVarScope","currentThisScope","FlowScope","declareFunctions","FlowScopeHandler","includes","reservedTypes","FlowErrors","AmbiguousConditionalArrow","AmbiguousDeclareModuleKind","AssignReservedType","DeclareClassElement","DeclareClassFieldInitializer","DuplicateDeclareModuleExports","EnumBooleanMemberNotInitialized","EnumDuplicateMemberName","EnumInconsistentMemberValues","EnumInvalidExplicitType","EnumInvalidExplicitTypeUnknownSupplied","EnumInvalidMemberInitializerPrimaryType","EnumInvalidMemberInitializerSymbolType","EnumInvalidMemberInitializerUnknownType","EnumInvalidMemberName","EnumNumberMemberNotInitialized","EnumStringMemberInconsistentlyInitailized","GetterMayNotHaveThisParam","ImportTypeShorthandOnlyInPureImport","InexactInsideExact","InexactInsideNonObject","InexactVariance","InvalidNonTypeImportInDeclareModule","MissingTypeParamDefault","NestedDeclareModule","NestedFlowComment","OptionalBindingPattern","SetterMayNotHaveThisParam","SpreadVariance","ThisParamAnnotationRequired","ThisParamBannedInConstructor","ThisParamMayNotBeOptional","ThisParamMustBeFirst","ThisParamNoDefault","TypeBeforeInitializer","TypeCastInPattern","UnexpectedExplicitInexactInObject","UnexpectedReservedType","UnexpectedReservedUnderscore","UnexpectedSpaceBetweenModuloChecks","UnexpectedSpreadType","UnexpectedSubtractionOperand","UnexpectedTokenAfterTypeParameter","UnexpectedTypeParameterBeforeAsyncArrowFunction","UnsupportedDeclareExportKind","UnsupportedStatementInDeclareModule","UnterminatedFlowComment","hasTypeImportKind","importKind","isMaybeDefaultImport","exportSuggestions","const","let","interface","FLOW_PRAGMA_REGEX","entities","quot","amp","apos","lt","gt","nbsp","iexcl","cent","pound","curren","yen","brvbar","sect","uml","copy","ordf","laquo","not","shy","reg","macr","deg","plusmn","sup2","sup3","acute","micro","para","middot","cedil","sup1","ordm","raquo","frac14","frac12","frac34","iquest","Agrave","Aacute","Acirc","Atilde","Auml","Aring","AElig","Ccedil","Egrave","Eacute","Ecirc","Euml","Igrave","Iacute","Icirc","Iuml","ETH","Ntilde","Ograve","Oacute","Ocirc","Otilde","Ouml","times","Oslash","Ugrave","Uacute","Ucirc","Uuml","Yacute","THORN","szlig","agrave","aacute","acirc","atilde","auml","aring","aelig","ccedil","egrave","eacute","ecirc","euml","igrave","iacute","icirc","iuml","eth","ntilde","ograve","oacute","ocirc","otilde","ouml","divide","oslash","ugrave","uacute","ucirc","uuml","yacute","thorn","yuml","OElig","oelig","Scaron","scaron","Yuml","fnof","circ","Alpha","Beta","Gamma","Delta","Epsilon","Zeta","Eta","Theta","Iota","Kappa","Lambda","Mu","Nu","Xi","Omicron","Pi","Rho","Sigma","Tau","Upsilon","Phi","Chi","Psi","Omega","alpha","beta","gamma","delta","epsilon","zeta","eta","theta","iota","kappa","lambda","mu","nu","xi","omicron","pi","rho","sigmaf","sigma","tau","upsilon","phi","chi","psi","omega","thetasym","upsih","piv","ensp","emsp","thinsp","zwnj","zwj","lrm","rlm","ndash","mdash","lsquo","rsquo","sbquo","ldquo","rdquo","bdquo","dagger","Dagger","bull","hellip","permil","prime","Prime","lsaquo","rsaquo","oline","frasl","euro","image","weierp","real","trade","alefsym","larr","uarr","rarr","darr","harr","crarr","lArr","uArr","rArr","dArr","hArr","forall","part","exist","empty","nabla","isin","notin","ni","prod","sum","minus","lowast","radic","prop","infin","ang","and","or","cap","cup","int","there4","sim","cong","asymp","ne","equiv","le","ge","sub","sup","nsub","sube","supe","oplus","otimes","perp","sdot","lceil","rceil","lfloor","rfloor","lang","rang","loz","spades","clubs","hearts","diams","HEX_NUMBER","DECIMAL_NUMBER","JsxErrors","AttributeIsEmpty","MissingClosingTagElement","MissingClosingTagFragment","UnexpectedSequenceExpression","UnsupportedJsxValue","UnterminatedJsxContent","UnwrappedAdjacentJSXElements","isFragment","getQualifiedJSXName","namespace","property","j_oTag","j_cTag","j_expr","jsxName","jsxText","jsxTagStart","jsxTagEnd","TypeScriptScope","enums","constEnums","classes","exportOnlyBindings","TypeScriptScopeHandler","isConst","wasConst","ProductionParameterHandler","stacks","currentFlags","functionFlags","isAsync","isGenerator","nonNull","x","assert","TSErrors","AbstractMethodHasImplementation","ClassMethodHasDeclare","ClassMethodHasReadonly","ConstructorHasTypeParameters","DeclareClassFieldHasInitializer","DeclareFunctionHasImplementation","DuplicateAccessibilityModifier","DuplicateModifier","EmptyHeritageClauseType","EmptyTypeArguments","EmptyTypeParameters","ExpectedAmbientAfterExportDeclare","ImportAliasHasImportType","IndexSignatureHasAbstract","IndexSignatureHasAccessibility","IndexSignatureHasDeclare","IndexSignatureHasStatic","InvalidModifierOnTypeMember","InvalidTupleMemberLabel","MixedLabeledAndUnlabeledElements","NonAbstractClassHasAbstractMethod","NonClassMethodPropertyHasAbstractModifer","OptionalTypeBeforeRequired","PatternIsOptional","PrivateElementHasAbstract","PrivateElementHasAccessibility","ReadonlyForMethodSignature","TypeAnnotationAfterAssign","UnexpectedParameterModifier","UnexpectedReadonly","UnexpectedTypeAnnotation","UnexpectedTypeCastInParameter","UnsupportedImportTypeArgument","UnsupportedParameterPropertyKind","UnsupportedSignatureParameterKind","tsIsAccessModifier","getPluginOption","option","PIPELINE_PROPOSALS","RECORD_AND_TUPLE_SYNTAX_TYPES","mixinPlugins","estree","pattern","e","estreeParseLiteral","bigInt","BigInt","parseLiteral","startNodeAt","extra","expressionValue","finishNodeAt","isObjectProperty","checkDeclaration","_stmt$expression$extr","parenthesized","addExtra","directiveStatements","d","directiveToStmt","classBody","allowsDirectSuper","parseMethod","typeParameters","refExpressionErrors","estreeParseRegExpLiteral","estreeParseBigIntLiteral","estreeParseDecimalLiteral","convertPrivateNameToPrivateIdentifier","startPos","allowExpression","isMethod","allowDirectSuper","inClassScope","funcNode","startNode","finishNode","propertyNode","isPattern","isAccessor","shorthand","isLHS","toAssignable","optional","exported","specifiers","base","noCalls","optionalChainMember","substring","stop","chain","startNodeAtNode","jsx","chunkStart","ch","charCodeAt","finishToken","jsxReadEntity","jsxReadNewLine","normalizeCRLF","curLine","quote","entity","count","fromCodePoint","unexpected","next","jsxParseIdentifier","eat","jsxParseNamespacedName","newNode","jsxParseExpressionContainer","parseExprAtom","parseExpression","expect","jsxParseEmptyExpression","parseMaybeAssignAllowIn","jsxParseAttributeValue","jsxParseElementName","jsxParseOpeningElementAfterName","attributes","jsxParseAttribute","selfClosing","children","openingElement","jsxParseOpeningElementAt","closingElement","contents","jsxParseClosingElementAt","jsxParseElementAt","jsxParseSpreadChild","openingFragment","closingFragment","isRelational","jsxParseElement","inPropertyName","jsxReadToken","jsxReadWord","jsxReadString","flow","flowPragma","val","tok","oldInType","inType","flowParseType","moduloLoc","moduloPos","checksLoc","expectContextual","predicate","flowParsePredicate","flowParseInterfaceish","parseIdentifier","typeNode","typeContainer","flowParseTypeParameterDeclaration","flowParseFunctionTypeParams","rest","flowParseTypeAndPredicateInitialiser","returnType","typeAnnotation","resetEndLocation","semicolon","declareName","insideModule","flowParseDeclareClass","flowParseDeclareFunction","flowParseDeclareVariable","eatContextual","flowParseDeclareModuleExports","flowParseDeclareModule","isContextual","flowParseDeclareTypeAlias","flowParseDeclareOpaqueType","flowParseDeclareInterface","flowParseDeclareExportDeclaration","flowParseTypeAnnotatableIdentifier","BIND_KIND_VALUE","enter","bodyNode","parseImport","flowParseDeclare","exit","hasModuleExport","bodyElement","declaration","isEsModuleType","isLet","suggestion","parseExport","exportKind","flowParseTypeAnnotation","flowParseTypeAlias","flowParseOpaqueType","isClass","flowParseRestrictedIdentifier","extends","implements","mixins","flowParseInterfaceExtends","flowParseObjectType","allowStatic","allowExact","allowSpread","allowProto","allowInexact","flowParseQualifiedTypeIdentifier","flowParseTypeParameterInstantiation","liberal","checkReservedType","right","flowParseTypeInitialiser","declare","supertype","impltype","requireDefault","nodeStart","variance","flowParseVariance","ident","bound","defaultRequired","typeParameter","flowParseTypeParameter","expectRelational","oldNoAnonFunctionType","noAnonFunctionType","flowParseTypeOrImplicitInstantiation","isStatic","lookahead","flowParseObjectPropertyKey","flowParseObjectTypeMethodish","flowParseFunctionTypeParam","valueNode","endDelim","exact","callProperties","indexers","internalSlots","inexact","protoStart","inexactStart","flowParseObjectTypeInternalSlot","flowParseObjectTypeIndexer","flowParseObjectTypeCallProperty","propOrInexact","flowParseObjectTypeProperty","flowObjectTypeSemicolon","flowCheckGetterSetterParams","paramCount","node2","qualification","flowParsePrimaryType","first","lh","isThis","checkNotUnderscore","flowParseGenericType","isGroupedType","flowParseInterfaceType","flowIdentToTypeAnnotation","flowParseTupleType","reinterpretTypeAsFunctionTypeParam","flowParseTypeofType","canInsertSemicolon","elementType","flowParsePrefixType","flowParsePostfixType","flowParseAnonFunctionWithoutParens","flowParseIntersectionType","flowParseUnionType","allowPrimitiveOverride","allowExpressionBody","forwardNoArrowParamsConversionAt","topLevel","strict","flowParseInterface","shouldParseEnums","flowParseEnumDeclaration","isValidDirective","refNeedsArrowPos","tryParse","failState","originalNoArrowAt","noArrowAt","tryParseConditionalConsequent","consequent","failed","getArrowLikeExpressions","valid","alternate","parseMaybeAssign","noArrowParamsConversionAt","disallowInvalid","arrows","finishArrowValidation","list","list1","list2","partition","every","isAssignable","_node$extra","toAssignableList","trailingComma","SCOPE_FUNCTION","parse","typeCastNode","decl","declarationNode","parseExportSpecifiers","parseExportFrom","hasNamespace","isStatement","optionalId","member","parseClassMemberFromModifier","finishOp","isIteratorStart","isBinding","element","operator","typeCastToParameter","exprList","trailingCommaPos","isParenthesizedExpr","_expr$extra","canBePattern","isTuple","maybeInArrowParameters","toReferencedList","isThisParam","superTypeParameters","implemented","getObjectOrClassMethodParams","isPrivateNameAllowed","left","specifier","contextDescription","local","checkLVal","firstIdentLoc","firstIdent","parseModuleExportName","specifierTypeKind","isLookaheadContextual","as_ident","imported","__clone","nodeIsTypeImport","specifierIsTypeImport","checkReservedWord","allowModifiers","afterLeftParse","_jsx","_jsx2","_jsx3","abort","_arrowExpression$extr","arrowExpression","resetStartLocationFromNode","maybeUnwrapTypeCastExpression","aborted","thrown","allowDuplicates","isArrowFunction","canBeArrow","parseCallExpressionArguments","parseAsyncArrowWithTypeParameters","subscriptState","isLookaheadToken_lt","typeArguments","finishCallExpression","shouldParseTypes","flowParseTypeParameterInstantiationCallOrNew","targs","parseFunctionParams","parseArrow","parseArrowExpression","hasFlowComment","nextToken","fileNode","skipFlowComment","hasFlowCommentCompletion","shiftToFirstNonWhiteSpace","ch2","ch3","enumName","memberName","suppliedType","explicitType","endOfInit","literal","parseBooleanLiteral","init","flowEnumMemberInit","expectedType","flowEnumErrorInvalidMemberInitializer","seenNames","members","booleanMembers","numberMembers","stringMembers","defaultedMembers","hasUnknownMembers","memberNode","flowEnumMemberRaw","flowEnumErrorInvalidMemberName","flowEnumErrorDuplicateMemberName","flowEnumCheckExplicitTypeMismatch","flowEnumErrorBooleanMemberNotInitialized","flowEnumErrorNumberMemberNotInitialized","initializedMembers","flowEnumErrorStringMemberInconsistentlyInitailized","flowEnumErrorInvalidExplicitType","nameLoc","flowEnumParseExplicitType","flowEnumMembers","flowEnumStringMembers","boolsLen","numsLen","strsLen","defaultedLen","flowEnumErrorInconsistentMemberValues","flowEnumBody","nextTokenStart","afterNext","typescript","isLiteralPropertyName","allowedModifiers","tsTryParse","tsNextTokenCanFollowModifier","modified","disallowedModifiers","tsParseModifier","accessibility","parseElement","tsIsListTerminator","tsParseDelimitedListWorker","expectSuccess","bracket","skipFirstToken","tsParseDelimitedList","qualifier","tsParseEntityName","tsParseTypeArguments","allowReservedWords","typeName","lhs","parameterName","tsParseTypeAnnotation","asserts","exprName","tsParseImportType","parseIdentifierName","constraint","tsEatThenParseType","tsParseTypeParameters","tsParseBracketedList","tsParseTypeParameter","tsParseTypeReference","returnToken","signature","returnTokenRequired","tsTryParseTypeParameters","parameters","tsParseBindingListForSignature","tsParseTypeOrTypePredicateAnnotation","parseBindingList","tsFillSignature","tsParseTypeMemberSemicolon","tsLookAhead","tsIsUnambiguouslyIndexSignature","tsTryParseTypeAnnotation","readonly","nodeAny","tsParseSignatureMember","createIdentifier","tsParsePropertyOrMethodSignature","tsParseModifiers","idx","tsTryParseIndexSignature","parsePropertyName","tsParseObjectTypeMembers","tsParseList","tsParseTypeMember","tsIsIdentifier","tsExpectThenParseType","tsParseMappedTypeParameter","nameType","tsParseType","tsTryParseType","elementTypes","tsParseTupleElementType","seenOptionalElement","labeledElements","elementNode","_labeledElements","isLabeled","labeledNode","optionalTypeNode","restNode","abstract","parseTemplate","thisKeyword","tsParseThisTypeNode","tsParseThisTypePredicate","keywordTypeFromName","lookaheadCharCode","tsParseLiteralTypeNode","parseMaybeUnary","tsParseThisTypeOrThisTypePredicate","tsParseTypeQuery","tsIsStartOfMappedType","tsParseMappedType","tsParseTypeLiteral","tsParseTupleType","tsParseParenthesizedType","tsParseTemplateLiteralType","tsParseNonArrayType","objectType","indexType","tsParseTypeOperatorOrHigher","tsCheckTypeAnnotationForReadOnly","kw","tsParseTypeOperator","tsParseInferType","tsParseArrayTypeOrHigher","parseConstituentType","hasLeadingOperator","tsParseUnionOrIntersectionType","tsParseIntersectionTypeOrHigher","tsIsUnambiguouslyStartOfFunctionType","braceStackCounter","tsSkipParameterStart","tsInType","tsParseTypePredicateAsserts","thisTypePredicate","typePredicateVariable","tsParseTypePredicatePrefix","containsEsc","eatColon","tsParseNonConditionalType","checkType","extendsType","trueType","falseType","tsIsStartOfFunctionType","tsParseFunctionOrConstructorType","isAbstractConstructorSignature","tsParseUnionTypeOrHigher","tsTryNextParseConstantContext","tsNextThenParseType","descriptor","originalStart","delimitedList","tsParseExpressionWithTypeArguments","tsParseHeritageClause","cb","oldContext","tsDoThenParseType","initializer","BIND_TS_ENUM","tsParseEnumMember","parseBlockOrModuleBlockBody","nested","inner","tsParseModuleOrNamespaceDeclaration","prodParam","tsParseModuleBlock","global","isExport","moduleReference","tsParseModuleReference","tsIsExternalModuleReference","tsParseExternalModuleReference","f","res","nany","isLineTerminator","starttype","tsInDeclareContext","parseFunctionStatement","parseClass","tsParseEnumDeclaration","parseVarStatement","tsParseAmbientExternalModuleDeclaration","tsParseDeclaration","tsTryParseDeclare","mod","tsCheckLineTerminator","tsParseAbstractDeclaration","tsParseInterfaceDeclaration","tsParseTypeAliasDeclaration","hasFollowingLineBreak","oldMaybeInArrowParameters","tsTryParseAndCatch","tsTryParseTypeOrTypePredicateAnnotation","tsInNoContext","tsIsDeclarationStart","parseAccessModifier","parseMaybeDefault","parseAssignableListItemTypes","elt","pp","parameter","bodilessType","isDeclareContext","items","isInParens","tsCheckForInvalidTypeCasts","nonNullExpression","atPossibleAsyncArrow","asyncArrowFn","tsTryParseGenericAsyncArrowFunction","parseTaggedTemplateExpression","leftStartPos","leftStartLoc","minPrec","reScan_lt_gt","parseExprOp","checkKeywords","ahead","tsParseImportEqualsDeclaration","importNode","isAbstractClass","cls","callParseClassMember","inAbstractClass","methodOrProp","tsParseExpressionStatement","isDeclare","shouldParseExportDeclaration","tsTryParseExportDeclaration","resetStartLocation","definite","parseClassPropertyAnnotation","_typeCast","_typeCast2","_jsx4","_typeCast3","typeCast","_typeParameters","tsParseTypeAssertion","toAssignableParenthesizedExpression","readToken_lt_gt","baseCount","firstParam","oldIsDeclareContext","oldInAbstractClass","hasBody","v8intrinsic","v8IntrinsicStart","parseV8Intrinsic","expectedNode","assertNoSpace","finishPlaceholder","isFinished","parsePlaceholder","parseStatement","takeDecorators","oldStrict","parseClassId","parseClassSuper","parseClassBody","expectPlugin","isUnparsedContextual","nextTokenStartSince","filter","hasStarImport","maybeParseStarImportSpecifier","parseNamedImportSpecifiers","parseImportSource","mixinPluginNames","defaultOptions","sourceType","sourceFilename","startLine","allowAwaitOutsideFunction","allowReturnOutsideFunction","allowImportExportEverywhere","allowSuperOutsideMethod","allowUndeclaredExports","strictMode","ranges","tokens","createParenthesizedExpressions","State","potentialArrowAt","inPipeline","topicContext","maxNumOfResolvableTopics","maxTopicIndex","soloAwait","inFSharpPipelineDirectBody","decoratorStack","comments","strictErrors","exportedIdentifiers","tokensLength","curPosition","skipArrays","_isDigit","VALID_REGEX_FLAGS","forbiddenNumericSeparatorSiblings","decBinOct","hex","allowedNumericSeparatorSiblings","oct","bin","dec","Token","Tokenizer","checkKeywordEscapes","pushToken","old","curr","clear","skipSpace","getTokenFromCode","codePointAt","block","addComment","pushComment","startSkip","loop","skipBlockComment","skipLineComment","readToken_interpreter","nextPos","readNumber","readRegexp","width","next2","readToken_dot","readToken_question","readRadixNumber","readString","readToken_slash","readToken_mult_modulo","readToken_pipe_amp","readToken_caret","readToken_plus_min","readToken_eq_excl","readToken_numberSign","readWord","escaped","inClass","charAt","content","mods","char","charCode","radix","forceLen","allowNumSeparator","forbiddenSiblings","allowedSiblings","total","Infinity","prev","isBigInt","readInt","startsWithDot","isFloat","isDecimal","hasExponent","isOctal","hasLeadingZero","integer","recordStrictModeErrors","underscorePos","parseFloat","throwOnInvalid","codePos","readHexChar","readEscapedChar","containsInvalid","inTemplate","readCodePoint","octalStr","octal","escStart","identifierCheck","esc","readWord1","update","ClassScope","privateNames","loneAccessors","ClassScopeHandler","oldClassScope","classScope","redefined","CLASS_ELEMENT_KIND_GETTER","accessor","ExpressionScope","ArrowHeadParsingScope","iterator","ExpressionScopeHandler","isCertainlyParameterDeclaration","canBeArrowParameterDeclaration","recordDeclarationError","iterateErrors","clearDeclarationError","newExpressionScope","UtilParser","op","nameStart","nameEnd","allowAsi","messageOrType","missingPlugin","oldState","abortSignal","andThrow","shorthandAssign","doubleProto","isPrivateName","oldLabels","oldExportedIdentifiers","oldInModule","oldScope","getScopeHandler","oldProdParam","oldExpressionScope","expressionScope","paramFlags","ExpressionErrors","Node","range","unwrapParenthesizedExpression","loopLabel","switchLabel","loneSurrogate","Parser","getOptions","initializeScopes","pluginMap","pluginsMap","enterInitialScopes","parseTopLevel","parseProgram","interpreter","parseInterpreterDirective","parseBlockBody","nextCh","parseDecorators","parseStatementContent","parseBreakContinueStatement","parseDebuggerStatement","parseDoStatement","parseForStatement","parseIfStatement","parseReturnStatement","parseSwitchStatement","parseThrowStatement","parseTryStatement","parseWhileStatement","parseWithStatement","parseBlock","parseEmptyStatement","nextTokenCharCode","assertModuleNodeAllowed","isAsyncFunction","maybeName","parseLabeledStatement","parseExpressionStatement","allowExport","currentContextDecorators","decorator","parseDecorator","canHaveLeadingDecorator","expectOnePlugin","parseMaybeDecoratorArguments","parseExprSubscripts","isBreak","verifyBreakContinue","lab","withTopicForbiddingContext","parseHeaderExpression","awaitAt","isAwaitAllowed","parseFor","parseVar","declarations","parseForIn","description","checkExpressionErrors","declarationPosition","parseFunction","hasReturn","discriminant","sawDefault","cases","isCase","parseBindingAtom","simple","handler","clause","parseCatchClauseParam","finalizer","statementStart","allowDirectives","createNewLexicalScope","afterBlockParse","hasStrictModeDirective","parsedNonDirective","stmtToDirective","setStrict","isForIn","await","isFor","isTypescript","parseVarId","parseMaybeAssignDisallowIn","isHangingStatement","requireId","initFunction","parseFunctionId","parseFunctionBodyAndFinish","registerFunctionStatementId","treatFunctionsAsVar","constructorAllowsSuper","hadConstructor","parseClassMember","pushClassMethod","parseClassProperty","parseClassStaticBlock","parseClassMemberWithIsStatic","publicMethod","privateMethod","publicProp","privateProp","publicMember","parseClassElementName","pushClassPrivateMethod","isNonstaticConstructor","isPrivate","isSimple","maybeQuestionTokenStart","parsePostMemberNameModifiers","pushClassPrivateProperty","pushClassProperty","checkGetterSetterParams","getPrivateNameSV","_member$decorators","parseClassPrivateProperty","declarePrivateName","CLASS_ELEMENT_KIND_SETTER","parseInitializer","hasDefault","maybeParseExportDefaultSpecifier","parseAfterDefault","hasStar","eatExportStar","maybeParseExportNamespaceSpecifier","parseAfterNamespace","isFromRequired","hasDeclaration","hasSpecifiers","maybeParseExportNamedSpecifiers","maybeParseExportDeclaration","checkExport","parseExportDefaultExpression","isExportDefaultSpecifier","parseExportDeclaration","FUNC_STATEMENT","l","hasFrom","nextAfterFrom","assertions","maybeParseImportAssertions","checkNames","isDefault","isFrom","checkDuplicateExports","_declaration$extra","exportedName","checkLocalExport","elem","nodes","surrogate","toString","parseNext","maybeParseDefaultImportSpecifier","maybeParseModuleAttributes","attrs","attrNames","keyName","parseAssertEntries","shouldParseDefaultImport","parseImportSpecifierLocal","parseImportSpecifier","isRecord","protoRef","isObjectMethod","used","disallowIn","disallowInAnd","parseExpressionBase","allowInAnd","expressions","ownExpressionErrors","hasYield","parseYield","parseMaybeConditional","parseExprOps","shouldExitDescending","parseConditional","prec","hasIn","checkPipelineAtInfixOperator","logical","coalesce","hasAwait","parseExprOpRightExpr","nextOp","withTopicPermittingContext","parseSmartPipelineBody","parseExprOpBaseRightExpr","withSoloAwaitPermittingContext","parseFSharpPipelineBody","sawUnary","isAwait","parseAwait","checkExponentialAfterUnary","parseModuleExpression","isDelete","hasPropertyAsPrivateName","parseUpdate","isAmbiguousAwait","raiseOverwrite","parseSubscripts","maybeAsyncArrow","parseSubscript","parseBind","parseCoverCallAndAsyncArrowHead","parseMember","parseMaybePrivateName","usePrivateName","parseNoCallExpr","shouldParseAsyncArrow","validateAsPattern","parseAsyncArrowFromCallExpression","toReferencedArguments","toReferencedListDeep","tag","quasi","possibleAsyncArrow","dynamicImport","allowPlaceholder","nodeForExtra","elts","oldInFSharpPipelineDirectBody","parseExprListItem","_call$extra","parseSuper","parseImportMetaProperty","parseAsyncArrowUnaryFunction","parseDo","parseParenAndDistinguishExpression","parseArrayLike","parseObjectLike","parseFunctionOrFunctionSent","parseNewOrNewTarget","primaryTopicReferenceIsAllowedInCurrentTopicContext","registerTopicReference","lookaheadCh","allowSuper","meta","parseMetaProperty","propertyName","spreadStart","optionalCommaStart","innerStartPos","innerStartLoc","spreadNodeStartPos","spreadNodeStartLoc","parseParenItem","parseRestBinding","checkCommaAfterRest","innerEndPos","innerEndLoc","arrowNode","shouldParseArrow","metaProp","inNonArrowFunction","parseNew","isOptionalChain","parseNewArguments","parseExprList","isTagged","cooked","tail","curElt","parseTemplateElement","quasis","parseTemplateSubstitution","propHash","parsePropertyDefinition","checkProto","parseSpread","maybeAsyncOrAccessorProp","parseObjPropValue","_params","getGetterSetterExpectedParamCount","parseObjectMethod","parseObjectProperty","oldInPropertyName","setArrowFunctionParameters","parseFunctionBody","isExpression","checkParams","nonSimple","isSimpleParamList","errorPos","strictModeChanged","checkClashes","allowEmpty","inStaticBlock","recordAsyncArrowParametersError","inFunction","recordParameterInitializerError","delegate","childExpression","checkSmartPipelineBodyEarlyErrors","parseSmartPipelineBodyInStyle","isSimpleReference","topicReferenceWasUsedInCurrentTopicContext","callback","outerContextTopicState","outerContextSoloAwaitState","ret","revertScopes","_node$extra3","recordParenthesizedIdentifierError","_node$extra2","isLast","toAssignableObjectExpressionProp","raiseRestNotLast","checkToRestConversion","raiseTrailingCommaAfterRest","closeCharCode","parseAssignableListItem","_startLoc","_startPos","_left","disallowLetBinding","processComment","locationNode","getParser","decoratorsBeforeExport","validatePlugins","pluginsFromOptions","pluginList","parserClassCache","getParserClass","moduleError","_unused2","getExpression","tokTypes","codeFrameColumns","rawLines","lineNumber","colNumber","deprecationWarningShown","emitWarning","deprecationError","console","warn","location","max","_highlight","gutter","marker","getMarkerLines","linesAbove","linesBelow","startColumn","endLine","endColumn","min","lineDiff","markerLines","sourceLength","highlightCode","maybeHighlight","chalkFn","lines","hasColumns","numberMaxWidth","highlightedLines","frame","paddedNumber","hasMarker","lastMarkerLine","markerLine","markerSpacing","numberOfMarkers","repeat","_ref","excluded","target","sourceKeys","_objectWithoutPropertiesLoose","reduce","acc","parserOpts","_parser","_codeFrame","parseWithCodeFrame","removePropertiesDeep","syntactic","placeholderNames","legacy","isLegacyRef","placeholderVisitorHandler","PATTERN","ancestors","_state$placeholderWhi","isPlaceholder","isJSXIdentifier","isNewExpression","isFunction","resolve","resolveAncestors","cssKeywords","reverseKeywords","hsl","hsv","hwb","cmyk","xyz","lch","hcg","apple","h","rdif","gdif","bdif","s","v","diff","diffc","k","reversed","currentClosestKeyword","y","currentClosestDistance","pow","z","t1","t2","t3","smin","lmin","hi","floor","q","sl","vmin","wh","bl","ratio","y2","x2","z2","atan2","PI","sqrt","hr","cos","sin","mult","rem","colorString","hue","chroma","mg","pure","w","placeholderName","stringLiteral","emptyStatement","applyReplacement","_helperPluginUtils","_helperSplitExportDeclaration","_globals","_transformClass","getBuiltinClasses","category","api","assertVersion","loose","VISITED","Symbol","visitor","ExportDefaultDeclaration","isClassDeclaration","ClassDeclaration","ClassExpression","inferred","arrowFunctionToExpression"],"mappings":"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","file":"static/js/vendors-runtime-template.d0dde51b.chunk.js","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.program = exports.expression = exports.statement = exports.statements = exports.smart = void 0;\n\nvar t = _interopRequireWildcard(require(\"@babel/types\"));\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction makeStatementFormatter(fn) {\n  return {\n    code: str => `/* @babel/template */;\\n${str}`,\n    validate: () => {},\n    unwrap: ast => {\n      return fn(ast.program.body.slice(1));\n    }\n  };\n}\n\nconst smart = makeStatementFormatter(body => {\n  if (body.length > 1) {\n    return body;\n  } else {\n    return body[0];\n  }\n});\nexports.smart = smart;\nconst statements = makeStatementFormatter(body => body);\nexports.statements = statements;\nconst statement = makeStatementFormatter(body => {\n  if (body.length === 0) {\n    throw new Error(\"Found nothing to return.\");\n  }\n\n  if (body.length > 1) {\n    throw new Error(\"Found multiple statements but wanted one\");\n  }\n\n  return body[0];\n});\nexports.statement = statement;\nconst expression = {\n  code: str => `(\\n${str}\\n)`,\n  validate: ast => {\n    if (ast.program.body.length > 1) {\n      throw new Error(\"Found multiple statements but wanted one\");\n    }\n\n    if (expression.unwrap(ast).start === 0) {\n      throw new Error(\"Parse result included parens.\");\n    }\n  },\n  unwrap: ({\n    program\n  }) => {\n    const [stmt] = program.body;\n    t.assertExpressionStatement(stmt);\n    return stmt.expression;\n  }\n};\nexports.expression = expression;\nconst program = {\n  code: str => str,\n  validate: () => {},\n  unwrap: ast => ast.program\n};\nexports.program = program;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = createTemplateBuilder;\n\nvar _options = require(\"./options\");\n\nvar _string = _interopRequireDefault(require(\"./string\"));\n\nvar _literal = _interopRequireDefault(require(\"./literal\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst NO_PLACEHOLDER = (0, _options.validate)({\n  placeholderPattern: false\n});\n\nfunction createTemplateBuilder(formatter, defaultOpts) {\n  const templateFnCache = new WeakMap();\n  const templateAstCache = new WeakMap();\n  const cachedOpts = defaultOpts || (0, _options.validate)(null);\n  return Object.assign((tpl, ...args) => {\n    if (typeof tpl === \"string\") {\n      if (args.length > 1) throw new Error(\"Unexpected extra params.\");\n      return extendedTrace((0, _string.default)(formatter, tpl, (0, _options.merge)(cachedOpts, (0, _options.validate)(args[0]))));\n    } else if (Array.isArray(tpl)) {\n      let builder = templateFnCache.get(tpl);\n\n      if (!builder) {\n        builder = (0, _literal.default)(formatter, tpl, cachedOpts);\n        templateFnCache.set(tpl, builder);\n      }\n\n      return extendedTrace(builder(args));\n    } else if (typeof tpl === \"object\" && tpl) {\n      if (args.length > 0) throw new Error(\"Unexpected extra params.\");\n      return createTemplateBuilder(formatter, (0, _options.merge)(cachedOpts, (0, _options.validate)(tpl)));\n    }\n\n    throw new Error(`Unexpected template param ${typeof tpl}`);\n  }, {\n    ast: (tpl, ...args) => {\n      if (typeof tpl === \"string\") {\n        if (args.length > 1) throw new Error(\"Unexpected extra params.\");\n        return (0, _string.default)(formatter, tpl, (0, _options.merge)((0, _options.merge)(cachedOpts, (0, _options.validate)(args[0])), NO_PLACEHOLDER))();\n      } else if (Array.isArray(tpl)) {\n        let builder = templateAstCache.get(tpl);\n\n        if (!builder) {\n          builder = (0, _literal.default)(formatter, tpl, (0, _options.merge)(cachedOpts, NO_PLACEHOLDER));\n          templateAstCache.set(tpl, builder);\n        }\n\n        return builder(args)();\n      }\n\n      throw new Error(`Unexpected template param ${typeof tpl}`);\n    }\n  });\n}\n\nfunction extendedTrace(fn) {\n  let rootStack = \"\";\n\n  try {\n    throw new Error();\n  } catch (error) {\n    if (error.stack) {\n      rootStack = error.stack.split(\"\\n\").slice(3).join(\"\\n\");\n    }\n  }\n\n  return arg => {\n    try {\n      return fn(arg);\n    } catch (err) {\n      err.stack += `\\n    =============\\n${rootStack}`;\n      throw err;\n    }\n  };\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = stringTemplate;\n\nvar _options = require(\"./options\");\n\nvar _parse = _interopRequireDefault(require(\"./parse\"));\n\nvar _populate = _interopRequireDefault(require(\"./populate\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction stringTemplate(formatter, code, opts) {\n  code = formatter.code(code);\n  let metadata;\n  return arg => {\n    const replacements = (0, _options.normalizeReplacements)(arg);\n    if (!metadata) metadata = (0, _parse.default)(formatter, code, opts);\n    return formatter.unwrap((0, _populate.default)(metadata, replacements));\n  };\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.shouldHighlight = shouldHighlight;\nexports.getChalk = getChalk;\nexports.default = highlight;\n\nvar _helperValidatorIdentifier = require(\"@babel/helper-validator-identifier\");\n\nconst jsTokens = require(\"js-tokens\");\n\nconst Chalk = require(\"chalk\");\n\nconst sometimesKeywords = new Set([\"as\", \"async\", \"from\", \"get\", \"of\", \"set\"]);\n\nfunction getDefs(chalk) {\n  return {\n    keyword: chalk.cyan,\n    capitalized: chalk.yellow,\n    jsxIdentifier: chalk.yellow,\n    punctuator: chalk.yellow,\n    number: chalk.magenta,\n    string: chalk.green,\n    regex: chalk.magenta,\n    comment: chalk.grey,\n    invalid: chalk.white.bgRed.bold\n  };\n}\n\nconst NEWLINE = /\\r\\n|[\\n\\r\\u2028\\u2029]/;\nconst BRACKET = /^[()[\\]{}]$/;\nlet tokenize;\n{\n  const JSX_TAG = /^[a-z][\\w-]*$/i;\n\n  const getTokenType = function (token, offset, text) {\n    if (token.type === \"name\") {\n      if ((0, _helperValidatorIdentifier.isKeyword)(token.value) || (0, _helperValidatorIdentifier.isStrictReservedWord)(token.value, true) || sometimesKeywords.has(token.value)) {\n        return \"keyword\";\n      }\n\n      if (JSX_TAG.test(token.value) && (text[offset - 1] === \"<\" || text.substr(offset - 2, 2) == \"</\")) {\n        return \"jsxIdentifier\";\n      }\n\n      if (token.value[0] !== token.value[0].toLowerCase()) {\n        return \"capitalized\";\n      }\n    }\n\n    if (token.type === \"punctuator\" && BRACKET.test(token.value)) {\n      return \"bracket\";\n    }\n\n    if (token.type === \"invalid\" && (token.value === \"@\" || token.value === \"#\")) {\n      return \"punctuator\";\n    }\n\n    return token.type;\n  };\n\n  tokenize = function* (text) {\n    let match;\n\n    while (match = jsTokens.default.exec(text)) {\n      const token = jsTokens.matchToToken(match);\n      yield {\n        type: getTokenType(token, match.index, text),\n        value: token.value\n      };\n    }\n  };\n}\n\nfunction highlightTokens(defs, text) {\n  let highlighted = \"\";\n\n  for (const {\n    type,\n    value\n  } of tokenize(text)) {\n    const colorize = defs[type];\n\n    if (colorize) {\n      highlighted += value.split(NEWLINE).map(str => colorize(str)).join(\"\\n\");\n    } else {\n      highlighted += value;\n    }\n  }\n\n  return highlighted;\n}\n\nfunction shouldHighlight(options) {\n  return !!Chalk.supportsColor || options.forceColor;\n}\n\nfunction getChalk(options) {\n  return options.forceColor ? new Chalk.constructor({\n    enabled: true,\n    level: 1\n  }) : Chalk;\n}\n\nfunction highlight(code, options = {}) {\n  if (shouldHighlight(options)) {\n    const chalk = getChalk(options);\n    const defs = getDefs(chalk);\n    return highlightTokens(defs, code);\n  } else {\n    return code;\n  }\n}","'use strict';\nconst escapeStringRegexp = require('escape-string-regexp');\nconst ansiStyles = require('ansi-styles');\nconst stdoutColor = require('supports-color').stdout;\n\nconst template = require('./templates.js');\n\nconst isSimpleWindowsTerm = process.platform === 'win32' && !(process.env.TERM || '').toLowerCase().startsWith('xterm');\n\n// `supportsColor.level` → `ansiStyles.color[name]` mapping\nconst levelMapping = ['ansi', 'ansi', 'ansi256', 'ansi16m'];\n\n// `color-convert` models to exclude from the Chalk API due to conflicts and such\nconst skipModels = new Set(['gray']);\n\nconst styles = Object.create(null);\n\nfunction applyOptions(obj, options) {\n\toptions = options || {};\n\n\t// Detect level if not set manually\n\tconst scLevel = stdoutColor ? stdoutColor.level : 0;\n\tobj.level = options.level === undefined ? scLevel : options.level;\n\tobj.enabled = 'enabled' in options ? options.enabled : obj.level > 0;\n}\n\nfunction Chalk(options) {\n\t// We check for this.template here since calling `chalk.constructor()`\n\t// by itself will have a `this` of a previously constructed chalk object\n\tif (!this || !(this instanceof Chalk) || this.template) {\n\t\tconst chalk = {};\n\t\tapplyOptions(chalk, options);\n\n\t\tchalk.template = function () {\n\t\t\tconst args = [].slice.call(arguments);\n\t\t\treturn chalkTag.apply(null, [chalk.template].concat(args));\n\t\t};\n\n\t\tObject.setPrototypeOf(chalk, Chalk.prototype);\n\t\tObject.setPrototypeOf(chalk.template, chalk);\n\n\t\tchalk.template.constructor = Chalk;\n\n\t\treturn chalk.template;\n\t}\n\n\tapplyOptions(this, options);\n}\n\n// Use bright blue on Windows as the normal blue color is illegible\nif (isSimpleWindowsTerm) {\n\tansiStyles.blue.open = '\\u001B[94m';\n}\n\nfor (const key of Object.keys(ansiStyles)) {\n\tansiStyles[key].closeRe = new RegExp(escapeStringRegexp(ansiStyles[key].close), 'g');\n\n\tstyles[key] = {\n\t\tget() {\n\t\t\tconst codes = ansiStyles[key];\n\t\t\treturn build.call(this, this._styles ? this._styles.concat(codes) : [codes], this._empty, key);\n\t\t}\n\t};\n}\n\nstyles.visible = {\n\tget() {\n\t\treturn build.call(this, this._styles || [], true, 'visible');\n\t}\n};\n\nansiStyles.color.closeRe = new RegExp(escapeStringRegexp(ansiStyles.color.close), 'g');\nfor (const model of Object.keys(ansiStyles.color.ansi)) {\n\tif (skipModels.has(model)) {\n\t\tcontinue;\n\t}\n\n\tstyles[model] = {\n\t\tget() {\n\t\t\tconst level = this.level;\n\t\t\treturn function () {\n\t\t\t\tconst open = ansiStyles.color[levelMapping[level]][model].apply(null, arguments);\n\t\t\t\tconst codes = {\n\t\t\t\t\topen,\n\t\t\t\t\tclose: ansiStyles.color.close,\n\t\t\t\t\tcloseRe: ansiStyles.color.closeRe\n\t\t\t\t};\n\t\t\t\treturn build.call(this, this._styles ? this._styles.concat(codes) : [codes], this._empty, model);\n\t\t\t};\n\t\t}\n\t};\n}\n\nansiStyles.bgColor.closeRe = new RegExp(escapeStringRegexp(ansiStyles.bgColor.close), 'g');\nfor (const model of Object.keys(ansiStyles.bgColor.ansi)) {\n\tif (skipModels.has(model)) {\n\t\tcontinue;\n\t}\n\n\tconst bgModel = 'bg' + model[0].toUpperCase() + model.slice(1);\n\tstyles[bgModel] = {\n\t\tget() {\n\t\t\tconst level = this.level;\n\t\t\treturn function () {\n\t\t\t\tconst open = ansiStyles.bgColor[levelMapping[level]][model].apply(null, arguments);\n\t\t\t\tconst codes = {\n\t\t\t\t\topen,\n\t\t\t\t\tclose: ansiStyles.bgColor.close,\n\t\t\t\t\tcloseRe: ansiStyles.bgColor.closeRe\n\t\t\t\t};\n\t\t\t\treturn build.call(this, this._styles ? this._styles.concat(codes) : [codes], this._empty, model);\n\t\t\t};\n\t\t}\n\t};\n}\n\nconst proto = Object.defineProperties(() => {}, styles);\n\nfunction build(_styles, _empty, key) {\n\tconst builder = function () {\n\t\treturn applyStyle.apply(builder, arguments);\n\t};\n\n\tbuilder._styles = _styles;\n\tbuilder._empty = _empty;\n\n\tconst self = this;\n\n\tObject.defineProperty(builder, 'level', {\n\t\tenumerable: true,\n\t\tget() {\n\t\t\treturn self.level;\n\t\t},\n\t\tset(level) {\n\t\t\tself.level = level;\n\t\t}\n\t});\n\n\tObject.defineProperty(builder, 'enabled', {\n\t\tenumerable: true,\n\t\tget() {\n\t\t\treturn self.enabled;\n\t\t},\n\t\tset(enabled) {\n\t\t\tself.enabled = enabled;\n\t\t}\n\t});\n\n\t// See below for fix regarding invisible grey/dim combination on Windows\n\tbuilder.hasGrey = this.hasGrey || key === 'gray' || key === 'grey';\n\n\t// `__proto__` is used because we must return a function, but there is\n\t// no way to create a function with a different prototype\n\tbuilder.__proto__ = proto; // eslint-disable-line no-proto\n\n\treturn builder;\n}\n\nfunction applyStyle() {\n\t// Support varags, but simply cast to string in case there's only one arg\n\tconst args = arguments;\n\tconst argsLen = args.length;\n\tlet str = String(arguments[0]);\n\n\tif (argsLen === 0) {\n\t\treturn '';\n\t}\n\n\tif (argsLen > 1) {\n\t\t// Don't slice `arguments`, it prevents V8 optimizations\n\t\tfor (let a = 1; a < argsLen; a++) {\n\t\t\tstr += ' ' + args[a];\n\t\t}\n\t}\n\n\tif (!this.enabled || this.level <= 0 || !str) {\n\t\treturn this._empty ? '' : str;\n\t}\n\n\t// Turns out that on Windows dimmed gray text becomes invisible in cmd.exe,\n\t// see https://github.com/chalk/chalk/issues/58\n\t// If we're on Windows and we're dealing with a gray color, temporarily make 'dim' a noop.\n\tconst originalDim = ansiStyles.dim.open;\n\tif (isSimpleWindowsTerm && this.hasGrey) {\n\t\tansiStyles.dim.open = '';\n\t}\n\n\tfor (const code of this._styles.slice().reverse()) {\n\t\t// Replace any instances already present with a re-opening code\n\t\t// otherwise only the part of the string until said closing code\n\t\t// will be colored, and the rest will simply be 'plain'.\n\t\tstr = code.open + str.replace(code.closeRe, code.open) + code.close;\n\n\t\t// Close the styling before a linebreak and reopen\n\t\t// after next line to fix a bleed issue on macOS\n\t\t// https://github.com/chalk/chalk/pull/92\n\t\tstr = str.replace(/\\r?\\n/g, `${code.close}$&${code.open}`);\n\t}\n\n\t// Reset the original `dim` if we changed it to work around the Windows dimmed gray issue\n\tansiStyles.dim.open = originalDim;\n\n\treturn str;\n}\n\nfunction chalkTag(chalk, strings) {\n\tif (!Array.isArray(strings)) {\n\t\t// If chalk() was called by itself or with a string,\n\t\t// return the string itself as a string.\n\t\treturn [].slice.call(arguments, 1).join(' ');\n\t}\n\n\tconst args = [].slice.call(arguments, 2);\n\tconst parts = [strings.raw[0]];\n\n\tfor (let i = 1; i < strings.length; i++) {\n\t\tparts.push(String(args[i - 1]).replace(/[{}\\\\]/g, '\\\\$&'));\n\t\tparts.push(String(strings.raw[i]));\n\t}\n\n\treturn template(chalk, parts.join(''));\n}\n\nObject.defineProperties(Chalk.prototype, styles);\n\nmodule.exports = Chalk(); // eslint-disable-line new-cap\nmodule.exports.supportsColor = stdoutColor;\nmodule.exports.default = module.exports; // For TypeScript\n","'use strict';\nconst colorConvert = require('color-convert');\n\nconst wrapAnsi16 = (fn, offset) => function () {\n\tconst code = fn.apply(colorConvert, arguments);\n\treturn `\\u001B[${code + offset}m`;\n};\n\nconst wrapAnsi256 = (fn, offset) => function () {\n\tconst code = fn.apply(colorConvert, arguments);\n\treturn `\\u001B[${38 + offset};5;${code}m`;\n};\n\nconst wrapAnsi16m = (fn, offset) => function () {\n\tconst rgb = fn.apply(colorConvert, arguments);\n\treturn `\\u001B[${38 + offset};2;${rgb[0]};${rgb[1]};${rgb[2]}m`;\n};\n\nfunction assembleStyles() {\n\tconst codes = new Map();\n\tconst styles = {\n\t\tmodifier: {\n\t\t\treset: [0, 0],\n\t\t\t// 21 isn't widely supported and 22 does the same thing\n\t\t\tbold: [1, 22],\n\t\t\tdim: [2, 22],\n\t\t\titalic: [3, 23],\n\t\t\tunderline: [4, 24],\n\t\t\tinverse: [7, 27],\n\t\t\thidden: [8, 28],\n\t\t\tstrikethrough: [9, 29]\n\t\t},\n\t\tcolor: {\n\t\t\tblack: [30, 39],\n\t\t\tred: [31, 39],\n\t\t\tgreen: [32, 39],\n\t\t\tyellow: [33, 39],\n\t\t\tblue: [34, 39],\n\t\t\tmagenta: [35, 39],\n\t\t\tcyan: [36, 39],\n\t\t\twhite: [37, 39],\n\t\t\tgray: [90, 39],\n\n\t\t\t// Bright color\n\t\t\tredBright: [91, 39],\n\t\t\tgreenBright: [92, 39],\n\t\t\tyellowBright: [93, 39],\n\t\t\tblueBright: [94, 39],\n\t\t\tmagentaBright: [95, 39],\n\t\t\tcyanBright: [96, 39],\n\t\t\twhiteBright: [97, 39]\n\t\t},\n\t\tbgColor: {\n\t\t\tbgBlack: [40, 49],\n\t\t\tbgRed: [41, 49],\n\t\t\tbgGreen: [42, 49],\n\t\t\tbgYellow: [43, 49],\n\t\t\tbgBlue: [44, 49],\n\t\t\tbgMagenta: [45, 49],\n\t\t\tbgCyan: [46, 49],\n\t\t\tbgWhite: [47, 49],\n\n\t\t\t// Bright color\n\t\t\tbgBlackBright: [100, 49],\n\t\t\tbgRedBright: [101, 49],\n\t\t\tbgGreenBright: [102, 49],\n\t\t\tbgYellowBright: [103, 49],\n\t\t\tbgBlueBright: [104, 49],\n\t\t\tbgMagentaBright: [105, 49],\n\t\t\tbgCyanBright: [106, 49],\n\t\t\tbgWhiteBright: [107, 49]\n\t\t}\n\t};\n\n\t// Fix humans\n\tstyles.color.grey = styles.color.gray;\n\n\tfor (const groupName of Object.keys(styles)) {\n\t\tconst group = styles[groupName];\n\n\t\tfor (const styleName of Object.keys(group)) {\n\t\t\tconst style = group[styleName];\n\n\t\t\tstyles[styleName] = {\n\t\t\t\topen: `\\u001B[${style[0]}m`,\n\t\t\t\tclose: `\\u001B[${style[1]}m`\n\t\t\t};\n\n\t\t\tgroup[styleName] = styles[styleName];\n\n\t\t\tcodes.set(style[0], style[1]);\n\t\t}\n\n\t\tObject.defineProperty(styles, groupName, {\n\t\t\tvalue: group,\n\t\t\tenumerable: false\n\t\t});\n\n\t\tObject.defineProperty(styles, 'codes', {\n\t\t\tvalue: codes,\n\t\t\tenumerable: false\n\t\t});\n\t}\n\n\tconst ansi2ansi = n => n;\n\tconst rgb2rgb = (r, g, b) => [r, g, b];\n\n\tstyles.color.close = '\\u001B[39m';\n\tstyles.bgColor.close = '\\u001B[49m';\n\n\tstyles.color.ansi = {\n\t\tansi: wrapAnsi16(ansi2ansi, 0)\n\t};\n\tstyles.color.ansi256 = {\n\t\tansi256: wrapAnsi256(ansi2ansi, 0)\n\t};\n\tstyles.color.ansi16m = {\n\t\trgb: wrapAnsi16m(rgb2rgb, 0)\n\t};\n\n\tstyles.bgColor.ansi = {\n\t\tansi: wrapAnsi16(ansi2ansi, 10)\n\t};\n\tstyles.bgColor.ansi256 = {\n\t\tansi256: wrapAnsi256(ansi2ansi, 10)\n\t};\n\tstyles.bgColor.ansi16m = {\n\t\trgb: wrapAnsi16m(rgb2rgb, 10)\n\t};\n\n\tfor (let key of Object.keys(colorConvert)) {\n\t\tif (typeof colorConvert[key] !== 'object') {\n\t\t\tcontinue;\n\t\t}\n\n\t\tconst suite = colorConvert[key];\n\n\t\tif (key === 'ansi16') {\n\t\t\tkey = 'ansi';\n\t\t}\n\n\t\tif ('ansi16' in suite) {\n\t\t\tstyles.color.ansi[key] = wrapAnsi16(suite.ansi16, 0);\n\t\t\tstyles.bgColor.ansi[key] = wrapAnsi16(suite.ansi16, 10);\n\t\t}\n\n\t\tif ('ansi256' in suite) {\n\t\t\tstyles.color.ansi256[key] = wrapAnsi256(suite.ansi256, 0);\n\t\t\tstyles.bgColor.ansi256[key] = wrapAnsi256(suite.ansi256, 10);\n\t\t}\n\n\t\tif ('rgb' in suite) {\n\t\t\tstyles.color.ansi16m[key] = wrapAnsi16m(suite.rgb, 0);\n\t\t\tstyles.bgColor.ansi16m[key] = wrapAnsi16m(suite.rgb, 10);\n\t\t}\n\t}\n\n\treturn styles;\n}\n\n// Make the export immutable\nObject.defineProperty(module, 'exports', {\n\tenumerable: true,\n\tget: assembleStyles\n});\n","var conversions = require('./conversions');\nvar route = require('./route');\n\nvar convert = {};\n\nvar models = Object.keys(conversions);\n\nfunction wrapRaw(fn) {\n\tvar wrappedFn = function (args) {\n\t\tif (args === undefined || args === null) {\n\t\t\treturn args;\n\t\t}\n\n\t\tif (arguments.length > 1) {\n\t\t\targs = Array.prototype.slice.call(arguments);\n\t\t}\n\n\t\treturn fn(args);\n\t};\n\n\t// preserve .conversion property if there is one\n\tif ('conversion' in fn) {\n\t\twrappedFn.conversion = fn.conversion;\n\t}\n\n\treturn wrappedFn;\n}\n\nfunction wrapRounded(fn) {\n\tvar wrappedFn = function (args) {\n\t\tif (args === undefined || args === null) {\n\t\t\treturn args;\n\t\t}\n\n\t\tif (arguments.length > 1) {\n\t\t\targs = Array.prototype.slice.call(arguments);\n\t\t}\n\n\t\tvar result = fn(args);\n\n\t\t// we're assuming the result is an array here.\n\t\t// see notice in conversions.js; don't use box types\n\t\t// in conversion functions.\n\t\tif (typeof result === 'object') {\n\t\t\tfor (var len = result.length, i = 0; i < len; i++) {\n\t\t\t\tresult[i] = Math.round(result[i]);\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t};\n\n\t// preserve .conversion property if there is one\n\tif ('conversion' in fn) {\n\t\twrappedFn.conversion = fn.conversion;\n\t}\n\n\treturn wrappedFn;\n}\n\nmodels.forEach(function (fromModel) {\n\tconvert[fromModel] = {};\n\n\tObject.defineProperty(convert[fromModel], 'channels', {value: conversions[fromModel].channels});\n\tObject.defineProperty(convert[fromModel], 'labels', {value: conversions[fromModel].labels});\n\n\tvar routes = route(fromModel);\n\tvar routeModels = Object.keys(routes);\n\n\trouteModels.forEach(function (toModel) {\n\t\tvar fn = routes[toModel];\n\n\t\tconvert[fromModel][toModel] = wrapRounded(fn);\n\t\tconvert[fromModel][toModel].raw = wrapRaw(fn);\n\t});\n});\n\nmodule.exports = convert;\n","'use strict'\r\n\r\nmodule.exports = {\r\n\t\"aliceblue\": [240, 248, 255],\r\n\t\"antiquewhite\": [250, 235, 215],\r\n\t\"aqua\": [0, 255, 255],\r\n\t\"aquamarine\": [127, 255, 212],\r\n\t\"azure\": [240, 255, 255],\r\n\t\"beige\": [245, 245, 220],\r\n\t\"bisque\": [255, 228, 196],\r\n\t\"black\": [0, 0, 0],\r\n\t\"blanchedalmond\": [255, 235, 205],\r\n\t\"blue\": [0, 0, 255],\r\n\t\"blueviolet\": [138, 43, 226],\r\n\t\"brown\": [165, 42, 42],\r\n\t\"burlywood\": [222, 184, 135],\r\n\t\"cadetblue\": [95, 158, 160],\r\n\t\"chartreuse\": [127, 255, 0],\r\n\t\"chocolate\": [210, 105, 30],\r\n\t\"coral\": [255, 127, 80],\r\n\t\"cornflowerblue\": [100, 149, 237],\r\n\t\"cornsilk\": [255, 248, 220],\r\n\t\"crimson\": [220, 20, 60],\r\n\t\"cyan\": [0, 255, 255],\r\n\t\"darkblue\": [0, 0, 139],\r\n\t\"darkcyan\": [0, 139, 139],\r\n\t\"darkgoldenrod\": [184, 134, 11],\r\n\t\"darkgray\": [169, 169, 169],\r\n\t\"darkgreen\": [0, 100, 0],\r\n\t\"darkgrey\": [169, 169, 169],\r\n\t\"darkkhaki\": [189, 183, 107],\r\n\t\"darkmagenta\": [139, 0, 139],\r\n\t\"darkolivegreen\": [85, 107, 47],\r\n\t\"darkorange\": [255, 140, 0],\r\n\t\"darkorchid\": [153, 50, 204],\r\n\t\"darkred\": [139, 0, 0],\r\n\t\"darksalmon\": [233, 150, 122],\r\n\t\"darkseagreen\": [143, 188, 143],\r\n\t\"darkslateblue\": [72, 61, 139],\r\n\t\"darkslategray\": [47, 79, 79],\r\n\t\"darkslategrey\": [47, 79, 79],\r\n\t\"darkturquoise\": [0, 206, 209],\r\n\t\"darkviolet\": [148, 0, 211],\r\n\t\"deeppink\": [255, 20, 147],\r\n\t\"deepskyblue\": [0, 191, 255],\r\n\t\"dimgray\": [105, 105, 105],\r\n\t\"dimgrey\": [105, 105, 105],\r\n\t\"dodgerblue\": [30, 144, 255],\r\n\t\"firebrick\": [178, 34, 34],\r\n\t\"floralwhite\": [255, 250, 240],\r\n\t\"forestgreen\": [34, 139, 34],\r\n\t\"fuchsia\": [255, 0, 255],\r\n\t\"gainsboro\": [220, 220, 220],\r\n\t\"ghostwhite\": [248, 248, 255],\r\n\t\"gold\": [255, 215, 0],\r\n\t\"goldenrod\": [218, 165, 32],\r\n\t\"gray\": [128, 128, 128],\r\n\t\"green\": [0, 128, 0],\r\n\t\"greenyellow\": [173, 255, 47],\r\n\t\"grey\": [128, 128, 128],\r\n\t\"honeydew\": [240, 255, 240],\r\n\t\"hotpink\": [255, 105, 180],\r\n\t\"indianred\": [205, 92, 92],\r\n\t\"indigo\": [75, 0, 130],\r\n\t\"ivory\": [255, 255, 240],\r\n\t\"khaki\": [240, 230, 140],\r\n\t\"lavender\": [230, 230, 250],\r\n\t\"lavenderblush\": [255, 240, 245],\r\n\t\"lawngreen\": [124, 252, 0],\r\n\t\"lemonchiffon\": [255, 250, 205],\r\n\t\"lightblue\": [173, 216, 230],\r\n\t\"lightcoral\": [240, 128, 128],\r\n\t\"lightcyan\": [224, 255, 255],\r\n\t\"lightgoldenrodyellow\": [250, 250, 210],\r\n\t\"lightgray\": [211, 211, 211],\r\n\t\"lightgreen\": [144, 238, 144],\r\n\t\"lightgrey\": [211, 211, 211],\r\n\t\"lightpink\": [255, 182, 193],\r\n\t\"lightsalmon\": [255, 160, 122],\r\n\t\"lightseagreen\": [32, 178, 170],\r\n\t\"lightskyblue\": [135, 206, 250],\r\n\t\"lightslategray\": [119, 136, 153],\r\n\t\"lightslategrey\": [119, 136, 153],\r\n\t\"lightsteelblue\": [176, 196, 222],\r\n\t\"lightyellow\": [255, 255, 224],\r\n\t\"lime\": [0, 255, 0],\r\n\t\"limegreen\": [50, 205, 50],\r\n\t\"linen\": [250, 240, 230],\r\n\t\"magenta\": [255, 0, 255],\r\n\t\"maroon\": [128, 0, 0],\r\n\t\"mediumaquamarine\": [102, 205, 170],\r\n\t\"mediumblue\": [0, 0, 205],\r\n\t\"mediumorchid\": [186, 85, 211],\r\n\t\"mediumpurple\": [147, 112, 219],\r\n\t\"mediumseagreen\": [60, 179, 113],\r\n\t\"mediumslateblue\": [123, 104, 238],\r\n\t\"mediumspringgreen\": [0, 250, 154],\r\n\t\"mediumturquoise\": [72, 209, 204],\r\n\t\"mediumvioletred\": [199, 21, 133],\r\n\t\"midnightblue\": [25, 25, 112],\r\n\t\"mintcream\": [245, 255, 250],\r\n\t\"mistyrose\": [255, 228, 225],\r\n\t\"moccasin\": [255, 228, 181],\r\n\t\"navajowhite\": [255, 222, 173],\r\n\t\"navy\": [0, 0, 128],\r\n\t\"oldlace\": [253, 245, 230],\r\n\t\"olive\": [128, 128, 0],\r\n\t\"olivedrab\": [107, 142, 35],\r\n\t\"orange\": [255, 165, 0],\r\n\t\"orangered\": [255, 69, 0],\r\n\t\"orchid\": [218, 112, 214],\r\n\t\"palegoldenrod\": [238, 232, 170],\r\n\t\"palegreen\": [152, 251, 152],\r\n\t\"paleturquoise\": [175, 238, 238],\r\n\t\"palevioletred\": [219, 112, 147],\r\n\t\"papayawhip\": [255, 239, 213],\r\n\t\"peachpuff\": [255, 218, 185],\r\n\t\"peru\": [205, 133, 63],\r\n\t\"pink\": [255, 192, 203],\r\n\t\"plum\": [221, 160, 221],\r\n\t\"powderblue\": [176, 224, 230],\r\n\t\"purple\": [128, 0, 128],\r\n\t\"rebeccapurple\": [102, 51, 153],\r\n\t\"red\": [255, 0, 0],\r\n\t\"rosybrown\": [188, 143, 143],\r\n\t\"royalblue\": [65, 105, 225],\r\n\t\"saddlebrown\": [139, 69, 19],\r\n\t\"salmon\": [250, 128, 114],\r\n\t\"sandybrown\": [244, 164, 96],\r\n\t\"seagreen\": [46, 139, 87],\r\n\t\"seashell\": [255, 245, 238],\r\n\t\"sienna\": [160, 82, 45],\r\n\t\"silver\": [192, 192, 192],\r\n\t\"skyblue\": [135, 206, 235],\r\n\t\"slateblue\": [106, 90, 205],\r\n\t\"slategray\": [112, 128, 144],\r\n\t\"slategrey\": [112, 128, 144],\r\n\t\"snow\": [255, 250, 250],\r\n\t\"springgreen\": [0, 255, 127],\r\n\t\"steelblue\": [70, 130, 180],\r\n\t\"tan\": [210, 180, 140],\r\n\t\"teal\": [0, 128, 128],\r\n\t\"thistle\": [216, 191, 216],\r\n\t\"tomato\": [255, 99, 71],\r\n\t\"turquoise\": [64, 224, 208],\r\n\t\"violet\": [238, 130, 238],\r\n\t\"wheat\": [245, 222, 179],\r\n\t\"white\": [255, 255, 255],\r\n\t\"whitesmoke\": [245, 245, 245],\r\n\t\"yellow\": [255, 255, 0],\r\n\t\"yellowgreen\": [154, 205, 50]\r\n};\r\n","var conversions = require('./conversions');\n\n/*\n\tthis function routes a model to all other models.\n\n\tall functions that are routed have a property `.conversion` attached\n\tto the returned synthetic function. This property is an array\n\tof strings, each with the steps in between the 'from' and 'to'\n\tcolor models (inclusive).\n\n\tconversions that are not possible simply are not included.\n*/\n\nfunction buildGraph() {\n\tvar graph = {};\n\t// https://jsperf.com/object-keys-vs-for-in-with-closure/3\n\tvar models = Object.keys(conversions);\n\n\tfor (var len = models.length, i = 0; i < len; i++) {\n\t\tgraph[models[i]] = {\n\t\t\t// http://jsperf.com/1-vs-infinity\n\t\t\t// micro-opt, but this is simple.\n\t\t\tdistance: -1,\n\t\t\tparent: null\n\t\t};\n\t}\n\n\treturn graph;\n}\n\n// https://en.wikipedia.org/wiki/Breadth-first_search\nfunction deriveBFS(fromModel) {\n\tvar graph = buildGraph();\n\tvar queue = [fromModel]; // unshift -> queue -> pop\n\n\tgraph[fromModel].distance = 0;\n\n\twhile (queue.length) {\n\t\tvar current = queue.pop();\n\t\tvar adjacents = Object.keys(conversions[current]);\n\n\t\tfor (var len = adjacents.length, i = 0; i < len; i++) {\n\t\t\tvar adjacent = adjacents[i];\n\t\t\tvar node = graph[adjacent];\n\n\t\t\tif (node.distance === -1) {\n\t\t\t\tnode.distance = graph[current].distance + 1;\n\t\t\t\tnode.parent = current;\n\t\t\t\tqueue.unshift(adjacent);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn graph;\n}\n\nfunction link(from, to) {\n\treturn function (args) {\n\t\treturn to(from(args));\n\t};\n}\n\nfunction wrapConversion(toModel, graph) {\n\tvar path = [graph[toModel].parent, toModel];\n\tvar fn = conversions[graph[toModel].parent][toModel];\n\n\tvar cur = graph[toModel].parent;\n\twhile (graph[cur].parent) {\n\t\tpath.unshift(graph[cur].parent);\n\t\tfn = link(conversions[graph[cur].parent][cur], fn);\n\t\tcur = graph[cur].parent;\n\t}\n\n\tfn.conversion = path;\n\treturn fn;\n}\n\nmodule.exports = function (fromModel) {\n\tvar graph = deriveBFS(fromModel);\n\tvar conversion = {};\n\n\tvar models = Object.keys(graph);\n\tfor (var len = models.length, i = 0; i < len; i++) {\n\t\tvar toModel = models[i];\n\t\tvar node = graph[toModel];\n\n\t\tif (node.parent === null) {\n\t\t\t// no possible conversion, or this node is the source model.\n\t\t\tcontinue;\n\t\t}\n\n\t\tconversion[toModel] = wrapConversion(toModel, graph);\n\t}\n\n\treturn conversion;\n};\n\n","'use strict';\nmodule.exports = {\n\tstdout: false,\n\tstderr: false\n};\n","'use strict';\nconst TEMPLATE_REGEX = /(?:\\\\(u[a-f\\d]{4}|x[a-f\\d]{2}|.))|(?:\\{(~)?(\\w+(?:\\([^)]*\\))?(?:\\.\\w+(?:\\([^)]*\\))?)*)(?:[ \\t]|(?=\\r?\\n)))|(\\})|((?:.|[\\r\\n\\f])+?)/gi;\nconst STYLE_REGEX = /(?:^|\\.)(\\w+)(?:\\(([^)]*)\\))?/g;\nconst STRING_REGEX = /^(['\"])((?:\\\\.|(?!\\1)[^\\\\])*)\\1$/;\nconst ESCAPE_REGEX = /\\\\(u[a-f\\d]{4}|x[a-f\\d]{2}|.)|([^\\\\])/gi;\n\nconst ESCAPES = new Map([\n\t['n', '\\n'],\n\t['r', '\\r'],\n\t['t', '\\t'],\n\t['b', '\\b'],\n\t['f', '\\f'],\n\t['v', '\\v'],\n\t['0', '\\0'],\n\t['\\\\', '\\\\'],\n\t['e', '\\u001B'],\n\t['a', '\\u0007']\n]);\n\nfunction unescape(c) {\n\tif ((c[0] === 'u' && c.length === 5) || (c[0] === 'x' && c.length === 3)) {\n\t\treturn String.fromCharCode(parseInt(c.slice(1), 16));\n\t}\n\n\treturn ESCAPES.get(c) || c;\n}\n\nfunction parseArguments(name, args) {\n\tconst results = [];\n\tconst chunks = args.trim().split(/\\s*,\\s*/g);\n\tlet matches;\n\n\tfor (const chunk of chunks) {\n\t\tif (!isNaN(chunk)) {\n\t\t\tresults.push(Number(chunk));\n\t\t} else if ((matches = chunk.match(STRING_REGEX))) {\n\t\t\tresults.push(matches[2].replace(ESCAPE_REGEX, (m, escape, chr) => escape ? unescape(escape) : chr));\n\t\t} else {\n\t\t\tthrow new Error(`Invalid Chalk template style argument: ${chunk} (in style '${name}')`);\n\t\t}\n\t}\n\n\treturn results;\n}\n\nfunction parseStyle(style) {\n\tSTYLE_REGEX.lastIndex = 0;\n\n\tconst results = [];\n\tlet matches;\n\n\twhile ((matches = STYLE_REGEX.exec(style)) !== null) {\n\t\tconst name = matches[1];\n\n\t\tif (matches[2]) {\n\t\t\tconst args = parseArguments(name, matches[2]);\n\t\t\tresults.push([name].concat(args));\n\t\t} else {\n\t\t\tresults.push([name]);\n\t\t}\n\t}\n\n\treturn results;\n}\n\nfunction buildStyle(chalk, styles) {\n\tconst enabled = {};\n\n\tfor (const layer of styles) {\n\t\tfor (const style of layer.styles) {\n\t\t\tenabled[style[0]] = layer.inverse ? null : style.slice(1);\n\t\t}\n\t}\n\n\tlet current = chalk;\n\tfor (const styleName of Object.keys(enabled)) {\n\t\tif (Array.isArray(enabled[styleName])) {\n\t\t\tif (!(styleName in current)) {\n\t\t\t\tthrow new Error(`Unknown Chalk style: ${styleName}`);\n\t\t\t}\n\n\t\t\tif (enabled[styleName].length > 0) {\n\t\t\t\tcurrent = current[styleName].apply(current, enabled[styleName]);\n\t\t\t} else {\n\t\t\t\tcurrent = current[styleName];\n\t\t\t}\n\t\t}\n\t}\n\n\treturn current;\n}\n\nmodule.exports = (chalk, tmp) => {\n\tconst styles = [];\n\tconst chunks = [];\n\tlet chunk = [];\n\n\t// eslint-disable-next-line max-params\n\ttmp.replace(TEMPLATE_REGEX, (m, escapeChar, inverse, style, close, chr) => {\n\t\tif (escapeChar) {\n\t\t\tchunk.push(unescape(escapeChar));\n\t\t} else if (style) {\n\t\t\tconst str = chunk.join('');\n\t\t\tchunk = [];\n\t\t\tchunks.push(styles.length === 0 ? str : buildStyle(chalk, styles)(str));\n\t\t\tstyles.push({inverse, styles: parseStyle(style)});\n\t\t} else if (close) {\n\t\t\tif (styles.length === 0) {\n\t\t\t\tthrow new Error('Found extraneous } in Chalk template literal');\n\t\t\t}\n\n\t\t\tchunks.push(buildStyle(chalk, styles)(chunk.join('')));\n\t\t\tchunk = [];\n\t\t\tstyles.pop();\n\t\t} else {\n\t\t\tchunk.push(chr);\n\t\t}\n\t});\n\n\tchunks.push(chunk.join(''));\n\n\tif (styles.length > 0) {\n\t\tconst errMsg = `Chalk template literal is missing ${styles.length} closing bracket${styles.length === 1 ? '' : 's'} (\\`}\\`)`;\n\t\tthrow new Error(errMsg);\n\t}\n\n\treturn chunks.join('');\n};\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = literalTemplate;\n\nvar _options = require(\"./options\");\n\nvar _parse = _interopRequireDefault(require(\"./parse\"));\n\nvar _populate = _interopRequireDefault(require(\"./populate\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction literalTemplate(formatter, tpl, opts) {\n  const {\n    metadata,\n    names\n  } = buildLiteralData(formatter, tpl, opts);\n  return arg => {\n    const defaultReplacements = {};\n    arg.forEach((replacement, i) => {\n      defaultReplacements[names[i]] = replacement;\n    });\n    return arg => {\n      const replacements = (0, _options.normalizeReplacements)(arg);\n\n      if (replacements) {\n        Object.keys(replacements).forEach(key => {\n          if (Object.prototype.hasOwnProperty.call(defaultReplacements, key)) {\n            throw new Error(\"Unexpected replacement overlap.\");\n          }\n        });\n      }\n\n      return formatter.unwrap((0, _populate.default)(metadata, replacements ? Object.assign(replacements, defaultReplacements) : defaultReplacements));\n    };\n  };\n}\n\nfunction buildLiteralData(formatter, tpl, opts) {\n  let names;\n  let nameSet;\n  let metadata;\n  let prefix = \"\";\n\n  do {\n    prefix += \"$\";\n    const result = buildTemplateCode(tpl, prefix);\n    names = result.names;\n    nameSet = new Set(names);\n    metadata = (0, _parse.default)(formatter, formatter.code(result.code), {\n      parser: opts.parser,\n      placeholderWhitelist: new Set(result.names.concat(opts.placeholderWhitelist ? Array.from(opts.placeholderWhitelist) : [])),\n      placeholderPattern: opts.placeholderPattern,\n      preserveComments: opts.preserveComments,\n      syntacticPlaceholders: opts.syntacticPlaceholders\n    });\n  } while (metadata.placeholders.some(placeholder => placeholder.isDuplicate && nameSet.has(placeholder.name)));\n\n  return {\n    metadata,\n    names\n  };\n}\n\nfunction buildTemplateCode(tpl, prefix) {\n  const names = [];\n  let code = tpl[0];\n\n  for (let i = 1; i < tpl.length; i++) {\n    const value = `${prefix}${i - 1}`;\n    names.push(value);\n    code += value + tpl[i];\n  }\n\n  return {\n    names,\n    code\n  };\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports.program = exports.expression = exports.statements = exports.statement = exports.smart = void 0;\n\nvar formatters = _interopRequireWildcard(require(\"./formatters\"));\n\nvar _builder = _interopRequireDefault(require(\"./builder\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nconst smart = (0, _builder.default)(formatters.smart);\nexports.smart = smart;\nconst statement = (0, _builder.default)(formatters.statement);\nexports.statement = statement;\nconst statements = (0, _builder.default)(formatters.statements);\nexports.statements = statements;\nconst expression = (0, _builder.default)(formatters.expression);\nexports.expression = expression;\nconst program = (0, _builder.default)(formatters.program);\nexports.program = program;\n\nvar _default = Object.assign(smart.bind(undefined), {\n  smart,\n  statement,\n  statements,\n  expression,\n  program,\n  ast: smart.ast\n});\n\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = transformClass;\n\nvar _helperFunctionName = _interopRequireDefault(require(\"@babel/helper-function-name\"));\n\nvar _helperReplaceSupers = _interopRequireWildcard(require(\"@babel/helper-replace-supers\"));\n\nvar _helperOptimiseCallExpression = _interopRequireDefault(require(\"@babel/helper-optimise-call-expression\"));\n\nvar defineMap = _interopRequireWildcard(require(\"@babel/helper-define-map\"));\n\nvar _core = require(\"@babel/core\");\n\nvar _helperAnnotateAsPure = _interopRequireDefault(require(\"@babel/helper-annotate-as-pure\"));\n\nvar _inlineCreateSuperHelpers = _interopRequireDefault(require(\"./inline-createSuper-helpers\"));\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction buildConstructor(classRef, constructorBody, node) {\n  const func = _core.types.functionDeclaration(_core.types.cloneNode(classRef), [], constructorBody);\n\n  _core.types.inherits(func, node);\n\n  return func;\n}\n\nfunction transformClass(path, file, builtinClasses, isLoose) {\n  const classState = {\n    parent: undefined,\n    scope: undefined,\n    node: undefined,\n    path: undefined,\n    file: undefined,\n    classId: undefined,\n    classRef: undefined,\n    superFnId: undefined,\n    superName: undefined,\n    superReturns: [],\n    isDerived: false,\n    extendsNative: false,\n    construct: undefined,\n    constructorBody: undefined,\n    userConstructor: undefined,\n    userConstructorPath: undefined,\n    hasConstructor: false,\n    instancePropBody: [],\n    instancePropRefs: {},\n    staticPropBody: [],\n    body: [],\n    superThises: [],\n    pushedConstructor: false,\n    pushedInherits: false,\n    protoAlias: null,\n    isLoose: false,\n    hasInstanceDescriptors: false,\n    hasStaticDescriptors: false,\n    instanceMutatorMap: {},\n    staticMutatorMap: {}\n  };\n\n  const setState = newState => {\n    Object.assign(classState, newState);\n  };\n\n  const findThisesVisitor = _core.traverse.visitors.merge([_helperReplaceSupers.environmentVisitor, {\n    ThisExpression(path) {\n      classState.superThises.push(path);\n    }\n\n  }]);\n\n  function pushToMap(node, enumerable, kind = \"value\", scope) {\n    let mutatorMap;\n\n    if (node.static) {\n      setState({\n        hasStaticDescriptors: true\n      });\n      mutatorMap = classState.staticMutatorMap;\n    } else {\n      setState({\n        hasInstanceDescriptors: true\n      });\n      mutatorMap = classState.instanceMutatorMap;\n    }\n\n    const map = defineMap.push(mutatorMap, node, kind, classState.file, scope);\n\n    if (enumerable) {\n      map.enumerable = _core.types.booleanLiteral(true);\n    }\n\n    return map;\n  }\n\n  function maybeCreateConstructor() {\n    let hasConstructor = false;\n    const paths = classState.path.get(\"body.body\");\n\n    for (const path of paths) {\n      hasConstructor = path.equals(\"kind\", \"constructor\");\n      if (hasConstructor) break;\n    }\n\n    if (hasConstructor) return;\n    let params, body;\n\n    if (classState.isDerived) {\n      const constructor = _core.template.expression.ast`\n        (function () {\n          super(...arguments);\n        })\n      `;\n      params = constructor.params;\n      body = constructor.body;\n    } else {\n      params = [];\n      body = _core.types.blockStatement([]);\n    }\n\n    classState.path.get(\"body\").unshiftContainer(\"body\", _core.types.classMethod(\"constructor\", _core.types.identifier(\"constructor\"), params, body));\n  }\n\n  function buildBody() {\n    maybeCreateConstructor();\n    pushBody();\n    verifyConstructor();\n\n    if (classState.userConstructor) {\n      const {\n        constructorBody,\n        userConstructor,\n        construct\n      } = classState;\n      constructorBody.body = constructorBody.body.concat(userConstructor.body.body);\n\n      _core.types.inherits(construct, userConstructor);\n\n      _core.types.inherits(constructorBody, userConstructor.body);\n    }\n\n    pushDescriptors();\n  }\n\n  function pushBody() {\n    const classBodyPaths = classState.path.get(\"body.body\");\n\n    for (const path of classBodyPaths) {\n      const node = path.node;\n\n      if (path.isClassProperty()) {\n        throw path.buildCodeFrameError(\"Missing class properties transform.\");\n      }\n\n      if (node.decorators) {\n        throw path.buildCodeFrameError(\"Method has decorators, put the decorator plugin before the classes one.\");\n      }\n\n      if (_core.types.isClassMethod(node)) {\n        const isConstructor = node.kind === \"constructor\";\n        const replaceSupers = new _helperReplaceSupers.default({\n          methodPath: path,\n          objectRef: classState.classRef,\n          superRef: classState.superName,\n          isLoose: classState.isLoose,\n          file: classState.file\n        });\n        replaceSupers.replace();\n        const superReturns = [];\n        path.traverse(_core.traverse.visitors.merge([_helperReplaceSupers.environmentVisitor, {\n          ReturnStatement(path) {\n            if (!path.getFunctionParent().isArrowFunctionExpression()) {\n              superReturns.push(path);\n            }\n          }\n\n        }]));\n\n        if (isConstructor) {\n          pushConstructor(superReturns, node, path);\n        } else {\n          pushMethod(node, path);\n        }\n      }\n    }\n  }\n\n  function clearDescriptors() {\n    setState({\n      hasInstanceDescriptors: false,\n      hasStaticDescriptors: false,\n      instanceMutatorMap: {},\n      staticMutatorMap: {}\n    });\n  }\n\n  function pushDescriptors() {\n    pushInheritsToBody();\n    const {\n      body\n    } = classState;\n    let instanceProps;\n    let staticProps;\n\n    if (classState.hasInstanceDescriptors) {\n      instanceProps = defineMap.toClassObject(classState.instanceMutatorMap);\n    }\n\n    if (classState.hasStaticDescriptors) {\n      staticProps = defineMap.toClassObject(classState.staticMutatorMap);\n    }\n\n    if (instanceProps || staticProps) {\n      if (instanceProps) {\n        instanceProps = defineMap.toComputedObjectFromClass(instanceProps);\n      }\n\n      if (staticProps) {\n        staticProps = defineMap.toComputedObjectFromClass(staticProps);\n      }\n\n      let args = [_core.types.cloneNode(classState.classRef), _core.types.nullLiteral(), _core.types.nullLiteral()];\n      if (instanceProps) args[1] = instanceProps;\n      if (staticProps) args[2] = staticProps;\n      let lastNonNullIndex = 0;\n\n      for (let i = 0; i < args.length; i++) {\n        if (!_core.types.isNullLiteral(args[i])) lastNonNullIndex = i;\n      }\n\n      args = args.slice(0, lastNonNullIndex + 1);\n      body.push(_core.types.expressionStatement(_core.types.callExpression(classState.file.addHelper(\"createClass\"), args)));\n    }\n\n    clearDescriptors();\n  }\n\n  function wrapSuperCall(bareSuper, superRef, thisRef, body) {\n    const bareSuperNode = bareSuper.node;\n    let call;\n\n    if (classState.isLoose) {\n      bareSuperNode.arguments.unshift(_core.types.thisExpression());\n\n      if (bareSuperNode.arguments.length === 2 && _core.types.isSpreadElement(bareSuperNode.arguments[1]) && _core.types.isIdentifier(bareSuperNode.arguments[1].argument, {\n        name: \"arguments\"\n      })) {\n        bareSuperNode.arguments[1] = bareSuperNode.arguments[1].argument;\n        bareSuperNode.callee = _core.types.memberExpression(_core.types.cloneNode(superRef), _core.types.identifier(\"apply\"));\n      } else {\n        bareSuperNode.callee = _core.types.memberExpression(_core.types.cloneNode(superRef), _core.types.identifier(\"call\"));\n      }\n\n      call = _core.types.logicalExpression(\"||\", bareSuperNode, _core.types.thisExpression());\n    } else {\n      call = (0, _helperOptimiseCallExpression.default)(_core.types.cloneNode(classState.superFnId), _core.types.thisExpression(), bareSuperNode.arguments);\n    }\n\n    if (bareSuper.parentPath.isExpressionStatement() && bareSuper.parentPath.container === body.node.body && body.node.body.length - 1 === bareSuper.parentPath.key) {\n      if (classState.superThises.length) {\n        call = _core.types.assignmentExpression(\"=\", thisRef(), call);\n      }\n\n      bareSuper.parentPath.replaceWith(_core.types.returnStatement(call));\n    } else {\n      bareSuper.replaceWith(_core.types.assignmentExpression(\"=\", thisRef(), call));\n    }\n  }\n\n  function verifyConstructor() {\n    if (!classState.isDerived) return;\n    const path = classState.userConstructorPath;\n    const body = path.get(\"body\");\n    path.traverse(findThisesVisitor);\n\n    let thisRef = function () {\n      const ref = path.scope.generateDeclaredUidIdentifier(\"this\");\n\n      thisRef = () => _core.types.cloneNode(ref);\n\n      return ref;\n    };\n\n    for (const thisPath of classState.superThises) {\n      const {\n        node,\n        parentPath\n      } = thisPath;\n\n      if (parentPath.isMemberExpression({\n        object: node\n      })) {\n        thisPath.replaceWith(thisRef());\n        continue;\n      }\n\n      thisPath.replaceWith(_core.types.callExpression(classState.file.addHelper(\"assertThisInitialized\"), [thisRef()]));\n    }\n\n    const bareSupers = new Set();\n    path.traverse(_core.traverse.visitors.merge([_helperReplaceSupers.environmentVisitor, {\n      Super(path) {\n        const {\n          node,\n          parentPath\n        } = path;\n\n        if (parentPath.isCallExpression({\n          callee: node\n        })) {\n          bareSupers.add(parentPath);\n        }\n      }\n\n    }]));\n    let guaranteedSuperBeforeFinish = !!bareSupers.size;\n\n    for (const bareSuper of bareSupers) {\n      wrapSuperCall(bareSuper, classState.superName, thisRef, body);\n\n      if (guaranteedSuperBeforeFinish) {\n        bareSuper.find(function (parentPath) {\n          if (parentPath === path) {\n            return true;\n          }\n\n          if (parentPath.isLoop() || parentPath.isConditional() || parentPath.isArrowFunctionExpression()) {\n            guaranteedSuperBeforeFinish = false;\n            return true;\n          }\n        });\n      }\n    }\n\n    let wrapReturn;\n\n    if (classState.isLoose) {\n      wrapReturn = returnArg => {\n        const thisExpr = _core.types.callExpression(classState.file.addHelper(\"assertThisInitialized\"), [thisRef()]);\n\n        return returnArg ? _core.types.logicalExpression(\"||\", returnArg, thisExpr) : thisExpr;\n      };\n    } else {\n      wrapReturn = returnArg => _core.types.callExpression(classState.file.addHelper(\"possibleConstructorReturn\"), [thisRef()].concat(returnArg || []));\n    }\n\n    const bodyPaths = body.get(\"body\");\n\n    if (!bodyPaths.length || !bodyPaths.pop().isReturnStatement()) {\n      body.pushContainer(\"body\", _core.types.returnStatement(guaranteedSuperBeforeFinish ? thisRef() : wrapReturn()));\n    }\n\n    for (const returnPath of classState.superReturns) {\n      returnPath.get(\"argument\").replaceWith(wrapReturn(returnPath.node.argument));\n    }\n  }\n\n  function pushMethod(node, path) {\n    const scope = path ? path.scope : classState.scope;\n\n    if (node.kind === \"method\") {\n      if (processMethod(node, scope)) return;\n    }\n\n    pushToMap(node, false, null, scope);\n  }\n\n  function processMethod(node, scope) {\n    if (classState.isLoose && !node.decorators) {\n      let {\n        classRef\n      } = classState;\n\n      if (!node.static) {\n        insertProtoAliasOnce();\n        classRef = classState.protoAlias;\n      }\n\n      const methodName = _core.types.memberExpression(_core.types.cloneNode(classRef), node.key, node.computed || _core.types.isLiteral(node.key));\n\n      let func = _core.types.functionExpression(null, node.params, node.body, node.generator, node.async);\n\n      _core.types.inherits(func, node);\n\n      const key = _core.types.toComputedKey(node, node.key);\n\n      if (_core.types.isStringLiteral(key)) {\n        func = (0, _helperFunctionName.default)({\n          node: func,\n          id: key,\n          scope\n        });\n      }\n\n      const expr = _core.types.expressionStatement(_core.types.assignmentExpression(\"=\", methodName, func));\n\n      _core.types.inheritsComments(expr, node);\n\n      classState.body.push(expr);\n      return true;\n    }\n\n    return false;\n  }\n\n  function insertProtoAliasOnce() {\n    if (classState.protoAlias === null) {\n      setState({\n        protoAlias: classState.scope.generateUidIdentifier(\"proto\")\n      });\n\n      const classProto = _core.types.memberExpression(classState.classRef, _core.types.identifier(\"prototype\"));\n\n      const protoDeclaration = _core.types.variableDeclaration(\"var\", [_core.types.variableDeclarator(classState.protoAlias, classProto)]);\n\n      classState.body.push(protoDeclaration);\n    }\n  }\n\n  function pushConstructor(superReturns, method, path) {\n    if (path.scope.hasOwnBinding(classState.classRef.name)) {\n      path.scope.rename(classState.classRef.name);\n    }\n\n    setState({\n      userConstructorPath: path,\n      userConstructor: method,\n      hasConstructor: true,\n      superReturns\n    });\n    const {\n      construct\n    } = classState;\n\n    _core.types.inheritsComments(construct, method);\n\n    construct.params = method.params;\n\n    _core.types.inherits(construct.body, method.body);\n\n    construct.body.directives = method.body.directives;\n    pushConstructorToBody();\n  }\n\n  function pushConstructorToBody() {\n    if (classState.pushedConstructor) return;\n    classState.pushedConstructor = true;\n\n    if (classState.hasInstanceDescriptors || classState.hasStaticDescriptors) {\n      pushDescriptors();\n    }\n\n    classState.body.push(classState.construct);\n    pushInheritsToBody();\n  }\n\n  function pushInheritsToBody() {\n    if (!classState.isDerived || classState.pushedInherits) return;\n    const superFnId = path.scope.generateUidIdentifier(\"super\");\n    setState({\n      pushedInherits: true,\n      superFnId\n    });\n\n    if (!classState.isLoose) {\n      classState.body.unshift(_core.types.variableDeclaration(\"var\", [_core.types.variableDeclarator(superFnId, _core.types.callExpression((0, _inlineCreateSuperHelpers.default)(classState.file), [_core.types.cloneNode(classState.classRef)]))]));\n    }\n\n    classState.body.unshift(_core.types.expressionStatement(_core.types.callExpression(classState.file.addHelper(classState.isLoose ? \"inheritsLoose\" : \"inherits\"), [_core.types.cloneNode(classState.classRef), _core.types.cloneNode(classState.superName)])));\n  }\n\n  function setupClosureParamsArgs() {\n    const {\n      superName\n    } = classState;\n    const closureParams = [];\n    const closureArgs = [];\n\n    if (classState.isDerived) {\n      let arg = _core.types.cloneNode(superName);\n\n      if (classState.extendsNative) {\n        arg = _core.types.callExpression(classState.file.addHelper(\"wrapNativeSuper\"), [arg]);\n        (0, _helperAnnotateAsPure.default)(arg);\n      }\n\n      const param = classState.scope.generateUidIdentifierBasedOnNode(superName);\n      closureParams.push(param);\n      closureArgs.push(arg);\n      setState({\n        superName: _core.types.cloneNode(param)\n      });\n    }\n\n    return {\n      closureParams,\n      closureArgs\n    };\n  }\n\n  function classTransformer(path, file, builtinClasses, isLoose) {\n    setState({\n      parent: path.parent,\n      scope: path.scope,\n      node: path.node,\n      path,\n      file,\n      isLoose\n    });\n    setState({\n      classId: classState.node.id,\n      classRef: classState.node.id ? _core.types.identifier(classState.node.id.name) : classState.scope.generateUidIdentifier(\"class\"),\n      superName: classState.node.superClass,\n      isDerived: !!classState.node.superClass,\n      constructorBody: _core.types.blockStatement([])\n    });\n    setState({\n      extendsNative: classState.isDerived && builtinClasses.has(classState.superName.name) && !classState.scope.hasBinding(classState.superName.name, true)\n    });\n    const {\n      classRef,\n      node,\n      constructorBody\n    } = classState;\n    setState({\n      construct: buildConstructor(classRef, constructorBody, node)\n    });\n    let {\n      body\n    } = classState;\n    const {\n      closureParams,\n      closureArgs\n    } = setupClosureParamsArgs();\n    buildBody();\n\n    if (!classState.isLoose) {\n      constructorBody.body.unshift(_core.types.expressionStatement(_core.types.callExpression(classState.file.addHelper(\"classCallCheck\"), [_core.types.thisExpression(), _core.types.cloneNode(classState.classRef)])));\n    }\n\n    body = body.concat(classState.staticPropBody.map(fn => fn(_core.types.cloneNode(classState.classRef))));\n    const isStrict = path.isInStrictMode();\n    let constructorOnly = classState.classId && body.length === 1;\n\n    if (constructorOnly && !isStrict) {\n      for (const param of classState.construct.params) {\n        if (!_core.types.isIdentifier(param)) {\n          constructorOnly = false;\n          break;\n        }\n      }\n    }\n\n    const directives = constructorOnly ? body[0].body.directives : [];\n\n    if (!isStrict) {\n      directives.push(_core.types.directive(_core.types.directiveLiteral(\"use strict\")));\n    }\n\n    if (constructorOnly) {\n      return _core.types.toExpression(body[0]);\n    }\n\n    body.push(_core.types.returnStatement(_core.types.cloneNode(classState.classRef)));\n\n    const container = _core.types.arrowFunctionExpression(closureParams, _core.types.blockStatement(body, directives));\n\n    return _core.types.callExpression(container, closureArgs);\n  }\n\n  return classTransformer(path, file, builtinClasses, isLoose);\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = addCreateSuperHelper;\n\nvar _core = require(\"@babel/core\");\n\nconst helperIDs = new WeakMap();\n\nfunction addCreateSuperHelper(file) {\n  if (helperIDs.has(file)) {\n    return (_core.types.cloneNode || _core.types.clone)(helperIDs.get(file));\n  }\n\n  try {\n    return file.addHelper(\"createSuper\");\n  } catch (_unused) {}\n\n  const id = file.scope.generateUidIdentifier(\"createSuper\");\n  helperIDs.set(file, id);\n  const fn = helper({\n    CREATE_SUPER: id,\n    GET_PROTOTYPE_OF: file.addHelper(\"getPrototypeOf\"),\n    POSSIBLE_CONSTRUCTOR_RETURN: file.addHelper(\"possibleConstructorReturn\")\n  });\n  file.path.unshiftContainer(\"body\", [fn]);\n  file.scope.registerDeclaration(file.path.get(\"body.0\"));\n  return _core.types.cloneNode(id);\n}\n\nconst helper = _core.template.statement`\n  function CREATE_SUPER(Derived) {\n    function isNativeReflectConstruct() {\n      if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n\n      // core-js@3\n      if (Reflect.construct.sham) return false;\n\n      // Proxy can't be polyfilled. Every browser implemented\n      // proxies before or at the same time as Reflect.construct,\n      // so if they support Proxy they also support Reflect.construct.\n      if (typeof Proxy === \"function\") return true;\n\n      // Since Reflect.construct can't be properly polyfilled, some\n      // implementations (e.g. core-js@2) don't set the correct internal slots.\n      // Those polyfills don't allow us to subclass built-ins, so we need to\n      // use our fallback implementation.\n      try {\n        // If the internal slots aren't set, this throws an error similar to\n        //   TypeError: this is not a Date object.\n        Date.prototype.toString.call(Reflect.construct(Date, [], function() {}));\n        return true;\n      } catch (e) {\n        return false;\n      }\n    }\n\n    return function () {\n      var Super = GET_PROTOTYPE_OF(Derived), result;\n      if (isNativeReflectConstruct()) {\n        // NOTE: This doesn't work if this.__proto__.constructor has been modified.\n        var NewTarget = GET_PROTOTYPE_OF(this).constructor;\n        result = Reflect.construct(Super, arguments, NewTarget);\n      } else {\n        result = Super.apply(this, arguments);\n      }\n      return POSSIBLE_CONSTRUCTOR_RETURN(this, result);\n    }\n  }\n`;","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nconst beforeExpr = true;\nconst startsExpr = true;\nconst isLoop = true;\nconst isAssign = true;\nconst prefix = true;\nconst postfix = true;\nclass TokenType {\n  constructor(label, conf = {}) {\n    this.label = void 0;\n    this.keyword = void 0;\n    this.beforeExpr = void 0;\n    this.startsExpr = void 0;\n    this.rightAssociative = void 0;\n    this.isLoop = void 0;\n    this.isAssign = void 0;\n    this.prefix = void 0;\n    this.postfix = void 0;\n    this.binop = void 0;\n    this.updateContext = void 0;\n    this.label = label;\n    this.keyword = conf.keyword;\n    this.beforeExpr = !!conf.beforeExpr;\n    this.startsExpr = !!conf.startsExpr;\n    this.rightAssociative = !!conf.rightAssociative;\n    this.isLoop = !!conf.isLoop;\n    this.isAssign = !!conf.isAssign;\n    this.prefix = !!conf.prefix;\n    this.postfix = !!conf.postfix;\n    this.binop = conf.binop != null ? conf.binop : null;\n    this.updateContext = null;\n  }\n\n}\nconst keywords = new Map();\n\nfunction createKeyword(name, options = {}) {\n  options.keyword = name;\n  const token = new TokenType(name, options);\n  keywords.set(name, token);\n  return token;\n}\n\nfunction createBinop(name, binop) {\n  return new TokenType(name, {\n    beforeExpr,\n    binop\n  });\n}\n\nconst types = {\n  num: new TokenType(\"num\", {\n    startsExpr\n  }),\n  bigint: new TokenType(\"bigint\", {\n    startsExpr\n  }),\n  decimal: new TokenType(\"decimal\", {\n    startsExpr\n  }),\n  regexp: new TokenType(\"regexp\", {\n    startsExpr\n  }),\n  string: new TokenType(\"string\", {\n    startsExpr\n  }),\n  name: new TokenType(\"name\", {\n    startsExpr\n  }),\n  eof: new TokenType(\"eof\"),\n  bracketL: new TokenType(\"[\", {\n    beforeExpr,\n    startsExpr\n  }),\n  bracketHashL: new TokenType(\"#[\", {\n    beforeExpr,\n    startsExpr\n  }),\n  bracketBarL: new TokenType(\"[|\", {\n    beforeExpr,\n    startsExpr\n  }),\n  bracketR: new TokenType(\"]\"),\n  bracketBarR: new TokenType(\"|]\"),\n  braceL: new TokenType(\"{\", {\n    beforeExpr,\n    startsExpr\n  }),\n  braceBarL: new TokenType(\"{|\", {\n    beforeExpr,\n    startsExpr\n  }),\n  braceHashL: new TokenType(\"#{\", {\n    beforeExpr,\n    startsExpr\n  }),\n  braceR: new TokenType(\"}\"),\n  braceBarR: new TokenType(\"|}\"),\n  parenL: new TokenType(\"(\", {\n    beforeExpr,\n    startsExpr\n  }),\n  parenR: new TokenType(\")\"),\n  comma: new TokenType(\",\", {\n    beforeExpr\n  }),\n  semi: new TokenType(\";\", {\n    beforeExpr\n  }),\n  colon: new TokenType(\":\", {\n    beforeExpr\n  }),\n  doubleColon: new TokenType(\"::\", {\n    beforeExpr\n  }),\n  dot: new TokenType(\".\"),\n  question: new TokenType(\"?\", {\n    beforeExpr\n  }),\n  questionDot: new TokenType(\"?.\"),\n  arrow: new TokenType(\"=>\", {\n    beforeExpr\n  }),\n  template: new TokenType(\"template\"),\n  ellipsis: new TokenType(\"...\", {\n    beforeExpr\n  }),\n  backQuote: new TokenType(\"`\", {\n    startsExpr\n  }),\n  dollarBraceL: new TokenType(\"${\", {\n    beforeExpr,\n    startsExpr\n  }),\n  at: new TokenType(\"@\"),\n  hash: new TokenType(\"#\", {\n    startsExpr\n  }),\n  interpreterDirective: new TokenType(\"#!...\"),\n  eq: new TokenType(\"=\", {\n    beforeExpr,\n    isAssign\n  }),\n  assign: new TokenType(\"_=\", {\n    beforeExpr,\n    isAssign\n  }),\n  incDec: new TokenType(\"++/--\", {\n    prefix,\n    postfix,\n    startsExpr\n  }),\n  bang: new TokenType(\"!\", {\n    beforeExpr,\n    prefix,\n    startsExpr\n  }),\n  tilde: new TokenType(\"~\", {\n    beforeExpr,\n    prefix,\n    startsExpr\n  }),\n  pipeline: createBinop(\"|>\", 0),\n  nullishCoalescing: createBinop(\"??\", 1),\n  logicalOR: createBinop(\"||\", 1),\n  logicalAND: createBinop(\"&&\", 2),\n  bitwiseOR: createBinop(\"|\", 3),\n  bitwiseXOR: createBinop(\"^\", 4),\n  bitwiseAND: createBinop(\"&\", 5),\n  equality: createBinop(\"==/!=/===/!==\", 6),\n  relational: createBinop(\"</>/<=/>=\", 7),\n  bitShift: createBinop(\"<</>>/>>>\", 8),\n  plusMin: new TokenType(\"+/-\", {\n    beforeExpr,\n    binop: 9,\n    prefix,\n    startsExpr\n  }),\n  modulo: new TokenType(\"%\", {\n    beforeExpr,\n    binop: 10,\n    startsExpr\n  }),\n  star: new TokenType(\"*\", {\n    binop: 10\n  }),\n  slash: createBinop(\"/\", 10),\n  exponent: new TokenType(\"**\", {\n    beforeExpr,\n    binop: 11,\n    rightAssociative: true\n  }),\n  _break: createKeyword(\"break\"),\n  _case: createKeyword(\"case\", {\n    beforeExpr\n  }),\n  _catch: createKeyword(\"catch\"),\n  _continue: createKeyword(\"continue\"),\n  _debugger: createKeyword(\"debugger\"),\n  _default: createKeyword(\"default\", {\n    beforeExpr\n  }),\n  _do: createKeyword(\"do\", {\n    isLoop,\n    beforeExpr\n  }),\n  _else: createKeyword(\"else\", {\n    beforeExpr\n  }),\n  _finally: createKeyword(\"finally\"),\n  _for: createKeyword(\"for\", {\n    isLoop\n  }),\n  _function: createKeyword(\"function\", {\n    startsExpr\n  }),\n  _if: createKeyword(\"if\"),\n  _return: createKeyword(\"return\", {\n    beforeExpr\n  }),\n  _switch: createKeyword(\"switch\"),\n  _throw: createKeyword(\"throw\", {\n    beforeExpr,\n    prefix,\n    startsExpr\n  }),\n  _try: createKeyword(\"try\"),\n  _var: createKeyword(\"var\"),\n  _const: createKeyword(\"const\"),\n  _while: createKeyword(\"while\", {\n    isLoop\n  }),\n  _with: createKeyword(\"with\"),\n  _new: createKeyword(\"new\", {\n    beforeExpr,\n    startsExpr\n  }),\n  _this: createKeyword(\"this\", {\n    startsExpr\n  }),\n  _super: createKeyword(\"super\", {\n    startsExpr\n  }),\n  _class: createKeyword(\"class\", {\n    startsExpr\n  }),\n  _extends: createKeyword(\"extends\", {\n    beforeExpr\n  }),\n  _export: createKeyword(\"export\"),\n  _import: createKeyword(\"import\", {\n    startsExpr\n  }),\n  _null: createKeyword(\"null\", {\n    startsExpr\n  }),\n  _true: createKeyword(\"true\", {\n    startsExpr\n  }),\n  _false: createKeyword(\"false\", {\n    startsExpr\n  }),\n  _in: createKeyword(\"in\", {\n    beforeExpr,\n    binop: 7\n  }),\n  _instanceof: createKeyword(\"instanceof\", {\n    beforeExpr,\n    binop: 7\n  }),\n  _typeof: createKeyword(\"typeof\", {\n    beforeExpr,\n    prefix,\n    startsExpr\n  }),\n  _void: createKeyword(\"void\", {\n    beforeExpr,\n    prefix,\n    startsExpr\n  }),\n  _delete: createKeyword(\"delete\", {\n    beforeExpr,\n    prefix,\n    startsExpr\n  })\n};\n\nconst lineBreak = /\\r\\n?|[\\n\\u2028\\u2029]/;\nconst lineBreakG = new RegExp(lineBreak.source, \"g\");\nfunction isNewLine(code) {\n  switch (code) {\n    case 10:\n    case 13:\n    case 8232:\n    case 8233:\n      return true;\n\n    default:\n      return false;\n  }\n}\nconst skipWhiteSpace = /(?:\\s|\\/\\/.*|\\/\\*[^]*?\\*\\/)*/g;\nfunction isWhitespace(code) {\n  switch (code) {\n    case 0x0009:\n    case 0x000b:\n    case 0x000c:\n    case 32:\n    case 160:\n    case 5760:\n    case 0x2000:\n    case 0x2001:\n    case 0x2002:\n    case 0x2003:\n    case 0x2004:\n    case 0x2005:\n    case 0x2006:\n    case 0x2007:\n    case 0x2008:\n    case 0x2009:\n    case 0x200a:\n    case 0x202f:\n    case 0x205f:\n    case 0x3000:\n    case 0xfeff:\n      return true;\n\n    default:\n      return false;\n  }\n}\n\nclass Position {\n  constructor(line, col) {\n    this.line = void 0;\n    this.column = void 0;\n    this.line = line;\n    this.column = col;\n  }\n\n}\nclass SourceLocation {\n  constructor(start, end) {\n    this.start = void 0;\n    this.end = void 0;\n    this.filename = void 0;\n    this.identifierName = void 0;\n    this.start = start;\n    this.end = end;\n  }\n\n}\nfunction getLineInfo(input, offset) {\n  let line = 1;\n  let lineStart = 0;\n  let match;\n  lineBreakG.lastIndex = 0;\n\n  while ((match = lineBreakG.exec(input)) && match.index < offset) {\n    line++;\n    lineStart = lineBreakG.lastIndex;\n  }\n\n  return new Position(line, offset - lineStart);\n}\n\nclass BaseParser {\n  constructor() {\n    this.sawUnambiguousESM = false;\n    this.ambiguousScriptDifferentAst = false;\n  }\n\n  hasPlugin(name) {\n    return this.plugins.has(name);\n  }\n\n  getPluginOption(plugin, name) {\n    if (this.hasPlugin(plugin)) return this.plugins.get(plugin)[name];\n  }\n\n}\n\nfunction last(stack) {\n  return stack[stack.length - 1];\n}\n\nclass CommentsParser extends BaseParser {\n  addComment(comment) {\n    if (this.filename) comment.loc.filename = this.filename;\n    this.state.trailingComments.push(comment);\n    this.state.leadingComments.push(comment);\n  }\n\n  adjustCommentsAfterTrailingComma(node, elements, takeAllComments) {\n    if (this.state.leadingComments.length === 0) {\n      return;\n    }\n\n    let lastElement = null;\n    let i = elements.length;\n\n    while (lastElement === null && i > 0) {\n      lastElement = elements[--i];\n    }\n\n    if (lastElement === null) {\n      return;\n    }\n\n    for (let j = 0; j < this.state.leadingComments.length; j++) {\n      if (this.state.leadingComments[j].end < this.state.commentPreviousNode.end) {\n        this.state.leadingComments.splice(j, 1);\n        j--;\n      }\n    }\n\n    const newTrailingComments = [];\n\n    for (let i = 0; i < this.state.leadingComments.length; i++) {\n      const leadingComment = this.state.leadingComments[i];\n\n      if (leadingComment.end < node.end) {\n        newTrailingComments.push(leadingComment);\n\n        if (!takeAllComments) {\n          this.state.leadingComments.splice(i, 1);\n          i--;\n        }\n      } else {\n        if (node.trailingComments === undefined) {\n          node.trailingComments = [];\n        }\n\n        node.trailingComments.push(leadingComment);\n      }\n    }\n\n    if (takeAllComments) this.state.leadingComments = [];\n\n    if (newTrailingComments.length > 0) {\n      lastElement.trailingComments = newTrailingComments;\n    } else if (lastElement.trailingComments !== undefined) {\n      lastElement.trailingComments = [];\n    }\n  }\n\n  processComment(node) {\n    if (node.type === \"Program\" && node.body.length > 0) return;\n    const stack = this.state.commentStack;\n    let firstChild, lastChild, trailingComments, i, j;\n\n    if (this.state.trailingComments.length > 0) {\n      if (this.state.trailingComments[0].start >= node.end) {\n        trailingComments = this.state.trailingComments;\n        this.state.trailingComments = [];\n      } else {\n        this.state.trailingComments.length = 0;\n      }\n    } else if (stack.length > 0) {\n      const lastInStack = last(stack);\n\n      if (lastInStack.trailingComments && lastInStack.trailingComments[0].start >= node.end) {\n        trailingComments = lastInStack.trailingComments;\n        delete lastInStack.trailingComments;\n      }\n    }\n\n    if (stack.length > 0 && last(stack).start >= node.start) {\n      firstChild = stack.pop();\n    }\n\n    while (stack.length > 0 && last(stack).start >= node.start) {\n      lastChild = stack.pop();\n    }\n\n    if (!lastChild && firstChild) lastChild = firstChild;\n\n    if (firstChild) {\n      switch (node.type) {\n        case \"ObjectExpression\":\n          this.adjustCommentsAfterTrailingComma(node, node.properties);\n          break;\n\n        case \"ObjectPattern\":\n          this.adjustCommentsAfterTrailingComma(node, node.properties, true);\n          break;\n\n        case \"CallExpression\":\n          this.adjustCommentsAfterTrailingComma(node, node.arguments);\n          break;\n\n        case \"ArrayExpression\":\n          this.adjustCommentsAfterTrailingComma(node, node.elements);\n          break;\n\n        case \"ArrayPattern\":\n          this.adjustCommentsAfterTrailingComma(node, node.elements, true);\n          break;\n      }\n    } else if (this.state.commentPreviousNode && (this.state.commentPreviousNode.type === \"ImportSpecifier\" && node.type !== \"ImportSpecifier\" || this.state.commentPreviousNode.type === \"ExportSpecifier\" && node.type !== \"ExportSpecifier\")) {\n      this.adjustCommentsAfterTrailingComma(node, [this.state.commentPreviousNode]);\n    }\n\n    if (lastChild) {\n      if (lastChild.leadingComments) {\n        if (lastChild !== node && lastChild.leadingComments.length > 0 && last(lastChild.leadingComments).end <= node.start) {\n          node.leadingComments = lastChild.leadingComments;\n          delete lastChild.leadingComments;\n        } else {\n          for (i = lastChild.leadingComments.length - 2; i >= 0; --i) {\n            if (lastChild.leadingComments[i].end <= node.start) {\n              node.leadingComments = lastChild.leadingComments.splice(0, i + 1);\n              break;\n            }\n          }\n        }\n      }\n    } else if (this.state.leadingComments.length > 0) {\n      if (last(this.state.leadingComments).end <= node.start) {\n        if (this.state.commentPreviousNode) {\n          for (j = 0; j < this.state.leadingComments.length; j++) {\n            if (this.state.leadingComments[j].end < this.state.commentPreviousNode.end) {\n              this.state.leadingComments.splice(j, 1);\n              j--;\n            }\n          }\n        }\n\n        if (this.state.leadingComments.length > 0) {\n          node.leadingComments = this.state.leadingComments;\n          this.state.leadingComments = [];\n        }\n      } else {\n        for (i = 0; i < this.state.leadingComments.length; i++) {\n          if (this.state.leadingComments[i].end > node.start) {\n            break;\n          }\n        }\n\n        const leadingComments = this.state.leadingComments.slice(0, i);\n\n        if (leadingComments.length) {\n          node.leadingComments = leadingComments;\n        }\n\n        trailingComments = this.state.leadingComments.slice(i);\n\n        if (trailingComments.length === 0) {\n          trailingComments = null;\n        }\n      }\n    }\n\n    this.state.commentPreviousNode = node;\n\n    if (trailingComments) {\n      if (trailingComments.length && trailingComments[0].start >= node.start && last(trailingComments).end <= node.end) {\n        node.innerComments = trailingComments;\n      } else {\n        const firstTrailingCommentIndex = trailingComments.findIndex(comment => comment.end >= node.end);\n\n        if (firstTrailingCommentIndex > 0) {\n          node.innerComments = trailingComments.slice(0, firstTrailingCommentIndex);\n          node.trailingComments = trailingComments.slice(firstTrailingCommentIndex);\n        } else {\n          node.trailingComments = trailingComments;\n        }\n      }\n    }\n\n    stack.push(node);\n  }\n\n}\n\nconst ErrorMessages = Object.freeze({\n  AccessorIsGenerator: \"A %0ter cannot be a generator\",\n  ArgumentsInClass: \"'arguments' is only allowed in functions and class methods\",\n  AsyncFunctionInSingleStatementContext: \"Async functions can only be declared at the top level or inside a block\",\n  AwaitBindingIdentifier: \"Can not use 'await' as identifier inside an async function\",\n  AwaitBindingIdentifierInStaticBlock: \"Can not use 'await' as identifier inside a static block\",\n  AwaitExpressionFormalParameter: \"await is not allowed in async function parameters\",\n  AwaitNotInAsyncContext: \"'await' is only allowed within async functions and at the top levels of modules\",\n  AwaitNotInAsyncFunction: \"'await' is only allowed within async functions\",\n  BadGetterArity: \"getter must not have any formal parameters\",\n  BadSetterArity: \"setter must have exactly one formal parameter\",\n  BadSetterRestParameter: \"setter function argument must not be a rest parameter\",\n  ConstructorClassField: \"Classes may not have a field named 'constructor'\",\n  ConstructorClassPrivateField: \"Classes may not have a private field named '#constructor'\",\n  ConstructorIsAccessor: \"Class constructor may not be an accessor\",\n  ConstructorIsAsync: \"Constructor can't be an async function\",\n  ConstructorIsGenerator: \"Constructor can't be a generator\",\n  DeclarationMissingInitializer: \"%0 require an initialization value\",\n  DecoratorBeforeExport: \"Decorators must be placed *before* the 'export' keyword. You can set the 'decoratorsBeforeExport' option to false to use the 'export @decorator class {}' syntax\",\n  DecoratorConstructor: \"Decorators can't be used with a constructor. Did you mean '@dec class { ... }'?\",\n  DecoratorExportClass: \"Using the export keyword between a decorator and a class is not allowed. Please use `export @dec class` instead.\",\n  DecoratorSemicolon: \"Decorators must not be followed by a semicolon\",\n  DecoratorStaticBlock: \"Decorators can't be used with a static block\",\n  DeletePrivateField: \"Deleting a private field is not allowed\",\n  DestructureNamedImport: \"ES2015 named imports do not destructure. Use another statement for destructuring after the import.\",\n  DuplicateConstructor: \"Duplicate constructor in the same class\",\n  DuplicateDefaultExport: \"Only one default export allowed per module.\",\n  DuplicateExport: \"`%0` has already been exported. Exported identifiers must be unique.\",\n  DuplicateProto: \"Redefinition of __proto__ property\",\n  DuplicateRegExpFlags: \"Duplicate regular expression flag\",\n  ElementAfterRest: \"Rest element must be last element\",\n  EscapedCharNotAnIdentifier: \"Invalid Unicode escape\",\n  ExportBindingIsString: \"A string literal cannot be used as an exported binding without `from`.\\n- Did you mean `export { '%0' as '%1' } from 'some-module'`?\",\n  ExportDefaultFromAsIdentifier: \"'from' is not allowed as an identifier after 'export default'\",\n  ForInOfLoopInitializer: \"%0 loop variable declaration may not have an initializer\",\n  GeneratorInSingleStatementContext: \"Generators can only be declared at the top level or inside a block\",\n  IllegalBreakContinue: \"Unsyntactic %0\",\n  IllegalLanguageModeDirective: \"Illegal 'use strict' directive in function with non-simple parameter list\",\n  IllegalReturn: \"'return' outside of function\",\n  ImportBindingIsString: 'A string literal cannot be used as an imported binding.\\n- Did you mean `import { \"%0\" as foo }`?',\n  ImportCallArgumentTrailingComma: \"Trailing comma is disallowed inside import(...) arguments\",\n  ImportCallArity: \"import() requires exactly %0\",\n  ImportCallNotNewExpression: \"Cannot use new with import(...)\",\n  ImportCallSpreadArgument: \"... is not allowed in import()\",\n  ImportMetaOutsideModule: `import.meta may appear only with 'sourceType: \"module\"'`,\n  ImportOutsideModule: `'import' and 'export' may appear only with 'sourceType: \"module\"'`,\n  InvalidBigIntLiteral: \"Invalid BigIntLiteral\",\n  InvalidCodePoint: \"Code point out of bounds\",\n  InvalidDecimal: \"Invalid decimal\",\n  InvalidDigit: \"Expected number in radix %0\",\n  InvalidEscapeSequence: \"Bad character escape sequence\",\n  InvalidEscapeSequenceTemplate: \"Invalid escape sequence in template\",\n  InvalidEscapedReservedWord: \"Escape sequence in keyword %0\",\n  InvalidIdentifier: \"Invalid identifier %0\",\n  InvalidLhs: \"Invalid left-hand side in %0\",\n  InvalidLhsBinding: \"Binding invalid left-hand side in %0\",\n  InvalidNumber: \"Invalid number\",\n  InvalidOrMissingExponent: \"Floating-point numbers require a valid exponent after the 'e'\",\n  InvalidOrUnexpectedToken: \"Unexpected character '%0'\",\n  InvalidParenthesizedAssignment: \"Invalid parenthesized assignment pattern\",\n  InvalidPrivateFieldResolution: \"Private name #%0 is not defined\",\n  InvalidPropertyBindingPattern: \"Binding member expression\",\n  InvalidRecordProperty: \"Only properties and spread elements are allowed in record definitions\",\n  InvalidRestAssignmentPattern: \"Invalid rest operator's argument\",\n  LabelRedeclaration: \"Label '%0' is already declared\",\n  LetInLexicalBinding: \"'let' is not allowed to be used as a name in 'let' or 'const' declarations.\",\n  LineTerminatorBeforeArrow: \"No line break is allowed before '=>'\",\n  MalformedRegExpFlags: \"Invalid regular expression flag\",\n  MissingClassName: \"A class name is required\",\n  MissingEqInAssignment: \"Only '=' operator can be used for specifying default value.\",\n  MissingSemicolon: \"Missing semicolon\",\n  MissingUnicodeEscape: \"Expecting Unicode escape sequence \\\\uXXXX\",\n  MixingCoalesceWithLogical: \"Nullish coalescing operator(??) requires parens when mixing with logical operators\",\n  ModuleAttributeDifferentFromType: \"The only accepted module attribute is `type`\",\n  ModuleAttributeInvalidValue: \"Only string literals are allowed as module attribute values\",\n  ModuleAttributesWithDuplicateKeys: 'Duplicate key \"%0\" is not allowed in module attributes',\n  ModuleExportNameHasLoneSurrogate: \"An export name cannot include a lone surrogate, found '\\\\u%0'\",\n  ModuleExportUndefined: \"Export '%0' is not defined\",\n  MultipleDefaultsInSwitch: \"Multiple default clauses\",\n  NewlineAfterThrow: \"Illegal newline after throw\",\n  NoCatchOrFinally: \"Missing catch or finally clause\",\n  NumberIdentifier: \"Identifier directly after number\",\n  NumericSeparatorInEscapeSequence: \"Numeric separators are not allowed inside unicode escape sequences or hex escape sequences\",\n  ObsoleteAwaitStar: \"await* has been removed from the async functions proposal. Use Promise.all() instead.\",\n  OptionalChainingNoNew: \"constructors in/after an Optional Chain are not allowed\",\n  OptionalChainingNoTemplate: \"Tagged Template Literals are not allowed in optionalChain\",\n  ParamDupe: \"Argument name clash\",\n  PatternHasAccessor: \"Object pattern can't contain getter or setter\",\n  PatternHasMethod: \"Object pattern can't contain methods\",\n  PipelineBodyNoArrow: 'Unexpected arrow \"=>\" after pipeline body; arrow function in pipeline body must be parenthesized',\n  PipelineBodySequenceExpression: \"Pipeline body may not be a comma-separated sequence expression\",\n  PipelineHeadSequenceExpression: \"Pipeline head should not be a comma-separated sequence expression\",\n  PipelineTopicUnused: \"Pipeline is in topic style but does not use topic reference\",\n  PrimaryTopicNotAllowed: \"Topic reference was used in a lexical context without topic binding\",\n  PrimaryTopicRequiresSmartPipeline: \"Primary Topic Reference found but pipelineOperator not passed 'smart' for 'proposal' option.\",\n  PrivateInExpectedIn: \"Private names are only allowed in property accesses (`obj.#%0`) or in `in` expressions (`#%0 in obj`)\",\n  PrivateNameRedeclaration: \"Duplicate private name #%0\",\n  RecordExpressionBarIncorrectEndSyntaxType: \"Record expressions ending with '|}' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'\",\n  RecordExpressionBarIncorrectStartSyntaxType: \"Record expressions starting with '{|' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'\",\n  RecordExpressionHashIncorrectStartSyntaxType: \"Record expressions starting with '#{' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'hash'\",\n  RecordNoProto: \"'__proto__' is not allowed in Record expressions\",\n  RestTrailingComma: \"Unexpected trailing comma after rest element\",\n  SloppyFunction: \"In non-strict mode code, functions can only be declared at top level, inside a block, or as the body of an if statement\",\n  StaticPrototype: \"Classes may not have static property named prototype\",\n  StrictDelete: \"Deleting local variable in strict mode\",\n  StrictEvalArguments: \"Assigning to '%0' in strict mode\",\n  StrictEvalArgumentsBinding: \"Binding '%0' in strict mode\",\n  StrictFunction: \"In strict mode code, functions can only be declared at top level or inside a block\",\n  StrictNumericEscape: \"The only valid numeric escape in strict mode is '\\\\0'\",\n  StrictOctalLiteral: \"Legacy octal literals are not allowed in strict mode\",\n  StrictWith: \"'with' in strict mode\",\n  SuperNotAllowed: \"super() is only valid inside a class constructor of a subclass. Maybe a typo in the method name ('constructor') or not extending another class?\",\n  SuperPrivateField: \"Private fields can't be accessed on super\",\n  TrailingDecorator: \"Decorators must be attached to a class element\",\n  TupleExpressionBarIncorrectEndSyntaxType: \"Tuple expressions ending with '|]' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'\",\n  TupleExpressionBarIncorrectStartSyntaxType: \"Tuple expressions starting with '[|' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'\",\n  TupleExpressionHashIncorrectStartSyntaxType: \"Tuple expressions starting with '#[' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'hash'\",\n  UnexpectedArgumentPlaceholder: \"Unexpected argument placeholder\",\n  UnexpectedAwaitAfterPipelineBody: 'Unexpected \"await\" after pipeline body; await must have parentheses in minimal proposal',\n  UnexpectedDigitAfterHash: \"Unexpected digit after hash token\",\n  UnexpectedImportExport: \"'import' and 'export' may only appear at the top level\",\n  UnexpectedKeyword: \"Unexpected keyword '%0'\",\n  UnexpectedLeadingDecorator: \"Leading decorators must be attached to a class declaration\",\n  UnexpectedLexicalDeclaration: \"Lexical declaration cannot appear in a single-statement context\",\n  UnexpectedNewTarget: \"new.target can only be used in functions\",\n  UnexpectedNumericSeparator: \"A numeric separator is only allowed between two digits\",\n  UnexpectedPrivateField: \"Private names can only be used as the name of a class element (i.e. class C { #p = 42; #m() {} } )\\n or a property of member expression (i.e. this.#p).\",\n  UnexpectedReservedWord: \"Unexpected reserved word '%0'\",\n  UnexpectedSuper: \"super is only allowed in object methods and classes\",\n  UnexpectedToken: \"Unexpected token '%0'\",\n  UnexpectedTokenUnaryExponentiation: \"Illegal expression. Wrap left hand side or entire exponentiation in parentheses.\",\n  UnsupportedBind: \"Binding should be performed on object property.\",\n  UnsupportedDecoratorExport: \"A decorated export must export a class declaration\",\n  UnsupportedDefaultExport: \"Only expressions, functions or classes are allowed as the `default` export.\",\n  UnsupportedImport: \"import can only be used in import() or import.meta\",\n  UnsupportedMetaProperty: \"The only valid meta property for %0 is %0.%1\",\n  UnsupportedParameterDecorator: \"Decorators cannot be used to decorate parameters\",\n  UnsupportedPropertyDecorator: \"Decorators cannot be used to decorate object literal properties\",\n  UnsupportedSuper: \"super can only be used with function calls (i.e. super()) or in property accesses (i.e. super.prop or super[prop])\",\n  UnterminatedComment: \"Unterminated comment\",\n  UnterminatedRegExp: \"Unterminated regular expression\",\n  UnterminatedString: \"Unterminated string constant\",\n  UnterminatedTemplate: \"Unterminated template\",\n  VarRedeclaration: \"Identifier '%0' has already been declared\",\n  YieldBindingIdentifier: \"Can not use 'yield' as identifier inside a generator\",\n  YieldInParameter: \"Yield expression is not allowed in formal parameters\",\n  ZeroDigitNumericSeparator: \"Numeric separator can not be used after leading 0\"\n});\n\nclass ParserError extends CommentsParser {\n  getLocationForPosition(pos) {\n    let loc;\n    if (pos === this.state.start) loc = this.state.startLoc;else if (pos === this.state.lastTokStart) loc = this.state.lastTokStartLoc;else if (pos === this.state.end) loc = this.state.endLoc;else if (pos === this.state.lastTokEnd) loc = this.state.lastTokEndLoc;else loc = getLineInfo(this.input, pos);\n    return loc;\n  }\n\n  raise(pos, errorTemplate, ...params) {\n    return this.raiseWithData(pos, undefined, errorTemplate, ...params);\n  }\n\n  raiseOverwrite(pos, errorTemplate, ...params) {\n    const loc = this.getLocationForPosition(pos);\n    const message = errorTemplate.replace(/%(\\d+)/g, (_, i) => params[i]) + ` (${loc.line}:${loc.column})`;\n\n    if (this.options.errorRecovery) {\n      const errors = this.state.errors;\n\n      for (let i = errors.length - 1; i >= 0; i--) {\n        const error = errors[i];\n\n        if (error.pos === pos) {\n          return Object.assign(error, {\n            message\n          });\n        } else if (error.pos < pos) {\n          break;\n        }\n      }\n    }\n\n    return this._raise({\n      loc,\n      pos\n    }, message);\n  }\n\n  raiseWithData(pos, data, errorTemplate, ...params) {\n    const loc = this.getLocationForPosition(pos);\n    const message = errorTemplate.replace(/%(\\d+)/g, (_, i) => params[i]) + ` (${loc.line}:${loc.column})`;\n    return this._raise(Object.assign({\n      loc,\n      pos\n    }, data), message);\n  }\n\n  _raise(errorContext, message) {\n    const err = new SyntaxError(message);\n    Object.assign(err, errorContext);\n\n    if (this.options.errorRecovery) {\n      if (!this.isLookahead) this.state.errors.push(err);\n      return err;\n    } else {\n      throw err;\n    }\n  }\n\n}\n\nvar estree = (superClass => class extends superClass {\n  estreeParseRegExpLiteral({\n    pattern,\n    flags\n  }) {\n    let regex = null;\n\n    try {\n      regex = new RegExp(pattern, flags);\n    } catch (e) {}\n\n    const node = this.estreeParseLiteral(regex);\n    node.regex = {\n      pattern,\n      flags\n    };\n    return node;\n  }\n\n  estreeParseBigIntLiteral(value) {\n    let bigInt;\n\n    try {\n      bigInt = BigInt(value);\n    } catch (_unused) {\n      bigInt = null;\n    }\n\n    const node = this.estreeParseLiteral(bigInt);\n    node.bigint = String(node.value || value);\n    return node;\n  }\n\n  estreeParseDecimalLiteral(value) {\n    const decimal = null;\n    const node = this.estreeParseLiteral(decimal);\n    node.decimal = String(node.value || value);\n    return node;\n  }\n\n  estreeParseLiteral(value) {\n    return this.parseLiteral(value, \"Literal\");\n  }\n\n  directiveToStmt(directive) {\n    const directiveLiteral = directive.value;\n    const stmt = this.startNodeAt(directive.start, directive.loc.start);\n    const expression = this.startNodeAt(directiveLiteral.start, directiveLiteral.loc.start);\n    expression.value = directiveLiteral.extra.expressionValue;\n    expression.raw = directiveLiteral.extra.raw;\n    stmt.expression = this.finishNodeAt(expression, \"Literal\", directiveLiteral.end, directiveLiteral.loc.end);\n    stmt.directive = directiveLiteral.extra.raw.slice(1, -1);\n    return this.finishNodeAt(stmt, \"ExpressionStatement\", directive.end, directive.loc.end);\n  }\n\n  initFunction(node, isAsync) {\n    super.initFunction(node, isAsync);\n    node.expression = false;\n  }\n\n  checkDeclaration(node) {\n    if (node != null && this.isObjectProperty(node)) {\n      this.checkDeclaration(node.value);\n    } else {\n      super.checkDeclaration(node);\n    }\n  }\n\n  getObjectOrClassMethodParams(method) {\n    return method.value.params;\n  }\n\n  isValidDirective(stmt) {\n    var _stmt$expression$extr;\n\n    return stmt.type === \"ExpressionStatement\" && stmt.expression.type === \"Literal\" && typeof stmt.expression.value === \"string\" && !((_stmt$expression$extr = stmt.expression.extra) != null && _stmt$expression$extr.parenthesized);\n  }\n\n  stmtToDirective(stmt) {\n    const directive = super.stmtToDirective(stmt);\n    const value = stmt.expression.value;\n    this.addExtra(directive.value, \"expressionValue\", value);\n    return directive;\n  }\n\n  parseBlockBody(node, ...args) {\n    super.parseBlockBody(node, ...args);\n    const directiveStatements = node.directives.map(d => this.directiveToStmt(d));\n    node.body = directiveStatements.concat(node.body);\n    delete node.directives;\n  }\n\n  pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper) {\n    this.parseMethod(method, isGenerator, isAsync, isConstructor, allowsDirectSuper, \"ClassMethod\", true);\n\n    if (method.typeParameters) {\n      method.value.typeParameters = method.typeParameters;\n      delete method.typeParameters;\n    }\n\n    classBody.body.push(method);\n  }\n\n  parseExprAtom(refExpressionErrors) {\n    switch (this.state.type) {\n      case types.num:\n      case types.string:\n        return this.estreeParseLiteral(this.state.value);\n\n      case types.regexp:\n        return this.estreeParseRegExpLiteral(this.state.value);\n\n      case types.bigint:\n        return this.estreeParseBigIntLiteral(this.state.value);\n\n      case types.decimal:\n        return this.estreeParseDecimalLiteral(this.state.value);\n\n      case types._null:\n        return this.estreeParseLiteral(null);\n\n      case types._true:\n        return this.estreeParseLiteral(true);\n\n      case types._false:\n        return this.estreeParseLiteral(false);\n\n      default:\n        return super.parseExprAtom(refExpressionErrors);\n    }\n  }\n\n  parseMaybePrivateName(...args) {\n    const node = super.parseMaybePrivateName(...args);\n\n    if (node.type === \"PrivateName\" && this.getPluginOption(\"estree\", \"classFeatures\")) {\n      return this.convertPrivateNameToPrivateIdentifier(node);\n    }\n\n    return node;\n  }\n\n  convertPrivateNameToPrivateIdentifier(node) {\n    const name = super.getPrivateNameSV(node);\n    node = node;\n    delete node.id;\n    node.name = name;\n    node.type = \"PrivateIdentifier\";\n    return node;\n  }\n\n  isPrivateName(node) {\n    if (!this.getPluginOption(\"estree\", \"classFeatures\")) {\n      return super.isPrivateName(node);\n    }\n\n    return node.type === \"PrivateIdentifier\";\n  }\n\n  getPrivateNameSV(node) {\n    if (!this.getPluginOption(\"estree\", \"classFeatures\")) {\n      return super.getPrivateNameSV(node);\n    }\n\n    return node.name;\n  }\n\n  parseLiteral(value, type, startPos, startLoc) {\n    const node = super.parseLiteral(value, type, startPos, startLoc);\n    node.raw = node.extra.raw;\n    delete node.extra;\n    return node;\n  }\n\n  parseFunctionBody(node, allowExpression, isMethod = false) {\n    super.parseFunctionBody(node, allowExpression, isMethod);\n    node.expression = node.body.type !== \"BlockStatement\";\n  }\n\n  parseMethod(node, isGenerator, isAsync, isConstructor, allowDirectSuper, type, inClassScope = false) {\n    let funcNode = this.startNode();\n    funcNode.kind = node.kind;\n    funcNode = super.parseMethod(funcNode, isGenerator, isAsync, isConstructor, allowDirectSuper, type, inClassScope);\n    funcNode.type = \"FunctionExpression\";\n    delete funcNode.kind;\n    node.value = funcNode;\n\n    if (type === \"ClassPrivateMethod\") {\n      node.computed = false;\n    }\n\n    type = \"MethodDefinition\";\n    return this.finishNode(node, type);\n  }\n\n  parseClassProperty(...args) {\n    const propertyNode = super.parseClassProperty(...args);\n\n    if (this.getPluginOption(\"estree\", \"classFeatures\")) {\n      propertyNode.type = \"PropertyDefinition\";\n    }\n\n    return propertyNode;\n  }\n\n  parseClassPrivateProperty(...args) {\n    const propertyNode = super.parseClassPrivateProperty(...args);\n\n    if (this.getPluginOption(\"estree\", \"classFeatures\")) {\n      propertyNode.type = \"PropertyDefinition\";\n      propertyNode.computed = false;\n    }\n\n    return propertyNode;\n  }\n\n  parseObjectMethod(prop, isGenerator, isAsync, isPattern, isAccessor) {\n    const node = super.parseObjectMethod(prop, isGenerator, isAsync, isPattern, isAccessor);\n\n    if (node) {\n      node.type = \"Property\";\n      if (node.kind === \"method\") node.kind = \"init\";\n      node.shorthand = false;\n    }\n\n    return node;\n  }\n\n  parseObjectProperty(prop, startPos, startLoc, isPattern, refExpressionErrors) {\n    const node = super.parseObjectProperty(prop, startPos, startLoc, isPattern, refExpressionErrors);\n\n    if (node) {\n      node.kind = \"init\";\n      node.type = \"Property\";\n    }\n\n    return node;\n  }\n\n  toAssignable(node, isLHS = false) {\n    if (node != null && this.isObjectProperty(node)) {\n      this.toAssignable(node.value, isLHS);\n      return node;\n    }\n\n    return super.toAssignable(node, isLHS);\n  }\n\n  toAssignableObjectExpressionProp(prop, ...args) {\n    if (prop.kind === \"get\" || prop.kind === \"set\") {\n      this.raise(prop.key.start, ErrorMessages.PatternHasAccessor);\n    } else if (prop.method) {\n      this.raise(prop.key.start, ErrorMessages.PatternHasMethod);\n    } else {\n      super.toAssignableObjectExpressionProp(prop, ...args);\n    }\n  }\n\n  finishCallExpression(node, optional) {\n    super.finishCallExpression(node, optional);\n\n    if (node.callee.type === \"Import\") {\n      node.type = \"ImportExpression\";\n      node.source = node.arguments[0];\n      delete node.arguments;\n      delete node.callee;\n    }\n\n    return node;\n  }\n\n  toReferencedArguments(node) {\n    if (node.type === \"ImportExpression\") {\n      return;\n    }\n\n    super.toReferencedArguments(node);\n  }\n\n  parseExport(node) {\n    super.parseExport(node);\n\n    switch (node.type) {\n      case \"ExportAllDeclaration\":\n        node.exported = null;\n        break;\n\n      case \"ExportNamedDeclaration\":\n        if (node.specifiers.length === 1 && node.specifiers[0].type === \"ExportNamespaceSpecifier\") {\n          node.type = \"ExportAllDeclaration\";\n          node.exported = node.specifiers[0].exported;\n          delete node.specifiers;\n        }\n\n        break;\n    }\n\n    return node;\n  }\n\n  parseSubscript(base, startPos, startLoc, noCalls, state) {\n    const node = super.parseSubscript(base, startPos, startLoc, noCalls, state);\n\n    if (state.optionalChainMember) {\n      if (node.type === \"OptionalMemberExpression\" || node.type === \"OptionalCallExpression\") {\n        node.type = node.type.substring(8);\n      }\n\n      if (state.stop) {\n        const chain = this.startNodeAtNode(node);\n        chain.expression = node;\n        return this.finishNode(chain, \"ChainExpression\");\n      }\n    } else if (node.type === \"MemberExpression\" || node.type === \"CallExpression\") {\n      node.optional = false;\n    }\n\n    return node;\n  }\n\n  hasPropertyAsPrivateName(node) {\n    if (node.type === \"ChainExpression\") {\n      node = node.expression;\n    }\n\n    return super.hasPropertyAsPrivateName(node);\n  }\n\n  isOptionalChain(node) {\n    return node.type === \"ChainExpression\";\n  }\n\n  isObjectProperty(node) {\n    return node.type === \"Property\" && node.kind === \"init\" && !node.method;\n  }\n\n  isObjectMethod(node) {\n    return node.method || node.kind === \"get\" || node.kind === \"set\";\n  }\n\n});\n\nclass TokContext {\n  constructor(token, isExpr, preserveSpace, override) {\n    this.token = void 0;\n    this.isExpr = void 0;\n    this.preserveSpace = void 0;\n    this.override = void 0;\n    this.token = token;\n    this.isExpr = !!isExpr;\n    this.preserveSpace = !!preserveSpace;\n    this.override = override;\n  }\n\n}\nconst types$1 = {\n  braceStatement: new TokContext(\"{\", false),\n  braceExpression: new TokContext(\"{\", true),\n  recordExpression: new TokContext(\"#{\", true),\n  templateQuasi: new TokContext(\"${\", false),\n  parenStatement: new TokContext(\"(\", false),\n  parenExpression: new TokContext(\"(\", true),\n  template: new TokContext(\"`\", true, true, p => p.readTmplToken()),\n  functionExpression: new TokContext(\"function\", true),\n  functionStatement: new TokContext(\"function\", false)\n};\n\ntypes.parenR.updateContext = types.braceR.updateContext = function () {\n  if (this.state.context.length === 1) {\n    this.state.exprAllowed = true;\n    return;\n  }\n\n  let out = this.state.context.pop();\n\n  if (out === types$1.braceStatement && this.curContext().token === \"function\") {\n    out = this.state.context.pop();\n  }\n\n  this.state.exprAllowed = !out.isExpr;\n};\n\ntypes.name.updateContext = function (prevType) {\n  let allowed = false;\n\n  if (prevType !== types.dot) {\n    if (this.state.value === \"of\" && !this.state.exprAllowed && prevType !== types._function && prevType !== types._class) {\n      allowed = true;\n    }\n  }\n\n  this.state.exprAllowed = allowed;\n\n  if (this.state.isIterator) {\n    this.state.isIterator = false;\n  }\n};\n\ntypes.braceL.updateContext = function (prevType) {\n  this.state.context.push(this.braceIsBlock(prevType) ? types$1.braceStatement : types$1.braceExpression);\n  this.state.exprAllowed = true;\n};\n\ntypes.dollarBraceL.updateContext = function () {\n  this.state.context.push(types$1.templateQuasi);\n  this.state.exprAllowed = true;\n};\n\ntypes.parenL.updateContext = function (prevType) {\n  const statementParens = prevType === types._if || prevType === types._for || prevType === types._with || prevType === types._while;\n  this.state.context.push(statementParens ? types$1.parenStatement : types$1.parenExpression);\n  this.state.exprAllowed = true;\n};\n\ntypes.incDec.updateContext = function () {};\n\ntypes._function.updateContext = types._class.updateContext = function (prevType) {\n  if (prevType.beforeExpr && prevType !== types.semi && prevType !== types._else && !(prevType === types._return && this.hasPrecedingLineBreak()) && !((prevType === types.colon || prevType === types.braceL) && this.curContext() === types$1.b_stat)) {\n    this.state.context.push(types$1.functionExpression);\n  } else {\n    this.state.context.push(types$1.functionStatement);\n  }\n\n  this.state.exprAllowed = false;\n};\n\ntypes.backQuote.updateContext = function () {\n  if (this.curContext() === types$1.template) {\n    this.state.context.pop();\n  } else {\n    this.state.context.push(types$1.template);\n  }\n\n  this.state.exprAllowed = false;\n};\n\ntypes.braceHashL.updateContext = function () {\n  this.state.context.push(types$1.recordExpression);\n  this.state.exprAllowed = true;\n};\n\nlet nonASCIIidentifierStartChars = \"\\xaa\\xb5\\xba\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02c1\\u02c6-\\u02d1\\u02e0-\\u02e4\\u02ec\\u02ee\\u0370-\\u0374\\u0376\\u0377\\u037a-\\u037d\\u037f\\u0386\\u0388-\\u038a\\u038c\\u038e-\\u03a1\\u03a3-\\u03f5\\u03f7-\\u0481\\u048a-\\u052f\\u0531-\\u0556\\u0559\\u0560-\\u0588\\u05d0-\\u05ea\\u05ef-\\u05f2\\u0620-\\u064a\\u066e\\u066f\\u0671-\\u06d3\\u06d5\\u06e5\\u06e6\\u06ee\\u06ef\\u06fa-\\u06fc\\u06ff\\u0710\\u0712-\\u072f\\u074d-\\u07a5\\u07b1\\u07ca-\\u07ea\\u07f4\\u07f5\\u07fa\\u0800-\\u0815\\u081a\\u0824\\u0828\\u0840-\\u0858\\u0860-\\u086a\\u08a0-\\u08b4\\u08b6-\\u08c7\\u0904-\\u0939\\u093d\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098c\\u098f\\u0990\\u0993-\\u09a8\\u09aa-\\u09b0\\u09b2\\u09b6-\\u09b9\\u09bd\\u09ce\\u09dc\\u09dd\\u09df-\\u09e1\\u09f0\\u09f1\\u09fc\\u0a05-\\u0a0a\\u0a0f\\u0a10\\u0a13-\\u0a28\\u0a2a-\\u0a30\\u0a32\\u0a33\\u0a35\\u0a36\\u0a38\\u0a39\\u0a59-\\u0a5c\\u0a5e\\u0a72-\\u0a74\\u0a85-\\u0a8d\\u0a8f-\\u0a91\\u0a93-\\u0aa8\\u0aaa-\\u0ab0\\u0ab2\\u0ab3\\u0ab5-\\u0ab9\\u0abd\\u0ad0\\u0ae0\\u0ae1\\u0af9\\u0b05-\\u0b0c\\u0b0f\\u0b10\\u0b13-\\u0b28\\u0b2a-\\u0b30\\u0b32\\u0b33\\u0b35-\\u0b39\\u0b3d\\u0b5c\\u0b5d\\u0b5f-\\u0b61\\u0b71\\u0b83\\u0b85-\\u0b8a\\u0b8e-\\u0b90\\u0b92-\\u0b95\\u0b99\\u0b9a\\u0b9c\\u0b9e\\u0b9f\\u0ba3\\u0ba4\\u0ba8-\\u0baa\\u0bae-\\u0bb9\\u0bd0\\u0c05-\\u0c0c\\u0c0e-\\u0c10\\u0c12-\\u0c28\\u0c2a-\\u0c39\\u0c3d\\u0c58-\\u0c5a\\u0c60\\u0c61\\u0c80\\u0c85-\\u0c8c\\u0c8e-\\u0c90\\u0c92-\\u0ca8\\u0caa-\\u0cb3\\u0cb5-\\u0cb9\\u0cbd\\u0cde\\u0ce0\\u0ce1\\u0cf1\\u0cf2\\u0d04-\\u0d0c\\u0d0e-\\u0d10\\u0d12-\\u0d3a\\u0d3d\\u0d4e\\u0d54-\\u0d56\\u0d5f-\\u0d61\\u0d7a-\\u0d7f\\u0d85-\\u0d96\\u0d9a-\\u0db1\\u0db3-\\u0dbb\\u0dbd\\u0dc0-\\u0dc6\\u0e01-\\u0e30\\u0e32\\u0e33\\u0e40-\\u0e46\\u0e81\\u0e82\\u0e84\\u0e86-\\u0e8a\\u0e8c-\\u0ea3\\u0ea5\\u0ea7-\\u0eb0\\u0eb2\\u0eb3\\u0ebd\\u0ec0-\\u0ec4\\u0ec6\\u0edc-\\u0edf\\u0f00\\u0f40-\\u0f47\\u0f49-\\u0f6c\\u0f88-\\u0f8c\\u1000-\\u102a\\u103f\\u1050-\\u1055\\u105a-\\u105d\\u1061\\u1065\\u1066\\u106e-\\u1070\\u1075-\\u1081\\u108e\\u10a0-\\u10c5\\u10c7\\u10cd\\u10d0-\\u10fa\\u10fc-\\u1248\\u124a-\\u124d\\u1250-\\u1256\\u1258\\u125a-\\u125d\\u1260-\\u1288\\u128a-\\u128d\\u1290-\\u12b0\\u12b2-\\u12b5\\u12b8-\\u12be\\u12c0\\u12c2-\\u12c5\\u12c8-\\u12d6\\u12d8-\\u1310\\u1312-\\u1315\\u1318-\\u135a\\u1380-\\u138f\\u13a0-\\u13f5\\u13f8-\\u13fd\\u1401-\\u166c\\u166f-\\u167f\\u1681-\\u169a\\u16a0-\\u16ea\\u16ee-\\u16f8\\u1700-\\u170c\\u170e-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176c\\u176e-\\u1770\\u1780-\\u17b3\\u17d7\\u17dc\\u1820-\\u1878\\u1880-\\u18a8\\u18aa\\u18b0-\\u18f5\\u1900-\\u191e\\u1950-\\u196d\\u1970-\\u1974\\u1980-\\u19ab\\u19b0-\\u19c9\\u1a00-\\u1a16\\u1a20-\\u1a54\\u1aa7\\u1b05-\\u1b33\\u1b45-\\u1b4b\\u1b83-\\u1ba0\\u1bae\\u1baf\\u1bba-\\u1be5\\u1c00-\\u1c23\\u1c4d-\\u1c4f\\u1c5a-\\u1c7d\\u1c80-\\u1c88\\u1c90-\\u1cba\\u1cbd-\\u1cbf\\u1ce9-\\u1cec\\u1cee-\\u1cf3\\u1cf5\\u1cf6\\u1cfa\\u1d00-\\u1dbf\\u1e00-\\u1f15\\u1f18-\\u1f1d\\u1f20-\\u1f45\\u1f48-\\u1f4d\\u1f50-\\u1f57\\u1f59\\u1f5b\\u1f5d\\u1f5f-\\u1f7d\\u1f80-\\u1fb4\\u1fb6-\\u1fbc\\u1fbe\\u1fc2-\\u1fc4\\u1fc6-\\u1fcc\\u1fd0-\\u1fd3\\u1fd6-\\u1fdb\\u1fe0-\\u1fec\\u1ff2-\\u1ff4\\u1ff6-\\u1ffc\\u2071\\u207f\\u2090-\\u209c\\u2102\\u2107\\u210a-\\u2113\\u2115\\u2118-\\u211d\\u2124\\u2126\\u2128\\u212a-\\u2139\\u213c-\\u213f\\u2145-\\u2149\\u214e\\u2160-\\u2188\\u2c00-\\u2c2e\\u2c30-\\u2c5e\\u2c60-\\u2ce4\\u2ceb-\\u2cee\\u2cf2\\u2cf3\\u2d00-\\u2d25\\u2d27\\u2d2d\\u2d30-\\u2d67\\u2d6f\\u2d80-\\u2d96\\u2da0-\\u2da6\\u2da8-\\u2dae\\u2db0-\\u2db6\\u2db8-\\u2dbe\\u2dc0-\\u2dc6\\u2dc8-\\u2dce\\u2dd0-\\u2dd6\\u2dd8-\\u2dde\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303c\\u3041-\\u3096\\u309b-\\u309f\\u30a1-\\u30fa\\u30fc-\\u30ff\\u3105-\\u312f\\u3131-\\u318e\\u31a0-\\u31bf\\u31f0-\\u31ff\\u3400-\\u4dbf\\u4e00-\\u9ffc\\ua000-\\ua48c\\ua4d0-\\ua4fd\\ua500-\\ua60c\\ua610-\\ua61f\\ua62a\\ua62b\\ua640-\\ua66e\\ua67f-\\ua69d\\ua6a0-\\ua6ef\\ua717-\\ua71f\\ua722-\\ua788\\ua78b-\\ua7bf\\ua7c2-\\ua7ca\\ua7f5-\\ua801\\ua803-\\ua805\\ua807-\\ua80a\\ua80c-\\ua822\\ua840-\\ua873\\ua882-\\ua8b3\\ua8f2-\\ua8f7\\ua8fb\\ua8fd\\ua8fe\\ua90a-\\ua925\\ua930-\\ua946\\ua960-\\ua97c\\ua984-\\ua9b2\\ua9cf\\ua9e0-\\ua9e4\\ua9e6-\\ua9ef\\ua9fa-\\ua9fe\\uaa00-\\uaa28\\uaa40-\\uaa42\\uaa44-\\uaa4b\\uaa60-\\uaa76\\uaa7a\\uaa7e-\\uaaaf\\uaab1\\uaab5\\uaab6\\uaab9-\\uaabd\\uaac0\\uaac2\\uaadb-\\uaadd\\uaae0-\\uaaea\\uaaf2-\\uaaf4\\uab01-\\uab06\\uab09-\\uab0e\\uab11-\\uab16\\uab20-\\uab26\\uab28-\\uab2e\\uab30-\\uab5a\\uab5c-\\uab69\\uab70-\\uabe2\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\uf900-\\ufa6d\\ufa70-\\ufad9\\ufb00-\\ufb06\\ufb13-\\ufb17\\ufb1d\\ufb1f-\\ufb28\\ufb2a-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40\\ufb41\\ufb43\\ufb44\\ufb46-\\ufbb1\\ufbd3-\\ufd3d\\ufd50-\\ufd8f\\ufd92-\\ufdc7\\ufdf0-\\ufdfb\\ufe70-\\ufe74\\ufe76-\\ufefc\\uff21-\\uff3a\\uff41-\\uff5a\\uff66-\\uffbe\\uffc2-\\uffc7\\uffca-\\uffcf\\uffd2-\\uffd7\\uffda-\\uffdc\";\nlet nonASCIIidentifierChars = \"\\u200c\\u200d\\xb7\\u0300-\\u036f\\u0387\\u0483-\\u0487\\u0591-\\u05bd\\u05bf\\u05c1\\u05c2\\u05c4\\u05c5\\u05c7\\u0610-\\u061a\\u064b-\\u0669\\u0670\\u06d6-\\u06dc\\u06df-\\u06e4\\u06e7\\u06e8\\u06ea-\\u06ed\\u06f0-\\u06f9\\u0711\\u0730-\\u074a\\u07a6-\\u07b0\\u07c0-\\u07c9\\u07eb-\\u07f3\\u07fd\\u0816-\\u0819\\u081b-\\u0823\\u0825-\\u0827\\u0829-\\u082d\\u0859-\\u085b\\u08d3-\\u08e1\\u08e3-\\u0903\\u093a-\\u093c\\u093e-\\u094f\\u0951-\\u0957\\u0962\\u0963\\u0966-\\u096f\\u0981-\\u0983\\u09bc\\u09be-\\u09c4\\u09c7\\u09c8\\u09cb-\\u09cd\\u09d7\\u09e2\\u09e3\\u09e6-\\u09ef\\u09fe\\u0a01-\\u0a03\\u0a3c\\u0a3e-\\u0a42\\u0a47\\u0a48\\u0a4b-\\u0a4d\\u0a51\\u0a66-\\u0a71\\u0a75\\u0a81-\\u0a83\\u0abc\\u0abe-\\u0ac5\\u0ac7-\\u0ac9\\u0acb-\\u0acd\\u0ae2\\u0ae3\\u0ae6-\\u0aef\\u0afa-\\u0aff\\u0b01-\\u0b03\\u0b3c\\u0b3e-\\u0b44\\u0b47\\u0b48\\u0b4b-\\u0b4d\\u0b55-\\u0b57\\u0b62\\u0b63\\u0b66-\\u0b6f\\u0b82\\u0bbe-\\u0bc2\\u0bc6-\\u0bc8\\u0bca-\\u0bcd\\u0bd7\\u0be6-\\u0bef\\u0c00-\\u0c04\\u0c3e-\\u0c44\\u0c46-\\u0c48\\u0c4a-\\u0c4d\\u0c55\\u0c56\\u0c62\\u0c63\\u0c66-\\u0c6f\\u0c81-\\u0c83\\u0cbc\\u0cbe-\\u0cc4\\u0cc6-\\u0cc8\\u0cca-\\u0ccd\\u0cd5\\u0cd6\\u0ce2\\u0ce3\\u0ce6-\\u0cef\\u0d00-\\u0d03\\u0d3b\\u0d3c\\u0d3e-\\u0d44\\u0d46-\\u0d48\\u0d4a-\\u0d4d\\u0d57\\u0d62\\u0d63\\u0d66-\\u0d6f\\u0d81-\\u0d83\\u0dca\\u0dcf-\\u0dd4\\u0dd6\\u0dd8-\\u0ddf\\u0de6-\\u0def\\u0df2\\u0df3\\u0e31\\u0e34-\\u0e3a\\u0e47-\\u0e4e\\u0e50-\\u0e59\\u0eb1\\u0eb4-\\u0ebc\\u0ec8-\\u0ecd\\u0ed0-\\u0ed9\\u0f18\\u0f19\\u0f20-\\u0f29\\u0f35\\u0f37\\u0f39\\u0f3e\\u0f3f\\u0f71-\\u0f84\\u0f86\\u0f87\\u0f8d-\\u0f97\\u0f99-\\u0fbc\\u0fc6\\u102b-\\u103e\\u1040-\\u1049\\u1056-\\u1059\\u105e-\\u1060\\u1062-\\u1064\\u1067-\\u106d\\u1071-\\u1074\\u1082-\\u108d\\u108f-\\u109d\\u135d-\\u135f\\u1369-\\u1371\\u1712-\\u1714\\u1732-\\u1734\\u1752\\u1753\\u1772\\u1773\\u17b4-\\u17d3\\u17dd\\u17e0-\\u17e9\\u180b-\\u180d\\u1810-\\u1819\\u18a9\\u1920-\\u192b\\u1930-\\u193b\\u1946-\\u194f\\u19d0-\\u19da\\u1a17-\\u1a1b\\u1a55-\\u1a5e\\u1a60-\\u1a7c\\u1a7f-\\u1a89\\u1a90-\\u1a99\\u1ab0-\\u1abd\\u1abf\\u1ac0\\u1b00-\\u1b04\\u1b34-\\u1b44\\u1b50-\\u1b59\\u1b6b-\\u1b73\\u1b80-\\u1b82\\u1ba1-\\u1bad\\u1bb0-\\u1bb9\\u1be6-\\u1bf3\\u1c24-\\u1c37\\u1c40-\\u1c49\\u1c50-\\u1c59\\u1cd0-\\u1cd2\\u1cd4-\\u1ce8\\u1ced\\u1cf4\\u1cf7-\\u1cf9\\u1dc0-\\u1df9\\u1dfb-\\u1dff\\u203f\\u2040\\u2054\\u20d0-\\u20dc\\u20e1\\u20e5-\\u20f0\\u2cef-\\u2cf1\\u2d7f\\u2de0-\\u2dff\\u302a-\\u302f\\u3099\\u309a\\ua620-\\ua629\\ua66f\\ua674-\\ua67d\\ua69e\\ua69f\\ua6f0\\ua6f1\\ua802\\ua806\\ua80b\\ua823-\\ua827\\ua82c\\ua880\\ua881\\ua8b4-\\ua8c5\\ua8d0-\\ua8d9\\ua8e0-\\ua8f1\\ua8ff-\\ua909\\ua926-\\ua92d\\ua947-\\ua953\\ua980-\\ua983\\ua9b3-\\ua9c0\\ua9d0-\\ua9d9\\ua9e5\\ua9f0-\\ua9f9\\uaa29-\\uaa36\\uaa43\\uaa4c\\uaa4d\\uaa50-\\uaa59\\uaa7b-\\uaa7d\\uaab0\\uaab2-\\uaab4\\uaab7\\uaab8\\uaabe\\uaabf\\uaac1\\uaaeb-\\uaaef\\uaaf5\\uaaf6\\uabe3-\\uabea\\uabec\\uabed\\uabf0-\\uabf9\\ufb1e\\ufe00-\\ufe0f\\ufe20-\\ufe2f\\ufe33\\ufe34\\ufe4d-\\ufe4f\\uff10-\\uff19\\uff3f\";\nconst nonASCIIidentifierStart = new RegExp(\"[\" + nonASCIIidentifierStartChars + \"]\");\nconst nonASCIIidentifier = new RegExp(\"[\" + nonASCIIidentifierStartChars + nonASCIIidentifierChars + \"]\");\nnonASCIIidentifierStartChars = nonASCIIidentifierChars = null;\nconst astralIdentifierStartCodes = [0, 11, 2, 25, 2, 18, 2, 1, 2, 14, 3, 13, 35, 122, 70, 52, 268, 28, 4, 48, 48, 31, 14, 29, 6, 37, 11, 29, 3, 35, 5, 7, 2, 4, 43, 157, 19, 35, 5, 35, 5, 39, 9, 51, 157, 310, 10, 21, 11, 7, 153, 5, 3, 0, 2, 43, 2, 1, 4, 0, 3, 22, 11, 22, 10, 30, 66, 18, 2, 1, 11, 21, 11, 25, 71, 55, 7, 1, 65, 0, 16, 3, 2, 2, 2, 28, 43, 28, 4, 28, 36, 7, 2, 27, 28, 53, 11, 21, 11, 18, 14, 17, 111, 72, 56, 50, 14, 50, 14, 35, 349, 41, 7, 1, 79, 28, 11, 0, 9, 21, 107, 20, 28, 22, 13, 52, 76, 44, 33, 24, 27, 35, 30, 0, 3, 0, 9, 34, 4, 0, 13, 47, 15, 3, 22, 0, 2, 0, 36, 17, 2, 24, 85, 6, 2, 0, 2, 3, 2, 14, 2, 9, 8, 46, 39, 7, 3, 1, 3, 21, 2, 6, 2, 1, 2, 4, 4, 0, 19, 0, 13, 4, 159, 52, 19, 3, 21, 2, 31, 47, 21, 1, 2, 0, 185, 46, 42, 3, 37, 47, 21, 0, 60, 42, 14, 0, 72, 26, 230, 43, 117, 63, 32, 7, 3, 0, 3, 7, 2, 1, 2, 23, 16, 0, 2, 0, 95, 7, 3, 38, 17, 0, 2, 0, 29, 0, 11, 39, 8, 0, 22, 0, 12, 45, 20, 0, 35, 56, 264, 8, 2, 36, 18, 0, 50, 29, 113, 6, 2, 1, 2, 37, 22, 0, 26, 5, 2, 1, 2, 31, 15, 0, 328, 18, 190, 0, 80, 921, 103, 110, 18, 195, 2749, 1070, 4050, 582, 8634, 568, 8, 30, 114, 29, 19, 47, 17, 3, 32, 20, 6, 18, 689, 63, 129, 74, 6, 0, 67, 12, 65, 1, 2, 0, 29, 6135, 9, 1237, 43, 8, 8952, 286, 50, 2, 18, 3, 9, 395, 2309, 106, 6, 12, 4, 8, 8, 9, 5991, 84, 2, 70, 2, 1, 3, 0, 3, 1, 3, 3, 2, 11, 2, 0, 2, 6, 2, 64, 2, 3, 3, 7, 2, 6, 2, 27, 2, 3, 2, 4, 2, 0, 4, 6, 2, 339, 3, 24, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 7, 2357, 44, 11, 6, 17, 0, 370, 43, 1301, 196, 60, 67, 8, 0, 1205, 3, 2, 26, 2, 1, 2, 0, 3, 0, 2, 9, 2, 3, 2, 0, 2, 0, 7, 0, 5, 0, 2, 0, 2, 0, 2, 2, 2, 1, 2, 0, 3, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 1, 2, 0, 3, 3, 2, 6, 2, 3, 2, 3, 2, 0, 2, 9, 2, 16, 6, 2, 2, 4, 2, 16, 4421, 42717, 35, 4148, 12, 221, 3, 5761, 15, 7472, 3104, 541, 1507, 4938];\nconst astralIdentifierCodes = [509, 0, 227, 0, 150, 4, 294, 9, 1368, 2, 2, 1, 6, 3, 41, 2, 5, 0, 166, 1, 574, 3, 9, 9, 370, 1, 154, 10, 176, 2, 54, 14, 32, 9, 16, 3, 46, 10, 54, 9, 7, 2, 37, 13, 2, 9, 6, 1, 45, 0, 13, 2, 49, 13, 9, 3, 2, 11, 83, 11, 7, 0, 161, 11, 6, 9, 7, 3, 56, 1, 2, 6, 3, 1, 3, 2, 10, 0, 11, 1, 3, 6, 4, 4, 193, 17, 10, 9, 5, 0, 82, 19, 13, 9, 214, 6, 3, 8, 28, 1, 83, 16, 16, 9, 82, 12, 9, 9, 84, 14, 5, 9, 243, 14, 166, 9, 71, 5, 2, 1, 3, 3, 2, 0, 2, 1, 13, 9, 120, 6, 3, 6, 4, 0, 29, 9, 41, 6, 2, 3, 9, 0, 10, 10, 47, 15, 406, 7, 2, 7, 17, 9, 57, 21, 2, 13, 123, 5, 4, 0, 2, 1, 2, 6, 2, 0, 9, 9, 49, 4, 2, 1, 2, 4, 9, 9, 330, 3, 19306, 9, 135, 4, 60, 6, 26, 9, 1014, 0, 2, 54, 8, 3, 82, 0, 12, 1, 19628, 1, 5319, 4, 4, 5, 9, 7, 3, 6, 31, 3, 149, 2, 1418, 49, 513, 54, 5, 49, 9, 0, 15, 0, 23, 4, 2, 14, 1361, 6, 2, 16, 3, 6, 2, 1, 2, 4, 262, 6, 10, 9, 419, 13, 1495, 6, 110, 6, 6, 9, 4759, 9, 787719, 239];\n\nfunction isInAstralSet(code, set) {\n  let pos = 0x10000;\n\n  for (let i = 0, length = set.length; i < length; i += 2) {\n    pos += set[i];\n    if (pos > code) return false;\n    pos += set[i + 1];\n    if (pos >= code) return true;\n  }\n\n  return false;\n}\n\nfunction isIdentifierStart(code) {\n  if (code < 65) return code === 36;\n  if (code <= 90) return true;\n  if (code < 97) return code === 95;\n  if (code <= 122) return true;\n\n  if (code <= 0xffff) {\n    return code >= 0xaa && nonASCIIidentifierStart.test(String.fromCharCode(code));\n  }\n\n  return isInAstralSet(code, astralIdentifierStartCodes);\n}\nfunction isIdentifierChar(code) {\n  if (code < 48) return code === 36;\n  if (code < 58) return true;\n  if (code < 65) return false;\n  if (code <= 90) return true;\n  if (code < 97) return code === 95;\n  if (code <= 122) return true;\n\n  if (code <= 0xffff) {\n    return code >= 0xaa && nonASCIIidentifier.test(String.fromCharCode(code));\n  }\n\n  return isInAstralSet(code, astralIdentifierStartCodes) || isInAstralSet(code, astralIdentifierCodes);\n}\n\nconst reservedWords = {\n  keyword: [\"break\", \"case\", \"catch\", \"continue\", \"debugger\", \"default\", \"do\", \"else\", \"finally\", \"for\", \"function\", \"if\", \"return\", \"switch\", \"throw\", \"try\", \"var\", \"const\", \"while\", \"with\", \"new\", \"this\", \"super\", \"class\", \"extends\", \"export\", \"import\", \"null\", \"true\", \"false\", \"in\", \"instanceof\", \"typeof\", \"void\", \"delete\"],\n  strict: [\"implements\", \"interface\", \"let\", \"package\", \"private\", \"protected\", \"public\", \"static\", \"yield\"],\n  strictBind: [\"eval\", \"arguments\"]\n};\nconst keywords$1 = new Set(reservedWords.keyword);\nconst reservedWordsStrictSet = new Set(reservedWords.strict);\nconst reservedWordsStrictBindSet = new Set(reservedWords.strictBind);\nfunction isReservedWord(word, inModule) {\n  return inModule && word === \"await\" || word === \"enum\";\n}\nfunction isStrictReservedWord(word, inModule) {\n  return isReservedWord(word, inModule) || reservedWordsStrictSet.has(word);\n}\nfunction isStrictBindOnlyReservedWord(word) {\n  return reservedWordsStrictBindSet.has(word);\n}\nfunction isStrictBindReservedWord(word, inModule) {\n  return isStrictReservedWord(word, inModule) || isStrictBindOnlyReservedWord(word);\n}\nfunction isKeyword(word) {\n  return keywords$1.has(word);\n}\n\nconst keywordRelationalOperator = /^in(stanceof)?$/;\nfunction isIteratorStart(current, next) {\n  return current === 64 && next === 64;\n}\n\nconst SCOPE_OTHER = 0b000000000,\n      SCOPE_PROGRAM = 0b000000001,\n      SCOPE_FUNCTION = 0b000000010,\n      SCOPE_ARROW = 0b000000100,\n      SCOPE_SIMPLE_CATCH = 0b000001000,\n      SCOPE_SUPER = 0b000010000,\n      SCOPE_DIRECT_SUPER = 0b000100000,\n      SCOPE_CLASS = 0b001000000,\n      SCOPE_STATIC_BLOCK = 0b010000000,\n      SCOPE_TS_MODULE = 0b100000000,\n      SCOPE_VAR = SCOPE_PROGRAM | SCOPE_FUNCTION | SCOPE_TS_MODULE;\nconst BIND_KIND_VALUE = 0b000000000001,\n      BIND_KIND_TYPE = 0b000000000010,\n      BIND_SCOPE_VAR = 0b000000000100,\n      BIND_SCOPE_LEXICAL = 0b000000001000,\n      BIND_SCOPE_FUNCTION = 0b000000010000,\n      BIND_FLAGS_NONE = 0b000001000000,\n      BIND_FLAGS_CLASS = 0b000010000000,\n      BIND_FLAGS_TS_ENUM = 0b000100000000,\n      BIND_FLAGS_TS_CONST_ENUM = 0b001000000000,\n      BIND_FLAGS_TS_EXPORT_ONLY = 0b010000000000,\n      BIND_FLAGS_FLOW_DECLARE_FN = 0b100000000000;\nconst BIND_CLASS = BIND_KIND_VALUE | BIND_KIND_TYPE | BIND_SCOPE_LEXICAL | BIND_FLAGS_CLASS,\n      BIND_LEXICAL = BIND_KIND_VALUE | 0 | BIND_SCOPE_LEXICAL | 0,\n      BIND_VAR = BIND_KIND_VALUE | 0 | BIND_SCOPE_VAR | 0,\n      BIND_FUNCTION = BIND_KIND_VALUE | 0 | BIND_SCOPE_FUNCTION | 0,\n      BIND_TS_INTERFACE = 0 | BIND_KIND_TYPE | 0 | BIND_FLAGS_CLASS,\n      BIND_TS_TYPE = 0 | BIND_KIND_TYPE | 0 | 0,\n      BIND_TS_ENUM = BIND_KIND_VALUE | BIND_KIND_TYPE | BIND_SCOPE_LEXICAL | BIND_FLAGS_TS_ENUM,\n      BIND_TS_AMBIENT = 0 | 0 | 0 | BIND_FLAGS_TS_EXPORT_ONLY,\n      BIND_NONE = 0 | 0 | 0 | BIND_FLAGS_NONE,\n      BIND_OUTSIDE = BIND_KIND_VALUE | 0 | 0 | BIND_FLAGS_NONE,\n      BIND_TS_CONST_ENUM = BIND_TS_ENUM | BIND_FLAGS_TS_CONST_ENUM,\n      BIND_TS_NAMESPACE = 0 | 0 | 0 | BIND_FLAGS_TS_EXPORT_ONLY,\n      BIND_FLOW_DECLARE_FN = BIND_FLAGS_FLOW_DECLARE_FN;\nconst CLASS_ELEMENT_FLAG_STATIC = 0b100,\n      CLASS_ELEMENT_KIND_GETTER = 0b010,\n      CLASS_ELEMENT_KIND_SETTER = 0b001,\n      CLASS_ELEMENT_KIND_ACCESSOR = CLASS_ELEMENT_KIND_GETTER | CLASS_ELEMENT_KIND_SETTER;\nconst CLASS_ELEMENT_STATIC_GETTER = CLASS_ELEMENT_KIND_GETTER | CLASS_ELEMENT_FLAG_STATIC,\n      CLASS_ELEMENT_STATIC_SETTER = CLASS_ELEMENT_KIND_SETTER | CLASS_ELEMENT_FLAG_STATIC,\n      CLASS_ELEMENT_INSTANCE_GETTER = CLASS_ELEMENT_KIND_GETTER,\n      CLASS_ELEMENT_INSTANCE_SETTER = CLASS_ELEMENT_KIND_SETTER,\n      CLASS_ELEMENT_OTHER = 0;\n\nclass Scope {\n  constructor(flags) {\n    this.flags = void 0;\n    this.var = [];\n    this.lexical = [];\n    this.functions = [];\n    this.flags = flags;\n  }\n\n}\nclass ScopeHandler {\n  constructor(raise, inModule) {\n    this.scopeStack = [];\n    this.undefinedExports = new Map();\n    this.undefinedPrivateNames = new Map();\n    this.raise = raise;\n    this.inModule = inModule;\n  }\n\n  get inFunction() {\n    return (this.currentVarScope().flags & SCOPE_FUNCTION) > 0;\n  }\n\n  get allowSuper() {\n    return (this.currentThisScope().flags & SCOPE_SUPER) > 0;\n  }\n\n  get allowDirectSuper() {\n    return (this.currentThisScope().flags & SCOPE_DIRECT_SUPER) > 0;\n  }\n\n  get inClass() {\n    return (this.currentThisScope().flags & SCOPE_CLASS) > 0;\n  }\n\n  get inStaticBlock() {\n    return (this.currentThisScope().flags & SCOPE_STATIC_BLOCK) > 0;\n  }\n\n  get inNonArrowFunction() {\n    return (this.currentThisScope().flags & SCOPE_FUNCTION) > 0;\n  }\n\n  get treatFunctionsAsVar() {\n    return this.treatFunctionsAsVarInScope(this.currentScope());\n  }\n\n  createScope(flags) {\n    return new Scope(flags);\n  }\n\n  enter(flags) {\n    this.scopeStack.push(this.createScope(flags));\n  }\n\n  exit() {\n    this.scopeStack.pop();\n  }\n\n  treatFunctionsAsVarInScope(scope) {\n    return !!(scope.flags & SCOPE_FUNCTION || !this.inModule && scope.flags & SCOPE_PROGRAM);\n  }\n\n  declareName(name, bindingType, pos) {\n    let scope = this.currentScope();\n\n    if (bindingType & BIND_SCOPE_LEXICAL || bindingType & BIND_SCOPE_FUNCTION) {\n      this.checkRedeclarationInScope(scope, name, bindingType, pos);\n\n      if (bindingType & BIND_SCOPE_FUNCTION) {\n        scope.functions.push(name);\n      } else {\n        scope.lexical.push(name);\n      }\n\n      if (bindingType & BIND_SCOPE_LEXICAL) {\n        this.maybeExportDefined(scope, name);\n      }\n    } else if (bindingType & BIND_SCOPE_VAR) {\n      for (let i = this.scopeStack.length - 1; i >= 0; --i) {\n        scope = this.scopeStack[i];\n        this.checkRedeclarationInScope(scope, name, bindingType, pos);\n        scope.var.push(name);\n        this.maybeExportDefined(scope, name);\n        if (scope.flags & SCOPE_VAR) break;\n      }\n    }\n\n    if (this.inModule && scope.flags & SCOPE_PROGRAM) {\n      this.undefinedExports.delete(name);\n    }\n  }\n\n  maybeExportDefined(scope, name) {\n    if (this.inModule && scope.flags & SCOPE_PROGRAM) {\n      this.undefinedExports.delete(name);\n    }\n  }\n\n  checkRedeclarationInScope(scope, name, bindingType, pos) {\n    if (this.isRedeclaredInScope(scope, name, bindingType)) {\n      this.raise(pos, ErrorMessages.VarRedeclaration, name);\n    }\n  }\n\n  isRedeclaredInScope(scope, name, bindingType) {\n    if (!(bindingType & BIND_KIND_VALUE)) return false;\n\n    if (bindingType & BIND_SCOPE_LEXICAL) {\n      return scope.lexical.indexOf(name) > -1 || scope.functions.indexOf(name) > -1 || scope.var.indexOf(name) > -1;\n    }\n\n    if (bindingType & BIND_SCOPE_FUNCTION) {\n      return scope.lexical.indexOf(name) > -1 || !this.treatFunctionsAsVarInScope(scope) && scope.var.indexOf(name) > -1;\n    }\n\n    return scope.lexical.indexOf(name) > -1 && !(scope.flags & SCOPE_SIMPLE_CATCH && scope.lexical[0] === name) || !this.treatFunctionsAsVarInScope(scope) && scope.functions.indexOf(name) > -1;\n  }\n\n  checkLocalExport(id) {\n    if (this.scopeStack[0].lexical.indexOf(id.name) === -1 && this.scopeStack[0].var.indexOf(id.name) === -1 && this.scopeStack[0].functions.indexOf(id.name) === -1) {\n      this.undefinedExports.set(id.name, id.start);\n    }\n  }\n\n  currentScope() {\n    return this.scopeStack[this.scopeStack.length - 1];\n  }\n\n  currentVarScope() {\n    for (let i = this.scopeStack.length - 1;; i--) {\n      const scope = this.scopeStack[i];\n\n      if (scope.flags & SCOPE_VAR) {\n        return scope;\n      }\n    }\n  }\n\n  currentThisScope() {\n    for (let i = this.scopeStack.length - 1;; i--) {\n      const scope = this.scopeStack[i];\n\n      if ((scope.flags & SCOPE_VAR || scope.flags & SCOPE_CLASS) && !(scope.flags & SCOPE_ARROW)) {\n        return scope;\n      }\n    }\n  }\n\n}\n\nclass FlowScope extends Scope {\n  constructor(...args) {\n    super(...args);\n    this.declareFunctions = [];\n  }\n\n}\n\nclass FlowScopeHandler extends ScopeHandler {\n  createScope(flags) {\n    return new FlowScope(flags);\n  }\n\n  declareName(name, bindingType, pos) {\n    const scope = this.currentScope();\n\n    if (bindingType & BIND_FLAGS_FLOW_DECLARE_FN) {\n      this.checkRedeclarationInScope(scope, name, bindingType, pos);\n      this.maybeExportDefined(scope, name);\n      scope.declareFunctions.push(name);\n      return;\n    }\n\n    super.declareName(...arguments);\n  }\n\n  isRedeclaredInScope(scope, name, bindingType) {\n    if (super.isRedeclaredInScope(...arguments)) return true;\n\n    if (bindingType & BIND_FLAGS_FLOW_DECLARE_FN) {\n      return !scope.declareFunctions.includes(name) && (scope.lexical.includes(name) || scope.functions.includes(name));\n    }\n\n    return false;\n  }\n\n  checkLocalExport(id) {\n    if (this.scopeStack[0].declareFunctions.indexOf(id.name) === -1) {\n      super.checkLocalExport(id);\n    }\n  }\n\n}\n\nconst reservedTypes = new Set([\"_\", \"any\", \"bool\", \"boolean\", \"empty\", \"extends\", \"false\", \"interface\", \"mixed\", \"null\", \"number\", \"static\", \"string\", \"true\", \"typeof\", \"void\"]);\nconst FlowErrors = Object.freeze({\n  AmbiguousConditionalArrow: \"Ambiguous expression: wrap the arrow functions in parentheses to disambiguate.\",\n  AmbiguousDeclareModuleKind: \"Found both `declare module.exports` and `declare export` in the same module. Modules can only have 1 since they are either an ES module or they are a CommonJS module\",\n  AssignReservedType: \"Cannot overwrite reserved type %0\",\n  DeclareClassElement: \"The `declare` modifier can only appear on class fields.\",\n  DeclareClassFieldInitializer: \"Initializers are not allowed in fields with the `declare` modifier.\",\n  DuplicateDeclareModuleExports: \"Duplicate `declare module.exports` statement\",\n  EnumBooleanMemberNotInitialized: \"Boolean enum members need to be initialized. Use either `%0 = true,` or `%0 = false,` in enum `%1`.\",\n  EnumDuplicateMemberName: \"Enum member names need to be unique, but the name `%0` has already been used before in enum `%1`.\",\n  EnumInconsistentMemberValues: \"Enum `%0` has inconsistent member initializers. Either use no initializers, or consistently use literals (either booleans, numbers, or strings) for all member initializers.\",\n  EnumInvalidExplicitType: \"Enum type `%1` is not valid. Use one of `boolean`, `number`, `string`, or `symbol` in enum `%0`.\",\n  EnumInvalidExplicitTypeUnknownSupplied: \"Supplied enum type is not valid. Use one of `boolean`, `number`, `string`, or `symbol` in enum `%0`.\",\n  EnumInvalidMemberInitializerPrimaryType: \"Enum `%0` has type `%2`, so the initializer of `%1` needs to be a %2 literal.\",\n  EnumInvalidMemberInitializerSymbolType: \"Symbol enum members cannot be initialized. Use `%1,` in enum `%0`.\",\n  EnumInvalidMemberInitializerUnknownType: \"The enum member initializer for `%1` needs to be a literal (either a boolean, number, or string) in enum `%0`.\",\n  EnumInvalidMemberName: \"Enum member names cannot start with lowercase 'a' through 'z'. Instead of using `%0`, consider using `%1`, in enum `%2`.\",\n  EnumNumberMemberNotInitialized: \"Number enum members need to be initialized, e.g. `%1 = 1` in enum `%0`.\",\n  EnumStringMemberInconsistentlyInitailized: \"String enum members need to consistently either all use initializers, or use no initializers, in enum `%0`.\",\n  GetterMayNotHaveThisParam: \"A getter cannot have a `this` parameter.\",\n  ImportTypeShorthandOnlyInPureImport: \"The `type` and `typeof` keywords on named imports can only be used on regular `import` statements. It cannot be used with `import type` or `import typeof` statements\",\n  InexactInsideExact: \"Explicit inexact syntax cannot appear inside an explicit exact object type\",\n  InexactInsideNonObject: \"Explicit inexact syntax cannot appear in class or interface definitions\",\n  InexactVariance: \"Explicit inexact syntax cannot have variance\",\n  InvalidNonTypeImportInDeclareModule: \"Imports within a `declare module` body must always be `import type` or `import typeof`\",\n  MissingTypeParamDefault: \"Type parameter declaration needs a default, since a preceding type parameter declaration has a default.\",\n  NestedDeclareModule: \"`declare module` cannot be used inside another `declare module`\",\n  NestedFlowComment: \"Cannot have a flow comment inside another flow comment\",\n  OptionalBindingPattern: \"A binding pattern parameter cannot be optional in an implementation signature.\",\n  SetterMayNotHaveThisParam: \"A setter cannot have a `this` parameter.\",\n  SpreadVariance: \"Spread properties cannot have variance\",\n  ThisParamAnnotationRequired: \"A type annotation is required for the `this` parameter.\",\n  ThisParamBannedInConstructor: \"Constructors cannot have a `this` parameter; constructors don't bind `this` like other functions.\",\n  ThisParamMayNotBeOptional: \"The `this` parameter cannot be optional.\",\n  ThisParamMustBeFirst: \"The `this` parameter must be the first function parameter.\",\n  ThisParamNoDefault: \"The `this` parameter may not have a default value.\",\n  TypeBeforeInitializer: \"Type annotations must come before default assignments, e.g. instead of `age = 25: number` use `age: number = 25`\",\n  TypeCastInPattern: \"The type cast expression is expected to be wrapped with parenthesis\",\n  UnexpectedExplicitInexactInObject: \"Explicit inexact syntax must appear at the end of an inexact object\",\n  UnexpectedReservedType: \"Unexpected reserved type %0\",\n  UnexpectedReservedUnderscore: \"`_` is only allowed as a type argument to call or new\",\n  UnexpectedSpaceBetweenModuloChecks: \"Spaces between `%` and `checks` are not allowed here.\",\n  UnexpectedSpreadType: \"Spread operator cannot appear in class or interface definitions\",\n  UnexpectedSubtractionOperand: 'Unexpected token, expected \"number\" or \"bigint\"',\n  UnexpectedTokenAfterTypeParameter: \"Expected an arrow function after this type parameter declaration\",\n  UnexpectedTypeParameterBeforeAsyncArrowFunction: \"Type parameters must come after the async keyword, e.g. instead of `<T> async () => {}`, use `async <T>() => {}`\",\n  UnsupportedDeclareExportKind: \"`declare export %0` is not supported. Use `%1` instead\",\n  UnsupportedStatementInDeclareModule: \"Only declares and type imports are allowed inside declare module\",\n  UnterminatedFlowComment: \"Unterminated flow-comment\"\n});\n\nfunction isEsModuleType(bodyElement) {\n  return bodyElement.type === \"DeclareExportAllDeclaration\" || bodyElement.type === \"DeclareExportDeclaration\" && (!bodyElement.declaration || bodyElement.declaration.type !== \"TypeAlias\" && bodyElement.declaration.type !== \"InterfaceDeclaration\");\n}\n\nfunction hasTypeImportKind(node) {\n  return node.importKind === \"type\" || node.importKind === \"typeof\";\n}\n\nfunction isMaybeDefaultImport(state) {\n  return (state.type === types.name || !!state.type.keyword) && state.value !== \"from\";\n}\n\nconst exportSuggestions = {\n  const: \"declare export var\",\n  let: \"declare export var\",\n  type: \"export type\",\n  interface: \"export interface\"\n};\n\nfunction partition(list, test) {\n  const list1 = [];\n  const list2 = [];\n\n  for (let i = 0; i < list.length; i++) {\n    (test(list[i], i, list) ? list1 : list2).push(list[i]);\n  }\n\n  return [list1, list2];\n}\n\nconst FLOW_PRAGMA_REGEX = /\\*?\\s*@((?:no)?flow)\\b/;\nvar flow = (superClass => {\n  var _temp;\n\n  return _temp = class extends superClass {\n    constructor(...args) {\n      super(...args);\n      this.flowPragma = undefined;\n    }\n\n    getScopeHandler() {\n      return FlowScopeHandler;\n    }\n\n    shouldParseTypes() {\n      return this.getPluginOption(\"flow\", \"all\") || this.flowPragma === \"flow\";\n    }\n\n    shouldParseEnums() {\n      return !!this.getPluginOption(\"flow\", \"enums\");\n    }\n\n    finishToken(type, val) {\n      if (type !== types.string && type !== types.semi && type !== types.interpreterDirective) {\n        if (this.flowPragma === undefined) {\n          this.flowPragma = null;\n        }\n      }\n\n      return super.finishToken(type, val);\n    }\n\n    addComment(comment) {\n      if (this.flowPragma === undefined) {\n        const matches = FLOW_PRAGMA_REGEX.exec(comment.value);\n\n        if (!matches) ; else if (matches[1] === \"flow\") {\n          this.flowPragma = \"flow\";\n        } else if (matches[1] === \"noflow\") {\n          this.flowPragma = \"noflow\";\n        } else {\n          throw new Error(\"Unexpected flow pragma\");\n        }\n      }\n\n      return super.addComment(comment);\n    }\n\n    flowParseTypeInitialiser(tok) {\n      const oldInType = this.state.inType;\n      this.state.inType = true;\n      this.expect(tok || types.colon);\n      const type = this.flowParseType();\n      this.state.inType = oldInType;\n      return type;\n    }\n\n    flowParsePredicate() {\n      const node = this.startNode();\n      const moduloLoc = this.state.startLoc;\n      const moduloPos = this.state.start;\n      this.expect(types.modulo);\n      const checksLoc = this.state.startLoc;\n      this.expectContextual(\"checks\");\n\n      if (moduloLoc.line !== checksLoc.line || moduloLoc.column !== checksLoc.column - 1) {\n        this.raise(moduloPos, FlowErrors.UnexpectedSpaceBetweenModuloChecks);\n      }\n\n      if (this.eat(types.parenL)) {\n        node.value = this.parseExpression();\n        this.expect(types.parenR);\n        return this.finishNode(node, \"DeclaredPredicate\");\n      } else {\n        return this.finishNode(node, \"InferredPredicate\");\n      }\n    }\n\n    flowParseTypeAndPredicateInitialiser() {\n      const oldInType = this.state.inType;\n      this.state.inType = true;\n      this.expect(types.colon);\n      let type = null;\n      let predicate = null;\n\n      if (this.match(types.modulo)) {\n        this.state.inType = oldInType;\n        predicate = this.flowParsePredicate();\n      } else {\n        type = this.flowParseType();\n        this.state.inType = oldInType;\n\n        if (this.match(types.modulo)) {\n          predicate = this.flowParsePredicate();\n        }\n      }\n\n      return [type, predicate];\n    }\n\n    flowParseDeclareClass(node) {\n      this.next();\n      this.flowParseInterfaceish(node, true);\n      return this.finishNode(node, \"DeclareClass\");\n    }\n\n    flowParseDeclareFunction(node) {\n      this.next();\n      const id = node.id = this.parseIdentifier();\n      const typeNode = this.startNode();\n      const typeContainer = this.startNode();\n\n      if (this.isRelational(\"<\")) {\n        typeNode.typeParameters = this.flowParseTypeParameterDeclaration();\n      } else {\n        typeNode.typeParameters = null;\n      }\n\n      this.expect(types.parenL);\n      const tmp = this.flowParseFunctionTypeParams();\n      typeNode.params = tmp.params;\n      typeNode.rest = tmp.rest;\n      typeNode.this = tmp._this;\n      this.expect(types.parenR);\n      [typeNode.returnType, node.predicate] = this.flowParseTypeAndPredicateInitialiser();\n      typeContainer.typeAnnotation = this.finishNode(typeNode, \"FunctionTypeAnnotation\");\n      id.typeAnnotation = this.finishNode(typeContainer, \"TypeAnnotation\");\n      this.resetEndLocation(id);\n      this.semicolon();\n      this.scope.declareName(node.id.name, BIND_FLOW_DECLARE_FN, node.id.start);\n      return this.finishNode(node, \"DeclareFunction\");\n    }\n\n    flowParseDeclare(node, insideModule) {\n      if (this.match(types._class)) {\n        return this.flowParseDeclareClass(node);\n      } else if (this.match(types._function)) {\n        return this.flowParseDeclareFunction(node);\n      } else if (this.match(types._var)) {\n        return this.flowParseDeclareVariable(node);\n      } else if (this.eatContextual(\"module\")) {\n        if (this.match(types.dot)) {\n          return this.flowParseDeclareModuleExports(node);\n        } else {\n          if (insideModule) {\n            this.raise(this.state.lastTokStart, FlowErrors.NestedDeclareModule);\n          }\n\n          return this.flowParseDeclareModule(node);\n        }\n      } else if (this.isContextual(\"type\")) {\n        return this.flowParseDeclareTypeAlias(node);\n      } else if (this.isContextual(\"opaque\")) {\n        return this.flowParseDeclareOpaqueType(node);\n      } else if (this.isContextual(\"interface\")) {\n        return this.flowParseDeclareInterface(node);\n      } else if (this.match(types._export)) {\n        return this.flowParseDeclareExportDeclaration(node, insideModule);\n      } else {\n        throw this.unexpected();\n      }\n    }\n\n    flowParseDeclareVariable(node) {\n      this.next();\n      node.id = this.flowParseTypeAnnotatableIdentifier(true);\n      this.scope.declareName(node.id.name, BIND_VAR, node.id.start);\n      this.semicolon();\n      return this.finishNode(node, \"DeclareVariable\");\n    }\n\n    flowParseDeclareModule(node) {\n      this.scope.enter(SCOPE_OTHER);\n\n      if (this.match(types.string)) {\n        node.id = this.parseExprAtom();\n      } else {\n        node.id = this.parseIdentifier();\n      }\n\n      const bodyNode = node.body = this.startNode();\n      const body = bodyNode.body = [];\n      this.expect(types.braceL);\n\n      while (!this.match(types.braceR)) {\n        let bodyNode = this.startNode();\n\n        if (this.match(types._import)) {\n          this.next();\n\n          if (!this.isContextual(\"type\") && !this.match(types._typeof)) {\n            this.raise(this.state.lastTokStart, FlowErrors.InvalidNonTypeImportInDeclareModule);\n          }\n\n          this.parseImport(bodyNode);\n        } else {\n          this.expectContextual(\"declare\", FlowErrors.UnsupportedStatementInDeclareModule);\n          bodyNode = this.flowParseDeclare(bodyNode, true);\n        }\n\n        body.push(bodyNode);\n      }\n\n      this.scope.exit();\n      this.expect(types.braceR);\n      this.finishNode(bodyNode, \"BlockStatement\");\n      let kind = null;\n      let hasModuleExport = false;\n      body.forEach(bodyElement => {\n        if (isEsModuleType(bodyElement)) {\n          if (kind === \"CommonJS\") {\n            this.raise(bodyElement.start, FlowErrors.AmbiguousDeclareModuleKind);\n          }\n\n          kind = \"ES\";\n        } else if (bodyElement.type === \"DeclareModuleExports\") {\n          if (hasModuleExport) {\n            this.raise(bodyElement.start, FlowErrors.DuplicateDeclareModuleExports);\n          }\n\n          if (kind === \"ES\") {\n            this.raise(bodyElement.start, FlowErrors.AmbiguousDeclareModuleKind);\n          }\n\n          kind = \"CommonJS\";\n          hasModuleExport = true;\n        }\n      });\n      node.kind = kind || \"CommonJS\";\n      return this.finishNode(node, \"DeclareModule\");\n    }\n\n    flowParseDeclareExportDeclaration(node, insideModule) {\n      this.expect(types._export);\n\n      if (this.eat(types._default)) {\n        if (this.match(types._function) || this.match(types._class)) {\n          node.declaration = this.flowParseDeclare(this.startNode());\n        } else {\n          node.declaration = this.flowParseType();\n          this.semicolon();\n        }\n\n        node.default = true;\n        return this.finishNode(node, \"DeclareExportDeclaration\");\n      } else {\n        if (this.match(types._const) || this.isLet() || (this.isContextual(\"type\") || this.isContextual(\"interface\")) && !insideModule) {\n          const label = this.state.value;\n          const suggestion = exportSuggestions[label];\n          throw this.raise(this.state.start, FlowErrors.UnsupportedDeclareExportKind, label, suggestion);\n        }\n\n        if (this.match(types._var) || this.match(types._function) || this.match(types._class) || this.isContextual(\"opaque\")) {\n            node.declaration = this.flowParseDeclare(this.startNode());\n            node.default = false;\n            return this.finishNode(node, \"DeclareExportDeclaration\");\n          } else if (this.match(types.star) || this.match(types.braceL) || this.isContextual(\"interface\") || this.isContextual(\"type\") || this.isContextual(\"opaque\")) {\n            node = this.parseExport(node);\n\n            if (node.type === \"ExportNamedDeclaration\") {\n              node.type = \"ExportDeclaration\";\n              node.default = false;\n              delete node.exportKind;\n            }\n\n            node.type = \"Declare\" + node.type;\n            return node;\n          }\n      }\n\n      throw this.unexpected();\n    }\n\n    flowParseDeclareModuleExports(node) {\n      this.next();\n      this.expectContextual(\"exports\");\n      node.typeAnnotation = this.flowParseTypeAnnotation();\n      this.semicolon();\n      return this.finishNode(node, \"DeclareModuleExports\");\n    }\n\n    flowParseDeclareTypeAlias(node) {\n      this.next();\n      this.flowParseTypeAlias(node);\n      node.type = \"DeclareTypeAlias\";\n      return node;\n    }\n\n    flowParseDeclareOpaqueType(node) {\n      this.next();\n      this.flowParseOpaqueType(node, true);\n      node.type = \"DeclareOpaqueType\";\n      return node;\n    }\n\n    flowParseDeclareInterface(node) {\n      this.next();\n      this.flowParseInterfaceish(node);\n      return this.finishNode(node, \"DeclareInterface\");\n    }\n\n    flowParseInterfaceish(node, isClass = false) {\n      node.id = this.flowParseRestrictedIdentifier(!isClass, true);\n      this.scope.declareName(node.id.name, isClass ? BIND_FUNCTION : BIND_LEXICAL, node.id.start);\n\n      if (this.isRelational(\"<\")) {\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n      } else {\n        node.typeParameters = null;\n      }\n\n      node.extends = [];\n      node.implements = [];\n      node.mixins = [];\n\n      if (this.eat(types._extends)) {\n        do {\n          node.extends.push(this.flowParseInterfaceExtends());\n        } while (!isClass && this.eat(types.comma));\n      }\n\n      if (this.isContextual(\"mixins\")) {\n        this.next();\n\n        do {\n          node.mixins.push(this.flowParseInterfaceExtends());\n        } while (this.eat(types.comma));\n      }\n\n      if (this.isContextual(\"implements\")) {\n        this.next();\n\n        do {\n          node.implements.push(this.flowParseInterfaceExtends());\n        } while (this.eat(types.comma));\n      }\n\n      node.body = this.flowParseObjectType({\n        allowStatic: isClass,\n        allowExact: false,\n        allowSpread: false,\n        allowProto: isClass,\n        allowInexact: false\n      });\n    }\n\n    flowParseInterfaceExtends() {\n      const node = this.startNode();\n      node.id = this.flowParseQualifiedTypeIdentifier();\n\n      if (this.isRelational(\"<\")) {\n        node.typeParameters = this.flowParseTypeParameterInstantiation();\n      } else {\n        node.typeParameters = null;\n      }\n\n      return this.finishNode(node, \"InterfaceExtends\");\n    }\n\n    flowParseInterface(node) {\n      this.flowParseInterfaceish(node);\n      return this.finishNode(node, \"InterfaceDeclaration\");\n    }\n\n    checkNotUnderscore(word) {\n      if (word === \"_\") {\n        this.raise(this.state.start, FlowErrors.UnexpectedReservedUnderscore);\n      }\n    }\n\n    checkReservedType(word, startLoc, declaration) {\n      if (!reservedTypes.has(word)) return;\n      this.raise(startLoc, declaration ? FlowErrors.AssignReservedType : FlowErrors.UnexpectedReservedType, word);\n    }\n\n    flowParseRestrictedIdentifier(liberal, declaration) {\n      this.checkReservedType(this.state.value, this.state.start, declaration);\n      return this.parseIdentifier(liberal);\n    }\n\n    flowParseTypeAlias(node) {\n      node.id = this.flowParseRestrictedIdentifier(false, true);\n      this.scope.declareName(node.id.name, BIND_LEXICAL, node.id.start);\n\n      if (this.isRelational(\"<\")) {\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n      } else {\n        node.typeParameters = null;\n      }\n\n      node.right = this.flowParseTypeInitialiser(types.eq);\n      this.semicolon();\n      return this.finishNode(node, \"TypeAlias\");\n    }\n\n    flowParseOpaqueType(node, declare) {\n      this.expectContextual(\"type\");\n      node.id = this.flowParseRestrictedIdentifier(true, true);\n      this.scope.declareName(node.id.name, BIND_LEXICAL, node.id.start);\n\n      if (this.isRelational(\"<\")) {\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n      } else {\n        node.typeParameters = null;\n      }\n\n      node.supertype = null;\n\n      if (this.match(types.colon)) {\n        node.supertype = this.flowParseTypeInitialiser(types.colon);\n      }\n\n      node.impltype = null;\n\n      if (!declare) {\n        node.impltype = this.flowParseTypeInitialiser(types.eq);\n      }\n\n      this.semicolon();\n      return this.finishNode(node, \"OpaqueType\");\n    }\n\n    flowParseTypeParameter(requireDefault = false) {\n      const nodeStart = this.state.start;\n      const node = this.startNode();\n      const variance = this.flowParseVariance();\n      const ident = this.flowParseTypeAnnotatableIdentifier();\n      node.name = ident.name;\n      node.variance = variance;\n      node.bound = ident.typeAnnotation;\n\n      if (this.match(types.eq)) {\n        this.eat(types.eq);\n        node.default = this.flowParseType();\n      } else {\n        if (requireDefault) {\n          this.raise(nodeStart, FlowErrors.MissingTypeParamDefault);\n        }\n      }\n\n      return this.finishNode(node, \"TypeParameter\");\n    }\n\n    flowParseTypeParameterDeclaration() {\n      const oldInType = this.state.inType;\n      const node = this.startNode();\n      node.params = [];\n      this.state.inType = true;\n\n      if (this.isRelational(\"<\") || this.match(types.jsxTagStart)) {\n        this.next();\n      } else {\n        this.unexpected();\n      }\n\n      let defaultRequired = false;\n\n      do {\n        const typeParameter = this.flowParseTypeParameter(defaultRequired);\n        node.params.push(typeParameter);\n\n        if (typeParameter.default) {\n          defaultRequired = true;\n        }\n\n        if (!this.isRelational(\">\")) {\n          this.expect(types.comma);\n        }\n      } while (!this.isRelational(\">\"));\n\n      this.expectRelational(\">\");\n      this.state.inType = oldInType;\n      return this.finishNode(node, \"TypeParameterDeclaration\");\n    }\n\n    flowParseTypeParameterInstantiation() {\n      const node = this.startNode();\n      const oldInType = this.state.inType;\n      node.params = [];\n      this.state.inType = true;\n      this.expectRelational(\"<\");\n      const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n      this.state.noAnonFunctionType = false;\n\n      while (!this.isRelational(\">\")) {\n        node.params.push(this.flowParseType());\n\n        if (!this.isRelational(\">\")) {\n          this.expect(types.comma);\n        }\n      }\n\n      this.state.noAnonFunctionType = oldNoAnonFunctionType;\n      this.expectRelational(\">\");\n      this.state.inType = oldInType;\n      return this.finishNode(node, \"TypeParameterInstantiation\");\n    }\n\n    flowParseTypeParameterInstantiationCallOrNew() {\n      const node = this.startNode();\n      const oldInType = this.state.inType;\n      node.params = [];\n      this.state.inType = true;\n      this.expectRelational(\"<\");\n\n      while (!this.isRelational(\">\")) {\n        node.params.push(this.flowParseTypeOrImplicitInstantiation());\n\n        if (!this.isRelational(\">\")) {\n          this.expect(types.comma);\n        }\n      }\n\n      this.expectRelational(\">\");\n      this.state.inType = oldInType;\n      return this.finishNode(node, \"TypeParameterInstantiation\");\n    }\n\n    flowParseInterfaceType() {\n      const node = this.startNode();\n      this.expectContextual(\"interface\");\n      node.extends = [];\n\n      if (this.eat(types._extends)) {\n        do {\n          node.extends.push(this.flowParseInterfaceExtends());\n        } while (this.eat(types.comma));\n      }\n\n      node.body = this.flowParseObjectType({\n        allowStatic: false,\n        allowExact: false,\n        allowSpread: false,\n        allowProto: false,\n        allowInexact: false\n      });\n      return this.finishNode(node, \"InterfaceTypeAnnotation\");\n    }\n\n    flowParseObjectPropertyKey() {\n      return this.match(types.num) || this.match(types.string) ? this.parseExprAtom() : this.parseIdentifier(true);\n    }\n\n    flowParseObjectTypeIndexer(node, isStatic, variance) {\n      node.static = isStatic;\n\n      if (this.lookahead().type === types.colon) {\n        node.id = this.flowParseObjectPropertyKey();\n        node.key = this.flowParseTypeInitialiser();\n      } else {\n        node.id = null;\n        node.key = this.flowParseType();\n      }\n\n      this.expect(types.bracketR);\n      node.value = this.flowParseTypeInitialiser();\n      node.variance = variance;\n      return this.finishNode(node, \"ObjectTypeIndexer\");\n    }\n\n    flowParseObjectTypeInternalSlot(node, isStatic) {\n      node.static = isStatic;\n      node.id = this.flowParseObjectPropertyKey();\n      this.expect(types.bracketR);\n      this.expect(types.bracketR);\n\n      if (this.isRelational(\"<\") || this.match(types.parenL)) {\n        node.method = true;\n        node.optional = false;\n        node.value = this.flowParseObjectTypeMethodish(this.startNodeAt(node.start, node.loc.start));\n      } else {\n        node.method = false;\n\n        if (this.eat(types.question)) {\n          node.optional = true;\n        }\n\n        node.value = this.flowParseTypeInitialiser();\n      }\n\n      return this.finishNode(node, \"ObjectTypeInternalSlot\");\n    }\n\n    flowParseObjectTypeMethodish(node) {\n      node.params = [];\n      node.rest = null;\n      node.typeParameters = null;\n      node.this = null;\n\n      if (this.isRelational(\"<\")) {\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n      }\n\n      this.expect(types.parenL);\n\n      if (this.match(types._this)) {\n        node.this = this.flowParseFunctionTypeParam(true);\n        node.this.name = null;\n\n        if (!this.match(types.parenR)) {\n          this.expect(types.comma);\n        }\n      }\n\n      while (!this.match(types.parenR) && !this.match(types.ellipsis)) {\n        node.params.push(this.flowParseFunctionTypeParam(false));\n\n        if (!this.match(types.parenR)) {\n          this.expect(types.comma);\n        }\n      }\n\n      if (this.eat(types.ellipsis)) {\n        node.rest = this.flowParseFunctionTypeParam(false);\n      }\n\n      this.expect(types.parenR);\n      node.returnType = this.flowParseTypeInitialiser();\n      return this.finishNode(node, \"FunctionTypeAnnotation\");\n    }\n\n    flowParseObjectTypeCallProperty(node, isStatic) {\n      const valueNode = this.startNode();\n      node.static = isStatic;\n      node.value = this.flowParseObjectTypeMethodish(valueNode);\n      return this.finishNode(node, \"ObjectTypeCallProperty\");\n    }\n\n    flowParseObjectType({\n      allowStatic,\n      allowExact,\n      allowSpread,\n      allowProto,\n      allowInexact\n    }) {\n      const oldInType = this.state.inType;\n      this.state.inType = true;\n      const nodeStart = this.startNode();\n      nodeStart.callProperties = [];\n      nodeStart.properties = [];\n      nodeStart.indexers = [];\n      nodeStart.internalSlots = [];\n      let endDelim;\n      let exact;\n      let inexact = false;\n\n      if (allowExact && this.match(types.braceBarL)) {\n        this.expect(types.braceBarL);\n        endDelim = types.braceBarR;\n        exact = true;\n      } else {\n        this.expect(types.braceL);\n        endDelim = types.braceR;\n        exact = false;\n      }\n\n      nodeStart.exact = exact;\n\n      while (!this.match(endDelim)) {\n        let isStatic = false;\n        let protoStart = null;\n        let inexactStart = null;\n        const node = this.startNode();\n\n        if (allowProto && this.isContextual(\"proto\")) {\n          const lookahead = this.lookahead();\n\n          if (lookahead.type !== types.colon && lookahead.type !== types.question) {\n            this.next();\n            protoStart = this.state.start;\n            allowStatic = false;\n          }\n        }\n\n        if (allowStatic && this.isContextual(\"static\")) {\n          const lookahead = this.lookahead();\n\n          if (lookahead.type !== types.colon && lookahead.type !== types.question) {\n            this.next();\n            isStatic = true;\n          }\n        }\n\n        const variance = this.flowParseVariance();\n\n        if (this.eat(types.bracketL)) {\n          if (protoStart != null) {\n            this.unexpected(protoStart);\n          }\n\n          if (this.eat(types.bracketL)) {\n            if (variance) {\n              this.unexpected(variance.start);\n            }\n\n            nodeStart.internalSlots.push(this.flowParseObjectTypeInternalSlot(node, isStatic));\n          } else {\n            nodeStart.indexers.push(this.flowParseObjectTypeIndexer(node, isStatic, variance));\n          }\n        } else if (this.match(types.parenL) || this.isRelational(\"<\")) {\n          if (protoStart != null) {\n            this.unexpected(protoStart);\n          }\n\n          if (variance) {\n            this.unexpected(variance.start);\n          }\n\n          nodeStart.callProperties.push(this.flowParseObjectTypeCallProperty(node, isStatic));\n        } else {\n          let kind = \"init\";\n\n          if (this.isContextual(\"get\") || this.isContextual(\"set\")) {\n            const lookahead = this.lookahead();\n\n            if (lookahead.type === types.name || lookahead.type === types.string || lookahead.type === types.num) {\n              kind = this.state.value;\n              this.next();\n            }\n          }\n\n          const propOrInexact = this.flowParseObjectTypeProperty(node, isStatic, protoStart, variance, kind, allowSpread, allowInexact != null ? allowInexact : !exact);\n\n          if (propOrInexact === null) {\n            inexact = true;\n            inexactStart = this.state.lastTokStart;\n          } else {\n            nodeStart.properties.push(propOrInexact);\n          }\n        }\n\n        this.flowObjectTypeSemicolon();\n\n        if (inexactStart && !this.match(types.braceR) && !this.match(types.braceBarR)) {\n          this.raise(inexactStart, FlowErrors.UnexpectedExplicitInexactInObject);\n        }\n      }\n\n      this.expect(endDelim);\n\n      if (allowSpread) {\n        nodeStart.inexact = inexact;\n      }\n\n      const out = this.finishNode(nodeStart, \"ObjectTypeAnnotation\");\n      this.state.inType = oldInType;\n      return out;\n    }\n\n    flowParseObjectTypeProperty(node, isStatic, protoStart, variance, kind, allowSpread, allowInexact) {\n      if (this.eat(types.ellipsis)) {\n        const isInexactToken = this.match(types.comma) || this.match(types.semi) || this.match(types.braceR) || this.match(types.braceBarR);\n\n        if (isInexactToken) {\n          if (!allowSpread) {\n            this.raise(this.state.lastTokStart, FlowErrors.InexactInsideNonObject);\n          } else if (!allowInexact) {\n            this.raise(this.state.lastTokStart, FlowErrors.InexactInsideExact);\n          }\n\n          if (variance) {\n            this.raise(variance.start, FlowErrors.InexactVariance);\n          }\n\n          return null;\n        }\n\n        if (!allowSpread) {\n          this.raise(this.state.lastTokStart, FlowErrors.UnexpectedSpreadType);\n        }\n\n        if (protoStart != null) {\n          this.unexpected(protoStart);\n        }\n\n        if (variance) {\n          this.raise(variance.start, FlowErrors.SpreadVariance);\n        }\n\n        node.argument = this.flowParseType();\n        return this.finishNode(node, \"ObjectTypeSpreadProperty\");\n      } else {\n        node.key = this.flowParseObjectPropertyKey();\n        node.static = isStatic;\n        node.proto = protoStart != null;\n        node.kind = kind;\n        let optional = false;\n\n        if (this.isRelational(\"<\") || this.match(types.parenL)) {\n          node.method = true;\n\n          if (protoStart != null) {\n            this.unexpected(protoStart);\n          }\n\n          if (variance) {\n            this.unexpected(variance.start);\n          }\n\n          node.value = this.flowParseObjectTypeMethodish(this.startNodeAt(node.start, node.loc.start));\n\n          if (kind === \"get\" || kind === \"set\") {\n            this.flowCheckGetterSetterParams(node);\n          }\n\n          if (!allowSpread && node.key.name === \"constructor\" && node.value.this) {\n            this.raise(node.value.this.start, FlowErrors.ThisParamBannedInConstructor);\n          }\n        } else {\n          if (kind !== \"init\") this.unexpected();\n          node.method = false;\n\n          if (this.eat(types.question)) {\n            optional = true;\n          }\n\n          node.value = this.flowParseTypeInitialiser();\n          node.variance = variance;\n        }\n\n        node.optional = optional;\n        return this.finishNode(node, \"ObjectTypeProperty\");\n      }\n    }\n\n    flowCheckGetterSetterParams(property) {\n      const paramCount = property.kind === \"get\" ? 0 : 1;\n      const start = property.start;\n      const length = property.value.params.length + (property.value.rest ? 1 : 0);\n\n      if (property.value.this) {\n        this.raise(property.value.this.start, property.kind === \"get\" ? FlowErrors.GetterMayNotHaveThisParam : FlowErrors.SetterMayNotHaveThisParam);\n      }\n\n      if (length !== paramCount) {\n        if (property.kind === \"get\") {\n          this.raise(start, ErrorMessages.BadGetterArity);\n        } else {\n          this.raise(start, ErrorMessages.BadSetterArity);\n        }\n      }\n\n      if (property.kind === \"set\" && property.value.rest) {\n        this.raise(start, ErrorMessages.BadSetterRestParameter);\n      }\n    }\n\n    flowObjectTypeSemicolon() {\n      if (!this.eat(types.semi) && !this.eat(types.comma) && !this.match(types.braceR) && !this.match(types.braceBarR)) {\n        this.unexpected();\n      }\n    }\n\n    flowParseQualifiedTypeIdentifier(startPos, startLoc, id) {\n      startPos = startPos || this.state.start;\n      startLoc = startLoc || this.state.startLoc;\n      let node = id || this.flowParseRestrictedIdentifier(true);\n\n      while (this.eat(types.dot)) {\n        const node2 = this.startNodeAt(startPos, startLoc);\n        node2.qualification = node;\n        node2.id = this.flowParseRestrictedIdentifier(true);\n        node = this.finishNode(node2, \"QualifiedTypeIdentifier\");\n      }\n\n      return node;\n    }\n\n    flowParseGenericType(startPos, startLoc, id) {\n      const node = this.startNodeAt(startPos, startLoc);\n      node.typeParameters = null;\n      node.id = this.flowParseQualifiedTypeIdentifier(startPos, startLoc, id);\n\n      if (this.isRelational(\"<\")) {\n        node.typeParameters = this.flowParseTypeParameterInstantiation();\n      }\n\n      return this.finishNode(node, \"GenericTypeAnnotation\");\n    }\n\n    flowParseTypeofType() {\n      const node = this.startNode();\n      this.expect(types._typeof);\n      node.argument = this.flowParsePrimaryType();\n      return this.finishNode(node, \"TypeofTypeAnnotation\");\n    }\n\n    flowParseTupleType() {\n      const node = this.startNode();\n      node.types = [];\n      this.expect(types.bracketL);\n\n      while (this.state.pos < this.length && !this.match(types.bracketR)) {\n        node.types.push(this.flowParseType());\n        if (this.match(types.bracketR)) break;\n        this.expect(types.comma);\n      }\n\n      this.expect(types.bracketR);\n      return this.finishNode(node, \"TupleTypeAnnotation\");\n    }\n\n    flowParseFunctionTypeParam(first) {\n      let name = null;\n      let optional = false;\n      let typeAnnotation = null;\n      const node = this.startNode();\n      const lh = this.lookahead();\n      const isThis = this.state.type === types._this;\n\n      if (lh.type === types.colon || lh.type === types.question) {\n        if (isThis && !first) {\n          this.raise(node.start, FlowErrors.ThisParamMustBeFirst);\n        }\n\n        name = this.parseIdentifier(isThis);\n\n        if (this.eat(types.question)) {\n          optional = true;\n\n          if (isThis) {\n            this.raise(node.start, FlowErrors.ThisParamMayNotBeOptional);\n          }\n        }\n\n        typeAnnotation = this.flowParseTypeInitialiser();\n      } else {\n        typeAnnotation = this.flowParseType();\n      }\n\n      node.name = name;\n      node.optional = optional;\n      node.typeAnnotation = typeAnnotation;\n      return this.finishNode(node, \"FunctionTypeParam\");\n    }\n\n    reinterpretTypeAsFunctionTypeParam(type) {\n      const node = this.startNodeAt(type.start, type.loc.start);\n      node.name = null;\n      node.optional = false;\n      node.typeAnnotation = type;\n      return this.finishNode(node, \"FunctionTypeParam\");\n    }\n\n    flowParseFunctionTypeParams(params = []) {\n      let rest = null;\n      let _this = null;\n\n      if (this.match(types._this)) {\n        _this = this.flowParseFunctionTypeParam(true);\n        _this.name = null;\n\n        if (!this.match(types.parenR)) {\n          this.expect(types.comma);\n        }\n      }\n\n      while (!this.match(types.parenR) && !this.match(types.ellipsis)) {\n        params.push(this.flowParseFunctionTypeParam(false));\n\n        if (!this.match(types.parenR)) {\n          this.expect(types.comma);\n        }\n      }\n\n      if (this.eat(types.ellipsis)) {\n        rest = this.flowParseFunctionTypeParam(false);\n      }\n\n      return {\n        params,\n        rest,\n        _this\n      };\n    }\n\n    flowIdentToTypeAnnotation(startPos, startLoc, node, id) {\n      switch (id.name) {\n        case \"any\":\n          return this.finishNode(node, \"AnyTypeAnnotation\");\n\n        case \"bool\":\n        case \"boolean\":\n          return this.finishNode(node, \"BooleanTypeAnnotation\");\n\n        case \"mixed\":\n          return this.finishNode(node, \"MixedTypeAnnotation\");\n\n        case \"empty\":\n          return this.finishNode(node, \"EmptyTypeAnnotation\");\n\n        case \"number\":\n          return this.finishNode(node, \"NumberTypeAnnotation\");\n\n        case \"string\":\n          return this.finishNode(node, \"StringTypeAnnotation\");\n\n        case \"symbol\":\n          return this.finishNode(node, \"SymbolTypeAnnotation\");\n\n        default:\n          this.checkNotUnderscore(id.name);\n          return this.flowParseGenericType(startPos, startLoc, id);\n      }\n    }\n\n    flowParsePrimaryType() {\n      const startPos = this.state.start;\n      const startLoc = this.state.startLoc;\n      const node = this.startNode();\n      let tmp;\n      let type;\n      let isGroupedType = false;\n      const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n\n      switch (this.state.type) {\n        case types.name:\n          if (this.isContextual(\"interface\")) {\n            return this.flowParseInterfaceType();\n          }\n\n          return this.flowIdentToTypeAnnotation(startPos, startLoc, node, this.parseIdentifier());\n\n        case types.braceL:\n          return this.flowParseObjectType({\n            allowStatic: false,\n            allowExact: false,\n            allowSpread: true,\n            allowProto: false,\n            allowInexact: true\n          });\n\n        case types.braceBarL:\n          return this.flowParseObjectType({\n            allowStatic: false,\n            allowExact: true,\n            allowSpread: true,\n            allowProto: false,\n            allowInexact: false\n          });\n\n        case types.bracketL:\n          this.state.noAnonFunctionType = false;\n          type = this.flowParseTupleType();\n          this.state.noAnonFunctionType = oldNoAnonFunctionType;\n          return type;\n\n        case types.relational:\n          if (this.state.value === \"<\") {\n            node.typeParameters = this.flowParseTypeParameterDeclaration();\n            this.expect(types.parenL);\n            tmp = this.flowParseFunctionTypeParams();\n            node.params = tmp.params;\n            node.rest = tmp.rest;\n            node.this = tmp._this;\n            this.expect(types.parenR);\n            this.expect(types.arrow);\n            node.returnType = this.flowParseType();\n            return this.finishNode(node, \"FunctionTypeAnnotation\");\n          }\n\n          break;\n\n        case types.parenL:\n          this.next();\n\n          if (!this.match(types.parenR) && !this.match(types.ellipsis)) {\n            if (this.match(types.name) || this.match(types._this)) {\n              const token = this.lookahead().type;\n              isGroupedType = token !== types.question && token !== types.colon;\n            } else {\n              isGroupedType = true;\n            }\n          }\n\n          if (isGroupedType) {\n            this.state.noAnonFunctionType = false;\n            type = this.flowParseType();\n            this.state.noAnonFunctionType = oldNoAnonFunctionType;\n\n            if (this.state.noAnonFunctionType || !(this.match(types.comma) || this.match(types.parenR) && this.lookahead().type === types.arrow)) {\n              this.expect(types.parenR);\n              return type;\n            } else {\n              this.eat(types.comma);\n            }\n          }\n\n          if (type) {\n            tmp = this.flowParseFunctionTypeParams([this.reinterpretTypeAsFunctionTypeParam(type)]);\n          } else {\n            tmp = this.flowParseFunctionTypeParams();\n          }\n\n          node.params = tmp.params;\n          node.rest = tmp.rest;\n          node.this = tmp._this;\n          this.expect(types.parenR);\n          this.expect(types.arrow);\n          node.returnType = this.flowParseType();\n          node.typeParameters = null;\n          return this.finishNode(node, \"FunctionTypeAnnotation\");\n\n        case types.string:\n          return this.parseLiteral(this.state.value, \"StringLiteralTypeAnnotation\");\n\n        case types._true:\n        case types._false:\n          node.value = this.match(types._true);\n          this.next();\n          return this.finishNode(node, \"BooleanLiteralTypeAnnotation\");\n\n        case types.plusMin:\n          if (this.state.value === \"-\") {\n            this.next();\n\n            if (this.match(types.num)) {\n              return this.parseLiteral(-this.state.value, \"NumberLiteralTypeAnnotation\", node.start, node.loc.start);\n            }\n\n            if (this.match(types.bigint)) {\n              return this.parseLiteral(-this.state.value, \"BigIntLiteralTypeAnnotation\", node.start, node.loc.start);\n            }\n\n            throw this.raise(this.state.start, FlowErrors.UnexpectedSubtractionOperand);\n          }\n\n          throw this.unexpected();\n\n        case types.num:\n          return this.parseLiteral(this.state.value, \"NumberLiteralTypeAnnotation\");\n\n        case types.bigint:\n          return this.parseLiteral(this.state.value, \"BigIntLiteralTypeAnnotation\");\n\n        case types._void:\n          this.next();\n          return this.finishNode(node, \"VoidTypeAnnotation\");\n\n        case types._null:\n          this.next();\n          return this.finishNode(node, \"NullLiteralTypeAnnotation\");\n\n        case types._this:\n          this.next();\n          return this.finishNode(node, \"ThisTypeAnnotation\");\n\n        case types.star:\n          this.next();\n          return this.finishNode(node, \"ExistsTypeAnnotation\");\n\n        default:\n          if (this.state.type.keyword === \"typeof\") {\n            return this.flowParseTypeofType();\n          } else if (this.state.type.keyword) {\n            const label = this.state.type.label;\n            this.next();\n            return super.createIdentifier(node, label);\n          }\n\n      }\n\n      throw this.unexpected();\n    }\n\n    flowParsePostfixType() {\n      const startPos = this.state.start,\n            startLoc = this.state.startLoc;\n      let type = this.flowParsePrimaryType();\n\n      while (this.match(types.bracketL) && !this.canInsertSemicolon()) {\n        const node = this.startNodeAt(startPos, startLoc);\n        node.elementType = type;\n        this.expect(types.bracketL);\n        this.expect(types.bracketR);\n        type = this.finishNode(node, \"ArrayTypeAnnotation\");\n      }\n\n      return type;\n    }\n\n    flowParsePrefixType() {\n      const node = this.startNode();\n\n      if (this.eat(types.question)) {\n        node.typeAnnotation = this.flowParsePrefixType();\n        return this.finishNode(node, \"NullableTypeAnnotation\");\n      } else {\n        return this.flowParsePostfixType();\n      }\n    }\n\n    flowParseAnonFunctionWithoutParens() {\n      const param = this.flowParsePrefixType();\n\n      if (!this.state.noAnonFunctionType && this.eat(types.arrow)) {\n        const node = this.startNodeAt(param.start, param.loc.start);\n        node.params = [this.reinterpretTypeAsFunctionTypeParam(param)];\n        node.rest = null;\n        node.this = null;\n        node.returnType = this.flowParseType();\n        node.typeParameters = null;\n        return this.finishNode(node, \"FunctionTypeAnnotation\");\n      }\n\n      return param;\n    }\n\n    flowParseIntersectionType() {\n      const node = this.startNode();\n      this.eat(types.bitwiseAND);\n      const type = this.flowParseAnonFunctionWithoutParens();\n      node.types = [type];\n\n      while (this.eat(types.bitwiseAND)) {\n        node.types.push(this.flowParseAnonFunctionWithoutParens());\n      }\n\n      return node.types.length === 1 ? type : this.finishNode(node, \"IntersectionTypeAnnotation\");\n    }\n\n    flowParseUnionType() {\n      const node = this.startNode();\n      this.eat(types.bitwiseOR);\n      const type = this.flowParseIntersectionType();\n      node.types = [type];\n\n      while (this.eat(types.bitwiseOR)) {\n        node.types.push(this.flowParseIntersectionType());\n      }\n\n      return node.types.length === 1 ? type : this.finishNode(node, \"UnionTypeAnnotation\");\n    }\n\n    flowParseType() {\n      const oldInType = this.state.inType;\n      this.state.inType = true;\n      const type = this.flowParseUnionType();\n      this.state.inType = oldInType;\n      this.state.exprAllowed = this.state.exprAllowed || this.state.noAnonFunctionType;\n      return type;\n    }\n\n    flowParseTypeOrImplicitInstantiation() {\n      if (this.state.type === types.name && this.state.value === \"_\") {\n        const startPos = this.state.start;\n        const startLoc = this.state.startLoc;\n        const node = this.parseIdentifier();\n        return this.flowParseGenericType(startPos, startLoc, node);\n      } else {\n        return this.flowParseType();\n      }\n    }\n\n    flowParseTypeAnnotation() {\n      const node = this.startNode();\n      node.typeAnnotation = this.flowParseTypeInitialiser();\n      return this.finishNode(node, \"TypeAnnotation\");\n    }\n\n    flowParseTypeAnnotatableIdentifier(allowPrimitiveOverride) {\n      const ident = allowPrimitiveOverride ? this.parseIdentifier() : this.flowParseRestrictedIdentifier();\n\n      if (this.match(types.colon)) {\n        ident.typeAnnotation = this.flowParseTypeAnnotation();\n        this.resetEndLocation(ident);\n      }\n\n      return ident;\n    }\n\n    typeCastToParameter(node) {\n      node.expression.typeAnnotation = node.typeAnnotation;\n      this.resetEndLocation(node.expression, node.typeAnnotation.end, node.typeAnnotation.loc.end);\n      return node.expression;\n    }\n\n    flowParseVariance() {\n      let variance = null;\n\n      if (this.match(types.plusMin)) {\n        variance = this.startNode();\n\n        if (this.state.value === \"+\") {\n          variance.kind = \"plus\";\n        } else {\n          variance.kind = \"minus\";\n        }\n\n        this.next();\n        this.finishNode(variance, \"Variance\");\n      }\n\n      return variance;\n    }\n\n    parseFunctionBody(node, allowExpressionBody, isMethod = false) {\n      if (allowExpressionBody) {\n        return this.forwardNoArrowParamsConversionAt(node, () => super.parseFunctionBody(node, true, isMethod));\n      }\n\n      return super.parseFunctionBody(node, false, isMethod);\n    }\n\n    parseFunctionBodyAndFinish(node, type, isMethod = false) {\n      if (this.match(types.colon)) {\n        const typeNode = this.startNode();\n        [typeNode.typeAnnotation, node.predicate] = this.flowParseTypeAndPredicateInitialiser();\n        node.returnType = typeNode.typeAnnotation ? this.finishNode(typeNode, \"TypeAnnotation\") : null;\n      }\n\n      super.parseFunctionBodyAndFinish(node, type, isMethod);\n    }\n\n    parseStatement(context, topLevel) {\n      if (this.state.strict && this.match(types.name) && this.state.value === \"interface\") {\n        const lookahead = this.lookahead();\n\n        if (lookahead.type === types.name || isKeyword(lookahead.value)) {\n          const node = this.startNode();\n          this.next();\n          return this.flowParseInterface(node);\n        }\n      } else if (this.shouldParseEnums() && this.isContextual(\"enum\")) {\n        const node = this.startNode();\n        this.next();\n        return this.flowParseEnumDeclaration(node);\n      }\n\n      const stmt = super.parseStatement(context, topLevel);\n\n      if (this.flowPragma === undefined && !this.isValidDirective(stmt)) {\n        this.flowPragma = null;\n      }\n\n      return stmt;\n    }\n\n    parseExpressionStatement(node, expr) {\n      if (expr.type === \"Identifier\") {\n        if (expr.name === \"declare\") {\n          if (this.match(types._class) || this.match(types.name) || this.match(types._function) || this.match(types._var) || this.match(types._export)) {\n            return this.flowParseDeclare(node);\n          }\n        } else if (this.match(types.name)) {\n          if (expr.name === \"interface\") {\n            return this.flowParseInterface(node);\n          } else if (expr.name === \"type\") {\n            return this.flowParseTypeAlias(node);\n          } else if (expr.name === \"opaque\") {\n            return this.flowParseOpaqueType(node, false);\n          }\n        }\n      }\n\n      return super.parseExpressionStatement(node, expr);\n    }\n\n    shouldParseExportDeclaration() {\n      return this.isContextual(\"type\") || this.isContextual(\"interface\") || this.isContextual(\"opaque\") || this.shouldParseEnums() && this.isContextual(\"enum\") || super.shouldParseExportDeclaration();\n    }\n\n    isExportDefaultSpecifier() {\n      if (this.match(types.name) && (this.state.value === \"type\" || this.state.value === \"interface\" || this.state.value === \"opaque\" || this.shouldParseEnums() && this.state.value === \"enum\")) {\n        return false;\n      }\n\n      return super.isExportDefaultSpecifier();\n    }\n\n    parseExportDefaultExpression() {\n      if (this.shouldParseEnums() && this.isContextual(\"enum\")) {\n        const node = this.startNode();\n        this.next();\n        return this.flowParseEnumDeclaration(node);\n      }\n\n      return super.parseExportDefaultExpression();\n    }\n\n    parseConditional(expr, startPos, startLoc, refNeedsArrowPos) {\n      if (!this.match(types.question)) return expr;\n\n      if (refNeedsArrowPos) {\n        const result = this.tryParse(() => super.parseConditional(expr, startPos, startLoc));\n\n        if (!result.node) {\n          refNeedsArrowPos.start = result.error.pos || this.state.start;\n          return expr;\n        }\n\n        if (result.error) this.state = result.failState;\n        return result.node;\n      }\n\n      this.expect(types.question);\n      const state = this.state.clone();\n      const originalNoArrowAt = this.state.noArrowAt;\n      const node = this.startNodeAt(startPos, startLoc);\n      let {\n        consequent,\n        failed\n      } = this.tryParseConditionalConsequent();\n      let [valid, invalid] = this.getArrowLikeExpressions(consequent);\n\n      if (failed || invalid.length > 0) {\n        const noArrowAt = [...originalNoArrowAt];\n\n        if (invalid.length > 0) {\n          this.state = state;\n          this.state.noArrowAt = noArrowAt;\n\n          for (let i = 0; i < invalid.length; i++) {\n            noArrowAt.push(invalid[i].start);\n          }\n\n          ({\n            consequent,\n            failed\n          } = this.tryParseConditionalConsequent());\n          [valid, invalid] = this.getArrowLikeExpressions(consequent);\n        }\n\n        if (failed && valid.length > 1) {\n          this.raise(state.start, FlowErrors.AmbiguousConditionalArrow);\n        }\n\n        if (failed && valid.length === 1) {\n          this.state = state;\n          this.state.noArrowAt = noArrowAt.concat(valid[0].start);\n          ({\n            consequent,\n            failed\n          } = this.tryParseConditionalConsequent());\n        }\n      }\n\n      this.getArrowLikeExpressions(consequent, true);\n      this.state.noArrowAt = originalNoArrowAt;\n      this.expect(types.colon);\n      node.test = expr;\n      node.consequent = consequent;\n      node.alternate = this.forwardNoArrowParamsConversionAt(node, () => this.parseMaybeAssign(undefined, undefined, undefined));\n      return this.finishNode(node, \"ConditionalExpression\");\n    }\n\n    tryParseConditionalConsequent() {\n      this.state.noArrowParamsConversionAt.push(this.state.start);\n      const consequent = this.parseMaybeAssignAllowIn();\n      const failed = !this.match(types.colon);\n      this.state.noArrowParamsConversionAt.pop();\n      return {\n        consequent,\n        failed\n      };\n    }\n\n    getArrowLikeExpressions(node, disallowInvalid) {\n      const stack = [node];\n      const arrows = [];\n\n      while (stack.length !== 0) {\n        const node = stack.pop();\n\n        if (node.type === \"ArrowFunctionExpression\") {\n          if (node.typeParameters || !node.returnType) {\n            this.finishArrowValidation(node);\n          } else {\n            arrows.push(node);\n          }\n\n          stack.push(node.body);\n        } else if (node.type === \"ConditionalExpression\") {\n          stack.push(node.consequent);\n          stack.push(node.alternate);\n        }\n      }\n\n      if (disallowInvalid) {\n        arrows.forEach(node => this.finishArrowValidation(node));\n        return [arrows, []];\n      }\n\n      return partition(arrows, node => node.params.every(param => this.isAssignable(param, true)));\n    }\n\n    finishArrowValidation(node) {\n      var _node$extra;\n\n      this.toAssignableList(node.params, (_node$extra = node.extra) == null ? void 0 : _node$extra.trailingComma, false);\n      this.scope.enter(SCOPE_FUNCTION | SCOPE_ARROW);\n      super.checkParams(node, false, true);\n      this.scope.exit();\n    }\n\n    forwardNoArrowParamsConversionAt(node, parse) {\n      let result;\n\n      if (this.state.noArrowParamsConversionAt.indexOf(node.start) !== -1) {\n        this.state.noArrowParamsConversionAt.push(this.state.start);\n        result = parse();\n        this.state.noArrowParamsConversionAt.pop();\n      } else {\n        result = parse();\n      }\n\n      return result;\n    }\n\n    parseParenItem(node, startPos, startLoc) {\n      node = super.parseParenItem(node, startPos, startLoc);\n\n      if (this.eat(types.question)) {\n        node.optional = true;\n        this.resetEndLocation(node);\n      }\n\n      if (this.match(types.colon)) {\n        const typeCastNode = this.startNodeAt(startPos, startLoc);\n        typeCastNode.expression = node;\n        typeCastNode.typeAnnotation = this.flowParseTypeAnnotation();\n        return this.finishNode(typeCastNode, \"TypeCastExpression\");\n      }\n\n      return node;\n    }\n\n    assertModuleNodeAllowed(node) {\n      if (node.type === \"ImportDeclaration\" && (node.importKind === \"type\" || node.importKind === \"typeof\") || node.type === \"ExportNamedDeclaration\" && node.exportKind === \"type\" || node.type === \"ExportAllDeclaration\" && node.exportKind === \"type\") {\n        return;\n      }\n\n      super.assertModuleNodeAllowed(node);\n    }\n\n    parseExport(node) {\n      const decl = super.parseExport(node);\n\n      if (decl.type === \"ExportNamedDeclaration\" || decl.type === \"ExportAllDeclaration\") {\n        decl.exportKind = decl.exportKind || \"value\";\n      }\n\n      return decl;\n    }\n\n    parseExportDeclaration(node) {\n      if (this.isContextual(\"type\")) {\n        node.exportKind = \"type\";\n        const declarationNode = this.startNode();\n        this.next();\n\n        if (this.match(types.braceL)) {\n          node.specifiers = this.parseExportSpecifiers();\n          this.parseExportFrom(node);\n          return null;\n        } else {\n          return this.flowParseTypeAlias(declarationNode);\n        }\n      } else if (this.isContextual(\"opaque\")) {\n        node.exportKind = \"type\";\n        const declarationNode = this.startNode();\n        this.next();\n        return this.flowParseOpaqueType(declarationNode, false);\n      } else if (this.isContextual(\"interface\")) {\n        node.exportKind = \"type\";\n        const declarationNode = this.startNode();\n        this.next();\n        return this.flowParseInterface(declarationNode);\n      } else if (this.shouldParseEnums() && this.isContextual(\"enum\")) {\n        node.exportKind = \"value\";\n        const declarationNode = this.startNode();\n        this.next();\n        return this.flowParseEnumDeclaration(declarationNode);\n      } else {\n        return super.parseExportDeclaration(node);\n      }\n    }\n\n    eatExportStar(node) {\n      if (super.eatExportStar(...arguments)) return true;\n\n      if (this.isContextual(\"type\") && this.lookahead().type === types.star) {\n        node.exportKind = \"type\";\n        this.next();\n        this.next();\n        return true;\n      }\n\n      return false;\n    }\n\n    maybeParseExportNamespaceSpecifier(node) {\n      const pos = this.state.start;\n      const hasNamespace = super.maybeParseExportNamespaceSpecifier(node);\n\n      if (hasNamespace && node.exportKind === \"type\") {\n        this.unexpected(pos);\n      }\n\n      return hasNamespace;\n    }\n\n    parseClassId(node, isStatement, optionalId) {\n      super.parseClassId(node, isStatement, optionalId);\n\n      if (this.isRelational(\"<\")) {\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n      }\n    }\n\n    parseClassMember(classBody, member, state) {\n      const pos = this.state.start;\n\n      if (this.isContextual(\"declare\")) {\n        if (this.parseClassMemberFromModifier(classBody, member)) {\n          return;\n        }\n\n        member.declare = true;\n      }\n\n      super.parseClassMember(classBody, member, state);\n\n      if (member.declare) {\n        if (member.type !== \"ClassProperty\" && member.type !== \"ClassPrivateProperty\" && member.type !== \"PropertyDefinition\") {\n            this.raise(pos, FlowErrors.DeclareClassElement);\n          } else if (member.value) {\n          this.raise(member.value.start, FlowErrors.DeclareClassFieldInitializer);\n        }\n      }\n    }\n\n    getTokenFromCode(code) {\n      const next = this.input.charCodeAt(this.state.pos + 1);\n\n      if (code === 123 && next === 124) {\n        return this.finishOp(types.braceBarL, 2);\n      } else if (this.state.inType && (code === 62 || code === 60)) {\n        return this.finishOp(types.relational, 1);\n      } else if (this.state.inType && code === 63) {\n        return this.finishOp(types.question, 1);\n      } else if (isIteratorStart(code, next)) {\n        this.state.isIterator = true;\n        return super.readWord();\n      } else {\n        return super.getTokenFromCode(code);\n      }\n    }\n\n    isAssignable(node, isBinding) {\n      switch (node.type) {\n        case \"Identifier\":\n        case \"ObjectPattern\":\n        case \"ArrayPattern\":\n        case \"AssignmentPattern\":\n          return true;\n\n        case \"ObjectExpression\":\n          {\n            const last = node.properties.length - 1;\n            return node.properties.every((prop, i) => {\n              return prop.type !== \"ObjectMethod\" && (i === last || prop.type === \"SpreadElement\") && this.isAssignable(prop);\n            });\n          }\n\n        case \"ObjectProperty\":\n          return this.isAssignable(node.value);\n\n        case \"SpreadElement\":\n          return this.isAssignable(node.argument);\n\n        case \"ArrayExpression\":\n          return node.elements.every(element => this.isAssignable(element));\n\n        case \"AssignmentExpression\":\n          return node.operator === \"=\";\n\n        case \"ParenthesizedExpression\":\n        case \"TypeCastExpression\":\n          return this.isAssignable(node.expression);\n\n        case \"MemberExpression\":\n        case \"OptionalMemberExpression\":\n          return !isBinding;\n\n        default:\n          return false;\n      }\n    }\n\n    toAssignable(node, isLHS = false) {\n      if (node.type === \"TypeCastExpression\") {\n        return super.toAssignable(this.typeCastToParameter(node), isLHS);\n      } else {\n        return super.toAssignable(node, isLHS);\n      }\n    }\n\n    toAssignableList(exprList, trailingCommaPos, isLHS) {\n      for (let i = 0; i < exprList.length; i++) {\n        const expr = exprList[i];\n\n        if ((expr == null ? void 0 : expr.type) === \"TypeCastExpression\") {\n          exprList[i] = this.typeCastToParameter(expr);\n        }\n      }\n\n      return super.toAssignableList(exprList, trailingCommaPos, isLHS);\n    }\n\n    toReferencedList(exprList, isParenthesizedExpr) {\n      for (let i = 0; i < exprList.length; i++) {\n        var _expr$extra;\n\n        const expr = exprList[i];\n\n        if (expr && expr.type === \"TypeCastExpression\" && !((_expr$extra = expr.extra) != null && _expr$extra.parenthesized) && (exprList.length > 1 || !isParenthesizedExpr)) {\n          this.raise(expr.typeAnnotation.start, FlowErrors.TypeCastInPattern);\n        }\n      }\n\n      return exprList;\n    }\n\n    parseArrayLike(close, canBePattern, isTuple, refExpressionErrors) {\n      const node = super.parseArrayLike(close, canBePattern, isTuple, refExpressionErrors);\n\n      if (canBePattern && !this.state.maybeInArrowParameters) {\n        this.toReferencedList(node.elements);\n      }\n\n      return node;\n    }\n\n    checkLVal(expr, ...args) {\n      if (expr.type !== \"TypeCastExpression\") {\n        return super.checkLVal(expr, ...args);\n      }\n    }\n\n    parseClassProperty(node) {\n      if (this.match(types.colon)) {\n        node.typeAnnotation = this.flowParseTypeAnnotation();\n      }\n\n      return super.parseClassProperty(node);\n    }\n\n    parseClassPrivateProperty(node) {\n      if (this.match(types.colon)) {\n        node.typeAnnotation = this.flowParseTypeAnnotation();\n      }\n\n      return super.parseClassPrivateProperty(node);\n    }\n\n    isClassMethod() {\n      return this.isRelational(\"<\") || super.isClassMethod();\n    }\n\n    isClassProperty() {\n      return this.match(types.colon) || super.isClassProperty();\n    }\n\n    isNonstaticConstructor(method) {\n      return !this.match(types.colon) && super.isNonstaticConstructor(method);\n    }\n\n    isThisParam(param) {\n      return param.type === \"Identifier\" && param.name === \"this\";\n    }\n\n    pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper) {\n      if (method.variance) {\n        this.unexpected(method.variance.start);\n      }\n\n      delete method.variance;\n\n      if (this.isRelational(\"<\")) {\n        method.typeParameters = this.flowParseTypeParameterDeclaration();\n      }\n\n      super.pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper);\n\n      if (method.params && isConstructor) {\n        const params = method.params;\n\n        if (params.length > 0 && this.isThisParam(params[0])) {\n          this.raise(method.start, FlowErrors.ThisParamBannedInConstructor);\n        }\n      } else if (method.type === \"MethodDefinition\" && isConstructor && method.value.params) {\n        const params = method.value.params;\n\n        if (params.length > 0 && this.isThisParam(params[0])) {\n          this.raise(method.start, FlowErrors.ThisParamBannedInConstructor);\n        }\n      }\n    }\n\n    pushClassPrivateMethod(classBody, method, isGenerator, isAsync) {\n      if (method.variance) {\n        this.unexpected(method.variance.start);\n      }\n\n      delete method.variance;\n\n      if (this.isRelational(\"<\")) {\n        method.typeParameters = this.flowParseTypeParameterDeclaration();\n      }\n\n      super.pushClassPrivateMethod(classBody, method, isGenerator, isAsync);\n    }\n\n    parseClassSuper(node) {\n      super.parseClassSuper(node);\n\n      if (node.superClass && this.isRelational(\"<\")) {\n        node.superTypeParameters = this.flowParseTypeParameterInstantiation();\n      }\n\n      if (this.isContextual(\"implements\")) {\n        this.next();\n        const implemented = node.implements = [];\n\n        do {\n          const node = this.startNode();\n          node.id = this.flowParseRestrictedIdentifier(true);\n\n          if (this.isRelational(\"<\")) {\n            node.typeParameters = this.flowParseTypeParameterInstantiation();\n          } else {\n            node.typeParameters = null;\n          }\n\n          implemented.push(this.finishNode(node, \"ClassImplements\"));\n        } while (this.eat(types.comma));\n      }\n    }\n\n    checkGetterSetterParams(method) {\n      super.checkGetterSetterParams(method);\n      const params = this.getObjectOrClassMethodParams(method);\n\n      if (params.length > 0) {\n        const param = params[0];\n\n        if (this.isThisParam(param) && method.kind === \"get\") {\n          this.raise(param.start, FlowErrors.GetterMayNotHaveThisParam);\n        } else if (this.isThisParam(param)) {\n          this.raise(param.start, FlowErrors.SetterMayNotHaveThisParam);\n        }\n      }\n    }\n\n    parsePropertyName(node, isPrivateNameAllowed) {\n      const variance = this.flowParseVariance();\n      const key = super.parsePropertyName(node, isPrivateNameAllowed);\n      node.variance = variance;\n      return key;\n    }\n\n    parseObjPropValue(prop, startPos, startLoc, isGenerator, isAsync, isPattern, isAccessor, refExpressionErrors) {\n      if (prop.variance) {\n        this.unexpected(prop.variance.start);\n      }\n\n      delete prop.variance;\n      let typeParameters;\n\n      if (this.isRelational(\"<\") && !isAccessor) {\n        typeParameters = this.flowParseTypeParameterDeclaration();\n        if (!this.match(types.parenL)) this.unexpected();\n      }\n\n      super.parseObjPropValue(prop, startPos, startLoc, isGenerator, isAsync, isPattern, isAccessor, refExpressionErrors);\n\n      if (typeParameters) {\n        (prop.value || prop).typeParameters = typeParameters;\n      }\n    }\n\n    parseAssignableListItemTypes(param) {\n      if (this.eat(types.question)) {\n        if (param.type !== \"Identifier\") {\n          this.raise(param.start, FlowErrors.OptionalBindingPattern);\n        }\n\n        if (this.isThisParam(param)) {\n          this.raise(param.start, FlowErrors.ThisParamMayNotBeOptional);\n        }\n\n        param.optional = true;\n      }\n\n      if (this.match(types.colon)) {\n        param.typeAnnotation = this.flowParseTypeAnnotation();\n      } else if (this.isThisParam(param)) {\n        this.raise(param.start, FlowErrors.ThisParamAnnotationRequired);\n      }\n\n      if (this.match(types.eq) && this.isThisParam(param)) {\n        this.raise(param.start, FlowErrors.ThisParamNoDefault);\n      }\n\n      this.resetEndLocation(param);\n      return param;\n    }\n\n    parseMaybeDefault(startPos, startLoc, left) {\n      const node = super.parseMaybeDefault(startPos, startLoc, left);\n\n      if (node.type === \"AssignmentPattern\" && node.typeAnnotation && node.right.start < node.typeAnnotation.start) {\n        this.raise(node.typeAnnotation.start, FlowErrors.TypeBeforeInitializer);\n      }\n\n      return node;\n    }\n\n    shouldParseDefaultImport(node) {\n      if (!hasTypeImportKind(node)) {\n        return super.shouldParseDefaultImport(node);\n      }\n\n      return isMaybeDefaultImport(this.state);\n    }\n\n    parseImportSpecifierLocal(node, specifier, type, contextDescription) {\n      specifier.local = hasTypeImportKind(node) ? this.flowParseRestrictedIdentifier(true, true) : this.parseIdentifier();\n      this.checkLVal(specifier.local, contextDescription, BIND_LEXICAL);\n      node.specifiers.push(this.finishNode(specifier, type));\n    }\n\n    maybeParseDefaultImportSpecifier(node) {\n      node.importKind = \"value\";\n      let kind = null;\n\n      if (this.match(types._typeof)) {\n        kind = \"typeof\";\n      } else if (this.isContextual(\"type\")) {\n        kind = \"type\";\n      }\n\n      if (kind) {\n        const lh = this.lookahead();\n\n        if (kind === \"type\" && lh.type === types.star) {\n          this.unexpected(lh.start);\n        }\n\n        if (isMaybeDefaultImport(lh) || lh.type === types.braceL || lh.type === types.star) {\n          this.next();\n          node.importKind = kind;\n        }\n      }\n\n      return super.maybeParseDefaultImportSpecifier(node);\n    }\n\n    parseImportSpecifier(node) {\n      const specifier = this.startNode();\n      const firstIdentLoc = this.state.start;\n      const firstIdent = this.parseModuleExportName();\n      let specifierTypeKind = null;\n\n      if (firstIdent.type === \"Identifier\") {\n        if (firstIdent.name === \"type\") {\n          specifierTypeKind = \"type\";\n        } else if (firstIdent.name === \"typeof\") {\n          specifierTypeKind = \"typeof\";\n        }\n      }\n\n      let isBinding = false;\n\n      if (this.isContextual(\"as\") && !this.isLookaheadContextual(\"as\")) {\n        const as_ident = this.parseIdentifier(true);\n\n        if (specifierTypeKind !== null && !this.match(types.name) && !this.state.type.keyword) {\n          specifier.imported = as_ident;\n          specifier.importKind = specifierTypeKind;\n          specifier.local = as_ident.__clone();\n        } else {\n          specifier.imported = firstIdent;\n          specifier.importKind = null;\n          specifier.local = this.parseIdentifier();\n        }\n      } else if (specifierTypeKind !== null && (this.match(types.name) || this.state.type.keyword)) {\n        specifier.imported = this.parseIdentifier(true);\n        specifier.importKind = specifierTypeKind;\n\n        if (this.eatContextual(\"as\")) {\n          specifier.local = this.parseIdentifier();\n        } else {\n          isBinding = true;\n          specifier.local = specifier.imported.__clone();\n        }\n      } else {\n        if (firstIdent.type === \"StringLiteral\") {\n          throw this.raise(specifier.start, ErrorMessages.ImportBindingIsString, firstIdent.value);\n        }\n\n        isBinding = true;\n        specifier.imported = firstIdent;\n        specifier.importKind = null;\n        specifier.local = specifier.imported.__clone();\n      }\n\n      const nodeIsTypeImport = hasTypeImportKind(node);\n      const specifierIsTypeImport = hasTypeImportKind(specifier);\n\n      if (nodeIsTypeImport && specifierIsTypeImport) {\n        this.raise(firstIdentLoc, FlowErrors.ImportTypeShorthandOnlyInPureImport);\n      }\n\n      if (nodeIsTypeImport || specifierIsTypeImport) {\n        this.checkReservedType(specifier.local.name, specifier.local.start, true);\n      }\n\n      if (isBinding && !nodeIsTypeImport && !specifierIsTypeImport) {\n        this.checkReservedWord(specifier.local.name, specifier.start, true, true);\n      }\n\n      this.checkLVal(specifier.local, \"import specifier\", BIND_LEXICAL);\n      node.specifiers.push(this.finishNode(specifier, \"ImportSpecifier\"));\n    }\n\n    parseBindingAtom() {\n      switch (this.state.type) {\n        case types._this:\n          return this.parseIdentifier(true);\n\n        default:\n          return super.parseBindingAtom();\n      }\n    }\n\n    parseFunctionParams(node, allowModifiers) {\n      const kind = node.kind;\n\n      if (kind !== \"get\" && kind !== \"set\" && this.isRelational(\"<\")) {\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n      }\n\n      super.parseFunctionParams(node, allowModifiers);\n    }\n\n    parseVarId(decl, kind) {\n      super.parseVarId(decl, kind);\n\n      if (this.match(types.colon)) {\n        decl.id.typeAnnotation = this.flowParseTypeAnnotation();\n        this.resetEndLocation(decl.id);\n      }\n    }\n\n    parseAsyncArrowFromCallExpression(node, call) {\n      if (this.match(types.colon)) {\n        const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n        this.state.noAnonFunctionType = true;\n        node.returnType = this.flowParseTypeAnnotation();\n        this.state.noAnonFunctionType = oldNoAnonFunctionType;\n      }\n\n      return super.parseAsyncArrowFromCallExpression(node, call);\n    }\n\n    shouldParseAsyncArrow() {\n      return this.match(types.colon) || super.shouldParseAsyncArrow();\n    }\n\n    parseMaybeAssign(refExpressionErrors, afterLeftParse, refNeedsArrowPos) {\n      var _jsx;\n\n      let state = null;\n      let jsx;\n\n      if (this.hasPlugin(\"jsx\") && (this.match(types.jsxTagStart) || this.isRelational(\"<\"))) {\n        state = this.state.clone();\n        jsx = this.tryParse(() => super.parseMaybeAssign(refExpressionErrors, afterLeftParse, refNeedsArrowPos), state);\n        if (!jsx.error) return jsx.node;\n        const {\n          context\n        } = this.state;\n\n        if (context[context.length - 1] === types$1.j_oTag) {\n          context.length -= 2;\n        } else if (context[context.length - 1] === types$1.j_expr) {\n          context.length -= 1;\n        }\n      }\n\n      if ((_jsx = jsx) != null && _jsx.error || this.isRelational(\"<\")) {\n        var _jsx2, _jsx3;\n\n        state = state || this.state.clone();\n        let typeParameters;\n        const arrow = this.tryParse(abort => {\n          var _arrowExpression$extr;\n\n          typeParameters = this.flowParseTypeParameterDeclaration();\n          const arrowExpression = this.forwardNoArrowParamsConversionAt(typeParameters, () => {\n            const result = super.parseMaybeAssign(refExpressionErrors, afterLeftParse, refNeedsArrowPos);\n            this.resetStartLocationFromNode(result, typeParameters);\n            return result;\n          });\n\n          if (arrowExpression.type !== \"ArrowFunctionExpression\" && (_arrowExpression$extr = arrowExpression.extra) != null && _arrowExpression$extr.parenthesized) {\n            abort();\n          }\n\n          const expr = this.maybeUnwrapTypeCastExpression(arrowExpression);\n          expr.typeParameters = typeParameters;\n          this.resetStartLocationFromNode(expr, typeParameters);\n          return arrowExpression;\n        }, state);\n        let arrowExpression = null;\n\n        if (arrow.node && this.maybeUnwrapTypeCastExpression(arrow.node).type === \"ArrowFunctionExpression\") {\n          if (!arrow.error && !arrow.aborted) {\n            if (arrow.node.async) {\n              this.raise(typeParameters.start, FlowErrors.UnexpectedTypeParameterBeforeAsyncArrowFunction);\n            }\n\n            return arrow.node;\n          }\n\n          arrowExpression = arrow.node;\n        }\n\n        if ((_jsx2 = jsx) != null && _jsx2.node) {\n          this.state = jsx.failState;\n          return jsx.node;\n        }\n\n        if (arrowExpression) {\n          this.state = arrow.failState;\n          return arrowExpression;\n        }\n\n        if ((_jsx3 = jsx) != null && _jsx3.thrown) throw jsx.error;\n        if (arrow.thrown) throw arrow.error;\n        throw this.raise(typeParameters.start, FlowErrors.UnexpectedTokenAfterTypeParameter);\n      }\n\n      return super.parseMaybeAssign(refExpressionErrors, afterLeftParse, refNeedsArrowPos);\n    }\n\n    parseArrow(node) {\n      if (this.match(types.colon)) {\n        const result = this.tryParse(() => {\n          const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n          this.state.noAnonFunctionType = true;\n          const typeNode = this.startNode();\n          [typeNode.typeAnnotation, node.predicate] = this.flowParseTypeAndPredicateInitialiser();\n          this.state.noAnonFunctionType = oldNoAnonFunctionType;\n          if (this.canInsertSemicolon()) this.unexpected();\n          if (!this.match(types.arrow)) this.unexpected();\n          return typeNode;\n        });\n        if (result.thrown) return null;\n        if (result.error) this.state = result.failState;\n        node.returnType = result.node.typeAnnotation ? this.finishNode(result.node, \"TypeAnnotation\") : null;\n      }\n\n      return super.parseArrow(node);\n    }\n\n    shouldParseArrow() {\n      return this.match(types.colon) || super.shouldParseArrow();\n    }\n\n    setArrowFunctionParameters(node, params) {\n      if (this.state.noArrowParamsConversionAt.indexOf(node.start) !== -1) {\n        node.params = params;\n      } else {\n        super.setArrowFunctionParameters(node, params);\n      }\n    }\n\n    checkParams(node, allowDuplicates, isArrowFunction) {\n      if (isArrowFunction && this.state.noArrowParamsConversionAt.indexOf(node.start) !== -1) {\n        return;\n      }\n\n      for (let i = 0; i < node.params.length; i++) {\n        if (this.isThisParam(node.params[i]) && i > 0) {\n          this.raise(node.params[i].start, FlowErrors.ThisParamMustBeFirst);\n        }\n      }\n\n      return super.checkParams(...arguments);\n    }\n\n    parseParenAndDistinguishExpression(canBeArrow) {\n      return super.parseParenAndDistinguishExpression(canBeArrow && this.state.noArrowAt.indexOf(this.state.start) === -1);\n    }\n\n    parseSubscripts(base, startPos, startLoc, noCalls) {\n      if (base.type === \"Identifier\" && base.name === \"async\" && this.state.noArrowAt.indexOf(startPos) !== -1) {\n        this.next();\n        const node = this.startNodeAt(startPos, startLoc);\n        node.callee = base;\n        node.arguments = this.parseCallExpressionArguments(types.parenR, false);\n        base = this.finishNode(node, \"CallExpression\");\n      } else if (base.type === \"Identifier\" && base.name === \"async\" && this.isRelational(\"<\")) {\n        const state = this.state.clone();\n        const arrow = this.tryParse(abort => this.parseAsyncArrowWithTypeParameters(startPos, startLoc) || abort(), state);\n        if (!arrow.error && !arrow.aborted) return arrow.node;\n        const result = this.tryParse(() => super.parseSubscripts(base, startPos, startLoc, noCalls), state);\n        if (result.node && !result.error) return result.node;\n\n        if (arrow.node) {\n          this.state = arrow.failState;\n          return arrow.node;\n        }\n\n        if (result.node) {\n          this.state = result.failState;\n          return result.node;\n        }\n\n        throw arrow.error || result.error;\n      }\n\n      return super.parseSubscripts(base, startPos, startLoc, noCalls);\n    }\n\n    parseSubscript(base, startPos, startLoc, noCalls, subscriptState) {\n      if (this.match(types.questionDot) && this.isLookaheadToken_lt()) {\n        subscriptState.optionalChainMember = true;\n\n        if (noCalls) {\n          subscriptState.stop = true;\n          return base;\n        }\n\n        this.next();\n        const node = this.startNodeAt(startPos, startLoc);\n        node.callee = base;\n        node.typeArguments = this.flowParseTypeParameterInstantiation();\n        this.expect(types.parenL);\n        node.arguments = this.parseCallExpressionArguments(types.parenR, false);\n        node.optional = true;\n        return this.finishCallExpression(node, true);\n      } else if (!noCalls && this.shouldParseTypes() && this.isRelational(\"<\")) {\n        const node = this.startNodeAt(startPos, startLoc);\n        node.callee = base;\n        const result = this.tryParse(() => {\n          node.typeArguments = this.flowParseTypeParameterInstantiationCallOrNew();\n          this.expect(types.parenL);\n          node.arguments = this.parseCallExpressionArguments(types.parenR, false);\n          if (subscriptState.optionalChainMember) node.optional = false;\n          return this.finishCallExpression(node, subscriptState.optionalChainMember);\n        });\n\n        if (result.node) {\n          if (result.error) this.state = result.failState;\n          return result.node;\n        }\n      }\n\n      return super.parseSubscript(base, startPos, startLoc, noCalls, subscriptState);\n    }\n\n    parseNewArguments(node) {\n      let targs = null;\n\n      if (this.shouldParseTypes() && this.isRelational(\"<\")) {\n        targs = this.tryParse(() => this.flowParseTypeParameterInstantiationCallOrNew()).node;\n      }\n\n      node.typeArguments = targs;\n      super.parseNewArguments(node);\n    }\n\n    parseAsyncArrowWithTypeParameters(startPos, startLoc) {\n      const node = this.startNodeAt(startPos, startLoc);\n      this.parseFunctionParams(node);\n      if (!this.parseArrow(node)) return;\n      return this.parseArrowExpression(node, undefined, true);\n    }\n\n    readToken_mult_modulo(code) {\n      const next = this.input.charCodeAt(this.state.pos + 1);\n\n      if (code === 42 && next === 47 && this.state.hasFlowComment) {\n        this.state.hasFlowComment = false;\n        this.state.pos += 2;\n        this.nextToken();\n        return;\n      }\n\n      super.readToken_mult_modulo(code);\n    }\n\n    readToken_pipe_amp(code) {\n      const next = this.input.charCodeAt(this.state.pos + 1);\n\n      if (code === 124 && next === 125) {\n        this.finishOp(types.braceBarR, 2);\n        return;\n      }\n\n      super.readToken_pipe_amp(code);\n    }\n\n    parseTopLevel(file, program) {\n      const fileNode = super.parseTopLevel(file, program);\n\n      if (this.state.hasFlowComment) {\n        this.raise(this.state.pos, FlowErrors.UnterminatedFlowComment);\n      }\n\n      return fileNode;\n    }\n\n    skipBlockComment() {\n      if (this.hasPlugin(\"flowComments\") && this.skipFlowComment()) {\n        if (this.state.hasFlowComment) {\n          this.unexpected(null, FlowErrors.NestedFlowComment);\n        }\n\n        this.hasFlowCommentCompletion();\n        this.state.pos += this.skipFlowComment();\n        this.state.hasFlowComment = true;\n        return;\n      }\n\n      if (this.state.hasFlowComment) {\n        const end = this.input.indexOf(\"*-/\", this.state.pos += 2);\n\n        if (end === -1) {\n          throw this.raise(this.state.pos - 2, ErrorMessages.UnterminatedComment);\n        }\n\n        this.state.pos = end + 3;\n        return;\n      }\n\n      super.skipBlockComment();\n    }\n\n    skipFlowComment() {\n      const {\n        pos\n      } = this.state;\n      let shiftToFirstNonWhiteSpace = 2;\n\n      while ([32, 9].includes(this.input.charCodeAt(pos + shiftToFirstNonWhiteSpace))) {\n        shiftToFirstNonWhiteSpace++;\n      }\n\n      const ch2 = this.input.charCodeAt(shiftToFirstNonWhiteSpace + pos);\n      const ch3 = this.input.charCodeAt(shiftToFirstNonWhiteSpace + pos + 1);\n\n      if (ch2 === 58 && ch3 === 58) {\n        return shiftToFirstNonWhiteSpace + 2;\n      }\n\n      if (this.input.slice(shiftToFirstNonWhiteSpace + pos, shiftToFirstNonWhiteSpace + pos + 12) === \"flow-include\") {\n        return shiftToFirstNonWhiteSpace + 12;\n      }\n\n      if (ch2 === 58 && ch3 !== 58) {\n        return shiftToFirstNonWhiteSpace;\n      }\n\n      return false;\n    }\n\n    hasFlowCommentCompletion() {\n      const end = this.input.indexOf(\"*/\", this.state.pos);\n\n      if (end === -1) {\n        throw this.raise(this.state.pos, ErrorMessages.UnterminatedComment);\n      }\n    }\n\n    flowEnumErrorBooleanMemberNotInitialized(pos, {\n      enumName,\n      memberName\n    }) {\n      this.raise(pos, FlowErrors.EnumBooleanMemberNotInitialized, memberName, enumName);\n    }\n\n    flowEnumErrorInvalidMemberName(pos, {\n      enumName,\n      memberName\n    }) {\n      const suggestion = memberName[0].toUpperCase() + memberName.slice(1);\n      this.raise(pos, FlowErrors.EnumInvalidMemberName, memberName, suggestion, enumName);\n    }\n\n    flowEnumErrorDuplicateMemberName(pos, {\n      enumName,\n      memberName\n    }) {\n      this.raise(pos, FlowErrors.EnumDuplicateMemberName, memberName, enumName);\n    }\n\n    flowEnumErrorInconsistentMemberValues(pos, {\n      enumName\n    }) {\n      this.raise(pos, FlowErrors.EnumInconsistentMemberValues, enumName);\n    }\n\n    flowEnumErrorInvalidExplicitType(pos, {\n      enumName,\n      suppliedType\n    }) {\n      return this.raise(pos, suppliedType === null ? FlowErrors.EnumInvalidExplicitTypeUnknownSupplied : FlowErrors.EnumInvalidExplicitType, enumName, suppliedType);\n    }\n\n    flowEnumErrorInvalidMemberInitializer(pos, {\n      enumName,\n      explicitType,\n      memberName\n    }) {\n      let message = null;\n\n      switch (explicitType) {\n        case \"boolean\":\n        case \"number\":\n        case \"string\":\n          message = FlowErrors.EnumInvalidMemberInitializerPrimaryType;\n          break;\n\n        case \"symbol\":\n          message = FlowErrors.EnumInvalidMemberInitializerSymbolType;\n          break;\n\n        default:\n          message = FlowErrors.EnumInvalidMemberInitializerUnknownType;\n      }\n\n      return this.raise(pos, message, enumName, memberName, explicitType);\n    }\n\n    flowEnumErrorNumberMemberNotInitialized(pos, {\n      enumName,\n      memberName\n    }) {\n      this.raise(pos, FlowErrors.EnumNumberMemberNotInitialized, enumName, memberName);\n    }\n\n    flowEnumErrorStringMemberInconsistentlyInitailized(pos, {\n      enumName\n    }) {\n      this.raise(pos, FlowErrors.EnumStringMemberInconsistentlyInitailized, enumName);\n    }\n\n    flowEnumMemberInit() {\n      const startPos = this.state.start;\n\n      const endOfInit = () => this.match(types.comma) || this.match(types.braceR);\n\n      switch (this.state.type) {\n        case types.num:\n          {\n            const literal = this.parseLiteral(this.state.value, \"NumericLiteral\");\n\n            if (endOfInit()) {\n              return {\n                type: \"number\",\n                pos: literal.start,\n                value: literal\n              };\n            }\n\n            return {\n              type: \"invalid\",\n              pos: startPos\n            };\n          }\n\n        case types.string:\n          {\n            const literal = this.parseLiteral(this.state.value, \"StringLiteral\");\n\n            if (endOfInit()) {\n              return {\n                type: \"string\",\n                pos: literal.start,\n                value: literal\n              };\n            }\n\n            return {\n              type: \"invalid\",\n              pos: startPos\n            };\n          }\n\n        case types._true:\n        case types._false:\n          {\n            const literal = this.parseBooleanLiteral();\n\n            if (endOfInit()) {\n              return {\n                type: \"boolean\",\n                pos: literal.start,\n                value: literal\n              };\n            }\n\n            return {\n              type: \"invalid\",\n              pos: startPos\n            };\n          }\n\n        default:\n          return {\n            type: \"invalid\",\n            pos: startPos\n          };\n      }\n    }\n\n    flowEnumMemberRaw() {\n      const pos = this.state.start;\n      const id = this.parseIdentifier(true);\n      const init = this.eat(types.eq) ? this.flowEnumMemberInit() : {\n        type: \"none\",\n        pos\n      };\n      return {\n        id,\n        init\n      };\n    }\n\n    flowEnumCheckExplicitTypeMismatch(pos, context, expectedType) {\n      const {\n        explicitType\n      } = context;\n\n      if (explicitType === null) {\n        return;\n      }\n\n      if (explicitType !== expectedType) {\n        this.flowEnumErrorInvalidMemberInitializer(pos, context);\n      }\n    }\n\n    flowEnumMembers({\n      enumName,\n      explicitType\n    }) {\n      const seenNames = new Set();\n      const members = {\n        booleanMembers: [],\n        numberMembers: [],\n        stringMembers: [],\n        defaultedMembers: []\n      };\n      let hasUnknownMembers = false;\n\n      while (!this.match(types.braceR)) {\n        if (this.eat(types.ellipsis)) {\n          hasUnknownMembers = true;\n          break;\n        }\n\n        const memberNode = this.startNode();\n        const {\n          id,\n          init\n        } = this.flowEnumMemberRaw();\n        const memberName = id.name;\n\n        if (memberName === \"\") {\n          continue;\n        }\n\n        if (/^[a-z]/.test(memberName)) {\n          this.flowEnumErrorInvalidMemberName(id.start, {\n            enumName,\n            memberName\n          });\n        }\n\n        if (seenNames.has(memberName)) {\n          this.flowEnumErrorDuplicateMemberName(id.start, {\n            enumName,\n            memberName\n          });\n        }\n\n        seenNames.add(memberName);\n        const context = {\n          enumName,\n          explicitType,\n          memberName\n        };\n        memberNode.id = id;\n\n        switch (init.type) {\n          case \"boolean\":\n            {\n              this.flowEnumCheckExplicitTypeMismatch(init.pos, context, \"boolean\");\n              memberNode.init = init.value;\n              members.booleanMembers.push(this.finishNode(memberNode, \"EnumBooleanMember\"));\n              break;\n            }\n\n          case \"number\":\n            {\n              this.flowEnumCheckExplicitTypeMismatch(init.pos, context, \"number\");\n              memberNode.init = init.value;\n              members.numberMembers.push(this.finishNode(memberNode, \"EnumNumberMember\"));\n              break;\n            }\n\n          case \"string\":\n            {\n              this.flowEnumCheckExplicitTypeMismatch(init.pos, context, \"string\");\n              memberNode.init = init.value;\n              members.stringMembers.push(this.finishNode(memberNode, \"EnumStringMember\"));\n              break;\n            }\n\n          case \"invalid\":\n            {\n              throw this.flowEnumErrorInvalidMemberInitializer(init.pos, context);\n            }\n\n          case \"none\":\n            {\n              switch (explicitType) {\n                case \"boolean\":\n                  this.flowEnumErrorBooleanMemberNotInitialized(init.pos, context);\n                  break;\n\n                case \"number\":\n                  this.flowEnumErrorNumberMemberNotInitialized(init.pos, context);\n                  break;\n\n                default:\n                  members.defaultedMembers.push(this.finishNode(memberNode, \"EnumDefaultedMember\"));\n              }\n            }\n        }\n\n        if (!this.match(types.braceR)) {\n          this.expect(types.comma);\n        }\n      }\n\n      return {\n        members,\n        hasUnknownMembers\n      };\n    }\n\n    flowEnumStringMembers(initializedMembers, defaultedMembers, {\n      enumName\n    }) {\n      if (initializedMembers.length === 0) {\n        return defaultedMembers;\n      } else if (defaultedMembers.length === 0) {\n        return initializedMembers;\n      } else if (defaultedMembers.length > initializedMembers.length) {\n        for (const member of initializedMembers) {\n          this.flowEnumErrorStringMemberInconsistentlyInitailized(member.start, {\n            enumName\n          });\n        }\n\n        return defaultedMembers;\n      } else {\n        for (const member of defaultedMembers) {\n          this.flowEnumErrorStringMemberInconsistentlyInitailized(member.start, {\n            enumName\n          });\n        }\n\n        return initializedMembers;\n      }\n    }\n\n    flowEnumParseExplicitType({\n      enumName\n    }) {\n      if (this.eatContextual(\"of\")) {\n        if (!this.match(types.name)) {\n          throw this.flowEnumErrorInvalidExplicitType(this.state.start, {\n            enumName,\n            suppliedType: null\n          });\n        }\n\n        const {\n          value\n        } = this.state;\n        this.next();\n\n        if (value !== \"boolean\" && value !== \"number\" && value !== \"string\" && value !== \"symbol\") {\n          this.flowEnumErrorInvalidExplicitType(this.state.start, {\n            enumName,\n            suppliedType: value\n          });\n        }\n\n        return value;\n      }\n\n      return null;\n    }\n\n    flowEnumBody(node, {\n      enumName,\n      nameLoc\n    }) {\n      const explicitType = this.flowEnumParseExplicitType({\n        enumName\n      });\n      this.expect(types.braceL);\n      const {\n        members,\n        hasUnknownMembers\n      } = this.flowEnumMembers({\n        enumName,\n        explicitType\n      });\n      node.hasUnknownMembers = hasUnknownMembers;\n\n      switch (explicitType) {\n        case \"boolean\":\n          node.explicitType = true;\n          node.members = members.booleanMembers;\n          this.expect(types.braceR);\n          return this.finishNode(node, \"EnumBooleanBody\");\n\n        case \"number\":\n          node.explicitType = true;\n          node.members = members.numberMembers;\n          this.expect(types.braceR);\n          return this.finishNode(node, \"EnumNumberBody\");\n\n        case \"string\":\n          node.explicitType = true;\n          node.members = this.flowEnumStringMembers(members.stringMembers, members.defaultedMembers, {\n            enumName\n          });\n          this.expect(types.braceR);\n          return this.finishNode(node, \"EnumStringBody\");\n\n        case \"symbol\":\n          node.members = members.defaultedMembers;\n          this.expect(types.braceR);\n          return this.finishNode(node, \"EnumSymbolBody\");\n\n        default:\n          {\n            const empty = () => {\n              node.members = [];\n              this.expect(types.braceR);\n              return this.finishNode(node, \"EnumStringBody\");\n            };\n\n            node.explicitType = false;\n            const boolsLen = members.booleanMembers.length;\n            const numsLen = members.numberMembers.length;\n            const strsLen = members.stringMembers.length;\n            const defaultedLen = members.defaultedMembers.length;\n\n            if (!boolsLen && !numsLen && !strsLen && !defaultedLen) {\n              return empty();\n            } else if (!boolsLen && !numsLen) {\n              node.members = this.flowEnumStringMembers(members.stringMembers, members.defaultedMembers, {\n                enumName\n              });\n              this.expect(types.braceR);\n              return this.finishNode(node, \"EnumStringBody\");\n            } else if (!numsLen && !strsLen && boolsLen >= defaultedLen) {\n              for (const member of members.defaultedMembers) {\n                this.flowEnumErrorBooleanMemberNotInitialized(member.start, {\n                  enumName,\n                  memberName: member.id.name\n                });\n              }\n\n              node.members = members.booleanMembers;\n              this.expect(types.braceR);\n              return this.finishNode(node, \"EnumBooleanBody\");\n            } else if (!boolsLen && !strsLen && numsLen >= defaultedLen) {\n              for (const member of members.defaultedMembers) {\n                this.flowEnumErrorNumberMemberNotInitialized(member.start, {\n                  enumName,\n                  memberName: member.id.name\n                });\n              }\n\n              node.members = members.numberMembers;\n              this.expect(types.braceR);\n              return this.finishNode(node, \"EnumNumberBody\");\n            } else {\n              this.flowEnumErrorInconsistentMemberValues(nameLoc, {\n                enumName\n              });\n              return empty();\n            }\n          }\n      }\n    }\n\n    flowParseEnumDeclaration(node) {\n      const id = this.parseIdentifier();\n      node.id = id;\n      node.body = this.flowEnumBody(this.startNode(), {\n        enumName: id.name,\n        nameLoc: id.start\n      });\n      return this.finishNode(node, \"EnumDeclaration\");\n    }\n\n    updateContext(prevType) {\n      if (this.match(types.name) && this.state.value === \"of\" && prevType === types.name && this.input.slice(this.state.lastTokStart, this.state.lastTokEnd) === \"interface\") {\n        this.state.exprAllowed = false;\n      } else {\n        super.updateContext(prevType);\n      }\n    }\n\n    isLookaheadToken_lt() {\n      const next = this.nextTokenStart();\n\n      if (this.input.charCodeAt(next) === 60) {\n        const afterNext = this.input.charCodeAt(next + 1);\n        return afterNext !== 60 && afterNext !== 61;\n      }\n\n      return false;\n    }\n\n    maybeUnwrapTypeCastExpression(node) {\n      return node.type === \"TypeCastExpression\" ? node.expression : node;\n    }\n\n  }, _temp;\n});\n\nconst entities = {\n  quot: \"\\u0022\",\n  amp: \"&\",\n  apos: \"\\u0027\",\n  lt: \"<\",\n  gt: \">\",\n  nbsp: \"\\u00A0\",\n  iexcl: \"\\u00A1\",\n  cent: \"\\u00A2\",\n  pound: \"\\u00A3\",\n  curren: \"\\u00A4\",\n  yen: \"\\u00A5\",\n  brvbar: \"\\u00A6\",\n  sect: \"\\u00A7\",\n  uml: \"\\u00A8\",\n  copy: \"\\u00A9\",\n  ordf: \"\\u00AA\",\n  laquo: \"\\u00AB\",\n  not: \"\\u00AC\",\n  shy: \"\\u00AD\",\n  reg: \"\\u00AE\",\n  macr: \"\\u00AF\",\n  deg: \"\\u00B0\",\n  plusmn: \"\\u00B1\",\n  sup2: \"\\u00B2\",\n  sup3: \"\\u00B3\",\n  acute: \"\\u00B4\",\n  micro: \"\\u00B5\",\n  para: \"\\u00B6\",\n  middot: \"\\u00B7\",\n  cedil: \"\\u00B8\",\n  sup1: \"\\u00B9\",\n  ordm: \"\\u00BA\",\n  raquo: \"\\u00BB\",\n  frac14: \"\\u00BC\",\n  frac12: \"\\u00BD\",\n  frac34: \"\\u00BE\",\n  iquest: \"\\u00BF\",\n  Agrave: \"\\u00C0\",\n  Aacute: \"\\u00C1\",\n  Acirc: \"\\u00C2\",\n  Atilde: \"\\u00C3\",\n  Auml: \"\\u00C4\",\n  Aring: \"\\u00C5\",\n  AElig: \"\\u00C6\",\n  Ccedil: \"\\u00C7\",\n  Egrave: \"\\u00C8\",\n  Eacute: \"\\u00C9\",\n  Ecirc: \"\\u00CA\",\n  Euml: \"\\u00CB\",\n  Igrave: \"\\u00CC\",\n  Iacute: \"\\u00CD\",\n  Icirc: \"\\u00CE\",\n  Iuml: \"\\u00CF\",\n  ETH: \"\\u00D0\",\n  Ntilde: \"\\u00D1\",\n  Ograve: \"\\u00D2\",\n  Oacute: \"\\u00D3\",\n  Ocirc: \"\\u00D4\",\n  Otilde: \"\\u00D5\",\n  Ouml: \"\\u00D6\",\n  times: \"\\u00D7\",\n  Oslash: \"\\u00D8\",\n  Ugrave: \"\\u00D9\",\n  Uacute: \"\\u00DA\",\n  Ucirc: \"\\u00DB\",\n  Uuml: \"\\u00DC\",\n  Yacute: \"\\u00DD\",\n  THORN: \"\\u00DE\",\n  szlig: \"\\u00DF\",\n  agrave: \"\\u00E0\",\n  aacute: \"\\u00E1\",\n  acirc: \"\\u00E2\",\n  atilde: \"\\u00E3\",\n  auml: \"\\u00E4\",\n  aring: \"\\u00E5\",\n  aelig: \"\\u00E6\",\n  ccedil: \"\\u00E7\",\n  egrave: \"\\u00E8\",\n  eacute: \"\\u00E9\",\n  ecirc: \"\\u00EA\",\n  euml: \"\\u00EB\",\n  igrave: \"\\u00EC\",\n  iacute: \"\\u00ED\",\n  icirc: \"\\u00EE\",\n  iuml: \"\\u00EF\",\n  eth: \"\\u00F0\",\n  ntilde: \"\\u00F1\",\n  ograve: \"\\u00F2\",\n  oacute: \"\\u00F3\",\n  ocirc: \"\\u00F4\",\n  otilde: \"\\u00F5\",\n  ouml: \"\\u00F6\",\n  divide: \"\\u00F7\",\n  oslash: \"\\u00F8\",\n  ugrave: \"\\u00F9\",\n  uacute: \"\\u00FA\",\n  ucirc: \"\\u00FB\",\n  uuml: \"\\u00FC\",\n  yacute: \"\\u00FD\",\n  thorn: \"\\u00FE\",\n  yuml: \"\\u00FF\",\n  OElig: \"\\u0152\",\n  oelig: \"\\u0153\",\n  Scaron: \"\\u0160\",\n  scaron: \"\\u0161\",\n  Yuml: \"\\u0178\",\n  fnof: \"\\u0192\",\n  circ: \"\\u02C6\",\n  tilde: \"\\u02DC\",\n  Alpha: \"\\u0391\",\n  Beta: \"\\u0392\",\n  Gamma: \"\\u0393\",\n  Delta: \"\\u0394\",\n  Epsilon: \"\\u0395\",\n  Zeta: \"\\u0396\",\n  Eta: \"\\u0397\",\n  Theta: \"\\u0398\",\n  Iota: \"\\u0399\",\n  Kappa: \"\\u039A\",\n  Lambda: \"\\u039B\",\n  Mu: \"\\u039C\",\n  Nu: \"\\u039D\",\n  Xi: \"\\u039E\",\n  Omicron: \"\\u039F\",\n  Pi: \"\\u03A0\",\n  Rho: \"\\u03A1\",\n  Sigma: \"\\u03A3\",\n  Tau: \"\\u03A4\",\n  Upsilon: \"\\u03A5\",\n  Phi: \"\\u03A6\",\n  Chi: \"\\u03A7\",\n  Psi: \"\\u03A8\",\n  Omega: \"\\u03A9\",\n  alpha: \"\\u03B1\",\n  beta: \"\\u03B2\",\n  gamma: \"\\u03B3\",\n  delta: \"\\u03B4\",\n  epsilon: \"\\u03B5\",\n  zeta: \"\\u03B6\",\n  eta: \"\\u03B7\",\n  theta: \"\\u03B8\",\n  iota: \"\\u03B9\",\n  kappa: \"\\u03BA\",\n  lambda: \"\\u03BB\",\n  mu: \"\\u03BC\",\n  nu: \"\\u03BD\",\n  xi: \"\\u03BE\",\n  omicron: \"\\u03BF\",\n  pi: \"\\u03C0\",\n  rho: \"\\u03C1\",\n  sigmaf: \"\\u03C2\",\n  sigma: \"\\u03C3\",\n  tau: \"\\u03C4\",\n  upsilon: \"\\u03C5\",\n  phi: \"\\u03C6\",\n  chi: \"\\u03C7\",\n  psi: \"\\u03C8\",\n  omega: \"\\u03C9\",\n  thetasym: \"\\u03D1\",\n  upsih: \"\\u03D2\",\n  piv: \"\\u03D6\",\n  ensp: \"\\u2002\",\n  emsp: \"\\u2003\",\n  thinsp: \"\\u2009\",\n  zwnj: \"\\u200C\",\n  zwj: \"\\u200D\",\n  lrm: \"\\u200E\",\n  rlm: \"\\u200F\",\n  ndash: \"\\u2013\",\n  mdash: \"\\u2014\",\n  lsquo: \"\\u2018\",\n  rsquo: \"\\u2019\",\n  sbquo: \"\\u201A\",\n  ldquo: \"\\u201C\",\n  rdquo: \"\\u201D\",\n  bdquo: \"\\u201E\",\n  dagger: \"\\u2020\",\n  Dagger: \"\\u2021\",\n  bull: \"\\u2022\",\n  hellip: \"\\u2026\",\n  permil: \"\\u2030\",\n  prime: \"\\u2032\",\n  Prime: \"\\u2033\",\n  lsaquo: \"\\u2039\",\n  rsaquo: \"\\u203A\",\n  oline: \"\\u203E\",\n  frasl: \"\\u2044\",\n  euro: \"\\u20AC\",\n  image: \"\\u2111\",\n  weierp: \"\\u2118\",\n  real: \"\\u211C\",\n  trade: \"\\u2122\",\n  alefsym: \"\\u2135\",\n  larr: \"\\u2190\",\n  uarr: \"\\u2191\",\n  rarr: \"\\u2192\",\n  darr: \"\\u2193\",\n  harr: \"\\u2194\",\n  crarr: \"\\u21B5\",\n  lArr: \"\\u21D0\",\n  uArr: \"\\u21D1\",\n  rArr: \"\\u21D2\",\n  dArr: \"\\u21D3\",\n  hArr: \"\\u21D4\",\n  forall: \"\\u2200\",\n  part: \"\\u2202\",\n  exist: \"\\u2203\",\n  empty: \"\\u2205\",\n  nabla: \"\\u2207\",\n  isin: \"\\u2208\",\n  notin: \"\\u2209\",\n  ni: \"\\u220B\",\n  prod: \"\\u220F\",\n  sum: \"\\u2211\",\n  minus: \"\\u2212\",\n  lowast: \"\\u2217\",\n  radic: \"\\u221A\",\n  prop: \"\\u221D\",\n  infin: \"\\u221E\",\n  ang: \"\\u2220\",\n  and: \"\\u2227\",\n  or: \"\\u2228\",\n  cap: \"\\u2229\",\n  cup: \"\\u222A\",\n  int: \"\\u222B\",\n  there4: \"\\u2234\",\n  sim: \"\\u223C\",\n  cong: \"\\u2245\",\n  asymp: \"\\u2248\",\n  ne: \"\\u2260\",\n  equiv: \"\\u2261\",\n  le: \"\\u2264\",\n  ge: \"\\u2265\",\n  sub: \"\\u2282\",\n  sup: \"\\u2283\",\n  nsub: \"\\u2284\",\n  sube: \"\\u2286\",\n  supe: \"\\u2287\",\n  oplus: \"\\u2295\",\n  otimes: \"\\u2297\",\n  perp: \"\\u22A5\",\n  sdot: \"\\u22C5\",\n  lceil: \"\\u2308\",\n  rceil: \"\\u2309\",\n  lfloor: \"\\u230A\",\n  rfloor: \"\\u230B\",\n  lang: \"\\u2329\",\n  rang: \"\\u232A\",\n  loz: \"\\u25CA\",\n  spades: \"\\u2660\",\n  clubs: \"\\u2663\",\n  hearts: \"\\u2665\",\n  diams: \"\\u2666\"\n};\n\nconst HEX_NUMBER = /^[\\da-fA-F]+$/;\nconst DECIMAL_NUMBER = /^\\d+$/;\nconst JsxErrors = Object.freeze({\n  AttributeIsEmpty: \"JSX attributes must only be assigned a non-empty expression\",\n  MissingClosingTagElement: \"Expected corresponding JSX closing tag for <%0>\",\n  MissingClosingTagFragment: \"Expected corresponding JSX closing tag for <>\",\n  UnexpectedSequenceExpression: \"Sequence expressions cannot be directly nested inside JSX. Did you mean to wrap it in parentheses (...)?\",\n  UnsupportedJsxValue: \"JSX value should be either an expression or a quoted JSX text\",\n  UnterminatedJsxContent: \"Unterminated JSX contents\",\n  UnwrappedAdjacentJSXElements: \"Adjacent JSX elements must be wrapped in an enclosing tag. Did you want a JSX fragment <>...</>?\"\n});\ntypes$1.j_oTag = new TokContext(\"<tag\", false);\ntypes$1.j_cTag = new TokContext(\"</tag\", false);\ntypes$1.j_expr = new TokContext(\"<tag>...</tag>\", true, true);\ntypes.jsxName = new TokenType(\"jsxName\");\ntypes.jsxText = new TokenType(\"jsxText\", {\n  beforeExpr: true\n});\ntypes.jsxTagStart = new TokenType(\"jsxTagStart\", {\n  startsExpr: true\n});\ntypes.jsxTagEnd = new TokenType(\"jsxTagEnd\");\n\ntypes.jsxTagStart.updateContext = function () {\n  this.state.context.push(types$1.j_expr);\n  this.state.context.push(types$1.j_oTag);\n  this.state.exprAllowed = false;\n};\n\ntypes.jsxTagEnd.updateContext = function (prevType) {\n  const out = this.state.context.pop();\n\n  if (out === types$1.j_oTag && prevType === types.slash || out === types$1.j_cTag) {\n    this.state.context.pop();\n    this.state.exprAllowed = this.curContext() === types$1.j_expr;\n  } else {\n    this.state.exprAllowed = true;\n  }\n};\n\nfunction isFragment(object) {\n  return object ? object.type === \"JSXOpeningFragment\" || object.type === \"JSXClosingFragment\" : false;\n}\n\nfunction getQualifiedJSXName(object) {\n  if (object.type === \"JSXIdentifier\") {\n    return object.name;\n  }\n\n  if (object.type === \"JSXNamespacedName\") {\n    return object.namespace.name + \":\" + object.name.name;\n  }\n\n  if (object.type === \"JSXMemberExpression\") {\n    return getQualifiedJSXName(object.object) + \".\" + getQualifiedJSXName(object.property);\n  }\n\n  throw new Error(\"Node had unexpected type: \" + object.type);\n}\n\nvar jsx = (superClass => class extends superClass {\n  jsxReadToken() {\n    let out = \"\";\n    let chunkStart = this.state.pos;\n\n    for (;;) {\n      if (this.state.pos >= this.length) {\n        throw this.raise(this.state.start, JsxErrors.UnterminatedJsxContent);\n      }\n\n      const ch = this.input.charCodeAt(this.state.pos);\n\n      switch (ch) {\n        case 60:\n        case 123:\n          if (this.state.pos === this.state.start) {\n            if (ch === 60 && this.state.exprAllowed) {\n              ++this.state.pos;\n              return this.finishToken(types.jsxTagStart);\n            }\n\n            return super.getTokenFromCode(ch);\n          }\n\n          out += this.input.slice(chunkStart, this.state.pos);\n          return this.finishToken(types.jsxText, out);\n\n        case 38:\n          out += this.input.slice(chunkStart, this.state.pos);\n          out += this.jsxReadEntity();\n          chunkStart = this.state.pos;\n          break;\n\n        case 62:\n        case 125:\n\n        default:\n          if (isNewLine(ch)) {\n            out += this.input.slice(chunkStart, this.state.pos);\n            out += this.jsxReadNewLine(true);\n            chunkStart = this.state.pos;\n          } else {\n            ++this.state.pos;\n          }\n\n      }\n    }\n  }\n\n  jsxReadNewLine(normalizeCRLF) {\n    const ch = this.input.charCodeAt(this.state.pos);\n    let out;\n    ++this.state.pos;\n\n    if (ch === 13 && this.input.charCodeAt(this.state.pos) === 10) {\n      ++this.state.pos;\n      out = normalizeCRLF ? \"\\n\" : \"\\r\\n\";\n    } else {\n      out = String.fromCharCode(ch);\n    }\n\n    ++this.state.curLine;\n    this.state.lineStart = this.state.pos;\n    return out;\n  }\n\n  jsxReadString(quote) {\n    let out = \"\";\n    let chunkStart = ++this.state.pos;\n\n    for (;;) {\n      if (this.state.pos >= this.length) {\n        throw this.raise(this.state.start, ErrorMessages.UnterminatedString);\n      }\n\n      const ch = this.input.charCodeAt(this.state.pos);\n      if (ch === quote) break;\n\n      if (ch === 38) {\n        out += this.input.slice(chunkStart, this.state.pos);\n        out += this.jsxReadEntity();\n        chunkStart = this.state.pos;\n      } else if (isNewLine(ch)) {\n        out += this.input.slice(chunkStart, this.state.pos);\n        out += this.jsxReadNewLine(false);\n        chunkStart = this.state.pos;\n      } else {\n        ++this.state.pos;\n      }\n    }\n\n    out += this.input.slice(chunkStart, this.state.pos++);\n    return this.finishToken(types.string, out);\n  }\n\n  jsxReadEntity() {\n    let str = \"\";\n    let count = 0;\n    let entity;\n    let ch = this.input[this.state.pos];\n    const startPos = ++this.state.pos;\n\n    while (this.state.pos < this.length && count++ < 10) {\n      ch = this.input[this.state.pos++];\n\n      if (ch === \";\") {\n        if (str[0] === \"#\") {\n          if (str[1] === \"x\") {\n            str = str.substr(2);\n\n            if (HEX_NUMBER.test(str)) {\n              entity = String.fromCodePoint(parseInt(str, 16));\n            }\n          } else {\n            str = str.substr(1);\n\n            if (DECIMAL_NUMBER.test(str)) {\n              entity = String.fromCodePoint(parseInt(str, 10));\n            }\n          }\n        } else {\n          entity = entities[str];\n        }\n\n        break;\n      }\n\n      str += ch;\n    }\n\n    if (!entity) {\n      this.state.pos = startPos;\n      return \"&\";\n    }\n\n    return entity;\n  }\n\n  jsxReadWord() {\n    let ch;\n    const start = this.state.pos;\n\n    do {\n      ch = this.input.charCodeAt(++this.state.pos);\n    } while (isIdentifierChar(ch) || ch === 45);\n\n    return this.finishToken(types.jsxName, this.input.slice(start, this.state.pos));\n  }\n\n  jsxParseIdentifier() {\n    const node = this.startNode();\n\n    if (this.match(types.jsxName)) {\n      node.name = this.state.value;\n    } else if (this.state.type.keyword) {\n      node.name = this.state.type.keyword;\n    } else {\n      this.unexpected();\n    }\n\n    this.next();\n    return this.finishNode(node, \"JSXIdentifier\");\n  }\n\n  jsxParseNamespacedName() {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const name = this.jsxParseIdentifier();\n    if (!this.eat(types.colon)) return name;\n    const node = this.startNodeAt(startPos, startLoc);\n    node.namespace = name;\n    node.name = this.jsxParseIdentifier();\n    return this.finishNode(node, \"JSXNamespacedName\");\n  }\n\n  jsxParseElementName() {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    let node = this.jsxParseNamespacedName();\n\n    if (node.type === \"JSXNamespacedName\") {\n      return node;\n    }\n\n    while (this.eat(types.dot)) {\n      const newNode = this.startNodeAt(startPos, startLoc);\n      newNode.object = node;\n      newNode.property = this.jsxParseIdentifier();\n      node = this.finishNode(newNode, \"JSXMemberExpression\");\n    }\n\n    return node;\n  }\n\n  jsxParseAttributeValue() {\n    let node;\n\n    switch (this.state.type) {\n      case types.braceL:\n        node = this.startNode();\n        this.next();\n        node = this.jsxParseExpressionContainer(node);\n\n        if (node.expression.type === \"JSXEmptyExpression\") {\n          this.raise(node.start, JsxErrors.AttributeIsEmpty);\n        }\n\n        return node;\n\n      case types.jsxTagStart:\n      case types.string:\n        return this.parseExprAtom();\n\n      default:\n        throw this.raise(this.state.start, JsxErrors.UnsupportedJsxValue);\n    }\n  }\n\n  jsxParseEmptyExpression() {\n    const node = this.startNodeAt(this.state.lastTokEnd, this.state.lastTokEndLoc);\n    return this.finishNodeAt(node, \"JSXEmptyExpression\", this.state.start, this.state.startLoc);\n  }\n\n  jsxParseSpreadChild(node) {\n    this.next();\n    node.expression = this.parseExpression();\n    this.expect(types.braceR);\n    return this.finishNode(node, \"JSXSpreadChild\");\n  }\n\n  jsxParseExpressionContainer(node) {\n    if (this.match(types.braceR)) {\n      node.expression = this.jsxParseEmptyExpression();\n    } else {\n      const expression = this.parseExpression();\n      node.expression = expression;\n    }\n\n    this.expect(types.braceR);\n    return this.finishNode(node, \"JSXExpressionContainer\");\n  }\n\n  jsxParseAttribute() {\n    const node = this.startNode();\n\n    if (this.eat(types.braceL)) {\n      this.expect(types.ellipsis);\n      node.argument = this.parseMaybeAssignAllowIn();\n      this.expect(types.braceR);\n      return this.finishNode(node, \"JSXSpreadAttribute\");\n    }\n\n    node.name = this.jsxParseNamespacedName();\n    node.value = this.eat(types.eq) ? this.jsxParseAttributeValue() : null;\n    return this.finishNode(node, \"JSXAttribute\");\n  }\n\n  jsxParseOpeningElementAt(startPos, startLoc) {\n    const node = this.startNodeAt(startPos, startLoc);\n\n    if (this.match(types.jsxTagEnd)) {\n      this.expect(types.jsxTagEnd);\n      return this.finishNode(node, \"JSXOpeningFragment\");\n    }\n\n    node.name = this.jsxParseElementName();\n    return this.jsxParseOpeningElementAfterName(node);\n  }\n\n  jsxParseOpeningElementAfterName(node) {\n    const attributes = [];\n\n    while (!this.match(types.slash) && !this.match(types.jsxTagEnd)) {\n      attributes.push(this.jsxParseAttribute());\n    }\n\n    node.attributes = attributes;\n    node.selfClosing = this.eat(types.slash);\n    this.expect(types.jsxTagEnd);\n    return this.finishNode(node, \"JSXOpeningElement\");\n  }\n\n  jsxParseClosingElementAt(startPos, startLoc) {\n    const node = this.startNodeAt(startPos, startLoc);\n\n    if (this.match(types.jsxTagEnd)) {\n      this.expect(types.jsxTagEnd);\n      return this.finishNode(node, \"JSXClosingFragment\");\n    }\n\n    node.name = this.jsxParseElementName();\n    this.expect(types.jsxTagEnd);\n    return this.finishNode(node, \"JSXClosingElement\");\n  }\n\n  jsxParseElementAt(startPos, startLoc) {\n    const node = this.startNodeAt(startPos, startLoc);\n    const children = [];\n    const openingElement = this.jsxParseOpeningElementAt(startPos, startLoc);\n    let closingElement = null;\n\n    if (!openingElement.selfClosing) {\n      contents: for (;;) {\n        switch (this.state.type) {\n          case types.jsxTagStart:\n            startPos = this.state.start;\n            startLoc = this.state.startLoc;\n            this.next();\n\n            if (this.eat(types.slash)) {\n              closingElement = this.jsxParseClosingElementAt(startPos, startLoc);\n              break contents;\n            }\n\n            children.push(this.jsxParseElementAt(startPos, startLoc));\n            break;\n\n          case types.jsxText:\n            children.push(this.parseExprAtom());\n            break;\n\n          case types.braceL:\n            {\n              const node = this.startNode();\n              this.next();\n\n              if (this.match(types.ellipsis)) {\n                children.push(this.jsxParseSpreadChild(node));\n              } else {\n                children.push(this.jsxParseExpressionContainer(node));\n              }\n\n              break;\n            }\n\n          default:\n            throw this.unexpected();\n        }\n      }\n\n      if (isFragment(openingElement) && !isFragment(closingElement)) {\n        this.raise(closingElement.start, JsxErrors.MissingClosingTagFragment);\n      } else if (!isFragment(openingElement) && isFragment(closingElement)) {\n        this.raise(closingElement.start, JsxErrors.MissingClosingTagElement, getQualifiedJSXName(openingElement.name));\n      } else if (!isFragment(openingElement) && !isFragment(closingElement)) {\n        if (getQualifiedJSXName(closingElement.name) !== getQualifiedJSXName(openingElement.name)) {\n          this.raise(closingElement.start, JsxErrors.MissingClosingTagElement, getQualifiedJSXName(openingElement.name));\n        }\n      }\n    }\n\n    if (isFragment(openingElement)) {\n      node.openingFragment = openingElement;\n      node.closingFragment = closingElement;\n    } else {\n      node.openingElement = openingElement;\n      node.closingElement = closingElement;\n    }\n\n    node.children = children;\n\n    if (this.isRelational(\"<\")) {\n      throw this.raise(this.state.start, JsxErrors.UnwrappedAdjacentJSXElements);\n    }\n\n    return isFragment(openingElement) ? this.finishNode(node, \"JSXFragment\") : this.finishNode(node, \"JSXElement\");\n  }\n\n  jsxParseElement() {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    this.next();\n    return this.jsxParseElementAt(startPos, startLoc);\n  }\n\n  parseExprAtom(refExpressionErrors) {\n    if (this.match(types.jsxText)) {\n      return this.parseLiteral(this.state.value, \"JSXText\");\n    } else if (this.match(types.jsxTagStart)) {\n      return this.jsxParseElement();\n    } else if (this.isRelational(\"<\") && this.input.charCodeAt(this.state.pos) !== 33) {\n      this.finishToken(types.jsxTagStart);\n      return this.jsxParseElement();\n    } else {\n      return super.parseExprAtom(refExpressionErrors);\n    }\n  }\n\n  getTokenFromCode(code) {\n    if (this.state.inPropertyName) return super.getTokenFromCode(code);\n    const context = this.curContext();\n\n    if (context === types$1.j_expr) {\n      return this.jsxReadToken();\n    }\n\n    if (context === types$1.j_oTag || context === types$1.j_cTag) {\n      if (isIdentifierStart(code)) {\n        return this.jsxReadWord();\n      }\n\n      if (code === 62) {\n        ++this.state.pos;\n        return this.finishToken(types.jsxTagEnd);\n      }\n\n      if ((code === 34 || code === 39) && context === types$1.j_oTag) {\n        return this.jsxReadString(code);\n      }\n    }\n\n    if (code === 60 && this.state.exprAllowed && this.input.charCodeAt(this.state.pos + 1) !== 33) {\n      ++this.state.pos;\n      return this.finishToken(types.jsxTagStart);\n    }\n\n    return super.getTokenFromCode(code);\n  }\n\n  updateContext(prevType) {\n    if (this.match(types.braceL)) {\n      const curContext = this.curContext();\n\n      if (curContext === types$1.j_oTag) {\n        this.state.context.push(types$1.braceExpression);\n      } else if (curContext === types$1.j_expr) {\n        this.state.context.push(types$1.templateQuasi);\n      } else {\n        super.updateContext(prevType);\n      }\n\n      this.state.exprAllowed = true;\n    } else if (this.match(types.slash) && prevType === types.jsxTagStart) {\n      this.state.context.length -= 2;\n      this.state.context.push(types$1.j_cTag);\n      this.state.exprAllowed = false;\n    } else {\n      return super.updateContext(prevType);\n    }\n  }\n\n});\n\nclass TypeScriptScope extends Scope {\n  constructor(...args) {\n    super(...args);\n    this.types = [];\n    this.enums = [];\n    this.constEnums = [];\n    this.classes = [];\n    this.exportOnlyBindings = [];\n  }\n\n}\n\nclass TypeScriptScopeHandler extends ScopeHandler {\n  createScope(flags) {\n    return new TypeScriptScope(flags);\n  }\n\n  declareName(name, bindingType, pos) {\n    const scope = this.currentScope();\n\n    if (bindingType & BIND_FLAGS_TS_EXPORT_ONLY) {\n      this.maybeExportDefined(scope, name);\n      scope.exportOnlyBindings.push(name);\n      return;\n    }\n\n    super.declareName(...arguments);\n\n    if (bindingType & BIND_KIND_TYPE) {\n      if (!(bindingType & BIND_KIND_VALUE)) {\n        this.checkRedeclarationInScope(scope, name, bindingType, pos);\n        this.maybeExportDefined(scope, name);\n      }\n\n      scope.types.push(name);\n    }\n\n    if (bindingType & BIND_FLAGS_TS_ENUM) scope.enums.push(name);\n    if (bindingType & BIND_FLAGS_TS_CONST_ENUM) scope.constEnums.push(name);\n    if (bindingType & BIND_FLAGS_CLASS) scope.classes.push(name);\n  }\n\n  isRedeclaredInScope(scope, name, bindingType) {\n    if (scope.enums.indexOf(name) > -1) {\n      if (bindingType & BIND_FLAGS_TS_ENUM) {\n        const isConst = !!(bindingType & BIND_FLAGS_TS_CONST_ENUM);\n        const wasConst = scope.constEnums.indexOf(name) > -1;\n        return isConst !== wasConst;\n      }\n\n      return true;\n    }\n\n    if (bindingType & BIND_FLAGS_CLASS && scope.classes.indexOf(name) > -1) {\n      if (scope.lexical.indexOf(name) > -1) {\n        return !!(bindingType & BIND_KIND_VALUE);\n      } else {\n        return false;\n      }\n    }\n\n    if (bindingType & BIND_KIND_TYPE && scope.types.indexOf(name) > -1) {\n      return true;\n    }\n\n    return super.isRedeclaredInScope(...arguments);\n  }\n\n  checkLocalExport(id) {\n    if (this.scopeStack[0].types.indexOf(id.name) === -1 && this.scopeStack[0].exportOnlyBindings.indexOf(id.name) === -1) {\n      super.checkLocalExport(id);\n    }\n  }\n\n}\n\nconst PARAM = 0b0000,\n      PARAM_YIELD = 0b0001,\n      PARAM_AWAIT = 0b0010,\n      PARAM_RETURN = 0b0100,\n      PARAM_IN = 0b1000;\nclass ProductionParameterHandler {\n  constructor() {\n    this.stacks = [];\n  }\n\n  enter(flags) {\n    this.stacks.push(flags);\n  }\n\n  exit() {\n    this.stacks.pop();\n  }\n\n  currentFlags() {\n    return this.stacks[this.stacks.length - 1];\n  }\n\n  get hasAwait() {\n    return (this.currentFlags() & PARAM_AWAIT) > 0;\n  }\n\n  get hasYield() {\n    return (this.currentFlags() & PARAM_YIELD) > 0;\n  }\n\n  get hasReturn() {\n    return (this.currentFlags() & PARAM_RETURN) > 0;\n  }\n\n  get hasIn() {\n    return (this.currentFlags() & PARAM_IN) > 0;\n  }\n\n}\nfunction functionFlags(isAsync, isGenerator) {\n  return (isAsync ? PARAM_AWAIT : 0) | (isGenerator ? PARAM_YIELD : 0);\n}\n\nfunction nonNull(x) {\n  if (x == null) {\n    throw new Error(`Unexpected ${x} value.`);\n  }\n\n  return x;\n}\n\nfunction assert(x) {\n  if (!x) {\n    throw new Error(\"Assert fail\");\n  }\n}\n\nconst TSErrors = Object.freeze({\n  AbstractMethodHasImplementation: \"Method '%0' cannot have an implementation because it is marked abstract.\",\n  ClassMethodHasDeclare: \"Class methods cannot have the 'declare' modifier\",\n  ClassMethodHasReadonly: \"Class methods cannot have the 'readonly' modifier\",\n  ConstructorHasTypeParameters: \"Type parameters cannot appear on a constructor declaration.\",\n  DeclareClassFieldHasInitializer: \"Initializers are not allowed in ambient contexts.\",\n  DeclareFunctionHasImplementation: \"An implementation cannot be declared in ambient contexts.\",\n  DuplicateAccessibilityModifier: \"Accessibility modifier already seen.\",\n  DuplicateModifier: \"Duplicate modifier: '%0'\",\n  EmptyHeritageClauseType: \"'%0' list cannot be empty.\",\n  EmptyTypeArguments: \"Type argument list cannot be empty.\",\n  EmptyTypeParameters: \"Type parameter list cannot be empty.\",\n  ExpectedAmbientAfterExportDeclare: \"'export declare' must be followed by an ambient declaration.\",\n  ImportAliasHasImportType: \"An import alias can not use 'import type'\",\n  IndexSignatureHasAbstract: \"Index signatures cannot have the 'abstract' modifier\",\n  IndexSignatureHasAccessibility: \"Index signatures cannot have an accessibility modifier ('%0')\",\n  IndexSignatureHasDeclare: \"Index signatures cannot have the 'declare' modifier\",\n  IndexSignatureHasStatic: \"Index signatures cannot have the 'static' modifier\",\n  InvalidModifierOnTypeMember: \"'%0' modifier cannot appear on a type member.\",\n  InvalidTupleMemberLabel: \"Tuple members must be labeled with a simple identifier.\",\n  MixedLabeledAndUnlabeledElements: \"Tuple members must all have names or all not have names.\",\n  NonAbstractClassHasAbstractMethod: \"Abstract methods can only appear within an abstract class.\",\n  NonClassMethodPropertyHasAbstractModifer: \"'abstract' modifier can only appear on a class, method, or property declaration.\",\n  OptionalTypeBeforeRequired: \"A required element cannot follow an optional element.\",\n  PatternIsOptional: \"A binding pattern parameter cannot be optional in an implementation signature.\",\n  PrivateElementHasAbstract: \"Private elements cannot have the 'abstract' modifier.\",\n  PrivateElementHasAccessibility: \"Private elements cannot have an accessibility modifier ('%0')\",\n  ReadonlyForMethodSignature: \"'readonly' modifier can only appear on a property declaration or index signature.\",\n  TypeAnnotationAfterAssign: \"Type annotations must come before default assignments, e.g. instead of `age = 25: number` use `age: number = 25`\",\n  UnexpectedParameterModifier: \"A parameter property is only allowed in a constructor implementation.\",\n  UnexpectedReadonly: \"'readonly' type modifier is only permitted on array and tuple literal types.\",\n  UnexpectedTypeAnnotation: \"Did not expect a type annotation here.\",\n  UnexpectedTypeCastInParameter: \"Unexpected type cast in parameter position.\",\n  UnsupportedImportTypeArgument: \"Argument in a type import must be a string literal\",\n  UnsupportedParameterPropertyKind: \"A parameter property may not be declared using a binding pattern.\",\n  UnsupportedSignatureParameterKind: \"Name in a signature must be an Identifier, ObjectPattern or ArrayPattern, instead got %0\"\n});\n\nfunction keywordTypeFromName(value) {\n  switch (value) {\n    case \"any\":\n      return \"TSAnyKeyword\";\n\n    case \"boolean\":\n      return \"TSBooleanKeyword\";\n\n    case \"bigint\":\n      return \"TSBigIntKeyword\";\n\n    case \"never\":\n      return \"TSNeverKeyword\";\n\n    case \"number\":\n      return \"TSNumberKeyword\";\n\n    case \"object\":\n      return \"TSObjectKeyword\";\n\n    case \"string\":\n      return \"TSStringKeyword\";\n\n    case \"symbol\":\n      return \"TSSymbolKeyword\";\n\n    case \"undefined\":\n      return \"TSUndefinedKeyword\";\n\n    case \"unknown\":\n      return \"TSUnknownKeyword\";\n\n    default:\n      return undefined;\n  }\n}\n\nfunction tsIsAccessModifier(modifier) {\n  return modifier === \"private\" || modifier === \"public\" || modifier === \"protected\";\n}\n\nvar typescript = (superClass => class extends superClass {\n  getScopeHandler() {\n    return TypeScriptScopeHandler;\n  }\n\n  tsIsIdentifier() {\n    return this.match(types.name);\n  }\n\n  tsNextTokenCanFollowModifier() {\n    this.next();\n    return (this.match(types.bracketL) || this.match(types.braceL) || this.match(types.star) || this.match(types.ellipsis) || this.match(types.hash) || this.isLiteralPropertyName()) && !this.hasPrecedingLineBreak();\n  }\n\n  tsParseModifier(allowedModifiers) {\n    if (!this.match(types.name)) {\n      return undefined;\n    }\n\n    const modifier = this.state.value;\n\n    if (allowedModifiers.indexOf(modifier) !== -1 && this.tsTryParse(this.tsNextTokenCanFollowModifier.bind(this))) {\n      return modifier;\n    }\n\n    return undefined;\n  }\n\n  tsParseModifiers(modified, allowedModifiers, disallowedModifiers, errorTemplate) {\n    for (;;) {\n      const startPos = this.state.start;\n      const modifier = this.tsParseModifier(allowedModifiers.concat(disallowedModifiers != null ? disallowedModifiers : []));\n      if (!modifier) break;\n\n      if (tsIsAccessModifier(modifier)) {\n        if (modified.accessibility) {\n          this.raise(startPos, TSErrors.DuplicateAccessibilityModifier);\n        } else {\n          modified.accessibility = modifier;\n        }\n      } else {\n        if (Object.hasOwnProperty.call(modified, modifier)) {\n          this.raise(startPos, TSErrors.DuplicateModifier, modifier);\n        }\n\n        modified[modifier] = true;\n      }\n\n      if (disallowedModifiers != null && disallowedModifiers.includes(modifier)) {\n        this.raise(startPos, errorTemplate, modifier);\n      }\n    }\n  }\n\n  tsIsListTerminator(kind) {\n    switch (kind) {\n      case \"EnumMembers\":\n      case \"TypeMembers\":\n        return this.match(types.braceR);\n\n      case \"HeritageClauseElement\":\n        return this.match(types.braceL);\n\n      case \"TupleElementTypes\":\n        return this.match(types.bracketR);\n\n      case \"TypeParametersOrArguments\":\n        return this.isRelational(\">\");\n    }\n\n    throw new Error(\"Unreachable\");\n  }\n\n  tsParseList(kind, parseElement) {\n    const result = [];\n\n    while (!this.tsIsListTerminator(kind)) {\n      result.push(parseElement());\n    }\n\n    return result;\n  }\n\n  tsParseDelimitedList(kind, parseElement) {\n    return nonNull(this.tsParseDelimitedListWorker(kind, parseElement, true));\n  }\n\n  tsParseDelimitedListWorker(kind, parseElement, expectSuccess) {\n    const result = [];\n\n    for (;;) {\n      if (this.tsIsListTerminator(kind)) {\n        break;\n      }\n\n      const element = parseElement();\n\n      if (element == null) {\n        return undefined;\n      }\n\n      result.push(element);\n\n      if (this.eat(types.comma)) {\n        continue;\n      }\n\n      if (this.tsIsListTerminator(kind)) {\n        break;\n      }\n\n      if (expectSuccess) {\n        this.expect(types.comma);\n      }\n\n      return undefined;\n    }\n\n    return result;\n  }\n\n  tsParseBracketedList(kind, parseElement, bracket, skipFirstToken) {\n    if (!skipFirstToken) {\n      if (bracket) {\n        this.expect(types.bracketL);\n      } else {\n        this.expectRelational(\"<\");\n      }\n    }\n\n    const result = this.tsParseDelimitedList(kind, parseElement);\n\n    if (bracket) {\n      this.expect(types.bracketR);\n    } else {\n      this.expectRelational(\">\");\n    }\n\n    return result;\n  }\n\n  tsParseImportType() {\n    const node = this.startNode();\n    this.expect(types._import);\n    this.expect(types.parenL);\n\n    if (!this.match(types.string)) {\n      this.raise(this.state.start, TSErrors.UnsupportedImportTypeArgument);\n    }\n\n    node.argument = this.parseExprAtom();\n    this.expect(types.parenR);\n\n    if (this.eat(types.dot)) {\n      node.qualifier = this.tsParseEntityName(true);\n    }\n\n    if (this.isRelational(\"<\")) {\n      node.typeParameters = this.tsParseTypeArguments();\n    }\n\n    return this.finishNode(node, \"TSImportType\");\n  }\n\n  tsParseEntityName(allowReservedWords) {\n    let entity = this.parseIdentifier();\n\n    while (this.eat(types.dot)) {\n      const node = this.startNodeAtNode(entity);\n      node.left = entity;\n      node.right = this.parseIdentifier(allowReservedWords);\n      entity = this.finishNode(node, \"TSQualifiedName\");\n    }\n\n    return entity;\n  }\n\n  tsParseTypeReference() {\n    const node = this.startNode();\n    node.typeName = this.tsParseEntityName(false);\n\n    if (!this.hasPrecedingLineBreak() && this.isRelational(\"<\")) {\n      node.typeParameters = this.tsParseTypeArguments();\n    }\n\n    return this.finishNode(node, \"TSTypeReference\");\n  }\n\n  tsParseThisTypePredicate(lhs) {\n    this.next();\n    const node = this.startNodeAtNode(lhs);\n    node.parameterName = lhs;\n    node.typeAnnotation = this.tsParseTypeAnnotation(false);\n    node.asserts = false;\n    return this.finishNode(node, \"TSTypePredicate\");\n  }\n\n  tsParseThisTypeNode() {\n    const node = this.startNode();\n    this.next();\n    return this.finishNode(node, \"TSThisType\");\n  }\n\n  tsParseTypeQuery() {\n    const node = this.startNode();\n    this.expect(types._typeof);\n\n    if (this.match(types._import)) {\n      node.exprName = this.tsParseImportType();\n    } else {\n      node.exprName = this.tsParseEntityName(true);\n    }\n\n    return this.finishNode(node, \"TSTypeQuery\");\n  }\n\n  tsParseTypeParameter() {\n    const node = this.startNode();\n    node.name = this.parseIdentifierName(node.start);\n    node.constraint = this.tsEatThenParseType(types._extends);\n    node.default = this.tsEatThenParseType(types.eq);\n    return this.finishNode(node, \"TSTypeParameter\");\n  }\n\n  tsTryParseTypeParameters() {\n    if (this.isRelational(\"<\")) {\n      return this.tsParseTypeParameters();\n    }\n  }\n\n  tsParseTypeParameters() {\n    const node = this.startNode();\n\n    if (this.isRelational(\"<\") || this.match(types.jsxTagStart)) {\n      this.next();\n    } else {\n      this.unexpected();\n    }\n\n    node.params = this.tsParseBracketedList(\"TypeParametersOrArguments\", this.tsParseTypeParameter.bind(this), false, true);\n\n    if (node.params.length === 0) {\n      this.raise(node.start, TSErrors.EmptyTypeParameters);\n    }\n\n    return this.finishNode(node, \"TSTypeParameterDeclaration\");\n  }\n\n  tsTryNextParseConstantContext() {\n    if (this.lookahead().type === types._const) {\n      this.next();\n      return this.tsParseTypeReference();\n    }\n\n    return null;\n  }\n\n  tsFillSignature(returnToken, signature) {\n    const returnTokenRequired = returnToken === types.arrow;\n    signature.typeParameters = this.tsTryParseTypeParameters();\n    this.expect(types.parenL);\n    signature.parameters = this.tsParseBindingListForSignature();\n\n    if (returnTokenRequired) {\n      signature.typeAnnotation = this.tsParseTypeOrTypePredicateAnnotation(returnToken);\n    } else if (this.match(returnToken)) {\n      signature.typeAnnotation = this.tsParseTypeOrTypePredicateAnnotation(returnToken);\n    }\n  }\n\n  tsParseBindingListForSignature() {\n    return this.parseBindingList(types.parenR, 41).map(pattern => {\n      if (pattern.type !== \"Identifier\" && pattern.type !== \"RestElement\" && pattern.type !== \"ObjectPattern\" && pattern.type !== \"ArrayPattern\") {\n        this.raise(pattern.start, TSErrors.UnsupportedSignatureParameterKind, pattern.type);\n      }\n\n      return pattern;\n    });\n  }\n\n  tsParseTypeMemberSemicolon() {\n    if (!this.eat(types.comma)) {\n      this.semicolon();\n    }\n  }\n\n  tsParseSignatureMember(kind, node) {\n    this.tsFillSignature(types.colon, node);\n    this.tsParseTypeMemberSemicolon();\n    return this.finishNode(node, kind);\n  }\n\n  tsIsUnambiguouslyIndexSignature() {\n    this.next();\n    return this.eat(types.name) && this.match(types.colon);\n  }\n\n  tsTryParseIndexSignature(node) {\n    if (!(this.match(types.bracketL) && this.tsLookAhead(this.tsIsUnambiguouslyIndexSignature.bind(this)))) {\n      return undefined;\n    }\n\n    this.expect(types.bracketL);\n    const id = this.parseIdentifier();\n    id.typeAnnotation = this.tsParseTypeAnnotation();\n    this.resetEndLocation(id);\n    this.expect(types.bracketR);\n    node.parameters = [id];\n    const type = this.tsTryParseTypeAnnotation();\n    if (type) node.typeAnnotation = type;\n    this.tsParseTypeMemberSemicolon();\n    return this.finishNode(node, \"TSIndexSignature\");\n  }\n\n  tsParsePropertyOrMethodSignature(node, readonly) {\n    if (this.eat(types.question)) node.optional = true;\n    const nodeAny = node;\n\n    if (this.match(types.parenL) || this.isRelational(\"<\")) {\n      if (readonly) {\n        this.raise(node.start, TSErrors.ReadonlyForMethodSignature);\n      }\n\n      const method = nodeAny;\n      this.tsFillSignature(types.colon, method);\n      this.tsParseTypeMemberSemicolon();\n      return this.finishNode(method, \"TSMethodSignature\");\n    } else {\n      const property = nodeAny;\n      if (readonly) property.readonly = true;\n      const type = this.tsTryParseTypeAnnotation();\n      if (type) property.typeAnnotation = type;\n      this.tsParseTypeMemberSemicolon();\n      return this.finishNode(property, \"TSPropertySignature\");\n    }\n  }\n\n  tsParseTypeMember() {\n    const node = this.startNode();\n\n    if (this.match(types.parenL) || this.isRelational(\"<\")) {\n      return this.tsParseSignatureMember(\"TSCallSignatureDeclaration\", node);\n    }\n\n    if (this.match(types._new)) {\n      const id = this.startNode();\n      this.next();\n\n      if (this.match(types.parenL) || this.isRelational(\"<\")) {\n        return this.tsParseSignatureMember(\"TSConstructSignatureDeclaration\", node);\n      } else {\n        node.key = this.createIdentifier(id, \"new\");\n        return this.tsParsePropertyOrMethodSignature(node, false);\n      }\n    }\n\n    this.tsParseModifiers(node, [\"readonly\"], [\"declare\", \"abstract\", \"private\", \"protected\", \"public\", \"static\"], TSErrors.InvalidModifierOnTypeMember);\n    const idx = this.tsTryParseIndexSignature(node);\n\n    if (idx) {\n      return idx;\n    }\n\n    this.parsePropertyName(node, false);\n    return this.tsParsePropertyOrMethodSignature(node, !!node.readonly);\n  }\n\n  tsParseTypeLiteral() {\n    const node = this.startNode();\n    node.members = this.tsParseObjectTypeMembers();\n    return this.finishNode(node, \"TSTypeLiteral\");\n  }\n\n  tsParseObjectTypeMembers() {\n    this.expect(types.braceL);\n    const members = this.tsParseList(\"TypeMembers\", this.tsParseTypeMember.bind(this));\n    this.expect(types.braceR);\n    return members;\n  }\n\n  tsIsStartOfMappedType() {\n    this.next();\n\n    if (this.eat(types.plusMin)) {\n      return this.isContextual(\"readonly\");\n    }\n\n    if (this.isContextual(\"readonly\")) {\n      this.next();\n    }\n\n    if (!this.match(types.bracketL)) {\n      return false;\n    }\n\n    this.next();\n\n    if (!this.tsIsIdentifier()) {\n      return false;\n    }\n\n    this.next();\n    return this.match(types._in);\n  }\n\n  tsParseMappedTypeParameter() {\n    const node = this.startNode();\n    node.name = this.parseIdentifierName(node.start);\n    node.constraint = this.tsExpectThenParseType(types._in);\n    return this.finishNode(node, \"TSTypeParameter\");\n  }\n\n  tsParseMappedType() {\n    const node = this.startNode();\n    this.expect(types.braceL);\n\n    if (this.match(types.plusMin)) {\n      node.readonly = this.state.value;\n      this.next();\n      this.expectContextual(\"readonly\");\n    } else if (this.eatContextual(\"readonly\")) {\n      node.readonly = true;\n    }\n\n    this.expect(types.bracketL);\n    node.typeParameter = this.tsParseMappedTypeParameter();\n    node.nameType = this.eatContextual(\"as\") ? this.tsParseType() : null;\n    this.expect(types.bracketR);\n\n    if (this.match(types.plusMin)) {\n      node.optional = this.state.value;\n      this.next();\n      this.expect(types.question);\n    } else if (this.eat(types.question)) {\n      node.optional = true;\n    }\n\n    node.typeAnnotation = this.tsTryParseType();\n    this.semicolon();\n    this.expect(types.braceR);\n    return this.finishNode(node, \"TSMappedType\");\n  }\n\n  tsParseTupleType() {\n    const node = this.startNode();\n    node.elementTypes = this.tsParseBracketedList(\"TupleElementTypes\", this.tsParseTupleElementType.bind(this), true, false);\n    let seenOptionalElement = false;\n    let labeledElements = null;\n    node.elementTypes.forEach(elementNode => {\n      var _labeledElements;\n\n      let {\n        type\n      } = elementNode;\n\n      if (seenOptionalElement && type !== \"TSRestType\" && type !== \"TSOptionalType\" && !(type === \"TSNamedTupleMember\" && elementNode.optional)) {\n        this.raise(elementNode.start, TSErrors.OptionalTypeBeforeRequired);\n      }\n\n      seenOptionalElement = seenOptionalElement || type === \"TSNamedTupleMember\" && elementNode.optional || type === \"TSOptionalType\";\n\n      if (type === \"TSRestType\") {\n        elementNode = elementNode.typeAnnotation;\n        type = elementNode.type;\n      }\n\n      const isLabeled = type === \"TSNamedTupleMember\";\n      labeledElements = (_labeledElements = labeledElements) != null ? _labeledElements : isLabeled;\n\n      if (labeledElements !== isLabeled) {\n        this.raise(elementNode.start, TSErrors.MixedLabeledAndUnlabeledElements);\n      }\n    });\n    return this.finishNode(node, \"TSTupleType\");\n  }\n\n  tsParseTupleElementType() {\n    const {\n      start: startPos,\n      startLoc\n    } = this.state;\n    const rest = this.eat(types.ellipsis);\n    let type = this.tsParseType();\n    const optional = this.eat(types.question);\n    const labeled = this.eat(types.colon);\n\n    if (labeled) {\n      const labeledNode = this.startNodeAtNode(type);\n      labeledNode.optional = optional;\n\n      if (type.type === \"TSTypeReference\" && !type.typeParameters && type.typeName.type === \"Identifier\") {\n        labeledNode.label = type.typeName;\n      } else {\n        this.raise(type.start, TSErrors.InvalidTupleMemberLabel);\n        labeledNode.label = type;\n      }\n\n      labeledNode.elementType = this.tsParseType();\n      type = this.finishNode(labeledNode, \"TSNamedTupleMember\");\n    } else if (optional) {\n      const optionalTypeNode = this.startNodeAtNode(type);\n      optionalTypeNode.typeAnnotation = type;\n      type = this.finishNode(optionalTypeNode, \"TSOptionalType\");\n    }\n\n    if (rest) {\n      const restNode = this.startNodeAt(startPos, startLoc);\n      restNode.typeAnnotation = type;\n      type = this.finishNode(restNode, \"TSRestType\");\n    }\n\n    return type;\n  }\n\n  tsParseParenthesizedType() {\n    const node = this.startNode();\n    this.expect(types.parenL);\n    node.typeAnnotation = this.tsParseType();\n    this.expect(types.parenR);\n    return this.finishNode(node, \"TSParenthesizedType\");\n  }\n\n  tsParseFunctionOrConstructorType(type, abstract) {\n    const node = this.startNode();\n\n    if (type === \"TSConstructorType\") {\n      node.abstract = !!abstract;\n      if (abstract) this.next();\n      this.next();\n    }\n\n    this.tsFillSignature(types.arrow, node);\n    return this.finishNode(node, type);\n  }\n\n  tsParseLiteralTypeNode() {\n    const node = this.startNode();\n\n    node.literal = (() => {\n      switch (this.state.type) {\n        case types.num:\n        case types.bigint:\n        case types.string:\n        case types._true:\n        case types._false:\n          return this.parseExprAtom();\n\n        default:\n          throw this.unexpected();\n      }\n    })();\n\n    return this.finishNode(node, \"TSLiteralType\");\n  }\n\n  tsParseTemplateLiteralType() {\n    const node = this.startNode();\n    node.literal = this.parseTemplate(false);\n    return this.finishNode(node, \"TSLiteralType\");\n  }\n\n  parseTemplateSubstitution() {\n    if (this.state.inType) return this.tsParseType();\n    return super.parseTemplateSubstitution();\n  }\n\n  tsParseThisTypeOrThisTypePredicate() {\n    const thisKeyword = this.tsParseThisTypeNode();\n\n    if (this.isContextual(\"is\") && !this.hasPrecedingLineBreak()) {\n      return this.tsParseThisTypePredicate(thisKeyword);\n    } else {\n      return thisKeyword;\n    }\n  }\n\n  tsParseNonArrayType() {\n    switch (this.state.type) {\n      case types.name:\n      case types._void:\n      case types._null:\n        {\n          const type = this.match(types._void) ? \"TSVoidKeyword\" : this.match(types._null) ? \"TSNullKeyword\" : keywordTypeFromName(this.state.value);\n\n          if (type !== undefined && this.lookaheadCharCode() !== 46) {\n            const node = this.startNode();\n            this.next();\n            return this.finishNode(node, type);\n          }\n\n          return this.tsParseTypeReference();\n        }\n\n      case types.string:\n      case types.num:\n      case types.bigint:\n      case types._true:\n      case types._false:\n        return this.tsParseLiteralTypeNode();\n\n      case types.plusMin:\n        if (this.state.value === \"-\") {\n          const node = this.startNode();\n          const nextToken = this.lookahead();\n\n          if (nextToken.type !== types.num && nextToken.type !== types.bigint) {\n            throw this.unexpected();\n          }\n\n          node.literal = this.parseMaybeUnary();\n          return this.finishNode(node, \"TSLiteralType\");\n        }\n\n        break;\n\n      case types._this:\n        return this.tsParseThisTypeOrThisTypePredicate();\n\n      case types._typeof:\n        return this.tsParseTypeQuery();\n\n      case types._import:\n        return this.tsParseImportType();\n\n      case types.braceL:\n        return this.tsLookAhead(this.tsIsStartOfMappedType.bind(this)) ? this.tsParseMappedType() : this.tsParseTypeLiteral();\n\n      case types.bracketL:\n        return this.tsParseTupleType();\n\n      case types.parenL:\n        return this.tsParseParenthesizedType();\n\n      case types.backQuote:\n        return this.tsParseTemplateLiteralType();\n    }\n\n    throw this.unexpected();\n  }\n\n  tsParseArrayTypeOrHigher() {\n    let type = this.tsParseNonArrayType();\n\n    while (!this.hasPrecedingLineBreak() && this.eat(types.bracketL)) {\n      if (this.match(types.bracketR)) {\n        const node = this.startNodeAtNode(type);\n        node.elementType = type;\n        this.expect(types.bracketR);\n        type = this.finishNode(node, \"TSArrayType\");\n      } else {\n        const node = this.startNodeAtNode(type);\n        node.objectType = type;\n        node.indexType = this.tsParseType();\n        this.expect(types.bracketR);\n        type = this.finishNode(node, \"TSIndexedAccessType\");\n      }\n    }\n\n    return type;\n  }\n\n  tsParseTypeOperator(operator) {\n    const node = this.startNode();\n    this.expectContextual(operator);\n    node.operator = operator;\n    node.typeAnnotation = this.tsParseTypeOperatorOrHigher();\n\n    if (operator === \"readonly\") {\n      this.tsCheckTypeAnnotationForReadOnly(node);\n    }\n\n    return this.finishNode(node, \"TSTypeOperator\");\n  }\n\n  tsCheckTypeAnnotationForReadOnly(node) {\n    switch (node.typeAnnotation.type) {\n      case \"TSTupleType\":\n      case \"TSArrayType\":\n        return;\n\n      default:\n        this.raise(node.start, TSErrors.UnexpectedReadonly);\n    }\n  }\n\n  tsParseInferType() {\n    const node = this.startNode();\n    this.expectContextual(\"infer\");\n    const typeParameter = this.startNode();\n    typeParameter.name = this.parseIdentifierName(typeParameter.start);\n    node.typeParameter = this.finishNode(typeParameter, \"TSTypeParameter\");\n    return this.finishNode(node, \"TSInferType\");\n  }\n\n  tsParseTypeOperatorOrHigher() {\n    const operator = [\"keyof\", \"unique\", \"readonly\"].find(kw => this.isContextual(kw));\n    return operator ? this.tsParseTypeOperator(operator) : this.isContextual(\"infer\") ? this.tsParseInferType() : this.tsParseArrayTypeOrHigher();\n  }\n\n  tsParseUnionOrIntersectionType(kind, parseConstituentType, operator) {\n    const node = this.startNode();\n    const hasLeadingOperator = this.eat(operator);\n    const types = [];\n\n    do {\n      types.push(parseConstituentType());\n    } while (this.eat(operator));\n\n    if (types.length === 1 && !hasLeadingOperator) {\n      return types[0];\n    }\n\n    node.types = types;\n    return this.finishNode(node, kind);\n  }\n\n  tsParseIntersectionTypeOrHigher() {\n    return this.tsParseUnionOrIntersectionType(\"TSIntersectionType\", this.tsParseTypeOperatorOrHigher.bind(this), types.bitwiseAND);\n  }\n\n  tsParseUnionTypeOrHigher() {\n    return this.tsParseUnionOrIntersectionType(\"TSUnionType\", this.tsParseIntersectionTypeOrHigher.bind(this), types.bitwiseOR);\n  }\n\n  tsIsStartOfFunctionType() {\n    if (this.isRelational(\"<\")) {\n      return true;\n    }\n\n    return this.match(types.parenL) && this.tsLookAhead(this.tsIsUnambiguouslyStartOfFunctionType.bind(this));\n  }\n\n  tsSkipParameterStart() {\n    if (this.match(types.name) || this.match(types._this)) {\n      this.next();\n      return true;\n    }\n\n    if (this.match(types.braceL)) {\n      let braceStackCounter = 1;\n      this.next();\n\n      while (braceStackCounter > 0) {\n        if (this.match(types.braceL)) {\n          ++braceStackCounter;\n        } else if (this.match(types.braceR)) {\n          --braceStackCounter;\n        }\n\n        this.next();\n      }\n\n      return true;\n    }\n\n    if (this.match(types.bracketL)) {\n      let braceStackCounter = 1;\n      this.next();\n\n      while (braceStackCounter > 0) {\n        if (this.match(types.bracketL)) {\n          ++braceStackCounter;\n        } else if (this.match(types.bracketR)) {\n          --braceStackCounter;\n        }\n\n        this.next();\n      }\n\n      return true;\n    }\n\n    return false;\n  }\n\n  tsIsUnambiguouslyStartOfFunctionType() {\n    this.next();\n\n    if (this.match(types.parenR) || this.match(types.ellipsis)) {\n      return true;\n    }\n\n    if (this.tsSkipParameterStart()) {\n      if (this.match(types.colon) || this.match(types.comma) || this.match(types.question) || this.match(types.eq)) {\n        return true;\n      }\n\n      if (this.match(types.parenR)) {\n        this.next();\n\n        if (this.match(types.arrow)) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  }\n\n  tsParseTypeOrTypePredicateAnnotation(returnToken) {\n    return this.tsInType(() => {\n      const t = this.startNode();\n      this.expect(returnToken);\n      const node = this.startNode();\n      const asserts = !!this.tsTryParse(this.tsParseTypePredicateAsserts.bind(this));\n\n      if (asserts && this.match(types._this)) {\n        let thisTypePredicate = this.tsParseThisTypeOrThisTypePredicate();\n\n        if (thisTypePredicate.type === \"TSThisType\") {\n          node.parameterName = thisTypePredicate;\n          node.asserts = true;\n          thisTypePredicate = this.finishNode(node, \"TSTypePredicate\");\n        } else {\n          this.resetStartLocationFromNode(thisTypePredicate, node);\n          thisTypePredicate.asserts = true;\n        }\n\n        t.typeAnnotation = thisTypePredicate;\n        return this.finishNode(t, \"TSTypeAnnotation\");\n      }\n\n      const typePredicateVariable = this.tsIsIdentifier() && this.tsTryParse(this.tsParseTypePredicatePrefix.bind(this));\n\n      if (!typePredicateVariable) {\n        if (!asserts) {\n          return this.tsParseTypeAnnotation(false, t);\n        }\n\n        node.parameterName = this.parseIdentifier();\n        node.asserts = asserts;\n        t.typeAnnotation = this.finishNode(node, \"TSTypePredicate\");\n        return this.finishNode(t, \"TSTypeAnnotation\");\n      }\n\n      const type = this.tsParseTypeAnnotation(false);\n      node.parameterName = typePredicateVariable;\n      node.typeAnnotation = type;\n      node.asserts = asserts;\n      t.typeAnnotation = this.finishNode(node, \"TSTypePredicate\");\n      return this.finishNode(t, \"TSTypeAnnotation\");\n    });\n  }\n\n  tsTryParseTypeOrTypePredicateAnnotation() {\n    return this.match(types.colon) ? this.tsParseTypeOrTypePredicateAnnotation(types.colon) : undefined;\n  }\n\n  tsTryParseTypeAnnotation() {\n    return this.match(types.colon) ? this.tsParseTypeAnnotation() : undefined;\n  }\n\n  tsTryParseType() {\n    return this.tsEatThenParseType(types.colon);\n  }\n\n  tsParseTypePredicatePrefix() {\n    const id = this.parseIdentifier();\n\n    if (this.isContextual(\"is\") && !this.hasPrecedingLineBreak()) {\n      this.next();\n      return id;\n    }\n  }\n\n  tsParseTypePredicateAsserts() {\n    if (!this.match(types.name) || this.state.value !== \"asserts\" || this.hasPrecedingLineBreak()) {\n      return false;\n    }\n\n    const containsEsc = this.state.containsEsc;\n    this.next();\n\n    if (!this.match(types.name) && !this.match(types._this)) {\n      return false;\n    }\n\n    if (containsEsc) {\n      this.raise(this.state.lastTokStart, ErrorMessages.InvalidEscapedReservedWord, \"asserts\");\n    }\n\n    return true;\n  }\n\n  tsParseTypeAnnotation(eatColon = true, t = this.startNode()) {\n    this.tsInType(() => {\n      if (eatColon) this.expect(types.colon);\n      t.typeAnnotation = this.tsParseType();\n    });\n    return this.finishNode(t, \"TSTypeAnnotation\");\n  }\n\n  tsParseType() {\n    assert(this.state.inType);\n    const type = this.tsParseNonConditionalType();\n\n    if (this.hasPrecedingLineBreak() || !this.eat(types._extends)) {\n      return type;\n    }\n\n    const node = this.startNodeAtNode(type);\n    node.checkType = type;\n    node.extendsType = this.tsParseNonConditionalType();\n    this.expect(types.question);\n    node.trueType = this.tsParseType();\n    this.expect(types.colon);\n    node.falseType = this.tsParseType();\n    return this.finishNode(node, \"TSConditionalType\");\n  }\n\n  isAbstractConstructorSignature() {\n    return this.isContextual(\"abstract\") && this.lookahead().type === types._new;\n  }\n\n  tsParseNonConditionalType() {\n    if (this.tsIsStartOfFunctionType()) {\n      return this.tsParseFunctionOrConstructorType(\"TSFunctionType\");\n    }\n\n    if (this.match(types._new)) {\n      return this.tsParseFunctionOrConstructorType(\"TSConstructorType\");\n    } else if (this.isAbstractConstructorSignature()) {\n      return this.tsParseFunctionOrConstructorType(\"TSConstructorType\", true);\n    }\n\n    return this.tsParseUnionTypeOrHigher();\n  }\n\n  tsParseTypeAssertion() {\n    const node = this.startNode();\n\n    const _const = this.tsTryNextParseConstantContext();\n\n    node.typeAnnotation = _const || this.tsNextThenParseType();\n    this.expectRelational(\">\");\n    node.expression = this.parseMaybeUnary();\n    return this.finishNode(node, \"TSTypeAssertion\");\n  }\n\n  tsParseHeritageClause(descriptor) {\n    const originalStart = this.state.start;\n    const delimitedList = this.tsParseDelimitedList(\"HeritageClauseElement\", this.tsParseExpressionWithTypeArguments.bind(this));\n\n    if (!delimitedList.length) {\n      this.raise(originalStart, TSErrors.EmptyHeritageClauseType, descriptor);\n    }\n\n    return delimitedList;\n  }\n\n  tsParseExpressionWithTypeArguments() {\n    const node = this.startNode();\n    node.expression = this.tsParseEntityName(false);\n\n    if (this.isRelational(\"<\")) {\n      node.typeParameters = this.tsParseTypeArguments();\n    }\n\n    return this.finishNode(node, \"TSExpressionWithTypeArguments\");\n  }\n\n  tsParseInterfaceDeclaration(node) {\n    node.id = this.parseIdentifier();\n    this.checkLVal(node.id, \"typescript interface declaration\", BIND_TS_INTERFACE);\n    node.typeParameters = this.tsTryParseTypeParameters();\n\n    if (this.eat(types._extends)) {\n      node.extends = this.tsParseHeritageClause(\"extends\");\n    }\n\n    const body = this.startNode();\n    body.body = this.tsInType(this.tsParseObjectTypeMembers.bind(this));\n    node.body = this.finishNode(body, \"TSInterfaceBody\");\n    return this.finishNode(node, \"TSInterfaceDeclaration\");\n  }\n\n  tsParseTypeAliasDeclaration(node) {\n    node.id = this.parseIdentifier();\n    this.checkLVal(node.id, \"typescript type alias\", BIND_TS_TYPE);\n    node.typeParameters = this.tsTryParseTypeParameters();\n    node.typeAnnotation = this.tsInType(() => {\n      this.expect(types.eq);\n\n      if (this.isContextual(\"intrinsic\") && this.lookahead().type !== types.dot) {\n        const node = this.startNode();\n        this.next();\n        return this.finishNode(node, \"TSIntrinsicKeyword\");\n      }\n\n      return this.tsParseType();\n    });\n    this.semicolon();\n    return this.finishNode(node, \"TSTypeAliasDeclaration\");\n  }\n\n  tsInNoContext(cb) {\n    const oldContext = this.state.context;\n    this.state.context = [oldContext[0]];\n\n    try {\n      return cb();\n    } finally {\n      this.state.context = oldContext;\n    }\n  }\n\n  tsInType(cb) {\n    const oldInType = this.state.inType;\n    this.state.inType = true;\n\n    try {\n      return cb();\n    } finally {\n      this.state.inType = oldInType;\n    }\n  }\n\n  tsEatThenParseType(token) {\n    return !this.match(token) ? undefined : this.tsNextThenParseType();\n  }\n\n  tsExpectThenParseType(token) {\n    return this.tsDoThenParseType(() => this.expect(token));\n  }\n\n  tsNextThenParseType() {\n    return this.tsDoThenParseType(() => this.next());\n  }\n\n  tsDoThenParseType(cb) {\n    return this.tsInType(() => {\n      cb();\n      return this.tsParseType();\n    });\n  }\n\n  tsParseEnumMember() {\n    const node = this.startNode();\n    node.id = this.match(types.string) ? this.parseExprAtom() : this.parseIdentifier(true);\n\n    if (this.eat(types.eq)) {\n      node.initializer = this.parseMaybeAssignAllowIn();\n    }\n\n    return this.finishNode(node, \"TSEnumMember\");\n  }\n\n  tsParseEnumDeclaration(node, isConst) {\n    if (isConst) node.const = true;\n    node.id = this.parseIdentifier();\n    this.checkLVal(node.id, \"typescript enum declaration\", isConst ? BIND_TS_CONST_ENUM : BIND_TS_ENUM);\n    this.expect(types.braceL);\n    node.members = this.tsParseDelimitedList(\"EnumMembers\", this.tsParseEnumMember.bind(this));\n    this.expect(types.braceR);\n    return this.finishNode(node, \"TSEnumDeclaration\");\n  }\n\n  tsParseModuleBlock() {\n    const node = this.startNode();\n    this.scope.enter(SCOPE_OTHER);\n    this.expect(types.braceL);\n    this.parseBlockOrModuleBlockBody(node.body = [], undefined, true, types.braceR);\n    this.scope.exit();\n    return this.finishNode(node, \"TSModuleBlock\");\n  }\n\n  tsParseModuleOrNamespaceDeclaration(node, nested = false) {\n    node.id = this.parseIdentifier();\n\n    if (!nested) {\n      this.checkLVal(node.id, \"module or namespace declaration\", BIND_TS_NAMESPACE);\n    }\n\n    if (this.eat(types.dot)) {\n      const inner = this.startNode();\n      this.tsParseModuleOrNamespaceDeclaration(inner, true);\n      node.body = inner;\n    } else {\n      this.scope.enter(SCOPE_TS_MODULE);\n      this.prodParam.enter(PARAM);\n      node.body = this.tsParseModuleBlock();\n      this.prodParam.exit();\n      this.scope.exit();\n    }\n\n    return this.finishNode(node, \"TSModuleDeclaration\");\n  }\n\n  tsParseAmbientExternalModuleDeclaration(node) {\n    if (this.isContextual(\"global\")) {\n      node.global = true;\n      node.id = this.parseIdentifier();\n    } else if (this.match(types.string)) {\n      node.id = this.parseExprAtom();\n    } else {\n      this.unexpected();\n    }\n\n    if (this.match(types.braceL)) {\n      this.scope.enter(SCOPE_TS_MODULE);\n      this.prodParam.enter(PARAM);\n      node.body = this.tsParseModuleBlock();\n      this.prodParam.exit();\n      this.scope.exit();\n    } else {\n      this.semicolon();\n    }\n\n    return this.finishNode(node, \"TSModuleDeclaration\");\n  }\n\n  tsParseImportEqualsDeclaration(node, isExport) {\n    node.isExport = isExport || false;\n    node.id = this.parseIdentifier();\n    this.checkLVal(node.id, \"import equals declaration\", BIND_LEXICAL);\n    this.expect(types.eq);\n    const moduleReference = this.tsParseModuleReference();\n\n    if (node.importKind === \"type\" && moduleReference.type !== \"TSExternalModuleReference\") {\n      this.raise(moduleReference.start, TSErrors.ImportAliasHasImportType);\n    }\n\n    node.moduleReference = moduleReference;\n    this.semicolon();\n    return this.finishNode(node, \"TSImportEqualsDeclaration\");\n  }\n\n  tsIsExternalModuleReference() {\n    return this.isContextual(\"require\") && this.lookaheadCharCode() === 40;\n  }\n\n  tsParseModuleReference() {\n    return this.tsIsExternalModuleReference() ? this.tsParseExternalModuleReference() : this.tsParseEntityName(false);\n  }\n\n  tsParseExternalModuleReference() {\n    const node = this.startNode();\n    this.expectContextual(\"require\");\n    this.expect(types.parenL);\n\n    if (!this.match(types.string)) {\n      throw this.unexpected();\n    }\n\n    node.expression = this.parseExprAtom();\n    this.expect(types.parenR);\n    return this.finishNode(node, \"TSExternalModuleReference\");\n  }\n\n  tsLookAhead(f) {\n    const state = this.state.clone();\n    const res = f();\n    this.state = state;\n    return res;\n  }\n\n  tsTryParseAndCatch(f) {\n    const result = this.tryParse(abort => f() || abort());\n    if (result.aborted || !result.node) return undefined;\n    if (result.error) this.state = result.failState;\n    return result.node;\n  }\n\n  tsTryParse(f) {\n    const state = this.state.clone();\n    const result = f();\n\n    if (result !== undefined && result !== false) {\n      return result;\n    } else {\n      this.state = state;\n      return undefined;\n    }\n  }\n\n  tsTryParseDeclare(nany) {\n    if (this.isLineTerminator()) {\n      return;\n    }\n\n    let starttype = this.state.type;\n    let kind;\n\n    if (this.isContextual(\"let\")) {\n      starttype = types._var;\n      kind = \"let\";\n    }\n\n    return this.tsInDeclareContext(() => {\n      switch (starttype) {\n        case types._function:\n          nany.declare = true;\n          return this.parseFunctionStatement(nany, false, true);\n\n        case types._class:\n          nany.declare = true;\n          return this.parseClass(nany, true, false);\n\n        case types._const:\n          if (this.match(types._const) && this.isLookaheadContextual(\"enum\")) {\n            this.expect(types._const);\n            this.expectContextual(\"enum\");\n            return this.tsParseEnumDeclaration(nany, true);\n          }\n\n        case types._var:\n          kind = kind || this.state.value;\n          return this.parseVarStatement(nany, kind);\n\n        case types.name:\n          {\n            const value = this.state.value;\n\n            if (value === \"global\") {\n              return this.tsParseAmbientExternalModuleDeclaration(nany);\n            } else {\n              return this.tsParseDeclaration(nany, value, true);\n            }\n          }\n      }\n    });\n  }\n\n  tsTryParseExportDeclaration() {\n    return this.tsParseDeclaration(this.startNode(), this.state.value, true);\n  }\n\n  tsParseExpressionStatement(node, expr) {\n    switch (expr.name) {\n      case \"declare\":\n        {\n          const declaration = this.tsTryParseDeclare(node);\n\n          if (declaration) {\n            declaration.declare = true;\n            return declaration;\n          }\n\n          break;\n        }\n\n      case \"global\":\n        if (this.match(types.braceL)) {\n          this.scope.enter(SCOPE_TS_MODULE);\n          this.prodParam.enter(PARAM);\n          const mod = node;\n          mod.global = true;\n          mod.id = expr;\n          mod.body = this.tsParseModuleBlock();\n          this.scope.exit();\n          this.prodParam.exit();\n          return this.finishNode(mod, \"TSModuleDeclaration\");\n        }\n\n        break;\n\n      default:\n        return this.tsParseDeclaration(node, expr.name, false);\n    }\n  }\n\n  tsParseDeclaration(node, value, next) {\n    switch (value) {\n      case \"abstract\":\n        if (this.tsCheckLineTerminator(next) && (this.match(types._class) || this.match(types.name))) {\n          return this.tsParseAbstractDeclaration(node);\n        }\n\n        break;\n\n      case \"enum\":\n        if (next || this.match(types.name)) {\n          if (next) this.next();\n          return this.tsParseEnumDeclaration(node, false);\n        }\n\n        break;\n\n      case \"interface\":\n        if (this.tsCheckLineTerminator(next) && this.match(types.name)) {\n          return this.tsParseInterfaceDeclaration(node);\n        }\n\n        break;\n\n      case \"module\":\n        if (this.tsCheckLineTerminator(next)) {\n          if (this.match(types.string)) {\n            return this.tsParseAmbientExternalModuleDeclaration(node);\n          } else if (this.match(types.name)) {\n            return this.tsParseModuleOrNamespaceDeclaration(node);\n          }\n        }\n\n        break;\n\n      case \"namespace\":\n        if (this.tsCheckLineTerminator(next) && this.match(types.name)) {\n          return this.tsParseModuleOrNamespaceDeclaration(node);\n        }\n\n        break;\n\n      case \"type\":\n        if (this.tsCheckLineTerminator(next) && this.match(types.name)) {\n          return this.tsParseTypeAliasDeclaration(node);\n        }\n\n        break;\n    }\n  }\n\n  tsCheckLineTerminator(next) {\n    if (next) {\n      if (this.hasFollowingLineBreak()) return false;\n      this.next();\n      return true;\n    }\n\n    return !this.isLineTerminator();\n  }\n\n  tsTryParseGenericAsyncArrowFunction(startPos, startLoc) {\n    if (!this.isRelational(\"<\")) {\n      return undefined;\n    }\n\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n    this.state.maybeInArrowParameters = true;\n    const res = this.tsTryParseAndCatch(() => {\n      const node = this.startNodeAt(startPos, startLoc);\n      node.typeParameters = this.tsParseTypeParameters();\n      super.parseFunctionParams(node);\n      node.returnType = this.tsTryParseTypeOrTypePredicateAnnotation();\n      this.expect(types.arrow);\n      return node;\n    });\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n\n    if (!res) {\n      return undefined;\n    }\n\n    return this.parseArrowExpression(res, null, true);\n  }\n\n  tsParseTypeArguments() {\n    const node = this.startNode();\n    node.params = this.tsInType(() => this.tsInNoContext(() => {\n      this.expectRelational(\"<\");\n      return this.tsParseDelimitedList(\"TypeParametersOrArguments\", this.tsParseType.bind(this));\n    }));\n\n    if (node.params.length === 0) {\n      this.raise(node.start, TSErrors.EmptyTypeArguments);\n    }\n\n    this.state.exprAllowed = false;\n    this.expectRelational(\">\");\n    return this.finishNode(node, \"TSTypeParameterInstantiation\");\n  }\n\n  tsIsDeclarationStart() {\n    if (this.match(types.name)) {\n      switch (this.state.value) {\n        case \"abstract\":\n        case \"declare\":\n        case \"enum\":\n        case \"interface\":\n        case \"module\":\n        case \"namespace\":\n        case \"type\":\n          return true;\n      }\n    }\n\n    return false;\n  }\n\n  isExportDefaultSpecifier() {\n    if (this.tsIsDeclarationStart()) return false;\n    return super.isExportDefaultSpecifier();\n  }\n\n  parseAssignableListItem(allowModifiers, decorators) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    let accessibility;\n    let readonly = false;\n\n    if (allowModifiers !== undefined) {\n      accessibility = this.parseAccessModifier();\n      readonly = !!this.tsParseModifier([\"readonly\"]);\n\n      if (allowModifiers === false && (accessibility || readonly)) {\n        this.raise(startPos, TSErrors.UnexpectedParameterModifier);\n      }\n    }\n\n    const left = this.parseMaybeDefault();\n    this.parseAssignableListItemTypes(left);\n    const elt = this.parseMaybeDefault(left.start, left.loc.start, left);\n\n    if (accessibility || readonly) {\n      const pp = this.startNodeAt(startPos, startLoc);\n\n      if (decorators.length) {\n        pp.decorators = decorators;\n      }\n\n      if (accessibility) pp.accessibility = accessibility;\n      if (readonly) pp.readonly = readonly;\n\n      if (elt.type !== \"Identifier\" && elt.type !== \"AssignmentPattern\") {\n        this.raise(pp.start, TSErrors.UnsupportedParameterPropertyKind);\n      }\n\n      pp.parameter = elt;\n      return this.finishNode(pp, \"TSParameterProperty\");\n    }\n\n    if (decorators.length) {\n      left.decorators = decorators;\n    }\n\n    return elt;\n  }\n\n  parseFunctionBodyAndFinish(node, type, isMethod = false) {\n    if (this.match(types.colon)) {\n      node.returnType = this.tsParseTypeOrTypePredicateAnnotation(types.colon);\n    }\n\n    const bodilessType = type === \"FunctionDeclaration\" ? \"TSDeclareFunction\" : type === \"ClassMethod\" ? \"TSDeclareMethod\" : undefined;\n\n    if (bodilessType && !this.match(types.braceL) && this.isLineTerminator()) {\n      this.finishNode(node, bodilessType);\n      return;\n    }\n\n    if (bodilessType === \"TSDeclareFunction\" && this.state.isDeclareContext) {\n      this.raise(node.start, TSErrors.DeclareFunctionHasImplementation);\n\n      if (node.declare) {\n        super.parseFunctionBodyAndFinish(node, bodilessType, isMethod);\n        return;\n      }\n    }\n\n    super.parseFunctionBodyAndFinish(node, type, isMethod);\n  }\n\n  registerFunctionStatementId(node) {\n    if (!node.body && node.id) {\n      this.checkLVal(node.id, \"function name\", BIND_TS_AMBIENT);\n    } else {\n      super.registerFunctionStatementId(...arguments);\n    }\n  }\n\n  tsCheckForInvalidTypeCasts(items) {\n    items.forEach(node => {\n      if ((node == null ? void 0 : node.type) === \"TSTypeCastExpression\") {\n        this.raise(node.typeAnnotation.start, TSErrors.UnexpectedTypeAnnotation);\n      }\n    });\n  }\n\n  toReferencedList(exprList, isInParens) {\n    this.tsCheckForInvalidTypeCasts(exprList);\n    return exprList;\n  }\n\n  parseArrayLike(...args) {\n    const node = super.parseArrayLike(...args);\n\n    if (node.type === \"ArrayExpression\") {\n      this.tsCheckForInvalidTypeCasts(node.elements);\n    }\n\n    return node;\n  }\n\n  parseSubscript(base, startPos, startLoc, noCalls, state) {\n    if (!this.hasPrecedingLineBreak() && this.match(types.bang)) {\n      this.state.exprAllowed = false;\n      this.next();\n      const nonNullExpression = this.startNodeAt(startPos, startLoc);\n      nonNullExpression.expression = base;\n      return this.finishNode(nonNullExpression, \"TSNonNullExpression\");\n    }\n\n    if (this.isRelational(\"<\")) {\n      const result = this.tsTryParseAndCatch(() => {\n        if (!noCalls && this.atPossibleAsyncArrow(base)) {\n          const asyncArrowFn = this.tsTryParseGenericAsyncArrowFunction(startPos, startLoc);\n\n          if (asyncArrowFn) {\n            return asyncArrowFn;\n          }\n        }\n\n        const node = this.startNodeAt(startPos, startLoc);\n        node.callee = base;\n        const typeArguments = this.tsParseTypeArguments();\n\n        if (typeArguments) {\n          if (!noCalls && this.eat(types.parenL)) {\n            node.arguments = this.parseCallExpressionArguments(types.parenR, false);\n            this.tsCheckForInvalidTypeCasts(node.arguments);\n            node.typeParameters = typeArguments;\n\n            if (state.optionalChainMember) {\n              node.optional = false;\n            }\n\n            return this.finishCallExpression(node, state.optionalChainMember);\n          } else if (this.match(types.backQuote)) {\n            const result = this.parseTaggedTemplateExpression(base, startPos, startLoc, state);\n            result.typeParameters = typeArguments;\n            return result;\n          }\n        }\n\n        this.unexpected();\n      });\n      if (result) return result;\n    }\n\n    return super.parseSubscript(base, startPos, startLoc, noCalls, state);\n  }\n\n  parseNewArguments(node) {\n    if (this.isRelational(\"<\")) {\n      const typeParameters = this.tsTryParseAndCatch(() => {\n        const args = this.tsParseTypeArguments();\n        if (!this.match(types.parenL)) this.unexpected();\n        return args;\n      });\n\n      if (typeParameters) {\n        node.typeParameters = typeParameters;\n      }\n    }\n\n    super.parseNewArguments(node);\n  }\n\n  parseExprOp(left, leftStartPos, leftStartLoc, minPrec) {\n    if (nonNull(types._in.binop) > minPrec && !this.hasPrecedingLineBreak() && this.isContextual(\"as\")) {\n      const node = this.startNodeAt(leftStartPos, leftStartLoc);\n      node.expression = left;\n\n      const _const = this.tsTryNextParseConstantContext();\n\n      if (_const) {\n        node.typeAnnotation = _const;\n      } else {\n        node.typeAnnotation = this.tsNextThenParseType();\n      }\n\n      this.finishNode(node, \"TSAsExpression\");\n      this.reScan_lt_gt();\n      return this.parseExprOp(node, leftStartPos, leftStartLoc, minPrec);\n    }\n\n    return super.parseExprOp(left, leftStartPos, leftStartLoc, minPrec);\n  }\n\n  checkReservedWord(word, startLoc, checkKeywords, isBinding) {}\n\n  checkDuplicateExports() {}\n\n  parseImport(node) {\n    node.importKind = \"value\";\n\n    if (this.match(types.name) || this.match(types.star) || this.match(types.braceL)) {\n      let ahead = this.lookahead();\n\n      if (this.isContextual(\"type\") && ahead.type !== types.comma && !(ahead.type === types.name && ahead.value === \"from\") && ahead.type !== types.eq) {\n        node.importKind = \"type\";\n        this.next();\n        ahead = this.lookahead();\n      }\n\n      if (this.match(types.name) && ahead.type === types.eq) {\n        return this.tsParseImportEqualsDeclaration(node);\n      }\n    }\n\n    const importNode = super.parseImport(node);\n\n    if (importNode.importKind === \"type\" && importNode.specifiers.length > 1 && importNode.specifiers[0].type === \"ImportDefaultSpecifier\") {\n      this.raise(importNode.start, \"A type-only import can specify a default import or named bindings, but not both.\");\n    }\n\n    return importNode;\n  }\n\n  parseExport(node) {\n    if (this.match(types._import)) {\n      this.next();\n\n      if (this.isContextual(\"type\") && this.lookaheadCharCode() !== 61) {\n        node.importKind = \"type\";\n        this.next();\n      } else {\n        node.importKind = \"value\";\n      }\n\n      return this.tsParseImportEqualsDeclaration(node, true);\n    } else if (this.eat(types.eq)) {\n      const assign = node;\n      assign.expression = this.parseExpression();\n      this.semicolon();\n      return this.finishNode(assign, \"TSExportAssignment\");\n    } else if (this.eatContextual(\"as\")) {\n      const decl = node;\n      this.expectContextual(\"namespace\");\n      decl.id = this.parseIdentifier();\n      this.semicolon();\n      return this.finishNode(decl, \"TSNamespaceExportDeclaration\");\n    } else {\n      if (this.isContextual(\"type\") && this.lookahead().type === types.braceL) {\n        this.next();\n        node.exportKind = \"type\";\n      } else {\n        node.exportKind = \"value\";\n      }\n\n      return super.parseExport(node);\n    }\n  }\n\n  isAbstractClass() {\n    return this.isContextual(\"abstract\") && this.lookahead().type === types._class;\n  }\n\n  parseExportDefaultExpression() {\n    if (this.isAbstractClass()) {\n      const cls = this.startNode();\n      this.next();\n      cls.abstract = true;\n      this.parseClass(cls, true, true);\n      return cls;\n    }\n\n    if (this.state.value === \"interface\") {\n      const result = this.tsParseDeclaration(this.startNode(), this.state.value, true);\n      if (result) return result;\n    }\n\n    return super.parseExportDefaultExpression();\n  }\n\n  parseStatementContent(context, topLevel) {\n    if (this.state.type === types._const) {\n      const ahead = this.lookahead();\n\n      if (ahead.type === types.name && ahead.value === \"enum\") {\n        const node = this.startNode();\n        this.expect(types._const);\n        this.expectContextual(\"enum\");\n        return this.tsParseEnumDeclaration(node, true);\n      }\n    }\n\n    return super.parseStatementContent(context, topLevel);\n  }\n\n  parseAccessModifier() {\n    return this.tsParseModifier([\"public\", \"protected\", \"private\"]);\n  }\n\n  parseClassMember(classBody, member, state) {\n    this.tsParseModifiers(member, [\"declare\", \"private\", \"public\", \"protected\"]);\n\n    const callParseClassMember = () => {\n      super.parseClassMember(classBody, member, state);\n    };\n\n    if (member.declare) {\n      this.tsInDeclareContext(callParseClassMember);\n    } else {\n      callParseClassMember();\n    }\n  }\n\n  parseClassMemberWithIsStatic(classBody, member, state, isStatic) {\n    this.tsParseModifiers(member, [\"abstract\", \"readonly\", \"declare\"]);\n    const idx = this.tsTryParseIndexSignature(member);\n\n    if (idx) {\n      classBody.body.push(idx);\n\n      if (member.abstract) {\n        this.raise(member.start, TSErrors.IndexSignatureHasAbstract);\n      }\n\n      if (isStatic) {\n        this.raise(member.start, TSErrors.IndexSignatureHasStatic);\n      }\n\n      if (member.accessibility) {\n        this.raise(member.start, TSErrors.IndexSignatureHasAccessibility, member.accessibility);\n      }\n\n      if (member.declare) {\n        this.raise(member.start, TSErrors.IndexSignatureHasDeclare);\n      }\n\n      return;\n    }\n\n    if (!this.state.inAbstractClass && member.abstract) {\n      this.raise(member.start, TSErrors.NonAbstractClassHasAbstractMethod);\n    }\n\n    super.parseClassMemberWithIsStatic(classBody, member, state, isStatic);\n  }\n\n  parsePostMemberNameModifiers(methodOrProp) {\n    const optional = this.eat(types.question);\n    if (optional) methodOrProp.optional = true;\n\n    if (methodOrProp.readonly && this.match(types.parenL)) {\n      this.raise(methodOrProp.start, TSErrors.ClassMethodHasReadonly);\n    }\n\n    if (methodOrProp.declare && this.match(types.parenL)) {\n      this.raise(methodOrProp.start, TSErrors.ClassMethodHasDeclare);\n    }\n  }\n\n  parseExpressionStatement(node, expr) {\n    const decl = expr.type === \"Identifier\" ? this.tsParseExpressionStatement(node, expr) : undefined;\n    return decl || super.parseExpressionStatement(node, expr);\n  }\n\n  shouldParseExportDeclaration() {\n    if (this.tsIsDeclarationStart()) return true;\n    return super.shouldParseExportDeclaration();\n  }\n\n  parseConditional(expr, startPos, startLoc, refNeedsArrowPos) {\n    if (!refNeedsArrowPos || !this.match(types.question)) {\n      return super.parseConditional(expr, startPos, startLoc, refNeedsArrowPos);\n    }\n\n    const result = this.tryParse(() => super.parseConditional(expr, startPos, startLoc));\n\n    if (!result.node) {\n      refNeedsArrowPos.start = result.error.pos || this.state.start;\n      return expr;\n    }\n\n    if (result.error) this.state = result.failState;\n    return result.node;\n  }\n\n  parseParenItem(node, startPos, startLoc) {\n    node = super.parseParenItem(node, startPos, startLoc);\n\n    if (this.eat(types.question)) {\n      node.optional = true;\n      this.resetEndLocation(node);\n    }\n\n    if (this.match(types.colon)) {\n      const typeCastNode = this.startNodeAt(startPos, startLoc);\n      typeCastNode.expression = node;\n      typeCastNode.typeAnnotation = this.tsParseTypeAnnotation();\n      return this.finishNode(typeCastNode, \"TSTypeCastExpression\");\n    }\n\n    return node;\n  }\n\n  parseExportDeclaration(node) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const isDeclare = this.eatContextual(\"declare\");\n\n    if (isDeclare && (this.isContextual(\"declare\") || !this.shouldParseExportDeclaration())) {\n      throw this.raise(this.state.start, TSErrors.ExpectedAmbientAfterExportDeclare);\n    }\n\n    let declaration;\n\n    if (this.match(types.name)) {\n      declaration = this.tsTryParseExportDeclaration();\n    }\n\n    if (!declaration) {\n      declaration = super.parseExportDeclaration(node);\n    }\n\n    if (declaration && (declaration.type === \"TSInterfaceDeclaration\" || declaration.type === \"TSTypeAliasDeclaration\" || isDeclare)) {\n      node.exportKind = \"type\";\n    }\n\n    if (declaration && isDeclare) {\n      this.resetStartLocation(declaration, startPos, startLoc);\n      declaration.declare = true;\n    }\n\n    return declaration;\n  }\n\n  parseClassId(node, isStatement, optionalId) {\n    if ((!isStatement || optionalId) && this.isContextual(\"implements\")) {\n      return;\n    }\n\n    super.parseClassId(node, isStatement, optionalId, node.declare ? BIND_TS_AMBIENT : BIND_CLASS);\n    const typeParameters = this.tsTryParseTypeParameters();\n    if (typeParameters) node.typeParameters = typeParameters;\n  }\n\n  parseClassPropertyAnnotation(node) {\n    if (!node.optional && this.eat(types.bang)) {\n      node.definite = true;\n    }\n\n    const type = this.tsTryParseTypeAnnotation();\n    if (type) node.typeAnnotation = type;\n  }\n\n  parseClassProperty(node) {\n    this.parseClassPropertyAnnotation(node);\n\n    if (this.state.isDeclareContext && this.match(types.eq)) {\n      this.raise(this.state.start, TSErrors.DeclareClassFieldHasInitializer);\n    }\n\n    return super.parseClassProperty(node);\n  }\n\n  parseClassPrivateProperty(node) {\n    if (node.abstract) {\n      this.raise(node.start, TSErrors.PrivateElementHasAbstract);\n    }\n\n    if (node.accessibility) {\n      this.raise(node.start, TSErrors.PrivateElementHasAccessibility, node.accessibility);\n    }\n\n    this.parseClassPropertyAnnotation(node);\n    return super.parseClassPrivateProperty(node);\n  }\n\n  pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper) {\n    const typeParameters = this.tsTryParseTypeParameters();\n\n    if (typeParameters && isConstructor) {\n      this.raise(typeParameters.start, TSErrors.ConstructorHasTypeParameters);\n    }\n\n    if (typeParameters) method.typeParameters = typeParameters;\n    super.pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper);\n  }\n\n  pushClassPrivateMethod(classBody, method, isGenerator, isAsync) {\n    const typeParameters = this.tsTryParseTypeParameters();\n    if (typeParameters) method.typeParameters = typeParameters;\n    super.pushClassPrivateMethod(classBody, method, isGenerator, isAsync);\n  }\n\n  parseClassSuper(node) {\n    super.parseClassSuper(node);\n\n    if (node.superClass && this.isRelational(\"<\")) {\n      node.superTypeParameters = this.tsParseTypeArguments();\n    }\n\n    if (this.eatContextual(\"implements\")) {\n      node.implements = this.tsParseHeritageClause(\"implements\");\n    }\n  }\n\n  parseObjPropValue(prop, ...args) {\n    const typeParameters = this.tsTryParseTypeParameters();\n    if (typeParameters) prop.typeParameters = typeParameters;\n    super.parseObjPropValue(prop, ...args);\n  }\n\n  parseFunctionParams(node, allowModifiers) {\n    const typeParameters = this.tsTryParseTypeParameters();\n    if (typeParameters) node.typeParameters = typeParameters;\n    super.parseFunctionParams(node, allowModifiers);\n  }\n\n  parseVarId(decl, kind) {\n    super.parseVarId(decl, kind);\n\n    if (decl.id.type === \"Identifier\" && this.eat(types.bang)) {\n      decl.definite = true;\n    }\n\n    const type = this.tsTryParseTypeAnnotation();\n\n    if (type) {\n      decl.id.typeAnnotation = type;\n      this.resetEndLocation(decl.id);\n    }\n  }\n\n  parseAsyncArrowFromCallExpression(node, call) {\n    if (this.match(types.colon)) {\n      node.returnType = this.tsParseTypeAnnotation();\n    }\n\n    return super.parseAsyncArrowFromCallExpression(node, call);\n  }\n\n  parseMaybeAssign(...args) {\n    var _jsx, _jsx2, _typeCast, _jsx3, _typeCast2, _jsx4, _typeCast3;\n\n    let state;\n    let jsx;\n    let typeCast;\n\n    if (this.hasPlugin(\"jsx\") && (this.match(types.jsxTagStart) || this.isRelational(\"<\"))) {\n      state = this.state.clone();\n      jsx = this.tryParse(() => super.parseMaybeAssign(...args), state);\n      if (!jsx.error) return jsx.node;\n      const {\n        context\n      } = this.state;\n\n      if (context[context.length - 1] === types$1.j_oTag) {\n        context.length -= 2;\n      } else if (context[context.length - 1] === types$1.j_expr) {\n        context.length -= 1;\n      }\n    }\n\n    if (!((_jsx = jsx) != null && _jsx.error) && !this.isRelational(\"<\")) {\n      return super.parseMaybeAssign(...args);\n    }\n\n    let typeParameters;\n    state = state || this.state.clone();\n    const arrow = this.tryParse(abort => {\n      var _typeParameters;\n\n      typeParameters = this.tsParseTypeParameters();\n      const expr = super.parseMaybeAssign(...args);\n\n      if (expr.type !== \"ArrowFunctionExpression\" || expr.extra && expr.extra.parenthesized) {\n        abort();\n      }\n\n      if (((_typeParameters = typeParameters) == null ? void 0 : _typeParameters.params.length) !== 0) {\n        this.resetStartLocationFromNode(expr, typeParameters);\n      }\n\n      expr.typeParameters = typeParameters;\n      return expr;\n    }, state);\n    if (!arrow.error && !arrow.aborted) return arrow.node;\n\n    if (!jsx) {\n      assert(!this.hasPlugin(\"jsx\"));\n      typeCast = this.tryParse(() => super.parseMaybeAssign(...args), state);\n      if (!typeCast.error) return typeCast.node;\n    }\n\n    if ((_jsx2 = jsx) != null && _jsx2.node) {\n      this.state = jsx.failState;\n      return jsx.node;\n    }\n\n    if (arrow.node) {\n      this.state = arrow.failState;\n      return arrow.node;\n    }\n\n    if ((_typeCast = typeCast) != null && _typeCast.node) {\n      this.state = typeCast.failState;\n      return typeCast.node;\n    }\n\n    if ((_jsx3 = jsx) != null && _jsx3.thrown) throw jsx.error;\n    if (arrow.thrown) throw arrow.error;\n    if ((_typeCast2 = typeCast) != null && _typeCast2.thrown) throw typeCast.error;\n    throw ((_jsx4 = jsx) == null ? void 0 : _jsx4.error) || arrow.error || ((_typeCast3 = typeCast) == null ? void 0 : _typeCast3.error);\n  }\n\n  parseMaybeUnary(refExpressionErrors) {\n    if (!this.hasPlugin(\"jsx\") && this.isRelational(\"<\")) {\n      return this.tsParseTypeAssertion();\n    } else {\n      return super.parseMaybeUnary(refExpressionErrors);\n    }\n  }\n\n  parseArrow(node) {\n    if (this.match(types.colon)) {\n      const result = this.tryParse(abort => {\n        const returnType = this.tsParseTypeOrTypePredicateAnnotation(types.colon);\n        if (this.canInsertSemicolon() || !this.match(types.arrow)) abort();\n        return returnType;\n      });\n      if (result.aborted) return;\n\n      if (!result.thrown) {\n        if (result.error) this.state = result.failState;\n        node.returnType = result.node;\n      }\n    }\n\n    return super.parseArrow(node);\n  }\n\n  parseAssignableListItemTypes(param) {\n    if (this.eat(types.question)) {\n      if (param.type !== \"Identifier\" && !this.state.isDeclareContext && !this.state.inType) {\n        this.raise(param.start, TSErrors.PatternIsOptional);\n      }\n\n      param.optional = true;\n    }\n\n    const type = this.tsTryParseTypeAnnotation();\n    if (type) param.typeAnnotation = type;\n    this.resetEndLocation(param);\n    return param;\n  }\n\n  toAssignable(node, isLHS = false) {\n    switch (node.type) {\n      case \"TSTypeCastExpression\":\n        return super.toAssignable(this.typeCastToParameter(node), isLHS);\n\n      case \"TSParameterProperty\":\n        return super.toAssignable(node, isLHS);\n\n      case \"ParenthesizedExpression\":\n        return this.toAssignableParenthesizedExpression(node, isLHS);\n\n      case \"TSAsExpression\":\n      case \"TSNonNullExpression\":\n      case \"TSTypeAssertion\":\n        node.expression = this.toAssignable(node.expression, isLHS);\n        return node;\n\n      default:\n        return super.toAssignable(node, isLHS);\n    }\n  }\n\n  toAssignableParenthesizedExpression(node, isLHS) {\n    switch (node.expression.type) {\n      case \"TSAsExpression\":\n      case \"TSNonNullExpression\":\n      case \"TSTypeAssertion\":\n      case \"ParenthesizedExpression\":\n        node.expression = this.toAssignable(node.expression, isLHS);\n        return node;\n\n      default:\n        return super.toAssignable(node, isLHS);\n    }\n  }\n\n  checkLVal(expr, contextDescription, ...args) {\n    switch (expr.type) {\n      case \"TSTypeCastExpression\":\n        return;\n\n      case \"TSParameterProperty\":\n        this.checkLVal(expr.parameter, \"parameter property\", ...args);\n        return;\n\n      case \"TSAsExpression\":\n      case \"TSNonNullExpression\":\n      case \"TSTypeAssertion\":\n        this.checkLVal(expr.expression, contextDescription, ...args);\n        return;\n\n      default:\n        super.checkLVal(expr, contextDescription, ...args);\n        return;\n    }\n  }\n\n  parseBindingAtom() {\n    switch (this.state.type) {\n      case types._this:\n        return this.parseIdentifier(true);\n\n      default:\n        return super.parseBindingAtom();\n    }\n  }\n\n  parseMaybeDecoratorArguments(expr) {\n    if (this.isRelational(\"<\")) {\n      const typeArguments = this.tsParseTypeArguments();\n\n      if (this.match(types.parenL)) {\n        const call = super.parseMaybeDecoratorArguments(expr);\n        call.typeParameters = typeArguments;\n        return call;\n      }\n\n      this.unexpected(this.state.start, types.parenL);\n    }\n\n    return super.parseMaybeDecoratorArguments(expr);\n  }\n\n  isClassMethod() {\n    return this.isRelational(\"<\") || super.isClassMethod();\n  }\n\n  isClassProperty() {\n    return this.match(types.bang) || this.match(types.colon) || super.isClassProperty();\n  }\n\n  parseMaybeDefault(...args) {\n    const node = super.parseMaybeDefault(...args);\n\n    if (node.type === \"AssignmentPattern\" && node.typeAnnotation && node.right.start < node.typeAnnotation.start) {\n      this.raise(node.typeAnnotation.start, TSErrors.TypeAnnotationAfterAssign);\n    }\n\n    return node;\n  }\n\n  getTokenFromCode(code) {\n    if (this.state.inType && (code === 62 || code === 60)) {\n      return this.finishOp(types.relational, 1);\n    } else {\n      return super.getTokenFromCode(code);\n    }\n  }\n\n  reScan_lt_gt() {\n    if (this.match(types.relational)) {\n      const code = this.input.charCodeAt(this.state.start);\n\n      if (code === 60 || code === 62) {\n        this.state.pos -= 1;\n        this.readToken_lt_gt(code);\n      }\n    }\n  }\n\n  toAssignableList(exprList) {\n    for (let i = 0; i < exprList.length; i++) {\n      const expr = exprList[i];\n      if (!expr) continue;\n\n      switch (expr.type) {\n        case \"TSTypeCastExpression\":\n          exprList[i] = this.typeCastToParameter(expr);\n          break;\n\n        case \"TSAsExpression\":\n        case \"TSTypeAssertion\":\n          if (!this.state.maybeInArrowParameters) {\n            exprList[i] = this.typeCastToParameter(expr);\n          } else {\n            this.raise(expr.start, TSErrors.UnexpectedTypeCastInParameter);\n          }\n\n          break;\n      }\n    }\n\n    return super.toAssignableList(...arguments);\n  }\n\n  typeCastToParameter(node) {\n    node.expression.typeAnnotation = node.typeAnnotation;\n    this.resetEndLocation(node.expression, node.typeAnnotation.end, node.typeAnnotation.loc.end);\n    return node.expression;\n  }\n\n  shouldParseArrow() {\n    return this.match(types.colon) || super.shouldParseArrow();\n  }\n\n  shouldParseAsyncArrow() {\n    return this.match(types.colon) || super.shouldParseAsyncArrow();\n  }\n\n  canHaveLeadingDecorator() {\n    return super.canHaveLeadingDecorator() || this.isAbstractClass();\n  }\n\n  jsxParseOpeningElementAfterName(node) {\n    if (this.isRelational(\"<\")) {\n      const typeArguments = this.tsTryParseAndCatch(() => this.tsParseTypeArguments());\n      if (typeArguments) node.typeParameters = typeArguments;\n    }\n\n    return super.jsxParseOpeningElementAfterName(node);\n  }\n\n  getGetterSetterExpectedParamCount(method) {\n    const baseCount = super.getGetterSetterExpectedParamCount(method);\n    const params = this.getObjectOrClassMethodParams(method);\n    const firstParam = params[0];\n    const hasContextParam = firstParam && firstParam.type === \"Identifier\" && firstParam.name === \"this\";\n    return hasContextParam ? baseCount + 1 : baseCount;\n  }\n\n  parseCatchClauseParam() {\n    const param = super.parseCatchClauseParam();\n    const type = this.tsTryParseTypeAnnotation();\n\n    if (type) {\n      param.typeAnnotation = type;\n      this.resetEndLocation(param);\n    }\n\n    return param;\n  }\n\n  tsInDeclareContext(cb) {\n    const oldIsDeclareContext = this.state.isDeclareContext;\n    this.state.isDeclareContext = true;\n\n    try {\n      return cb();\n    } finally {\n      this.state.isDeclareContext = oldIsDeclareContext;\n    }\n  }\n\n  parseClass(node, ...args) {\n    const oldInAbstractClass = this.state.inAbstractClass;\n    this.state.inAbstractClass = !!node.abstract;\n\n    try {\n      return super.parseClass(node, ...args);\n    } finally {\n      this.state.inAbstractClass = oldInAbstractClass;\n    }\n  }\n\n  tsParseAbstractDeclaration(node) {\n    if (this.match(types._class)) {\n      node.abstract = true;\n      return this.parseClass(node, true, false);\n    } else if (this.isContextual(\"interface\")) {\n      if (!this.hasFollowingLineBreak()) {\n        node.abstract = true;\n        this.raise(node.start, TSErrors.NonClassMethodPropertyHasAbstractModifer);\n        this.next();\n        return this.tsParseInterfaceDeclaration(node);\n      }\n    } else {\n      this.unexpected(null, types._class);\n    }\n  }\n\n  parseMethod(...args) {\n    const method = super.parseMethod(...args);\n\n    if (method.abstract) {\n      const hasBody = this.hasPlugin(\"estree\") ? !!method.value.body : !!method.body;\n\n      if (hasBody) {\n        const {\n          key\n        } = method;\n        this.raise(method.start, TSErrors.AbstractMethodHasImplementation, key.type === \"Identifier\" ? key.name : `[${this.input.slice(key.start, key.end)}]`);\n      }\n    }\n\n    return method;\n  }\n\n});\n\ntypes.placeholder = new TokenType(\"%%\", {\n  startsExpr: true\n});\nvar placeholders = (superClass => class extends superClass {\n  parsePlaceholder(expectedNode) {\n    if (this.match(types.placeholder)) {\n      const node = this.startNode();\n      this.next();\n      this.assertNoSpace(\"Unexpected space in placeholder.\");\n      node.name = super.parseIdentifier(true);\n      this.assertNoSpace(\"Unexpected space in placeholder.\");\n      this.expect(types.placeholder);\n      return this.finishPlaceholder(node, expectedNode);\n    }\n  }\n\n  finishPlaceholder(node, expectedNode) {\n    const isFinished = !!(node.expectedNode && node.type === \"Placeholder\");\n    node.expectedNode = expectedNode;\n    return isFinished ? node : this.finishNode(node, \"Placeholder\");\n  }\n\n  getTokenFromCode(code) {\n    if (code === 37 && this.input.charCodeAt(this.state.pos + 1) === 37) {\n      return this.finishOp(types.placeholder, 2);\n    }\n\n    return super.getTokenFromCode(...arguments);\n  }\n\n  parseExprAtom() {\n    return this.parsePlaceholder(\"Expression\") || super.parseExprAtom(...arguments);\n  }\n\n  parseIdentifier() {\n    return this.parsePlaceholder(\"Identifier\") || super.parseIdentifier(...arguments);\n  }\n\n  checkReservedWord(word) {\n    if (word !== undefined) super.checkReservedWord(...arguments);\n  }\n\n  parseBindingAtom() {\n    return this.parsePlaceholder(\"Pattern\") || super.parseBindingAtom(...arguments);\n  }\n\n  checkLVal(expr) {\n    if (expr.type !== \"Placeholder\") super.checkLVal(...arguments);\n  }\n\n  toAssignable(node) {\n    if (node && node.type === \"Placeholder\" && node.expectedNode === \"Expression\") {\n      node.expectedNode = \"Pattern\";\n      return node;\n    }\n\n    return super.toAssignable(...arguments);\n  }\n\n  isLet(context) {\n    if (super.isLet(context)) {\n      return true;\n    }\n\n    if (!this.isContextual(\"let\")) {\n      return false;\n    }\n\n    if (context) return false;\n    const nextToken = this.lookahead();\n\n    if (nextToken.type === types.placeholder) {\n      return true;\n    }\n\n    return false;\n  }\n\n  verifyBreakContinue(node) {\n    if (node.label && node.label.type === \"Placeholder\") return;\n    super.verifyBreakContinue(...arguments);\n  }\n\n  parseExpressionStatement(node, expr) {\n    if (expr.type !== \"Placeholder\" || expr.extra && expr.extra.parenthesized) {\n      return super.parseExpressionStatement(...arguments);\n    }\n\n    if (this.match(types.colon)) {\n      const stmt = node;\n      stmt.label = this.finishPlaceholder(expr, \"Identifier\");\n      this.next();\n      stmt.body = this.parseStatement(\"label\");\n      return this.finishNode(stmt, \"LabeledStatement\");\n    }\n\n    this.semicolon();\n    node.name = expr.name;\n    return this.finishPlaceholder(node, \"Statement\");\n  }\n\n  parseBlock() {\n    return this.parsePlaceholder(\"BlockStatement\") || super.parseBlock(...arguments);\n  }\n\n  parseFunctionId() {\n    return this.parsePlaceholder(\"Identifier\") || super.parseFunctionId(...arguments);\n  }\n\n  parseClass(node, isStatement, optionalId) {\n    const type = isStatement ? \"ClassDeclaration\" : \"ClassExpression\";\n    this.next();\n    this.takeDecorators(node);\n    const oldStrict = this.state.strict;\n    const placeholder = this.parsePlaceholder(\"Identifier\");\n\n    if (placeholder) {\n      if (this.match(types._extends) || this.match(types.placeholder) || this.match(types.braceL)) {\n        node.id = placeholder;\n      } else if (optionalId || !isStatement) {\n        node.id = null;\n        node.body = this.finishPlaceholder(placeholder, \"ClassBody\");\n        return this.finishNode(node, type);\n      } else {\n        this.unexpected(null, \"A class name is required\");\n      }\n    } else {\n      this.parseClassId(node, isStatement, optionalId);\n    }\n\n    this.parseClassSuper(node);\n    node.body = this.parsePlaceholder(\"ClassBody\") || this.parseClassBody(!!node.superClass, oldStrict);\n    return this.finishNode(node, type);\n  }\n\n  parseExport(node) {\n    const placeholder = this.parsePlaceholder(\"Identifier\");\n    if (!placeholder) return super.parseExport(...arguments);\n\n    if (!this.isContextual(\"from\") && !this.match(types.comma)) {\n      node.specifiers = [];\n      node.source = null;\n      node.declaration = this.finishPlaceholder(placeholder, \"Declaration\");\n      return this.finishNode(node, \"ExportNamedDeclaration\");\n    }\n\n    this.expectPlugin(\"exportDefaultFrom\");\n    const specifier = this.startNode();\n    specifier.exported = placeholder;\n    node.specifiers = [this.finishNode(specifier, \"ExportDefaultSpecifier\")];\n    return super.parseExport(node);\n  }\n\n  isExportDefaultSpecifier() {\n    if (this.match(types._default)) {\n      const next = this.nextTokenStart();\n\n      if (this.isUnparsedContextual(next, \"from\")) {\n        if (this.input.startsWith(types.placeholder.label, this.nextTokenStartSince(next + 4))) {\n          return true;\n        }\n      }\n    }\n\n    return super.isExportDefaultSpecifier();\n  }\n\n  maybeParseExportDefaultSpecifier(node) {\n    if (node.specifiers && node.specifiers.length > 0) {\n      return true;\n    }\n\n    return super.maybeParseExportDefaultSpecifier(...arguments);\n  }\n\n  checkExport(node) {\n    const {\n      specifiers\n    } = node;\n\n    if (specifiers != null && specifiers.length) {\n      node.specifiers = specifiers.filter(node => node.exported.type === \"Placeholder\");\n    }\n\n    super.checkExport(node);\n    node.specifiers = specifiers;\n  }\n\n  parseImport(node) {\n    const placeholder = this.parsePlaceholder(\"Identifier\");\n    if (!placeholder) return super.parseImport(...arguments);\n    node.specifiers = [];\n\n    if (!this.isContextual(\"from\") && !this.match(types.comma)) {\n      node.source = this.finishPlaceholder(placeholder, \"StringLiteral\");\n      this.semicolon();\n      return this.finishNode(node, \"ImportDeclaration\");\n    }\n\n    const specifier = this.startNodeAtNode(placeholder);\n    specifier.local = placeholder;\n    this.finishNode(specifier, \"ImportDefaultSpecifier\");\n    node.specifiers.push(specifier);\n\n    if (this.eat(types.comma)) {\n      const hasStarImport = this.maybeParseStarImportSpecifier(node);\n      if (!hasStarImport) this.parseNamedImportSpecifiers(node);\n    }\n\n    this.expectContextual(\"from\");\n    node.source = this.parseImportSource();\n    this.semicolon();\n    return this.finishNode(node, \"ImportDeclaration\");\n  }\n\n  parseImportSource() {\n    return this.parsePlaceholder(\"StringLiteral\") || super.parseImportSource(...arguments);\n  }\n\n});\n\nvar v8intrinsic = (superClass => class extends superClass {\n  parseV8Intrinsic() {\n    if (this.match(types.modulo)) {\n      const v8IntrinsicStart = this.state.start;\n      const node = this.startNode();\n      this.eat(types.modulo);\n\n      if (this.match(types.name)) {\n        const name = this.parseIdentifierName(this.state.start);\n        const identifier = this.createIdentifier(node, name);\n        identifier.type = \"V8IntrinsicIdentifier\";\n\n        if (this.match(types.parenL)) {\n          return identifier;\n        }\n      }\n\n      this.unexpected(v8IntrinsicStart);\n    }\n  }\n\n  parseExprAtom() {\n    return this.parseV8Intrinsic() || super.parseExprAtom(...arguments);\n  }\n\n});\n\nfunction hasPlugin(plugins, name) {\n  return plugins.some(plugin => {\n    if (Array.isArray(plugin)) {\n      return plugin[0] === name;\n    } else {\n      return plugin === name;\n    }\n  });\n}\nfunction getPluginOption(plugins, name, option) {\n  const plugin = plugins.find(plugin => {\n    if (Array.isArray(plugin)) {\n      return plugin[0] === name;\n    } else {\n      return plugin === name;\n    }\n  });\n\n  if (plugin && Array.isArray(plugin)) {\n    return plugin[1][option];\n  }\n\n  return null;\n}\nconst PIPELINE_PROPOSALS = [\"minimal\", \"smart\", \"fsharp\"];\nconst RECORD_AND_TUPLE_SYNTAX_TYPES = [\"hash\", \"bar\"];\nfunction validatePlugins(plugins) {\n  if (hasPlugin(plugins, \"decorators\")) {\n    if (hasPlugin(plugins, \"decorators-legacy\")) {\n      throw new Error(\"Cannot use the decorators and decorators-legacy plugin together\");\n    }\n\n    const decoratorsBeforeExport = getPluginOption(plugins, \"decorators\", \"decoratorsBeforeExport\");\n\n    if (decoratorsBeforeExport == null) {\n      throw new Error(\"The 'decorators' plugin requires a 'decoratorsBeforeExport' option,\" + \" whose value must be a boolean. If you are migrating from\" + \" Babylon/Babel 6 or want to use the old decorators proposal, you\" + \" should use the 'decorators-legacy' plugin instead of 'decorators'.\");\n    } else if (typeof decoratorsBeforeExport !== \"boolean\") {\n      throw new Error(\"'decoratorsBeforeExport' must be a boolean.\");\n    }\n  }\n\n  if (hasPlugin(plugins, \"flow\") && hasPlugin(plugins, \"typescript\")) {\n    throw new Error(\"Cannot combine flow and typescript plugins.\");\n  }\n\n  if (hasPlugin(plugins, \"placeholders\") && hasPlugin(plugins, \"v8intrinsic\")) {\n    throw new Error(\"Cannot combine placeholders and v8intrinsic plugins.\");\n  }\n\n  if (hasPlugin(plugins, \"pipelineOperator\") && !PIPELINE_PROPOSALS.includes(getPluginOption(plugins, \"pipelineOperator\", \"proposal\"))) {\n    throw new Error(\"'pipelineOperator' requires 'proposal' option whose value should be one of: \" + PIPELINE_PROPOSALS.map(p => `'${p}'`).join(\", \"));\n  }\n\n  if (hasPlugin(plugins, \"moduleAttributes\")) {\n    if (hasPlugin(plugins, \"importAssertions\")) {\n      throw new Error(\"Cannot combine importAssertions and moduleAttributes plugins.\");\n    }\n\n    const moduleAttributesVerionPluginOption = getPluginOption(plugins, \"moduleAttributes\", \"version\");\n\n    if (moduleAttributesVerionPluginOption !== \"may-2020\") {\n      throw new Error(\"The 'moduleAttributes' plugin requires a 'version' option,\" + \" representing the last proposal update. Currently, the\" + \" only supported value is 'may-2020'.\");\n    }\n  }\n\n  if (hasPlugin(plugins, \"recordAndTuple\") && !RECORD_AND_TUPLE_SYNTAX_TYPES.includes(getPluginOption(plugins, \"recordAndTuple\", \"syntaxType\"))) {\n    throw new Error(\"'recordAndTuple' requires 'syntaxType' option whose value should be one of: \" + RECORD_AND_TUPLE_SYNTAX_TYPES.map(p => `'${p}'`).join(\", \"));\n  }\n}\nconst mixinPlugins = {\n  estree,\n  jsx,\n  flow,\n  typescript,\n  v8intrinsic,\n  placeholders\n};\nconst mixinPluginNames = Object.keys(mixinPlugins);\n\nconst defaultOptions = {\n  sourceType: \"script\",\n  sourceFilename: undefined,\n  startLine: 1,\n  allowAwaitOutsideFunction: false,\n  allowReturnOutsideFunction: false,\n  allowImportExportEverywhere: false,\n  allowSuperOutsideMethod: false,\n  allowUndeclaredExports: false,\n  plugins: [],\n  strictMode: null,\n  ranges: false,\n  tokens: false,\n  createParenthesizedExpressions: false,\n  errorRecovery: false\n};\nfunction getOptions(opts) {\n  const options = {};\n\n  for (const key of Object.keys(defaultOptions)) {\n    options[key] = opts && opts[key] != null ? opts[key] : defaultOptions[key];\n  }\n\n  return options;\n}\n\nclass State {\n  constructor() {\n    this.strict = void 0;\n    this.curLine = void 0;\n    this.startLoc = void 0;\n    this.endLoc = void 0;\n    this.errors = [];\n    this.potentialArrowAt = -1;\n    this.noArrowAt = [];\n    this.noArrowParamsConversionAt = [];\n    this.maybeInArrowParameters = false;\n    this.inPipeline = false;\n    this.inType = false;\n    this.noAnonFunctionType = false;\n    this.inPropertyName = false;\n    this.hasFlowComment = false;\n    this.isIterator = false;\n    this.isDeclareContext = false;\n    this.inAbstractClass = false;\n    this.topicContext = {\n      maxNumOfResolvableTopics: 0,\n      maxTopicIndex: null\n    };\n    this.soloAwait = false;\n    this.inFSharpPipelineDirectBody = false;\n    this.labels = [];\n    this.decoratorStack = [[]];\n    this.comments = [];\n    this.trailingComments = [];\n    this.leadingComments = [];\n    this.commentStack = [];\n    this.commentPreviousNode = null;\n    this.pos = 0;\n    this.lineStart = 0;\n    this.type = types.eof;\n    this.value = null;\n    this.start = 0;\n    this.end = 0;\n    this.lastTokEndLoc = null;\n    this.lastTokStartLoc = null;\n    this.lastTokStart = 0;\n    this.lastTokEnd = 0;\n    this.context = [types$1.braceStatement];\n    this.exprAllowed = true;\n    this.containsEsc = false;\n    this.strictErrors = new Map();\n    this.exportedIdentifiers = [];\n    this.tokensLength = 0;\n  }\n\n  init(options) {\n    this.strict = options.strictMode === false ? false : options.sourceType === \"module\";\n    this.curLine = options.startLine;\n    this.startLoc = this.endLoc = this.curPosition();\n  }\n\n  curPosition() {\n    return new Position(this.curLine, this.pos - this.lineStart);\n  }\n\n  clone(skipArrays) {\n    const state = new State();\n    const keys = Object.keys(this);\n\n    for (let i = 0, length = keys.length; i < length; i++) {\n      const key = keys[i];\n      let val = this[key];\n\n      if (!skipArrays && Array.isArray(val)) {\n        val = val.slice();\n      }\n\n      state[key] = val;\n    }\n\n    return state;\n  }\n\n}\n\nvar _isDigit = function isDigit(code) {\n  return code >= 48 && code <= 57;\n};\nconst VALID_REGEX_FLAGS = new Set([\"g\", \"m\", \"s\", \"i\", \"y\", \"u\"]);\nconst forbiddenNumericSeparatorSiblings = {\n  decBinOct: [46, 66, 69, 79, 95, 98, 101, 111],\n  hex: [46, 88, 95, 120]\n};\nconst allowedNumericSeparatorSiblings = {};\nallowedNumericSeparatorSiblings.bin = [48, 49];\nallowedNumericSeparatorSiblings.oct = [...allowedNumericSeparatorSiblings.bin, 50, 51, 52, 53, 54, 55];\nallowedNumericSeparatorSiblings.dec = [...allowedNumericSeparatorSiblings.oct, 56, 57];\nallowedNumericSeparatorSiblings.hex = [...allowedNumericSeparatorSiblings.dec, 65, 66, 67, 68, 69, 70, 97, 98, 99, 100, 101, 102];\nclass Token {\n  constructor(state) {\n    this.type = state.type;\n    this.value = state.value;\n    this.start = state.start;\n    this.end = state.end;\n    this.loc = new SourceLocation(state.startLoc, state.endLoc);\n  }\n\n}\nclass Tokenizer extends ParserError {\n  constructor(options, input) {\n    super();\n    this.isLookahead = void 0;\n    this.tokens = [];\n    this.state = new State();\n    this.state.init(options);\n    this.input = input;\n    this.length = input.length;\n    this.isLookahead = false;\n  }\n\n  pushToken(token) {\n    this.tokens.length = this.state.tokensLength;\n    this.tokens.push(token);\n    ++this.state.tokensLength;\n  }\n\n  next() {\n    if (!this.isLookahead) {\n      this.checkKeywordEscapes();\n\n      if (this.options.tokens) {\n        this.pushToken(new Token(this.state));\n      }\n    }\n\n    this.state.lastTokEnd = this.state.end;\n    this.state.lastTokStart = this.state.start;\n    this.state.lastTokEndLoc = this.state.endLoc;\n    this.state.lastTokStartLoc = this.state.startLoc;\n    this.nextToken();\n  }\n\n  eat(type) {\n    if (this.match(type)) {\n      this.next();\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  match(type) {\n    return this.state.type === type;\n  }\n\n  lookahead() {\n    const old = this.state;\n    this.state = old.clone(true);\n    this.isLookahead = true;\n    this.next();\n    this.isLookahead = false;\n    const curr = this.state;\n    this.state = old;\n    return curr;\n  }\n\n  nextTokenStart() {\n    return this.nextTokenStartSince(this.state.pos);\n  }\n\n  nextTokenStartSince(pos) {\n    skipWhiteSpace.lastIndex = pos;\n    const skip = skipWhiteSpace.exec(this.input);\n    return pos + skip[0].length;\n  }\n\n  lookaheadCharCode() {\n    return this.input.charCodeAt(this.nextTokenStart());\n  }\n\n  setStrict(strict) {\n    this.state.strict = strict;\n\n    if (strict) {\n      this.state.strictErrors.forEach((message, pos) => this.raise(pos, message));\n      this.state.strictErrors.clear();\n    }\n  }\n\n  curContext() {\n    return this.state.context[this.state.context.length - 1];\n  }\n\n  nextToken() {\n    const curContext = this.curContext();\n    if (!(curContext != null && curContext.preserveSpace)) this.skipSpace();\n    this.state.start = this.state.pos;\n    this.state.startLoc = this.state.curPosition();\n\n    if (this.state.pos >= this.length) {\n      this.finishToken(types.eof);\n      return;\n    }\n\n    const override = curContext == null ? void 0 : curContext.override;\n\n    if (override) {\n      override(this);\n    } else {\n      this.getTokenFromCode(this.input.codePointAt(this.state.pos));\n    }\n  }\n\n  pushComment(block, text, start, end, startLoc, endLoc) {\n    const comment = {\n      type: block ? \"CommentBlock\" : \"CommentLine\",\n      value: text,\n      start: start,\n      end: end,\n      loc: new SourceLocation(startLoc, endLoc)\n    };\n    if (this.options.tokens) this.pushToken(comment);\n    this.state.comments.push(comment);\n    this.addComment(comment);\n  }\n\n  skipBlockComment() {\n    const startLoc = this.state.curPosition();\n    const start = this.state.pos;\n    const end = this.input.indexOf(\"*/\", this.state.pos + 2);\n    if (end === -1) throw this.raise(start, ErrorMessages.UnterminatedComment);\n    this.state.pos = end + 2;\n    lineBreakG.lastIndex = start;\n    let match;\n\n    while ((match = lineBreakG.exec(this.input)) && match.index < this.state.pos) {\n      ++this.state.curLine;\n      this.state.lineStart = match.index + match[0].length;\n    }\n\n    if (this.isLookahead) return;\n    this.pushComment(true, this.input.slice(start + 2, end), start, this.state.pos, startLoc, this.state.curPosition());\n  }\n\n  skipLineComment(startSkip) {\n    const start = this.state.pos;\n    const startLoc = this.state.curPosition();\n    let ch = this.input.charCodeAt(this.state.pos += startSkip);\n\n    if (this.state.pos < this.length) {\n      while (!isNewLine(ch) && ++this.state.pos < this.length) {\n        ch = this.input.charCodeAt(this.state.pos);\n      }\n    }\n\n    if (this.isLookahead) return;\n    this.pushComment(false, this.input.slice(start + startSkip, this.state.pos), start, this.state.pos, startLoc, this.state.curPosition());\n  }\n\n  skipSpace() {\n    loop: while (this.state.pos < this.length) {\n      const ch = this.input.charCodeAt(this.state.pos);\n\n      switch (ch) {\n        case 32:\n        case 160:\n        case 9:\n          ++this.state.pos;\n          break;\n\n        case 13:\n          if (this.input.charCodeAt(this.state.pos + 1) === 10) {\n            ++this.state.pos;\n          }\n\n        case 10:\n        case 8232:\n        case 8233:\n          ++this.state.pos;\n          ++this.state.curLine;\n          this.state.lineStart = this.state.pos;\n          break;\n\n        case 47:\n          switch (this.input.charCodeAt(this.state.pos + 1)) {\n            case 42:\n              this.skipBlockComment();\n              break;\n\n            case 47:\n              this.skipLineComment(2);\n              break;\n\n            default:\n              break loop;\n          }\n\n          break;\n\n        default:\n          if (isWhitespace(ch)) {\n            ++this.state.pos;\n          } else {\n            break loop;\n          }\n\n      }\n    }\n  }\n\n  finishToken(type, val) {\n    this.state.end = this.state.pos;\n    this.state.endLoc = this.state.curPosition();\n    const prevType = this.state.type;\n    this.state.type = type;\n    this.state.value = val;\n    if (!this.isLookahead) this.updateContext(prevType);\n  }\n\n  readToken_numberSign() {\n    if (this.state.pos === 0 && this.readToken_interpreter()) {\n      return;\n    }\n\n    const nextPos = this.state.pos + 1;\n    const next = this.input.charCodeAt(nextPos);\n\n    if (next >= 48 && next <= 57) {\n      throw this.raise(this.state.pos, ErrorMessages.UnexpectedDigitAfterHash);\n    }\n\n    if (next === 123 || next === 91 && this.hasPlugin(\"recordAndTuple\")) {\n      this.expectPlugin(\"recordAndTuple\");\n\n      if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"hash\") {\n        throw this.raise(this.state.pos, next === 123 ? ErrorMessages.RecordExpressionHashIncorrectStartSyntaxType : ErrorMessages.TupleExpressionHashIncorrectStartSyntaxType);\n      }\n\n      if (next === 123) {\n        this.finishToken(types.braceHashL);\n      } else {\n        this.finishToken(types.bracketHashL);\n      }\n\n      this.state.pos += 2;\n    } else {\n      this.finishOp(types.hash, 1);\n    }\n  }\n\n  readToken_dot() {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next >= 48 && next <= 57) {\n      this.readNumber(true);\n      return;\n    }\n\n    if (next === 46 && this.input.charCodeAt(this.state.pos + 2) === 46) {\n      this.state.pos += 3;\n      this.finishToken(types.ellipsis);\n    } else {\n      ++this.state.pos;\n      this.finishToken(types.dot);\n    }\n  }\n\n  readToken_slash() {\n    if (this.state.exprAllowed && !this.state.inType) {\n      ++this.state.pos;\n      this.readRegexp();\n      return;\n    }\n\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next === 61) {\n      this.finishOp(types.assign, 2);\n    } else {\n      this.finishOp(types.slash, 1);\n    }\n  }\n\n  readToken_interpreter() {\n    if (this.state.pos !== 0 || this.length < 2) return false;\n    let ch = this.input.charCodeAt(this.state.pos + 1);\n    if (ch !== 33) return false;\n    const start = this.state.pos;\n    this.state.pos += 1;\n\n    while (!isNewLine(ch) && ++this.state.pos < this.length) {\n      ch = this.input.charCodeAt(this.state.pos);\n    }\n\n    const value = this.input.slice(start + 2, this.state.pos);\n    this.finishToken(types.interpreterDirective, value);\n    return true;\n  }\n\n  readToken_mult_modulo(code) {\n    let type = code === 42 ? types.star : types.modulo;\n    let width = 1;\n    let next = this.input.charCodeAt(this.state.pos + 1);\n    const exprAllowed = this.state.exprAllowed;\n\n    if (code === 42 && next === 42) {\n      width++;\n      next = this.input.charCodeAt(this.state.pos + 2);\n      type = types.exponent;\n    }\n\n    if (next === 61 && !exprAllowed) {\n      width++;\n      type = types.assign;\n    }\n\n    this.finishOp(type, width);\n  }\n\n  readToken_pipe_amp(code) {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next === code) {\n      if (this.input.charCodeAt(this.state.pos + 2) === 61) {\n        this.finishOp(types.assign, 3);\n      } else {\n        this.finishOp(code === 124 ? types.logicalOR : types.logicalAND, 2);\n      }\n\n      return;\n    }\n\n    if (code === 124) {\n      if (next === 62) {\n        this.finishOp(types.pipeline, 2);\n        return;\n      }\n\n      if (this.hasPlugin(\"recordAndTuple\") && next === 125) {\n        if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n          throw this.raise(this.state.pos, ErrorMessages.RecordExpressionBarIncorrectEndSyntaxType);\n        }\n\n        this.finishOp(types.braceBarR, 2);\n        return;\n      }\n\n      if (this.hasPlugin(\"recordAndTuple\") && next === 93) {\n        if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n          throw this.raise(this.state.pos, ErrorMessages.TupleExpressionBarIncorrectEndSyntaxType);\n        }\n\n        this.finishOp(types.bracketBarR, 2);\n        return;\n      }\n    }\n\n    if (next === 61) {\n      this.finishOp(types.assign, 2);\n      return;\n    }\n\n    this.finishOp(code === 124 ? types.bitwiseOR : types.bitwiseAND, 1);\n  }\n\n  readToken_caret() {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next === 61) {\n      this.finishOp(types.assign, 2);\n    } else {\n      this.finishOp(types.bitwiseXOR, 1);\n    }\n  }\n\n  readToken_plus_min(code) {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next === code) {\n      if (next === 45 && !this.inModule && this.input.charCodeAt(this.state.pos + 2) === 62 && (this.state.lastTokEnd === 0 || this.hasPrecedingLineBreak())) {\n        this.skipLineComment(3);\n        this.skipSpace();\n        this.nextToken();\n        return;\n      }\n\n      this.finishOp(types.incDec, 2);\n      return;\n    }\n\n    if (next === 61) {\n      this.finishOp(types.assign, 2);\n    } else {\n      this.finishOp(types.plusMin, 1);\n    }\n  }\n\n  readToken_lt_gt(code) {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n    let size = 1;\n\n    if (next === code) {\n      size = code === 62 && this.input.charCodeAt(this.state.pos + 2) === 62 ? 3 : 2;\n\n      if (this.input.charCodeAt(this.state.pos + size) === 61) {\n        this.finishOp(types.assign, size + 1);\n        return;\n      }\n\n      this.finishOp(types.bitShift, size);\n      return;\n    }\n\n    if (next === 33 && code === 60 && !this.inModule && this.input.charCodeAt(this.state.pos + 2) === 45 && this.input.charCodeAt(this.state.pos + 3) === 45) {\n      this.skipLineComment(4);\n      this.skipSpace();\n      this.nextToken();\n      return;\n    }\n\n    if (next === 61) {\n      size = 2;\n    }\n\n    this.finishOp(types.relational, size);\n  }\n\n  readToken_eq_excl(code) {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next === 61) {\n      this.finishOp(types.equality, this.input.charCodeAt(this.state.pos + 2) === 61 ? 3 : 2);\n      return;\n    }\n\n    if (code === 61 && next === 62) {\n      this.state.pos += 2;\n      this.finishToken(types.arrow);\n      return;\n    }\n\n    this.finishOp(code === 61 ? types.eq : types.bang, 1);\n  }\n\n  readToken_question() {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n    const next2 = this.input.charCodeAt(this.state.pos + 2);\n\n    if (next === 63) {\n      if (next2 === 61) {\n        this.finishOp(types.assign, 3);\n      } else {\n        this.finishOp(types.nullishCoalescing, 2);\n      }\n    } else if (next === 46 && !(next2 >= 48 && next2 <= 57)) {\n      this.state.pos += 2;\n      this.finishToken(types.questionDot);\n    } else {\n      ++this.state.pos;\n      this.finishToken(types.question);\n    }\n  }\n\n  getTokenFromCode(code) {\n    switch (code) {\n      case 46:\n        this.readToken_dot();\n        return;\n\n      case 40:\n        ++this.state.pos;\n        this.finishToken(types.parenL);\n        return;\n\n      case 41:\n        ++this.state.pos;\n        this.finishToken(types.parenR);\n        return;\n\n      case 59:\n        ++this.state.pos;\n        this.finishToken(types.semi);\n        return;\n\n      case 44:\n        ++this.state.pos;\n        this.finishToken(types.comma);\n        return;\n\n      case 91:\n        if (this.hasPlugin(\"recordAndTuple\") && this.input.charCodeAt(this.state.pos + 1) === 124) {\n          if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n            throw this.raise(this.state.pos, ErrorMessages.TupleExpressionBarIncorrectStartSyntaxType);\n          }\n\n          this.finishToken(types.bracketBarL);\n          this.state.pos += 2;\n        } else {\n          ++this.state.pos;\n          this.finishToken(types.bracketL);\n        }\n\n        return;\n\n      case 93:\n        ++this.state.pos;\n        this.finishToken(types.bracketR);\n        return;\n\n      case 123:\n        if (this.hasPlugin(\"recordAndTuple\") && this.input.charCodeAt(this.state.pos + 1) === 124) {\n          if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n            throw this.raise(this.state.pos, ErrorMessages.RecordExpressionBarIncorrectStartSyntaxType);\n          }\n\n          this.finishToken(types.braceBarL);\n          this.state.pos += 2;\n        } else {\n          ++this.state.pos;\n          this.finishToken(types.braceL);\n        }\n\n        return;\n\n      case 125:\n        ++this.state.pos;\n        this.finishToken(types.braceR);\n        return;\n\n      case 58:\n        if (this.hasPlugin(\"functionBind\") && this.input.charCodeAt(this.state.pos + 1) === 58) {\n          this.finishOp(types.doubleColon, 2);\n        } else {\n          ++this.state.pos;\n          this.finishToken(types.colon);\n        }\n\n        return;\n\n      case 63:\n        this.readToken_question();\n        return;\n\n      case 96:\n        ++this.state.pos;\n        this.finishToken(types.backQuote);\n        return;\n\n      case 48:\n        {\n          const next = this.input.charCodeAt(this.state.pos + 1);\n\n          if (next === 120 || next === 88) {\n            this.readRadixNumber(16);\n            return;\n          }\n\n          if (next === 111 || next === 79) {\n            this.readRadixNumber(8);\n            return;\n          }\n\n          if (next === 98 || next === 66) {\n            this.readRadixNumber(2);\n            return;\n          }\n        }\n\n      case 49:\n      case 50:\n      case 51:\n      case 52:\n      case 53:\n      case 54:\n      case 55:\n      case 56:\n      case 57:\n        this.readNumber(false);\n        return;\n\n      case 34:\n      case 39:\n        this.readString(code);\n        return;\n\n      case 47:\n        this.readToken_slash();\n        return;\n\n      case 37:\n      case 42:\n        this.readToken_mult_modulo(code);\n        return;\n\n      case 124:\n      case 38:\n        this.readToken_pipe_amp(code);\n        return;\n\n      case 94:\n        this.readToken_caret();\n        return;\n\n      case 43:\n      case 45:\n        this.readToken_plus_min(code);\n        return;\n\n      case 60:\n      case 62:\n        this.readToken_lt_gt(code);\n        return;\n\n      case 61:\n      case 33:\n        this.readToken_eq_excl(code);\n        return;\n\n      case 126:\n        this.finishOp(types.tilde, 1);\n        return;\n\n      case 64:\n        ++this.state.pos;\n        this.finishToken(types.at);\n        return;\n\n      case 35:\n        this.readToken_numberSign();\n        return;\n\n      case 92:\n        this.readWord();\n        return;\n\n      default:\n        if (isIdentifierStart(code)) {\n          this.readWord();\n          return;\n        }\n\n    }\n\n    throw this.raise(this.state.pos, ErrorMessages.InvalidOrUnexpectedToken, String.fromCodePoint(code));\n  }\n\n  finishOp(type, size) {\n    const str = this.input.slice(this.state.pos, this.state.pos + size);\n    this.state.pos += size;\n    this.finishToken(type, str);\n  }\n\n  readRegexp() {\n    const start = this.state.pos;\n    let escaped, inClass;\n\n    for (;;) {\n      if (this.state.pos >= this.length) {\n        throw this.raise(start, ErrorMessages.UnterminatedRegExp);\n      }\n\n      const ch = this.input.charAt(this.state.pos);\n\n      if (lineBreak.test(ch)) {\n        throw this.raise(start, ErrorMessages.UnterminatedRegExp);\n      }\n\n      if (escaped) {\n        escaped = false;\n      } else {\n        if (ch === \"[\") {\n          inClass = true;\n        } else if (ch === \"]\" && inClass) {\n          inClass = false;\n        } else if (ch === \"/\" && !inClass) {\n          break;\n        }\n\n        escaped = ch === \"\\\\\";\n      }\n\n      ++this.state.pos;\n    }\n\n    const content = this.input.slice(start, this.state.pos);\n    ++this.state.pos;\n    let mods = \"\";\n\n    while (this.state.pos < this.length) {\n      const char = this.input[this.state.pos];\n      const charCode = this.input.codePointAt(this.state.pos);\n\n      if (VALID_REGEX_FLAGS.has(char)) {\n        if (mods.indexOf(char) > -1) {\n          this.raise(this.state.pos + 1, ErrorMessages.DuplicateRegExpFlags);\n        }\n      } else if (isIdentifierChar(charCode) || charCode === 92) {\n        this.raise(this.state.pos + 1, ErrorMessages.MalformedRegExpFlags);\n      } else {\n        break;\n      }\n\n      ++this.state.pos;\n      mods += char;\n    }\n\n    this.finishToken(types.regexp, {\n      pattern: content,\n      flags: mods\n    });\n  }\n\n  readInt(radix, len, forceLen, allowNumSeparator = true) {\n    const start = this.state.pos;\n    const forbiddenSiblings = radix === 16 ? forbiddenNumericSeparatorSiblings.hex : forbiddenNumericSeparatorSiblings.decBinOct;\n    const allowedSiblings = radix === 16 ? allowedNumericSeparatorSiblings.hex : radix === 10 ? allowedNumericSeparatorSiblings.dec : radix === 8 ? allowedNumericSeparatorSiblings.oct : allowedNumericSeparatorSiblings.bin;\n    let invalid = false;\n    let total = 0;\n\n    for (let i = 0, e = len == null ? Infinity : len; i < e; ++i) {\n      const code = this.input.charCodeAt(this.state.pos);\n      let val;\n\n      if (code === 95) {\n        const prev = this.input.charCodeAt(this.state.pos - 1);\n        const next = this.input.charCodeAt(this.state.pos + 1);\n\n        if (allowedSiblings.indexOf(next) === -1) {\n          this.raise(this.state.pos, ErrorMessages.UnexpectedNumericSeparator);\n        } else if (forbiddenSiblings.indexOf(prev) > -1 || forbiddenSiblings.indexOf(next) > -1 || Number.isNaN(next)) {\n          this.raise(this.state.pos, ErrorMessages.UnexpectedNumericSeparator);\n        }\n\n        if (!allowNumSeparator) {\n          this.raise(this.state.pos, ErrorMessages.NumericSeparatorInEscapeSequence);\n        }\n\n        ++this.state.pos;\n        continue;\n      }\n\n      if (code >= 97) {\n        val = code - 97 + 10;\n      } else if (code >= 65) {\n        val = code - 65 + 10;\n      } else if (_isDigit(code)) {\n        val = code - 48;\n      } else {\n        val = Infinity;\n      }\n\n      if (val >= radix) {\n        if (this.options.errorRecovery && val <= 9) {\n          val = 0;\n          this.raise(this.state.start + i + 2, ErrorMessages.InvalidDigit, radix);\n        } else if (forceLen) {\n          val = 0;\n          invalid = true;\n        } else {\n          break;\n        }\n      }\n\n      ++this.state.pos;\n      total = total * radix + val;\n    }\n\n    if (this.state.pos === start || len != null && this.state.pos - start !== len || invalid) {\n      return null;\n    }\n\n    return total;\n  }\n\n  readRadixNumber(radix) {\n    const start = this.state.pos;\n    let isBigInt = false;\n    this.state.pos += 2;\n    const val = this.readInt(radix);\n\n    if (val == null) {\n      this.raise(this.state.start + 2, ErrorMessages.InvalidDigit, radix);\n    }\n\n    const next = this.input.charCodeAt(this.state.pos);\n\n    if (next === 110) {\n      ++this.state.pos;\n      isBigInt = true;\n    } else if (next === 109) {\n      throw this.raise(start, ErrorMessages.InvalidDecimal);\n    }\n\n    if (isIdentifierStart(this.input.codePointAt(this.state.pos))) {\n      throw this.raise(this.state.pos, ErrorMessages.NumberIdentifier);\n    }\n\n    if (isBigInt) {\n      const str = this.input.slice(start, this.state.pos).replace(/[_n]/g, \"\");\n      this.finishToken(types.bigint, str);\n      return;\n    }\n\n    this.finishToken(types.num, val);\n  }\n\n  readNumber(startsWithDot) {\n    const start = this.state.pos;\n    let isFloat = false;\n    let isBigInt = false;\n    let isDecimal = false;\n    let hasExponent = false;\n    let isOctal = false;\n\n    if (!startsWithDot && this.readInt(10) === null) {\n      this.raise(start, ErrorMessages.InvalidNumber);\n    }\n\n    const hasLeadingZero = this.state.pos - start >= 2 && this.input.charCodeAt(start) === 48;\n\n    if (hasLeadingZero) {\n      const integer = this.input.slice(start, this.state.pos);\n      this.recordStrictModeErrors(start, ErrorMessages.StrictOctalLiteral);\n\n      if (!this.state.strict) {\n        const underscorePos = integer.indexOf(\"_\");\n\n        if (underscorePos > 0) {\n          this.raise(underscorePos + start, ErrorMessages.ZeroDigitNumericSeparator);\n        }\n      }\n\n      isOctal = hasLeadingZero && !/[89]/.test(integer);\n    }\n\n    let next = this.input.charCodeAt(this.state.pos);\n\n    if (next === 46 && !isOctal) {\n      ++this.state.pos;\n      this.readInt(10);\n      isFloat = true;\n      next = this.input.charCodeAt(this.state.pos);\n    }\n\n    if ((next === 69 || next === 101) && !isOctal) {\n      next = this.input.charCodeAt(++this.state.pos);\n\n      if (next === 43 || next === 45) {\n        ++this.state.pos;\n      }\n\n      if (this.readInt(10) === null) {\n        this.raise(start, ErrorMessages.InvalidOrMissingExponent);\n      }\n\n      isFloat = true;\n      hasExponent = true;\n      next = this.input.charCodeAt(this.state.pos);\n    }\n\n    if (next === 110) {\n      if (isFloat || hasLeadingZero) {\n        this.raise(start, ErrorMessages.InvalidBigIntLiteral);\n      }\n\n      ++this.state.pos;\n      isBigInt = true;\n    }\n\n    if (next === 109) {\n      this.expectPlugin(\"decimal\", this.state.pos);\n\n      if (hasExponent || hasLeadingZero) {\n        this.raise(start, ErrorMessages.InvalidDecimal);\n      }\n\n      ++this.state.pos;\n      isDecimal = true;\n    }\n\n    if (isIdentifierStart(this.input.codePointAt(this.state.pos))) {\n      throw this.raise(this.state.pos, ErrorMessages.NumberIdentifier);\n    }\n\n    const str = this.input.slice(start, this.state.pos).replace(/[_mn]/g, \"\");\n\n    if (isBigInt) {\n      this.finishToken(types.bigint, str);\n      return;\n    }\n\n    if (isDecimal) {\n      this.finishToken(types.decimal, str);\n      return;\n    }\n\n    const val = isOctal ? parseInt(str, 8) : parseFloat(str);\n    this.finishToken(types.num, val);\n  }\n\n  readCodePoint(throwOnInvalid) {\n    const ch = this.input.charCodeAt(this.state.pos);\n    let code;\n\n    if (ch === 123) {\n      const codePos = ++this.state.pos;\n      code = this.readHexChar(this.input.indexOf(\"}\", this.state.pos) - this.state.pos, true, throwOnInvalid);\n      ++this.state.pos;\n\n      if (code !== null && code > 0x10ffff) {\n        if (throwOnInvalid) {\n          this.raise(codePos, ErrorMessages.InvalidCodePoint);\n        } else {\n          return null;\n        }\n      }\n    } else {\n      code = this.readHexChar(4, false, throwOnInvalid);\n    }\n\n    return code;\n  }\n\n  readString(quote) {\n    let out = \"\",\n        chunkStart = ++this.state.pos;\n\n    for (;;) {\n      if (this.state.pos >= this.length) {\n        throw this.raise(this.state.start, ErrorMessages.UnterminatedString);\n      }\n\n      const ch = this.input.charCodeAt(this.state.pos);\n      if (ch === quote) break;\n\n      if (ch === 92) {\n        out += this.input.slice(chunkStart, this.state.pos);\n        out += this.readEscapedChar(false);\n        chunkStart = this.state.pos;\n      } else if (ch === 8232 || ch === 8233) {\n        ++this.state.pos;\n        ++this.state.curLine;\n        this.state.lineStart = this.state.pos;\n      } else if (isNewLine(ch)) {\n        throw this.raise(this.state.start, ErrorMessages.UnterminatedString);\n      } else {\n        ++this.state.pos;\n      }\n    }\n\n    out += this.input.slice(chunkStart, this.state.pos++);\n    this.finishToken(types.string, out);\n  }\n\n  readTmplToken() {\n    let out = \"\",\n        chunkStart = this.state.pos,\n        containsInvalid = false;\n\n    for (;;) {\n      if (this.state.pos >= this.length) {\n        throw this.raise(this.state.start, ErrorMessages.UnterminatedTemplate);\n      }\n\n      const ch = this.input.charCodeAt(this.state.pos);\n\n      if (ch === 96 || ch === 36 && this.input.charCodeAt(this.state.pos + 1) === 123) {\n        if (this.state.pos === this.state.start && this.match(types.template)) {\n          if (ch === 36) {\n            this.state.pos += 2;\n            this.finishToken(types.dollarBraceL);\n            return;\n          } else {\n            ++this.state.pos;\n            this.finishToken(types.backQuote);\n            return;\n          }\n        }\n\n        out += this.input.slice(chunkStart, this.state.pos);\n        this.finishToken(types.template, containsInvalid ? null : out);\n        return;\n      }\n\n      if (ch === 92) {\n        out += this.input.slice(chunkStart, this.state.pos);\n        const escaped = this.readEscapedChar(true);\n\n        if (escaped === null) {\n          containsInvalid = true;\n        } else {\n          out += escaped;\n        }\n\n        chunkStart = this.state.pos;\n      } else if (isNewLine(ch)) {\n        out += this.input.slice(chunkStart, this.state.pos);\n        ++this.state.pos;\n\n        switch (ch) {\n          case 13:\n            if (this.input.charCodeAt(this.state.pos) === 10) {\n              ++this.state.pos;\n            }\n\n          case 10:\n            out += \"\\n\";\n            break;\n\n          default:\n            out += String.fromCharCode(ch);\n            break;\n        }\n\n        ++this.state.curLine;\n        this.state.lineStart = this.state.pos;\n        chunkStart = this.state.pos;\n      } else {\n        ++this.state.pos;\n      }\n    }\n  }\n\n  recordStrictModeErrors(pos, message) {\n    if (this.state.strict && !this.state.strictErrors.has(pos)) {\n      this.raise(pos, message);\n    } else {\n      this.state.strictErrors.set(pos, message);\n    }\n  }\n\n  readEscapedChar(inTemplate) {\n    const throwOnInvalid = !inTemplate;\n    const ch = this.input.charCodeAt(++this.state.pos);\n    ++this.state.pos;\n\n    switch (ch) {\n      case 110:\n        return \"\\n\";\n\n      case 114:\n        return \"\\r\";\n\n      case 120:\n        {\n          const code = this.readHexChar(2, false, throwOnInvalid);\n          return code === null ? null : String.fromCharCode(code);\n        }\n\n      case 117:\n        {\n          const code = this.readCodePoint(throwOnInvalid);\n          return code === null ? null : String.fromCodePoint(code);\n        }\n\n      case 116:\n        return \"\\t\";\n\n      case 98:\n        return \"\\b\";\n\n      case 118:\n        return \"\\u000b\";\n\n      case 102:\n        return \"\\f\";\n\n      case 13:\n        if (this.input.charCodeAt(this.state.pos) === 10) {\n          ++this.state.pos;\n        }\n\n      case 10:\n        this.state.lineStart = this.state.pos;\n        ++this.state.curLine;\n\n      case 8232:\n      case 8233:\n        return \"\";\n\n      case 56:\n      case 57:\n        if (inTemplate) {\n          return null;\n        } else {\n          this.recordStrictModeErrors(this.state.pos - 1, ErrorMessages.StrictNumericEscape);\n        }\n\n      default:\n        if (ch >= 48 && ch <= 55) {\n          const codePos = this.state.pos - 1;\n          const match = this.input.substr(this.state.pos - 1, 3).match(/^[0-7]+/);\n          let octalStr = match[0];\n          let octal = parseInt(octalStr, 8);\n\n          if (octal > 255) {\n            octalStr = octalStr.slice(0, -1);\n            octal = parseInt(octalStr, 8);\n          }\n\n          this.state.pos += octalStr.length - 1;\n          const next = this.input.charCodeAt(this.state.pos);\n\n          if (octalStr !== \"0\" || next === 56 || next === 57) {\n            if (inTemplate) {\n              return null;\n            } else {\n              this.recordStrictModeErrors(codePos, ErrorMessages.StrictNumericEscape);\n            }\n          }\n\n          return String.fromCharCode(octal);\n        }\n\n        return String.fromCharCode(ch);\n    }\n  }\n\n  readHexChar(len, forceLen, throwOnInvalid) {\n    const codePos = this.state.pos;\n    const n = this.readInt(16, len, forceLen, false);\n\n    if (n === null) {\n      if (throwOnInvalid) {\n        this.raise(codePos, ErrorMessages.InvalidEscapeSequence);\n      } else {\n        this.state.pos = codePos - 1;\n      }\n    }\n\n    return n;\n  }\n\n  readWord1() {\n    let word = \"\";\n    this.state.containsEsc = false;\n    const start = this.state.pos;\n    let chunkStart = this.state.pos;\n\n    while (this.state.pos < this.length) {\n      const ch = this.input.codePointAt(this.state.pos);\n\n      if (isIdentifierChar(ch)) {\n        this.state.pos += ch <= 0xffff ? 1 : 2;\n      } else if (this.state.isIterator && ch === 64) {\n        ++this.state.pos;\n      } else if (ch === 92) {\n        this.state.containsEsc = true;\n        word += this.input.slice(chunkStart, this.state.pos);\n        const escStart = this.state.pos;\n        const identifierCheck = this.state.pos === start ? isIdentifierStart : isIdentifierChar;\n\n        if (this.input.charCodeAt(++this.state.pos) !== 117) {\n          this.raise(this.state.pos, ErrorMessages.MissingUnicodeEscape);\n          continue;\n        }\n\n        ++this.state.pos;\n        const esc = this.readCodePoint(true);\n\n        if (esc !== null) {\n          if (!identifierCheck(esc)) {\n            this.raise(escStart, ErrorMessages.EscapedCharNotAnIdentifier);\n          }\n\n          word += String.fromCodePoint(esc);\n        }\n\n        chunkStart = this.state.pos;\n      } else {\n        break;\n      }\n    }\n\n    return word + this.input.slice(chunkStart, this.state.pos);\n  }\n\n  isIterator(word) {\n    return word === \"@@iterator\" || word === \"@@asyncIterator\";\n  }\n\n  readWord() {\n    const word = this.readWord1();\n    const type = keywords.get(word) || types.name;\n\n    if (this.state.isIterator && (!this.isIterator(word) || !this.state.inType)) {\n      this.raise(this.state.pos, ErrorMessages.InvalidIdentifier, word);\n    }\n\n    this.finishToken(type, word);\n  }\n\n  checkKeywordEscapes() {\n    const kw = this.state.type.keyword;\n\n    if (kw && this.state.containsEsc) {\n      this.raise(this.state.start, ErrorMessages.InvalidEscapedReservedWord, kw);\n    }\n  }\n\n  braceIsBlock(prevType) {\n    const parent = this.curContext();\n\n    if (parent === types$1.functionExpression || parent === types$1.functionStatement) {\n      return true;\n    }\n\n    if (prevType === types.colon && (parent === types$1.braceStatement || parent === types$1.braceExpression)) {\n      return !parent.isExpr;\n    }\n\n    if (prevType === types._return || prevType === types.name && this.state.exprAllowed) {\n      return this.hasPrecedingLineBreak();\n    }\n\n    if (prevType === types._else || prevType === types.semi || prevType === types.eof || prevType === types.parenR || prevType === types.arrow) {\n      return true;\n    }\n\n    if (prevType === types.braceL) {\n      return parent === types$1.braceStatement;\n    }\n\n    if (prevType === types._var || prevType === types._const || prevType === types.name) {\n      return false;\n    }\n\n    if (prevType === types.relational) {\n      return true;\n    }\n\n    return !this.state.exprAllowed;\n  }\n\n  updateContext(prevType) {\n    const type = this.state.type;\n    let update;\n\n    if (type.keyword && (prevType === types.dot || prevType === types.questionDot)) {\n      this.state.exprAllowed = false;\n    } else if (update = type.updateContext) {\n      update.call(this, prevType);\n    } else {\n      this.state.exprAllowed = type.beforeExpr;\n    }\n  }\n\n}\n\nclass ClassScope {\n  constructor() {\n    this.privateNames = new Set();\n    this.loneAccessors = new Map();\n    this.undefinedPrivateNames = new Map();\n  }\n\n}\nclass ClassScopeHandler {\n  constructor(raise) {\n    this.stack = [];\n    this.undefinedPrivateNames = new Map();\n    this.raise = raise;\n  }\n\n  current() {\n    return this.stack[this.stack.length - 1];\n  }\n\n  enter() {\n    this.stack.push(new ClassScope());\n  }\n\n  exit() {\n    const oldClassScope = this.stack.pop();\n    const current = this.current();\n\n    for (const [name, pos] of Array.from(oldClassScope.undefinedPrivateNames)) {\n      if (current) {\n        if (!current.undefinedPrivateNames.has(name)) {\n          current.undefinedPrivateNames.set(name, pos);\n        }\n      } else {\n        this.raise(pos, ErrorMessages.InvalidPrivateFieldResolution, name);\n      }\n    }\n  }\n\n  declarePrivateName(name, elementType, pos) {\n    const classScope = this.current();\n    let redefined = classScope.privateNames.has(name);\n\n    if (elementType & CLASS_ELEMENT_KIND_ACCESSOR) {\n      const accessor = redefined && classScope.loneAccessors.get(name);\n\n      if (accessor) {\n        const oldStatic = accessor & CLASS_ELEMENT_FLAG_STATIC;\n        const newStatic = elementType & CLASS_ELEMENT_FLAG_STATIC;\n        const oldKind = accessor & CLASS_ELEMENT_KIND_ACCESSOR;\n        const newKind = elementType & CLASS_ELEMENT_KIND_ACCESSOR;\n        redefined = oldKind === newKind || oldStatic !== newStatic;\n        if (!redefined) classScope.loneAccessors.delete(name);\n      } else if (!redefined) {\n        classScope.loneAccessors.set(name, elementType);\n      }\n    }\n\n    if (redefined) {\n      this.raise(pos, ErrorMessages.PrivateNameRedeclaration, name);\n    }\n\n    classScope.privateNames.add(name);\n    classScope.undefinedPrivateNames.delete(name);\n  }\n\n  usePrivateName(name, pos) {\n    let classScope;\n\n    for (classScope of this.stack) {\n      if (classScope.privateNames.has(name)) return;\n    }\n\n    if (classScope) {\n      classScope.undefinedPrivateNames.set(name, pos);\n    } else {\n      this.raise(pos, ErrorMessages.InvalidPrivateFieldResolution, name);\n    }\n  }\n\n}\n\nconst kExpression = 0,\n      kMaybeArrowParameterDeclaration = 1,\n      kMaybeAsyncArrowParameterDeclaration = 2,\n      kParameterDeclaration = 3;\n\nclass ExpressionScope {\n  constructor(type = kExpression) {\n    this.type = void 0;\n    this.type = type;\n  }\n\n  canBeArrowParameterDeclaration() {\n    return this.type === kMaybeAsyncArrowParameterDeclaration || this.type === kMaybeArrowParameterDeclaration;\n  }\n\n  isCertainlyParameterDeclaration() {\n    return this.type === kParameterDeclaration;\n  }\n\n}\n\nclass ArrowHeadParsingScope extends ExpressionScope {\n  constructor(type) {\n    super(type);\n    this.errors = new Map();\n  }\n\n  recordDeclarationError(pos, message) {\n    this.errors.set(pos, message);\n  }\n\n  clearDeclarationError(pos) {\n    this.errors.delete(pos);\n  }\n\n  iterateErrors(iterator) {\n    this.errors.forEach(iterator);\n  }\n\n}\n\nclass ExpressionScopeHandler {\n  constructor(raise) {\n    this.stack = [new ExpressionScope()];\n    this.raise = raise;\n  }\n\n  enter(scope) {\n    this.stack.push(scope);\n  }\n\n  exit() {\n    this.stack.pop();\n  }\n\n  recordParameterInitializerError(pos, message) {\n    const {\n      stack\n    } = this;\n    let i = stack.length - 1;\n    let scope = stack[i];\n\n    while (!scope.isCertainlyParameterDeclaration()) {\n      if (scope.canBeArrowParameterDeclaration()) {\n        scope.recordDeclarationError(pos, message);\n      } else {\n        return;\n      }\n\n      scope = stack[--i];\n    }\n\n    this.raise(pos, message);\n  }\n\n  recordParenthesizedIdentifierError(pos, message) {\n    const {\n      stack\n    } = this;\n    const scope = stack[stack.length - 1];\n\n    if (scope.isCertainlyParameterDeclaration()) {\n      this.raise(pos, message);\n    } else if (scope.canBeArrowParameterDeclaration()) {\n      scope.recordDeclarationError(pos, message);\n    } else {\n      return;\n    }\n  }\n\n  recordAsyncArrowParametersError(pos, message) {\n    const {\n      stack\n    } = this;\n    let i = stack.length - 1;\n    let scope = stack[i];\n\n    while (scope.canBeArrowParameterDeclaration()) {\n      if (scope.type === kMaybeAsyncArrowParameterDeclaration) {\n        scope.recordDeclarationError(pos, message);\n      }\n\n      scope = stack[--i];\n    }\n  }\n\n  validateAsPattern() {\n    const {\n      stack\n    } = this;\n    const currentScope = stack[stack.length - 1];\n    if (!currentScope.canBeArrowParameterDeclaration()) return;\n    currentScope.iterateErrors((message, pos) => {\n      this.raise(pos, message);\n      let i = stack.length - 2;\n      let scope = stack[i];\n\n      while (scope.canBeArrowParameterDeclaration()) {\n        scope.clearDeclarationError(pos);\n        scope = stack[--i];\n      }\n    });\n  }\n\n}\nfunction newParameterDeclarationScope() {\n  return new ExpressionScope(kParameterDeclaration);\n}\nfunction newArrowHeadScope() {\n  return new ArrowHeadParsingScope(kMaybeArrowParameterDeclaration);\n}\nfunction newAsyncArrowScope() {\n  return new ArrowHeadParsingScope(kMaybeAsyncArrowParameterDeclaration);\n}\nfunction newExpressionScope() {\n  return new ExpressionScope();\n}\n\nclass UtilParser extends Tokenizer {\n  addExtra(node, key, val) {\n    if (!node) return;\n    const extra = node.extra = node.extra || {};\n    extra[key] = val;\n  }\n\n  isRelational(op) {\n    return this.match(types.relational) && this.state.value === op;\n  }\n\n  expectRelational(op) {\n    if (this.isRelational(op)) {\n      this.next();\n    } else {\n      this.unexpected(null, types.relational);\n    }\n  }\n\n  isContextual(name) {\n    return this.match(types.name) && this.state.value === name && !this.state.containsEsc;\n  }\n\n  isUnparsedContextual(nameStart, name) {\n    const nameEnd = nameStart + name.length;\n    return this.input.slice(nameStart, nameEnd) === name && (nameEnd === this.input.length || !isIdentifierChar(this.input.charCodeAt(nameEnd)));\n  }\n\n  isLookaheadContextual(name) {\n    const next = this.nextTokenStart();\n    return this.isUnparsedContextual(next, name);\n  }\n\n  eatContextual(name) {\n    return this.isContextual(name) && this.eat(types.name);\n  }\n\n  expectContextual(name, message) {\n    if (!this.eatContextual(name)) this.unexpected(null, message);\n  }\n\n  canInsertSemicolon() {\n    return this.match(types.eof) || this.match(types.braceR) || this.hasPrecedingLineBreak();\n  }\n\n  hasPrecedingLineBreak() {\n    return lineBreak.test(this.input.slice(this.state.lastTokEnd, this.state.start));\n  }\n\n  hasFollowingLineBreak() {\n    return lineBreak.test(this.input.slice(this.state.end, this.nextTokenStart()));\n  }\n\n  isLineTerminator() {\n    return this.eat(types.semi) || this.canInsertSemicolon();\n  }\n\n  semicolon(allowAsi = true) {\n    if (allowAsi ? this.isLineTerminator() : this.eat(types.semi)) return;\n    this.raise(this.state.lastTokEnd, ErrorMessages.MissingSemicolon);\n  }\n\n  expect(type, pos) {\n    this.eat(type) || this.unexpected(pos, type);\n  }\n\n  assertNoSpace(message = \"Unexpected space.\") {\n    if (this.state.start > this.state.lastTokEnd) {\n      this.raise(this.state.lastTokEnd, message);\n    }\n  }\n\n  unexpected(pos, messageOrType = \"Unexpected token\") {\n    if (typeof messageOrType !== \"string\") {\n      messageOrType = `Unexpected token, expected \"${messageOrType.label}\"`;\n    }\n\n    throw this.raise(pos != null ? pos : this.state.start, messageOrType);\n  }\n\n  expectPlugin(name, pos) {\n    if (!this.hasPlugin(name)) {\n      throw this.raiseWithData(pos != null ? pos : this.state.start, {\n        missingPlugin: [name]\n      }, `This experimental syntax requires enabling the parser plugin: '${name}'`);\n    }\n\n    return true;\n  }\n\n  expectOnePlugin(names, pos) {\n    if (!names.some(n => this.hasPlugin(n))) {\n      throw this.raiseWithData(pos != null ? pos : this.state.start, {\n        missingPlugin: names\n      }, `This experimental syntax requires enabling one of the following parser plugin(s): '${names.join(\", \")}'`);\n    }\n  }\n\n  tryParse(fn, oldState = this.state.clone()) {\n    const abortSignal = {\n      node: null\n    };\n\n    try {\n      const node = fn((node = null) => {\n        abortSignal.node = node;\n        throw abortSignal;\n      });\n\n      if (this.state.errors.length > oldState.errors.length) {\n        const failState = this.state;\n        this.state = oldState;\n        return {\n          node,\n          error: failState.errors[oldState.errors.length],\n          thrown: false,\n          aborted: false,\n          failState\n        };\n      }\n\n      return {\n        node,\n        error: null,\n        thrown: false,\n        aborted: false,\n        failState: null\n      };\n    } catch (error) {\n      const failState = this.state;\n      this.state = oldState;\n\n      if (error instanceof SyntaxError) {\n        return {\n          node: null,\n          error,\n          thrown: true,\n          aborted: false,\n          failState\n        };\n      }\n\n      if (error === abortSignal) {\n        return {\n          node: abortSignal.node,\n          error: null,\n          thrown: false,\n          aborted: true,\n          failState\n        };\n      }\n\n      throw error;\n    }\n  }\n\n  checkExpressionErrors(refExpressionErrors, andThrow) {\n    if (!refExpressionErrors) return false;\n    const {\n      shorthandAssign,\n      doubleProto\n    } = refExpressionErrors;\n    if (!andThrow) return shorthandAssign >= 0 || doubleProto >= 0;\n\n    if (shorthandAssign >= 0) {\n      this.unexpected(shorthandAssign);\n    }\n\n    if (doubleProto >= 0) {\n      this.raise(doubleProto, ErrorMessages.DuplicateProto);\n    }\n  }\n\n  isLiteralPropertyName() {\n    return this.match(types.name) || !!this.state.type.keyword || this.match(types.string) || this.match(types.num) || this.match(types.bigint) || this.match(types.decimal);\n  }\n\n  isPrivateName(node) {\n    return node.type === \"PrivateName\";\n  }\n\n  getPrivateNameSV(node) {\n    return node.id.name;\n  }\n\n  hasPropertyAsPrivateName(node) {\n    return (node.type === \"MemberExpression\" || node.type === \"OptionalMemberExpression\") && this.isPrivateName(node.property);\n  }\n\n  isOptionalChain(node) {\n    return node.type === \"OptionalMemberExpression\" || node.type === \"OptionalCallExpression\";\n  }\n\n  isObjectProperty(node) {\n    return node.type === \"ObjectProperty\";\n  }\n\n  isObjectMethod(node) {\n    return node.type === \"ObjectMethod\";\n  }\n\n  initializeScopes(inModule = this.options.sourceType === \"module\") {\n    const oldLabels = this.state.labels;\n    this.state.labels = [];\n    const oldExportedIdentifiers = this.state.exportedIdentifiers;\n    this.state.exportedIdentifiers = [];\n    const oldInModule = this.inModule;\n    this.inModule = inModule;\n    const oldScope = this.scope;\n    const ScopeHandler = this.getScopeHandler();\n    this.scope = new ScopeHandler(this.raise.bind(this), this.inModule);\n    const oldProdParam = this.prodParam;\n    this.prodParam = new ProductionParameterHandler();\n    const oldClassScope = this.classScope;\n    this.classScope = new ClassScopeHandler(this.raise.bind(this));\n    const oldExpressionScope = this.expressionScope;\n    this.expressionScope = new ExpressionScopeHandler(this.raise.bind(this));\n    return () => {\n      this.state.labels = oldLabels;\n      this.state.exportedIdentifiers = oldExportedIdentifiers;\n      this.inModule = oldInModule;\n      this.scope = oldScope;\n      this.prodParam = oldProdParam;\n      this.classScope = oldClassScope;\n      this.expressionScope = oldExpressionScope;\n    };\n  }\n\n  enterInitialScopes() {\n    let paramFlags = PARAM;\n\n    if (this.hasPlugin(\"topLevelAwait\") && this.inModule) {\n      paramFlags |= PARAM_AWAIT;\n    }\n\n    this.scope.enter(SCOPE_PROGRAM);\n    this.prodParam.enter(paramFlags);\n  }\n\n}\nclass ExpressionErrors {\n  constructor() {\n    this.shorthandAssign = -1;\n    this.doubleProto = -1;\n  }\n\n}\n\nclass Node {\n  constructor(parser, pos, loc) {\n    this.type = void 0;\n    this.start = void 0;\n    this.end = void 0;\n    this.loc = void 0;\n    this.range = void 0;\n    this.leadingComments = void 0;\n    this.trailingComments = void 0;\n    this.innerComments = void 0;\n    this.extra = void 0;\n    this.type = \"\";\n    this.start = pos;\n    this.end = 0;\n    this.loc = new SourceLocation(loc);\n    if (parser != null && parser.options.ranges) this.range = [pos, 0];\n    if (parser != null && parser.filename) this.loc.filename = parser.filename;\n  }\n\n  __clone() {\n    const newNode = new Node();\n    const keys = Object.keys(this);\n\n    for (let i = 0, length = keys.length; i < length; i++) {\n      const key = keys[i];\n\n      if (key !== \"leadingComments\" && key !== \"trailingComments\" && key !== \"innerComments\") {\n        newNode[key] = this[key];\n      }\n    }\n\n    return newNode;\n  }\n\n}\n\nclass NodeUtils extends UtilParser {\n  startNode() {\n    return new Node(this, this.state.start, this.state.startLoc);\n  }\n\n  startNodeAt(pos, loc) {\n    return new Node(this, pos, loc);\n  }\n\n  startNodeAtNode(type) {\n    return this.startNodeAt(type.start, type.loc.start);\n  }\n\n  finishNode(node, type) {\n    return this.finishNodeAt(node, type, this.state.lastTokEnd, this.state.lastTokEndLoc);\n  }\n\n  finishNodeAt(node, type, pos, loc) {\n\n    node.type = type;\n    node.end = pos;\n    node.loc.end = loc;\n    if (this.options.ranges) node.range[1] = pos;\n    this.processComment(node);\n    return node;\n  }\n\n  resetStartLocation(node, start, startLoc) {\n    node.start = start;\n    node.loc.start = startLoc;\n    if (this.options.ranges) node.range[0] = start;\n  }\n\n  resetEndLocation(node, end = this.state.lastTokEnd, endLoc = this.state.lastTokEndLoc) {\n    node.end = end;\n    node.loc.end = endLoc;\n    if (this.options.ranges) node.range[1] = end;\n  }\n\n  resetStartLocationFromNode(node, locationNode) {\n    this.resetStartLocation(node, locationNode.start, locationNode.loc.start);\n  }\n\n}\n\nconst unwrapParenthesizedExpression = node => {\n  return node.type === \"ParenthesizedExpression\" ? unwrapParenthesizedExpression(node.expression) : node;\n};\n\nclass LValParser extends NodeUtils {\n  toAssignable(node, isLHS = false) {\n    var _node$extra, _node$extra3;\n\n    let parenthesized = undefined;\n\n    if (node.type === \"ParenthesizedExpression\" || (_node$extra = node.extra) != null && _node$extra.parenthesized) {\n      parenthesized = unwrapParenthesizedExpression(node);\n\n      if (isLHS) {\n        if (parenthesized.type === \"Identifier\") {\n          this.expressionScope.recordParenthesizedIdentifierError(node.start, ErrorMessages.InvalidParenthesizedAssignment);\n        } else if (parenthesized.type !== \"MemberExpression\") {\n          this.raise(node.start, ErrorMessages.InvalidParenthesizedAssignment);\n        }\n      } else {\n        this.raise(node.start, ErrorMessages.InvalidParenthesizedAssignment);\n      }\n    }\n\n    switch (node.type) {\n      case \"Identifier\":\n      case \"ObjectPattern\":\n      case \"ArrayPattern\":\n      case \"AssignmentPattern\":\n        break;\n\n      case \"ObjectExpression\":\n        node.type = \"ObjectPattern\";\n\n        for (let i = 0, length = node.properties.length, last = length - 1; i < length; i++) {\n          var _node$extra2;\n\n          const prop = node.properties[i];\n          const isLast = i === last;\n          this.toAssignableObjectExpressionProp(prop, isLast, isLHS);\n\n          if (isLast && prop.type === \"RestElement\" && (_node$extra2 = node.extra) != null && _node$extra2.trailingComma) {\n            this.raiseRestNotLast(node.extra.trailingComma);\n          }\n        }\n\n        break;\n\n      case \"ObjectProperty\":\n        this.toAssignable(node.value, isLHS);\n        break;\n\n      case \"SpreadElement\":\n        {\n          this.checkToRestConversion(node);\n          node.type = \"RestElement\";\n          const arg = node.argument;\n          this.toAssignable(arg, isLHS);\n          break;\n        }\n\n      case \"ArrayExpression\":\n        node.type = \"ArrayPattern\";\n        this.toAssignableList(node.elements, (_node$extra3 = node.extra) == null ? void 0 : _node$extra3.trailingComma, isLHS);\n        break;\n\n      case \"AssignmentExpression\":\n        if (node.operator !== \"=\") {\n          this.raise(node.left.end, ErrorMessages.MissingEqInAssignment);\n        }\n\n        node.type = \"AssignmentPattern\";\n        delete node.operator;\n        this.toAssignable(node.left, isLHS);\n        break;\n\n      case \"ParenthesizedExpression\":\n        this.toAssignable(parenthesized, isLHS);\n        break;\n    }\n\n    return node;\n  }\n\n  toAssignableObjectExpressionProp(prop, isLast, isLHS) {\n    if (prop.type === \"ObjectMethod\") {\n      const error = prop.kind === \"get\" || prop.kind === \"set\" ? ErrorMessages.PatternHasAccessor : ErrorMessages.PatternHasMethod;\n      this.raise(prop.key.start, error);\n    } else if (prop.type === \"SpreadElement\" && !isLast) {\n      this.raiseRestNotLast(prop.start);\n    } else {\n      this.toAssignable(prop, isLHS);\n    }\n  }\n\n  toAssignableList(exprList, trailingCommaPos, isLHS) {\n    let end = exprList.length;\n\n    if (end) {\n      const last = exprList[end - 1];\n\n      if ((last == null ? void 0 : last.type) === \"RestElement\") {\n        --end;\n      } else if ((last == null ? void 0 : last.type) === \"SpreadElement\") {\n        last.type = \"RestElement\";\n        let arg = last.argument;\n        this.toAssignable(arg, isLHS);\n        arg = unwrapParenthesizedExpression(arg);\n\n        if (arg.type !== \"Identifier\" && arg.type !== \"MemberExpression\" && arg.type !== \"ArrayPattern\" && arg.type !== \"ObjectPattern\") {\n          this.unexpected(arg.start);\n        }\n\n        if (trailingCommaPos) {\n          this.raiseTrailingCommaAfterRest(trailingCommaPos);\n        }\n\n        --end;\n      }\n    }\n\n    for (let i = 0; i < end; i++) {\n      const elt = exprList[i];\n\n      if (elt) {\n        this.toAssignable(elt, isLHS);\n\n        if (elt.type === \"RestElement\") {\n          this.raiseRestNotLast(elt.start);\n        }\n      }\n    }\n\n    return exprList;\n  }\n\n  toReferencedList(exprList, isParenthesizedExpr) {\n    return exprList;\n  }\n\n  toReferencedListDeep(exprList, isParenthesizedExpr) {\n    this.toReferencedList(exprList, isParenthesizedExpr);\n\n    for (const expr of exprList) {\n      if ((expr == null ? void 0 : expr.type) === \"ArrayExpression\") {\n        this.toReferencedListDeep(expr.elements);\n      }\n    }\n  }\n\n  parseSpread(refExpressionErrors, refNeedsArrowPos) {\n    const node = this.startNode();\n    this.next();\n    node.argument = this.parseMaybeAssignAllowIn(refExpressionErrors, undefined, refNeedsArrowPos);\n    return this.finishNode(node, \"SpreadElement\");\n  }\n\n  parseRestBinding() {\n    const node = this.startNode();\n    this.next();\n    node.argument = this.parseBindingAtom();\n    return this.finishNode(node, \"RestElement\");\n  }\n\n  parseBindingAtom() {\n    switch (this.state.type) {\n      case types.bracketL:\n        {\n          const node = this.startNode();\n          this.next();\n          node.elements = this.parseBindingList(types.bracketR, 93, true);\n          return this.finishNode(node, \"ArrayPattern\");\n        }\n\n      case types.braceL:\n        return this.parseObjectLike(types.braceR, true);\n    }\n\n    return this.parseIdentifier();\n  }\n\n  parseBindingList(close, closeCharCode, allowEmpty, allowModifiers) {\n    const elts = [];\n    let first = true;\n\n    while (!this.eat(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(types.comma);\n      }\n\n      if (allowEmpty && this.match(types.comma)) {\n        elts.push(null);\n      } else if (this.eat(close)) {\n        break;\n      } else if (this.match(types.ellipsis)) {\n        elts.push(this.parseAssignableListItemTypes(this.parseRestBinding()));\n        this.checkCommaAfterRest(closeCharCode);\n        this.expect(close);\n        break;\n      } else {\n        const decorators = [];\n\n        if (this.match(types.at) && this.hasPlugin(\"decorators\")) {\n          this.raise(this.state.start, ErrorMessages.UnsupportedParameterDecorator);\n        }\n\n        while (this.match(types.at)) {\n          decorators.push(this.parseDecorator());\n        }\n\n        elts.push(this.parseAssignableListItem(allowModifiers, decorators));\n      }\n    }\n\n    return elts;\n  }\n\n  parseAssignableListItem(allowModifiers, decorators) {\n    const left = this.parseMaybeDefault();\n    this.parseAssignableListItemTypes(left);\n    const elt = this.parseMaybeDefault(left.start, left.loc.start, left);\n\n    if (decorators.length) {\n      left.decorators = decorators;\n    }\n\n    return elt;\n  }\n\n  parseAssignableListItemTypes(param) {\n    return param;\n  }\n\n  parseMaybeDefault(startPos, startLoc, left) {\n    var _startLoc, _startPos, _left;\n\n    startLoc = (_startLoc = startLoc) != null ? _startLoc : this.state.startLoc;\n    startPos = (_startPos = startPos) != null ? _startPos : this.state.start;\n    left = (_left = left) != null ? _left : this.parseBindingAtom();\n    if (!this.eat(types.eq)) return left;\n    const node = this.startNodeAt(startPos, startLoc);\n    node.left = left;\n    node.right = this.parseMaybeAssignAllowIn();\n    return this.finishNode(node, \"AssignmentPattern\");\n  }\n\n  checkLVal(expr, contextDescription, bindingType = BIND_NONE, checkClashes, disallowLetBinding, strictModeChanged = false) {\n    switch (expr.type) {\n      case \"Identifier\":\n        {\n          const {\n            name\n          } = expr;\n\n          if (this.state.strict && (strictModeChanged ? isStrictBindReservedWord(name, this.inModule) : isStrictBindOnlyReservedWord(name))) {\n            this.raise(expr.start, bindingType === BIND_NONE ? ErrorMessages.StrictEvalArguments : ErrorMessages.StrictEvalArgumentsBinding, name);\n          }\n\n          if (checkClashes) {\n            if (checkClashes.has(name)) {\n              this.raise(expr.start, ErrorMessages.ParamDupe);\n            } else {\n              checkClashes.add(name);\n            }\n          }\n\n          if (disallowLetBinding && name === \"let\") {\n            this.raise(expr.start, ErrorMessages.LetInLexicalBinding);\n          }\n\n          if (!(bindingType & BIND_NONE)) {\n            this.scope.declareName(name, bindingType, expr.start);\n          }\n\n          break;\n        }\n\n      case \"MemberExpression\":\n        if (bindingType !== BIND_NONE) {\n          this.raise(expr.start, ErrorMessages.InvalidPropertyBindingPattern);\n        }\n\n        break;\n\n      case \"ObjectPattern\":\n        for (let prop of expr.properties) {\n          if (this.isObjectProperty(prop)) prop = prop.value;else if (this.isObjectMethod(prop)) continue;\n          this.checkLVal(prop, \"object destructuring pattern\", bindingType, checkClashes, disallowLetBinding);\n        }\n\n        break;\n\n      case \"ArrayPattern\":\n        for (const elem of expr.elements) {\n          if (elem) {\n            this.checkLVal(elem, \"array destructuring pattern\", bindingType, checkClashes, disallowLetBinding);\n          }\n        }\n\n        break;\n\n      case \"AssignmentPattern\":\n        this.checkLVal(expr.left, \"assignment pattern\", bindingType, checkClashes);\n        break;\n\n      case \"RestElement\":\n        this.checkLVal(expr.argument, \"rest element\", bindingType, checkClashes);\n        break;\n\n      case \"ParenthesizedExpression\":\n        this.checkLVal(expr.expression, \"parenthesized expression\", bindingType, checkClashes);\n        break;\n\n      default:\n        {\n          this.raise(expr.start, bindingType === BIND_NONE ? ErrorMessages.InvalidLhs : ErrorMessages.InvalidLhsBinding, contextDescription);\n        }\n    }\n  }\n\n  checkToRestConversion(node) {\n    if (node.argument.type !== \"Identifier\" && node.argument.type !== \"MemberExpression\") {\n      this.raise(node.argument.start, ErrorMessages.InvalidRestAssignmentPattern);\n    }\n  }\n\n  checkCommaAfterRest(close) {\n    if (this.match(types.comma)) {\n      if (this.lookaheadCharCode() === close) {\n        this.raiseTrailingCommaAfterRest(this.state.start);\n      } else {\n        this.raiseRestNotLast(this.state.start);\n      }\n    }\n  }\n\n  raiseRestNotLast(pos) {\n    throw this.raise(pos, ErrorMessages.ElementAfterRest);\n  }\n\n  raiseTrailingCommaAfterRest(pos) {\n    this.raise(pos, ErrorMessages.RestTrailingComma);\n  }\n\n}\n\nclass ExpressionParser extends LValParser {\n  checkProto(prop, isRecord, protoRef, refExpressionErrors) {\n    if (prop.type === \"SpreadElement\" || this.isObjectMethod(prop) || prop.computed || prop.shorthand) {\n      return;\n    }\n\n    const key = prop.key;\n    const name = key.type === \"Identifier\" ? key.name : key.value;\n\n    if (name === \"__proto__\") {\n      if (isRecord) {\n        this.raise(key.start, ErrorMessages.RecordNoProto);\n        return;\n      }\n\n      if (protoRef.used) {\n        if (refExpressionErrors) {\n          if (refExpressionErrors.doubleProto === -1) {\n            refExpressionErrors.doubleProto = key.start;\n          }\n        } else {\n          this.raise(key.start, ErrorMessages.DuplicateProto);\n        }\n      }\n\n      protoRef.used = true;\n    }\n  }\n\n  shouldExitDescending(expr, potentialArrowAt) {\n    return expr.type === \"ArrowFunctionExpression\" && expr.start === potentialArrowAt;\n  }\n\n  getExpression() {\n    let paramFlags = PARAM;\n\n    if (this.hasPlugin(\"topLevelAwait\") && this.inModule) {\n      paramFlags |= PARAM_AWAIT;\n    }\n\n    this.scope.enter(SCOPE_PROGRAM);\n    this.prodParam.enter(paramFlags);\n    this.nextToken();\n    const expr = this.parseExpression();\n\n    if (!this.match(types.eof)) {\n      this.unexpected();\n    }\n\n    expr.comments = this.state.comments;\n    expr.errors = this.state.errors;\n\n    if (this.options.tokens) {\n      expr.tokens = this.tokens;\n    }\n\n    return expr;\n  }\n\n  parseExpression(disallowIn, refExpressionErrors) {\n    if (disallowIn) {\n      return this.disallowInAnd(() => this.parseExpressionBase(refExpressionErrors));\n    }\n\n    return this.allowInAnd(() => this.parseExpressionBase(refExpressionErrors));\n  }\n\n  parseExpressionBase(refExpressionErrors) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const expr = this.parseMaybeAssign(refExpressionErrors);\n\n    if (this.match(types.comma)) {\n      const node = this.startNodeAt(startPos, startLoc);\n      node.expressions = [expr];\n\n      while (this.eat(types.comma)) {\n        node.expressions.push(this.parseMaybeAssign(refExpressionErrors));\n      }\n\n      this.toReferencedList(node.expressions);\n      return this.finishNode(node, \"SequenceExpression\");\n    }\n\n    return expr;\n  }\n\n  parseMaybeAssignDisallowIn(refExpressionErrors, afterLeftParse, refNeedsArrowPos) {\n    return this.disallowInAnd(() => this.parseMaybeAssign(refExpressionErrors, afterLeftParse, refNeedsArrowPos));\n  }\n\n  parseMaybeAssignAllowIn(refExpressionErrors, afterLeftParse, refNeedsArrowPos) {\n    return this.allowInAnd(() => this.parseMaybeAssign(refExpressionErrors, afterLeftParse, refNeedsArrowPos));\n  }\n\n  parseMaybeAssign(refExpressionErrors, afterLeftParse, refNeedsArrowPos) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n\n    if (this.isContextual(\"yield\")) {\n      if (this.prodParam.hasYield) {\n        this.state.exprAllowed = true;\n        let left = this.parseYield();\n\n        if (afterLeftParse) {\n          left = afterLeftParse.call(this, left, startPos, startLoc);\n        }\n\n        return left;\n      }\n    }\n\n    let ownExpressionErrors;\n\n    if (refExpressionErrors) {\n      ownExpressionErrors = false;\n    } else {\n      refExpressionErrors = new ExpressionErrors();\n      ownExpressionErrors = true;\n    }\n\n    if (this.match(types.parenL) || this.match(types.name)) {\n      this.state.potentialArrowAt = this.state.start;\n    }\n\n    let left = this.parseMaybeConditional(refExpressionErrors, refNeedsArrowPos);\n\n    if (afterLeftParse) {\n      left = afterLeftParse.call(this, left, startPos, startLoc);\n    }\n\n    if (this.state.type.isAssign) {\n      const node = this.startNodeAt(startPos, startLoc);\n      const operator = this.state.value;\n      node.operator = operator;\n\n      if (this.match(types.eq)) {\n        node.left = this.toAssignable(left, true);\n        refExpressionErrors.doubleProto = -1;\n      } else {\n        node.left = left;\n      }\n\n      if (refExpressionErrors.shorthandAssign >= node.left.start) {\n        refExpressionErrors.shorthandAssign = -1;\n      }\n\n      this.checkLVal(left, \"assignment expression\");\n      this.next();\n      node.right = this.parseMaybeAssign();\n      return this.finishNode(node, \"AssignmentExpression\");\n    } else if (ownExpressionErrors) {\n      this.checkExpressionErrors(refExpressionErrors, true);\n    }\n\n    return left;\n  }\n\n  parseMaybeConditional(refExpressionErrors, refNeedsArrowPos) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const potentialArrowAt = this.state.potentialArrowAt;\n    const expr = this.parseExprOps(refExpressionErrors);\n\n    if (this.shouldExitDescending(expr, potentialArrowAt)) {\n      return expr;\n    }\n\n    return this.parseConditional(expr, startPos, startLoc, refNeedsArrowPos);\n  }\n\n  parseConditional(expr, startPos, startLoc, refNeedsArrowPos) {\n    if (this.eat(types.question)) {\n      const node = this.startNodeAt(startPos, startLoc);\n      node.test = expr;\n      node.consequent = this.parseMaybeAssignAllowIn();\n      this.expect(types.colon);\n      node.alternate = this.parseMaybeAssign();\n      return this.finishNode(node, \"ConditionalExpression\");\n    }\n\n    return expr;\n  }\n\n  parseExprOps(refExpressionErrors) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const potentialArrowAt = this.state.potentialArrowAt;\n    const expr = this.parseMaybeUnary(refExpressionErrors);\n\n    if (this.shouldExitDescending(expr, potentialArrowAt)) {\n      return expr;\n    }\n\n    return this.parseExprOp(expr, startPos, startLoc, -1);\n  }\n\n  parseExprOp(left, leftStartPos, leftStartLoc, minPrec) {\n    let prec = this.state.type.binop;\n\n    if (prec != null && (this.prodParam.hasIn || !this.match(types._in))) {\n      if (prec > minPrec) {\n        const op = this.state.type;\n\n        if (op === types.pipeline) {\n          this.expectPlugin(\"pipelineOperator\");\n\n          if (this.state.inFSharpPipelineDirectBody) {\n            return left;\n          }\n\n          this.state.inPipeline = true;\n          this.checkPipelineAtInfixOperator(left, leftStartPos);\n        }\n\n        const node = this.startNodeAt(leftStartPos, leftStartLoc);\n        node.left = left;\n        node.operator = this.state.value;\n        const logical = op === types.logicalOR || op === types.logicalAND;\n        const coalesce = op === types.nullishCoalescing;\n\n        if (coalesce) {\n          prec = types.logicalAND.binop;\n        }\n\n        this.next();\n\n        if (op === types.pipeline && this.getPluginOption(\"pipelineOperator\", \"proposal\") === \"minimal\") {\n          if (this.match(types.name) && this.state.value === \"await\" && this.prodParam.hasAwait) {\n            throw this.raise(this.state.start, ErrorMessages.UnexpectedAwaitAfterPipelineBody);\n          }\n        }\n\n        node.right = this.parseExprOpRightExpr(op, prec);\n        this.finishNode(node, logical || coalesce ? \"LogicalExpression\" : \"BinaryExpression\");\n        const nextOp = this.state.type;\n\n        if (coalesce && (nextOp === types.logicalOR || nextOp === types.logicalAND) || logical && nextOp === types.nullishCoalescing) {\n          throw this.raise(this.state.start, ErrorMessages.MixingCoalesceWithLogical);\n        }\n\n        return this.parseExprOp(node, leftStartPos, leftStartLoc, minPrec);\n      }\n    }\n\n    return left;\n  }\n\n  parseExprOpRightExpr(op, prec) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n\n    switch (op) {\n      case types.pipeline:\n        switch (this.getPluginOption(\"pipelineOperator\", \"proposal\")) {\n          case \"smart\":\n            return this.withTopicPermittingContext(() => {\n              return this.parseSmartPipelineBody(this.parseExprOpBaseRightExpr(op, prec), startPos, startLoc);\n            });\n\n          case \"fsharp\":\n            return this.withSoloAwaitPermittingContext(() => {\n              return this.parseFSharpPipelineBody(prec);\n            });\n        }\n\n      default:\n        return this.parseExprOpBaseRightExpr(op, prec);\n    }\n  }\n\n  parseExprOpBaseRightExpr(op, prec) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    return this.parseExprOp(this.parseMaybeUnary(), startPos, startLoc, op.rightAssociative ? prec - 1 : prec);\n  }\n\n  checkExponentialAfterUnary(node) {\n    if (this.match(types.exponent)) {\n      this.raise(node.argument.start, ErrorMessages.UnexpectedTokenUnaryExponentiation);\n    }\n  }\n\n  parseMaybeUnary(refExpressionErrors, sawUnary) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const isAwait = this.isContextual(\"await\");\n\n    if (isAwait && this.isAwaitAllowed()) {\n      this.next();\n      const expr = this.parseAwait(startPos, startLoc);\n      if (!sawUnary) this.checkExponentialAfterUnary(expr);\n      return expr;\n    }\n\n    if (this.isContextual(\"module\") && this.lookaheadCharCode() === 123 && !this.hasFollowingLineBreak()) {\n      return this.parseModuleExpression();\n    }\n\n    const update = this.match(types.incDec);\n    const node = this.startNode();\n\n    if (this.state.type.prefix) {\n      node.operator = this.state.value;\n      node.prefix = true;\n\n      if (this.match(types._throw)) {\n        this.expectPlugin(\"throwExpressions\");\n      }\n\n      const isDelete = this.match(types._delete);\n      this.next();\n      node.argument = this.parseMaybeUnary(null, true);\n      this.checkExpressionErrors(refExpressionErrors, true);\n\n      if (this.state.strict && isDelete) {\n        const arg = node.argument;\n\n        if (arg.type === \"Identifier\") {\n          this.raise(node.start, ErrorMessages.StrictDelete);\n        } else if (this.hasPropertyAsPrivateName(arg)) {\n          this.raise(node.start, ErrorMessages.DeletePrivateField);\n        }\n      }\n\n      if (!update) {\n        if (!sawUnary) this.checkExponentialAfterUnary(node);\n        return this.finishNode(node, \"UnaryExpression\");\n      }\n    }\n\n    const expr = this.parseUpdate(node, update, refExpressionErrors);\n\n    if (isAwait) {\n      const startsExpr = this.hasPlugin(\"v8intrinsic\") ? this.state.type.startsExpr : this.state.type.startsExpr && !this.match(types.modulo);\n\n      if (startsExpr && !this.isAmbiguousAwait()) {\n        this.raiseOverwrite(startPos, this.hasPlugin(\"topLevelAwait\") ? ErrorMessages.AwaitNotInAsyncContext : ErrorMessages.AwaitNotInAsyncFunction);\n        return this.parseAwait(startPos, startLoc);\n      }\n    }\n\n    return expr;\n  }\n\n  parseUpdate(node, update, refExpressionErrors) {\n    if (update) {\n      this.checkLVal(node.argument, \"prefix operation\");\n      return this.finishNode(node, \"UpdateExpression\");\n    }\n\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    let expr = this.parseExprSubscripts(refExpressionErrors);\n    if (this.checkExpressionErrors(refExpressionErrors, false)) return expr;\n\n    while (this.state.type.postfix && !this.canInsertSemicolon()) {\n      const node = this.startNodeAt(startPos, startLoc);\n      node.operator = this.state.value;\n      node.prefix = false;\n      node.argument = expr;\n      this.checkLVal(expr, \"postfix operation\");\n      this.next();\n      expr = this.finishNode(node, \"UpdateExpression\");\n    }\n\n    return expr;\n  }\n\n  parseExprSubscripts(refExpressionErrors) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const potentialArrowAt = this.state.potentialArrowAt;\n    const expr = this.parseExprAtom(refExpressionErrors);\n\n    if (this.shouldExitDescending(expr, potentialArrowAt)) {\n      return expr;\n    }\n\n    return this.parseSubscripts(expr, startPos, startLoc);\n  }\n\n  parseSubscripts(base, startPos, startLoc, noCalls) {\n    const state = {\n      optionalChainMember: false,\n      maybeAsyncArrow: this.atPossibleAsyncArrow(base),\n      stop: false\n    };\n\n    do {\n      base = this.parseSubscript(base, startPos, startLoc, noCalls, state);\n      state.maybeAsyncArrow = false;\n    } while (!state.stop);\n\n    return base;\n  }\n\n  parseSubscript(base, startPos, startLoc, noCalls, state) {\n    if (!noCalls && this.eat(types.doubleColon)) {\n      return this.parseBind(base, startPos, startLoc, noCalls, state);\n    } else if (this.match(types.backQuote)) {\n      return this.parseTaggedTemplateExpression(base, startPos, startLoc, state);\n    }\n\n    let optional = false;\n\n    if (this.match(types.questionDot)) {\n      if (noCalls && this.lookaheadCharCode() === 40) {\n        state.stop = true;\n        return base;\n      }\n\n      state.optionalChainMember = optional = true;\n      this.next();\n    }\n\n    if (!noCalls && this.match(types.parenL)) {\n      return this.parseCoverCallAndAsyncArrowHead(base, startPos, startLoc, state, optional);\n    } else if (optional || this.match(types.bracketL) || this.eat(types.dot)) {\n      return this.parseMember(base, startPos, startLoc, state, optional);\n    } else {\n      state.stop = true;\n      return base;\n    }\n  }\n\n  parseMember(base, startPos, startLoc, state, optional) {\n    const node = this.startNodeAt(startPos, startLoc);\n    const computed = this.eat(types.bracketL);\n    node.object = base;\n    node.computed = computed;\n    const property = computed ? this.parseExpression() : this.parseMaybePrivateName(true);\n\n    if (this.isPrivateName(property)) {\n      if (node.object.type === \"Super\") {\n        this.raise(startPos, ErrorMessages.SuperPrivateField);\n      }\n\n      this.classScope.usePrivateName(this.getPrivateNameSV(property), property.start);\n    }\n\n    node.property = property;\n\n    if (computed) {\n      this.expect(types.bracketR);\n    }\n\n    if (state.optionalChainMember) {\n      node.optional = optional;\n      return this.finishNode(node, \"OptionalMemberExpression\");\n    } else {\n      return this.finishNode(node, \"MemberExpression\");\n    }\n  }\n\n  parseBind(base, startPos, startLoc, noCalls, state) {\n    const node = this.startNodeAt(startPos, startLoc);\n    node.object = base;\n    node.callee = this.parseNoCallExpr();\n    state.stop = true;\n    return this.parseSubscripts(this.finishNode(node, \"BindExpression\"), startPos, startLoc, noCalls);\n  }\n\n  parseCoverCallAndAsyncArrowHead(base, startPos, startLoc, state, optional) {\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n    this.state.maybeInArrowParameters = true;\n    this.next();\n    let node = this.startNodeAt(startPos, startLoc);\n    node.callee = base;\n\n    if (state.maybeAsyncArrow) {\n      this.expressionScope.enter(newAsyncArrowScope());\n    }\n\n    if (state.optionalChainMember) {\n      node.optional = optional;\n    }\n\n    if (optional) {\n      node.arguments = this.parseCallExpressionArguments(types.parenR, false);\n    } else {\n      node.arguments = this.parseCallExpressionArguments(types.parenR, state.maybeAsyncArrow, base.type === \"Import\", base.type !== \"Super\", node);\n    }\n\n    this.finishCallExpression(node, state.optionalChainMember);\n\n    if (state.maybeAsyncArrow && this.shouldParseAsyncArrow() && !optional) {\n      state.stop = true;\n      this.expressionScope.validateAsPattern();\n      this.expressionScope.exit();\n      node = this.parseAsyncArrowFromCallExpression(this.startNodeAt(startPos, startLoc), node);\n    } else {\n      if (state.maybeAsyncArrow) {\n        this.expressionScope.exit();\n      }\n\n      this.toReferencedArguments(node);\n    }\n\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n    return node;\n  }\n\n  toReferencedArguments(node, isParenthesizedExpr) {\n    this.toReferencedListDeep(node.arguments, isParenthesizedExpr);\n  }\n\n  parseTaggedTemplateExpression(base, startPos, startLoc, state) {\n    const node = this.startNodeAt(startPos, startLoc);\n    node.tag = base;\n    node.quasi = this.parseTemplate(true);\n\n    if (state.optionalChainMember) {\n      this.raise(startPos, ErrorMessages.OptionalChainingNoTemplate);\n    }\n\n    return this.finishNode(node, \"TaggedTemplateExpression\");\n  }\n\n  atPossibleAsyncArrow(base) {\n    return base.type === \"Identifier\" && base.name === \"async\" && this.state.lastTokEnd === base.end && !this.canInsertSemicolon() && base.end - base.start === 5 && base.start === this.state.potentialArrowAt;\n  }\n\n  finishCallExpression(node, optional) {\n    if (node.callee.type === \"Import\") {\n      if (node.arguments.length === 2) {\n        if (!this.hasPlugin(\"moduleAttributes\")) {\n          this.expectPlugin(\"importAssertions\");\n        }\n      }\n\n      if (node.arguments.length === 0 || node.arguments.length > 2) {\n        this.raise(node.start, ErrorMessages.ImportCallArity, this.hasPlugin(\"importAssertions\") || this.hasPlugin(\"moduleAttributes\") ? \"one or two arguments\" : \"one argument\");\n      } else {\n        for (const arg of node.arguments) {\n          if (arg.type === \"SpreadElement\") {\n            this.raise(arg.start, ErrorMessages.ImportCallSpreadArgument);\n          }\n        }\n      }\n    }\n\n    return this.finishNode(node, optional ? \"OptionalCallExpression\" : \"CallExpression\");\n  }\n\n  parseCallExpressionArguments(close, possibleAsyncArrow, dynamicImport, allowPlaceholder, nodeForExtra) {\n    const elts = [];\n    let first = true;\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = false;\n\n    while (!this.eat(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(types.comma);\n\n        if (this.match(close)) {\n          if (dynamicImport && !this.hasPlugin(\"importAssertions\") && !this.hasPlugin(\"moduleAttributes\")) {\n            this.raise(this.state.lastTokStart, ErrorMessages.ImportCallArgumentTrailingComma);\n          }\n\n          if (nodeForExtra) {\n            this.addExtra(nodeForExtra, \"trailingComma\", this.state.lastTokStart);\n          }\n\n          this.next();\n          break;\n        }\n      }\n\n      elts.push(this.parseExprListItem(false, possibleAsyncArrow ? new ExpressionErrors() : undefined, possibleAsyncArrow ? {\n        start: 0\n      } : undefined, allowPlaceholder));\n    }\n\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n    return elts;\n  }\n\n  shouldParseAsyncArrow() {\n    return this.match(types.arrow) && !this.canInsertSemicolon();\n  }\n\n  parseAsyncArrowFromCallExpression(node, call) {\n    var _call$extra;\n\n    this.expect(types.arrow);\n    this.parseArrowExpression(node, call.arguments, true, (_call$extra = call.extra) == null ? void 0 : _call$extra.trailingComma);\n    return node;\n  }\n\n  parseNoCallExpr() {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    return this.parseSubscripts(this.parseExprAtom(), startPos, startLoc, true);\n  }\n\n  parseExprAtom(refExpressionErrors) {\n    if (this.state.type === types.slash) this.readRegexp();\n    const canBeArrow = this.state.potentialArrowAt === this.state.start;\n    let node;\n\n    switch (this.state.type) {\n      case types._super:\n        return this.parseSuper();\n\n      case types._import:\n        node = this.startNode();\n        this.next();\n\n        if (this.match(types.dot)) {\n          return this.parseImportMetaProperty(node);\n        }\n\n        if (!this.match(types.parenL)) {\n          this.raise(this.state.lastTokStart, ErrorMessages.UnsupportedImport);\n        }\n\n        return this.finishNode(node, \"Import\");\n\n      case types._this:\n        node = this.startNode();\n        this.next();\n        return this.finishNode(node, \"ThisExpression\");\n\n      case types.name:\n        {\n          const containsEsc = this.state.containsEsc;\n          const id = this.parseIdentifier();\n\n          if (!containsEsc && id.name === \"async\" && !this.canInsertSemicolon()) {\n            if (this.match(types._function)) {\n              const last = this.state.context.length - 1;\n\n              if (this.state.context[last] !== types$1.functionStatement) {\n                throw new Error(\"Internal error\");\n              }\n\n              this.state.context[last] = types$1.functionExpression;\n              this.next();\n              return this.parseFunction(this.startNodeAtNode(id), undefined, true);\n            } else if (this.match(types.name)) {\n              return this.parseAsyncArrowUnaryFunction(id);\n            }\n          }\n\n          if (canBeArrow && this.match(types.arrow) && !this.canInsertSemicolon()) {\n            this.next();\n            return this.parseArrowExpression(this.startNodeAtNode(id), [id], false);\n          }\n\n          return id;\n        }\n\n      case types._do:\n        {\n          return this.parseDo();\n        }\n\n      case types.regexp:\n        {\n          const value = this.state.value;\n          node = this.parseLiteral(value.value, \"RegExpLiteral\");\n          node.pattern = value.pattern;\n          node.flags = value.flags;\n          return node;\n        }\n\n      case types.num:\n        return this.parseLiteral(this.state.value, \"NumericLiteral\");\n\n      case types.bigint:\n        return this.parseLiteral(this.state.value, \"BigIntLiteral\");\n\n      case types.decimal:\n        return this.parseLiteral(this.state.value, \"DecimalLiteral\");\n\n      case types.string:\n        return this.parseLiteral(this.state.value, \"StringLiteral\");\n\n      case types._null:\n        node = this.startNode();\n        this.next();\n        return this.finishNode(node, \"NullLiteral\");\n\n      case types._true:\n      case types._false:\n        return this.parseBooleanLiteral();\n\n      case types.parenL:\n        return this.parseParenAndDistinguishExpression(canBeArrow);\n\n      case types.bracketBarL:\n      case types.bracketHashL:\n        {\n          return this.parseArrayLike(this.state.type === types.bracketBarL ? types.bracketBarR : types.bracketR, false, true, refExpressionErrors);\n        }\n\n      case types.bracketL:\n        {\n          return this.parseArrayLike(types.bracketR, true, false, refExpressionErrors);\n        }\n\n      case types.braceBarL:\n      case types.braceHashL:\n        {\n          return this.parseObjectLike(this.state.type === types.braceBarL ? types.braceBarR : types.braceR, false, true, refExpressionErrors);\n        }\n\n      case types.braceL:\n        {\n          return this.parseObjectLike(types.braceR, false, false, refExpressionErrors);\n        }\n\n      case types._function:\n        return this.parseFunctionOrFunctionSent();\n\n      case types.at:\n        this.parseDecorators();\n\n      case types._class:\n        node = this.startNode();\n        this.takeDecorators(node);\n        return this.parseClass(node, false);\n\n      case types._new:\n        return this.parseNewOrNewTarget();\n\n      case types.backQuote:\n        return this.parseTemplate(false);\n\n      case types.doubleColon:\n        {\n          node = this.startNode();\n          this.next();\n          node.object = null;\n          const callee = node.callee = this.parseNoCallExpr();\n\n          if (callee.type === \"MemberExpression\") {\n            return this.finishNode(node, \"BindExpression\");\n          } else {\n            throw this.raise(callee.start, ErrorMessages.UnsupportedBind);\n          }\n        }\n\n      case types.hash:\n        {\n          if (this.state.inPipeline) {\n            node = this.startNode();\n\n            if (this.getPluginOption(\"pipelineOperator\", \"proposal\") !== \"smart\") {\n              this.raise(node.start, ErrorMessages.PrimaryTopicRequiresSmartPipeline);\n            }\n\n            this.next();\n\n            if (!this.primaryTopicReferenceIsAllowedInCurrentTopicContext()) {\n              this.raise(node.start, ErrorMessages.PrimaryTopicNotAllowed);\n            }\n\n            this.registerTopicReference();\n            return this.finishNode(node, \"PipelinePrimaryTopicReference\");\n          }\n\n          const nextCh = this.input.codePointAt(this.state.end);\n\n          if (isIdentifierStart(nextCh) || nextCh === 92) {\n            const start = this.state.start;\n            node = this.parseMaybePrivateName(true);\n\n            if (this.match(types._in)) {\n              this.expectPlugin(\"privateIn\");\n              this.classScope.usePrivateName(this.getPrivateNameSV(node), node.start);\n            } else if (this.hasPlugin(\"privateIn\")) {\n              this.raise(this.state.start, ErrorMessages.PrivateInExpectedIn, this.getPrivateNameSV(node));\n            } else {\n              throw this.unexpected(start);\n            }\n\n            return node;\n          }\n        }\n\n      case types.relational:\n        {\n          if (this.state.value === \"<\") {\n            const lookaheadCh = this.input.codePointAt(this.nextTokenStart());\n\n            if (isIdentifierStart(lookaheadCh) || lookaheadCh === 62) {\n                this.expectOnePlugin([\"jsx\", \"flow\", \"typescript\"]);\n              }\n          }\n        }\n\n      default:\n        throw this.unexpected();\n    }\n  }\n\n  parseAsyncArrowUnaryFunction(id) {\n    const node = this.startNodeAtNode(id);\n    this.prodParam.enter(functionFlags(true, this.prodParam.hasYield));\n    const params = [this.parseIdentifier()];\n    this.prodParam.exit();\n\n    if (this.hasPrecedingLineBreak()) {\n      this.raise(this.state.pos, ErrorMessages.LineTerminatorBeforeArrow);\n    }\n\n    this.expect(types.arrow);\n    this.parseArrowExpression(node, params, true);\n    return node;\n  }\n\n  parseDo() {\n    this.expectPlugin(\"doExpressions\");\n    const node = this.startNode();\n    this.next();\n    const oldLabels = this.state.labels;\n    this.state.labels = [];\n    node.body = this.parseBlock();\n    this.state.labels = oldLabels;\n    return this.finishNode(node, \"DoExpression\");\n  }\n\n  parseSuper() {\n    const node = this.startNode();\n    this.next();\n\n    if (this.match(types.parenL) && !this.scope.allowDirectSuper && !this.options.allowSuperOutsideMethod) {\n      this.raise(node.start, ErrorMessages.SuperNotAllowed);\n    } else if (!this.scope.allowSuper && !this.options.allowSuperOutsideMethod) {\n      this.raise(node.start, ErrorMessages.UnexpectedSuper);\n    }\n\n    if (!this.match(types.parenL) && !this.match(types.bracketL) && !this.match(types.dot)) {\n      this.raise(node.start, ErrorMessages.UnsupportedSuper);\n    }\n\n    return this.finishNode(node, \"Super\");\n  }\n\n  parseBooleanLiteral() {\n    const node = this.startNode();\n    node.value = this.match(types._true);\n    this.next();\n    return this.finishNode(node, \"BooleanLiteral\");\n  }\n\n  parseMaybePrivateName(isPrivateNameAllowed) {\n    const isPrivate = this.match(types.hash);\n\n    if (isPrivate) {\n      this.expectOnePlugin([\"classPrivateProperties\", \"classPrivateMethods\"]);\n\n      if (!isPrivateNameAllowed) {\n        this.raise(this.state.pos, ErrorMessages.UnexpectedPrivateField);\n      }\n\n      const node = this.startNode();\n      this.next();\n      this.assertNoSpace(\"Unexpected space between # and identifier\");\n      node.id = this.parseIdentifier(true);\n      return this.finishNode(node, \"PrivateName\");\n    } else {\n      return this.parseIdentifier(true);\n    }\n  }\n\n  parseFunctionOrFunctionSent() {\n    const node = this.startNode();\n    this.next();\n\n    if (this.prodParam.hasYield && this.match(types.dot)) {\n      const meta = this.createIdentifier(this.startNodeAtNode(node), \"function\");\n      this.next();\n      return this.parseMetaProperty(node, meta, \"sent\");\n    }\n\n    return this.parseFunction(node);\n  }\n\n  parseMetaProperty(node, meta, propertyName) {\n    node.meta = meta;\n\n    if (meta.name === \"function\" && propertyName === \"sent\") {\n      if (this.isContextual(propertyName)) {\n        this.expectPlugin(\"functionSent\");\n      } else if (!this.hasPlugin(\"functionSent\")) {\n        this.unexpected();\n      }\n    }\n\n    const containsEsc = this.state.containsEsc;\n    node.property = this.parseIdentifier(true);\n\n    if (node.property.name !== propertyName || containsEsc) {\n      this.raise(node.property.start, ErrorMessages.UnsupportedMetaProperty, meta.name, propertyName);\n    }\n\n    return this.finishNode(node, \"MetaProperty\");\n  }\n\n  parseImportMetaProperty(node) {\n    const id = this.createIdentifier(this.startNodeAtNode(node), \"import\");\n    this.next();\n\n    if (this.isContextual(\"meta\")) {\n      if (!this.inModule) {\n        this.raiseWithData(id.start, {\n          code: \"BABEL_PARSER_SOURCETYPE_MODULE_REQUIRED\"\n        }, ErrorMessages.ImportMetaOutsideModule);\n      }\n\n      this.sawUnambiguousESM = true;\n    }\n\n    return this.parseMetaProperty(node, id, \"meta\");\n  }\n\n  parseLiteral(value, type, startPos, startLoc) {\n    startPos = startPos || this.state.start;\n    startLoc = startLoc || this.state.startLoc;\n    const node = this.startNodeAt(startPos, startLoc);\n    this.addExtra(node, \"rawValue\", value);\n    this.addExtra(node, \"raw\", this.input.slice(startPos, this.state.end));\n    node.value = value;\n    this.next();\n    return this.finishNode(node, type);\n  }\n\n  parseParenAndDistinguishExpression(canBeArrow) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    let val;\n    this.next();\n    this.expressionScope.enter(newArrowHeadScope());\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.maybeInArrowParameters = true;\n    this.state.inFSharpPipelineDirectBody = false;\n    const innerStartPos = this.state.start;\n    const innerStartLoc = this.state.startLoc;\n    const exprList = [];\n    const refExpressionErrors = new ExpressionErrors();\n    const refNeedsArrowPos = {\n      start: 0\n    };\n    let first = true;\n    let spreadStart;\n    let optionalCommaStart;\n\n    while (!this.match(types.parenR)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(types.comma, refNeedsArrowPos.start || null);\n\n        if (this.match(types.parenR)) {\n          optionalCommaStart = this.state.start;\n          break;\n        }\n      }\n\n      if (this.match(types.ellipsis)) {\n        const spreadNodeStartPos = this.state.start;\n        const spreadNodeStartLoc = this.state.startLoc;\n        spreadStart = this.state.start;\n        exprList.push(this.parseParenItem(this.parseRestBinding(), spreadNodeStartPos, spreadNodeStartLoc));\n        this.checkCommaAfterRest(41);\n        break;\n      } else {\n        exprList.push(this.parseMaybeAssignAllowIn(refExpressionErrors, this.parseParenItem, refNeedsArrowPos));\n      }\n    }\n\n    const innerEndPos = this.state.lastTokEnd;\n    const innerEndLoc = this.state.lastTokEndLoc;\n    this.expect(types.parenR);\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n    let arrowNode = this.startNodeAt(startPos, startLoc);\n\n    if (canBeArrow && this.shouldParseArrow() && (arrowNode = this.parseArrow(arrowNode))) {\n      this.expressionScope.validateAsPattern();\n      this.expressionScope.exit();\n      this.parseArrowExpression(arrowNode, exprList, false);\n      return arrowNode;\n    }\n\n    this.expressionScope.exit();\n\n    if (!exprList.length) {\n      this.unexpected(this.state.lastTokStart);\n    }\n\n    if (optionalCommaStart) this.unexpected(optionalCommaStart);\n    if (spreadStart) this.unexpected(spreadStart);\n    this.checkExpressionErrors(refExpressionErrors, true);\n    if (refNeedsArrowPos.start) this.unexpected(refNeedsArrowPos.start);\n    this.toReferencedListDeep(exprList, true);\n\n    if (exprList.length > 1) {\n      val = this.startNodeAt(innerStartPos, innerStartLoc);\n      val.expressions = exprList;\n      this.finishNodeAt(val, \"SequenceExpression\", innerEndPos, innerEndLoc);\n    } else {\n      val = exprList[0];\n    }\n\n    if (!this.options.createParenthesizedExpressions) {\n      this.addExtra(val, \"parenthesized\", true);\n      this.addExtra(val, \"parenStart\", startPos);\n      return val;\n    }\n\n    const parenExpression = this.startNodeAt(startPos, startLoc);\n    parenExpression.expression = val;\n    this.finishNode(parenExpression, \"ParenthesizedExpression\");\n    return parenExpression;\n  }\n\n  shouldParseArrow() {\n    return !this.canInsertSemicolon();\n  }\n\n  parseArrow(node) {\n    if (this.eat(types.arrow)) {\n      return node;\n    }\n  }\n\n  parseParenItem(node, startPos, startLoc) {\n    return node;\n  }\n\n  parseNewOrNewTarget() {\n    const node = this.startNode();\n    this.next();\n\n    if (this.match(types.dot)) {\n      const meta = this.createIdentifier(this.startNodeAtNode(node), \"new\");\n      this.next();\n      const metaProp = this.parseMetaProperty(node, meta, \"target\");\n\n      if (!this.scope.inNonArrowFunction && !this.scope.inClass) {\n        let error = ErrorMessages.UnexpectedNewTarget;\n\n        if (this.hasPlugin(\"classProperties\")) {\n          error += \" or class properties\";\n        }\n\n        this.raise(metaProp.start, error);\n      }\n\n      return metaProp;\n    }\n\n    return this.parseNew(node);\n  }\n\n  parseNew(node) {\n    node.callee = this.parseNoCallExpr();\n\n    if (node.callee.type === \"Import\") {\n      this.raise(node.callee.start, ErrorMessages.ImportCallNotNewExpression);\n    } else if (this.isOptionalChain(node.callee)) {\n      this.raise(this.state.lastTokEnd, ErrorMessages.OptionalChainingNoNew);\n    } else if (this.eat(types.questionDot)) {\n      this.raise(this.state.start, ErrorMessages.OptionalChainingNoNew);\n    }\n\n    this.parseNewArguments(node);\n    return this.finishNode(node, \"NewExpression\");\n  }\n\n  parseNewArguments(node) {\n    if (this.eat(types.parenL)) {\n      const args = this.parseExprList(types.parenR);\n      this.toReferencedList(args);\n      node.arguments = args;\n    } else {\n      node.arguments = [];\n    }\n  }\n\n  parseTemplateElement(isTagged) {\n    const elem = this.startNode();\n\n    if (this.state.value === null) {\n      if (!isTagged) {\n        this.raise(this.state.start + 1, ErrorMessages.InvalidEscapeSequenceTemplate);\n      }\n    }\n\n    elem.value = {\n      raw: this.input.slice(this.state.start, this.state.end).replace(/\\r\\n?/g, \"\\n\"),\n      cooked: this.state.value\n    };\n    this.next();\n    elem.tail = this.match(types.backQuote);\n    return this.finishNode(elem, \"TemplateElement\");\n  }\n\n  parseTemplate(isTagged) {\n    const node = this.startNode();\n    this.next();\n    node.expressions = [];\n    let curElt = this.parseTemplateElement(isTagged);\n    node.quasis = [curElt];\n\n    while (!curElt.tail) {\n      this.expect(types.dollarBraceL);\n      node.expressions.push(this.parseTemplateSubstitution());\n      this.expect(types.braceR);\n      node.quasis.push(curElt = this.parseTemplateElement(isTagged));\n    }\n\n    this.next();\n    return this.finishNode(node, \"TemplateLiteral\");\n  }\n\n  parseTemplateSubstitution() {\n    return this.parseExpression();\n  }\n\n  parseObjectLike(close, isPattern, isRecord, refExpressionErrors) {\n    if (isRecord) {\n      this.expectPlugin(\"recordAndTuple\");\n    }\n\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = false;\n    const propHash = Object.create(null);\n    let first = true;\n    const node = this.startNode();\n    node.properties = [];\n    this.next();\n\n    while (!this.match(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(types.comma);\n\n        if (this.match(close)) {\n          this.addExtra(node, \"trailingComma\", this.state.lastTokStart);\n          break;\n        }\n      }\n\n      const prop = this.parsePropertyDefinition(isPattern, refExpressionErrors);\n\n      if (!isPattern) {\n        this.checkProto(prop, isRecord, propHash, refExpressionErrors);\n      }\n\n      if (isRecord && !this.isObjectProperty(prop) && prop.type !== \"SpreadElement\") {\n        this.raise(prop.start, ErrorMessages.InvalidRecordProperty);\n      }\n\n      if (prop.shorthand) {\n        this.addExtra(prop, \"shorthand\", true);\n      }\n\n      node.properties.push(prop);\n    }\n\n    this.state.exprAllowed = false;\n    this.next();\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n    let type = \"ObjectExpression\";\n\n    if (isPattern) {\n      type = \"ObjectPattern\";\n    } else if (isRecord) {\n      type = \"RecordExpression\";\n    }\n\n    return this.finishNode(node, type);\n  }\n\n  maybeAsyncOrAccessorProp(prop) {\n    return !prop.computed && prop.key.type === \"Identifier\" && (this.isLiteralPropertyName() || this.match(types.bracketL) || this.match(types.star));\n  }\n\n  parsePropertyDefinition(isPattern, refExpressionErrors) {\n    let decorators = [];\n\n    if (this.match(types.at)) {\n      if (this.hasPlugin(\"decorators\")) {\n        this.raise(this.state.start, ErrorMessages.UnsupportedPropertyDecorator);\n      }\n\n      while (this.match(types.at)) {\n        decorators.push(this.parseDecorator());\n      }\n    }\n\n    const prop = this.startNode();\n    let isGenerator = false;\n    let isAsync = false;\n    let isAccessor = false;\n    let startPos;\n    let startLoc;\n\n    if (this.match(types.ellipsis)) {\n      if (decorators.length) this.unexpected();\n\n      if (isPattern) {\n        this.next();\n        prop.argument = this.parseIdentifier();\n        this.checkCommaAfterRest(125);\n        return this.finishNode(prop, \"RestElement\");\n      }\n\n      return this.parseSpread();\n    }\n\n    if (decorators.length) {\n      prop.decorators = decorators;\n      decorators = [];\n    }\n\n    prop.method = false;\n\n    if (isPattern || refExpressionErrors) {\n      startPos = this.state.start;\n      startLoc = this.state.startLoc;\n    }\n\n    if (!isPattern) {\n      isGenerator = this.eat(types.star);\n    }\n\n    const containsEsc = this.state.containsEsc;\n    const key = this.parsePropertyName(prop, false);\n\n    if (!isPattern && !isGenerator && !containsEsc && this.maybeAsyncOrAccessorProp(prop)) {\n      const keyName = key.name;\n\n      if (keyName === \"async\" && !this.hasPrecedingLineBreak()) {\n        isAsync = true;\n        isGenerator = this.eat(types.star);\n        this.parsePropertyName(prop, false);\n      }\n\n      if (keyName === \"get\" || keyName === \"set\") {\n        isAccessor = true;\n        prop.kind = keyName;\n\n        if (this.match(types.star)) {\n          isGenerator = true;\n          this.raise(this.state.pos, ErrorMessages.AccessorIsGenerator, keyName);\n          this.next();\n        }\n\n        this.parsePropertyName(prop, false);\n      }\n    }\n\n    this.parseObjPropValue(prop, startPos, startLoc, isGenerator, isAsync, isPattern, isAccessor, refExpressionErrors);\n    return prop;\n  }\n\n  getGetterSetterExpectedParamCount(method) {\n    return method.kind === \"get\" ? 0 : 1;\n  }\n\n  getObjectOrClassMethodParams(method) {\n    return method.params;\n  }\n\n  checkGetterSetterParams(method) {\n    var _params;\n\n    const paramCount = this.getGetterSetterExpectedParamCount(method);\n    const params = this.getObjectOrClassMethodParams(method);\n    const start = method.start;\n\n    if (params.length !== paramCount) {\n      if (method.kind === \"get\") {\n        this.raise(start, ErrorMessages.BadGetterArity);\n      } else {\n        this.raise(start, ErrorMessages.BadSetterArity);\n      }\n    }\n\n    if (method.kind === \"set\" && ((_params = params[params.length - 1]) == null ? void 0 : _params.type) === \"RestElement\") {\n      this.raise(start, ErrorMessages.BadSetterRestParameter);\n    }\n  }\n\n  parseObjectMethod(prop, isGenerator, isAsync, isPattern, isAccessor) {\n    if (isAccessor) {\n      this.parseMethod(prop, isGenerator, false, false, false, \"ObjectMethod\");\n      this.checkGetterSetterParams(prop);\n      return prop;\n    }\n\n    if (isAsync || isGenerator || this.match(types.parenL)) {\n      if (isPattern) this.unexpected();\n      prop.kind = \"method\";\n      prop.method = true;\n      return this.parseMethod(prop, isGenerator, isAsync, false, false, \"ObjectMethod\");\n    }\n  }\n\n  parseObjectProperty(prop, startPos, startLoc, isPattern, refExpressionErrors) {\n    prop.shorthand = false;\n\n    if (this.eat(types.colon)) {\n      prop.value = isPattern ? this.parseMaybeDefault(this.state.start, this.state.startLoc) : this.parseMaybeAssignAllowIn(refExpressionErrors);\n      return this.finishNode(prop, \"ObjectProperty\");\n    }\n\n    if (!prop.computed && prop.key.type === \"Identifier\") {\n      this.checkReservedWord(prop.key.name, prop.key.start, true, false);\n\n      if (isPattern) {\n        prop.value = this.parseMaybeDefault(startPos, startLoc, prop.key.__clone());\n      } else if (this.match(types.eq) && refExpressionErrors) {\n        if (refExpressionErrors.shorthandAssign === -1) {\n          refExpressionErrors.shorthandAssign = this.state.start;\n        }\n\n        prop.value = this.parseMaybeDefault(startPos, startLoc, prop.key.__clone());\n      } else {\n        prop.value = prop.key.__clone();\n      }\n\n      prop.shorthand = true;\n      return this.finishNode(prop, \"ObjectProperty\");\n    }\n  }\n\n  parseObjPropValue(prop, startPos, startLoc, isGenerator, isAsync, isPattern, isAccessor, refExpressionErrors) {\n    const node = this.parseObjectMethod(prop, isGenerator, isAsync, isPattern, isAccessor) || this.parseObjectProperty(prop, startPos, startLoc, isPattern, refExpressionErrors);\n    if (!node) this.unexpected();\n    return node;\n  }\n\n  parsePropertyName(prop, isPrivateNameAllowed) {\n    if (this.eat(types.bracketL)) {\n      prop.computed = true;\n      prop.key = this.parseMaybeAssignAllowIn();\n      this.expect(types.bracketR);\n    } else {\n      const oldInPropertyName = this.state.inPropertyName;\n      this.state.inPropertyName = true;\n      prop.key = this.match(types.num) || this.match(types.string) || this.match(types.bigint) || this.match(types.decimal) ? this.parseExprAtom() : this.parseMaybePrivateName(isPrivateNameAllowed);\n\n      if (!this.isPrivateName(prop.key)) {\n        prop.computed = false;\n      }\n\n      this.state.inPropertyName = oldInPropertyName;\n    }\n\n    return prop.key;\n  }\n\n  initFunction(node, isAsync) {\n    node.id = null;\n    node.generator = false;\n    node.async = !!isAsync;\n  }\n\n  parseMethod(node, isGenerator, isAsync, isConstructor, allowDirectSuper, type, inClassScope = false) {\n    this.initFunction(node, isAsync);\n    node.generator = !!isGenerator;\n    const allowModifiers = isConstructor;\n    this.scope.enter(SCOPE_FUNCTION | SCOPE_SUPER | (inClassScope ? SCOPE_CLASS : 0) | (allowDirectSuper ? SCOPE_DIRECT_SUPER : 0));\n    this.prodParam.enter(functionFlags(isAsync, node.generator));\n    this.parseFunctionParams(node, allowModifiers);\n    this.parseFunctionBodyAndFinish(node, type, true);\n    this.prodParam.exit();\n    this.scope.exit();\n    return node;\n  }\n\n  parseArrayLike(close, canBePattern, isTuple, refExpressionErrors) {\n    if (isTuple) {\n      this.expectPlugin(\"recordAndTuple\");\n    }\n\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = false;\n    const node = this.startNode();\n    this.next();\n    node.elements = this.parseExprList(close, !isTuple, refExpressionErrors, node);\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n    return this.finishNode(node, isTuple ? \"TupleExpression\" : \"ArrayExpression\");\n  }\n\n  parseArrowExpression(node, params, isAsync, trailingCommaPos) {\n    this.scope.enter(SCOPE_FUNCTION | SCOPE_ARROW);\n    let flags = functionFlags(isAsync, false);\n\n    if (!this.match(types.bracketL) && this.prodParam.hasIn) {\n      flags |= PARAM_IN;\n    }\n\n    this.prodParam.enter(flags);\n    this.initFunction(node, isAsync);\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n\n    if (params) {\n      this.state.maybeInArrowParameters = true;\n      this.setArrowFunctionParameters(node, params, trailingCommaPos);\n    }\n\n    this.state.maybeInArrowParameters = false;\n    this.parseFunctionBody(node, true);\n    this.prodParam.exit();\n    this.scope.exit();\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n    return this.finishNode(node, \"ArrowFunctionExpression\");\n  }\n\n  setArrowFunctionParameters(node, params, trailingCommaPos) {\n    node.params = this.toAssignableList(params, trailingCommaPos, false);\n  }\n\n  parseFunctionBodyAndFinish(node, type, isMethod = false) {\n    this.parseFunctionBody(node, false, isMethod);\n    this.finishNode(node, type);\n  }\n\n  parseFunctionBody(node, allowExpression, isMethod = false) {\n    const isExpression = allowExpression && !this.match(types.braceL);\n    this.expressionScope.enter(newExpressionScope());\n\n    if (isExpression) {\n      node.body = this.parseMaybeAssign();\n      this.checkParams(node, false, allowExpression, false);\n    } else {\n      const oldStrict = this.state.strict;\n      const oldLabels = this.state.labels;\n      this.state.labels = [];\n      this.prodParam.enter(this.prodParam.currentFlags() | PARAM_RETURN);\n      node.body = this.parseBlock(true, false, hasStrictModeDirective => {\n        const nonSimple = !this.isSimpleParamList(node.params);\n\n        if (hasStrictModeDirective && nonSimple) {\n          const errorPos = (node.kind === \"method\" || node.kind === \"constructor\") && !!node.key ? node.key.end : node.start;\n          this.raise(errorPos, ErrorMessages.IllegalLanguageModeDirective);\n        }\n\n        const strictModeChanged = !oldStrict && this.state.strict;\n        this.checkParams(node, !this.state.strict && !allowExpression && !isMethod && !nonSimple, allowExpression, strictModeChanged);\n\n        if (this.state.strict && node.id) {\n          this.checkLVal(node.id, \"function name\", BIND_OUTSIDE, undefined, undefined, strictModeChanged);\n        }\n      });\n      this.prodParam.exit();\n      this.expressionScope.exit();\n      this.state.labels = oldLabels;\n    }\n  }\n\n  isSimpleParamList(params) {\n    for (let i = 0, len = params.length; i < len; i++) {\n      if (params[i].type !== \"Identifier\") return false;\n    }\n\n    return true;\n  }\n\n  checkParams(node, allowDuplicates, isArrowFunction, strictModeChanged = true) {\n    const checkClashes = new Set();\n\n    for (const param of node.params) {\n      this.checkLVal(param, \"function parameter list\", BIND_VAR, allowDuplicates ? null : checkClashes, undefined, strictModeChanged);\n    }\n  }\n\n  parseExprList(close, allowEmpty, refExpressionErrors, nodeForExtra) {\n    const elts = [];\n    let first = true;\n\n    while (!this.eat(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(types.comma);\n\n        if (this.match(close)) {\n          if (nodeForExtra) {\n            this.addExtra(nodeForExtra, \"trailingComma\", this.state.lastTokStart);\n          }\n\n          this.next();\n          break;\n        }\n      }\n\n      elts.push(this.parseExprListItem(allowEmpty, refExpressionErrors));\n    }\n\n    return elts;\n  }\n\n  parseExprListItem(allowEmpty, refExpressionErrors, refNeedsArrowPos, allowPlaceholder) {\n    let elt;\n\n    if (this.match(types.comma)) {\n      if (!allowEmpty) {\n        this.raise(this.state.pos, ErrorMessages.UnexpectedToken, \",\");\n      }\n\n      elt = null;\n    } else if (this.match(types.ellipsis)) {\n      const spreadNodeStartPos = this.state.start;\n      const spreadNodeStartLoc = this.state.startLoc;\n      elt = this.parseParenItem(this.parseSpread(refExpressionErrors, refNeedsArrowPos), spreadNodeStartPos, spreadNodeStartLoc);\n    } else if (this.match(types.question)) {\n      this.expectPlugin(\"partialApplication\");\n\n      if (!allowPlaceholder) {\n        this.raise(this.state.start, ErrorMessages.UnexpectedArgumentPlaceholder);\n      }\n\n      const node = this.startNode();\n      this.next();\n      elt = this.finishNode(node, \"ArgumentPlaceholder\");\n    } else {\n      elt = this.parseMaybeAssignAllowIn(refExpressionErrors, this.parseParenItem, refNeedsArrowPos);\n    }\n\n    return elt;\n  }\n\n  parseIdentifier(liberal) {\n    const node = this.startNode();\n    const name = this.parseIdentifierName(node.start, liberal);\n    return this.createIdentifier(node, name);\n  }\n\n  createIdentifier(node, name) {\n    node.name = name;\n    node.loc.identifierName = name;\n    return this.finishNode(node, \"Identifier\");\n  }\n\n  parseIdentifierName(pos, liberal) {\n    let name;\n    const {\n      start,\n      type\n    } = this.state;\n\n    if (type === types.name) {\n      name = this.state.value;\n    } else if (type.keyword) {\n      name = type.keyword;\n      const curContext = this.curContext();\n\n      if ((type === types._class || type === types._function) && (curContext === types$1.functionStatement || curContext === types$1.functionExpression)) {\n        this.state.context.pop();\n      }\n    } else {\n      throw this.unexpected();\n    }\n\n    if (liberal) {\n      this.state.type = types.name;\n    } else {\n      this.checkReservedWord(name, start, !!type.keyword, false);\n    }\n\n    this.next();\n    return name;\n  }\n\n  checkReservedWord(word, startLoc, checkKeywords, isBinding) {\n    if (this.prodParam.hasYield && word === \"yield\") {\n      this.raise(startLoc, ErrorMessages.YieldBindingIdentifier);\n      return;\n    }\n\n    if (word === \"await\") {\n      if (this.prodParam.hasAwait) {\n        this.raise(startLoc, ErrorMessages.AwaitBindingIdentifier);\n        return;\n      } else if (this.scope.inStaticBlock && !this.scope.inNonArrowFunction) {\n        this.raise(startLoc, ErrorMessages.AwaitBindingIdentifierInStaticBlock);\n        return;\n      } else {\n        this.expressionScope.recordAsyncArrowParametersError(startLoc, ErrorMessages.AwaitBindingIdentifier);\n      }\n    }\n\n    if (this.scope.inClass && !this.scope.inNonArrowFunction && word === \"arguments\") {\n      this.raise(startLoc, ErrorMessages.ArgumentsInClass);\n      return;\n    }\n\n    if (checkKeywords && isKeyword(word)) {\n      this.raise(startLoc, ErrorMessages.UnexpectedKeyword, word);\n      return;\n    }\n\n    const reservedTest = !this.state.strict ? isReservedWord : isBinding ? isStrictBindReservedWord : isStrictReservedWord;\n\n    if (reservedTest(word, this.inModule)) {\n      this.raise(startLoc, ErrorMessages.UnexpectedReservedWord, word);\n    }\n  }\n\n  isAwaitAllowed() {\n    if (this.prodParam.hasAwait) return true;\n\n    if (this.options.allowAwaitOutsideFunction && !this.scope.inFunction) {\n      return true;\n    }\n\n    return false;\n  }\n\n  parseAwait(startPos, startLoc) {\n    const node = this.startNodeAt(startPos, startLoc);\n    this.expressionScope.recordParameterInitializerError(node.start, ErrorMessages.AwaitExpressionFormalParameter);\n\n    if (this.eat(types.star)) {\n      this.raise(node.start, ErrorMessages.ObsoleteAwaitStar);\n    }\n\n    if (!this.scope.inFunction && !this.options.allowAwaitOutsideFunction) {\n      if (this.isAmbiguousAwait()) {\n        this.ambiguousScriptDifferentAst = true;\n      } else {\n        this.sawUnambiguousESM = true;\n      }\n    }\n\n    if (!this.state.soloAwait) {\n      node.argument = this.parseMaybeUnary(null, true);\n    }\n\n    return this.finishNode(node, \"AwaitExpression\");\n  }\n\n  isAmbiguousAwait() {\n    return this.hasPrecedingLineBreak() || this.match(types.plusMin) || this.match(types.parenL) || this.match(types.bracketL) || this.match(types.backQuote) || this.match(types.regexp) || this.match(types.slash) || this.hasPlugin(\"v8intrinsic\") && this.match(types.modulo);\n  }\n\n  parseYield() {\n    const node = this.startNode();\n    this.expressionScope.recordParameterInitializerError(node.start, ErrorMessages.YieldInParameter);\n    this.next();\n\n    if (this.match(types.semi) || !this.match(types.star) && !this.state.type.startsExpr || this.hasPrecedingLineBreak()) {\n      node.delegate = false;\n      node.argument = null;\n    } else {\n      node.delegate = this.eat(types.star);\n      node.argument = this.parseMaybeAssign();\n    }\n\n    return this.finishNode(node, \"YieldExpression\");\n  }\n\n  checkPipelineAtInfixOperator(left, leftStartPos) {\n    if (this.getPluginOption(\"pipelineOperator\", \"proposal\") === \"smart\") {\n      if (left.type === \"SequenceExpression\") {\n        this.raise(leftStartPos, ErrorMessages.PipelineHeadSequenceExpression);\n      }\n    }\n  }\n\n  parseSmartPipelineBody(childExpression, startPos, startLoc) {\n    this.checkSmartPipelineBodyEarlyErrors(childExpression, startPos);\n    return this.parseSmartPipelineBodyInStyle(childExpression, startPos, startLoc);\n  }\n\n  checkSmartPipelineBodyEarlyErrors(childExpression, startPos) {\n    if (this.match(types.arrow)) {\n      throw this.raise(this.state.start, ErrorMessages.PipelineBodyNoArrow);\n    } else if (childExpression.type === \"SequenceExpression\") {\n      this.raise(startPos, ErrorMessages.PipelineBodySequenceExpression);\n    }\n  }\n\n  parseSmartPipelineBodyInStyle(childExpression, startPos, startLoc) {\n    const bodyNode = this.startNodeAt(startPos, startLoc);\n    const isSimpleReference = this.isSimpleReference(childExpression);\n\n    if (isSimpleReference) {\n      bodyNode.callee = childExpression;\n    } else {\n      if (!this.topicReferenceWasUsedInCurrentTopicContext()) {\n        this.raise(startPos, ErrorMessages.PipelineTopicUnused);\n      }\n\n      bodyNode.expression = childExpression;\n    }\n\n    return this.finishNode(bodyNode, isSimpleReference ? \"PipelineBareFunction\" : \"PipelineTopicExpression\");\n  }\n\n  isSimpleReference(expression) {\n    switch (expression.type) {\n      case \"MemberExpression\":\n        return !expression.computed && this.isSimpleReference(expression.object);\n\n      case \"Identifier\":\n        return true;\n\n      default:\n        return false;\n    }\n  }\n\n  withTopicPermittingContext(callback) {\n    const outerContextTopicState = this.state.topicContext;\n    this.state.topicContext = {\n      maxNumOfResolvableTopics: 1,\n      maxTopicIndex: null\n    };\n\n    try {\n      return callback();\n    } finally {\n      this.state.topicContext = outerContextTopicState;\n    }\n  }\n\n  withTopicForbiddingContext(callback) {\n    const outerContextTopicState = this.state.topicContext;\n    this.state.topicContext = {\n      maxNumOfResolvableTopics: 0,\n      maxTopicIndex: null\n    };\n\n    try {\n      return callback();\n    } finally {\n      this.state.topicContext = outerContextTopicState;\n    }\n  }\n\n  withSoloAwaitPermittingContext(callback) {\n    const outerContextSoloAwaitState = this.state.soloAwait;\n    this.state.soloAwait = true;\n\n    try {\n      return callback();\n    } finally {\n      this.state.soloAwait = outerContextSoloAwaitState;\n    }\n  }\n\n  allowInAnd(callback) {\n    const flags = this.prodParam.currentFlags();\n    const prodParamToSet = PARAM_IN & ~flags;\n\n    if (prodParamToSet) {\n      this.prodParam.enter(flags | PARAM_IN);\n\n      try {\n        return callback();\n      } finally {\n        this.prodParam.exit();\n      }\n    }\n\n    return callback();\n  }\n\n  disallowInAnd(callback) {\n    const flags = this.prodParam.currentFlags();\n    const prodParamToClear = PARAM_IN & flags;\n\n    if (prodParamToClear) {\n      this.prodParam.enter(flags & ~PARAM_IN);\n\n      try {\n        return callback();\n      } finally {\n        this.prodParam.exit();\n      }\n    }\n\n    return callback();\n  }\n\n  registerTopicReference() {\n    this.state.topicContext.maxTopicIndex = 0;\n  }\n\n  primaryTopicReferenceIsAllowedInCurrentTopicContext() {\n    return this.state.topicContext.maxNumOfResolvableTopics >= 1;\n  }\n\n  topicReferenceWasUsedInCurrentTopicContext() {\n    return this.state.topicContext.maxTopicIndex != null && this.state.topicContext.maxTopicIndex >= 0;\n  }\n\n  parseFSharpPipelineBody(prec) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    this.state.potentialArrowAt = this.state.start;\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = true;\n    const ret = this.parseExprOp(this.parseMaybeUnary(), startPos, startLoc, prec);\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n    return ret;\n  }\n\n  parseModuleExpression() {\n    this.expectPlugin(\"moduleBlocks\");\n    const node = this.startNode();\n    this.next();\n    this.eat(types.braceL);\n    const revertScopes = this.initializeScopes(true);\n    this.enterInitialScopes();\n    const program = this.startNode();\n\n    try {\n      node.body = this.parseProgram(program, types.braceR, \"module\");\n    } finally {\n      revertScopes();\n    }\n\n    this.eat(types.braceR);\n    return this.finishNode(node, \"ModuleExpression\");\n  }\n\n}\n\nconst loopLabel = {\n  kind: \"loop\"\n},\n      switchLabel = {\n  kind: \"switch\"\n};\nconst FUNC_NO_FLAGS = 0b000,\n      FUNC_STATEMENT = 0b001,\n      FUNC_HANGING_STATEMENT = 0b010,\n      FUNC_NULLABLE_ID = 0b100;\nconst loneSurrogate = /[\\uD800-\\uDFFF]/u;\nclass StatementParser extends ExpressionParser {\n  parseTopLevel(file, program) {\n    file.program = this.parseProgram(program);\n    file.comments = this.state.comments;\n    if (this.options.tokens) file.tokens = this.tokens;\n    return this.finishNode(file, \"File\");\n  }\n\n  parseProgram(program, end = types.eof, sourceType = this.options.sourceType) {\n    program.sourceType = sourceType;\n    program.interpreter = this.parseInterpreterDirective();\n    this.parseBlockBody(program, true, true, end);\n\n    if (this.inModule && !this.options.allowUndeclaredExports && this.scope.undefinedExports.size > 0) {\n      for (const [name] of Array.from(this.scope.undefinedExports)) {\n        const pos = this.scope.undefinedExports.get(name);\n        this.raise(pos, ErrorMessages.ModuleExportUndefined, name);\n      }\n    }\n\n    return this.finishNode(program, \"Program\");\n  }\n\n  stmtToDirective(stmt) {\n    const expr = stmt.expression;\n    const directiveLiteral = this.startNodeAt(expr.start, expr.loc.start);\n    const directive = this.startNodeAt(stmt.start, stmt.loc.start);\n    const raw = this.input.slice(expr.start, expr.end);\n    const val = directiveLiteral.value = raw.slice(1, -1);\n    this.addExtra(directiveLiteral, \"raw\", raw);\n    this.addExtra(directiveLiteral, \"rawValue\", val);\n    directive.value = this.finishNodeAt(directiveLiteral, \"DirectiveLiteral\", expr.end, expr.loc.end);\n    return this.finishNodeAt(directive, \"Directive\", stmt.end, stmt.loc.end);\n  }\n\n  parseInterpreterDirective() {\n    if (!this.match(types.interpreterDirective)) {\n      return null;\n    }\n\n    const node = this.startNode();\n    node.value = this.state.value;\n    this.next();\n    return this.finishNode(node, \"InterpreterDirective\");\n  }\n\n  isLet(context) {\n    if (!this.isContextual(\"let\")) {\n      return false;\n    }\n\n    const next = this.nextTokenStart();\n    const nextCh = this.input.charCodeAt(next);\n    if (nextCh === 91) return true;\n    if (context) return false;\n    if (nextCh === 123) return true;\n\n    if (isIdentifierStart(nextCh)) {\n      let pos = next + 1;\n\n      while (isIdentifierChar(this.input.charCodeAt(pos))) {\n        ++pos;\n      }\n\n      const ident = this.input.slice(next, pos);\n      if (!keywordRelationalOperator.test(ident)) return true;\n    }\n\n    return false;\n  }\n\n  parseStatement(context, topLevel) {\n    if (this.match(types.at)) {\n      this.parseDecorators(true);\n    }\n\n    return this.parseStatementContent(context, topLevel);\n  }\n\n  parseStatementContent(context, topLevel) {\n    let starttype = this.state.type;\n    const node = this.startNode();\n    let kind;\n\n    if (this.isLet(context)) {\n      starttype = types._var;\n      kind = \"let\";\n    }\n\n    switch (starttype) {\n      case types._break:\n      case types._continue:\n        return this.parseBreakContinueStatement(node, starttype.keyword);\n\n      case types._debugger:\n        return this.parseDebuggerStatement(node);\n\n      case types._do:\n        return this.parseDoStatement(node);\n\n      case types._for:\n        return this.parseForStatement(node);\n\n      case types._function:\n        if (this.lookaheadCharCode() === 46) break;\n\n        if (context) {\n          if (this.state.strict) {\n            this.raise(this.state.start, ErrorMessages.StrictFunction);\n          } else if (context !== \"if\" && context !== \"label\") {\n            this.raise(this.state.start, ErrorMessages.SloppyFunction);\n          }\n        }\n\n        return this.parseFunctionStatement(node, false, !context);\n\n      case types._class:\n        if (context) this.unexpected();\n        return this.parseClass(node, true);\n\n      case types._if:\n        return this.parseIfStatement(node);\n\n      case types._return:\n        return this.parseReturnStatement(node);\n\n      case types._switch:\n        return this.parseSwitchStatement(node);\n\n      case types._throw:\n        return this.parseThrowStatement(node);\n\n      case types._try:\n        return this.parseTryStatement(node);\n\n      case types._const:\n      case types._var:\n        kind = kind || this.state.value;\n\n        if (context && kind !== \"var\") {\n          this.raise(this.state.start, ErrorMessages.UnexpectedLexicalDeclaration);\n        }\n\n        return this.parseVarStatement(node, kind);\n\n      case types._while:\n        return this.parseWhileStatement(node);\n\n      case types._with:\n        return this.parseWithStatement(node);\n\n      case types.braceL:\n        return this.parseBlock();\n\n      case types.semi:\n        return this.parseEmptyStatement(node);\n\n      case types._import:\n        {\n          const nextTokenCharCode = this.lookaheadCharCode();\n\n          if (nextTokenCharCode === 40 || nextTokenCharCode === 46) {\n              break;\n            }\n        }\n\n      case types._export:\n        {\n          if (!this.options.allowImportExportEverywhere && !topLevel) {\n            this.raise(this.state.start, ErrorMessages.UnexpectedImportExport);\n          }\n\n          this.next();\n          let result;\n\n          if (starttype === types._import) {\n            result = this.parseImport(node);\n\n            if (result.type === \"ImportDeclaration\" && (!result.importKind || result.importKind === \"value\")) {\n              this.sawUnambiguousESM = true;\n            }\n          } else {\n            result = this.parseExport(node);\n\n            if (result.type === \"ExportNamedDeclaration\" && (!result.exportKind || result.exportKind === \"value\") || result.type === \"ExportAllDeclaration\" && (!result.exportKind || result.exportKind === \"value\") || result.type === \"ExportDefaultDeclaration\") {\n              this.sawUnambiguousESM = true;\n            }\n          }\n\n          this.assertModuleNodeAllowed(node);\n          return result;\n        }\n\n      default:\n        {\n          if (this.isAsyncFunction()) {\n            if (context) {\n              this.raise(this.state.start, ErrorMessages.AsyncFunctionInSingleStatementContext);\n            }\n\n            this.next();\n            return this.parseFunctionStatement(node, true, !context);\n          }\n        }\n    }\n\n    const maybeName = this.state.value;\n    const expr = this.parseExpression();\n\n    if (starttype === types.name && expr.type === \"Identifier\" && this.eat(types.colon)) {\n      return this.parseLabeledStatement(node, maybeName, expr, context);\n    } else {\n      return this.parseExpressionStatement(node, expr);\n    }\n  }\n\n  assertModuleNodeAllowed(node) {\n    if (!this.options.allowImportExportEverywhere && !this.inModule) {\n      this.raiseWithData(node.start, {\n        code: \"BABEL_PARSER_SOURCETYPE_MODULE_REQUIRED\"\n      }, ErrorMessages.ImportOutsideModule);\n    }\n  }\n\n  takeDecorators(node) {\n    const decorators = this.state.decoratorStack[this.state.decoratorStack.length - 1];\n\n    if (decorators.length) {\n      node.decorators = decorators;\n      this.resetStartLocationFromNode(node, decorators[0]);\n      this.state.decoratorStack[this.state.decoratorStack.length - 1] = [];\n    }\n  }\n\n  canHaveLeadingDecorator() {\n    return this.match(types._class);\n  }\n\n  parseDecorators(allowExport) {\n    const currentContextDecorators = this.state.decoratorStack[this.state.decoratorStack.length - 1];\n\n    while (this.match(types.at)) {\n      const decorator = this.parseDecorator();\n      currentContextDecorators.push(decorator);\n    }\n\n    if (this.match(types._export)) {\n      if (!allowExport) {\n        this.unexpected();\n      }\n\n      if (this.hasPlugin(\"decorators\") && !this.getPluginOption(\"decorators\", \"decoratorsBeforeExport\")) {\n        this.raise(this.state.start, ErrorMessages.DecoratorExportClass);\n      }\n    } else if (!this.canHaveLeadingDecorator()) {\n      throw this.raise(this.state.start, ErrorMessages.UnexpectedLeadingDecorator);\n    }\n  }\n\n  parseDecorator() {\n    this.expectOnePlugin([\"decorators-legacy\", \"decorators\"]);\n    const node = this.startNode();\n    this.next();\n\n    if (this.hasPlugin(\"decorators\")) {\n      this.state.decoratorStack.push([]);\n      const startPos = this.state.start;\n      const startLoc = this.state.startLoc;\n      let expr;\n\n      if (this.eat(types.parenL)) {\n        expr = this.parseExpression();\n        this.expect(types.parenR);\n      } else {\n        expr = this.parseIdentifier(false);\n\n        while (this.eat(types.dot)) {\n          const node = this.startNodeAt(startPos, startLoc);\n          node.object = expr;\n          node.property = this.parseIdentifier(true);\n          node.computed = false;\n          expr = this.finishNode(node, \"MemberExpression\");\n        }\n      }\n\n      node.expression = this.parseMaybeDecoratorArguments(expr);\n      this.state.decoratorStack.pop();\n    } else {\n      node.expression = this.parseExprSubscripts();\n    }\n\n    return this.finishNode(node, \"Decorator\");\n  }\n\n  parseMaybeDecoratorArguments(expr) {\n    if (this.eat(types.parenL)) {\n      const node = this.startNodeAtNode(expr);\n      node.callee = expr;\n      node.arguments = this.parseCallExpressionArguments(types.parenR, false);\n      this.toReferencedList(node.arguments);\n      return this.finishNode(node, \"CallExpression\");\n    }\n\n    return expr;\n  }\n\n  parseBreakContinueStatement(node, keyword) {\n    const isBreak = keyword === \"break\";\n    this.next();\n\n    if (this.isLineTerminator()) {\n      node.label = null;\n    } else {\n      node.label = this.parseIdentifier();\n      this.semicolon();\n    }\n\n    this.verifyBreakContinue(node, keyword);\n    return this.finishNode(node, isBreak ? \"BreakStatement\" : \"ContinueStatement\");\n  }\n\n  verifyBreakContinue(node, keyword) {\n    const isBreak = keyword === \"break\";\n    let i;\n\n    for (i = 0; i < this.state.labels.length; ++i) {\n      const lab = this.state.labels[i];\n\n      if (node.label == null || lab.name === node.label.name) {\n        if (lab.kind != null && (isBreak || lab.kind === \"loop\")) break;\n        if (node.label && isBreak) break;\n      }\n    }\n\n    if (i === this.state.labels.length) {\n      this.raise(node.start, ErrorMessages.IllegalBreakContinue, keyword);\n    }\n  }\n\n  parseDebuggerStatement(node) {\n    this.next();\n    this.semicolon();\n    return this.finishNode(node, \"DebuggerStatement\");\n  }\n\n  parseHeaderExpression() {\n    this.expect(types.parenL);\n    const val = this.parseExpression();\n    this.expect(types.parenR);\n    return val;\n  }\n\n  parseDoStatement(node) {\n    this.next();\n    this.state.labels.push(loopLabel);\n    node.body = this.withTopicForbiddingContext(() => this.parseStatement(\"do\"));\n    this.state.labels.pop();\n    this.expect(types._while);\n    node.test = this.parseHeaderExpression();\n    this.eat(types.semi);\n    return this.finishNode(node, \"DoWhileStatement\");\n  }\n\n  parseForStatement(node) {\n    this.next();\n    this.state.labels.push(loopLabel);\n    let awaitAt = -1;\n\n    if (this.isAwaitAllowed() && this.eatContextual(\"await\")) {\n      awaitAt = this.state.lastTokStart;\n    }\n\n    this.scope.enter(SCOPE_OTHER);\n    this.expect(types.parenL);\n\n    if (this.match(types.semi)) {\n      if (awaitAt > -1) {\n        this.unexpected(awaitAt);\n      }\n\n      return this.parseFor(node, null);\n    }\n\n    const isLet = this.isLet();\n\n    if (this.match(types._var) || this.match(types._const) || isLet) {\n      const init = this.startNode();\n      const kind = isLet ? \"let\" : this.state.value;\n      this.next();\n      this.parseVar(init, true, kind);\n      this.finishNode(init, \"VariableDeclaration\");\n\n      if ((this.match(types._in) || this.isContextual(\"of\")) && init.declarations.length === 1) {\n        return this.parseForIn(node, init, awaitAt);\n      }\n\n      if (awaitAt > -1) {\n        this.unexpected(awaitAt);\n      }\n\n      return this.parseFor(node, init);\n    }\n\n    const refExpressionErrors = new ExpressionErrors();\n    const init = this.parseExpression(true, refExpressionErrors);\n\n    if (this.match(types._in) || this.isContextual(\"of\")) {\n      this.toAssignable(init, true);\n      const description = this.isContextual(\"of\") ? \"for-of statement\" : \"for-in statement\";\n      this.checkLVal(init, description);\n      return this.parseForIn(node, init, awaitAt);\n    } else {\n      this.checkExpressionErrors(refExpressionErrors, true);\n    }\n\n    if (awaitAt > -1) {\n      this.unexpected(awaitAt);\n    }\n\n    return this.parseFor(node, init);\n  }\n\n  parseFunctionStatement(node, isAsync, declarationPosition) {\n    this.next();\n    return this.parseFunction(node, FUNC_STATEMENT | (declarationPosition ? 0 : FUNC_HANGING_STATEMENT), isAsync);\n  }\n\n  parseIfStatement(node) {\n    this.next();\n    node.test = this.parseHeaderExpression();\n    node.consequent = this.parseStatement(\"if\");\n    node.alternate = this.eat(types._else) ? this.parseStatement(\"if\") : null;\n    return this.finishNode(node, \"IfStatement\");\n  }\n\n  parseReturnStatement(node) {\n    if (!this.prodParam.hasReturn && !this.options.allowReturnOutsideFunction) {\n      this.raise(this.state.start, ErrorMessages.IllegalReturn);\n    }\n\n    this.next();\n\n    if (this.isLineTerminator()) {\n      node.argument = null;\n    } else {\n      node.argument = this.parseExpression();\n      this.semicolon();\n    }\n\n    return this.finishNode(node, \"ReturnStatement\");\n  }\n\n  parseSwitchStatement(node) {\n    this.next();\n    node.discriminant = this.parseHeaderExpression();\n    const cases = node.cases = [];\n    this.expect(types.braceL);\n    this.state.labels.push(switchLabel);\n    this.scope.enter(SCOPE_OTHER);\n    let cur;\n\n    for (let sawDefault; !this.match(types.braceR);) {\n      if (this.match(types._case) || this.match(types._default)) {\n        const isCase = this.match(types._case);\n        if (cur) this.finishNode(cur, \"SwitchCase\");\n        cases.push(cur = this.startNode());\n        cur.consequent = [];\n        this.next();\n\n        if (isCase) {\n          cur.test = this.parseExpression();\n        } else {\n          if (sawDefault) {\n            this.raise(this.state.lastTokStart, ErrorMessages.MultipleDefaultsInSwitch);\n          }\n\n          sawDefault = true;\n          cur.test = null;\n        }\n\n        this.expect(types.colon);\n      } else {\n        if (cur) {\n          cur.consequent.push(this.parseStatement(null));\n        } else {\n          this.unexpected();\n        }\n      }\n    }\n\n    this.scope.exit();\n    if (cur) this.finishNode(cur, \"SwitchCase\");\n    this.next();\n    this.state.labels.pop();\n    return this.finishNode(node, \"SwitchStatement\");\n  }\n\n  parseThrowStatement(node) {\n    this.next();\n\n    if (this.hasPrecedingLineBreak()) {\n      this.raise(this.state.lastTokEnd, ErrorMessages.NewlineAfterThrow);\n    }\n\n    node.argument = this.parseExpression();\n    this.semicolon();\n    return this.finishNode(node, \"ThrowStatement\");\n  }\n\n  parseCatchClauseParam() {\n    const param = this.parseBindingAtom();\n    const simple = param.type === \"Identifier\";\n    this.scope.enter(simple ? SCOPE_SIMPLE_CATCH : 0);\n    this.checkLVal(param, \"catch clause\", BIND_LEXICAL);\n    return param;\n  }\n\n  parseTryStatement(node) {\n    this.next();\n    node.block = this.parseBlock();\n    node.handler = null;\n\n    if (this.match(types._catch)) {\n      const clause = this.startNode();\n      this.next();\n\n      if (this.match(types.parenL)) {\n        this.expect(types.parenL);\n        clause.param = this.parseCatchClauseParam();\n        this.expect(types.parenR);\n      } else {\n        clause.param = null;\n        this.scope.enter(SCOPE_OTHER);\n      }\n\n      clause.body = this.withTopicForbiddingContext(() => this.parseBlock(false, false));\n      this.scope.exit();\n      node.handler = this.finishNode(clause, \"CatchClause\");\n    }\n\n    node.finalizer = this.eat(types._finally) ? this.parseBlock() : null;\n\n    if (!node.handler && !node.finalizer) {\n      this.raise(node.start, ErrorMessages.NoCatchOrFinally);\n    }\n\n    return this.finishNode(node, \"TryStatement\");\n  }\n\n  parseVarStatement(node, kind) {\n    this.next();\n    this.parseVar(node, false, kind);\n    this.semicolon();\n    return this.finishNode(node, \"VariableDeclaration\");\n  }\n\n  parseWhileStatement(node) {\n    this.next();\n    node.test = this.parseHeaderExpression();\n    this.state.labels.push(loopLabel);\n    node.body = this.withTopicForbiddingContext(() => this.parseStatement(\"while\"));\n    this.state.labels.pop();\n    return this.finishNode(node, \"WhileStatement\");\n  }\n\n  parseWithStatement(node) {\n    if (this.state.strict) {\n      this.raise(this.state.start, ErrorMessages.StrictWith);\n    }\n\n    this.next();\n    node.object = this.parseHeaderExpression();\n    node.body = this.withTopicForbiddingContext(() => this.parseStatement(\"with\"));\n    return this.finishNode(node, \"WithStatement\");\n  }\n\n  parseEmptyStatement(node) {\n    this.next();\n    return this.finishNode(node, \"EmptyStatement\");\n  }\n\n  parseLabeledStatement(node, maybeName, expr, context) {\n    for (const label of this.state.labels) {\n      if (label.name === maybeName) {\n        this.raise(expr.start, ErrorMessages.LabelRedeclaration, maybeName);\n      }\n    }\n\n    const kind = this.state.type.isLoop ? \"loop\" : this.match(types._switch) ? \"switch\" : null;\n\n    for (let i = this.state.labels.length - 1; i >= 0; i--) {\n      const label = this.state.labels[i];\n\n      if (label.statementStart === node.start) {\n        label.statementStart = this.state.start;\n        label.kind = kind;\n      } else {\n        break;\n      }\n    }\n\n    this.state.labels.push({\n      name: maybeName,\n      kind: kind,\n      statementStart: this.state.start\n    });\n    node.body = this.parseStatement(context ? context.indexOf(\"label\") === -1 ? context + \"label\" : context : \"label\");\n    this.state.labels.pop();\n    node.label = expr;\n    return this.finishNode(node, \"LabeledStatement\");\n  }\n\n  parseExpressionStatement(node, expr) {\n    node.expression = expr;\n    this.semicolon();\n    return this.finishNode(node, \"ExpressionStatement\");\n  }\n\n  parseBlock(allowDirectives = false, createNewLexicalScope = true, afterBlockParse) {\n    const node = this.startNode();\n\n    if (allowDirectives) {\n      this.state.strictErrors.clear();\n    }\n\n    this.expect(types.braceL);\n\n    if (createNewLexicalScope) {\n      this.scope.enter(SCOPE_OTHER);\n    }\n\n    this.parseBlockBody(node, allowDirectives, false, types.braceR, afterBlockParse);\n\n    if (createNewLexicalScope) {\n      this.scope.exit();\n    }\n\n    return this.finishNode(node, \"BlockStatement\");\n  }\n\n  isValidDirective(stmt) {\n    return stmt.type === \"ExpressionStatement\" && stmt.expression.type === \"StringLiteral\" && !stmt.expression.extra.parenthesized;\n  }\n\n  parseBlockBody(node, allowDirectives, topLevel, end, afterBlockParse) {\n    const body = node.body = [];\n    const directives = node.directives = [];\n    this.parseBlockOrModuleBlockBody(body, allowDirectives ? directives : undefined, topLevel, end, afterBlockParse);\n  }\n\n  parseBlockOrModuleBlockBody(body, directives, topLevel, end, afterBlockParse) {\n    const oldStrict = this.state.strict;\n    let hasStrictModeDirective = false;\n    let parsedNonDirective = false;\n\n    while (!this.match(end)) {\n      const stmt = this.parseStatement(null, topLevel);\n\n      if (directives && !parsedNonDirective) {\n        if (this.isValidDirective(stmt)) {\n          const directive = this.stmtToDirective(stmt);\n          directives.push(directive);\n\n          if (!hasStrictModeDirective && directive.value.value === \"use strict\") {\n            hasStrictModeDirective = true;\n            this.setStrict(true);\n          }\n\n          continue;\n        }\n\n        parsedNonDirective = true;\n        this.state.strictErrors.clear();\n      }\n\n      body.push(stmt);\n    }\n\n    if (afterBlockParse) {\n      afterBlockParse.call(this, hasStrictModeDirective);\n    }\n\n    if (!oldStrict) {\n      this.setStrict(false);\n    }\n\n    this.next();\n  }\n\n  parseFor(node, init) {\n    node.init = init;\n    this.semicolon(false);\n    node.test = this.match(types.semi) ? null : this.parseExpression();\n    this.semicolon(false);\n    node.update = this.match(types.parenR) ? null : this.parseExpression();\n    this.expect(types.parenR);\n    node.body = this.withTopicForbiddingContext(() => this.parseStatement(\"for\"));\n    this.scope.exit();\n    this.state.labels.pop();\n    return this.finishNode(node, \"ForStatement\");\n  }\n\n  parseForIn(node, init, awaitAt) {\n    const isForIn = this.match(types._in);\n    this.next();\n\n    if (isForIn) {\n      if (awaitAt > -1) this.unexpected(awaitAt);\n    } else {\n      node.await = awaitAt > -1;\n    }\n\n    if (init.type === \"VariableDeclaration\" && init.declarations[0].init != null && (!isForIn || this.state.strict || init.kind !== \"var\" || init.declarations[0].id.type !== \"Identifier\")) {\n      this.raise(init.start, ErrorMessages.ForInOfLoopInitializer, isForIn ? \"for-in\" : \"for-of\");\n    } else if (init.type === \"AssignmentPattern\") {\n      this.raise(init.start, ErrorMessages.InvalidLhs, \"for-loop\");\n    }\n\n    node.left = init;\n    node.right = isForIn ? this.parseExpression() : this.parseMaybeAssignAllowIn();\n    this.expect(types.parenR);\n    node.body = this.withTopicForbiddingContext(() => this.parseStatement(\"for\"));\n    this.scope.exit();\n    this.state.labels.pop();\n    return this.finishNode(node, isForIn ? \"ForInStatement\" : \"ForOfStatement\");\n  }\n\n  parseVar(node, isFor, kind) {\n    const declarations = node.declarations = [];\n    const isTypescript = this.hasPlugin(\"typescript\");\n    node.kind = kind;\n\n    for (;;) {\n      const decl = this.startNode();\n      this.parseVarId(decl, kind);\n\n      if (this.eat(types.eq)) {\n        decl.init = isFor ? this.parseMaybeAssignDisallowIn() : this.parseMaybeAssignAllowIn();\n      } else {\n        if (kind === \"const\" && !(this.match(types._in) || this.isContextual(\"of\"))) {\n          if (!isTypescript) {\n            this.raise(this.state.lastTokEnd, ErrorMessages.DeclarationMissingInitializer, \"Const declarations\");\n          }\n        } else if (decl.id.type !== \"Identifier\" && !(isFor && (this.match(types._in) || this.isContextual(\"of\")))) {\n          this.raise(this.state.lastTokEnd, ErrorMessages.DeclarationMissingInitializer, \"Complex binding patterns\");\n        }\n\n        decl.init = null;\n      }\n\n      declarations.push(this.finishNode(decl, \"VariableDeclarator\"));\n      if (!this.eat(types.comma)) break;\n    }\n\n    return node;\n  }\n\n  parseVarId(decl, kind) {\n    decl.id = this.parseBindingAtom();\n    this.checkLVal(decl.id, \"variable declaration\", kind === \"var\" ? BIND_VAR : BIND_LEXICAL, undefined, kind !== \"var\");\n  }\n\n  parseFunction(node, statement = FUNC_NO_FLAGS, isAsync = false) {\n    const isStatement = statement & FUNC_STATEMENT;\n    const isHangingStatement = statement & FUNC_HANGING_STATEMENT;\n    const requireId = !!isStatement && !(statement & FUNC_NULLABLE_ID);\n    this.initFunction(node, isAsync);\n\n    if (this.match(types.star) && isHangingStatement) {\n      this.raise(this.state.start, ErrorMessages.GeneratorInSingleStatementContext);\n    }\n\n    node.generator = this.eat(types.star);\n\n    if (isStatement) {\n      node.id = this.parseFunctionId(requireId);\n    }\n\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n    this.state.maybeInArrowParameters = false;\n    this.scope.enter(SCOPE_FUNCTION);\n    this.prodParam.enter(functionFlags(isAsync, node.generator));\n\n    if (!isStatement) {\n      node.id = this.parseFunctionId();\n    }\n\n    this.parseFunctionParams(node, false);\n    this.withTopicForbiddingContext(() => {\n      this.parseFunctionBodyAndFinish(node, isStatement ? \"FunctionDeclaration\" : \"FunctionExpression\");\n    });\n    this.prodParam.exit();\n    this.scope.exit();\n\n    if (isStatement && !isHangingStatement) {\n      this.registerFunctionStatementId(node);\n    }\n\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n    return node;\n  }\n\n  parseFunctionId(requireId) {\n    return requireId || this.match(types.name) ? this.parseIdentifier() : null;\n  }\n\n  parseFunctionParams(node, allowModifiers) {\n    this.expect(types.parenL);\n    this.expressionScope.enter(newParameterDeclarationScope());\n    node.params = this.parseBindingList(types.parenR, 41, false, allowModifiers);\n    this.expressionScope.exit();\n  }\n\n  registerFunctionStatementId(node) {\n    if (!node.id) return;\n    this.scope.declareName(node.id.name, this.state.strict || node.generator || node.async ? this.scope.treatFunctionsAsVar ? BIND_VAR : BIND_LEXICAL : BIND_FUNCTION, node.id.start);\n  }\n\n  parseClass(node, isStatement, optionalId) {\n    this.next();\n    this.takeDecorators(node);\n    const oldStrict = this.state.strict;\n    this.state.strict = true;\n    this.parseClassId(node, isStatement, optionalId);\n    this.parseClassSuper(node);\n    node.body = this.parseClassBody(!!node.superClass, oldStrict);\n    return this.finishNode(node, isStatement ? \"ClassDeclaration\" : \"ClassExpression\");\n  }\n\n  isClassProperty() {\n    return this.match(types.eq) || this.match(types.semi) || this.match(types.braceR);\n  }\n\n  isClassMethod() {\n    return this.match(types.parenL);\n  }\n\n  isNonstaticConstructor(method) {\n    return !method.computed && !method.static && (method.key.name === \"constructor\" || method.key.value === \"constructor\");\n  }\n\n  parseClassBody(constructorAllowsSuper, oldStrict) {\n    this.classScope.enter();\n    const state = {\n      constructorAllowsSuper,\n      hadConstructor: false\n    };\n    let decorators = [];\n    const classBody = this.startNode();\n    classBody.body = [];\n    this.expect(types.braceL);\n    this.withTopicForbiddingContext(() => {\n      while (!this.match(types.braceR)) {\n        if (this.eat(types.semi)) {\n          if (decorators.length > 0) {\n            throw this.raise(this.state.lastTokEnd, ErrorMessages.DecoratorSemicolon);\n          }\n\n          continue;\n        }\n\n        if (this.match(types.at)) {\n          decorators.push(this.parseDecorator());\n          continue;\n        }\n\n        const member = this.startNode();\n\n        if (decorators.length) {\n          member.decorators = decorators;\n          this.resetStartLocationFromNode(member, decorators[0]);\n          decorators = [];\n        }\n\n        this.parseClassMember(classBody, member, state);\n\n        if (member.kind === \"constructor\" && member.decorators && member.decorators.length > 0) {\n          this.raise(member.start, ErrorMessages.DecoratorConstructor);\n        }\n      }\n    });\n    this.state.strict = oldStrict;\n    this.next();\n\n    if (decorators.length) {\n      throw this.raise(this.state.start, ErrorMessages.TrailingDecorator);\n    }\n\n    this.classScope.exit();\n    return this.finishNode(classBody, \"ClassBody\");\n  }\n\n  parseClassMemberFromModifier(classBody, member) {\n    const key = this.parseIdentifier(true);\n\n    if (this.isClassMethod()) {\n      const method = member;\n      method.kind = \"method\";\n      method.computed = false;\n      method.key = key;\n      method.static = false;\n      this.pushClassMethod(classBody, method, false, false, false, false);\n      return true;\n    } else if (this.isClassProperty()) {\n      const prop = member;\n      prop.computed = false;\n      prop.key = key;\n      prop.static = false;\n      classBody.body.push(this.parseClassProperty(prop));\n      return true;\n    }\n\n    return false;\n  }\n\n  parseClassMember(classBody, member, state) {\n    const isStatic = this.isContextual(\"static\");\n\n    if (isStatic) {\n      if (this.parseClassMemberFromModifier(classBody, member)) {\n        return;\n      }\n\n      if (this.eat(types.braceL)) {\n        this.parseClassStaticBlock(classBody, member);\n        return;\n      }\n    }\n\n    this.parseClassMemberWithIsStatic(classBody, member, state, isStatic);\n  }\n\n  parseClassMemberWithIsStatic(classBody, member, state, isStatic) {\n    const publicMethod = member;\n    const privateMethod = member;\n    const publicProp = member;\n    const privateProp = member;\n    const method = publicMethod;\n    const publicMember = publicMethod;\n    member.static = isStatic;\n\n    if (this.eat(types.star)) {\n      method.kind = \"method\";\n      this.parseClassElementName(method);\n\n      if (this.isPrivateName(method.key)) {\n        this.pushClassPrivateMethod(classBody, privateMethod, true, false);\n        return;\n      }\n\n      if (this.isNonstaticConstructor(publicMethod)) {\n        this.raise(publicMethod.key.start, ErrorMessages.ConstructorIsGenerator);\n      }\n\n      this.pushClassMethod(classBody, publicMethod, true, false, false, false);\n      return;\n    }\n\n    const containsEsc = this.state.containsEsc;\n    const key = this.parseClassElementName(member);\n    const isPrivate = this.isPrivateName(key);\n    const isSimple = key.type === \"Identifier\";\n    const maybeQuestionTokenStart = this.state.start;\n    this.parsePostMemberNameModifiers(publicMember);\n\n    if (this.isClassMethod()) {\n      method.kind = \"method\";\n\n      if (isPrivate) {\n        this.pushClassPrivateMethod(classBody, privateMethod, false, false);\n        return;\n      }\n\n      const isConstructor = this.isNonstaticConstructor(publicMethod);\n      let allowsDirectSuper = false;\n\n      if (isConstructor) {\n        publicMethod.kind = \"constructor\";\n\n        if (state.hadConstructor && !this.hasPlugin(\"typescript\")) {\n          this.raise(key.start, ErrorMessages.DuplicateConstructor);\n        }\n\n        state.hadConstructor = true;\n        allowsDirectSuper = state.constructorAllowsSuper;\n      }\n\n      this.pushClassMethod(classBody, publicMethod, false, false, isConstructor, allowsDirectSuper);\n    } else if (this.isClassProperty()) {\n      if (isPrivate) {\n        this.pushClassPrivateProperty(classBody, privateProp);\n      } else {\n        this.pushClassProperty(classBody, publicProp);\n      }\n    } else if (isSimple && key.name === \"async\" && !containsEsc && !this.isLineTerminator()) {\n      const isGenerator = this.eat(types.star);\n\n      if (publicMember.optional) {\n        this.unexpected(maybeQuestionTokenStart);\n      }\n\n      method.kind = \"method\";\n      this.parseClassElementName(method);\n      this.parsePostMemberNameModifiers(publicMember);\n\n      if (this.isPrivateName(method.key)) {\n        this.pushClassPrivateMethod(classBody, privateMethod, isGenerator, true);\n      } else {\n        if (this.isNonstaticConstructor(publicMethod)) {\n          this.raise(publicMethod.key.start, ErrorMessages.ConstructorIsAsync);\n        }\n\n        this.pushClassMethod(classBody, publicMethod, isGenerator, true, false, false);\n      }\n    } else if (isSimple && (key.name === \"get\" || key.name === \"set\") && !containsEsc && !(this.match(types.star) && this.isLineTerminator())) {\n      method.kind = key.name;\n      this.parseClassElementName(publicMethod);\n\n      if (this.isPrivateName(method.key)) {\n        this.pushClassPrivateMethod(classBody, privateMethod, false, false);\n      } else {\n        if (this.isNonstaticConstructor(publicMethod)) {\n          this.raise(publicMethod.key.start, ErrorMessages.ConstructorIsAccessor);\n        }\n\n        this.pushClassMethod(classBody, publicMethod, false, false, false, false);\n      }\n\n      this.checkGetterSetterParams(publicMethod);\n    } else if (this.isLineTerminator()) {\n      if (isPrivate) {\n        this.pushClassPrivateProperty(classBody, privateProp);\n      } else {\n        this.pushClassProperty(classBody, publicProp);\n      }\n    } else {\n      this.unexpected();\n    }\n  }\n\n  parseClassElementName(member) {\n    const key = this.parsePropertyName(member, true);\n\n    if (!member.computed && member.static && (key.name === \"prototype\" || key.value === \"prototype\")) {\n      this.raise(key.start, ErrorMessages.StaticPrototype);\n    }\n\n    if (this.isPrivateName(key) && this.getPrivateNameSV(key) === \"constructor\") {\n      this.raise(key.start, ErrorMessages.ConstructorClassPrivateField);\n    }\n\n    return key;\n  }\n\n  parseClassStaticBlock(classBody, member) {\n    var _member$decorators;\n\n    this.expectPlugin(\"classStaticBlock\", member.start);\n    this.scope.enter(SCOPE_CLASS | SCOPE_STATIC_BLOCK | SCOPE_SUPER);\n    const oldLabels = this.state.labels;\n    this.state.labels = [];\n    this.prodParam.enter(PARAM);\n    const body = member.body = [];\n    this.parseBlockOrModuleBlockBody(body, undefined, false, types.braceR);\n    this.prodParam.exit();\n    this.scope.exit();\n    this.state.labels = oldLabels;\n    classBody.body.push(this.finishNode(member, \"StaticBlock\"));\n\n    if ((_member$decorators = member.decorators) != null && _member$decorators.length) {\n      this.raise(member.start, ErrorMessages.DecoratorStaticBlock);\n    }\n  }\n\n  pushClassProperty(classBody, prop) {\n    if (!prop.computed && (prop.key.name === \"constructor\" || prop.key.value === \"constructor\")) {\n      this.raise(prop.key.start, ErrorMessages.ConstructorClassField);\n    }\n\n    classBody.body.push(this.parseClassProperty(prop));\n  }\n\n  pushClassPrivateProperty(classBody, prop) {\n    this.expectPlugin(\"classPrivateProperties\", prop.key.start);\n    const node = this.parseClassPrivateProperty(prop);\n    classBody.body.push(node);\n    this.classScope.declarePrivateName(this.getPrivateNameSV(node.key), CLASS_ELEMENT_OTHER, node.key.start);\n  }\n\n  pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper) {\n    classBody.body.push(this.parseMethod(method, isGenerator, isAsync, isConstructor, allowsDirectSuper, \"ClassMethod\", true));\n  }\n\n  pushClassPrivateMethod(classBody, method, isGenerator, isAsync) {\n    this.expectPlugin(\"classPrivateMethods\", method.key.start);\n    const node = this.parseMethod(method, isGenerator, isAsync, false, false, \"ClassPrivateMethod\", true);\n    classBody.body.push(node);\n    const kind = node.kind === \"get\" ? node.static ? CLASS_ELEMENT_STATIC_GETTER : CLASS_ELEMENT_INSTANCE_GETTER : node.kind === \"set\" ? node.static ? CLASS_ELEMENT_STATIC_SETTER : CLASS_ELEMENT_INSTANCE_SETTER : CLASS_ELEMENT_OTHER;\n    this.classScope.declarePrivateName(this.getPrivateNameSV(node.key), kind, node.key.start);\n  }\n\n  parsePostMemberNameModifiers(methodOrProp) {}\n\n  parseClassPrivateProperty(node) {\n    this.parseInitializer(node);\n    this.semicolon();\n    return this.finishNode(node, \"ClassPrivateProperty\");\n  }\n\n  parseClassProperty(node) {\n    if (!node.typeAnnotation || this.match(types.eq)) {\n      this.expectPlugin(\"classProperties\");\n    }\n\n    this.parseInitializer(node);\n    this.semicolon();\n    return this.finishNode(node, \"ClassProperty\");\n  }\n\n  parseInitializer(node) {\n    this.scope.enter(SCOPE_CLASS | SCOPE_SUPER);\n    this.expressionScope.enter(newExpressionScope());\n    this.prodParam.enter(PARAM);\n    node.value = this.eat(types.eq) ? this.parseMaybeAssignAllowIn() : null;\n    this.expressionScope.exit();\n    this.prodParam.exit();\n    this.scope.exit();\n  }\n\n  parseClassId(node, isStatement, optionalId, bindingType = BIND_CLASS) {\n    if (this.match(types.name)) {\n      node.id = this.parseIdentifier();\n\n      if (isStatement) {\n        this.checkLVal(node.id, \"class name\", bindingType);\n      }\n    } else {\n      if (optionalId || !isStatement) {\n        node.id = null;\n      } else {\n        this.unexpected(null, ErrorMessages.MissingClassName);\n      }\n    }\n  }\n\n  parseClassSuper(node) {\n    node.superClass = this.eat(types._extends) ? this.parseExprSubscripts() : null;\n  }\n\n  parseExport(node) {\n    const hasDefault = this.maybeParseExportDefaultSpecifier(node);\n    const parseAfterDefault = !hasDefault || this.eat(types.comma);\n    const hasStar = parseAfterDefault && this.eatExportStar(node);\n    const hasNamespace = hasStar && this.maybeParseExportNamespaceSpecifier(node);\n    const parseAfterNamespace = parseAfterDefault && (!hasNamespace || this.eat(types.comma));\n    const isFromRequired = hasDefault || hasStar;\n\n    if (hasStar && !hasNamespace) {\n      if (hasDefault) this.unexpected();\n      this.parseExportFrom(node, true);\n      return this.finishNode(node, \"ExportAllDeclaration\");\n    }\n\n    const hasSpecifiers = this.maybeParseExportNamedSpecifiers(node);\n\n    if (hasDefault && parseAfterDefault && !hasStar && !hasSpecifiers || hasNamespace && parseAfterNamespace && !hasSpecifiers) {\n      throw this.unexpected(null, types.braceL);\n    }\n\n    let hasDeclaration;\n\n    if (isFromRequired || hasSpecifiers) {\n      hasDeclaration = false;\n      this.parseExportFrom(node, isFromRequired);\n    } else {\n      hasDeclaration = this.maybeParseExportDeclaration(node);\n    }\n\n    if (isFromRequired || hasSpecifiers || hasDeclaration) {\n      this.checkExport(node, true, false, !!node.source);\n      return this.finishNode(node, \"ExportNamedDeclaration\");\n    }\n\n    if (this.eat(types._default)) {\n      node.declaration = this.parseExportDefaultExpression();\n      this.checkExport(node, true, true);\n      return this.finishNode(node, \"ExportDefaultDeclaration\");\n    }\n\n    throw this.unexpected(null, types.braceL);\n  }\n\n  eatExportStar(node) {\n    return this.eat(types.star);\n  }\n\n  maybeParseExportDefaultSpecifier(node) {\n    if (this.isExportDefaultSpecifier()) {\n      this.expectPlugin(\"exportDefaultFrom\");\n      const specifier = this.startNode();\n      specifier.exported = this.parseIdentifier(true);\n      node.specifiers = [this.finishNode(specifier, \"ExportDefaultSpecifier\")];\n      return true;\n    }\n\n    return false;\n  }\n\n  maybeParseExportNamespaceSpecifier(node) {\n    if (this.isContextual(\"as\")) {\n      if (!node.specifiers) node.specifiers = [];\n      const specifier = this.startNodeAt(this.state.lastTokStart, this.state.lastTokStartLoc);\n      this.next();\n      specifier.exported = this.parseModuleExportName();\n      node.specifiers.push(this.finishNode(specifier, \"ExportNamespaceSpecifier\"));\n      return true;\n    }\n\n    return false;\n  }\n\n  maybeParseExportNamedSpecifiers(node) {\n    if (this.match(types.braceL)) {\n      if (!node.specifiers) node.specifiers = [];\n      node.specifiers.push(...this.parseExportSpecifiers());\n      node.source = null;\n      node.declaration = null;\n      return true;\n    }\n\n    return false;\n  }\n\n  maybeParseExportDeclaration(node) {\n    if (this.shouldParseExportDeclaration()) {\n      node.specifiers = [];\n      node.source = null;\n      node.declaration = this.parseExportDeclaration(node);\n      return true;\n    }\n\n    return false;\n  }\n\n  isAsyncFunction() {\n    if (!this.isContextual(\"async\")) return false;\n    const next = this.nextTokenStart();\n    return !lineBreak.test(this.input.slice(this.state.pos, next)) && this.isUnparsedContextual(next, \"function\");\n  }\n\n  parseExportDefaultExpression() {\n    const expr = this.startNode();\n    const isAsync = this.isAsyncFunction();\n\n    if (this.match(types._function) || isAsync) {\n      this.next();\n\n      if (isAsync) {\n        this.next();\n      }\n\n      return this.parseFunction(expr, FUNC_STATEMENT | FUNC_NULLABLE_ID, isAsync);\n    } else if (this.match(types._class)) {\n      return this.parseClass(expr, true, true);\n    } else if (this.match(types.at)) {\n      if (this.hasPlugin(\"decorators\") && this.getPluginOption(\"decorators\", \"decoratorsBeforeExport\")) {\n        this.raise(this.state.start, ErrorMessages.DecoratorBeforeExport);\n      }\n\n      this.parseDecorators(false);\n      return this.parseClass(expr, true, true);\n    } else if (this.match(types._const) || this.match(types._var) || this.isLet()) {\n      throw this.raise(this.state.start, ErrorMessages.UnsupportedDefaultExport);\n    } else {\n      const res = this.parseMaybeAssignAllowIn();\n      this.semicolon();\n      return res;\n    }\n  }\n\n  parseExportDeclaration(node) {\n    return this.parseStatement(null);\n  }\n\n  isExportDefaultSpecifier() {\n    if (this.match(types.name)) {\n      const value = this.state.value;\n\n      if (value === \"async\" && !this.state.containsEsc || value === \"let\") {\n        return false;\n      }\n\n      if ((value === \"type\" || value === \"interface\") && !this.state.containsEsc) {\n        const l = this.lookahead();\n\n        if (l.type === types.name && l.value !== \"from\" || l.type === types.braceL) {\n          this.expectOnePlugin([\"flow\", \"typescript\"]);\n          return false;\n        }\n      }\n    } else if (!this.match(types._default)) {\n      return false;\n    }\n\n    const next = this.nextTokenStart();\n    const hasFrom = this.isUnparsedContextual(next, \"from\");\n\n    if (this.input.charCodeAt(next) === 44 || this.match(types.name) && hasFrom) {\n      return true;\n    }\n\n    if (this.match(types._default) && hasFrom) {\n      const nextAfterFrom = this.input.charCodeAt(this.nextTokenStartSince(next + 4));\n      return nextAfterFrom === 34 || nextAfterFrom === 39;\n    }\n\n    return false;\n  }\n\n  parseExportFrom(node, expect) {\n    if (this.eatContextual(\"from\")) {\n      node.source = this.parseImportSource();\n      this.checkExport(node);\n      const assertions = this.maybeParseImportAssertions();\n\n      if (assertions) {\n        node.assertions = assertions;\n      }\n    } else {\n      if (expect) {\n        this.unexpected();\n      } else {\n        node.source = null;\n      }\n    }\n\n    this.semicolon();\n  }\n\n  shouldParseExportDeclaration() {\n    if (this.match(types.at)) {\n      this.expectOnePlugin([\"decorators\", \"decorators-legacy\"]);\n\n      if (this.hasPlugin(\"decorators\")) {\n        if (this.getPluginOption(\"decorators\", \"decoratorsBeforeExport\")) {\n          this.unexpected(this.state.start, ErrorMessages.DecoratorBeforeExport);\n        } else {\n          return true;\n        }\n      }\n    }\n\n    return this.state.type.keyword === \"var\" || this.state.type.keyword === \"const\" || this.state.type.keyword === \"function\" || this.state.type.keyword === \"class\" || this.isLet() || this.isAsyncFunction();\n  }\n\n  checkExport(node, checkNames, isDefault, isFrom) {\n    if (checkNames) {\n      if (isDefault) {\n        this.checkDuplicateExports(node, \"default\");\n\n        if (this.hasPlugin(\"exportDefaultFrom\")) {\n          var _declaration$extra;\n\n          const declaration = node.declaration;\n\n          if (declaration.type === \"Identifier\" && declaration.name === \"from\" && declaration.end - declaration.start === 4 && !((_declaration$extra = declaration.extra) != null && _declaration$extra.parenthesized)) {\n            this.raise(declaration.start, ErrorMessages.ExportDefaultFromAsIdentifier);\n          }\n        }\n      } else if (node.specifiers && node.specifiers.length) {\n        for (const specifier of node.specifiers) {\n          const {\n            exported\n          } = specifier;\n          const exportedName = exported.type === \"Identifier\" ? exported.name : exported.value;\n          this.checkDuplicateExports(specifier, exportedName);\n\n          if (!isFrom && specifier.local) {\n            const {\n              local\n            } = specifier;\n\n            if (local.type === \"StringLiteral\") {\n              this.raise(specifier.start, ErrorMessages.ExportBindingIsString, local.value, exportedName);\n            } else {\n              this.checkReservedWord(local.name, local.start, true, false);\n              this.scope.checkLocalExport(local);\n            }\n          }\n        }\n      } else if (node.declaration) {\n        if (node.declaration.type === \"FunctionDeclaration\" || node.declaration.type === \"ClassDeclaration\") {\n          const id = node.declaration.id;\n          if (!id) throw new Error(\"Assertion failure\");\n          this.checkDuplicateExports(node, id.name);\n        } else if (node.declaration.type === \"VariableDeclaration\") {\n          for (const declaration of node.declaration.declarations) {\n            this.checkDeclaration(declaration.id);\n          }\n        }\n      }\n    }\n\n    const currentContextDecorators = this.state.decoratorStack[this.state.decoratorStack.length - 1];\n\n    if (currentContextDecorators.length) {\n      throw this.raise(node.start, ErrorMessages.UnsupportedDecoratorExport);\n    }\n  }\n\n  checkDeclaration(node) {\n    if (node.type === \"Identifier\") {\n      this.checkDuplicateExports(node, node.name);\n    } else if (node.type === \"ObjectPattern\") {\n      for (const prop of node.properties) {\n        this.checkDeclaration(prop);\n      }\n    } else if (node.type === \"ArrayPattern\") {\n      for (const elem of node.elements) {\n        if (elem) {\n          this.checkDeclaration(elem);\n        }\n      }\n    } else if (node.type === \"ObjectProperty\") {\n      this.checkDeclaration(node.value);\n    } else if (node.type === \"RestElement\") {\n      this.checkDeclaration(node.argument);\n    } else if (node.type === \"AssignmentPattern\") {\n      this.checkDeclaration(node.left);\n    }\n  }\n\n  checkDuplicateExports(node, name) {\n    if (this.state.exportedIdentifiers.indexOf(name) > -1) {\n      this.raise(node.start, name === \"default\" ? ErrorMessages.DuplicateDefaultExport : ErrorMessages.DuplicateExport, name);\n    }\n\n    this.state.exportedIdentifiers.push(name);\n  }\n\n  parseExportSpecifiers() {\n    const nodes = [];\n    let first = true;\n    this.expect(types.braceL);\n\n    while (!this.eat(types.braceR)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(types.comma);\n        if (this.eat(types.braceR)) break;\n      }\n\n      const node = this.startNode();\n      node.local = this.parseModuleExportName();\n      node.exported = this.eatContextual(\"as\") ? this.parseModuleExportName() : node.local.__clone();\n      nodes.push(this.finishNode(node, \"ExportSpecifier\"));\n    }\n\n    return nodes;\n  }\n\n  parseModuleExportName() {\n    if (this.match(types.string)) {\n      this.expectPlugin(\"moduleStringNames\");\n      const result = this.parseLiteral(this.state.value, \"StringLiteral\");\n      const surrogate = result.value.match(loneSurrogate);\n\n      if (surrogate) {\n        this.raise(result.start, ErrorMessages.ModuleExportNameHasLoneSurrogate, surrogate[0].charCodeAt(0).toString(16));\n      }\n\n      return result;\n    }\n\n    return this.parseIdentifier(true);\n  }\n\n  parseImport(node) {\n    node.specifiers = [];\n\n    if (!this.match(types.string)) {\n      const hasDefault = this.maybeParseDefaultImportSpecifier(node);\n      const parseNext = !hasDefault || this.eat(types.comma);\n      const hasStar = parseNext && this.maybeParseStarImportSpecifier(node);\n      if (parseNext && !hasStar) this.parseNamedImportSpecifiers(node);\n      this.expectContextual(\"from\");\n    }\n\n    node.source = this.parseImportSource();\n    const assertions = this.maybeParseImportAssertions();\n\n    if (assertions) {\n      node.assertions = assertions;\n    } else {\n        const attributes = this.maybeParseModuleAttributes();\n\n        if (attributes) {\n          node.attributes = attributes;\n        }\n      }\n\n    this.semicolon();\n    return this.finishNode(node, \"ImportDeclaration\");\n  }\n\n  parseImportSource() {\n    if (!this.match(types.string)) this.unexpected();\n    return this.parseExprAtom();\n  }\n\n  shouldParseDefaultImport(node) {\n    return this.match(types.name);\n  }\n\n  parseImportSpecifierLocal(node, specifier, type, contextDescription) {\n    specifier.local = this.parseIdentifier();\n    this.checkLVal(specifier.local, contextDescription, BIND_LEXICAL);\n    node.specifiers.push(this.finishNode(specifier, type));\n  }\n\n  parseAssertEntries() {\n    const attrs = [];\n    const attrNames = new Set();\n\n    do {\n      if (this.match(types.braceR)) {\n        break;\n      }\n\n      const node = this.startNode();\n      const keyName = this.state.value;\n\n      if (this.match(types.string)) {\n        node.key = this.parseLiteral(keyName, \"StringLiteral\");\n      } else {\n        node.key = this.parseIdentifier(true);\n      }\n\n      this.expect(types.colon);\n\n      if (keyName !== \"type\") {\n        this.raise(node.key.start, ErrorMessages.ModuleAttributeDifferentFromType, keyName);\n      }\n\n      if (attrNames.has(keyName)) {\n        this.raise(node.key.start, ErrorMessages.ModuleAttributesWithDuplicateKeys, keyName);\n      }\n\n      attrNames.add(keyName);\n\n      if (!this.match(types.string)) {\n        throw this.unexpected(this.state.start, ErrorMessages.ModuleAttributeInvalidValue);\n      }\n\n      node.value = this.parseLiteral(this.state.value, \"StringLiteral\");\n      this.finishNode(node, \"ImportAttribute\");\n      attrs.push(node);\n    } while (this.eat(types.comma));\n\n    return attrs;\n  }\n\n  maybeParseModuleAttributes() {\n    if (this.match(types._with) && !this.hasPrecedingLineBreak()) {\n      this.expectPlugin(\"moduleAttributes\");\n      this.next();\n    } else {\n      if (this.hasPlugin(\"moduleAttributes\")) return [];\n      return null;\n    }\n\n    const attrs = [];\n    const attributes = new Set();\n\n    do {\n      const node = this.startNode();\n      node.key = this.parseIdentifier(true);\n\n      if (node.key.name !== \"type\") {\n        this.raise(node.key.start, ErrorMessages.ModuleAttributeDifferentFromType, node.key.name);\n      }\n\n      if (attributes.has(node.key.name)) {\n        this.raise(node.key.start, ErrorMessages.ModuleAttributesWithDuplicateKeys, node.key.name);\n      }\n\n      attributes.add(node.key.name);\n      this.expect(types.colon);\n\n      if (!this.match(types.string)) {\n        throw this.unexpected(this.state.start, ErrorMessages.ModuleAttributeInvalidValue);\n      }\n\n      node.value = this.parseLiteral(this.state.value, \"StringLiteral\");\n      this.finishNode(node, \"ImportAttribute\");\n      attrs.push(node);\n    } while (this.eat(types.comma));\n\n    return attrs;\n  }\n\n  maybeParseImportAssertions() {\n    if (this.isContextual(\"assert\") && !this.hasPrecedingLineBreak()) {\n      this.expectPlugin(\"importAssertions\");\n      this.next();\n    } else {\n      if (this.hasPlugin(\"importAssertions\")) return [];\n      return null;\n    }\n\n    this.eat(types.braceL);\n    const attrs = this.parseAssertEntries();\n    this.eat(types.braceR);\n    return attrs;\n  }\n\n  maybeParseDefaultImportSpecifier(node) {\n    if (this.shouldParseDefaultImport(node)) {\n      this.parseImportSpecifierLocal(node, this.startNode(), \"ImportDefaultSpecifier\", \"default import specifier\");\n      return true;\n    }\n\n    return false;\n  }\n\n  maybeParseStarImportSpecifier(node) {\n    if (this.match(types.star)) {\n      const specifier = this.startNode();\n      this.next();\n      this.expectContextual(\"as\");\n      this.parseImportSpecifierLocal(node, specifier, \"ImportNamespaceSpecifier\", \"import namespace specifier\");\n      return true;\n    }\n\n    return false;\n  }\n\n  parseNamedImportSpecifiers(node) {\n    let first = true;\n    this.expect(types.braceL);\n\n    while (!this.eat(types.braceR)) {\n      if (first) {\n        first = false;\n      } else {\n        if (this.eat(types.colon)) {\n          throw this.raise(this.state.start, ErrorMessages.DestructureNamedImport);\n        }\n\n        this.expect(types.comma);\n        if (this.eat(types.braceR)) break;\n      }\n\n      this.parseImportSpecifier(node);\n    }\n  }\n\n  parseImportSpecifier(node) {\n    const specifier = this.startNode();\n    specifier.imported = this.parseModuleExportName();\n\n    if (this.eatContextual(\"as\")) {\n      specifier.local = this.parseIdentifier();\n    } else {\n      const {\n        imported\n      } = specifier;\n\n      if (imported.type === \"StringLiteral\") {\n        throw this.raise(specifier.start, ErrorMessages.ImportBindingIsString, imported.value);\n      }\n\n      this.checkReservedWord(imported.name, specifier.start, true, true);\n      specifier.local = imported.__clone();\n    }\n\n    this.checkLVal(specifier.local, \"import specifier\", BIND_LEXICAL);\n    node.specifiers.push(this.finishNode(specifier, \"ImportSpecifier\"));\n  }\n\n}\n\nclass Parser extends StatementParser {\n  constructor(options, input) {\n    options = getOptions(options);\n    super(options, input);\n    this.options = options;\n    this.initializeScopes();\n    this.plugins = pluginsMap(this.options.plugins);\n    this.filename = options.sourceFilename;\n  }\n\n  getScopeHandler() {\n    return ScopeHandler;\n  }\n\n  parse() {\n    this.enterInitialScopes();\n    const file = this.startNode();\n    const program = this.startNode();\n    this.nextToken();\n    file.errors = null;\n    this.parseTopLevel(file, program);\n    file.errors = this.state.errors;\n    return file;\n  }\n\n}\n\nfunction pluginsMap(plugins) {\n  const pluginMap = new Map();\n\n  for (const plugin of plugins) {\n    const [name, options] = Array.isArray(plugin) ? plugin : [plugin, {}];\n    if (!pluginMap.has(name)) pluginMap.set(name, options || {});\n  }\n\n  return pluginMap;\n}\n\nfunction parse(input, options) {\n  var _options;\n\n  if (((_options = options) == null ? void 0 : _options.sourceType) === \"unambiguous\") {\n    options = Object.assign({}, options);\n\n    try {\n      options.sourceType = \"module\";\n      const parser = getParser(options, input);\n      const ast = parser.parse();\n\n      if (parser.sawUnambiguousESM) {\n        return ast;\n      }\n\n      if (parser.ambiguousScriptDifferentAst) {\n        try {\n          options.sourceType = \"script\";\n          return getParser(options, input).parse();\n        } catch (_unused) {}\n      } else {\n        ast.program.sourceType = \"script\";\n      }\n\n      return ast;\n    } catch (moduleError) {\n      try {\n        options.sourceType = \"script\";\n        return getParser(options, input).parse();\n      } catch (_unused2) {}\n\n      throw moduleError;\n    }\n  } else {\n    return getParser(options, input).parse();\n  }\n}\nfunction parseExpression(input, options) {\n  const parser = getParser(options, input);\n\n  if (parser.options.strictMode) {\n    parser.state.strict = true;\n  }\n\n  return parser.getExpression();\n}\n\nfunction getParser(options, input) {\n  let cls = Parser;\n\n  if (options != null && options.plugins) {\n    validatePlugins(options.plugins);\n    cls = getParserClass(options.plugins);\n  }\n\n  return new cls(options, input);\n}\n\nconst parserClassCache = {};\n\nfunction getParserClass(pluginsFromOptions) {\n  const pluginList = mixinPluginNames.filter(name => hasPlugin(pluginsFromOptions, name));\n  const key = pluginList.join(\"/\");\n  let cls = parserClassCache[key];\n\n  if (!cls) {\n    cls = Parser;\n\n    for (const plugin of pluginList) {\n      cls = mixinPlugins[plugin](cls);\n    }\n\n    parserClassCache[key] = cls;\n  }\n\n  return cls;\n}\n\nexports.parse = parse;\nexports.parseExpression = parseExpression;\nexports.tokTypes = types;\n//# sourceMappingURL=index.js.map\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.codeFrameColumns = codeFrameColumns;\nexports.default = _default;\n\nvar _highlight = _interopRequireWildcard(require(\"@babel/highlight\"));\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nlet deprecationWarningShown = false;\n\nfunction getDefs(chalk) {\n  return {\n    gutter: chalk.grey,\n    marker: chalk.red.bold,\n    message: chalk.red.bold\n  };\n}\n\nconst NEWLINE = /\\r\\n|[\\n\\r\\u2028\\u2029]/;\n\nfunction getMarkerLines(loc, source, opts) {\n  const startLoc = Object.assign({\n    column: 0,\n    line: -1\n  }, loc.start);\n  const endLoc = Object.assign({}, startLoc, loc.end);\n  const {\n    linesAbove = 2,\n    linesBelow = 3\n  } = opts || {};\n  const startLine = startLoc.line;\n  const startColumn = startLoc.column;\n  const endLine = endLoc.line;\n  const endColumn = endLoc.column;\n  let start = Math.max(startLine - (linesAbove + 1), 0);\n  let end = Math.min(source.length, endLine + linesBelow);\n\n  if (startLine === -1) {\n    start = 0;\n  }\n\n  if (endLine === -1) {\n    end = source.length;\n  }\n\n  const lineDiff = endLine - startLine;\n  const markerLines = {};\n\n  if (lineDiff) {\n    for (let i = 0; i <= lineDiff; i++) {\n      const lineNumber = i + startLine;\n\n      if (!startColumn) {\n        markerLines[lineNumber] = true;\n      } else if (i === 0) {\n        const sourceLength = source[lineNumber - 1].length;\n        markerLines[lineNumber] = [startColumn, sourceLength - startColumn + 1];\n      } else if (i === lineDiff) {\n        markerLines[lineNumber] = [0, endColumn];\n      } else {\n        const sourceLength = source[lineNumber - i].length;\n        markerLines[lineNumber] = [0, sourceLength];\n      }\n    }\n  } else {\n    if (startColumn === endColumn) {\n      if (startColumn) {\n        markerLines[startLine] = [startColumn, 0];\n      } else {\n        markerLines[startLine] = true;\n      }\n    } else {\n      markerLines[startLine] = [startColumn, endColumn - startColumn];\n    }\n  }\n\n  return {\n    start,\n    end,\n    markerLines\n  };\n}\n\nfunction codeFrameColumns(rawLines, loc, opts = {}) {\n  const highlighted = (opts.highlightCode || opts.forceColor) && (0, _highlight.shouldHighlight)(opts);\n  const chalk = (0, _highlight.getChalk)(opts);\n  const defs = getDefs(chalk);\n\n  const maybeHighlight = (chalkFn, string) => {\n    return highlighted ? chalkFn(string) : string;\n  };\n\n  const lines = rawLines.split(NEWLINE);\n  const {\n    start,\n    end,\n    markerLines\n  } = getMarkerLines(loc, lines, opts);\n  const hasColumns = loc.start && typeof loc.start.column === \"number\";\n  const numberMaxWidth = String(end).length;\n  const highlightedLines = highlighted ? (0, _highlight.default)(rawLines, opts) : rawLines;\n  let frame = highlightedLines.split(NEWLINE).slice(start, end).map((line, index) => {\n    const number = start + 1 + index;\n    const paddedNumber = ` ${number}`.slice(-numberMaxWidth);\n    const gutter = ` ${paddedNumber} |`;\n    const hasMarker = markerLines[number];\n    const lastMarkerLine = !markerLines[number + 1];\n\n    if (hasMarker) {\n      let markerLine = \"\";\n\n      if (Array.isArray(hasMarker)) {\n        const markerSpacing = line.slice(0, Math.max(hasMarker[0] - 1, 0)).replace(/[^\\t]/g, \" \");\n        const numberOfMarkers = hasMarker[1] || 1;\n        markerLine = [\"\\n \", maybeHighlight(defs.gutter, gutter.replace(/\\d/g, \" \")), \" \", markerSpacing, maybeHighlight(defs.marker, \"^\").repeat(numberOfMarkers)].join(\"\");\n\n        if (lastMarkerLine && opts.message) {\n          markerLine += \" \" + maybeHighlight(defs.message, opts.message);\n        }\n      }\n\n      return [maybeHighlight(defs.marker, \">\"), maybeHighlight(defs.gutter, gutter), line.length > 0 ? ` ${line}` : \"\", markerLine].join(\"\");\n    } else {\n      return ` ${maybeHighlight(defs.gutter, gutter)}${line.length > 0 ? ` ${line}` : \"\"}`;\n    }\n  }).join(\"\\n\");\n\n  if (opts.message && !hasColumns) {\n    frame = `${\" \".repeat(numberMaxWidth + 1)}${opts.message}\\n${frame}`;\n  }\n\n  if (highlighted) {\n    return chalk.reset(frame);\n  } else {\n    return frame;\n  }\n}\n\nfunction _default(rawLines, lineNumber, colNumber, opts = {}) {\n  if (!deprecationWarningShown) {\n    deprecationWarningShown = true;\n    const message = \"Passing lineNumber and colNumber is deprecated to @babel/code-frame. Please use `codeFrameColumns`.\";\n\n    if (process.emitWarning) {\n      process.emitWarning(message, \"DeprecationWarning\");\n    } else {\n      const deprecationError = new Error(message);\n      deprecationError.name = \"DeprecationWarning\";\n      console.warn(new Error(message));\n    }\n  }\n\n  colNumber = Math.max(colNumber, 0);\n  const location = {\n    start: {\n      column: colNumber,\n      line: lineNumber\n    }\n  };\n  return codeFrameColumns(rawLines, location, opts);\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.merge = merge;\nexports.validate = validate;\nexports.normalizeReplacements = normalizeReplacements;\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction merge(a, b) {\n  const {\n    placeholderWhitelist = a.placeholderWhitelist,\n    placeholderPattern = a.placeholderPattern,\n    preserveComments = a.preserveComments,\n    syntacticPlaceholders = a.syntacticPlaceholders\n  } = b;\n  return {\n    parser: Object.assign({}, a.parser, b.parser),\n    placeholderWhitelist,\n    placeholderPattern,\n    preserveComments,\n    syntacticPlaceholders\n  };\n}\n\nfunction validate(opts) {\n  if (opts != null && typeof opts !== \"object\") {\n    throw new Error(\"Unknown template options.\");\n  }\n\n  const _ref = opts || {},\n        {\n    placeholderWhitelist,\n    placeholderPattern,\n    preserveComments,\n    syntacticPlaceholders\n  } = _ref,\n        parser = _objectWithoutPropertiesLoose(_ref, [\"placeholderWhitelist\", \"placeholderPattern\", \"preserveComments\", \"syntacticPlaceholders\"]);\n\n  if (placeholderWhitelist != null && !(placeholderWhitelist instanceof Set)) {\n    throw new Error(\"'.placeholderWhitelist' must be a Set, null, or undefined\");\n  }\n\n  if (placeholderPattern != null && !(placeholderPattern instanceof RegExp) && placeholderPattern !== false) {\n    throw new Error(\"'.placeholderPattern' must be a RegExp, false, null, or undefined\");\n  }\n\n  if (preserveComments != null && typeof preserveComments !== \"boolean\") {\n    throw new Error(\"'.preserveComments' must be a boolean, null, or undefined\");\n  }\n\n  if (syntacticPlaceholders != null && typeof syntacticPlaceholders !== \"boolean\") {\n    throw new Error(\"'.syntacticPlaceholders' must be a boolean, null, or undefined\");\n  }\n\n  if (syntacticPlaceholders === true && (placeholderWhitelist != null || placeholderPattern != null)) {\n    throw new Error(\"'.placeholderWhitelist' and '.placeholderPattern' aren't compatible\" + \" with '.syntacticPlaceholders: true'\");\n  }\n\n  return {\n    parser,\n    placeholderWhitelist: placeholderWhitelist || undefined,\n    placeholderPattern: placeholderPattern == null ? undefined : placeholderPattern,\n    preserveComments: preserveComments == null ? undefined : preserveComments,\n    syntacticPlaceholders: syntacticPlaceholders == null ? undefined : syntacticPlaceholders\n  };\n}\n\nfunction normalizeReplacements(replacements) {\n  if (Array.isArray(replacements)) {\n    return replacements.reduce((acc, replacement, i) => {\n      acc[\"$\" + i] = replacement;\n      return acc;\n    }, {});\n  } else if (typeof replacements === \"object\" || replacements == null) {\n    return replacements || undefined;\n  }\n\n  throw new Error(\"Template replacements must be an array, object, null, or undefined\");\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = parseAndBuildMetadata;\n\nvar t = _interopRequireWildcard(require(\"@babel/types\"));\n\nvar _parser = require(\"@babel/parser\");\n\nvar _codeFrame = require(\"@babel/code-frame\");\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nconst PATTERN = /^[_$A-Z0-9]+$/;\n\nfunction parseAndBuildMetadata(formatter, code, opts) {\n  const {\n    placeholderWhitelist,\n    placeholderPattern,\n    preserveComments,\n    syntacticPlaceholders\n  } = opts;\n  const ast = parseWithCodeFrame(code, opts.parser, syntacticPlaceholders);\n  t.removePropertiesDeep(ast, {\n    preserveComments\n  });\n  formatter.validate(ast);\n  const syntactic = {\n    placeholders: [],\n    placeholderNames: new Set()\n  };\n  const legacy = {\n    placeholders: [],\n    placeholderNames: new Set()\n  };\n  const isLegacyRef = {\n    value: undefined\n  };\n  t.traverse(ast, placeholderVisitorHandler, {\n    syntactic,\n    legacy,\n    isLegacyRef,\n    placeholderWhitelist,\n    placeholderPattern,\n    syntacticPlaceholders\n  });\n  return Object.assign({\n    ast\n  }, isLegacyRef.value ? legacy : syntactic);\n}\n\nfunction placeholderVisitorHandler(node, ancestors, state) {\n  var _state$placeholderWhi;\n\n  let name;\n\n  if (t.isPlaceholder(node)) {\n    if (state.syntacticPlaceholders === false) {\n      throw new Error(\"%%foo%%-style placeholders can't be used when \" + \"'.syntacticPlaceholders' is false.\");\n    } else {\n      name = node.name.name;\n      state.isLegacyRef.value = false;\n    }\n  } else if (state.isLegacyRef.value === false || state.syntacticPlaceholders) {\n    return;\n  } else if (t.isIdentifier(node) || t.isJSXIdentifier(node)) {\n    name = node.name;\n    state.isLegacyRef.value = true;\n  } else if (t.isStringLiteral(node)) {\n    name = node.value;\n    state.isLegacyRef.value = true;\n  } else {\n    return;\n  }\n\n  if (!state.isLegacyRef.value && (state.placeholderPattern != null || state.placeholderWhitelist != null)) {\n    throw new Error(\"'.placeholderWhitelist' and '.placeholderPattern' aren't compatible\" + \" with '.syntacticPlaceholders: true'\");\n  }\n\n  if (state.isLegacyRef.value && (state.placeholderPattern === false || !(state.placeholderPattern || PATTERN).test(name)) && !((_state$placeholderWhi = state.placeholderWhitelist) == null ? void 0 : _state$placeholderWhi.has(name))) {\n    return;\n  }\n\n  ancestors = ancestors.slice();\n  const {\n    node: parent,\n    key\n  } = ancestors[ancestors.length - 1];\n  let type;\n\n  if (t.isStringLiteral(node) || t.isPlaceholder(node, {\n    expectedNode: \"StringLiteral\"\n  })) {\n    type = \"string\";\n  } else if (t.isNewExpression(parent) && key === \"arguments\" || t.isCallExpression(parent) && key === \"arguments\" || t.isFunction(parent) && key === \"params\") {\n    type = \"param\";\n  } else if (t.isExpressionStatement(parent) && !t.isPlaceholder(node)) {\n    type = \"statement\";\n    ancestors = ancestors.slice(0, -1);\n  } else if (t.isStatement(node) && t.isPlaceholder(node)) {\n    type = \"statement\";\n  } else {\n    type = \"other\";\n  }\n\n  const {\n    placeholders,\n    placeholderNames\n  } = state.isLegacyRef.value ? state.legacy : state.syntactic;\n  placeholders.push({\n    name,\n    type,\n    resolve: ast => resolveAncestors(ast, ancestors),\n    isDuplicate: placeholderNames.has(name)\n  });\n  placeholderNames.add(name);\n}\n\nfunction resolveAncestors(ast, ancestors) {\n  let parent = ast;\n\n  for (let i = 0; i < ancestors.length - 1; i++) {\n    const {\n      key,\n      index\n    } = ancestors[i];\n\n    if (index === undefined) {\n      parent = parent[key];\n    } else {\n      parent = parent[key][index];\n    }\n  }\n\n  const {\n    key,\n    index\n  } = ancestors[ancestors.length - 1];\n  return {\n    parent,\n    key,\n    index\n  };\n}\n\nfunction parseWithCodeFrame(code, parserOpts, syntacticPlaceholders) {\n  const plugins = (parserOpts.plugins || []).slice();\n\n  if (syntacticPlaceholders !== false) {\n    plugins.push(\"placeholders\");\n  }\n\n  parserOpts = Object.assign({\n    allowReturnOutsideFunction: true,\n    allowSuperOutsideMethod: true,\n    sourceType: \"module\"\n  }, parserOpts, {\n    plugins\n  });\n\n  try {\n    return (0, _parser.parse)(code, parserOpts);\n  } catch (err) {\n    const loc = err.loc;\n\n    if (loc) {\n      err.message += \"\\n\" + (0, _codeFrame.codeFrameColumns)(code, {\n        start: loc\n      });\n      err.code = \"BABEL_TEMPLATE_PARSE_ERROR\";\n    }\n\n    throw err;\n  }\n}","/* MIT license */\nvar cssKeywords = require('color-name');\n\n// NOTE: conversions should only return primitive values (i.e. arrays, or\n//       values that give correct `typeof` results).\n//       do not use box values types (i.e. Number(), String(), etc.)\n\nvar reverseKeywords = {};\nfor (var key in cssKeywords) {\n\tif (cssKeywords.hasOwnProperty(key)) {\n\t\treverseKeywords[cssKeywords[key]] = key;\n\t}\n}\n\nvar convert = module.exports = {\n\trgb: {channels: 3, labels: 'rgb'},\n\thsl: {channels: 3, labels: 'hsl'},\n\thsv: {channels: 3, labels: 'hsv'},\n\thwb: {channels: 3, labels: 'hwb'},\n\tcmyk: {channels: 4, labels: 'cmyk'},\n\txyz: {channels: 3, labels: 'xyz'},\n\tlab: {channels: 3, labels: 'lab'},\n\tlch: {channels: 3, labels: 'lch'},\n\thex: {channels: 1, labels: ['hex']},\n\tkeyword: {channels: 1, labels: ['keyword']},\n\tansi16: {channels: 1, labels: ['ansi16']},\n\tansi256: {channels: 1, labels: ['ansi256']},\n\thcg: {channels: 3, labels: ['h', 'c', 'g']},\n\tapple: {channels: 3, labels: ['r16', 'g16', 'b16']},\n\tgray: {channels: 1, labels: ['gray']}\n};\n\n// hide .channels and .labels properties\nfor (var model in convert) {\n\tif (convert.hasOwnProperty(model)) {\n\t\tif (!('channels' in convert[model])) {\n\t\t\tthrow new Error('missing channels property: ' + model);\n\t\t}\n\n\t\tif (!('labels' in convert[model])) {\n\t\t\tthrow new Error('missing channel labels property: ' + model);\n\t\t}\n\n\t\tif (convert[model].labels.length !== convert[model].channels) {\n\t\t\tthrow new Error('channel and label counts mismatch: ' + model);\n\t\t}\n\n\t\tvar channels = convert[model].channels;\n\t\tvar labels = convert[model].labels;\n\t\tdelete convert[model].channels;\n\t\tdelete convert[model].labels;\n\t\tObject.defineProperty(convert[model], 'channels', {value: channels});\n\t\tObject.defineProperty(convert[model], 'labels', {value: labels});\n\t}\n}\n\nconvert.rgb.hsl = function (rgb) {\n\tvar r = rgb[0] / 255;\n\tvar g = rgb[1] / 255;\n\tvar b = rgb[2] / 255;\n\tvar min = Math.min(r, g, b);\n\tvar max = Math.max(r, g, b);\n\tvar delta = max - min;\n\tvar h;\n\tvar s;\n\tvar l;\n\n\tif (max === min) {\n\t\th = 0;\n\t} else if (r === max) {\n\t\th = (g - b) / delta;\n\t} else if (g === max) {\n\t\th = 2 + (b - r) / delta;\n\t} else if (b === max) {\n\t\th = 4 + (r - g) / delta;\n\t}\n\n\th = Math.min(h * 60, 360);\n\n\tif (h < 0) {\n\t\th += 360;\n\t}\n\n\tl = (min + max) / 2;\n\n\tif (max === min) {\n\t\ts = 0;\n\t} else if (l <= 0.5) {\n\t\ts = delta / (max + min);\n\t} else {\n\t\ts = delta / (2 - max - min);\n\t}\n\n\treturn [h, s * 100, l * 100];\n};\n\nconvert.rgb.hsv = function (rgb) {\n\tvar rdif;\n\tvar gdif;\n\tvar bdif;\n\tvar h;\n\tvar s;\n\n\tvar r = rgb[0] / 255;\n\tvar g = rgb[1] / 255;\n\tvar b = rgb[2] / 255;\n\tvar v = Math.max(r, g, b);\n\tvar diff = v - Math.min(r, g, b);\n\tvar diffc = function (c) {\n\t\treturn (v - c) / 6 / diff + 1 / 2;\n\t};\n\n\tif (diff === 0) {\n\t\th = s = 0;\n\t} else {\n\t\ts = diff / v;\n\t\trdif = diffc(r);\n\t\tgdif = diffc(g);\n\t\tbdif = diffc(b);\n\n\t\tif (r === v) {\n\t\t\th = bdif - gdif;\n\t\t} else if (g === v) {\n\t\t\th = (1 / 3) + rdif - bdif;\n\t\t} else if (b === v) {\n\t\t\th = (2 / 3) + gdif - rdif;\n\t\t}\n\t\tif (h < 0) {\n\t\t\th += 1;\n\t\t} else if (h > 1) {\n\t\t\th -= 1;\n\t\t}\n\t}\n\n\treturn [\n\t\th * 360,\n\t\ts * 100,\n\t\tv * 100\n\t];\n};\n\nconvert.rgb.hwb = function (rgb) {\n\tvar r = rgb[0];\n\tvar g = rgb[1];\n\tvar b = rgb[2];\n\tvar h = convert.rgb.hsl(rgb)[0];\n\tvar w = 1 / 255 * Math.min(r, Math.min(g, b));\n\n\tb = 1 - 1 / 255 * Math.max(r, Math.max(g, b));\n\n\treturn [h, w * 100, b * 100];\n};\n\nconvert.rgb.cmyk = function (rgb) {\n\tvar r = rgb[0] / 255;\n\tvar g = rgb[1] / 255;\n\tvar b = rgb[2] / 255;\n\tvar c;\n\tvar m;\n\tvar y;\n\tvar k;\n\n\tk = Math.min(1 - r, 1 - g, 1 - b);\n\tc = (1 - r - k) / (1 - k) || 0;\n\tm = (1 - g - k) / (1 - k) || 0;\n\ty = (1 - b - k) / (1 - k) || 0;\n\n\treturn [c * 100, m * 100, y * 100, k * 100];\n};\n\n/**\n * See https://en.m.wikipedia.org/wiki/Euclidean_distance#Squared_Euclidean_distance\n * */\nfunction comparativeDistance(x, y) {\n\treturn (\n\t\tMath.pow(x[0] - y[0], 2) +\n\t\tMath.pow(x[1] - y[1], 2) +\n\t\tMath.pow(x[2] - y[2], 2)\n\t);\n}\n\nconvert.rgb.keyword = function (rgb) {\n\tvar reversed = reverseKeywords[rgb];\n\tif (reversed) {\n\t\treturn reversed;\n\t}\n\n\tvar currentClosestDistance = Infinity;\n\tvar currentClosestKeyword;\n\n\tfor (var keyword in cssKeywords) {\n\t\tif (cssKeywords.hasOwnProperty(keyword)) {\n\t\t\tvar value = cssKeywords[keyword];\n\n\t\t\t// Compute comparative distance\n\t\t\tvar distance = comparativeDistance(rgb, value);\n\n\t\t\t// Check if its less, if so set as closest\n\t\t\tif (distance < currentClosestDistance) {\n\t\t\t\tcurrentClosestDistance = distance;\n\t\t\t\tcurrentClosestKeyword = keyword;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn currentClosestKeyword;\n};\n\nconvert.keyword.rgb = function (keyword) {\n\treturn cssKeywords[keyword];\n};\n\nconvert.rgb.xyz = function (rgb) {\n\tvar r = rgb[0] / 255;\n\tvar g = rgb[1] / 255;\n\tvar b = rgb[2] / 255;\n\n\t// assume sRGB\n\tr = r > 0.04045 ? Math.pow(((r + 0.055) / 1.055), 2.4) : (r / 12.92);\n\tg = g > 0.04045 ? Math.pow(((g + 0.055) / 1.055), 2.4) : (g / 12.92);\n\tb = b > 0.04045 ? Math.pow(((b + 0.055) / 1.055), 2.4) : (b / 12.92);\n\n\tvar x = (r * 0.4124) + (g * 0.3576) + (b * 0.1805);\n\tvar y = (r * 0.2126) + (g * 0.7152) + (b * 0.0722);\n\tvar z = (r * 0.0193) + (g * 0.1192) + (b * 0.9505);\n\n\treturn [x * 100, y * 100, z * 100];\n};\n\nconvert.rgb.lab = function (rgb) {\n\tvar xyz = convert.rgb.xyz(rgb);\n\tvar x = xyz[0];\n\tvar y = xyz[1];\n\tvar z = xyz[2];\n\tvar l;\n\tvar a;\n\tvar b;\n\n\tx /= 95.047;\n\ty /= 100;\n\tz /= 108.883;\n\n\tx = x > 0.008856 ? Math.pow(x, 1 / 3) : (7.787 * x) + (16 / 116);\n\ty = y > 0.008856 ? Math.pow(y, 1 / 3) : (7.787 * y) + (16 / 116);\n\tz = z > 0.008856 ? Math.pow(z, 1 / 3) : (7.787 * z) + (16 / 116);\n\n\tl = (116 * y) - 16;\n\ta = 500 * (x - y);\n\tb = 200 * (y - z);\n\n\treturn [l, a, b];\n};\n\nconvert.hsl.rgb = function (hsl) {\n\tvar h = hsl[0] / 360;\n\tvar s = hsl[1] / 100;\n\tvar l = hsl[2] / 100;\n\tvar t1;\n\tvar t2;\n\tvar t3;\n\tvar rgb;\n\tvar val;\n\n\tif (s === 0) {\n\t\tval = l * 255;\n\t\treturn [val, val, val];\n\t}\n\n\tif (l < 0.5) {\n\t\tt2 = l * (1 + s);\n\t} else {\n\t\tt2 = l + s - l * s;\n\t}\n\n\tt1 = 2 * l - t2;\n\n\trgb = [0, 0, 0];\n\tfor (var i = 0; i < 3; i++) {\n\t\tt3 = h + 1 / 3 * -(i - 1);\n\t\tif (t3 < 0) {\n\t\t\tt3++;\n\t\t}\n\t\tif (t3 > 1) {\n\t\t\tt3--;\n\t\t}\n\n\t\tif (6 * t3 < 1) {\n\t\t\tval = t1 + (t2 - t1) * 6 * t3;\n\t\t} else if (2 * t3 < 1) {\n\t\t\tval = t2;\n\t\t} else if (3 * t3 < 2) {\n\t\t\tval = t1 + (t2 - t1) * (2 / 3 - t3) * 6;\n\t\t} else {\n\t\t\tval = t1;\n\t\t}\n\n\t\trgb[i] = val * 255;\n\t}\n\n\treturn rgb;\n};\n\nconvert.hsl.hsv = function (hsl) {\n\tvar h = hsl[0];\n\tvar s = hsl[1] / 100;\n\tvar l = hsl[2] / 100;\n\tvar smin = s;\n\tvar lmin = Math.max(l, 0.01);\n\tvar sv;\n\tvar v;\n\n\tl *= 2;\n\ts *= (l <= 1) ? l : 2 - l;\n\tsmin *= lmin <= 1 ? lmin : 2 - lmin;\n\tv = (l + s) / 2;\n\tsv = l === 0 ? (2 * smin) / (lmin + smin) : (2 * s) / (l + s);\n\n\treturn [h, sv * 100, v * 100];\n};\n\nconvert.hsv.rgb = function (hsv) {\n\tvar h = hsv[0] / 60;\n\tvar s = hsv[1] / 100;\n\tvar v = hsv[2] / 100;\n\tvar hi = Math.floor(h) % 6;\n\n\tvar f = h - Math.floor(h);\n\tvar p = 255 * v * (1 - s);\n\tvar q = 255 * v * (1 - (s * f));\n\tvar t = 255 * v * (1 - (s * (1 - f)));\n\tv *= 255;\n\n\tswitch (hi) {\n\t\tcase 0:\n\t\t\treturn [v, t, p];\n\t\tcase 1:\n\t\t\treturn [q, v, p];\n\t\tcase 2:\n\t\t\treturn [p, v, t];\n\t\tcase 3:\n\t\t\treturn [p, q, v];\n\t\tcase 4:\n\t\t\treturn [t, p, v];\n\t\tcase 5:\n\t\t\treturn [v, p, q];\n\t}\n};\n\nconvert.hsv.hsl = function (hsv) {\n\tvar h = hsv[0];\n\tvar s = hsv[1] / 100;\n\tvar v = hsv[2] / 100;\n\tvar vmin = Math.max(v, 0.01);\n\tvar lmin;\n\tvar sl;\n\tvar l;\n\n\tl = (2 - s) * v;\n\tlmin = (2 - s) * vmin;\n\tsl = s * vmin;\n\tsl /= (lmin <= 1) ? lmin : 2 - lmin;\n\tsl = sl || 0;\n\tl /= 2;\n\n\treturn [h, sl * 100, l * 100];\n};\n\n// http://dev.w3.org/csswg/css-color/#hwb-to-rgb\nconvert.hwb.rgb = function (hwb) {\n\tvar h = hwb[0] / 360;\n\tvar wh = hwb[1] / 100;\n\tvar bl = hwb[2] / 100;\n\tvar ratio = wh + bl;\n\tvar i;\n\tvar v;\n\tvar f;\n\tvar n;\n\n\t// wh + bl cant be > 1\n\tif (ratio > 1) {\n\t\twh /= ratio;\n\t\tbl /= ratio;\n\t}\n\n\ti = Math.floor(6 * h);\n\tv = 1 - bl;\n\tf = 6 * h - i;\n\n\tif ((i & 0x01) !== 0) {\n\t\tf = 1 - f;\n\t}\n\n\tn = wh + f * (v - wh); // linear interpolation\n\n\tvar r;\n\tvar g;\n\tvar b;\n\tswitch (i) {\n\t\tdefault:\n\t\tcase 6:\n\t\tcase 0: r = v; g = n; b = wh; break;\n\t\tcase 1: r = n; g = v; b = wh; break;\n\t\tcase 2: r = wh; g = v; b = n; break;\n\t\tcase 3: r = wh; g = n; b = v; break;\n\t\tcase 4: r = n; g = wh; b = v; break;\n\t\tcase 5: r = v; g = wh; b = n; break;\n\t}\n\n\treturn [r * 255, g * 255, b * 255];\n};\n\nconvert.cmyk.rgb = function (cmyk) {\n\tvar c = cmyk[0] / 100;\n\tvar m = cmyk[1] / 100;\n\tvar y = cmyk[2] / 100;\n\tvar k = cmyk[3] / 100;\n\tvar r;\n\tvar g;\n\tvar b;\n\n\tr = 1 - Math.min(1, c * (1 - k) + k);\n\tg = 1 - Math.min(1, m * (1 - k) + k);\n\tb = 1 - Math.min(1, y * (1 - k) + k);\n\n\treturn [r * 255, g * 255, b * 255];\n};\n\nconvert.xyz.rgb = function (xyz) {\n\tvar x = xyz[0] / 100;\n\tvar y = xyz[1] / 100;\n\tvar z = xyz[2] / 100;\n\tvar r;\n\tvar g;\n\tvar b;\n\n\tr = (x * 3.2406) + (y * -1.5372) + (z * -0.4986);\n\tg = (x * -0.9689) + (y * 1.8758) + (z * 0.0415);\n\tb = (x * 0.0557) + (y * -0.2040) + (z * 1.0570);\n\n\t// assume sRGB\n\tr = r > 0.0031308\n\t\t? ((1.055 * Math.pow(r, 1.0 / 2.4)) - 0.055)\n\t\t: r * 12.92;\n\n\tg = g > 0.0031308\n\t\t? ((1.055 * Math.pow(g, 1.0 / 2.4)) - 0.055)\n\t\t: g * 12.92;\n\n\tb = b > 0.0031308\n\t\t? ((1.055 * Math.pow(b, 1.0 / 2.4)) - 0.055)\n\t\t: b * 12.92;\n\n\tr = Math.min(Math.max(0, r), 1);\n\tg = Math.min(Math.max(0, g), 1);\n\tb = Math.min(Math.max(0, b), 1);\n\n\treturn [r * 255, g * 255, b * 255];\n};\n\nconvert.xyz.lab = function (xyz) {\n\tvar x = xyz[0];\n\tvar y = xyz[1];\n\tvar z = xyz[2];\n\tvar l;\n\tvar a;\n\tvar b;\n\n\tx /= 95.047;\n\ty /= 100;\n\tz /= 108.883;\n\n\tx = x > 0.008856 ? Math.pow(x, 1 / 3) : (7.787 * x) + (16 / 116);\n\ty = y > 0.008856 ? Math.pow(y, 1 / 3) : (7.787 * y) + (16 / 116);\n\tz = z > 0.008856 ? Math.pow(z, 1 / 3) : (7.787 * z) + (16 / 116);\n\n\tl = (116 * y) - 16;\n\ta = 500 * (x - y);\n\tb = 200 * (y - z);\n\n\treturn [l, a, b];\n};\n\nconvert.lab.xyz = function (lab) {\n\tvar l = lab[0];\n\tvar a = lab[1];\n\tvar b = lab[2];\n\tvar x;\n\tvar y;\n\tvar z;\n\n\ty = (l + 16) / 116;\n\tx = a / 500 + y;\n\tz = y - b / 200;\n\n\tvar y2 = Math.pow(y, 3);\n\tvar x2 = Math.pow(x, 3);\n\tvar z2 = Math.pow(z, 3);\n\ty = y2 > 0.008856 ? y2 : (y - 16 / 116) / 7.787;\n\tx = x2 > 0.008856 ? x2 : (x - 16 / 116) / 7.787;\n\tz = z2 > 0.008856 ? z2 : (z - 16 / 116) / 7.787;\n\n\tx *= 95.047;\n\ty *= 100;\n\tz *= 108.883;\n\n\treturn [x, y, z];\n};\n\nconvert.lab.lch = function (lab) {\n\tvar l = lab[0];\n\tvar a = lab[1];\n\tvar b = lab[2];\n\tvar hr;\n\tvar h;\n\tvar c;\n\n\thr = Math.atan2(b, a);\n\th = hr * 360 / 2 / Math.PI;\n\n\tif (h < 0) {\n\t\th += 360;\n\t}\n\n\tc = Math.sqrt(a * a + b * b);\n\n\treturn [l, c, h];\n};\n\nconvert.lch.lab = function (lch) {\n\tvar l = lch[0];\n\tvar c = lch[1];\n\tvar h = lch[2];\n\tvar a;\n\tvar b;\n\tvar hr;\n\n\thr = h / 360 * 2 * Math.PI;\n\ta = c * Math.cos(hr);\n\tb = c * Math.sin(hr);\n\n\treturn [l, a, b];\n};\n\nconvert.rgb.ansi16 = function (args) {\n\tvar r = args[0];\n\tvar g = args[1];\n\tvar b = args[2];\n\tvar value = 1 in arguments ? arguments[1] : convert.rgb.hsv(args)[2]; // hsv -> ansi16 optimization\n\n\tvalue = Math.round(value / 50);\n\n\tif (value === 0) {\n\t\treturn 30;\n\t}\n\n\tvar ansi = 30\n\t\t+ ((Math.round(b / 255) << 2)\n\t\t| (Math.round(g / 255) << 1)\n\t\t| Math.round(r / 255));\n\n\tif (value === 2) {\n\t\tansi += 60;\n\t}\n\n\treturn ansi;\n};\n\nconvert.hsv.ansi16 = function (args) {\n\t// optimization here; we already know the value and don't need to get\n\t// it converted for us.\n\treturn convert.rgb.ansi16(convert.hsv.rgb(args), args[2]);\n};\n\nconvert.rgb.ansi256 = function (args) {\n\tvar r = args[0];\n\tvar g = args[1];\n\tvar b = args[2];\n\n\t// we use the extended greyscale palette here, with the exception of\n\t// black and white. normal palette only has 4 greyscale shades.\n\tif (r === g && g === b) {\n\t\tif (r < 8) {\n\t\t\treturn 16;\n\t\t}\n\n\t\tif (r > 248) {\n\t\t\treturn 231;\n\t\t}\n\n\t\treturn Math.round(((r - 8) / 247) * 24) + 232;\n\t}\n\n\tvar ansi = 16\n\t\t+ (36 * Math.round(r / 255 * 5))\n\t\t+ (6 * Math.round(g / 255 * 5))\n\t\t+ Math.round(b / 255 * 5);\n\n\treturn ansi;\n};\n\nconvert.ansi16.rgb = function (args) {\n\tvar color = args % 10;\n\n\t// handle greyscale\n\tif (color === 0 || color === 7) {\n\t\tif (args > 50) {\n\t\t\tcolor += 3.5;\n\t\t}\n\n\t\tcolor = color / 10.5 * 255;\n\n\t\treturn [color, color, color];\n\t}\n\n\tvar mult = (~~(args > 50) + 1) * 0.5;\n\tvar r = ((color & 1) * mult) * 255;\n\tvar g = (((color >> 1) & 1) * mult) * 255;\n\tvar b = (((color >> 2) & 1) * mult) * 255;\n\n\treturn [r, g, b];\n};\n\nconvert.ansi256.rgb = function (args) {\n\t// handle greyscale\n\tif (args >= 232) {\n\t\tvar c = (args - 232) * 10 + 8;\n\t\treturn [c, c, c];\n\t}\n\n\targs -= 16;\n\n\tvar rem;\n\tvar r = Math.floor(args / 36) / 5 * 255;\n\tvar g = Math.floor((rem = args % 36) / 6) / 5 * 255;\n\tvar b = (rem % 6) / 5 * 255;\n\n\treturn [r, g, b];\n};\n\nconvert.rgb.hex = function (args) {\n\tvar integer = ((Math.round(args[0]) & 0xFF) << 16)\n\t\t+ ((Math.round(args[1]) & 0xFF) << 8)\n\t\t+ (Math.round(args[2]) & 0xFF);\n\n\tvar string = integer.toString(16).toUpperCase();\n\treturn '000000'.substring(string.length) + string;\n};\n\nconvert.hex.rgb = function (args) {\n\tvar match = args.toString(16).match(/[a-f0-9]{6}|[a-f0-9]{3}/i);\n\tif (!match) {\n\t\treturn [0, 0, 0];\n\t}\n\n\tvar colorString = match[0];\n\n\tif (match[0].length === 3) {\n\t\tcolorString = colorString.split('').map(function (char) {\n\t\t\treturn char + char;\n\t\t}).join('');\n\t}\n\n\tvar integer = parseInt(colorString, 16);\n\tvar r = (integer >> 16) & 0xFF;\n\tvar g = (integer >> 8) & 0xFF;\n\tvar b = integer & 0xFF;\n\n\treturn [r, g, b];\n};\n\nconvert.rgb.hcg = function (rgb) {\n\tvar r = rgb[0] / 255;\n\tvar g = rgb[1] / 255;\n\tvar b = rgb[2] / 255;\n\tvar max = Math.max(Math.max(r, g), b);\n\tvar min = Math.min(Math.min(r, g), b);\n\tvar chroma = (max - min);\n\tvar grayscale;\n\tvar hue;\n\n\tif (chroma < 1) {\n\t\tgrayscale = min / (1 - chroma);\n\t} else {\n\t\tgrayscale = 0;\n\t}\n\n\tif (chroma <= 0) {\n\t\thue = 0;\n\t} else\n\tif (max === r) {\n\t\thue = ((g - b) / chroma) % 6;\n\t} else\n\tif (max === g) {\n\t\thue = 2 + (b - r) / chroma;\n\t} else {\n\t\thue = 4 + (r - g) / chroma + 4;\n\t}\n\n\thue /= 6;\n\thue %= 1;\n\n\treturn [hue * 360, chroma * 100, grayscale * 100];\n};\n\nconvert.hsl.hcg = function (hsl) {\n\tvar s = hsl[1] / 100;\n\tvar l = hsl[2] / 100;\n\tvar c = 1;\n\tvar f = 0;\n\n\tif (l < 0.5) {\n\t\tc = 2.0 * s * l;\n\t} else {\n\t\tc = 2.0 * s * (1.0 - l);\n\t}\n\n\tif (c < 1.0) {\n\t\tf = (l - 0.5 * c) / (1.0 - c);\n\t}\n\n\treturn [hsl[0], c * 100, f * 100];\n};\n\nconvert.hsv.hcg = function (hsv) {\n\tvar s = hsv[1] / 100;\n\tvar v = hsv[2] / 100;\n\n\tvar c = s * v;\n\tvar f = 0;\n\n\tif (c < 1.0) {\n\t\tf = (v - c) / (1 - c);\n\t}\n\n\treturn [hsv[0], c * 100, f * 100];\n};\n\nconvert.hcg.rgb = function (hcg) {\n\tvar h = hcg[0] / 360;\n\tvar c = hcg[1] / 100;\n\tvar g = hcg[2] / 100;\n\n\tif (c === 0.0) {\n\t\treturn [g * 255, g * 255, g * 255];\n\t}\n\n\tvar pure = [0, 0, 0];\n\tvar hi = (h % 1) * 6;\n\tvar v = hi % 1;\n\tvar w = 1 - v;\n\tvar mg = 0;\n\n\tswitch (Math.floor(hi)) {\n\t\tcase 0:\n\t\t\tpure[0] = 1; pure[1] = v; pure[2] = 0; break;\n\t\tcase 1:\n\t\t\tpure[0] = w; pure[1] = 1; pure[2] = 0; break;\n\t\tcase 2:\n\t\t\tpure[0] = 0; pure[1] = 1; pure[2] = v; break;\n\t\tcase 3:\n\t\t\tpure[0] = 0; pure[1] = w; pure[2] = 1; break;\n\t\tcase 4:\n\t\t\tpure[0] = v; pure[1] = 0; pure[2] = 1; break;\n\t\tdefault:\n\t\t\tpure[0] = 1; pure[1] = 0; pure[2] = w;\n\t}\n\n\tmg = (1.0 - c) * g;\n\n\treturn [\n\t\t(c * pure[0] + mg) * 255,\n\t\t(c * pure[1] + mg) * 255,\n\t\t(c * pure[2] + mg) * 255\n\t];\n};\n\nconvert.hcg.hsv = function (hcg) {\n\tvar c = hcg[1] / 100;\n\tvar g = hcg[2] / 100;\n\n\tvar v = c + g * (1.0 - c);\n\tvar f = 0;\n\n\tif (v > 0.0) {\n\t\tf = c / v;\n\t}\n\n\treturn [hcg[0], f * 100, v * 100];\n};\n\nconvert.hcg.hsl = function (hcg) {\n\tvar c = hcg[1] / 100;\n\tvar g = hcg[2] / 100;\n\n\tvar l = g * (1.0 - c) + 0.5 * c;\n\tvar s = 0;\n\n\tif (l > 0.0 && l < 0.5) {\n\t\ts = c / (2 * l);\n\t} else\n\tif (l >= 0.5 && l < 1.0) {\n\t\ts = c / (2 * (1 - l));\n\t}\n\n\treturn [hcg[0], s * 100, l * 100];\n};\n\nconvert.hcg.hwb = function (hcg) {\n\tvar c = hcg[1] / 100;\n\tvar g = hcg[2] / 100;\n\tvar v = c + g * (1.0 - c);\n\treturn [hcg[0], (v - c) * 100, (1 - v) * 100];\n};\n\nconvert.hwb.hcg = function (hwb) {\n\tvar w = hwb[1] / 100;\n\tvar b = hwb[2] / 100;\n\tvar v = 1 - b;\n\tvar c = v - w;\n\tvar g = 0;\n\n\tif (c < 1) {\n\t\tg = (v - c) / (1 - c);\n\t}\n\n\treturn [hwb[0], c * 100, g * 100];\n};\n\nconvert.apple.rgb = function (apple) {\n\treturn [(apple[0] / 65535) * 255, (apple[1] / 65535) * 255, (apple[2] / 65535) * 255];\n};\n\nconvert.rgb.apple = function (rgb) {\n\treturn [(rgb[0] / 255) * 65535, (rgb[1] / 255) * 65535, (rgb[2] / 255) * 65535];\n};\n\nconvert.gray.rgb = function (args) {\n\treturn [args[0] / 100 * 255, args[0] / 100 * 255, args[0] / 100 * 255];\n};\n\nconvert.gray.hsl = convert.gray.hsv = function (args) {\n\treturn [0, 0, args[0]];\n};\n\nconvert.gray.hwb = function (gray) {\n\treturn [0, 100, gray[0]];\n};\n\nconvert.gray.cmyk = function (gray) {\n\treturn [0, 0, 0, gray[0]];\n};\n\nconvert.gray.lab = function (gray) {\n\treturn [gray[0], 0, 0];\n};\n\nconvert.gray.hex = function (gray) {\n\tvar val = Math.round(gray[0] / 100 * 255) & 0xFF;\n\tvar integer = (val << 16) + (val << 8) + val;\n\n\tvar string = integer.toString(16).toUpperCase();\n\treturn '000000'.substring(string.length) + string;\n};\n\nconvert.rgb.gray = function (rgb) {\n\tvar val = (rgb[0] + rgb[1] + rgb[2]) / 3;\n\treturn [val / 255 * 100];\n};\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = populatePlaceholders;\n\nvar t = _interopRequireWildcard(require(\"@babel/types\"));\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction populatePlaceholders(metadata, replacements) {\n  const ast = t.cloneNode(metadata.ast);\n\n  if (replacements) {\n    metadata.placeholders.forEach(placeholder => {\n      if (!Object.prototype.hasOwnProperty.call(replacements, placeholder.name)) {\n        const placeholderName = placeholder.name;\n        throw new Error(`Error: No substitution given for \"${placeholderName}\". If this is not meant to be a\n            placeholder you may want to consider passing one of the following options to @babel/template:\n            - { placeholderPattern: false, placeholderWhitelist: new Set(['${placeholderName}'])}\n            - { placeholderPattern: /^${placeholderName}$/ }`);\n      }\n    });\n    Object.keys(replacements).forEach(key => {\n      if (!metadata.placeholderNames.has(key)) {\n        throw new Error(`Unknown substitution \"${key}\" given`);\n      }\n    });\n  }\n\n  metadata.placeholders.slice().reverse().forEach(placeholder => {\n    try {\n      applyReplacement(placeholder, ast, replacements && replacements[placeholder.name] || null);\n    } catch (e) {\n      e.message = `@babel/template placeholder \"${placeholder.name}\": ${e.message}`;\n      throw e;\n    }\n  });\n  return ast;\n}\n\nfunction applyReplacement(placeholder, ast, replacement) {\n  if (placeholder.isDuplicate) {\n    if (Array.isArray(replacement)) {\n      replacement = replacement.map(node => t.cloneNode(node));\n    } else if (typeof replacement === \"object\") {\n      replacement = t.cloneNode(replacement);\n    }\n  }\n\n  const {\n    parent,\n    key,\n    index\n  } = placeholder.resolve(ast);\n\n  if (placeholder.type === \"string\") {\n    if (typeof replacement === \"string\") {\n      replacement = t.stringLiteral(replacement);\n    }\n\n    if (!replacement || !t.isStringLiteral(replacement)) {\n      throw new Error(\"Expected string substitution\");\n    }\n  } else if (placeholder.type === \"statement\") {\n    if (index === undefined) {\n      if (!replacement) {\n        replacement = t.emptyStatement();\n      } else if (Array.isArray(replacement)) {\n        replacement = t.blockStatement(replacement);\n      } else if (typeof replacement === \"string\") {\n        replacement = t.expressionStatement(t.identifier(replacement));\n      } else if (!t.isStatement(replacement)) {\n        replacement = t.expressionStatement(replacement);\n      }\n    } else {\n      if (replacement && !Array.isArray(replacement)) {\n        if (typeof replacement === \"string\") {\n          replacement = t.identifier(replacement);\n        }\n\n        if (!t.isStatement(replacement)) {\n          replacement = t.expressionStatement(replacement);\n        }\n      }\n    }\n  } else if (placeholder.type === \"param\") {\n    if (typeof replacement === \"string\") {\n      replacement = t.identifier(replacement);\n    }\n\n    if (index === undefined) throw new Error(\"Assertion failure.\");\n  } else {\n    if (typeof replacement === \"string\") {\n      replacement = t.identifier(replacement);\n    }\n\n    if (Array.isArray(replacement)) {\n      throw new Error(\"Cannot replace single expression with an array.\");\n    }\n  }\n\n  if (index === undefined) {\n    t.validate(parent, key, replacement);\n    parent[key] = replacement;\n  } else {\n    const items = parent[key].slice();\n\n    if (placeholder.type === \"statement\" || placeholder.type === \"param\") {\n      if (replacement == null) {\n        items.splice(index, 1);\n      } else if (Array.isArray(replacement)) {\n        items.splice(index, 1, ...replacement);\n      } else {\n        items[index] = replacement;\n      }\n    } else {\n      items[index] = replacement;\n    }\n\n    t.validate(parent, key, items);\n    parent[key] = items;\n  }\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _helperPluginUtils = require(\"@babel/helper-plugin-utils\");\n\nvar _helperAnnotateAsPure = _interopRequireDefault(require(\"@babel/helper-annotate-as-pure\"));\n\nvar _helperFunctionName = _interopRequireDefault(require(\"@babel/helper-function-name\"));\n\nvar _helperSplitExportDeclaration = _interopRequireDefault(require(\"@babel/helper-split-export-declaration\"));\n\nvar _core = require(\"@babel/core\");\n\nvar _globals = _interopRequireDefault(require(\"globals\"));\n\nvar _transformClass = _interopRequireDefault(require(\"./transformClass\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst getBuiltinClasses = category => Object.keys(_globals.default[category]).filter(name => /^[A-Z]/.test(name));\n\nconst builtinClasses = new Set([...getBuiltinClasses(\"builtin\"), ...getBuiltinClasses(\"browser\")]);\n\nvar _default = (0, _helperPluginUtils.declare)((api, options) => {\n  api.assertVersion(7);\n  const {\n    loose\n  } = options;\n  const VISITED = Symbol();\n  return {\n    name: \"transform-classes\",\n    visitor: {\n      ExportDefaultDeclaration(path) {\n        if (!path.get(\"declaration\").isClassDeclaration()) return;\n        (0, _helperSplitExportDeclaration.default)(path);\n      },\n\n      ClassDeclaration(path) {\n        const {\n          node\n        } = path;\n        const ref = node.id || path.scope.generateUidIdentifier(\"class\");\n        path.replaceWith(_core.types.variableDeclaration(\"let\", [_core.types.variableDeclarator(ref, _core.types.toExpression(node))]));\n      },\n\n      ClassExpression(path, state) {\n        const {\n          node\n        } = path;\n        if (node[VISITED]) return;\n        const inferred = (0, _helperFunctionName.default)(path);\n\n        if (inferred && inferred !== node) {\n          path.replaceWith(inferred);\n          return;\n        }\n\n        node[VISITED] = true;\n        path.replaceWith((0, _transformClass.default)(path, state.file, builtinClasses, loose));\n\n        if (path.isCallExpression()) {\n          (0, _helperAnnotateAsPure.default)(path);\n\n          if (path.get(\"callee\").isArrowFunctionExpression()) {\n            path.get(\"callee\").arrowFunctionToExpression();\n          }\n        }\n      }\n\n    }\n  };\n});\n\nexports.default = _default;"],"sourceRoot":""}